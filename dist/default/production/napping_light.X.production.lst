

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 14 14:46:01 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text98,global,reloc=2,class=CODE,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   117                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   119                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   120  0000                     
   121                           ; Version 1.45
   122                           ; Generated 16/11/2017 GMT
   123                           ; 
   124                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   125                           ; All rights reserved.
   126                           ; 
   127                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   128                           ; 
   129                           ; Redistribution and use in source and binary forms, with or without modification, are
   130                           ; permitted provided that the following conditions are met:
   131                           ; 
   132                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   133                           ;        conditions and the following disclaimer.
   134                           ; 
   135                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   136                           ;        of conditions and the following disclaimer in the documentation and/or other
   137                           ;        materials provided with the distribution.
   138                           ; 
   139                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   140                           ;        software without specific prior written permission.
   141                           ; 
   142                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   143                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   144                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   145                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   146                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   147                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   148                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   149                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   150                           ; 
   151                           ; 
   152                           ; Code-generator required, PIC18F46K80 Definitions
   153                           ; 
   154                           ; SFR Addresses
   155  0000                     
   156                           	psect	idataCOMRAM
   157  0032D8                     __pidataCOMRAM:
   158                           	opt stack 0
   159                           
   160                           ;initializer for _valuesXStart
   161  0032D8  50                 	db	80
   162                           
   163                           	psect	idataBANK0
   164  003214                     __pidataBANK0:
   165                           	opt stack 0
   166                           
   167                           ;initializer for _blueStart
   168  003214  00                 	db	0
   169  003215  33                 	db	51
   170  003216  43                 	db	67
   171                           
   172                           ;initializer for _greenStart
   173  003217  00                 	db	0
   174  003218  C8                 	db	200
   175  003219  42                 	db	66
   176                           
   177                           ;initializer for _redStart
   178  00321A  00                 	db	0
   179  00321B  7A                 	db	122
   180  00321C  43                 	db	67
   181                           
   182                           ;initializer for _appliedBrightness
   183  00321D  00                 	db	0
   184  00321E  00                 	db	0
   185  00321F  44                 	db	68
   186                           
   187                           ;initializer for _brightnessPercent
   188  003220  00                 	db	0
   189  003221  04                 	db	4
   190  003222  42                 	db	66
   191                           
   192                           ;initializer for _maxBrightness
   193  003223  03FF               	dw	1023
   194                           
   195                           ;initializer for _xMenuStart
   196  003225  04                 	db	4
   197                           
   198                           ;initializer for _ARROW_SIZE
   199  003226  04                 	db	4
   200                           
   201                           ;initializer for _timeAfterFinishX
   202  003227  41                 	db	65
   203                           
   204                           ;initializer for _runTimeX
   205  003228  0A                 	db	10
   206                           
   207                           ;initializer for _subMenuY
   208  003229  03                 	db	3
   209                           
   210                           	psect	mediumconst
   211  00FD56                     __pmediumconst:
   212                           	opt stack 0
   213  00FD56  00                 	db	0
   214  00FD57                     _font5x8:
   215                           	opt stack 0
   216  00FD57  00                 	db	0
   217  00FD58  00                 	db	0
   218  00FD59  00                 	db	0
   219  00FD5A  00                 	db	0
   220  00FD5B  00                 	db	0
   221  00FD5C  00                 	db	0
   222  00FD5D  00                 	db	0
   223  00FD5E  5F                 	db	95
   224  00FD5F  00                 	db	0
   225  00FD60  00                 	db	0
   226  00FD61  00                 	db	0
   227  00FD62  07                 	db	7
   228  00FD63  00                 	db	0
   229  00FD64  07                 	db	7
   230  00FD65  00                 	db	0
   231  00FD66  14                 	db	20
   232  00FD67  7F                 	db	127
   233  00FD68  14                 	db	20
   234  00FD69  7F                 	db	127
   235  00FD6A  14                 	db	20
   236  00FD6B  24                 	db	36
   237  00FD6C  2A                 	db	42
   238  00FD6D  7F                 	db	127
   239  00FD6E  2A                 	db	42
   240  00FD6F  12                 	db	18
   241  00FD70  23                 	db	35
   242  00FD71  13                 	db	19
   243  00FD72  08                 	db	8
   244  00FD73  64                 	db	100
   245  00FD74  62                 	db	98
   246  00FD75  36                 	db	54
   247  00FD76  49                 	db	73
   248  00FD77  55                 	db	85
   249  00FD78  22                 	db	34
   250  00FD79  50                 	db	80
   251  00FD7A  00                 	db	0
   252  00FD7B  05                 	db	5
   253  00FD7C  03                 	db	3
   254  00FD7D  00                 	db	0
   255  00FD7E  00                 	db	0
   256  00FD7F  00                 	db	0
   257  00FD80  1C                 	db	28
   258  00FD81  22                 	db	34
   259  00FD82  41                 	db	65
   260  00FD83  00                 	db	0
   261  00FD84  00                 	db	0
   262  00FD85  41                 	db	65
   263  00FD86  22                 	db	34
   264  00FD87  1C                 	db	28
   265  00FD88  00                 	db	0
   266  00FD89  08                 	db	8
   267  00FD8A  2A                 	db	42
   268  00FD8B  1C                 	db	28
   269  00FD8C  2A                 	db	42
   270  00FD8D  08                 	db	8
   271  00FD8E  08                 	db	8
   272  00FD8F  08                 	db	8
   273  00FD90  3E                 	db	62
   274  00FD91  08                 	db	8
   275  00FD92  08                 	db	8
   276  00FD93  00                 	db	0
   277  00FD94  50                 	db	80
   278  00FD95  30                 	db	48
   279  00FD96  00                 	db	0
   280  00FD97  00                 	db	0
   281  00FD98  08                 	db	8
   282  00FD99  08                 	db	8
   283  00FD9A  08                 	db	8
   284  00FD9B  08                 	db	8
   285  00FD9C  08                 	db	8
   286  00FD9D  00                 	db	0
   287  00FD9E  30                 	db	48
   288  00FD9F  30                 	db	48
   289  00FDA0  00                 	db	0
   290  00FDA1  00                 	db	0
   291  00FDA2  20                 	db	32
   292  00FDA3  10                 	db	16
   293  00FDA4  08                 	db	8
   294  00FDA5  04                 	db	4
   295  00FDA6  02                 	db	2
   296  00FDA7  3E                 	db	62
   297  00FDA8  51                 	db	81
   298  00FDA9  49                 	db	73
   299  00FDAA  45                 	db	69
   300  00FDAB  3E                 	db	62
   301  00FDAC  00                 	db	0
   302  00FDAD  42                 	db	66
   303  00FDAE  7F                 	db	127
   304  00FDAF  40                 	db	64
   305  00FDB0  00                 	db	0
   306  00FDB1  42                 	db	66
   307  00FDB2  61                 	db	97
   308  00FDB3  51                 	db	81
   309  00FDB4  49                 	db	73
   310  00FDB5  46                 	db	70
   311  00FDB6  21                 	db	33
   312  00FDB7  41                 	db	65
   313  00FDB8  45                 	db	69
   314  00FDB9  4B                 	db	75
   315  00FDBA  31                 	db	49
   316  00FDBB  18                 	db	24
   317  00FDBC  14                 	db	20
   318  00FDBD  12                 	db	18
   319  00FDBE  7F                 	db	127
   320  00FDBF  10                 	db	16
   321  00FDC0  27                 	db	39
   322  00FDC1  45                 	db	69
   323  00FDC2  45                 	db	69
   324  00FDC3  45                 	db	69
   325  00FDC4  39                 	db	57
   326  00FDC5  3C                 	db	60
   327  00FDC6  4A                 	db	74
   328  00FDC7  49                 	db	73
   329  00FDC8  49                 	db	73
   330  00FDC9  30                 	db	48
   331  00FDCA  01                 	db	1
   332  00FDCB  71                 	db	113
   333  00FDCC  09                 	db	9
   334  00FDCD  05                 	db	5
   335  00FDCE  03                 	db	3
   336  00FDCF  36                 	db	54
   337  00FDD0  49                 	db	73
   338  00FDD1  49                 	db	73
   339  00FDD2  49                 	db	73
   340  00FDD3  36                 	db	54
   341  00FDD4  06                 	db	6
   342  00FDD5  49                 	db	73
   343  00FDD6  49                 	db	73
   344  00FDD7  29                 	db	41
   345  00FDD8  1E                 	db	30
   346  00FDD9  00                 	db	0
   347  00FDDA  36                 	db	54
   348  00FDDB  36                 	db	54
   349  00FDDC  00                 	db	0
   350  00FDDD  00                 	db	0
   351  00FDDE  00                 	db	0
   352  00FDDF  56                 	db	86
   353  00FDE0  36                 	db	54
   354  00FDE1  00                 	db	0
   355  00FDE2  00                 	db	0
   356  00FDE3  00                 	db	0
   357  00FDE4  08                 	db	8
   358  00FDE5  14                 	db	20
   359  00FDE6  22                 	db	34
   360  00FDE7  41                 	db	65
   361  00FDE8  14                 	db	20
   362  00FDE9  14                 	db	20
   363  00FDEA  14                 	db	20
   364  00FDEB  14                 	db	20
   365  00FDEC  14                 	db	20
   366  00FDED  41                 	db	65
   367  00FDEE  22                 	db	34
   368  00FDEF  14                 	db	20
   369  00FDF0  08                 	db	8
   370  00FDF1  00                 	db	0
   371  00FDF2  02                 	db	2
   372  00FDF3  01                 	db	1
   373  00FDF4  51                 	db	81
   374  00FDF5  09                 	db	9
   375  00FDF6  06                 	db	6
   376  00FDF7  32                 	db	50
   377  00FDF8  49                 	db	73
   378  00FDF9  79                 	db	121
   379  00FDFA  41                 	db	65
   380  00FDFB  3E                 	db	62
   381  00FDFC  7E                 	db	126
   382  00FDFD  11                 	db	17
   383  00FDFE  11                 	db	17
   384  00FDFF  11                 	db	17
   385  00FE00  7E                 	db	126
   386  00FE01  7F                 	db	127
   387  00FE02  49                 	db	73
   388  00FE03  49                 	db	73
   389  00FE04  49                 	db	73
   390  00FE05  36                 	db	54
   391  00FE06  3E                 	db	62
   392  00FE07  41                 	db	65
   393  00FE08  41                 	db	65
   394  00FE09  41                 	db	65
   395  00FE0A  22                 	db	34
   396  00FE0B  7F                 	db	127
   397  00FE0C  41                 	db	65
   398  00FE0D  41                 	db	65
   399  00FE0E  22                 	db	34
   400  00FE0F  1C                 	db	28
   401  00FE10  7F                 	db	127
   402  00FE11  49                 	db	73
   403  00FE12  49                 	db	73
   404  00FE13  49                 	db	73
   405  00FE14  41                 	db	65
   406  00FE15  7F                 	db	127
   407  00FE16  09                 	db	9
   408  00FE17  09                 	db	9
   409  00FE18  01                 	db	1
   410  00FE19  01                 	db	1
   411  00FE1A  3E                 	db	62
   412  00FE1B  41                 	db	65
   413  00FE1C  41                 	db	65
   414  00FE1D  51                 	db	81
   415  00FE1E  32                 	db	50
   416  00FE1F  7F                 	db	127
   417  00FE20  08                 	db	8
   418  00FE21  08                 	db	8
   419  00FE22  08                 	db	8
   420  00FE23  7F                 	db	127
   421  00FE24  00                 	db	0
   422  00FE25  41                 	db	65
   423  00FE26  7F                 	db	127
   424  00FE27  41                 	db	65
   425  00FE28  00                 	db	0
   426  00FE29  20                 	db	32
   427  00FE2A  40                 	db	64
   428  00FE2B  41                 	db	65
   429  00FE2C  3F                 	db	63
   430  00FE2D  01                 	db	1
   431  00FE2E  7F                 	db	127
   432  00FE2F  08                 	db	8
   433  00FE30  14                 	db	20
   434  00FE31  22                 	db	34
   435  00FE32  41                 	db	65
   436  00FE33  7F                 	db	127
   437  00FE34  40                 	db	64
   438  00FE35  40                 	db	64
   439  00FE36  40                 	db	64
   440  00FE37  40                 	db	64
   441  00FE38  7F                 	db	127
   442  00FE39  02                 	db	2
   443  00FE3A  04                 	db	4
   444  00FE3B  02                 	db	2
   445  00FE3C  7F                 	db	127
   446  00FE3D  7F                 	db	127
   447  00FE3E  04                 	db	4
   448  00FE3F  08                 	db	8
   449  00FE40  10                 	db	16
   450  00FE41  7F                 	db	127
   451  00FE42  3E                 	db	62
   452  00FE43  41                 	db	65
   453  00FE44  41                 	db	65
   454  00FE45  41                 	db	65
   455  00FE46  3E                 	db	62
   456  00FE47  7F                 	db	127
   457  00FE48  09                 	db	9
   458  00FE49  09                 	db	9
   459  00FE4A  09                 	db	9
   460  00FE4B  06                 	db	6
   461  00FE4C  3E                 	db	62
   462  00FE4D  41                 	db	65
   463  00FE4E  51                 	db	81
   464  00FE4F  21                 	db	33
   465  00FE50  5E                 	db	94
   466  00FE51  7F                 	db	127
   467  00FE52  09                 	db	9
   468  00FE53  19                 	db	25
   469  00FE54  29                 	db	41
   470  00FE55  46                 	db	70
   471  00FE56  46                 	db	70
   472  00FE57  49                 	db	73
   473  00FE58  49                 	db	73
   474  00FE59  49                 	db	73
   475  00FE5A  31                 	db	49
   476  00FE5B  01                 	db	1
   477  00FE5C  01                 	db	1
   478  00FE5D  7F                 	db	127
   479  00FE5E  01                 	db	1
   480  00FE5F  01                 	db	1
   481  00FE60  3F                 	db	63
   482  00FE61  40                 	db	64
   483  00FE62  40                 	db	64
   484  00FE63  40                 	db	64
   485  00FE64  3F                 	db	63
   486  00FE65  1F                 	db	31
   487  00FE66  20                 	db	32
   488  00FE67  40                 	db	64
   489  00FE68  20                 	db	32
   490  00FE69  1F                 	db	31
   491  00FE6A  7F                 	db	127
   492  00FE6B  20                 	db	32
   493  00FE6C  18                 	db	24
   494  00FE6D  20                 	db	32
   495  00FE6E  7F                 	db	127
   496  00FE6F  63                 	db	99
   497  00FE70  14                 	db	20
   498  00FE71  08                 	db	8
   499  00FE72  14                 	db	20
   500  00FE73  63                 	db	99
   501  00FE74  03                 	db	3
   502  00FE75  04                 	db	4
   503  00FE76  78                 	db	120
   504  00FE77  04                 	db	4
   505  00FE78  03                 	db	3
   506  00FE79  61                 	db	97
   507  00FE7A  51                 	db	81
   508  00FE7B  49                 	db	73
   509  00FE7C  45                 	db	69
   510  00FE7D  43                 	db	67
   511  00FE7E  00                 	db	0
   512  00FE7F  00                 	db	0
   513  00FE80  7F                 	db	127
   514  00FE81  41                 	db	65
   515  00FE82  41                 	db	65
   516  00FE83  02                 	db	2
   517  00FE84  04                 	db	4
   518  00FE85  08                 	db	8
   519  00FE86  10                 	db	16
   520  00FE87  20                 	db	32
   521  00FE88  41                 	db	65
   522  00FE89  41                 	db	65
   523  00FE8A  7F                 	db	127
   524  00FE8B  00                 	db	0
   525  00FE8C  00                 	db	0
   526  00FE8D  04                 	db	4
   527  00FE8E  02                 	db	2
   528  00FE8F  01                 	db	1
   529  00FE90  02                 	db	2
   530  00FE91  04                 	db	4
   531  00FE92  40                 	db	64
   532  00FE93  40                 	db	64
   533  00FE94  40                 	db	64
   534  00FE95  40                 	db	64
   535  00FE96  40                 	db	64
   536  00FE97  00                 	db	0
   537  00FE98  01                 	db	1
   538  00FE99  02                 	db	2
   539  00FE9A  04                 	db	4
   540  00FE9B  00                 	db	0
   541  00FE9C  20                 	db	32
   542  00FE9D  54                 	db	84
   543  00FE9E  54                 	db	84
   544  00FE9F  54                 	db	84
   545  00FEA0  78                 	db	120
   546  00FEA1  7F                 	db	127
   547  00FEA2  48                 	db	72
   548  00FEA3  44                 	db	68
   549  00FEA4  44                 	db	68
   550  00FEA5  38                 	db	56
   551  00FEA6  38                 	db	56
   552  00FEA7  44                 	db	68
   553  00FEA8  44                 	db	68
   554  00FEA9  44                 	db	68
   555  00FEAA  20                 	db	32
   556  00FEAB  38                 	db	56
   557  00FEAC  44                 	db	68
   558  00FEAD  44                 	db	68
   559  00FEAE  48                 	db	72
   560  00FEAF  7F                 	db	127
   561  00FEB0  38                 	db	56
   562  00FEB1  54                 	db	84
   563  00FEB2  54                 	db	84
   564  00FEB3  54                 	db	84
   565  00FEB4  18                 	db	24
   566  00FEB5  08                 	db	8
   567  00FEB6  7E                 	db	126
   568  00FEB7  09                 	db	9
   569  00FEB8  01                 	db	1
   570  00FEB9  02                 	db	2
   571  00FEBA  08                 	db	8
   572  00FEBB  14                 	db	20
   573  00FEBC  54                 	db	84
   574  00FEBD  54                 	db	84
   575  00FEBE  3C                 	db	60
   576  00FEBF  7F                 	db	127
   577  00FEC0  08                 	db	8
   578  00FEC1  04                 	db	4
   579  00FEC2  04                 	db	4
   580  00FEC3  78                 	db	120
   581  00FEC4  00                 	db	0
   582  00FEC5  44                 	db	68
   583  00FEC6  7D                 	db	125
   584  00FEC7  40                 	db	64
   585  00FEC8  00                 	db	0
   586  00FEC9  20                 	db	32
   587  00FECA  40                 	db	64
   588  00FECB  44                 	db	68
   589  00FECC  3D                 	db	61
   590  00FECD  00                 	db	0
   591  00FECE  00                 	db	0
   592  00FECF  7F                 	db	127
   593  00FED0  10                 	db	16
   594  00FED1  28                 	db	40
   595  00FED2  44                 	db	68
   596  00FED3  00                 	db	0
   597  00FED4  41                 	db	65
   598  00FED5  7F                 	db	127
   599  00FED6  40                 	db	64
   600  00FED7  00                 	db	0
   601  00FED8  7C                 	db	124
   602  00FED9  04                 	db	4
   603  00FEDA  18                 	db	24
   604  00FEDB  04                 	db	4
   605  00FEDC  78                 	db	120
   606  00FEDD  7C                 	db	124
   607  00FEDE  08                 	db	8
   608  00FEDF  04                 	db	4
   609  00FEE0  04                 	db	4
   610  00FEE1  78                 	db	120
   611  00FEE2  38                 	db	56
   612  00FEE3  44                 	db	68
   613  00FEE4  44                 	db	68
   614  00FEE5  44                 	db	68
   615  00FEE6  38                 	db	56
   616  00FEE7  7C                 	db	124
   617  00FEE8  14                 	db	20
   618  00FEE9  14                 	db	20
   619  00FEEA  14                 	db	20
   620  00FEEB  08                 	db	8
   621  00FEEC  08                 	db	8
   622  00FEED  14                 	db	20
   623  00FEEE  14                 	db	20
   624  00FEEF  18                 	db	24
   625  00FEF0  7C                 	db	124
   626  00FEF1  7C                 	db	124
   627  00FEF2  08                 	db	8
   628  00FEF3  04                 	db	4
   629  00FEF4  04                 	db	4
   630  00FEF5  08                 	db	8
   631  00FEF6  48                 	db	72
   632  00FEF7  54                 	db	84
   633  00FEF8  54                 	db	84
   634  00FEF9  54                 	db	84
   635  00FEFA  20                 	db	32
   636  00FEFB  04                 	db	4
   637  00FEFC  3F                 	db	63
   638  00FEFD  44                 	db	68
   639  00FEFE  40                 	db	64
   640  00FEFF  20                 	db	32
   641  00FF00  3C                 	db	60
   642  00FF01  40                 	db	64
   643  00FF02  40                 	db	64
   644  00FF03  20                 	db	32
   645  00FF04  7C                 	db	124
   646  00FF05  1C                 	db	28
   647  00FF06  20                 	db	32
   648  00FF07  40                 	db	64
   649  00FF08  20                 	db	32
   650  00FF09  1C                 	db	28
   651  00FF0A  3C                 	db	60
   652  00FF0B  40                 	db	64
   653  00FF0C  30                 	db	48
   654  00FF0D  40                 	db	64
   655  00FF0E  3C                 	db	60
   656  00FF0F  44                 	db	68
   657  00FF10  28                 	db	40
   658  00FF11  10                 	db	16
   659  00FF12  28                 	db	40
   660  00FF13  44                 	db	68
   661  00FF14  0C                 	db	12
   662  00FF15  50                 	db	80
   663  00FF16  50                 	db	80
   664  00FF17  50                 	db	80
   665  00FF18  3C                 	db	60
   666  00FF19  44                 	db	68
   667  00FF1A  64                 	db	100
   668  00FF1B  54                 	db	84
   669  00FF1C  4C                 	db	76
   670  00FF1D  44                 	db	68
   671  00FF1E  00                 	db	0
   672  00FF1F  08                 	db	8
   673  00FF20  36                 	db	54
   674  00FF21  41                 	db	65
   675  00FF22  00                 	db	0
   676  00FF23  00                 	db	0
   677  00FF24  00                 	db	0
   678  00FF25  7F                 	db	127
   679  00FF26  00                 	db	0
   680  00FF27  00                 	db	0
   681  00FF28  00                 	db	0
   682  00FF29  41                 	db	65
   683  00FF2A  36                 	db	54
   684  00FF2B  08                 	db	8
   685  00FF2C  00                 	db	0
   686  00FF2D  08                 	db	8
   687  00FF2E  08                 	db	8
   688  00FF2F  2A                 	db	42
   689  00FF30  1C                 	db	28
   690  00FF31  08                 	db	8
   691  00FF32  08                 	db	8
   692  00FF33  1C                 	db	28
   693  00FF34  2A                 	db	42
   694  00FF35  08                 	db	8
   695  00FF36  08                 	db	8
   696  00FF37                     __end_of_font5x8:
   697                           	opt stack 0
   698  00FF37                     _color:
   699                           	opt stack 0
   700  00FF37  01                 	db	1
   701  00FF38                     __end_of_color:
   702                           	opt stack 0
   703  00FF38                     STR_26:
   704  00FF38  4C                 	db	76	;'L'
   705  00FF39  69                 	db	105	;'i'
   706  00FF3A  67                 	db	103	;'g'
   707  00FF3B  68                 	db	104	;'h'
   708  00FF3C  74                 	db	116	;'t'
   709  00FF3D  20                 	db	32
   710  00FF3E  42                 	db	66	;'B'
   711  00FF3F  72                 	db	114	;'r'
   712  00FF40  69                 	db	105	;'i'
   713  00FF41  67                 	db	103	;'g'
   714  00FF42  68                 	db	104	;'h'
   715  00FF43  74                 	db	116	;'t'
   716  00FF44  6E                 	db	110	;'n'
   717  00FF45  65                 	db	101	;'e'
   718  00FF46  73                 	db	115	;'s'
   719  00FF47  73                 	db	115	;'s'
   720  00FF48  00                 	db	0
   721  00FF49                     STR_23:
   722  00FF49  54                 	db	84	;'T'
   723  00FF4A  69                 	db	105	;'i'
   724  00FF4B  6D                 	db	109	;'m'
   725  00FF4C  65                 	db	101	;'e'
   726  00FF4D  20                 	db	32
   727  00FF4E  41                 	db	65	;'A'
   728  00FF4F  66                 	db	102	;'f'
   729  00FF50  74                 	db	116	;'t'
   730  00FF51  65                 	db	101	;'e'
   731  00FF52  72                 	db	114	;'r'
   732  00FF53  3A                 	db	58	;':'
   733  00FF54  20                 	db	32
   734  00FF55  00                 	db	0
   735  00FF56                     STR_27:
   736  00FF56  42                 	db	66	;'B'
   737  00FF57  72                 	db	114	;'r'
   738  00FF58  69                 	db	105	;'i'
   739  00FF59  67                 	db	103	;'g'
   740  00FF5A  68                 	db	104	;'h'
   741  00FF5B  74                 	db	116	;'t'
   742  00FF5C  6E                 	db	110	;'n'
   743  00FF5D  65                 	db	101	;'e'
   744  00FF5E  73                 	db	115	;'s'
   745  00FF5F  73                 	db	115	;'s'
   746  00FF60  3A                 	db	58	;':'
   747  00FF61  20                 	db	32
   748  00FF62  00                 	db	0
   749  00FF63                     STR_30:
   750  00FF63  53                 	db	83	;'S'
   751  00FF64  74                 	db	116	;'t'
   752  00FF65  61                 	db	97	;'a'
   753  00FF66  72                 	db	114	;'r'
   754  00FF67  74                 	db	116	;'t'
   755  00FF68  20                 	db	32
   756  00FF69  43                 	db	67	;'C'
   757  00FF6A  6F                 	db	111	;'o'
   758  00FF6B  6C                 	db	108	;'l'
   759  00FF6C  6F                 	db	111	;'o'
   760  00FF6D  72                 	db	114	;'r'
   761  00FF6E  73                 	db	115	;'s'
   762  00FF6F  00                 	db	0
   763  00FF70                     STR_21:
   764  00FF70  52                 	db	82	;'R'
   765  00FF71  75                 	db	117	;'u'
   766  00FF72  6E                 	db	110	;'n'
   767  00FF73  20                 	db	32
   768  00FF74  54                 	db	84	;'T'
   769  00FF75  69                 	db	105	;'i'
   770  00FF76  6D                 	db	109	;'m'
   771  00FF77  65                 	db	101	;'e'
   772  00FF78  3A                 	db	58	;':'
   773  00FF79  20                 	db	32
   774  00FF7A  00                 	db	0
   775  00FF7B                     STR_12:
   776  00FF7B  53                 	db	83	;'S'
   777  00FF7C  74                 	db	116	;'t'
   778  00FF7D  61                 	db	97	;'a'
   779  00FF7E  72                 	db	114	;'r'
   780  00FF7F  74                 	db	116	;'t'
   781  00FF80  43                 	db	67	;'C'
   782  00FF81  6F                 	db	111	;'o'
   783  00FF82  6C                 	db	108	;'l'
   784  00FF83  6F                 	db	111	;'o'
   785  00FF84  72                 	db	114	;'r'
   786  00FF85  00                 	db	0
   787  00FF86                     STR_20:
   788  00FF86  52                 	db	82	;'R'
   789  00FF87  75                 	db	117	;'u'
   790  00FF88  6E                 	db	110	;'n'
   791  00FF89  20                 	db	32
   792  00FF8A  54                 	db	84	;'T'
   793  00FF8B  69                 	db	105	;'i'
   794  00FF8C  6D                 	db	109	;'m'
   795  00FF8D  65                 	db	101	;'e'
   796  00FF8E  73                 	db	115	;'s'
   797  00FF8F  00                 	db	0
   798  00FF90                     STR_16:
   799  00FF90  42                 	db	66	;'B'
   800  00FF91  61                 	db	97	;'a'
   801  00FF92  63                 	db	99	;'c'
   802  00FF93  6B                 	db	107	;'k'
   803  00FF94  6C                 	db	108	;'l'
   804  00FF95  69                 	db	105	;'i'
   805  00FF96  67                 	db	103	;'g'
   806  00FF97  68                 	db	104	;'h'
   807  00FF98  74                 	db	116	;'t'
   808  00FF99  00                 	db	0
   809  00FF9A                     STR_6:
   810  00FF9A  4D                 	db	77	;'M'
   811  00FF9B  61                 	db	97	;'a'
   812  00FF9C  69                 	db	105	;'i'
   813  00FF9D  6E                 	db	110	;'n'
   814  00FF9E  20                 	db	32
   815  00FF9F  4D                 	db	77	;'M'
   816  00FFA0  65                 	db	101	;'e'
   817  00FFA1  6E                 	db	110	;'n'
   818  00FFA2  75                 	db	117	;'u'
   819  00FFA3  00                 	db	0
   820  00FFA4                     STR_18:
   821  00FFA4  53                 	db	83	;'S'
   822  00FFA5  65                 	db	101	;'e'
   823  00FFA6  6C                 	db	108	;'l'
   824  00FFA7  53                 	db	83	;'S'
   825  00FFA8  74                 	db	116	;'t'
   826  00FFA9  61                 	db	97	;'a'
   827  00FFAA  74                 	db	116	;'t'
   828  00FFAB  65                 	db	101	;'e'
   829  00FFAC  00                 	db	0
   830  00FFAD                     STR_14:
   831  00FFAD  45                 	db	69	;'E'
   832  00FFAE  6E                 	db	110	;'n'
   833  00FFAF  64                 	db	100	;'d'
   834  00FFB0  43                 	db	67	;'C'
   835  00FFB1  6F                 	db	111	;'o'
   836  00FFB2  6C                 	db	108	;'l'
   837  00FFB3  6F                 	db	111	;'o'
   838  00FFB4  72                 	db	114	;'r'
   839  00FFB5  00                 	db	0
   840  00FFB6                     STR_33:
   841  00FFB6  47                 	db	71	;'G'
   842  00FFB7  72                 	db	114	;'r'
   843  00FFB8  65                 	db	101	;'e'
   844  00FFB9  65                 	db	101	;'e'
   845  00FFBA  6E                 	db	110	;'n'
   846  00FFBB  3A                 	db	58	;':'
   847  00FFBC  20                 	db	32
   848  00FFBD  00                 	db	0
   849  00FFBE                     STR_8:
   850  00FFBE  52                 	db	82	;'R'
   851  00FFBF  75                 	db	117	;'u'
   852  00FFC0  6E                 	db	110	;'n'
   853  00FFC1  54                 	db	84	;'T'
   854  00FFC2  69                 	db	105	;'i'
   855  00FFC3  6D                 	db	109	;'m'
   856  00FFC4  65                 	db	101	;'e'
   857  00FFC5  00                 	db	0
   858  00FFC6                     STR_35:
   859  00FFC6  42                 	db	66	;'B'
   860  00FFC7  6C                 	db	108	;'l'
   861  00FFC8  75                 	db	117	;'u'
   862  00FFC9  65                 	db	101	;'e'
   863  00FFCA  3A                 	db	58	;':'
   864  00FFCB  20                 	db	32
   865  00FFCC  00                 	db	0
   866  00FFCD                     STR_7:
   867  00FFCD  56                 	db	86	;'V'
   868  00FFCE  61                 	db	97	;'a'
   869  00FFCF  6C                 	db	108	;'l'
   870  00FFD0  75                 	db	117	;'u'
   871  00FFD1  65                 	db	101	;'e'
   872  00FFD2  73                 	db	115	;'s'
   873  00FFD3  00                 	db	0
   874  00FFD4                     STR_1:
   875  00FFD4  6D                 	db	109	;'m'
   876  00FFD5  69                 	db	105	;'i'
   877  00FFD6  6E                 	db	110	;'n'
   878  00FFD7  20                 	db	32
   879  00FFD8  20                 	db	32
   880  00FFD9  20                 	db	32
   881  00FFDA  00                 	db	0
   882  00FFDB                     STR_31:
   883  00FFDB  52                 	db	82	;'R'
   884  00FFDC  65                 	db	101	;'e'
   885  00FFDD  64                 	db	100	;'d'
   886  00FFDE  3A                 	db	58	;':'
   887  00FFDF  20                 	db	32
   888  00FFE0  00                 	db	0
   889  00FFE1                     STR_25:
   890  00FFE1  42                 	db	66	;'B'
   891  00FFE2  61                 	db	97	;'a'
   892  00FFE3  63                 	db	99	;'c'
   893  00FFE4  6B                 	db	107	;'k'
   894  00FFE5  00                 	db	0
   895  00FFE6                     STR_2:
   896  00FFE6  25                 	db	37
   897  00FFE7  20                 	db	32
   898  00FFE8  20                 	db	32
   899  00FFE9  20                 	db	32
   900  00FFEA  00                 	db	0
   901  00FFEB                     STR_28:
   902  00FFEB  25                 	db	37
   903  00FFEC  20                 	db	32
   904  00FFED  20                 	db	32
   905  00FFEE  00                 	db	0
   906  00FFEF                     STR_13:
   907  00FFEF  2D                 	db	45
   908  00FFF0  2D                 	db	45
   909  00FFF1  2D                 	db	45
   910  00FFF2  00                 	db	0
   911  00FFF3                     STR_17:
   912  00FFF3  4F                 	db	79	;'O'
   913  00FFF4  46                 	db	70	;'F'
   914  00FFF5  46                 	db	70	;'F'
   915  00FFF6  00                 	db	0
   916  00FFF7                     STR_19:
   917  00FFF7  4E                 	db	78	;'N'
   918  00FFF8  41                 	db	65	;'A'
   919  00FFF9  50                 	db	80	;'P'
   920  00FFFA  00                 	db	0
   921  00FFFB                     STR_9:
   922  00FFFB  6D                 	db	109	;'m'
   923  00FFFC  69                 	db	105	;'i'
   924  00FFFD  6E                 	db	110	;'n'
   925  00FFFE  00                 	db	0
   926  0000                     
   927                           ; #config settings
   928  00FFFF  00                 	db	0	; dummy byte at the end
   929  0000                     
   930                           	psect	nvBANK0
   931  0000CD                     __pnvBANK0:
   932                           	opt stack 0
   933  0000CD                     _timer0ReloadVal:
   934                           	opt stack 0
   935  0000CD                     	ds	2
   936  0000CF                     _TMR0_InterruptHandler:
   937                           	opt stack 0
   938  0000CF                     	ds	2
   939  0000                     _CCPR4H	set	3916
   940  0000                     _CCPR4L	set	3915
   941  0000                     _CCP4CON	set	3914
   942  0000                     _CCPR3H	set	3919
   943  0000                     _CCPR3L	set	3918
   944  0000                     _CCP3CON	set	3917
   945  0000                     _CCPR2H	set	3922
   946  0000                     _CCPR2L	set	3921
   947  0000                     _CCP2CON	set	3920
   948  0000                     _IOCBbits	set	3930
   949  0000                     _WPUB	set	3931
   950  0000                     _ANCON1	set	3932
   951  0000                     _ANCON0	set	3933
   952  0000                     _PORTD	set	3971
   953  0000                     _PORTA	set	3968
   954  0000                     _LATEbits	set	3981
   955  0000                     _CCPTMRSbits	set	3993
   956  0000                     _T0CONbits	set	4053
   957  0000                     _TMR0L	set	4054
   958  0000                     _TMR0H	set	4055
   959  0000                     _T0CON	set	4053
   960  0000                     _EEDATA	set	3955
   961  0000                     _EEADR	set	3956
   962  0000                     _EEADRH	set	3957
   963  0000                     _EECON2	set	3966
   964  0000                     _EECON1bits	set	3967
   965  0000                     _TABLAT	set	4085
   966  0000                     _TBLPTRL	set	4086
   967  0000                     _TBLPTRH	set	4087
   968  0000                     _TBLPTRU	set	4088
   969  0000                     _REFOCON	set	3994
   970  0000                     _OSCTUNE	set	3995
   971  0000                     _OSCCON2	set	4050
   972  0000                     _OSCCON	set	4051
   973  0000                     _RCONbits	set	4048
   974  0000                     _PORTB	set	3969
   975  0000                     _PORTBbits	set	3969
   976  0000                     _INTCONbits	set	4082
   977  0000                     _TRISD	set	3989
   978  0000                     _TRISC	set	3988
   979  0000                     _TRISB	set	3987
   980  0000                     _TRISA	set	3986
   981  0000                     _TRISE	set	3990
   982  0000                     _LATC	set	3979
   983  0000                     _LATB	set	3978
   984  0000                     _LATA	set	3977
   985  0000                     _LATD	set	3980
   986  0000                     _LATE	set	3981
   987  0000                     _T4CONbits	set	3976
   988  0000                     _PIR4bits	set	4023
   989  0000                     _TMR4	set	3975
   990  0000                     _PR4	set	4009
   991  0000                     _T4CON	set	3976
   992                           
   993                           	psect	cinit
   994  002BFC                     __pcinit:
   995                           	opt stack 0
   996  002BFC                     start_initialization:
   997                           	opt stack 0
   998  002BFC                     __initialization:
   999                           	opt stack 0
  1000                           
  1001                           ; Initialize objects allocated to BANK0 (22 bytes)
  1002                           ; load TBLPTR registers with __pidataBANK0
  1003  002BFC  0E14               	movlw	low __pidataBANK0
  1004  002BFE  6EF6               	movwf	tblptrl,c
  1005  002C00  0E32               	movlw	high __pidataBANK0
  1006  002C02  6EF7               	movwf	tblptrh,c
  1007  002C04  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1008  002C06  6EF8               	movwf	tblptru,c
  1009  002C08  EE00  F0A9         	lfsr	0,__pdataBANK0
  1010  002C0C  EE10 F016          	lfsr	1,22
  1011  002C10                     copy_data0:
  1012  002C10  0009               	tblrd		*+
  1013  002C12  CFF5 FFEE          	movff	tablat,postinc0
  1014  002C16  50E5               	movf	postdec1,w,c
  1015  002C18  50E1               	movf	fsr1l,w,c
  1016  002C1A  E1FA               	bnz	copy_data0
  1017                           
  1018                           ; Initialize objects allocated to COMRAM (1 bytes)
  1019                           ; load TBLPTR registers with __pidataCOMRAM
  1020  002C1C  0ED8               	movlw	low __pidataCOMRAM
  1021  002C1E  6EF6               	movwf	tblptrl,c
  1022  002C20  0E32               	movlw	high __pidataCOMRAM
  1023  002C22  6EF7               	movwf	tblptrh,c
  1024  002C24  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1025  002C26  6EF8               	movwf	tblptru,c
  1026  002C28  0009               	tblrd		*+	;fetch initializer
  1027  002C2A  CFF5 F05E          	movff	tablat,__pdataCOMRAM
  1028                           
  1029                           ; Clear objects allocated to BANK0 (14 bytes)
  1030  002C2E  EE00  F0BF         	lfsr	0,__pbssBANK0
  1031  002C32  0E0E               	movlw	14
  1032  002C34                     clear_0:
  1033  002C34  6AEE               	clrf	postinc0,c
  1034  002C36  06E8               	decf	wreg,f,c
  1035  002C38  E1FD               	bnz	clear_0
  1036                           
  1037                           ; Clear objects allocated to COMRAM (1 bytes)
  1038  002C3A  6A5D               	clrf	__pbssCOMRAM& (0+255),c
  1039  002C3C                     end_of_initialization:
  1040                           	opt stack 0
  1041  002C3C                     __end_of__initialization:
  1042                           	opt stack 0
  1043  002C3C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1044  002C3E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1045  002C40  0100               	movlb	0
  1046  002C42  EF5E  F013         	goto	_main	;jump to C main() function
  1047                           tblptru	equ	0xFF8
  1048                           tblptrh	equ	0xFF7
  1049                           tblptrl	equ	0xFF6
  1050                           tablat	equ	0xFF5
  1051                           postinc0	equ	0xFEE
  1052                           wreg	equ	0xFE8
  1053                           postdec1	equ	0xFE5
  1054                           fsr1l	equ	0xFE1
  1055                           
  1056                           	psect	bssCOMRAM
  1057  00005D                     __pbssCOMRAM:
  1058                           	opt stack 0
  1059  00005D                     _mainState:
  1060                           	opt stack 0
  1061  00005D                     	ds	1
  1062                           tblptru	equ	0xFF8
  1063                           tblptrh	equ	0xFF7
  1064                           tblptrl	equ	0xFF6
  1065                           tablat	equ	0xFF5
  1066                           postinc0	equ	0xFEE
  1067                           wreg	equ	0xFE8
  1068                           postdec1	equ	0xFE5
  1069                           fsr1l	equ	0xFE1
  1070                           
  1071                           	psect	dataCOMRAM
  1072  00005E                     __pdataCOMRAM:
  1073                           	opt stack 0
  1074  00005E                     _valuesXStart:
  1075                           	opt stack 0
  1076  00005E                     	ds	1
  1077                           tblptru	equ	0xFF8
  1078                           tblptrh	equ	0xFF7
  1079                           tblptrl	equ	0xFF6
  1080                           tablat	equ	0xFF5
  1081                           postinc0	equ	0xFEE
  1082                           wreg	equ	0xFE8
  1083                           postdec1	equ	0xFE5
  1084                           fsr1l	equ	0xFE1
  1085                           
  1086                           	psect	bssBANK0
  1087  0000BF                     __pbssBANK0:
  1088                           	opt stack 0
  1089  0000BF                     _IOCB5_InterruptHandler:
  1090                           	opt stack 0
  1091  0000BF                     	ds	2
  1092  0000C1                     _IOCB4_InterruptHandler:
  1093                           	opt stack 0
  1094  0000C1                     	ds	2
  1095  0000C3                     _screen_y:
  1096                           	opt stack 0
  1097  0000C3                     	ds	1
  1098  0000C4                     _screen_x:
  1099                           	opt stack 0
  1100  0000C4                     	ds	1
  1101  0000C5                     PIN_MANAGER_IOC@previousState:
  1102                           	opt stack 0
  1103  0000C5                     	ds	1
  1104  0000C6                     _afterMinutes:
  1105                           	opt stack 0
  1106  0000C6                     	ds	1
  1107  0000C7                     _runMinutes:
  1108                           	opt stack 0
  1109  0000C7                     	ds	1
  1110  0000C8                     _adjustValues:
  1111                           	opt stack 0
  1112  0000C8                     	ds	1
  1113  0000C9                     _startColorsContext:
  1114                           	opt stack 0
  1115  0000C9                     	ds	1
  1116  0000CA                     _brightnessContext:
  1117                           	opt stack 0
  1118  0000CA                     	ds	1
  1119  0000CB                     _runTimeContext:
  1120                           	opt stack 0
  1121  0000CB                     	ds	1
  1122  0000CC                     _currentContext:
  1123                           	opt stack 0
  1124  0000CC                     	ds	1
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           postdec1	equ	0xFE5
  1132                           fsr1l	equ	0xFE1
  1133                           
  1134                           	psect	dataBANK0
  1135  0000A9                     __pdataBANK0:
  1136                           	opt stack 0
  1137  0000A9                     _blueStart:
  1138                           	opt stack 0
  1139  0000A9                     	ds	3
  1140  0000AC                     _greenStart:
  1141                           	opt stack 0
  1142  0000AC                     	ds	3
  1143  0000AF                     _redStart:
  1144                           	opt stack 0
  1145  0000AF                     	ds	3
  1146  0000B2                     _appliedBrightness:
  1147                           	opt stack 0
  1148  0000B2                     	ds	3
  1149  0000B5                     _brightnessPercent:
  1150                           	opt stack 0
  1151  0000B5                     	ds	3
  1152  0000B8                     _maxBrightness:
  1153                           	opt stack 0
  1154  0000B8                     	ds	2
  1155  0000BA                     _xMenuStart:
  1156                           	opt stack 0
  1157  0000BA                     	ds	1
  1158  0000BB                     _ARROW_SIZE:
  1159                           	opt stack 0
  1160  0000BB                     	ds	1
  1161  0000BC                     _timeAfterFinishX:
  1162                           	opt stack 0
  1163  0000BC                     	ds	1
  1164  0000BD                     _runTimeX:
  1165                           	opt stack 0
  1166  0000BD                     	ds	1
  1167  0000BE                     _subMenuY:
  1168                           	opt stack 0
  1169  0000BE                     	ds	1
  1170                           tblptru	equ	0xFF8
  1171                           tblptrh	equ	0xFF7
  1172                           tblptrl	equ	0xFF6
  1173                           tablat	equ	0xFF5
  1174                           postinc0	equ	0xFEE
  1175                           wreg	equ	0xFE8
  1176                           postdec1	equ	0xFE5
  1177                           fsr1l	equ	0xFE1
  1178                           
  1179                           	psect	cstackBANK0
  1180  000060                     __pcstackBANK0:
  1181                           	opt stack 0
  1182  000060                     ?___awdiv:
  1183                           	opt stack 0
  1184  000060                     ?___lwdiv:
  1185                           	opt stack 0
  1186  000060                     ?___lwmod:
  1187                           	opt stack 0
  1188  000060                     ?___ftpack:
  1189                           	opt stack 0
  1190  000060                     ?___fttol:
  1191                           	opt stack 0
  1192  000060                     GLCD_EnableController@controller:
  1193                           	opt stack 0
  1194  000060                     GLCD_DisableController@controller:
  1195                           	opt stack 0
  1196  000060                     TMR0_SetInterruptHandler@InterruptHandler:
  1197                           	opt stack 0
  1198  000060                     ___awdiv@dividend:
  1199                           	opt stack 0
  1200  000060                     ___lwdiv@dividend:
  1201                           	opt stack 0
  1202  000060                     ___lwmod@dividend:
  1203                           	opt stack 0
  1204  000060                     ___ftpack@arg:
  1205                           	opt stack 0
  1206  000060                     ___fttol@f1:
  1207                           	opt stack 0
  1208                           
  1209                           ; 3 bytes @ 0x0
  1210  000060                     	ds	1
  1211  000061                     GLCD_ReadStatus@status:
  1212                           	opt stack 0
  1213                           
  1214                           ; 1 bytes @ 0x1
  1215  000061                     	ds	1
  1216  000062                     ??_TMR0_Initialize:
  1217  000062                     GLCD_ReadStatus@controller:
  1218                           	opt stack 0
  1219  000062                     ___awdiv@divisor:
  1220                           	opt stack 0
  1221  000062                     ___lwdiv@divisor:
  1222                           	opt stack 0
  1223  000062                     ___lwmod@divisor:
  1224                           	opt stack 0
  1225                           
  1226                           ; 2 bytes @ 0x2
  1227  000062                     	ds	1
  1228  000063                     ___ftpack@exp:
  1229                           	opt stack 0
  1230                           
  1231                           ; 1 bytes @ 0x3
  1232  000063                     	ds	1
  1233  000064                     ??___fttol:
  1234  000064                     ___awdiv@counter:
  1235                           	opt stack 0
  1236  000064                     ___ftpack@sign:
  1237                           	opt stack 0
  1238  000064                     ___lwmod@counter:
  1239                           	opt stack 0
  1240  000064                     ___lwdiv@quotient:
  1241                           	opt stack 0
  1242                           
  1243                           ; 2 bytes @ 0x4
  1244  000064                     	ds	1
  1245  000065                     ??___ftpack:
  1246  000065                     ___awdiv@sign:
  1247                           	opt stack 0
  1248                           
  1249                           ; 1 bytes @ 0x5
  1250  000065                     	ds	1
  1251  000066                     ___lwdiv@counter:
  1252                           	opt stack 0
  1253  000066                     ___awdiv@quotient:
  1254                           	opt stack 0
  1255                           
  1256                           ; 2 bytes @ 0x6
  1257  000066                     	ds	1
  1258  000067                     utoa@buf:
  1259                           	opt stack 0
  1260                           
  1261                           ; 2 bytes @ 0x7
  1262  000067                     	ds	1
  1263  000068                     ??_GLCD_WriteData:
  1264  000068                     ??_GLCD_ReadData:
  1265  000068                     ?___ftdiv:
  1266                           	opt stack 0
  1267  000068                     ?___awtoft:
  1268                           	opt stack 0
  1269  000068                     GLCD_WriteCommand@controller:
  1270                           	opt stack 0
  1271  000068                     ___awtoft@c:
  1272                           	opt stack 0
  1273  000068                     ___ftdiv@f1:
  1274                           	opt stack 0
  1275                           
  1276                           ; 3 bytes @ 0x8
  1277  000068                     	ds	1
  1278  000069                     ??_GLCD_WriteCommand:
  1279  000069                     GLCD_ReadData@data:
  1280                           	opt stack 0
  1281  000069                     GLCD_WriteData@dataToWrite:
  1282                           	opt stack 0
  1283  000069                     ___fttol@sign1:
  1284                           	opt stack 0
  1285  000069                     utoa@val:
  1286                           	opt stack 0
  1287                           
  1288                           ; 2 bytes @ 0x9
  1289  000069                     	ds	1
  1290  00006A                     GLCD_WriteChar@charToWrite:
  1291                           	opt stack 0
  1292  00006A                     GLCD_WriteCommand@commandToWrite:
  1293                           	opt stack 0
  1294  00006A                     ___fttol@lval:
  1295                           	opt stack 0
  1296                           
  1297                           ; 4 bytes @ 0xA
  1298  00006A                     	ds	1
  1299  00006B                     GLCD_Initalize@i:
  1300                           	opt stack 0
  1301  00006B                     GLCD_GoTo@y:
  1302                           	opt stack 0
  1303  00006B                     ___awtoft@sign:
  1304                           	opt stack 0
  1305  00006B                     GLCD_WriteChar@i:
  1306                           	opt stack 0
  1307  00006B                     utoa@base:
  1308                           	opt stack 0
  1309  00006B                     ___ftdiv@f2:
  1310                           	opt stack 0
  1311                           
  1312                           ; 3 bytes @ 0xB
  1313  00006B                     	ds	1
  1314  00006C                     GLCD_GoTo@x:
  1315                           	opt stack 0
  1316                           
  1317                           ; 1 bytes @ 0xC
  1318  00006C                     	ds	1
  1319  00006D                     GLCD_GoTo@i:
  1320                           	opt stack 0
  1321  00006D                     GLCD_WriteString@stringToWrite:
  1322                           	opt stack 0
  1323  00006D                     utoa@v:
  1324                           	opt stack 0
  1325                           
  1326                           ; 2 bytes @ 0xD
  1327  00006D                     	ds	1
  1328  00006E                     ??_Clear_Arrow_Column:
  1329  00006E                     ??___ftdiv:
  1330  00006E                     GLCD_ClearScreen@i:
  1331                           	opt stack 0
  1332  00006E                     GLCD_SetPixel@y:
  1333                           	opt stack 0
  1334  00006E                     Clear_runTime_Arrows@i:
  1335                           	opt stack 0
  1336  00006E                     Clear_Brightness_Arrows@i:
  1337                           	opt stack 0
  1338  00006E                     Clear_startColors_Arrows@i:
  1339                           	opt stack 0
  1340  00006E                     ___fttol@exp1:
  1341                           	opt stack 0
  1342                           
  1343                           ; 1 bytes @ 0xE
  1344  00006E                     	ds	1
  1345  00006F                     GLCD_ClearScreen@j:
  1346                           	opt stack 0
  1347  00006F                     GLCD_SetPixel@color:
  1348                           	opt stack 0
  1349  00006F                     utoa@c:
  1350                           	opt stack 0
  1351  00006F                     PWM2_LoadDutyValue@dutyValue:
  1352                           	opt stack 0
  1353  00006F                     PWM3_LoadDutyValue@dutyValue:
  1354                           	opt stack 0
  1355  00006F                     PWM4_LoadDutyValue@dutyValue:
  1356                           	opt stack 0
  1357                           
  1358                           ; 2 bytes @ 0xF
  1359  00006F                     	ds	1
  1360  000070                     ??_GLCD_SetPixel:
  1361  000070                     itoa@buf:
  1362                           	opt stack 0
  1363                           
  1364                           ; 2 bytes @ 0x10
  1365  000070                     	ds	1
  1366  000071                     ??_PWM2_LoadDutyValue:
  1367  000071                     ??_PWM3_LoadDutyValue:
  1368  000071                     ??_PWM4_LoadDutyValue:
  1369  000071                     ___ftdiv@cntr:
  1370                           	opt stack 0
  1371                           
  1372                           ; 1 bytes @ 0x11
  1373  000071                     	ds	1
  1374  000072                     GLCD_SetPixel@tmp:
  1375                           	opt stack 0
  1376  000072                     itoa@val:
  1377                           	opt stack 0
  1378  000072                     ___ftdiv@f3:
  1379                           	opt stack 0
  1380                           
  1381                           ; 3 bytes @ 0x12
  1382  000072                     	ds	1
  1383  000073                     GLCD_SetPixel@x:
  1384                           	opt stack 0
  1385                           
  1386                           ; 1 bytes @ 0x13
  1387  000073                     	ds	1
  1388  000074                     _GLCD_SetPixel$1888:
  1389                           	opt stack 0
  1390  000074                     itoa@base:
  1391                           	opt stack 0
  1392                           
  1393                           ; 2 bytes @ 0x14
  1394  000074                     	ds	1
  1395  000075                     Clear_Arrow_Column@j:
  1396                           	opt stack 0
  1397  000075                     ___ftdiv@exp:
  1398                           	opt stack 0
  1399  000075                     GLCD_Line@X1:
  1400                           	opt stack 0
  1401                           
  1402                           ; 2 bytes @ 0x15
  1403  000075                     	ds	1
  1404  000076                     Clear_Arrow_Column@i:
  1405                           	opt stack 0
  1406  000076                     ___ftdiv@sign:
  1407                           	opt stack 0
  1408  000076                     itoa@cp:
  1409                           	opt stack 0
  1410                           
  1411                           ; 2 bytes @ 0x16
  1412  000076                     	ds	1
  1413  000077                     ?___ftmul:
  1414                           	opt stack 0
  1415  000077                     GLCD_Line@Y1:
  1416                           	opt stack 0
  1417  000077                     ___ftmul@f1:
  1418                           	opt stack 0
  1419                           
  1420                           ; 3 bytes @ 0x17
  1421  000077                     	ds	2
  1422  000079                     GLCD_Line@X2:
  1423                           	opt stack 0
  1424                           
  1425                           ; 2 bytes @ 0x19
  1426  000079                     	ds	1
  1427  00007A                     ___ftmul@f2:
  1428                           	opt stack 0
  1429                           
  1430                           ; 3 bytes @ 0x1A
  1431  00007A                     	ds	1
  1432  00007B                     GLCD_Line@Y2:
  1433                           	opt stack 0
  1434                           
  1435                           ; 2 bytes @ 0x1B
  1436  00007B                     	ds	2
  1437  00007D                     ??___ftmul:
  1438  00007D                     ??_GLCD_Line:
  1439                           
  1440                           ; 1 bytes @ 0x1D
  1441  00007D                     	ds	2
  1442  00007F                     GLCD_Line@TwoDxAccumulatedError:
  1443                           	opt stack 0
  1444                           
  1445                           ; 2 bytes @ 0x1F
  1446  00007F                     	ds	1
  1447  000080                     ___ftmul@exp:
  1448                           	opt stack 0
  1449                           
  1450                           ; 1 bytes @ 0x20
  1451  000080                     	ds	1
  1452  000081                     GLCD_Line@TwoDyAccumulatedError:
  1453                           	opt stack 0
  1454  000081                     ___ftmul@f3_as_product:
  1455                           	opt stack 0
  1456                           
  1457                           ; 3 bytes @ 0x21
  1458  000081                     	ds	2
  1459  000083                     GLCD_Line@Xinc:
  1460                           	opt stack 0
  1461                           
  1462                           ; 2 bytes @ 0x23
  1463  000083                     	ds	1
  1464  000084                     ___ftmul@cntr:
  1465                           	opt stack 0
  1466                           
  1467                           ; 1 bytes @ 0x24
  1468  000084                     	ds	1
  1469  000085                     ___ftmul@sign:
  1470                           	opt stack 0
  1471  000085                     GLCD_Line@Yinc:
  1472                           	opt stack 0
  1473                           
  1474                           ; 2 bytes @ 0x25
  1475  000085                     	ds	1
  1476  000086                     Set_Colors@Red:
  1477                           	opt stack 0
  1478                           
  1479                           ; 3 bytes @ 0x26
  1480  000086                     	ds	1
  1481  000087                     GLCD_Line@TwoDx:
  1482                           	opt stack 0
  1483                           
  1484                           ; 2 bytes @ 0x27
  1485  000087                     	ds	2
  1486  000089                     GLCD_Line@TwoDy:
  1487                           	opt stack 0
  1488  000089                     Set_Colors@Green:
  1489                           	opt stack 0
  1490                           
  1491                           ; 3 bytes @ 0x29
  1492  000089                     	ds	2
  1493  00008B                     GLCD_Line@CurrentX:
  1494                           	opt stack 0
  1495                           
  1496                           ; 2 bytes @ 0x2B
  1497  00008B                     	ds	1
  1498  00008C                     Set_Colors@Blue:
  1499                           	opt stack 0
  1500                           
  1501                           ; 3 bytes @ 0x2C
  1502  00008C                     	ds	1
  1503  00008D                     GLCD_Line@CurrentY:
  1504                           	opt stack 0
  1505                           
  1506                           ; 2 bytes @ 0x2D
  1507  00008D                     	ds	2
  1508  00008F                     GLCD_Line@Dx:
  1509                           	opt stack 0
  1510  00008F                     Set_Colors@appliedRed:
  1511                           	opt stack 0
  1512                           
  1513                           ; 3 bytes @ 0x2F
  1514  00008F                     	ds	2
  1515  000091                     GLCD_Line@Dy:
  1516                           	opt stack 0
  1517                           
  1518                           ; 2 bytes @ 0x31
  1519  000091                     	ds	1
  1520  000092                     Set_Colors@appliedGreen:
  1521                           	opt stack 0
  1522                           
  1523                           ; 3 bytes @ 0x32
  1524  000092                     	ds	1
  1525  000093                     Draw_runTime_Menu@display:
  1526                           	opt stack 0
  1527  000093                     Draw_Brightness_Menu@display:
  1528                           	opt stack 0
  1529  000093                     Draw_Start_Colors_Menu@display:
  1530                           	opt stack 0
  1531  000093                     Initialize_Menus@display:
  1532                           	opt stack 0
  1533                           
  1534                           ; 20 bytes @ 0x33
  1535  000093                     	ds	2
  1536  000095                     Set_Colors@appliedBlue:
  1537                           	opt stack 0
  1538                           
  1539                           ; 3 bytes @ 0x35
  1540  000095                     	ds	3
  1541  000098                     _Set_Colors$1887:
  1542                           	opt stack 0
  1543                           
  1544                           ; 3 bytes @ 0x38
  1545  000098                     	ds	15
  1546  0000A7                     ??_Check_Buttons:
  1547                           
  1548                           ; 1 bytes @ 0x47
  1549  0000A7                     	ds	1
  1550  0000A8                     ??_main:
  1551                           
  1552                           ; 1 bytes @ 0x48
  1553  0000A8                     	ds	1
  1554                           tblptru	equ	0xFF8
  1555                           tblptrh	equ	0xFF7
  1556                           tblptrl	equ	0xFF6
  1557                           tablat	equ	0xFF5
  1558                           postinc0	equ	0xFEE
  1559                           wreg	equ	0xFE8
  1560                           postdec1	equ	0xFE5
  1561                           fsr1l	equ	0xFE1
  1562                           
  1563                           	psect	cstackCOMRAM
  1564  000001                     __pcstackCOMRAM:
  1565                           	opt stack 0
  1566  000001                     ?i2___awdiv:
  1567                           	opt stack 0
  1568  000001                     ?i2___lwdiv:
  1569                           	opt stack 0
  1570  000001                     ?i2___lwmod:
  1571                           	opt stack 0
  1572  000001                     ?i2___ftpack:
  1573                           	opt stack 0
  1574  000001                     ?i2___fttol:
  1575                           	opt stack 0
  1576  000001                     i2GLCD_EnableController@controller:
  1577                           	opt stack 0
  1578  000001                     i2GLCD_DisableController@controller:
  1579                           	opt stack 0
  1580  000001                     i2___awdiv@dividend:
  1581                           	opt stack 0
  1582  000001                     i2___lwdiv@dividend:
  1583                           	opt stack 0
  1584  000001                     i2___lwmod@dividend:
  1585                           	opt stack 0
  1586  000001                     ___ftge@ff1:
  1587                           	opt stack 0
  1588  000001                     i2___ftpack@arg:
  1589                           	opt stack 0
  1590  000001                     i2___fttol@f1:
  1591                           	opt stack 0
  1592                           
  1593                           ; 3 bytes @ 0x0
  1594  000001                     	ds	1
  1595  000002                     i2GLCD_ReadStatus@status:
  1596                           	opt stack 0
  1597                           
  1598                           ; 1 bytes @ 0x1
  1599  000002                     	ds	1
  1600  000003                     i2GLCD_ReadStatus@controller:
  1601                           	opt stack 0
  1602  000003                     i2___awdiv@divisor:
  1603                           	opt stack 0
  1604  000003                     i2___lwdiv@divisor:
  1605                           	opt stack 0
  1606  000003                     i2___lwmod@divisor:
  1607                           	opt stack 0
  1608                           
  1609                           ; 2 bytes @ 0x2
  1610  000003                     	ds	1
  1611  000004                     i2___ftpack@exp:
  1612                           	opt stack 0
  1613  000004                     ___ftge@ff2:
  1614                           	opt stack 0
  1615                           
  1616                           ; 3 bytes @ 0x3
  1617  000004                     	ds	1
  1618  000005                     ??i2___fttol:
  1619  000005                     i2___awdiv@counter:
  1620                           	opt stack 0
  1621  000005                     i2___ftpack@sign:
  1622                           	opt stack 0
  1623  000005                     i2___lwmod@counter:
  1624                           	opt stack 0
  1625  000005                     i2___lwdiv@quotient:
  1626                           	opt stack 0
  1627                           
  1628                           ; 2 bytes @ 0x4
  1629  000005                     	ds	1
  1630  000006                     ??i2___ftpack:
  1631  000006                     i2___awdiv@sign:
  1632                           	opt stack 0
  1633                           
  1634                           ; 1 bytes @ 0x5
  1635  000006                     	ds	1
  1636  000007                     ??___ftge:
  1637  000007                     i2___lwdiv@counter:
  1638                           	opt stack 0
  1639  000007                     i2___awdiv@quotient:
  1640                           	opt stack 0
  1641                           
  1642                           ; 2 bytes @ 0x6
  1643  000007                     	ds	1
  1644  000008                     i2utoa@buf:
  1645                           	opt stack 0
  1646                           
  1647                           ; 2 bytes @ 0x7
  1648  000008                     	ds	1
  1649  000009                     ??i2_GLCD_WriteData:
  1650  000009                     ?___ftadd:
  1651                           	opt stack 0
  1652  000009                     ?i2___awtoft:
  1653                           	opt stack 0
  1654  000009                     ?i2___ftdiv:
  1655                           	opt stack 0
  1656  000009                     i2GLCD_WriteCommand@controller:
  1657                           	opt stack 0
  1658  000009                     i2___awtoft@c:
  1659                           	opt stack 0
  1660  000009                     ___ftadd@f1:
  1661                           	opt stack 0
  1662  000009                     i2___ftdiv@f1:
  1663                           	opt stack 0
  1664                           
  1665                           ; 3 bytes @ 0x8
  1666  000009                     	ds	1
  1667  00000A                     ??i2_GLCD_WriteCommand:
  1668  00000A                     i2GLCD_WriteData@dataToWrite:
  1669                           	opt stack 0
  1670  00000A                     i2___fttol@sign1:
  1671                           	opt stack 0
  1672  00000A                     i2utoa@val:
  1673                           	opt stack 0
  1674                           
  1675                           ; 2 bytes @ 0x9
  1676  00000A                     	ds	1
  1677  00000B                     i2GLCD_WriteChar@charToWrite:
  1678                           	opt stack 0
  1679  00000B                     i2GLCD_WriteCommand@commandToWrite:
  1680                           	opt stack 0
  1681  00000B                     i2___fttol@lval:
  1682                           	opt stack 0
  1683                           
  1684                           ; 4 bytes @ 0xA
  1685  00000B                     	ds	1
  1686  00000C                     i2GLCD_GoTo@y:
  1687                           	opt stack 0
  1688  00000C                     i2___awtoft@sign:
  1689                           	opt stack 0
  1690  00000C                     i2GLCD_WriteChar@i:
  1691                           	opt stack 0
  1692  00000C                     i2utoa@base:
  1693                           	opt stack 0
  1694  00000C                     ___ftadd@f2:
  1695                           	opt stack 0
  1696  00000C                     i2___ftdiv@f2:
  1697                           	opt stack 0
  1698                           
  1699                           ; 3 bytes @ 0xB
  1700  00000C                     	ds	1
  1701  00000D                     i2GLCD_GoTo@x:
  1702                           	opt stack 0
  1703                           
  1704                           ; 1 bytes @ 0xC
  1705  00000D                     	ds	1
  1706  00000E                     i2GLCD_GoTo@i:
  1707                           	opt stack 0
  1708  00000E                     i2GLCD_WriteString@stringToWrite:
  1709                           	opt stack 0
  1710  00000E                     i2utoa@v:
  1711                           	opt stack 0
  1712                           
  1713                           ; 2 bytes @ 0xD
  1714  00000E                     	ds	1
  1715  00000F                     ??___ftadd:
  1716  00000F                     ??i2_Clear_Arrow_Column:
  1717  00000F                     ??i2___ftdiv:
  1718  00000F                     i2Clear_runTime_Arrows@i:
  1719                           	opt stack 0
  1720  00000F                     i2Clear_Brightness_Arrows@i:
  1721                           	opt stack 0
  1722  00000F                     i2Clear_startColors_Arrows@i:
  1723                           	opt stack 0
  1724  00000F                     i2___fttol@exp1:
  1725                           	opt stack 0
  1726                           
  1727                           ; 1 bytes @ 0xE
  1728  00000F                     	ds	1
  1729  000010                     i2utoa@c:
  1730                           	opt stack 0
  1731  000010                     i2PWM2_LoadDutyValue@dutyValue:
  1732                           	opt stack 0
  1733  000010                     i2PWM3_LoadDutyValue@dutyValue:
  1734                           	opt stack 0
  1735  000010                     i2PWM4_LoadDutyValue@dutyValue:
  1736                           	opt stack 0
  1737                           
  1738                           ; 2 bytes @ 0xF
  1739  000010                     	ds	1
  1740  000011                     i2itoa@buf:
  1741                           	opt stack 0
  1742                           
  1743                           ; 2 bytes @ 0x10
  1744  000011                     	ds	1
  1745  000012                     ??i2_PWM2_LoadDutyValue:
  1746  000012                     ??i2_PWM3_LoadDutyValue:
  1747  000012                     ??i2_PWM4_LoadDutyValue:
  1748  000012                     ___ftadd@sign:
  1749                           	opt stack 0
  1750  000012                     i2___ftdiv@cntr:
  1751                           	opt stack 0
  1752                           
  1753                           ; 1 bytes @ 0x11
  1754  000012                     	ds	1
  1755  000013                     ___ftadd@exp2:
  1756                           	opt stack 0
  1757  000013                     i2itoa@val:
  1758                           	opt stack 0
  1759  000013                     i2___ftdiv@f3:
  1760                           	opt stack 0
  1761                           
  1762                           ; 3 bytes @ 0x12
  1763  000013                     	ds	1
  1764  000014                     ___ftadd@exp1:
  1765                           	opt stack 0
  1766                           
  1767                           ; 1 bytes @ 0x13
  1768  000014                     	ds	1
  1769  000015                     ?___ftsub:
  1770                           	opt stack 0
  1771  000015                     i2itoa@base:
  1772                           	opt stack 0
  1773  000015                     ___ftsub@f1:
  1774                           	opt stack 0
  1775                           
  1776                           ; 3 bytes @ 0x14
  1777  000015                     	ds	1
  1778  000016                     i2Clear_Arrow_Column@j:
  1779                           	opt stack 0
  1780  000016                     i2___ftdiv@exp:
  1781                           	opt stack 0
  1782                           
  1783                           ; 1 bytes @ 0x15
  1784  000016                     	ds	1
  1785  000017                     i2Clear_Arrow_Column@i:
  1786                           	opt stack 0
  1787  000017                     i2___ftdiv@sign:
  1788                           	opt stack 0
  1789  000017                     i2itoa@cp:
  1790                           	opt stack 0
  1791                           
  1792                           ; 2 bytes @ 0x16
  1793  000017                     	ds	1
  1794  000018                     ?i2___ftmul:
  1795                           	opt stack 0
  1796  000018                     Main_Menu_Function@result:
  1797                           	opt stack 0
  1798  000018                     ___ftsub@f2:
  1799                           	opt stack 0
  1800  000018                     i2___ftmul@f1:
  1801                           	opt stack 0
  1802                           
  1803                           ; 3 bytes @ 0x17
  1804  000018                     	ds	1
  1805  000019                     Run_Time_Menu_Function@display:
  1806                           	opt stack 0
  1807                           
  1808                           ; 10 bytes @ 0x18
  1809  000019                     	ds	2
  1810  00001B                     i2___ftmul@f2:
  1811                           	opt stack 0
  1812                           
  1813                           ; 3 bytes @ 0x1A
  1814  00001B                     	ds	3
  1815  00001E                     ??i2___ftmul:
  1816                           
  1817                           ; 1 bytes @ 0x1D
  1818  00001E                     	ds	3
  1819  000021                     i2___ftmul@exp:
  1820                           	opt stack 0
  1821                           
  1822                           ; 1 bytes @ 0x20
  1823  000021                     	ds	1
  1824  000022                     i2___ftmul@f3_as_product:
  1825                           	opt stack 0
  1826                           
  1827                           ; 3 bytes @ 0x21
  1828  000022                     	ds	1
  1829  000023                     Run_Time_Menu_Function@result:
  1830                           	opt stack 0
  1831                           
  1832                           ; 1 bytes @ 0x22
  1833  000023                     	ds	2
  1834  000025                     i2___ftmul@cntr:
  1835                           	opt stack 0
  1836                           
  1837                           ; 1 bytes @ 0x24
  1838  000025                     	ds	1
  1839  000026                     i2___ftmul@sign:
  1840                           	opt stack 0
  1841                           
  1842                           ; 1 bytes @ 0x25
  1843  000026                     	ds	1
  1844  000027                     i2Set_Colors@Red:
  1845                           	opt stack 0
  1846                           
  1847                           ; 3 bytes @ 0x26
  1848  000027                     	ds	3
  1849  00002A                     i2Set_Colors@Green:
  1850                           	opt stack 0
  1851                           
  1852                           ; 3 bytes @ 0x29
  1853  00002A                     	ds	3
  1854  00002D                     i2Set_Colors@Blue:
  1855                           	opt stack 0
  1856                           
  1857                           ; 3 bytes @ 0x2C
  1858  00002D                     	ds	3
  1859  000030                     i2Set_Colors@appliedRed:
  1860                           	opt stack 0
  1861                           
  1862                           ; 3 bytes @ 0x2F
  1863  000030                     	ds	3
  1864  000033                     i2Set_Colors@appliedGreen:
  1865                           	opt stack 0
  1866                           
  1867                           ; 3 bytes @ 0x32
  1868  000033                     	ds	3
  1869  000036                     i2Set_Colors@appliedBlue:
  1870                           	opt stack 0
  1871                           
  1872                           ; 3 bytes @ 0x35
  1873  000036                     	ds	3
  1874  000039                     i2_Set_Colors$2088:
  1875                           	opt stack 0
  1876                           
  1877                           ; 3 bytes @ 0x38
  1878  000039                     	ds	3
  1879  00003C                     Brightness_Menu_Function@display:
  1880                           	opt stack 0
  1881  00003C                     Start_Color_Menu_Function@display:
  1882                           	opt stack 0
  1883                           
  1884                           ; 10 bytes @ 0x3B
  1885  00003C                     	ds	10
  1886  000046                     Brightness_Menu_Function@result:
  1887                           	opt stack 0
  1888  000046                     Start_Color_Menu_Function@result:
  1889                           	opt stack 0
  1890                           
  1891                           ; 1 bytes @ 0x45
  1892  000046                     	ds	1
  1893  000047                     PIN_MANAGER_IOC@currentState:
  1894                           	opt stack 0
  1895                           
  1896                           ; 1 bytes @ 0x46
  1897  000047                     	ds	1
  1898  000048                     PIN_MANAGER_IOC@CHB:
  1899                           	opt stack 0
  1900                           
  1901                           ; 1 bytes @ 0x47
  1902  000048                     	ds	1
  1903  000049                     PIN_MANAGER_IOC@CHA:
  1904                           	opt stack 0
  1905                           
  1906                           ; 1 bytes @ 0x48
  1907  000049                     	ds	1
  1908  00004A                     PIN_MANAGER_IOC@result:
  1909                           	opt stack 0
  1910                           
  1911                           ; 1 bytes @ 0x49
  1912  00004A                     	ds	1
  1913  00004B                     ??_INTERRUPT_InterruptManager:
  1914                           
  1915                           ; 1 bytes @ 0x4A
  1916  00004B                     	ds	18
  1917                           tblptru	equ	0xFF8
  1918                           tblptrh	equ	0xFF7
  1919                           tblptrl	equ	0xFF6
  1920                           tablat	equ	0xFF5
  1921                           postinc0	equ	0xFEE
  1922                           wreg	equ	0xFE8
  1923                           postdec1	equ	0xFE5
  1924                           fsr1l	equ	0xFE1
  1925                           
  1926 ;;
  1927 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1928 ;;
  1929 ;; *************** function _main *****************
  1930 ;; Defined at:
  1931 ;;		line 62 in file "main.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1947 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1948 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1949 ;;Total ram usage:        1 bytes
  1950 ;; Hardware stack levels required when called:   17
  1951 ;; This function calls:
  1952 ;;		_Check_Buttons
  1953 ;;		_Draw_Arrow
  1954 ;;		_GLCD_ClearScreen
  1955 ;;		_GLCD_Initalize
  1956 ;;		_Initialize_Menus
  1957 ;;		_PWM2_LoadDutyValue
  1958 ;;		_PWM3_LoadDutyValue
  1959 ;;		_PWM4_LoadDutyValue
  1960 ;;		_SYSTEM_Initialize
  1961 ;; This function is called by:
  1962 ;;		Startup code after reset
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text0
  1967  0026BC                     __ptext0:
  1968                           	opt stack 0
  1969  0026BC                     _main:
  1970                           	opt stack 14
  1971                           
  1972                           ;main.c: 65: SYSTEM_Initialize();
  1973                           
  1974                           ;incstack = 0
  1975  0026BC  ECD7  F018         	call	_SYSTEM_Initialize	;wreg free
  1976                           
  1977                           ;main.c: 84: (INTCONbits.GIE = 1);
  1978  0026C0  8EF2               	bsf	intcon,7,c	;volatile
  1979                           
  1980                           ;main.c: 90: (INTCONbits.PEIE = 1);
  1981  0026C2  8CF2               	bsf	intcon,6,c	;volatile
  1982                           
  1983                           ;main.c: 97: PWM2_LoadDutyValue(50);
  1984  0026C4  0E00               	movlw	0
  1985  0026C6  0100               	movlb	0	; () banked
  1986  0026C8  6F70               	movwf	(PWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  1987  0026CA  0E32               	movlw	50
  1988  0026CC  6F6F               	movwf	PWM2_LoadDutyValue@dutyValue& (0+255),b
  1989  0026CE  EC23  F017         	call	_PWM2_LoadDutyValue	;wreg free
  1990                           
  1991                           ;main.c: 98: PWM3_LoadDutyValue(0);
  1992  0026D2  0E00               	movlw	0
  1993  0026D4  0100               	movlb	0	; () banked
  1994  0026D6  6F70               	movwf	(PWM3_LoadDutyValue@dutyValue+1)& (0+255),b
  1995  0026D8  0E00               	movlw	0
  1996  0026DA  6F6F               	movwf	PWM3_LoadDutyValue@dutyValue& (0+255),b
  1997  0026DC  EC05  F017         	call	_PWM3_LoadDutyValue	;wreg free
  1998                           
  1999                           ;main.c: 99: PWM4_LoadDutyValue(50);
  2000  0026E0  0E00               	movlw	0
  2001  0026E2  0100               	movlb	0	; () banked
  2002  0026E4  6F70               	movwf	(PWM4_LoadDutyValue@dutyValue+1)& (0+255),b
  2003  0026E6  0E32               	movlw	50
  2004  0026E8  6F6F               	movwf	PWM4_LoadDutyValue@dutyValue& (0+255),b
  2005  0026EA  ECE7  F016         	call	_PWM4_LoadDutyValue	;wreg free
  2006                           
  2007                           ;main.c: 100: do { LATEbits.LATE1 = 1; } while(0);
  2008  0026EE  828D               	bsf	3981,1,c	;volatile
  2009                           
  2010                           ;main.c: 101: _delay((unsigned long)((10)*(8000000/4000.0)));
  2011  0026F0  0E1A               	movlw	26
  2012  0026F2  0100               	movlb	0	; () banked
  2013  0026F4  6FA8               	movwf	??_main& (0+255),b
  2014  0026F6  0EF8               	movlw	248
  2015  0026F8                     u4767:
  2016  0026F8  2EE8               	decfsz	wreg,f,c
  2017  0026FA  D7FE               	bra	u4767
  2018  0026FC  2FA8               	decfsz	??_main& (0+255),f,b
  2019  0026FE  D7FC               	bra	u4767
  2020  002700  F000               	nop	
  2021                           
  2022                           ;main.c: 102: GLCD_Initalize();
  2023  002702  ECE8  F018         	call	_GLCD_Initalize	;wreg free
  2024                           
  2025                           ;main.c: 103: GLCD_ClearScreen();
  2026  002706  ECB3  F017         	call	_GLCD_ClearScreen	;wreg free
  2027                           
  2028                           ;main.c: 106: Initialize_Menus();
  2029  00270A  EC16  F002         	call	_Initialize_Menus	;wreg free
  2030                           
  2031                           ;main.c: 108: currentContext = mainMenu;
  2032  00270E  0E00               	movlw	0
  2033  002710  0100               	movlb	0	; () banked
  2034  002712  6FCC               	movwf	_currentContext& (0+255),b
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;main.c: 109: mainState = setRunTime;
  2038  002714  0E02               	movlw	2
  2039  002716  6E5D               	movwf	_mainState,c
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;main.c: 110: Draw_Arrow();
  2043  002718  EC91  F013         	call	_Draw_Arrow	;wreg free
  2044  00271C                     
  2045                           ;main.c: 115: {
  2046                           ;main.c: 117: Check_Buttons();
  2047  00271C  ECD3  F007         	call	_Check_Buttons	;wreg free
  2048  002720  D7FD               	goto	l526
  2049  002722                     __end_of_main:
  2050                           	opt stack 0
  2051                           tblptru	equ	0xFF8
  2052                           tblptrh	equ	0xFF7
  2053                           tblptrl	equ	0xFF6
  2054                           tablat	equ	0xFF5
  2055                           intcon	equ	0xFF2
  2056                           postinc0	equ	0xFEE
  2057                           wreg	equ	0xFE8
  2058                           postdec1	equ	0xFE5
  2059                           fsr1l	equ	0xFE1
  2060                           
  2061 ;; *************** function _SYSTEM_Initialize *****************
  2062 ;; Defined at:
  2063 ;;		line 111 in file "mcc_generated_files/mcc.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:   11
  2084 ;; This function calls:
  2085 ;;		_INTERRUPT_Initialize
  2086 ;;		_OSCILLATOR_Initialize
  2087 ;;		_PIN_MANAGER_Initialize
  2088 ;;		_PWM2_Initialize
  2089 ;;		_PWM3_Initialize
  2090 ;;		_PWM4_Initialize
  2091 ;;		_TMR0_Initialize
  2092 ;;		_TMR4_Initialize
  2093 ;; This function is called by:
  2094 ;;		_main
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text1
  2099  0031AE                     __ptext1:
  2100                           	opt stack 0
  2101  0031AE                     _SYSTEM_Initialize:
  2102                           	opt stack 19
  2103                           
  2104                           ;mcc.c: 114: INTERRUPT_Initialize();
  2105                           
  2106                           ;incstack = 0
  2107  0031AE  EC65  F019         	call	_INTERRUPT_Initialize	;wreg free
  2108                           
  2109                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  2110  0031B2  ECC9  F016         	call	_PIN_MANAGER_Initialize	;wreg free
  2111                           
  2112                           ;mcc.c: 116: OSCILLATOR_Initialize();
  2113  0031B6  EC4E  F019         	call	_OSCILLATOR_Initialize	;wreg free
  2114                           
  2115                           ;mcc.c: 117: PWM2_Initialize();
  2116  0031BA  EC45  F019         	call	_PWM2_Initialize	;wreg free
  2117                           
  2118                           ;mcc.c: 118: TMR4_Initialize();
  2119  0031BE  EC15  F019         	call	_TMR4_Initialize	;wreg free
  2120                           
  2121                           ;mcc.c: 119: PWM4_Initialize();
  2122  0031C2  EC33  F019         	call	_PWM4_Initialize	;wreg free
  2123                           
  2124                           ;mcc.c: 120: PWM3_Initialize();
  2125  0031C6  EC3C  F019         	call	_PWM3_Initialize	;wreg free
  2126                           
  2127                           ;mcc.c: 121: TMR0_Initialize();
  2128  0031CA  EC41  F017         	call	_TMR0_Initialize	;wreg free
  2129  0031CE  0012               	return		;funcret
  2130  0031D0                     __end_of_SYSTEM_Initialize:
  2131                           	opt stack 0
  2132                           tblptru	equ	0xFF8
  2133                           tblptrh	equ	0xFF7
  2134                           tblptrl	equ	0xFF6
  2135                           tablat	equ	0xFF5
  2136                           intcon	equ	0xFF2
  2137                           postinc0	equ	0xFEE
  2138                           wreg	equ	0xFE8
  2139                           postdec1	equ	0xFE5
  2140                           fsr1l	equ	0xFE1
  2141                           
  2142 ;; *************** function _TMR4_Initialize *****************
  2143 ;; Defined at:
  2144 ;;		line 61 in file "mcc_generated_files/tmr4.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;		None
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;Total ram usage:        0 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:   10
  2165 ;; This function calls:
  2166 ;;		_TMR4_StartTimer
  2167 ;; This function is called by:
  2168 ;;		_SYSTEM_Initialize
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text2
  2173  00322A                     __ptext2:
  2174                           	opt stack 0
  2175  00322A                     _TMR4_Initialize:
  2176                           	opt stack 19
  2177                           
  2178                           ;tmr4.c: 66: T4CON = 0x02;
  2179                           
  2180                           ;incstack = 0
  2181  00322A  0E02               	movlw	2
  2182  00322C  6E88               	movwf	3976,c	;volatile
  2183                           
  2184                           ;tmr4.c: 69: PR4 = 0xF9;
  2185  00322E  0EF9               	movlw	249
  2186  003230  6EA9               	movwf	4009,c	;volatile
  2187                           
  2188                           ;tmr4.c: 72: TMR4 = 0x00;
  2189  003232  0E00               	movlw	0
  2190  003234  6E87               	movwf	3975,c	;volatile
  2191                           
  2192                           ;tmr4.c: 75: PIR4bits.TMR4IF = 0;
  2193  003236  9EB7               	bcf	4023,7,c	;volatile
  2194                           
  2195                           ;tmr4.c: 78: TMR4_StartTimer();
  2196  003238  EC61  F019         	call	_TMR4_StartTimer	;wreg free
  2197  00323C  0012               	return		;funcret
  2198  00323E                     __end_of_TMR4_Initialize:
  2199                           	opt stack 0
  2200                           tblptru	equ	0xFF8
  2201                           tblptrh	equ	0xFF7
  2202                           tblptrl	equ	0xFF6
  2203                           tablat	equ	0xFF5
  2204                           intcon	equ	0xFF2
  2205                           postinc0	equ	0xFEE
  2206                           wreg	equ	0xFE8
  2207                           postdec1	equ	0xFE5
  2208                           fsr1l	equ	0xFE1
  2209                           
  2210 ;; *************** function _TMR4_StartTimer *****************
  2211 ;; Defined at:
  2212 ;;		line 81 in file "mcc_generated_files/tmr4.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		None
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    9
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_TMR4_Initialize
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text3
  2241  0032C2                     __ptext3:
  2242                           	opt stack 0
  2243  0032C2                     _TMR4_StartTimer:
  2244                           	opt stack 19
  2245                           
  2246                           ;tmr4.c: 84: T4CONbits.TMR4ON = 1;
  2247                           
  2248                           ;incstack = 0
  2249  0032C2  8488               	bsf	3976,2,c	;volatile
  2250  0032C4  0012               	return		;funcret
  2251  0032C6                     __end_of_TMR4_StartTimer:
  2252                           	opt stack 0
  2253                           tblptru	equ	0xFF8
  2254                           tblptrh	equ	0xFF7
  2255                           tblptrl	equ	0xFF6
  2256                           tablat	equ	0xFF5
  2257                           intcon	equ	0xFF2
  2258                           postinc0	equ	0xFEE
  2259                           wreg	equ	0xFE8
  2260                           postdec1	equ	0xFE5
  2261                           fsr1l	equ	0xFE1
  2262                           
  2263 ;; *************** function _TMR0_Initialize *****************
  2264 ;; Defined at:
  2265 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      void 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2281 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2283 ;;Total ram usage:        2 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:   10
  2286 ;; This function calls:
  2287 ;;		_TMR0_SetInterruptHandler
  2288 ;;		_TMR0_StartTimer
  2289 ;; This function is called by:
  2290 ;;		_SYSTEM_Initialize
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text4
  2295  002E82                     __ptext4:
  2296                           	opt stack 0
  2297  002E82                     _TMR0_Initialize:
  2298                           	opt stack 19
  2299                           
  2300                           ;tmr0.c: 71: T0CON = 0x14;
  2301                           
  2302                           ;incstack = 0
  2303  002E82  0E14               	movlw	20
  2304  002E84  6ED5               	movwf	4053,c	;volatile
  2305                           
  2306                           ;tmr0.c: 74: TMR0H = 0x0B;
  2307  002E86  0E0B               	movlw	11
  2308  002E88  6ED7               	movwf	4055,c	;volatile
  2309                           
  2310                           ;tmr0.c: 77: TMR0L = 0xDB;
  2311  002E8A  0EDB               	movlw	219
  2312  002E8C  6ED6               	movwf	4054,c	;volatile
  2313                           
  2314                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  2315  002E8E  50D6               	movf	4054,w,c	;volatile
  2316  002E90  CFD7 F062          	movff	4055,??_TMR0_Initialize	;volatile
  2317  002E94  0100               	movlb	0	; () banked
  2318  002E96  6B63               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  2319  002E98  C062  F063         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  2320  002E9C  6B62               	clrf	??_TMR0_Initialize& (0+255),b
  2321  002E9E  1162               	iorwf	??_TMR0_Initialize& (0+255),w,b
  2322  002EA0  6FCD               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  2323  002EA2  5163               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  2324  002EA4  6FCE               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  2328  002EA6  94F2               	bcf	intcon,2,c	;volatile
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  2332  002EA8  8AF2               	bsf	intcon,5,c	;volatile
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2336  002EAA  0ED6               	movlw	low _TMR0_DefaultInterruptHandler
  2337  002EAC  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  2338  002EAE  0E32               	movlw	high _TMR0_DefaultInterruptHandler
  2339  002EB0  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2340  002EB2  EC57  F019         	call	_TMR0_SetInterruptHandler	;wreg free
  2341                           
  2342                           ;tmr0.c: 92: TMR0_StartTimer();
  2343  002EB6  EC63  F019         	call	_TMR0_StartTimer	;wreg free
  2344  002EBA  0012               	return		;funcret
  2345  002EBC                     __end_of_TMR0_Initialize:
  2346                           	opt stack 0
  2347                           tblptru	equ	0xFF8
  2348                           tblptrh	equ	0xFF7
  2349                           tblptrl	equ	0xFF6
  2350                           tablat	equ	0xFF5
  2351                           intcon	equ	0xFF2
  2352                           postinc0	equ	0xFEE
  2353                           wreg	equ	0xFE8
  2354                           postdec1	equ	0xFE5
  2355                           fsr1l	equ	0xFE1
  2356                           
  2357 ;; *************** function _TMR0_StartTimer *****************
  2358 ;; Defined at:
  2359 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;		None
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		None
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2377 ;;Total ram usage:        0 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    9
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_TMR0_Initialize
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text5
  2388  0032C6                     __ptext5:
  2389                           	opt stack 0
  2390  0032C6                     _TMR0_StartTimer:
  2391                           	opt stack 19
  2392                           
  2393                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
  2394                           
  2395                           ;incstack = 0
  2396  0032C6  8ED5               	bsf	4053,7,c	;volatile
  2397  0032C8  0012               	return		;funcret
  2398  0032CA                     __end_of_TMR0_StartTimer:
  2399                           	opt stack 0
  2400                           tblptru	equ	0xFF8
  2401                           tblptrh	equ	0xFF7
  2402                           tblptrl	equ	0xFF6
  2403                           tablat	equ	0xFF5
  2404                           intcon	equ	0xFF2
  2405                           postinc0	equ	0xFEE
  2406                           wreg	equ	0xFE8
  2407                           postdec1	equ	0xFE5
  2408                           fsr1l	equ	0xFE1
  2409                           
  2410 ;; *************** function _TMR0_SetInterruptHandler *****************
  2411 ;; Defined at:
  2412 ;;		line 154 in file "mcc_generated_files/tmr0.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2415 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;		None
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  1    wreg      void 
  2420 ;; Registers used:
  2421 ;;		wreg, status,2, status,0
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2427 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2430 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2431 ;;Total ram usage:        2 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    9
  2434 ;; This function calls:
  2435 ;;		Nothing
  2436 ;; This function is called by:
  2437 ;;		_TMR0_Initialize
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text6
  2442  0032AE                     __ptext6:
  2443                           	opt stack 0
  2444  0032AE                     _TMR0_SetInterruptHandler:
  2445                           	opt stack 19
  2446                           
  2447                           ;tmr0.c: 155: TMR0_InterruptHandler = InterruptHandler;
  2448                           
  2449                           ;incstack = 0
  2450  0032AE  C060  F0CF         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  2451  0032B2  C061  F0D0         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  2452  0032B6  0012               	return		;funcret
  2453  0032B8                     __end_of_TMR0_SetInterruptHandler:
  2454                           	opt stack 0
  2455                           tblptru	equ	0xFF8
  2456                           tblptrh	equ	0xFF7
  2457                           tblptrl	equ	0xFF6
  2458                           tablat	equ	0xFF5
  2459                           intcon	equ	0xFF2
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           postdec1	equ	0xFE5
  2463                           fsr1l	equ	0xFE1
  2464                           
  2465 ;; *************** function _PWM4_Initialize *****************
  2466 ;; Defined at:
  2467 ;;		line 63 in file "mcc_generated_files/pwm4.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2485 ;;Total ram usage:        0 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    9
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_SYSTEM_Initialize
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text7
  2496  003266                     __ptext7:
  2497                           	opt stack 0
  2498  003266                     _PWM4_Initialize:
  2499                           	opt stack 20
  2500                           
  2501                           ;pwm4.c: 68: CCP4CON = 0x3C;
  2502                           
  2503                           ;incstack = 0
  2504  003266  0E3C               	movlw	60
  2505  003268  010F               	movlb	15	; () banked
  2506  00326A  6F4A               	movwf	74,b	;volatile
  2507                           
  2508                           ;pwm4.c: 71: CCPR4L = 0x7C;
  2509  00326C  0E7C               	movlw	124
  2510  00326E  6F4B               	movwf	75,b	;volatile
  2511                           
  2512                           ;pwm4.c: 74: CCPR4H = 0x00;
  2513  003270  0E00               	movlw	0
  2514  003272  6F4C               	movwf	76,b	;volatile
  2515                           
  2516                           ; BSR set to: 15
  2517                           ;pwm4.c: 77: CCPTMRSbits.C4TSEL = 0x1;
  2518  003274  8699               	bsf	3993,3,c	;volatile
  2519                           
  2520                           ; BSR set to: 15
  2521  003276  0012               	return		;funcret
  2522  003278                     __end_of_PWM4_Initialize:
  2523                           	opt stack 0
  2524                           tblptru	equ	0xFF8
  2525                           tblptrh	equ	0xFF7
  2526                           tblptrl	equ	0xFF6
  2527                           tablat	equ	0xFF5
  2528                           intcon	equ	0xFF2
  2529                           postinc0	equ	0xFEE
  2530                           wreg	equ	0xFE8
  2531                           postdec1	equ	0xFE5
  2532                           fsr1l	equ	0xFE1
  2533                           
  2534 ;; *************** function _PWM3_Initialize *****************
  2535 ;; Defined at:
  2536 ;;		line 63 in file "mcc_generated_files/pwm3.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2554 ;;Total ram usage:        0 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    9
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_SYSTEM_Initialize
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text8
  2565  003278                     __ptext8:
  2566                           	opt stack 0
  2567  003278                     _PWM3_Initialize:
  2568                           	opt stack 20
  2569                           
  2570                           ;pwm3.c: 68: CCP3CON = 0x3C;
  2571                           
  2572                           ; BSR set to: 15
  2573                           ;incstack = 0
  2574  003278  0E3C               	movlw	60
  2575  00327A  010F               	movlb	15	; () banked
  2576  00327C  6F4D               	movwf	77,b	;volatile
  2577                           
  2578                           ;pwm3.c: 71: CCPR3L = 0x7C;
  2579  00327E  0E7C               	movlw	124
  2580  003280  6F4E               	movwf	78,b	;volatile
  2581                           
  2582                           ;pwm3.c: 74: CCPR3H = 0x00;
  2583  003282  0E00               	movlw	0
  2584  003284  6F4F               	movwf	79,b	;volatile
  2585                           
  2586                           ; BSR set to: 15
  2587                           ;pwm3.c: 77: CCPTMRSbits.C3TSEL = 0x1;
  2588  003286  8499               	bsf	3993,2,c	;volatile
  2589                           
  2590                           ; BSR set to: 15
  2591  003288  0012               	return		;funcret
  2592  00328A                     __end_of_PWM3_Initialize:
  2593                           	opt stack 0
  2594                           tblptru	equ	0xFF8
  2595                           tblptrh	equ	0xFF7
  2596                           tblptrl	equ	0xFF6
  2597                           tablat	equ	0xFF5
  2598                           intcon	equ	0xFF2
  2599                           postinc0	equ	0xFEE
  2600                           wreg	equ	0xFE8
  2601                           postdec1	equ	0xFE5
  2602                           fsr1l	equ	0xFE1
  2603                           
  2604 ;; *************** function _PWM2_Initialize *****************
  2605 ;; Defined at:
  2606 ;;		line 63 in file "mcc_generated_files/pwm2.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    9
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_SYSTEM_Initialize
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text9
  2635  00328A                     __ptext9:
  2636                           	opt stack 0
  2637  00328A                     _PWM2_Initialize:
  2638                           	opt stack 20
  2639                           
  2640                           ;pwm2.c: 68: CCP2CON = 0x3C;
  2641                           
  2642                           ; BSR set to: 15
  2643                           ;incstack = 0
  2644  00328A  0E3C               	movlw	60
  2645  00328C  010F               	movlb	15	; () banked
  2646  00328E  6F50               	movwf	80,b	;volatile
  2647                           
  2648                           ;pwm2.c: 71: CCPR2L = 0x7C;
  2649  003290  0E7C               	movlw	124
  2650  003292  6F51               	movwf	81,b	;volatile
  2651                           
  2652                           ;pwm2.c: 74: CCPR2H = 0x00;
  2653  003294  0E00               	movlw	0
  2654  003296  6F52               	movwf	82,b	;volatile
  2655                           
  2656                           ; BSR set to: 15
  2657                           ;pwm2.c: 77: CCPTMRSbits.C2TSEL = 0x1;
  2658  003298  8299               	bsf	3993,1,c	;volatile
  2659                           
  2660                           ; BSR set to: 15
  2661  00329A  0012               	return		;funcret
  2662  00329C                     __end_of_PWM2_Initialize:
  2663                           	opt stack 0
  2664                           tblptru	equ	0xFF8
  2665                           tblptrh	equ	0xFF7
  2666                           tblptrl	equ	0xFF6
  2667                           tablat	equ	0xFF5
  2668                           intcon	equ	0xFF2
  2669                           postinc0	equ	0xFEE
  2670                           wreg	equ	0xFE8
  2671                           postdec1	equ	0xFE5
  2672                           fsr1l	equ	0xFE1
  2673                           
  2674 ;; *************** function _PIN_MANAGER_Initialize *****************
  2675 ;; Defined at:
  2676 ;;		line 64 in file "mcc_generated_files/pin_manager.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2694 ;;Total ram usage:        0 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    9
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_SYSTEM_Initialize
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text10
  2705  002D92                     __ptext10:
  2706                           	opt stack 0
  2707  002D92                     _PIN_MANAGER_Initialize:
  2708                           	opt stack 20
  2709                           
  2710                           ;pin_manager.c: 69: LATE = 0x00;
  2711                           
  2712                           ; BSR set to: 15
  2713                           ;incstack = 0
  2714  002D92  0E00               	movlw	0
  2715  002D94  6E8D               	movwf	3981,c	;volatile
  2716                           
  2717                           ;pin_manager.c: 70: LATD = 0x00;
  2718  002D96  0E00               	movlw	0
  2719  002D98  6E8C               	movwf	3980,c	;volatile
  2720                           
  2721                           ;pin_manager.c: 71: LATA = 0x00;
  2722  002D9A  0E00               	movlw	0
  2723  002D9C  6E89               	movwf	3977,c	;volatile
  2724                           
  2725                           ;pin_manager.c: 72: LATB = 0x00;
  2726  002D9E  0E00               	movlw	0
  2727  002DA0  6E8A               	movwf	3978,c	;volatile
  2728                           
  2729                           ;pin_manager.c: 73: LATC = 0x00;
  2730  002DA2  0E00               	movlw	0
  2731  002DA4  6E8B               	movwf	3979,c	;volatile
  2732                           
  2733                           ;pin_manager.c: 78: TRISE = 0x05;
  2734  002DA6  0E05               	movlw	5
  2735  002DA8  6E96               	movwf	3990,c	;volatile
  2736                           
  2737                           ;pin_manager.c: 79: TRISA = 0x01;
  2738  002DAA  0E01               	movlw	1
  2739  002DAC  6E92               	movwf	3986,c	;volatile
  2740                           
  2741                           ;pin_manager.c: 80: TRISB = 0xFF;
  2742  002DAE  6893               	setf	3987,c	;volatile
  2743                           
  2744                           ;pin_manager.c: 81: TRISC = 0x3A;
  2745  002DB0  0E3A               	movlw	58
  2746  002DB2  6E94               	movwf	3988,c	;volatile
  2747                           
  2748                           ;pin_manager.c: 82: TRISD = 0x00;
  2749  002DB4  0E00               	movlw	0
  2750  002DB6  6E95               	movwf	3989,c	;volatile
  2751                           
  2752                           ;pin_manager.c: 87: ANCON0 = 0x00;
  2753  002DB8  0E00               	movlw	0
  2754  002DBA  010F               	movlb	15	; () banked
  2755  002DBC  6F5D               	movwf	93,b	;volatile
  2756                           
  2757                           ;pin_manager.c: 88: ANCON1 = 0x00;
  2758  002DBE  0E00               	movlw	0
  2759  002DC0  6F5C               	movwf	92,b	;volatile
  2760                           
  2761                           ;pin_manager.c: 94: WPUB = 0x00;
  2762  002DC2  0E00               	movlw	0
  2763  002DC4  6F5B               	movwf	91,b	;volatile
  2764                           
  2765                           ; BSR set to: 15
  2766                           ;pin_manager.c: 102: IOCBbits.IOCB4 = 1;
  2767  002DC6  895A               	bsf	90,4,b	;volatile
  2768                           
  2769                           ; BSR set to: 15
  2770                           ;pin_manager.c: 103: IOCBbits.IOCB5 = 1;
  2771  002DC8  8B5A               	bsf	90,5,b	;volatile
  2772                           
  2773                           ; BSR set to: 15
  2774                           ;pin_manager.c: 109: INTCONbits.RBIE = 1;
  2775  002DCA  86F2               	bsf	intcon,3,c	;volatile
  2776                           
  2777                           ; BSR set to: 15
  2778  002DCC  0012               	return		;funcret
  2779  002DCE                     __end_of_PIN_MANAGER_Initialize:
  2780                           	opt stack 0
  2781                           tblptru	equ	0xFF8
  2782                           tblptrh	equ	0xFF7
  2783                           tblptrl	equ	0xFF6
  2784                           tablat	equ	0xFF5
  2785                           intcon	equ	0xFF2
  2786                           postinc0	equ	0xFEE
  2787                           wreg	equ	0xFE8
  2788                           postdec1	equ	0xFE5
  2789                           fsr1l	equ	0xFE1
  2790                           
  2791 ;; *************** function _OSCILLATOR_Initialize *****************
  2792 ;; Defined at:
  2793 ;;		line 124 in file "mcc_generated_files/mcc.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2811 ;;Total ram usage:        0 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    9
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_SYSTEM_Initialize
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text11
  2822  00329C                     __ptext11:
  2823                           	opt stack 0
  2824  00329C                     _OSCILLATOR_Initialize:
  2825                           	opt stack 20
  2826                           
  2827                           ;mcc.c: 127: OSCCON = 0x60;
  2828                           
  2829                           ; BSR set to: 15
  2830                           ;incstack = 0
  2831  00329C  0E60               	movlw	96
  2832  00329E  6ED3               	movwf	4051,c	;volatile
  2833                           
  2834                           ;mcc.c: 129: OSCCON2 = 0x00;
  2835  0032A0  0E00               	movlw	0
  2836  0032A2  6ED2               	movwf	4050,c	;volatile
  2837                           
  2838                           ;mcc.c: 131: OSCTUNE = 0x00;
  2839  0032A4  0E00               	movlw	0
  2840  0032A6  6E9B               	movwf	3995,c	;volatile
  2841                           
  2842                           ;mcc.c: 133: REFOCON = 0x00;
  2843  0032A8  0E00               	movlw	0
  2844  0032AA  6E9A               	movwf	3994,c	;volatile
  2845  0032AC  0012               	return		;funcret
  2846  0032AE                     __end_of_OSCILLATOR_Initialize:
  2847                           	opt stack 0
  2848                           tblptru	equ	0xFF8
  2849                           tblptrh	equ	0xFF7
  2850                           tblptrl	equ	0xFF6
  2851                           tablat	equ	0xFF5
  2852                           intcon	equ	0xFF2
  2853                           postinc0	equ	0xFEE
  2854                           wreg	equ	0xFE8
  2855                           postdec1	equ	0xFE5
  2856                           fsr1l	equ	0xFE1
  2857                           
  2858 ;; *************** function _INTERRUPT_Initialize *****************
  2859 ;; Defined at:
  2860 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;		None
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      void 
  2867 ;; Registers used:
  2868 ;;		None
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2878 ;;Total ram usage:        0 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    9
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_SYSTEM_Initialize
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text12
  2889  0032CA                     __ptext12:
  2890                           	opt stack 0
  2891  0032CA                     _INTERRUPT_Initialize:
  2892                           	opt stack 20
  2893                           
  2894                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2895                           
  2896                           ;incstack = 0
  2897  0032CA  9ED0               	bcf	4048,7,c	;volatile
  2898  0032CC  0012               	return		;funcret
  2899  0032CE                     __end_of_INTERRUPT_Initialize:
  2900                           	opt stack 0
  2901                           tblptru	equ	0xFF8
  2902                           tblptrh	equ	0xFF7
  2903                           tblptrl	equ	0xFF6
  2904                           tablat	equ	0xFF5
  2905                           intcon	equ	0xFF2
  2906                           postinc0	equ	0xFEE
  2907                           wreg	equ	0xFE8
  2908                           postdec1	equ	0xFE5
  2909                           fsr1l	equ	0xFE1
  2910                           
  2911 ;; *************** function _GLCD_Initalize *****************
  2912 ;; Defined at:
  2913 ;;		line 15 in file "ks0108lib/KS0108.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;  i               1   11[BANK0 ] unsigned char 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2930 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2931 ;;Total ram usage:        1 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:   12
  2934 ;; This function calls:
  2935 ;;		_GLCD_InitializePorts
  2936 ;;		_GLCD_WriteCommand
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text13
  2943  0031D0                     __ptext13:
  2944                           	opt stack 0
  2945  0031D0                     _GLCD_Initalize:
  2946                           	opt stack 18
  2947                           
  2948                           ;KS0108.c: 17: unsigned char i;
  2949                           ;KS0108.c: 18: GLCD_InitializePorts();
  2950                           
  2951                           ;incstack = 0
  2952  0031D0  EC5C  F019         	call	_GLCD_InitializePorts	;wreg free
  2953                           
  2954                           ;KS0108.c: 19: for(i = 0; i < 3; i++)
  2955  0031D4  0E00               	movlw	0
  2956  0031D6  0100               	movlb	0	; () banked
  2957  0031D8  6F6B               	movwf	GLCD_Initalize@i& (0+255),b
  2958  0031DA                     l5691:
  2959                           
  2960                           ; BSR set to: 0
  2961  0031DA  0E02               	movlw	2
  2962  0031DC  656B               	cpfsgt	GLCD_Initalize@i& (0+255),b
  2963  0031DE  D001               	goto	l615
  2964  0031E0  0012               	return	
  2965  0031E2                     l615:
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;KS0108.c: 20: GLCD_WriteCommand((0x3E | 0x01), i);
  2969                           
  2970                           ; BSR set to: 0
  2971  0031E2  C06B  F068         	movff	GLCD_Initalize@i,GLCD_WriteCommand@controller
  2972  0031E6  0E3F               	movlw	63
  2973  0031E8  EC7B  F017         	call	_GLCD_WriteCommand
  2974  0031EC  0100               	movlb	0	; () banked
  2975  0031EE  2B6B               	incf	GLCD_Initalize@i& (0+255),f,b
  2976  0031F0  D7F4               	goto	l5691
  2977  0031F2                     __end_of_GLCD_Initalize:
  2978                           	opt stack 0
  2979                           tblptru	equ	0xFF8
  2980                           tblptrh	equ	0xFF7
  2981                           tblptrl	equ	0xFF6
  2982                           tablat	equ	0xFF5
  2983                           intcon	equ	0xFF2
  2984                           postinc0	equ	0xFEE
  2985                           wreg	equ	0xFE8
  2986                           postdec1	equ	0xFE5
  2987                           fsr1l	equ	0xFE1
  2988                           
  2989 ;; *************** function _GLCD_InitializePorts *****************
  2990 ;; Defined at:
  2991 ;;		line 31 in file "ks0108lib/KS0108-PIC18.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    9
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_GLCD_Initalize
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text14
  3020  0032B8                     __ptext14:
  3021                           	opt stack 0
  3022  0032B8                     _GLCD_InitializePorts:
  3023                           	opt stack 20
  3024                           
  3025                           ;KS0108-PIC18.c: 33: PORTA |= ((1 << 5) | (1 << 6) | (1 << 7));
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;incstack = 0
  3029  0032B8  0EE0               	movlw	224
  3030  0032BA  1280               	iorwf	3968,f,c	;volatile
  3031                           
  3032                           ;KS0108-PIC18.c: 34: TRISA &= ~((1 << 5) | (1 << 6) | (1 << 7) | (1 << 2) | (1 << 1) | (
      +                          1 << 3));
  3033  0032BC  0E11               	movlw	17
  3034  0032BE  1692               	andwf	3986,f,c	;volatile
  3035  0032C0  0012               	return		;funcret
  3036  0032C2                     __end_of_GLCD_InitializePorts:
  3037                           	opt stack 0
  3038                           tblptru	equ	0xFF8
  3039                           tblptrh	equ	0xFF7
  3040                           tblptrl	equ	0xFF6
  3041                           tablat	equ	0xFF5
  3042                           intcon	equ	0xFF2
  3043                           postinc0	equ	0xFEE
  3044                           wreg	equ	0xFE8
  3045                           postdec1	equ	0xFE5
  3046                           fsr1l	equ	0xFE1
  3047                           
  3048 ;; *************** function _Check_Buttons *****************
  3049 ;; Defined at:
  3050 ;;		line 127 in file "main.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3066 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3067 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3068 ;;Total ram usage:        1 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:   16
  3071 ;; This function calls:
  3072 ;;		_Draw_Arrow
  3073 ;;		_Draw_Brightness_Menu
  3074 ;;		_Draw_Start_Colors_Menu
  3075 ;;		_Draw_runTime_Menu
  3076 ;;		_Initialize_Menus
  3077 ;;		_PWM2_LoadDutyValue
  3078 ;;		_Set_Colors
  3079 ;; This function is called by:
  3080 ;;		_main
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text15
  3085  000FA6                     __ptext15:
  3086                           	opt stack 0
  3087  000FA6                     _Check_Buttons:
  3088                           	opt stack 14
  3089                           
  3090                           ;main.c: 133: if(!PORTBbits.RB2)
  3091                           
  3092                           ;incstack = 0
  3093  000FA6  B481               	btfsc	3969,2,c	;volatile
  3094  000FA8  0012               	return	
  3095                           
  3096                           ;main.c: 134: {
  3097                           ;main.c: 135: _delay((unsigned long)((10)*(8000000/4000.0)));
  3098  000FAA  0E1A               	movlw	26
  3099  000FAC  0100               	movlb	0	; () banked
  3100  000FAE  6FA7               	movwf	??_Check_Buttons& (0+255),b
  3101  000FB0  0EF8               	movlw	248
  3102  000FB2                     u4777:
  3103  000FB2  2EE8               	decfsz	wreg,f,c
  3104  000FB4  D7FE               	bra	u4777
  3105  000FB6  2FA7               	decfsz	??_Check_Buttons& (0+255),f,b
  3106  000FB8  D7FC               	bra	u4777
  3107  000FBA  F000               	nop	
  3108                           
  3109                           ;main.c: 137: if(!PORTBbits.RB2)
  3110  000FBC  B481               	btfsc	3969,2,c	;volatile
  3111  000FBE  0012               	return	
  3112  000FC0  D0B5               	goto	l558
  3113  000FC2                     
  3114                           ;main.c: 141: if(currentContext == mainMenu)
  3115  000FC2  0100               	movlb	0	; () banked
  3116  000FC4  51CC               	movf	_currentContext& (0+255),w,b
  3117  000FC6  B4D8               	btfsc	status,2,c
  3118  000FC8  D04F               	goto	l537
  3119  000FCA  D062               	goto	l536
  3120  000FCC                     
  3121                           ;main.c: 146: currentContext = runTime;
  3122                           
  3123                           ; BSR set to: 0
  3124  000FCC  0E01               	movlw	1
  3125  000FCE  0100               	movlb	0	; () banked
  3126  000FD0  6FCC               	movwf	_currentContext& (0+255),b
  3127                           
  3128                           ;main.c: 147: runTimeContext = runTimeSelection;
  3129  000FD2  0E00               	movlw	0
  3130  000FD4  6FCB               	movwf	_runTimeContext& (0+255),b
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;main.c: 148: Draw_runTime_Menu();
  3134  000FD6  EC3F  F009         	call	_Draw_runTime_Menu	;wreg free
  3135                           
  3136                           ;main.c: 149: break;
  3137  000FDA  D0A8               	goto	l558
  3138  000FDC                     
  3139                           ;main.c: 151: currentContext = brightnessMenu;
  3140  000FDC  0E02               	movlw	2
  3141  000FDE  0100               	movlb	0	; () banked
  3142  000FE0  6FCC               	movwf	_currentContext& (0+255),b
  3143                           
  3144                           ;main.c: 152: brightnessContext = brightness;
  3145  000FE2  0E00               	movlw	0
  3146  000FE4  6FCA               	movwf	_brightnessContext& (0+255),b
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;main.c: 153: Draw_Brightness_Menu();
  3150  000FE6  ECA1  F00C         	call	_Draw_Brightness_Menu	;wreg free
  3151                           
  3152                           ;main.c: 154: Set_Colors(redStart, greenStart, blueStart);
  3153  000FEA  C0AF  F086         	movff	_redStart,Set_Colors@Red
  3154  000FEE  C0B0  F087         	movff	_redStart+1,Set_Colors@Red+1
  3155  000FF2  C0B1  F088         	movff	_redStart+2,Set_Colors@Red+2
  3156  000FF6  C0AC  F089         	movff	_greenStart,Set_Colors@Green
  3157  000FFA  C0AD  F08A         	movff	_greenStart+1,Set_Colors@Green+1
  3158  000FFE  C0AE  F08B         	movff	_greenStart+2,Set_Colors@Green+2
  3159  001002  C0A9  F08C         	movff	_blueStart,Set_Colors@Blue
  3160  001006  C0AA  F08D         	movff	_blueStart+1,Set_Colors@Blue+1
  3161  00100A  C0AB  F08E         	movff	_blueStart+2,Set_Colors@Blue+2
  3162  00100E  EC2E  F003         	call	_Set_Colors	;wreg free
  3163                           
  3164                           ;main.c: 155: break;
  3165  001012  D08C               	goto	l558
  3166  001014                     
  3167                           ;main.c: 157: currentContext = startColors;
  3168  001014  0E03               	movlw	3
  3169  001016  0100               	movlb	0	; () banked
  3170  001018  6FCC               	movwf	_currentContext& (0+255),b
  3171                           
  3172                           ;main.c: 158: startColorsContext = startRed;
  3173  00101A  0E00               	movlw	0
  3174  00101C  6FC9               	movwf	_startColorsContext& (0+255),b
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;main.c: 159: Set_Colors(redStart, greenStart, blueStart);
  3178  00101E  C0AF  F086         	movff	_redStart,Set_Colors@Red
  3179  001022  C0B0  F087         	movff	_redStart+1,Set_Colors@Red+1
  3180  001026  C0B1  F088         	movff	_redStart+2,Set_Colors@Red+2
  3181  00102A  C0AC  F089         	movff	_greenStart,Set_Colors@Green
  3182  00102E  C0AD  F08A         	movff	_greenStart+1,Set_Colors@Green+1
  3183  001032  C0AE  F08B         	movff	_greenStart+2,Set_Colors@Green+2
  3184  001036  C0A9  F08C         	movff	_blueStart,Set_Colors@Blue
  3185  00103A  C0AA  F08D         	movff	_blueStart+1,Set_Colors@Blue+1
  3186  00103E  C0AB  F08E         	movff	_blueStart+2,Set_Colors@Blue+2
  3187  001042  EC2E  F003         	call	_Set_Colors	;wreg free
  3188                           
  3189                           ;main.c: 160: Draw_Start_Colors_Menu();
  3190  001046  EC46  F005         	call	_Draw_Start_Colors_Menu	;wreg free
  3191                           
  3192                           ;main.c: 161: break;
  3193  00104A  D070               	goto	l558
  3194  00104C                     
  3195                           ;main.c: 163: currentContext = endColors;
  3196  00104C  0E04               	movlw	4
  3197  00104E  D003               	goto	L2
  3198  001050                     
  3199                           ;main.c: 166: currentContext = backlightMenu;
  3200                           
  3201                           ; BSR set to: 0
  3202  001050  0E05               	movlw	5
  3203  001052  D001               	goto	L2
  3204  001054                     
  3205                           ;main.c: 169: currentContext = selectStateMenu;
  3206                           
  3207                           ; BSR set to: 0
  3208  001054  0E06               	movlw	6
  3209  001056                     L2:
  3210  001056  0100               	movlb	0	; () banked
  3211  001058  6FCC               	movwf	_currentContext& (0+255),b
  3212                           
  3213                           ;main.c: 170: break;
  3214  00105A  D068               	goto	l558
  3215  00105C                     
  3216                           ;main.c: 172: currentContext = mainMenu;
  3217                           
  3218                           ; BSR set to: 0
  3219  00105C  0E00               	movlw	0
  3220  00105E  0100               	movlb	0	; () banked
  3221  001060  6FCC               	movwf	_currentContext& (0+255),b
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;main.c: 173: Initialize_Menus();
  3225  001062  EC16  F002         	call	_Initialize_Menus	;wreg free
  3226                           
  3227                           ;main.c: 175: }
  3228                           
  3229                           ;main.c: 174: break;
  3230  001066  D062               	goto	l558
  3231  001068                     l537:
  3232  001068  505D               	movf	_mainState,w,c
  3233                           
  3234                           ; Switch size 1, requested type "space"
  3235                           ; Number of cases is 6, Range of values is 2 to 7
  3236                           ; switch strategies available:
  3237                           ; Name         Instructions Cycles
  3238                           ; simple_byte           19    10 (average)
  3239                           ;	Chosen strategy is simple_byte
  3240  00106A  0A02               	xorlw	2	; case 2
  3241  00106C  B4D8               	btfsc	status,2,c
  3242  00106E  D7AE               	goto	l538
  3243  001070  0A01               	xorlw	1	; case 3
  3244  001072  B4D8               	btfsc	status,2,c
  3245  001074  D7B3               	goto	l540
  3246  001076  0A07               	xorlw	7	; case 4
  3247  001078  B4D8               	btfsc	status,2,c
  3248  00107A  D7CC               	goto	l541
  3249  00107C  0A01               	xorlw	1	; case 5
  3250  00107E  B4D8               	btfsc	status,2,c
  3251  001080  D7E5               	goto	l542
  3252  001082  0A03               	xorlw	3	; case 6
  3253  001084  B4D8               	btfsc	status,2,c
  3254  001086  D7E4               	goto	l543
  3255  001088  0A01               	xorlw	1	; case 7
  3256  00108A  B4D8               	btfsc	status,2,c
  3257  00108C  D7E3               	goto	l544
  3258  00108E  D7E6               	goto	l545
  3259  001090                     l536:
  3260                           
  3261                           ;main.c: 178: else if(currentContext == runTime)
  3262  001090  0100               	movlb	0	; () banked
  3263  001092  05CC               	decf	_currentContext& (0+255),w,b
  3264  001094  A4D8               	btfss	status,2,c
  3265  001096  D00B               	goto	l547
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;main.c: 179: {
  3269                           ;main.c: 180: if(runTimeContext == runTimeBack)
  3270  001098  0E02               	movlw	2
  3271  00109A  19CB               	xorwf	_runTimeContext& (0+255),w,b
  3272  00109C  A4D8               	btfss	status,2,c
  3273  00109E  D03A               	goto	l556
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;main.c: 181: {
  3277                           ;main.c: 183: currentContext = mainMenu;
  3278  0010A0  0E00               	movlw	0
  3279  0010A2  6FCC               	movwf	_currentContext& (0+255),b
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;main.c: 184: Initialize_Menus();
  3283  0010A4  EC16  F002         	call	_Initialize_Menus	;wreg free
  3284                           
  3285                           ;main.c: 185: }
  3286  0010A8  D041               	goto	l558
  3287  0010AA                     u4560:
  3288  0010AA  6FC8               	movwf	_adjustValues& (0+255),b
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;main.c: 191: }
  3292                           ;main.c: 192: }
  3293  0010AC  D03F               	goto	l558
  3294  0010AE                     l547:
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;main.c: 194: else if(currentContext == brightnessMenu)
  3298                           
  3299                           ; BSR set to: 0
  3300  0010AE  0E02               	movlw	2
  3301  0010B0  19CC               	xorwf	_currentContext& (0+255),w,b
  3302  0010B2  A4D8               	btfss	status,2,c
  3303  0010B4  D00E               	goto	l551
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;main.c: 195: {
  3307                           ;main.c: 196: if(brightnessContext == brightnessBack)
  3308  0010B6  05CA               	decf	_brightnessContext& (0+255),w,b
  3309  0010B8  A4D8               	btfss	status,2,c
  3310  0010BA  D02C               	goto	l556
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;main.c: 197: {
  3314                           ;main.c: 199: currentContext = mainMenu;
  3315  0010BC  0E00               	movlw	0
  3316  0010BE  6FCC               	movwf	_currentContext& (0+255),b
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;main.c: 200: PWM2_LoadDutyValue(0);
  3320  0010C0  0E00               	movlw	0
  3321  0010C2  6F70               	movwf	(PWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  3322  0010C4  0E00               	movlw	0
  3323  0010C6  6F6F               	movwf	PWM2_LoadDutyValue@dutyValue& (0+255),b
  3324  0010C8  EC23  F017         	call	_PWM2_LoadDutyValue	;wreg free
  3325                           
  3326                           ;main.c: 201: Initialize_Menus();
  3327  0010CC  EC16  F002         	call	_Initialize_Menus	;wreg free
  3328                           
  3329                           ;main.c: 202: }
  3330  0010D0  D02D               	goto	l558
  3331  0010D2                     l551:
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;main.c: 210: else if(currentContext == startColors)
  3335                           
  3336                           ; BSR set to: 0
  3337  0010D2  0E03               	movlw	3
  3338  0010D4  19CC               	xorwf	_currentContext& (0+255),w,b
  3339  0010D6  A4D8               	btfss	status,2,c
  3340  0010D8  D025               	goto	l555
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;main.c: 211: {
  3344                           ;main.c: 212: if(startColorsContext == startColorsBack)
  3345  0010DA  0E03               	movlw	3
  3346  0010DC  19C9               	xorwf	_startColorsContext& (0+255),w,b
  3347  0010DE  A4D8               	btfss	status,2,c
  3348  0010E0  D019               	goto	l556
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;main.c: 213: {
  3352                           ;main.c: 215: currentContext = mainMenu;
  3353  0010E2  0E00               	movlw	0
  3354  0010E4  6FCC               	movwf	_currentContext& (0+255),b
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;main.c: 216: Set_Colors(0,0,0);
  3358  0010E6  0E00               	movlw	0
  3359  0010E8  6F86               	movwf	Set_Colors@Red& (0+255),b
  3360  0010EA  0E00               	movlw	0
  3361  0010EC  6F87               	movwf	(Set_Colors@Red+1)& (0+255),b
  3362  0010EE  0E00               	movlw	0
  3363  0010F0  6F88               	movwf	(Set_Colors@Red+2)& (0+255),b
  3364  0010F2  0E00               	movlw	0
  3365  0010F4  6F89               	movwf	Set_Colors@Green& (0+255),b
  3366  0010F6  0E00               	movlw	0
  3367  0010F8  6F8A               	movwf	(Set_Colors@Green+1)& (0+255),b
  3368  0010FA  0E00               	movlw	0
  3369  0010FC  6F8B               	movwf	(Set_Colors@Green+2)& (0+255),b
  3370  0010FE  0E00               	movlw	0
  3371  001100  6F8C               	movwf	Set_Colors@Blue& (0+255),b
  3372  001102  0E00               	movlw	0
  3373  001104  6F8D               	movwf	(Set_Colors@Blue+1)& (0+255),b
  3374  001106  0E00               	movlw	0
  3375  001108  6F8E               	movwf	(Set_Colors@Blue+2)& (0+255),b
  3376  00110A  EC2E  F003         	call	_Set_Colors	;wreg free
  3377                           
  3378                           ;main.c: 217: Initialize_Menus();
  3379  00110E  EC16  F002         	call	_Initialize_Menus	;wreg free
  3380                           
  3381                           ;main.c: 218: }
  3382  001112  D00C               	goto	l558
  3383  001114                     l556:
  3384                           
  3385                           ;main.c: 219: else
  3386                           ;main.c: 220: {
  3387                           ;main.c: 221: adjustValues = !adjustValues;
  3388  001114  0100               	movlb	0	; () banked
  3389  001116  51C8               	movf	_adjustValues& (0+255),w,b
  3390  001118  A4D8               	btfss	status,2,c
  3391  00111A  D002               	goto	u4630
  3392  00111C  0E01               	movlw	1
  3393  00111E  D7C5               	goto	u4560
  3394  001120                     u4630:
  3395  001120  0E00               	movlw	0
  3396  001122  D7C3               	goto	u4560
  3397  001124                     l555:
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;main.c: 225: else
  3401                           ;main.c: 226: {
  3402                           ;main.c: 227: currentContext = mainMenu;
  3403                           
  3404                           ; BSR set to: 0
  3405  001124  0E00               	movlw	0
  3406  001126  6FCC               	movwf	_currentContext& (0+255),b
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;main.c: 228: Initialize_Menus();
  3410  001128  EC16  F002         	call	_Initialize_Menus	;wreg free
  3411  00112C                     l558:
  3412  00112C  A481               	btfss	3969,2,c	;volatile
  3413  00112E  D749               	goto	l535
  3414                           
  3415                           ;main.c: 229: }
  3416                           ;main.c: 231: Draw_Arrow();
  3417  001130  EC91  F013         	call	_Draw_Arrow	;wreg free
  3418  001134  0012               	return	
  3419  001136                     __end_of_Check_Buttons:
  3420                           	opt stack 0
  3421                           tblptru	equ	0xFF8
  3422                           tblptrh	equ	0xFF7
  3423                           tblptrl	equ	0xFF6
  3424                           tablat	equ	0xFF5
  3425                           intcon	equ	0xFF2
  3426                           postinc0	equ	0xFEE
  3427                           wreg	equ	0xFE8
  3428                           postdec1	equ	0xFE5
  3429                           fsr1l	equ	0xFE1
  3430                           status	equ	0xFD8
  3431                           
  3432 ;; *************** function _Set_Colors *****************
  3433 ;; Defined at:
  3434 ;;		line 389 in file "mcc_generated_files/pin_manager.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  Red             3   38[BANK0 ] float 
  3437 ;;  Green           3   41[BANK0 ] float 
  3438 ;;  Blue            3   44[BANK0 ] float 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  appliedBlue     3   53[BANK0 ] float 
  3441 ;;  appliedGreen    3   50[BANK0 ] float 
  3442 ;;  appliedRed      3   47[BANK0 ] float 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3452 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3453 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3455 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3456 ;;Total ram usage:       21 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:   11
  3459 ;; This function calls:
  3460 ;;		_PWM2_LoadDutyValue
  3461 ;;		_PWM3_LoadDutyValue
  3462 ;;		_PWM4_LoadDutyValue
  3463 ;;		___awtoft
  3464 ;;		___ftdiv
  3465 ;;		___ftmul
  3466 ;;		___fttol
  3467 ;; This function is called by:
  3468 ;;		_Check_Buttons
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text16
  3473  00065C                     __ptext16:
  3474                           	opt stack 0
  3475  00065C                     _Set_Colors:
  3476                           	opt stack 18
  3477                           
  3478                           ;pin_manager.c: 391: float appliedRed, appliedGreen, appliedBlue;
  3479                           ;pin_manager.c: 393: appliedRed = (maxBrightness * (Red/255)) * (brightnessPercent/100);
  3480                           
  3481                           ;incstack = 0
  3482  00065C  0E00               	movlw	0
  3483  00065E  0100               	movlb	0	; () banked
  3484  000660  6F6B               	movwf	___ftdiv@f2& (0+255),b
  3485  000662  0E7F               	movlw	127
  3486  000664  6F6C               	movwf	(___ftdiv@f2+1)& (0+255),b
  3487  000666  0E43               	movlw	67
  3488  000668  6F6D               	movwf	(___ftdiv@f2+2)& (0+255),b
  3489  00066A  C086  F068         	movff	Set_Colors@Red,___ftdiv@f1
  3490  00066E  C087  F069         	movff	Set_Colors@Red+1,___ftdiv@f1+1
  3491  000672  C088  F06A         	movff	Set_Colors@Red+2,___ftdiv@f1+2
  3492  000676  ECBA  F00B         	call	___ftdiv	;wreg free
  3493  00067A  C068  F07A         	movff	?___ftdiv,___ftmul@f2
  3494  00067E  C069  F07B         	movff	?___ftdiv+1,___ftmul@f2+1
  3495  000682  C06A  F07C         	movff	?___ftdiv+2,___ftmul@f2+2
  3496  000686  C0B8  F068         	movff	_maxBrightness,___awtoft@c
  3497  00068A  C0B9  F069         	movff	_maxBrightness+1,___awtoft@c+1
  3498  00068E  EC5E  F017         	call	___awtoft	;wreg free
  3499  000692  C068  F077         	movff	?___awtoft,___ftmul@f1
  3500  000696  C069  F078         	movff	?___awtoft+1,___ftmul@f1+1
  3501  00069A  C06A  F079         	movff	?___awtoft+2,___ftmul@f1+2
  3502  00069E  EC4B  F00A         	call	___ftmul	;wreg free
  3503  0006A2  C077  F098         	movff	?___ftmul,_Set_Colors$1887
  3504  0006A6  C078  F099         	movff	?___ftmul+1,_Set_Colors$1887+1
  3505  0006AA  C079  F09A         	movff	?___ftmul+2,_Set_Colors$1887+2
  3506                           
  3507                           ;pin_manager.c: 391: float appliedRed, appliedGreen, appliedBlue;
  3508                           ;pin_manager.c: 393: appliedRed = (maxBrightness * (Red/255)) * (brightnessPercent/100);
  3509  0006AE  C098  F077         	movff	_Set_Colors$1887,___ftmul@f1
  3510  0006B2  C099  F078         	movff	_Set_Colors$1887+1,___ftmul@f1+1
  3511  0006B6  C09A  F079         	movff	_Set_Colors$1887+2,___ftmul@f1+2
  3512  0006BA  0E00               	movlw	0
  3513  0006BC  0100               	movlb	0	; () banked
  3514  0006BE  6F6B               	movwf	___ftdiv@f2& (0+255),b
  3515  0006C0  0EC8               	movlw	200
  3516  0006C2  6F6C               	movwf	(___ftdiv@f2+1)& (0+255),b
  3517  0006C4  0E42               	movlw	66
  3518  0006C6  6F6D               	movwf	(___ftdiv@f2+2)& (0+255),b
  3519  0006C8  C0B5  F068         	movff	_brightnessPercent,___ftdiv@f1
  3520  0006CC  C0B6  F069         	movff	_brightnessPercent+1,___ftdiv@f1+1
  3521  0006D0  C0B7  F06A         	movff	_brightnessPercent+2,___ftdiv@f1+2
  3522  0006D4  ECBA  F00B         	call	___ftdiv	;wreg free
  3523  0006D8  C068  F07A         	movff	?___ftdiv,___ftmul@f2
  3524  0006DC  C069  F07B         	movff	?___ftdiv+1,___ftmul@f2+1
  3525  0006E0  C06A  F07C         	movff	?___ftdiv+2,___ftmul@f2+2
  3526  0006E4  EC4B  F00A         	call	___ftmul	;wreg free
  3527  0006E8  C077  F08F         	movff	?___ftmul,Set_Colors@appliedRed
  3528  0006EC  C078  F090         	movff	?___ftmul+1,Set_Colors@appliedRed+1
  3529  0006F0  C079  F091         	movff	?___ftmul+2,Set_Colors@appliedRed+2
  3530                           
  3531                           ;pin_manager.c: 394: appliedGreen = (maxBrightness * (Green/255)) * (brightnessPercent/1
      +                          00);
  3532  0006F4  0E00               	movlw	0
  3533  0006F6  0100               	movlb	0	; () banked
  3534  0006F8  6F6B               	movwf	___ftdiv@f2& (0+255),b
  3535  0006FA  0E7F               	movlw	127
  3536  0006FC  6F6C               	movwf	(___ftdiv@f2+1)& (0+255),b
  3537  0006FE  0E43               	movlw	67
  3538  000700  6F6D               	movwf	(___ftdiv@f2+2)& (0+255),b
  3539  000702  C089  F068         	movff	Set_Colors@Green,___ftdiv@f1
  3540  000706  C08A  F069         	movff	Set_Colors@Green+1,___ftdiv@f1+1
  3541  00070A  C08B  F06A         	movff	Set_Colors@Green+2,___ftdiv@f1+2
  3542  00070E  ECBA  F00B         	call	___ftdiv	;wreg free
  3543  000712  C068  F07A         	movff	?___ftdiv,___ftmul@f2
  3544  000716  C069  F07B         	movff	?___ftdiv+1,___ftmul@f2+1
  3545  00071A  C06A  F07C         	movff	?___ftdiv+2,___ftmul@f2+2
  3546  00071E  C0B8  F068         	movff	_maxBrightness,___awtoft@c
  3547  000722  C0B9  F069         	movff	_maxBrightness+1,___awtoft@c+1
  3548  000726  EC5E  F017         	call	___awtoft	;wreg free
  3549  00072A  C068  F077         	movff	?___awtoft,___ftmul@f1
  3550  00072E  C069  F078         	movff	?___awtoft+1,___ftmul@f1+1
  3551  000732  C06A  F079         	movff	?___awtoft+2,___ftmul@f1+2
  3552  000736  EC4B  F00A         	call	___ftmul	;wreg free
  3553  00073A  C077  F098         	movff	?___ftmul,_Set_Colors$1887
  3554  00073E  C078  F099         	movff	?___ftmul+1,_Set_Colors$1887+1
  3555  000742  C079  F09A         	movff	?___ftmul+2,_Set_Colors$1887+2
  3556                           
  3557                           ;pin_manager.c: 394: appliedGreen = (maxBrightness * (Green/255)) * (brightnessPercent/1
      +                          00);
  3558  000746  C098  F077         	movff	_Set_Colors$1887,___ftmul@f1
  3559  00074A  C099  F078         	movff	_Set_Colors$1887+1,___ftmul@f1+1
  3560  00074E  C09A  F079         	movff	_Set_Colors$1887+2,___ftmul@f1+2
  3561  000752  0E00               	movlw	0
  3562  000754  0100               	movlb	0	; () banked
  3563  000756  6F6B               	movwf	___ftdiv@f2& (0+255),b
  3564  000758  0EC8               	movlw	200
  3565  00075A  6F6C               	movwf	(___ftdiv@f2+1)& (0+255),b
  3566  00075C  0E42               	movlw	66
  3567  00075E  6F6D               	movwf	(___ftdiv@f2+2)& (0+255),b
  3568  000760  C0B5  F068         	movff	_brightnessPercent,___ftdiv@f1
  3569  000764  C0B6  F069         	movff	_brightnessPercent+1,___ftdiv@f1+1
  3570  000768  C0B7  F06A         	movff	_brightnessPercent+2,___ftdiv@f1+2
  3571  00076C  ECBA  F00B         	call	___ftdiv	;wreg free
  3572  000770  C068  F07A         	movff	?___ftdiv,___ftmul@f2
  3573  000774  C069  F07B         	movff	?___ftdiv+1,___ftmul@f2+1
  3574  000778  C06A  F07C         	movff	?___ftdiv+2,___ftmul@f2+2
  3575  00077C  EC4B  F00A         	call	___ftmul	;wreg free
  3576  000780  C077  F092         	movff	?___ftmul,Set_Colors@appliedGreen
  3577  000784  C078  F093         	movff	?___ftmul+1,Set_Colors@appliedGreen+1
  3578  000788  C079  F094         	movff	?___ftmul+2,Set_Colors@appliedGreen+2
  3579                           
  3580                           ;pin_manager.c: 395: appliedBlue = (maxBrightness * (Blue/255)) * (brightnessPercent/100
      +                          );
  3581  00078C  0E00               	movlw	0
  3582  00078E  0100               	movlb	0	; () banked
  3583  000790  6F6B               	movwf	___ftdiv@f2& (0+255),b
  3584  000792  0E7F               	movlw	127
  3585  000794  6F6C               	movwf	(___ftdiv@f2+1)& (0+255),b
  3586  000796  0E43               	movlw	67
  3587  000798  6F6D               	movwf	(___ftdiv@f2+2)& (0+255),b
  3588  00079A  C08C  F068         	movff	Set_Colors@Blue,___ftdiv@f1
  3589  00079E  C08D  F069         	movff	Set_Colors@Blue+1,___ftdiv@f1+1
  3590  0007A2  C08E  F06A         	movff	Set_Colors@Blue+2,___ftdiv@f1+2
  3591  0007A6  ECBA  F00B         	call	___ftdiv	;wreg free
  3592  0007AA  C068  F07A         	movff	?___ftdiv,___ftmul@f2
  3593  0007AE  C069  F07B         	movff	?___ftdiv+1,___ftmul@f2+1
  3594  0007B2  C06A  F07C         	movff	?___ftdiv+2,___ftmul@f2+2
  3595  0007B6  C0B8  F068         	movff	_maxBrightness,___awtoft@c
  3596  0007BA  C0B9  F069         	movff	_maxBrightness+1,___awtoft@c+1
  3597  0007BE  EC5E  F017         	call	___awtoft	;wreg free
  3598  0007C2  C068  F077         	movff	?___awtoft,___ftmul@f1
  3599  0007C6  C069  F078         	movff	?___awtoft+1,___ftmul@f1+1
  3600  0007CA  C06A  F079         	movff	?___awtoft+2,___ftmul@f1+2
  3601  0007CE  EC4B  F00A         	call	___ftmul	;wreg free
  3602  0007D2  C077  F098         	movff	?___ftmul,_Set_Colors$1887
  3603  0007D6  C078  F099         	movff	?___ftmul+1,_Set_Colors$1887+1
  3604  0007DA  C079  F09A         	movff	?___ftmul+2,_Set_Colors$1887+2
  3605                           
  3606                           ;pin_manager.c: 395: appliedBlue = (maxBrightness * (Blue/255)) * (brightnessPercent/100
      +                          );
  3607  0007DE  C098  F077         	movff	_Set_Colors$1887,___ftmul@f1
  3608  0007E2  C099  F078         	movff	_Set_Colors$1887+1,___ftmul@f1+1
  3609  0007E6  C09A  F079         	movff	_Set_Colors$1887+2,___ftmul@f1+2
  3610  0007EA  0E00               	movlw	0
  3611  0007EC  0100               	movlb	0	; () banked
  3612  0007EE  6F6B               	movwf	___ftdiv@f2& (0+255),b
  3613  0007F0  0EC8               	movlw	200
  3614  0007F2  6F6C               	movwf	(___ftdiv@f2+1)& (0+255),b
  3615  0007F4  0E42               	movlw	66
  3616  0007F6  6F6D               	movwf	(___ftdiv@f2+2)& (0+255),b
  3617  0007F8  C0B5  F068         	movff	_brightnessPercent,___ftdiv@f1
  3618  0007FC  C0B6  F069         	movff	_brightnessPercent+1,___ftdiv@f1+1
  3619  000800  C0B7  F06A         	movff	_brightnessPercent+2,___ftdiv@f1+2
  3620  000804  ECBA  F00B         	call	___ftdiv	;wreg free
  3621  000808  C068  F07A         	movff	?___ftdiv,___ftmul@f2
  3622  00080C  C069  F07B         	movff	?___ftdiv+1,___ftmul@f2+1
  3623  000810  C06A  F07C         	movff	?___ftdiv+2,___ftmul@f2+2
  3624  000814  EC4B  F00A         	call	___ftmul	;wreg free
  3625  000818  C077  F095         	movff	?___ftmul,Set_Colors@appliedBlue
  3626  00081C  C078  F096         	movff	?___ftmul+1,Set_Colors@appliedBlue+1
  3627  000820  C079  F097         	movff	?___ftmul+2,Set_Colors@appliedBlue+2
  3628                           
  3629                           ;pin_manager.c: 398: PWM2_LoadDutyValue(appliedRed);
  3630  000824  C08F  F060         	movff	Set_Colors@appliedRed,___fttol@f1
  3631  000828  C090  F061         	movff	Set_Colors@appliedRed+1,___fttol@f1+1
  3632  00082C  C091  F062         	movff	Set_Colors@appliedRed+2,___fttol@f1+2
  3633  000830  ECCF  F009         	call	___fttol	;wreg free
  3634  000834  C060  F06F         	movff	?___fttol,PWM2_LoadDutyValue@dutyValue
  3635  000838  C061  F070         	movff	?___fttol+1,PWM2_LoadDutyValue@dutyValue+1
  3636  00083C  EC23  F017         	call	_PWM2_LoadDutyValue	;wreg free
  3637                           
  3638                           ;pin_manager.c: 399: PWM3_LoadDutyValue(appliedBlue);
  3639  000840  C095  F060         	movff	Set_Colors@appliedBlue,___fttol@f1
  3640  000844  C096  F061         	movff	Set_Colors@appliedBlue+1,___fttol@f1+1
  3641  000848  C097  F062         	movff	Set_Colors@appliedBlue+2,___fttol@f1+2
  3642  00084C  ECCF  F009         	call	___fttol	;wreg free
  3643  000850  C060  F06F         	movff	?___fttol,PWM3_LoadDutyValue@dutyValue
  3644  000854  C061  F070         	movff	?___fttol+1,PWM3_LoadDutyValue@dutyValue+1
  3645  000858  EC05  F017         	call	_PWM3_LoadDutyValue	;wreg free
  3646                           
  3647                           ;pin_manager.c: 400: PWM4_LoadDutyValue(appliedGreen);
  3648  00085C  C092  F060         	movff	Set_Colors@appliedGreen,___fttol@f1
  3649  000860  C093  F061         	movff	Set_Colors@appliedGreen+1,___fttol@f1+1
  3650  000864  C094  F062         	movff	Set_Colors@appliedGreen+2,___fttol@f1+2
  3651  000868  ECCF  F009         	call	___fttol	;wreg free
  3652  00086C  C060  F06F         	movff	?___fttol,PWM4_LoadDutyValue@dutyValue
  3653  000870  C061  F070         	movff	?___fttol+1,PWM4_LoadDutyValue@dutyValue+1
  3654  000874  ECE7  F016         	call	_PWM4_LoadDutyValue	;wreg free
  3655  000878  0012               	return		;funcret
  3656  00087A                     __end_of_Set_Colors:
  3657                           	opt stack 0
  3658                           tblptru	equ	0xFF8
  3659                           tblptrh	equ	0xFF7
  3660                           tblptrl	equ	0xFF6
  3661                           tablat	equ	0xFF5
  3662                           intcon	equ	0xFF2
  3663                           postinc0	equ	0xFEE
  3664                           wreg	equ	0xFE8
  3665                           postdec1	equ	0xFE5
  3666                           fsr1l	equ	0xFE1
  3667                           status	equ	0xFD8
  3668                           
  3669 ;; *************** function ___ftmul *****************
  3670 ;; Defined at:
  3671 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  f1              3   23[BANK0 ] float 
  3674 ;;  f2              3   26[BANK0 ] float 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  f3_as_produc    3   33[BANK0 ] unsigned um
  3677 ;;  sign            1   37[BANK0 ] unsigned char 
  3678 ;;  cntr            1   36[BANK0 ] unsigned char 
  3679 ;;  exp             1   32[BANK0 ] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  3   23[BANK0 ] float 
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3689 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3690 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3691 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3692 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3693 ;;Total ram usage:       15 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:   10
  3696 ;; This function calls:
  3697 ;;		___ftpack
  3698 ;; This function is called by:
  3699 ;;		_Set_Colors
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text17
  3704  001496                     __ptext17:
  3705                           	opt stack 0
  3706  001496                     ___ftmul:
  3707                           	opt stack 18
  3708                           
  3709                           ;incstack = 0
  3710  001496  C079  F07D         	movff	___ftmul@f1+2,??___ftmul
  3711  00149A  0100               	movlb	0	; () banked
  3712  00149C  6B7E               	clrf	(??___ftmul+1)& (0+255),b
  3713  00149E  6B7F               	clrf	(??___ftmul+2)& (0+255),b
  3714  0014A0  3578               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  3715  0014A2  377D               	rlcf	??___ftmul& (0+255),f,b
  3716  0014A4  E301               	bnc	u3911
  3717  0014A6  817E               	bsf	(??___ftmul+1)& (0+255),0,b
  3718  0014A8                     u3911:
  3719  0014A8  517D               	movf	??___ftmul& (0+255),w,b
  3720  0014AA  6F80               	movwf	___ftmul@exp& (0+255),b
  3721  0014AC  5180               	movf	___ftmul@exp& (0+255),w,b
  3722  0014AE  A4D8               	btfss	status,2,c
  3723  0014B0  D007               	goto	l1171
  3724                           
  3725                           ; BSR set to: 0
  3726  0014B2  0E00               	movlw	0
  3727  0014B4  6F77               	movwf	?___ftmul& (0+255),b
  3728  0014B6  0E00               	movlw	0
  3729  0014B8  6F78               	movwf	(?___ftmul+1)& (0+255),b
  3730  0014BA  0E00               	movlw	0
  3731  0014BC  6F79               	movwf	(?___ftmul+2)& (0+255),b
  3732                           
  3733                           ; BSR set to: 0
  3734  0014BE  0012               	return	
  3735  0014C0                     l1171:
  3736                           
  3737                           ; BSR set to: 0
  3738                           
  3739                           ; BSR set to: 0
  3740  0014C0  C07C  F07D         	movff	___ftmul@f2+2,??___ftmul
  3741  0014C4  6B7E               	clrf	(??___ftmul+1)& (0+255),b
  3742  0014C6  6B7F               	clrf	(??___ftmul+2)& (0+255),b
  3743  0014C8  357B               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  3744  0014CA  377D               	rlcf	??___ftmul& (0+255),f,b
  3745  0014CC  E301               	bnc	u3931
  3746  0014CE  817E               	bsf	(??___ftmul+1)& (0+255),0,b
  3747  0014D0                     u3931:
  3748  0014D0  517D               	movf	??___ftmul& (0+255),w,b
  3749  0014D2  6F85               	movwf	___ftmul@sign& (0+255),b
  3750  0014D4  5185               	movf	___ftmul@sign& (0+255),w,b
  3751  0014D6  A4D8               	btfss	status,2,c
  3752  0014D8  D007               	goto	l1173
  3753                           
  3754                           ; BSR set to: 0
  3755  0014DA  0E00               	movlw	0
  3756  0014DC  6F77               	movwf	?___ftmul& (0+255),b
  3757  0014DE  0E00               	movlw	0
  3758  0014E0  6F78               	movwf	(?___ftmul+1)& (0+255),b
  3759  0014E2  0E00               	movlw	0
  3760  0014E4  6F79               	movwf	(?___ftmul+2)& (0+255),b
  3761                           
  3762                           ; BSR set to: 0
  3763  0014E6  0012               	return	
  3764  0014E8                     l1173:
  3765                           
  3766                           ; BSR set to: 0
  3767                           
  3768                           ; BSR set to: 0
  3769  0014E8  5185               	movf	___ftmul@sign& (0+255),w,b
  3770  0014EA  0F7B               	addlw	123
  3771  0014EC  2780               	addwf	___ftmul@exp& (0+255),f,b
  3772                           
  3773                           ; BSR set to: 0
  3774  0014EE  C079  F085         	movff	___ftmul@f1+2,___ftmul@sign
  3775  0014F2  517C               	movf	(___ftmul@f2+2)& (0+255),w,b
  3776  0014F4  1B85               	xorwf	___ftmul@sign& (0+255),f,b
  3777  0014F6  0E80               	movlw	128
  3778  0014F8  1785               	andwf	___ftmul@sign& (0+255),f,b
  3779                           
  3780                           ; BSR set to: 0
  3781  0014FA  8F78               	bsf	(___ftmul@f1+1)& (0+255),7,b
  3782                           
  3783                           ; BSR set to: 0
  3784  0014FC  8F7B               	bsf	(___ftmul@f2+1)& (0+255),7,b
  3785                           
  3786                           ; BSR set to: 0
  3787  0014FE  0EFF               	movlw	255
  3788  001500  177A               	andwf	___ftmul@f2& (0+255),f,b
  3789  001502  0EFF               	movlw	255
  3790  001504  177B               	andwf	(___ftmul@f2+1)& (0+255),f,b
  3791  001506  0E00               	movlw	0
  3792  001508  177C               	andwf	(___ftmul@f2+2)& (0+255),f,b
  3793                           
  3794                           ; BSR set to: 0
  3795  00150A  0E00               	movlw	0
  3796  00150C  6F81               	movwf	___ftmul@f3_as_product& (0+255),b
  3797  00150E  0E00               	movlw	0
  3798  001510  6F82               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  3799  001512  0E00               	movlw	0
  3800  001514  6F83               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  3801                           
  3802                           ; BSR set to: 0
  3803  001516  0E07               	movlw	7
  3804  001518  6F84               	movwf	___ftmul@cntr& (0+255),b
  3805  00151A                     
  3806                           ; BSR set to: 0
  3807                           
  3808                           ; BSR set to: 0
  3809  00151A  A177               	btfss	___ftmul@f1& (0+255),0,b
  3810  00151C  D006               	goto	l1175
  3811                           
  3812                           ; BSR set to: 0
  3813  00151E  517A               	movf	___ftmul@f2& (0+255),w,b
  3814  001520  2781               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3815  001522  517B               	movf	(___ftmul@f2+1)& (0+255),w,b
  3816  001524  2382               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3817  001526  517C               	movf	(___ftmul@f2+2)& (0+255),w,b
  3818  001528  2383               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3819  00152A                     l1175:
  3820                           
  3821                           ; BSR set to: 0
  3822                           
  3823                           ; BSR set to: 0
  3824  00152A  90D8               	bcf	status,0,c
  3825  00152C  3379               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3826  00152E  3378               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3827  001530  3377               	rrcf	___ftmul@f1& (0+255),f,b
  3828  001532  90D8               	bcf	status,0,c
  3829  001534  377A               	rlcf	___ftmul@f2& (0+255),f,b
  3830  001536  377B               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  3831  001538  377C               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  3832                           
  3833                           ; BSR set to: 0
  3834  00153A  2F84               	decfsz	___ftmul@cntr& (0+255),f,b
  3835  00153C  D7EE               	goto	l1174
  3836                           
  3837                           ; BSR set to: 0
  3838                           
  3839                           ; BSR set to: 0
  3840  00153E  0E09               	movlw	9
  3841  001540  6F84               	movwf	___ftmul@cntr& (0+255),b
  3842  001542                     
  3843                           ; BSR set to: 0
  3844                           
  3845                           ; BSR set to: 0
  3846  001542  A177               	btfss	___ftmul@f1& (0+255),0,b
  3847  001544  D006               	goto	l1178
  3848                           
  3849                           ; BSR set to: 0
  3850  001546  517A               	movf	___ftmul@f2& (0+255),w,b
  3851  001548  2781               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3852  00154A  517B               	movf	(___ftmul@f2+1)& (0+255),w,b
  3853  00154C  2382               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3854  00154E  517C               	movf	(___ftmul@f2+2)& (0+255),w,b
  3855  001550  2383               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3856  001552                     l1178:
  3857                           
  3858                           ; BSR set to: 0
  3859                           
  3860                           ; BSR set to: 0
  3861  001552  90D8               	bcf	status,0,c
  3862  001554  3379               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3863  001556  3378               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3864  001558  3377               	rrcf	___ftmul@f1& (0+255),f,b
  3865  00155A  90D8               	bcf	status,0,c
  3866  00155C  3383               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  3867  00155E  3382               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  3868  001560  3381               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  3869                           
  3870                           ; BSR set to: 0
  3871  001562  2F84               	decfsz	___ftmul@cntr& (0+255),f,b
  3872  001564  D7EE               	goto	l1177
  3873                           
  3874                           ; BSR set to: 0
  3875                           
  3876                           ; BSR set to: 0
  3877  001566  C081  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  3878  00156A  C082  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3879  00156E  C083  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3880  001572  C080  F063         	movff	___ftmul@exp,___ftpack@exp
  3881  001576  C085  F064         	movff	___ftmul@sign,___ftpack@sign
  3882  00157A  EC0C  F00D         	call	___ftpack	;wreg free
  3883  00157E  C060  F077         	movff	?___ftpack,?___ftmul
  3884  001582  C061  F078         	movff	?___ftpack+1,?___ftmul+1
  3885  001586  C062  F079         	movff	?___ftpack+2,?___ftmul+2
  3886  00158A  0012               	return	
  3887  00158C                     __end_of___ftmul:
  3888                           	opt stack 0
  3889                           tblptru	equ	0xFF8
  3890                           tblptrh	equ	0xFF7
  3891                           tblptrl	equ	0xFF6
  3892                           tablat	equ	0xFF5
  3893                           intcon	equ	0xFF2
  3894                           postinc0	equ	0xFEE
  3895                           wreg	equ	0xFE8
  3896                           postdec1	equ	0xFE5
  3897                           fsr1l	equ	0xFE1
  3898                           status	equ	0xFD8
  3899                           
  3900 ;; *************** function ___ftdiv *****************
  3901 ;; Defined at:
  3902 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  f1              3    8[BANK0 ] float 
  3905 ;;  f2              3   11[BANK0 ] float 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  f3              3   18[BANK0 ] float 
  3908 ;;  sign            1   22[BANK0 ] unsigned char 
  3909 ;;  exp             1   21[BANK0 ] unsigned char 
  3910 ;;  cntr            1   17[BANK0 ] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  3    8[BANK0 ] float 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3920 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3921 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3922 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3923 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3924 ;;Total ram usage:       15 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:   10
  3927 ;; This function calls:
  3928 ;;		___ftpack
  3929 ;; This function is called by:
  3930 ;;		_Set_Colors
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text18
  3935  001774                     __ptext18:
  3936                           	opt stack 0
  3937  001774                     ___ftdiv:
  3938                           	opt stack 18
  3939                           
  3940                           ;incstack = 0
  3941  001774  C06A  F06E         	movff	___ftdiv@f1+2,??___ftdiv
  3942  001778  0100               	movlb	0	; () banked
  3943  00177A  6B6F               	clrf	(??___ftdiv+1)& (0+255),b
  3944  00177C  6B70               	clrf	(??___ftdiv+2)& (0+255),b
  3945  00177E  3569               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3946  001780  376E               	rlcf	??___ftdiv& (0+255),f,b
  3947  001782  E301               	bnc	u3861
  3948  001784  816F               	bsf	(??___ftdiv+1)& (0+255),0,b
  3949  001786                     u3861:
  3950  001786  516E               	movf	??___ftdiv& (0+255),w,b
  3951  001788  6F75               	movwf	___ftdiv@exp& (0+255),b
  3952  00178A  5175               	movf	___ftdiv@exp& (0+255),w,b
  3953  00178C  A4D8               	btfss	status,2,c
  3954  00178E  D007               	goto	l1156
  3955                           
  3956                           ; BSR set to: 0
  3957  001790  0E00               	movlw	0
  3958  001792  6F68               	movwf	?___ftdiv& (0+255),b
  3959  001794  0E00               	movlw	0
  3960  001796  6F69               	movwf	(?___ftdiv+1)& (0+255),b
  3961  001798  0E00               	movlw	0
  3962  00179A  6F6A               	movwf	(?___ftdiv+2)& (0+255),b
  3963                           
  3964                           ; BSR set to: 0
  3965  00179C  0012               	return	
  3966  00179E                     l1156:
  3967                           
  3968                           ; BSR set to: 0
  3969                           
  3970                           ; BSR set to: 0
  3971  00179E  C06D  F06E         	movff	___ftdiv@f2+2,??___ftdiv
  3972  0017A2  6B6F               	clrf	(??___ftdiv+1)& (0+255),b
  3973  0017A4  6B70               	clrf	(??___ftdiv+2)& (0+255),b
  3974  0017A6  356C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3975  0017A8  376E               	rlcf	??___ftdiv& (0+255),f,b
  3976  0017AA  E301               	bnc	u3881
  3977  0017AC  816F               	bsf	(??___ftdiv+1)& (0+255),0,b
  3978  0017AE                     u3881:
  3979  0017AE  516E               	movf	??___ftdiv& (0+255),w,b
  3980  0017B0  6F76               	movwf	___ftdiv@sign& (0+255),b
  3981  0017B2  5176               	movf	___ftdiv@sign& (0+255),w,b
  3982  0017B4  A4D8               	btfss	status,2,c
  3983  0017B6  D007               	goto	l1158
  3984                           
  3985                           ; BSR set to: 0
  3986  0017B8  0E00               	movlw	0
  3987  0017BA  6F68               	movwf	?___ftdiv& (0+255),b
  3988  0017BC  0E00               	movlw	0
  3989  0017BE  6F69               	movwf	(?___ftdiv+1)& (0+255),b
  3990  0017C0  0E00               	movlw	0
  3991  0017C2  6F6A               	movwf	(?___ftdiv+2)& (0+255),b
  3992                           
  3993                           ; BSR set to: 0
  3994  0017C4  0012               	return	
  3995  0017C6                     l1158:
  3996                           
  3997                           ; BSR set to: 0
  3998                           
  3999                           ; BSR set to: 0
  4000  0017C6  0E00               	movlw	0
  4001  0017C8  6F72               	movwf	___ftdiv@f3& (0+255),b
  4002  0017CA  0E00               	movlw	0
  4003  0017CC  6F73               	movwf	(___ftdiv@f3+1)& (0+255),b
  4004  0017CE  0E00               	movlw	0
  4005  0017D0  6F74               	movwf	(___ftdiv@f3+2)& (0+255),b
  4006                           
  4007                           ; BSR set to: 0
  4008  0017D2  5176               	movf	___ftdiv@sign& (0+255),w,b
  4009  0017D4  0F89               	addlw	137
  4010  0017D6  5F75               	subwf	___ftdiv@exp& (0+255),f,b
  4011                           
  4012                           ; BSR set to: 0
  4013  0017D8  C06A  F076         	movff	___ftdiv@f1+2,___ftdiv@sign
  4014                           
  4015                           ; BSR set to: 0
  4016  0017DC  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4017  0017DE  1B76               	xorwf	___ftdiv@sign& (0+255),f,b
  4018                           
  4019                           ; BSR set to: 0
  4020  0017E0  0E80               	movlw	128
  4021  0017E2  1776               	andwf	___ftdiv@sign& (0+255),f,b
  4022                           
  4023                           ; BSR set to: 0
  4024  0017E4  8F69               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  4025                           
  4026                           ; BSR set to: 0
  4027  0017E6  0EFF               	movlw	255
  4028  0017E8  1768               	andwf	___ftdiv@f1& (0+255),f,b
  4029  0017EA  0EFF               	movlw	255
  4030  0017EC  1769               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  4031  0017EE  0E00               	movlw	0
  4032  0017F0  176A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  4033                           
  4034                           ; BSR set to: 0
  4035  0017F2  8F6C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  4036                           
  4037                           ; BSR set to: 0
  4038  0017F4  0EFF               	movlw	255
  4039  0017F6  176B               	andwf	___ftdiv@f2& (0+255),f,b
  4040  0017F8  0EFF               	movlw	255
  4041  0017FA  176C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  4042  0017FC  0E00               	movlw	0
  4043  0017FE  176D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  4044                           
  4045                           ; BSR set to: 0
  4046  001800  0E18               	movlw	24
  4047  001802  6F71               	movwf	___ftdiv@cntr& (0+255),b
  4048  001804                     
  4049                           ; BSR set to: 0
  4050                           
  4051                           ; BSR set to: 0
  4052  001804  90D8               	bcf	status,0,c
  4053  001806  3772               	rlcf	___ftdiv@f3& (0+255),f,b
  4054  001808  3773               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  4055  00180A  3774               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  4056                           
  4057                           ; BSR set to: 0
  4058  00180C  516B               	movf	___ftdiv@f2& (0+255),w,b
  4059  00180E  5D68               	subwf	___ftdiv@f1& (0+255),w,b
  4060  001810  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4061  001812  5969               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  4062  001814  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4063  001816  596A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  4064  001818  A0D8               	btfss	status,0,c
  4065  00181A  D007               	goto	l1160
  4066                           
  4067                           ; BSR set to: 0
  4068  00181C  516B               	movf	___ftdiv@f2& (0+255),w,b
  4069  00181E  5F68               	subwf	___ftdiv@f1& (0+255),f,b
  4070  001820  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4071  001822  5B69               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  4072  001824  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4073  001826  5B6A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  4074                           
  4075                           ; BSR set to: 0
  4076  001828  8172               	bsf	___ftdiv@f3& (0+255),0,b
  4077  00182A                     l1160:
  4078                           
  4079                           ; BSR set to: 0
  4080  00182A  90D8               	bcf	status,0,c
  4081  00182C  3768               	rlcf	___ftdiv@f1& (0+255),f,b
  4082  00182E  3769               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  4083  001830  376A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  4084                           
  4085                           ; BSR set to: 0
  4086  001832  2F71               	decfsz	___ftdiv@cntr& (0+255),f,b
  4087  001834  D7E7               	goto	l1159
  4088                           
  4089                           ; BSR set to: 0
  4090                           
  4091                           ; BSR set to: 0
  4092  001836  C072  F060         	movff	___ftdiv@f3,___ftpack@arg
  4093  00183A  C073  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4094  00183E  C074  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4095  001842  C075  F063         	movff	___ftdiv@exp,___ftpack@exp
  4096  001846  C076  F064         	movff	___ftdiv@sign,___ftpack@sign
  4097  00184A  EC0C  F00D         	call	___ftpack	;wreg free
  4098  00184E  C060  F068         	movff	?___ftpack,?___ftdiv
  4099  001852  C061  F069         	movff	?___ftpack+1,?___ftdiv+1
  4100  001856  C062  F06A         	movff	?___ftpack+2,?___ftdiv+2
  4101  00185A  0012               	return	
  4102  00185C                     __end_of___ftdiv:
  4103                           	opt stack 0
  4104                           tblptru	equ	0xFF8
  4105                           tblptrh	equ	0xFF7
  4106                           tblptrl	equ	0xFF6
  4107                           tablat	equ	0xFF5
  4108                           intcon	equ	0xFF2
  4109                           postinc0	equ	0xFEE
  4110                           wreg	equ	0xFE8
  4111                           postdec1	equ	0xFE5
  4112                           fsr1l	equ	0xFE1
  4113                           status	equ	0xFD8
  4114                           
  4115 ;; *************** function ___awtoft *****************
  4116 ;; Defined at:
  4117 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  c               2    8[BANK0 ] int 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;  sign            1   11[BANK0 ] unsigned char 
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  3    8[BANK0 ] float 
  4124 ;; Registers used:
  4125 ;;		wreg, status,2, status,0, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4131 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4132 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4134 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4135 ;;Total ram usage:        4 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:   10
  4138 ;; This function calls:
  4139 ;;		___ftpack
  4140 ;; This function is called by:
  4141 ;;		_Set_Colors
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	text19
  4146  002EBC                     __ptext19:
  4147                           	opt stack 0
  4148  002EBC                     ___awtoft:
  4149                           	opt stack 18
  4150                           
  4151                           ;incstack = 0
  4152  002EBC  0E00               	movlw	0
  4153  002EBE  0100               	movlb	0	; () banked
  4154  002EC0  6F6B               	movwf	___awtoft@sign& (0+255),b
  4155                           
  4156                           ; BSR set to: 0
  4157  002EC2  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  4158  002EC4  D006               	goto	l1073
  4159                           
  4160                           ; BSR set to: 0
  4161  002EC6  6D68               	negf	___awtoft@c& (0+255),b
  4162  002EC8  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  4163  002ECA  B0D8               	btfsc	status,0,c
  4164  002ECC  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  4165                           
  4166                           ; BSR set to: 0
  4167  002ECE  0E01               	movlw	1
  4168  002ED0  6F6B               	movwf	___awtoft@sign& (0+255),b
  4169  002ED2                     l1073:
  4170                           
  4171                           ; BSR set to: 0
  4172                           
  4173                           ; BSR set to: 0
  4174  002ED2  C068  F060         	movff	___awtoft@c,___ftpack@arg
  4175  002ED6  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  4176  002EDA  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  4177  002EDC  0E8E               	movlw	142
  4178  002EDE  6F63               	movwf	___ftpack@exp& (0+255),b
  4179  002EE0  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
  4180  002EE4  EC0C  F00D         	call	___ftpack	;wreg free
  4181  002EE8  C060  F068         	movff	?___ftpack,?___awtoft
  4182  002EEC  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  4183  002EF0  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  4184  002EF4  0012               	return	
  4185  002EF6                     __end_of___awtoft:
  4186                           	opt stack 0
  4187                           tblptru	equ	0xFF8
  4188                           tblptrh	equ	0xFF7
  4189                           tblptrl	equ	0xFF6
  4190                           tablat	equ	0xFF5
  4191                           intcon	equ	0xFF2
  4192                           postinc0	equ	0xFEE
  4193                           wreg	equ	0xFE8
  4194                           postdec1	equ	0xFE5
  4195                           fsr1l	equ	0xFE1
  4196                           status	equ	0xFD8
  4197                           
  4198 ;; *************** function ___ftpack *****************
  4199 ;; Defined at:
  4200 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  arg             3    0[BANK0 ] unsigned um
  4203 ;;  exp             1    3[BANK0 ] unsigned char 
  4204 ;;  sign            1    4[BANK0 ] unsigned char 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;		None
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  3    0[BANK0 ] float 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4216 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4218 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4219 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4220 ;;Total ram usage:        8 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    9
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		___awtoft
  4227 ;;		___ftdiv
  4228 ;;		___ftmul
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text20
  4233  001A18                     __ptext20:
  4234                           	opt stack 0
  4235  001A18                     ___ftpack:
  4236                           	opt stack 18
  4237                           
  4238                           ;incstack = 0
  4239  001A18  0100               	movlb	0	; () banked
  4240  001A1A  5163               	movf	___ftpack@exp& (0+255),w,b
  4241  001A1C  B4D8               	btfsc	status,2,c
  4242  001A1E  D005               	goto	u2890
  4243                           
  4244                           ; BSR set to: 0
  4245  001A20  5160               	movf	___ftpack@arg& (0+255),w,b
  4246  001A22  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  4247  001A24  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  4248  001A26  A4D8               	btfss	status,2,c
  4249  001A28  D00C               	goto	l1092
  4250  001A2A                     u2890:
  4251                           
  4252                           ; BSR set to: 0
  4253                           
  4254                           ; BSR set to: 0
  4255  001A2A  0E00               	movlw	0
  4256  001A2C  6F60               	movwf	?___ftpack& (0+255),b
  4257  001A2E  0E00               	movlw	0
  4258  001A30  6F61               	movwf	(?___ftpack+1)& (0+255),b
  4259  001A32  0E00               	movlw	0
  4260  001A34  6F62               	movwf	(?___ftpack+2)& (0+255),b
  4261                           
  4262                           ; BSR set to: 0
  4263  001A36  0012               	return	
  4264  001A38                     
  4265                           ; BSR set to: 0
  4266                           
  4267                           ; BSR set to: 0
  4268  001A38  2B63               	incf	___ftpack@exp& (0+255),f,b
  4269  001A3A  90D8               	bcf	status,0,c
  4270  001A3C  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4271  001A3E  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4272  001A40  3360               	rrcf	___ftpack@arg& (0+255),f,b
  4273  001A42                     l1092:
  4274                           
  4275                           ; BSR set to: 0
  4276                           
  4277                           ; BSR set to: 0
  4278  001A42  0E00               	movlw	0
  4279  001A44  1560               	andwf	___ftpack@arg& (0+255),w,b
  4280  001A46  6F65               	movwf	??___ftpack& (0+255),b
  4281  001A48  0E00               	movlw	0
  4282  001A4A  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4283  001A4C  6F66               	movwf	(??___ftpack+1)& (0+255),b
  4284  001A4E  0EFE               	movlw	254
  4285  001A50  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4286  001A52  6F67               	movwf	(??___ftpack+2)& (0+255),b
  4287  001A54  5165               	movf	??___ftpack& (0+255),w,b
  4288  001A56  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  4289  001A58  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  4290  001A5A  B4D8               	btfsc	status,2,c
  4291  001A5C  D00C               	goto	l1095
  4292  001A5E  D7EC               	goto	l1093
  4293  001A60                     
  4294                           ; BSR set to: 0
  4295                           
  4296                           ; BSR set to: 0
  4297  001A60  2B63               	incf	___ftpack@exp& (0+255),f,b
  4298                           
  4299                           ; BSR set to: 0
  4300  001A62  0E01               	movlw	1
  4301  001A64  2760               	addwf	___ftpack@arg& (0+255),f,b
  4302  001A66  0E00               	movlw	0
  4303  001A68  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  4304  001A6A  0E00               	movlw	0
  4305  001A6C  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  4306  001A6E  90D8               	bcf	status,0,c
  4307  001A70  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4308  001A72  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4309  001A74  3360               	rrcf	___ftpack@arg& (0+255),f,b
  4310  001A76                     l1095:
  4311                           
  4312                           ; BSR set to: 0
  4313                           
  4314                           ; BSR set to: 0
  4315  001A76  0E00               	movlw	0
  4316  001A78  1560               	andwf	___ftpack@arg& (0+255),w,b
  4317  001A7A  6F65               	movwf	??___ftpack& (0+255),b
  4318  001A7C  0E00               	movlw	0
  4319  001A7E  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4320  001A80  6F66               	movwf	(??___ftpack+1)& (0+255),b
  4321  001A82  0EFF               	movlw	255
  4322  001A84  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4323  001A86  6F67               	movwf	(??___ftpack+2)& (0+255),b
  4324  001A88  5165               	movf	??___ftpack& (0+255),w,b
  4325  001A8A  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  4326  001A8C  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  4327  001A8E  B4D8               	btfsc	status,2,c
  4328  001A90  D006               	goto	l1098
  4329  001A92  D7E6               	goto	l1096
  4330  001A94                     
  4331                           ; BSR set to: 0
  4332                           
  4333                           ; BSR set to: 0
  4334  001A94  0763               	decf	___ftpack@exp& (0+255),f,b
  4335  001A96  90D8               	bcf	status,0,c
  4336  001A98  3760               	rlcf	___ftpack@arg& (0+255),f,b
  4337  001A9A  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  4338  001A9C  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  4339  001A9E                     l1098:
  4340                           
  4341                           ; BSR set to: 0
  4342                           
  4343                           ; BSR set to: 0
  4344  001A9E  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  4345  001AA0  D003               	goto	u2930
  4346                           
  4347                           ; BSR set to: 0
  4348  001AA2  0E02               	movlw	2
  4349  001AA4  6163               	cpfslt	___ftpack@exp& (0+255),b
  4350  001AA6  D7F6               	goto	l1099
  4351  001AA8                     u2930:
  4352                           
  4353                           ; BSR set to: 0
  4354                           
  4355                           ; BSR set to: 0
  4356  001AA8  A163               	btfss	___ftpack@exp& (0+255),0,b
  4357                           
  4358                           ; BSR set to: 0
  4359  001AAA  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  4360                           
  4361                           ; BSR set to: 0
  4362                           
  4363                           ; BSR set to: 0
  4364  001AAC  90D8               	bcf	status,0,c
  4365  001AAE  3363               	rrcf	___ftpack@exp& (0+255),f,b
  4366  001AB0  5163               	movf	___ftpack@exp& (0+255),w,b
  4367  001AB2  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  4368                           
  4369                           ; BSR set to: 0
  4370  001AB4  5164               	movf	___ftpack@sign& (0+255),w,b
  4371  001AB6  A4D8               	btfss	status,2,c
  4372                           
  4373                           ; BSR set to: 0
  4374  001AB8  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  4375                           
  4376                           ; BSR set to: 0
  4377                           
  4378                           ; BSR set to: 0
  4379  001ABA  C060  F060         	movff	___ftpack@arg,?___ftpack
  4380  001ABE  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  4381  001AC2  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  4382  001AC6  0012               	return	
  4383  001AC8                     __end_of___ftpack:
  4384                           	opt stack 0
  4385                           tblptru	equ	0xFF8
  4386                           tblptrh	equ	0xFF7
  4387                           tblptrl	equ	0xFF6
  4388                           tablat	equ	0xFF5
  4389                           intcon	equ	0xFF2
  4390                           postinc0	equ	0xFEE
  4391                           wreg	equ	0xFE8
  4392                           postdec1	equ	0xFE5
  4393                           fsr1l	equ	0xFE1
  4394                           status	equ	0xFD8
  4395                           
  4396 ;; *************** function _PWM4_LoadDutyValue *****************
  4397 ;; Defined at:
  4398 ;;		line 80 in file "mcc_generated_files/pwm4.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  dutyValue       2   15[BANK0 ] unsigned int 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4412 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4414 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4415 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4416 ;;Total ram usage:        4 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    9
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_Set_Colors
  4423 ;;		_main
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text21
  4428  002DCE                     __ptext21:
  4429                           	opt stack 0
  4430  002DCE                     _PWM4_LoadDutyValue:
  4431                           	opt stack 21
  4432                           
  4433                           ;pwm4.c: 83: CCPR4L = ((dutyValue & 0x03FC)>>2);
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;incstack = 0
  4437  002DCE  C06F  F071         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  4438  002DD2  C070  F072         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  4439  002DD6  0100               	movlb	0	; () banked
  4440  002DD8  90D8               	bcf	status,0,c
  4441  002DDA  3372               	rrcf	(??_PWM4_LoadDutyValue+1)& (0+255),f,b
  4442  002DDC  3371               	rrcf	??_PWM4_LoadDutyValue& (0+255),f,b
  4443  002DDE  90D8               	bcf	status,0,c
  4444  002DE0  3372               	rrcf	(??_PWM4_LoadDutyValue+1)& (0+255),f,b
  4445  002DE2  3371               	rrcf	??_PWM4_LoadDutyValue& (0+255),f,b
  4446  002DE4  5171               	movf	??_PWM4_LoadDutyValue& (0+255),w,b
  4447  002DE6  010F               	movlb	15	; () banked
  4448  002DE8  6F4B               	movwf	75,b	;volatile
  4449                           
  4450                           ;pwm4.c: 86: CCP4CON = ((uint8_t)(CCP4CON & 0xCF) | ((dutyValue & 0x0003)<<4));
  4451  002DEA  C06F  F071         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  4452  002DEE  0E03               	movlw	3
  4453  002DF0  0100               	movlb	0	; () banked
  4454  002DF2  1771               	andwf	??_PWM4_LoadDutyValue& (0+255),f,b
  4455  002DF4  3B71               	swapf	??_PWM4_LoadDutyValue& (0+255),f,b
  4456  002DF6  0EF0               	movlw	240
  4457  002DF8  1771               	andwf	??_PWM4_LoadDutyValue& (0+255),f,b
  4458  002DFA  010F               	movlb	15	; () banked
  4459  002DFC  514A               	movf	74,w,b	;volatile
  4460  002DFE  0BCF               	andlw	207
  4461  002E00  0100               	movlb	0	; () banked
  4462  002E02  1171               	iorwf	??_PWM4_LoadDutyValue& (0+255),w,b
  4463  002E04  010F               	movlb	15	; () banked
  4464  002E06  6F4A               	movwf	74,b	;volatile
  4465                           
  4466                           ; BSR set to: 15
  4467  002E08  0012               	return		;funcret
  4468  002E0A                     __end_of_PWM4_LoadDutyValue:
  4469                           	opt stack 0
  4470                           tblptru	equ	0xFF8
  4471                           tblptrh	equ	0xFF7
  4472                           tblptrl	equ	0xFF6
  4473                           tablat	equ	0xFF5
  4474                           intcon	equ	0xFF2
  4475                           postinc0	equ	0xFEE
  4476                           wreg	equ	0xFE8
  4477                           postdec1	equ	0xFE5
  4478                           fsr1l	equ	0xFE1
  4479                           status	equ	0xFD8
  4480                           
  4481 ;; *************** function _PWM3_LoadDutyValue *****************
  4482 ;; Defined at:
  4483 ;;		line 80 in file "mcc_generated_files/pwm3.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  dutyValue       2   15[BANK0 ] unsigned int 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      void 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2, status,0
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4497 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4499 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4500 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4501 ;;Total ram usage:        4 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:    9
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_Set_Colors
  4508 ;;		_main
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text22
  4513  002E0A                     __ptext22:
  4514                           	opt stack 0
  4515  002E0A                     _PWM3_LoadDutyValue:
  4516                           	opt stack 21
  4517                           
  4518                           ;pwm3.c: 83: CCPR3L = ((dutyValue & 0x03FC)>>2);
  4519                           
  4520                           ; BSR set to: 15
  4521                           ;incstack = 0
  4522  002E0A  C06F  F071         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
  4523  002E0E  C070  F072         	movff	PWM3_LoadDutyValue@dutyValue+1,??_PWM3_LoadDutyValue+1
  4524  002E12  0100               	movlb	0	; () banked
  4525  002E14  90D8               	bcf	status,0,c
  4526  002E16  3372               	rrcf	(??_PWM3_LoadDutyValue+1)& (0+255),f,b
  4527  002E18  3371               	rrcf	??_PWM3_LoadDutyValue& (0+255),f,b
  4528  002E1A  90D8               	bcf	status,0,c
  4529  002E1C  3372               	rrcf	(??_PWM3_LoadDutyValue+1)& (0+255),f,b
  4530  002E1E  3371               	rrcf	??_PWM3_LoadDutyValue& (0+255),f,b
  4531  002E20  5171               	movf	??_PWM3_LoadDutyValue& (0+255),w,b
  4532  002E22  010F               	movlb	15	; () banked
  4533  002E24  6F4E               	movwf	78,b	;volatile
  4534                           
  4535                           ;pwm3.c: 86: CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue & 0x0003)<<4));
  4536  002E26  C06F  F071         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
  4537  002E2A  0E03               	movlw	3
  4538  002E2C  0100               	movlb	0	; () banked
  4539  002E2E  1771               	andwf	??_PWM3_LoadDutyValue& (0+255),f,b
  4540  002E30  3B71               	swapf	??_PWM3_LoadDutyValue& (0+255),f,b
  4541  002E32  0EF0               	movlw	240
  4542  002E34  1771               	andwf	??_PWM3_LoadDutyValue& (0+255),f,b
  4543  002E36  010F               	movlb	15	; () banked
  4544  002E38  514D               	movf	77,w,b	;volatile
  4545  002E3A  0BCF               	andlw	207
  4546  002E3C  0100               	movlb	0	; () banked
  4547  002E3E  1171               	iorwf	??_PWM3_LoadDutyValue& (0+255),w,b
  4548  002E40  010F               	movlb	15	; () banked
  4549  002E42  6F4D               	movwf	77,b	;volatile
  4550                           
  4551                           ; BSR set to: 15
  4552  002E44  0012               	return		;funcret
  4553  002E46                     __end_of_PWM3_LoadDutyValue:
  4554                           	opt stack 0
  4555                           tblptru	equ	0xFF8
  4556                           tblptrh	equ	0xFF7
  4557                           tblptrl	equ	0xFF6
  4558                           tablat	equ	0xFF5
  4559                           intcon	equ	0xFF2
  4560                           postinc0	equ	0xFEE
  4561                           wreg	equ	0xFE8
  4562                           postdec1	equ	0xFE5
  4563                           fsr1l	equ	0xFE1
  4564                           status	equ	0xFD8
  4565                           
  4566 ;; *************** function _PWM2_LoadDutyValue *****************
  4567 ;; Defined at:
  4568 ;;		line 80 in file "mcc_generated_files/pwm2.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  dutyValue       2   15[BANK0 ] unsigned int 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4582 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4584 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4585 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4586 ;;Total ram usage:        4 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    9
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_Set_Colors
  4593 ;;		_main
  4594 ;;		_Check_Buttons
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text23
  4599  002E46                     __ptext23:
  4600                           	opt stack 0
  4601  002E46                     _PWM2_LoadDutyValue:
  4602                           	opt stack 21
  4603                           
  4604                           ;pwm2.c: 83: CCPR2L = ((dutyValue & 0x03FC)>>2);
  4605                           
  4606                           ; BSR set to: 15
  4607                           ;incstack = 0
  4608  002E46  C06F  F071         	movff	PWM2_LoadDutyValue@dutyValue,??_PWM2_LoadDutyValue
  4609  002E4A  C070  F072         	movff	PWM2_LoadDutyValue@dutyValue+1,??_PWM2_LoadDutyValue+1
  4610  002E4E  0100               	movlb	0	; () banked
  4611  002E50  90D8               	bcf	status,0,c
  4612  002E52  3372               	rrcf	(??_PWM2_LoadDutyValue+1)& (0+255),f,b
  4613  002E54  3371               	rrcf	??_PWM2_LoadDutyValue& (0+255),f,b
  4614  002E56  90D8               	bcf	status,0,c
  4615  002E58  3372               	rrcf	(??_PWM2_LoadDutyValue+1)& (0+255),f,b
  4616  002E5A  3371               	rrcf	??_PWM2_LoadDutyValue& (0+255),f,b
  4617  002E5C  5171               	movf	??_PWM2_LoadDutyValue& (0+255),w,b
  4618  002E5E  010F               	movlb	15	; () banked
  4619  002E60  6F51               	movwf	81,b	;volatile
  4620                           
  4621                           ;pwm2.c: 86: CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4));
  4622  002E62  C06F  F071         	movff	PWM2_LoadDutyValue@dutyValue,??_PWM2_LoadDutyValue
  4623  002E66  0E03               	movlw	3
  4624  002E68  0100               	movlb	0	; () banked
  4625  002E6A  1771               	andwf	??_PWM2_LoadDutyValue& (0+255),f,b
  4626  002E6C  3B71               	swapf	??_PWM2_LoadDutyValue& (0+255),f,b
  4627  002E6E  0EF0               	movlw	240
  4628  002E70  1771               	andwf	??_PWM2_LoadDutyValue& (0+255),f,b
  4629  002E72  010F               	movlb	15	; () banked
  4630  002E74  5150               	movf	80,w,b	;volatile
  4631  002E76  0BCF               	andlw	207
  4632  002E78  0100               	movlb	0	; () banked
  4633  002E7A  1171               	iorwf	??_PWM2_LoadDutyValue& (0+255),w,b
  4634  002E7C  010F               	movlb	15	; () banked
  4635  002E7E  6F50               	movwf	80,b	;volatile
  4636                           
  4637                           ; BSR set to: 15
  4638  002E80  0012               	return		;funcret
  4639  002E82                     __end_of_PWM2_LoadDutyValue:
  4640                           	opt stack 0
  4641                           tblptru	equ	0xFF8
  4642                           tblptrh	equ	0xFF7
  4643                           tblptrl	equ	0xFF6
  4644                           tablat	equ	0xFF5
  4645                           intcon	equ	0xFF2
  4646                           postinc0	equ	0xFEE
  4647                           wreg	equ	0xFE8
  4648                           postdec1	equ	0xFE5
  4649                           fsr1l	equ	0xFE1
  4650                           status	equ	0xFD8
  4651                           
  4652 ;; *************** function _Initialize_Menus *****************
  4653 ;; Defined at:
  4654 ;;		line 12 in file "screen_controls.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;		None
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  display        20   51[BANK0 ] unsigned char [20]
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  1    wreg      void 
  4661 ;; Registers used:
  4662 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4669 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4671 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4672 ;;Total ram usage:       20 bytes
  4673 ;; Hardware stack levels used:    1
  4674 ;; Hardware stack levels required when called:   15
  4675 ;; This function calls:
  4676 ;;		_GLCD_ClearScreen
  4677 ;;		_GLCD_GoTo
  4678 ;;		_GLCD_Line
  4679 ;;		_GLCD_WriteString
  4680 ;;		___fttol
  4681 ;;		_itoa
  4682 ;; This function is called by:
  4683 ;;		_main
  4684 ;;		_Check_Buttons
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text24
  4689  00042C                     __ptext24:
  4690                           	opt stack 0
  4691  00042C                     _Initialize_Menus:
  4692                           	opt stack 15
  4693                           
  4694                           ;screen_controls.c: 14: char display[20];
  4695                           ;screen_controls.c: 16: GLCD_ClearScreen();
  4696                           
  4697                           ; BSR set to: 15
  4698                           ;incstack = 0
  4699  00042C  ECB3  F017         	call	_GLCD_ClearScreen	;wreg free
  4700                           
  4701                           ;screen_controls.c: 18: GLCD_GoTo(xMenuStart,0);
  4702  000430  0E00               	movlw	0
  4703  000432  0100               	movlb	0	; () banked
  4704  000434  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4705  000436  51BA               	movf	_xMenuStart& (0+255),w,b
  4706  000438  ECBE  F010         	call	_GLCD_GoTo
  4707                           
  4708                           ;screen_controls.c: 19: GLCD_WriteString("Main Menu");
  4709  00043C  0E9A               	movlw	low STR_6
  4710  00043E  0100               	movlb	0	; () banked
  4711  000440  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4712  000442  0EFF               	movlw	high STR_6
  4713  000444  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4714  000446  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4715                           
  4716                           ;screen_controls.c: 20: GLCD_GoTo((valuesXStart - 4), 0);
  4717  00044A  0E00               	movlw	0
  4718  00044C  0100               	movlb	0	; () banked
  4719  00044E  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4720  000450  505E               	movf	_valuesXStart,w,c
  4721  000452  0FFC               	addlw	252
  4722  000454  ECBE  F010         	call	_GLCD_GoTo
  4723                           
  4724                           ;screen_controls.c: 21: GLCD_WriteString("Values");
  4725  000458  0ECD               	movlw	low STR_7
  4726  00045A  0100               	movlb	0	; () banked
  4727  00045C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4728  00045E  0EFF               	movlw	high STR_7
  4729  000460  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4730  000462  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4731                           
  4732                           ;screen_controls.c: 22: GLCD_Line(0,12,127,12);
  4733  000466  0E00               	movlw	0
  4734  000468  0100               	movlb	0	; () banked
  4735  00046A  6F76               	movwf	(GLCD_Line@X1+1)& (0+255),b
  4736  00046C  0E00               	movlw	0
  4737  00046E  6F75               	movwf	GLCD_Line@X1& (0+255),b
  4738  000470  0E00               	movlw	0
  4739  000472  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  4740  000474  0E0C               	movlw	12
  4741  000476  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  4742  000478  0E00               	movlw	0
  4743  00047A  6F7A               	movwf	(GLCD_Line@X2+1)& (0+255),b
  4744  00047C  0E7F               	movlw	127
  4745  00047E  6F79               	movwf	GLCD_Line@X2& (0+255),b
  4746  000480  0E00               	movlw	0
  4747  000482  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  4748  000484  0E0C               	movlw	12
  4749  000486  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  4750  000488  EC23  F006         	call	_GLCD_Line	;wreg free
  4751                           
  4752                           ;screen_controls.c: 23: GLCD_Line((valuesXStart - 8),0,(valuesXStart - 8),63);
  4753  00048C  0EF8               	movlw	248
  4754  00048E  245E               	addwf	_valuesXStart,w,c
  4755  000490  0100               	movlb	0	; () banked
  4756  000492  6F75               	movwf	GLCD_Line@X1& (0+255),b
  4757  000494  6B76               	clrf	(GLCD_Line@X1+1)& (0+255),b
  4758  000496  0EFF               	movlw	255
  4759  000498  2376               	addwfc	(GLCD_Line@X1+1)& (0+255),f,b
  4760  00049A  0E00               	movlw	0
  4761  00049C  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  4762  00049E  0E00               	movlw	0
  4763  0004A0  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  4764  0004A2  0EF8               	movlw	248
  4765  0004A4  245E               	addwf	_valuesXStart,w,c
  4766  0004A6  6F79               	movwf	GLCD_Line@X2& (0+255),b
  4767  0004A8  6B7A               	clrf	(GLCD_Line@X2+1)& (0+255),b
  4768  0004AA  0EFF               	movlw	255
  4769  0004AC  237A               	addwfc	(GLCD_Line@X2+1)& (0+255),f,b
  4770  0004AE  0E00               	movlw	0
  4771  0004B0  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  4772  0004B2  0E3F               	movlw	63
  4773  0004B4  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  4774  0004B6  EC23  F006         	call	_GLCD_Line	;wreg free
  4775                           
  4776                           ;screen_controls.c: 26: GLCD_GoTo(xMenuStart, setRunTime);
  4777  0004BA  0E02               	movlw	2
  4778  0004BC  0100               	movlb	0	; () banked
  4779  0004BE  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4780  0004C0  51BA               	movf	_xMenuStart& (0+255),w,b
  4781  0004C2  ECBE  F010         	call	_GLCD_GoTo
  4782                           
  4783                           ;screen_controls.c: 27: GLCD_WriteString("RunTime");
  4784  0004C6  0EBE               	movlw	low STR_8
  4785  0004C8  0100               	movlb	0	; () banked
  4786  0004CA  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4787  0004CC  0EFF               	movlw	high STR_8
  4788  0004CE  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4789  0004D0  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4790                           
  4791                           ;screen_controls.c: 28: GLCD_GoTo(valuesXStart, setRunTime);
  4792  0004D4  0E02               	movlw	2
  4793  0004D6  0100               	movlb	0	; () banked
  4794  0004D8  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4795  0004DA  505E               	movf	_valuesXStart,w,c
  4796  0004DC  ECBE  F010         	call	_GLCD_GoTo
  4797                           
  4798                           ;screen_controls.c: 29: itoa(display, runMinutes, 10);
  4799  0004E0  0E93               	movlw	low Initialize_Menus@display
  4800  0004E2  0100               	movlb	0	; () banked
  4801  0004E4  6F70               	movwf	itoa@buf& (0+255),b
  4802  0004E6  0E00               	movlw	high Initialize_Menus@display
  4803  0004E8  6F71               	movwf	(itoa@buf+1)& (0+255),b
  4804  0004EA  C0C7  F072         	movff	_runMinutes,itoa@val
  4805  0004EE  6B73               	clrf	(itoa@val+1)& (0+255),b
  4806  0004F0  0E00               	movlw	0
  4807  0004F2  6F75               	movwf	(itoa@base+1)& (0+255),b
  4808  0004F4  0E0A               	movlw	10
  4809  0004F6  6F74               	movwf	itoa@base& (0+255),b
  4810  0004F8  EC23  F016         	call	_itoa	;wreg free
  4811                           
  4812                           ;screen_controls.c: 30: GLCD_WriteString(display);
  4813  0004FC  0E93               	movlw	low Initialize_Menus@display
  4814  0004FE  0100               	movlb	0	; () banked
  4815  000500  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4816  000502  0E00               	movlw	high Initialize_Menus@display
  4817  000504  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4818  000506  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4819                           
  4820                           ;screen_controls.c: 31: GLCD_WriteString("min");
  4821  00050A  0EFB               	movlw	low STR_9
  4822  00050C  0100               	movlb	0	; () banked
  4823  00050E  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4824  000510  0EFF               	movlw	high STR_9
  4825  000512  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4826  000514  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4827                           
  4828                           ;screen_controls.c: 33: GLCD_GoTo(xMenuStart, setBrightness);
  4829  000518  0E03               	movlw	3
  4830  00051A  0100               	movlb	0	; () banked
  4831  00051C  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4832  00051E  51BA               	movf	_xMenuStart& (0+255),w,b
  4833  000520  ECBE  F010         	call	_GLCD_GoTo
  4834                           
  4835                           ;screen_controls.c: 34: GLCD_WriteString("Brightness");
  4836  000524  0E3E               	movlw	low (STR_26+6)
  4837  000526  0100               	movlb	0	; () banked
  4838  000528  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4839  00052A  0EFF               	movlw	high (STR_26+6)
  4840  00052C  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4841  00052E  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4842                           
  4843                           ;screen_controls.c: 35: GLCD_GoTo(valuesXStart, setBrightness);
  4844  000532  0E03               	movlw	3
  4845  000534  0100               	movlb	0	; () banked
  4846  000536  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4847  000538  505E               	movf	_valuesXStart,w,c
  4848  00053A  ECBE  F010         	call	_GLCD_GoTo
  4849                           
  4850                           ;screen_controls.c: 36: itoa(display, brightnessPercent, 10);
  4851  00053E  0E93               	movlw	low Initialize_Menus@display
  4852  000540  0100               	movlb	0	; () banked
  4853  000542  6F70               	movwf	itoa@buf& (0+255),b
  4854  000544  0E00               	movlw	high Initialize_Menus@display
  4855  000546  6F71               	movwf	(itoa@buf+1)& (0+255),b
  4856  000548  C0B5  F060         	movff	_brightnessPercent,___fttol@f1
  4857  00054C  C0B6  F061         	movff	_brightnessPercent+1,___fttol@f1+1
  4858  000550  C0B7  F062         	movff	_brightnessPercent+2,___fttol@f1+2
  4859  000554  ECCF  F009         	call	___fttol	;wreg free
  4860  000558  C060  F072         	movff	?___fttol,itoa@val
  4861  00055C  C061  F073         	movff	?___fttol+1,itoa@val+1
  4862  000560  0E00               	movlw	0
  4863  000562  0100               	movlb	0	; () banked
  4864  000564  6F75               	movwf	(itoa@base+1)& (0+255),b
  4865  000566  0E0A               	movlw	10
  4866  000568  6F74               	movwf	itoa@base& (0+255),b
  4867  00056A  EC23  F016         	call	_itoa	;wreg free
  4868                           
  4869                           ;screen_controls.c: 37: GLCD_WriteString(display);
  4870  00056E  0E93               	movlw	low Initialize_Menus@display
  4871  000570  0100               	movlb	0	; () banked
  4872  000572  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4873  000574  0E00               	movlw	high Initialize_Menus@display
  4874  000576  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4875  000578  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4876                           
  4877                           ;screen_controls.c: 38: GLCD_WriteString("%   ");
  4878  00057C  0EE6               	movlw	low STR_2
  4879  00057E  0100               	movlb	0	; () banked
  4880  000580  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4881  000582  0EFF               	movlw	high STR_2
  4882  000584  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4883  000586  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4884                           
  4885                           ;screen_controls.c: 40: GLCD_GoTo(xMenuStart, setStartColors);
  4886  00058A  0E04               	movlw	4
  4887  00058C  0100               	movlb	0	; () banked
  4888  00058E  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4889  000590  51BA               	movf	_xMenuStart& (0+255),w,b
  4890  000592  ECBE  F010         	call	_GLCD_GoTo
  4891                           
  4892                           ;screen_controls.c: 41: GLCD_WriteString("StartColor");
  4893  000596  0E7B               	movlw	low STR_12
  4894  000598  0100               	movlb	0	; () banked
  4895  00059A  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4896  00059C  0EFF               	movlw	high STR_12
  4897  00059E  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4898  0005A0  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4899                           
  4900                           ;screen_controls.c: 42: GLCD_GoTo(valuesXStart, setStartColors);
  4901  0005A4  0E04               	movlw	4
  4902  0005A6  0100               	movlb	0	; () banked
  4903  0005A8  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4904  0005AA  505E               	movf	_valuesXStart,w,c
  4905  0005AC  ECBE  F010         	call	_GLCD_GoTo
  4906                           
  4907                           ;screen_controls.c: 43: GLCD_WriteString("---");
  4908  0005B0  0EEF               	movlw	low STR_13
  4909  0005B2  0100               	movlb	0	; () banked
  4910  0005B4  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4911  0005B6  0EFF               	movlw	high STR_13
  4912  0005B8  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4913  0005BA  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4914                           
  4915                           ;screen_controls.c: 45: GLCD_GoTo(xMenuStart, setFinishedColors);
  4916  0005BE  0E05               	movlw	5
  4917  0005C0  0100               	movlb	0	; () banked
  4918  0005C2  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4919  0005C4  51BA               	movf	_xMenuStart& (0+255),w,b
  4920  0005C6  ECBE  F010         	call	_GLCD_GoTo
  4921                           
  4922                           ;screen_controls.c: 46: GLCD_WriteString("EndColor");
  4923  0005CA  0EAD               	movlw	low STR_14
  4924  0005CC  0100               	movlb	0	; () banked
  4925  0005CE  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4926  0005D0  0EFF               	movlw	high STR_14
  4927  0005D2  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4928  0005D4  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4929                           
  4930                           ;screen_controls.c: 47: GLCD_GoTo(valuesXStart, setFinishedColors);
  4931  0005D8  0E05               	movlw	5
  4932  0005DA  0100               	movlb	0	; () banked
  4933  0005DC  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4934  0005DE  505E               	movf	_valuesXStart,w,c
  4935  0005E0  ECBE  F010         	call	_GLCD_GoTo
  4936                           
  4937                           ;screen_controls.c: 48: GLCD_WriteString("---");
  4938  0005E4  0EEF               	movlw	low STR_13
  4939  0005E6  0100               	movlb	0	; () banked
  4940  0005E8  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4941  0005EA  0EFF               	movlw	high STR_13
  4942  0005EC  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4943  0005EE  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4944                           
  4945                           ;screen_controls.c: 50: GLCD_GoTo(xMenuStart, setBacklight);
  4946  0005F2  0E06               	movlw	6
  4947  0005F4  0100               	movlb	0	; () banked
  4948  0005F6  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4949  0005F8  51BA               	movf	_xMenuStart& (0+255),w,b
  4950  0005FA  ECBE  F010         	call	_GLCD_GoTo
  4951                           
  4952                           ;screen_controls.c: 51: GLCD_WriteString("Backlight");
  4953  0005FE  0E90               	movlw	low STR_16
  4954  000600  0100               	movlb	0	; () banked
  4955  000602  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4956  000604  0EFF               	movlw	high STR_16
  4957  000606  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4958  000608  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4959                           
  4960                           ;screen_controls.c: 52: GLCD_GoTo(valuesXStart, setBacklight);
  4961  00060C  0E06               	movlw	6
  4962  00060E  0100               	movlb	0	; () banked
  4963  000610  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4964  000612  505E               	movf	_valuesXStart,w,c
  4965  000614  ECBE  F010         	call	_GLCD_GoTo
  4966                           
  4967                           ;screen_controls.c: 53: GLCD_WriteString("OFF");
  4968  000618  0EF3               	movlw	low STR_17
  4969  00061A  0100               	movlb	0	; () banked
  4970  00061C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4971  00061E  0EFF               	movlw	high STR_17
  4972  000620  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4973  000622  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4974                           
  4975                           ;screen_controls.c: 55: GLCD_GoTo(xMenuStart, selectState);
  4976  000626  0E07               	movlw	7
  4977  000628  0100               	movlb	0	; () banked
  4978  00062A  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4979  00062C  51BA               	movf	_xMenuStart& (0+255),w,b
  4980  00062E  ECBE  F010         	call	_GLCD_GoTo
  4981                           
  4982                           ;screen_controls.c: 56: GLCD_WriteString("SelState");
  4983  000632  0EA4               	movlw	low STR_18
  4984  000634  0100               	movlb	0	; () banked
  4985  000636  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4986  000638  0EFF               	movlw	high STR_18
  4987  00063A  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4988  00063C  EC53  F014         	call	_GLCD_WriteString	;wreg free
  4989                           
  4990                           ;screen_controls.c: 57: GLCD_GoTo(valuesXStart, selectState);
  4991  000640  0E07               	movlw	7
  4992  000642  0100               	movlb	0	; () banked
  4993  000644  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4994  000646  505E               	movf	_valuesXStart,w,c
  4995  000648  ECBE  F010         	call	_GLCD_GoTo
  4996                           
  4997                           ;screen_controls.c: 58: GLCD_WriteString("NAP");
  4998  00064C  0EF7               	movlw	low STR_19
  4999  00064E  0100               	movlb	0	; () banked
  5000  000650  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5001  000652  0EFF               	movlw	high STR_19
  5002  000654  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5003  000656  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5004  00065A  0012               	return		;funcret
  5005  00065C                     __end_of_Initialize_Menus:
  5006                           	opt stack 0
  5007                           tblptru	equ	0xFF8
  5008                           tblptrh	equ	0xFF7
  5009                           tblptrl	equ	0xFF6
  5010                           tablat	equ	0xFF5
  5011                           intcon	equ	0xFF2
  5012                           postinc0	equ	0xFEE
  5013                           wreg	equ	0xFE8
  5014                           postdec1	equ	0xFE5
  5015                           fsr1l	equ	0xFE1
  5016                           status	equ	0xFD8
  5017                           
  5018 ;; *************** function _Draw_runTime_Menu *****************
  5019 ;; Defined at:
  5020 ;;		line 136 in file "screen_controls.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  display        10   51[BANK0 ] unsigned char [10]
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      void 
  5027 ;; Registers used:
  5028 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5035 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5037 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5038 ;;Total ram usage:       10 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:   15
  5041 ;; This function calls:
  5042 ;;		_GLCD_ClearScreen
  5043 ;;		_GLCD_GoTo
  5044 ;;		_GLCD_Line
  5045 ;;		_GLCD_WriteString
  5046 ;;		_Make_Back_Arrow
  5047 ;;		_itoa
  5048 ;; This function is called by:
  5049 ;;		_Check_Buttons
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text25
  5054  00127E                     __ptext25:
  5055                           	opt stack 0
  5056  00127E                     _Draw_runTime_Menu:
  5057                           	opt stack 14
  5058                           
  5059                           ;screen_controls.c: 138: char display[10];
  5060                           ;screen_controls.c: 140: GLCD_ClearScreen();
  5061                           
  5062                           ;incstack = 0
  5063  00127E  ECB3  F017         	call	_GLCD_ClearScreen	;wreg free
  5064                           
  5065                           ;screen_controls.c: 142: GLCD_GoTo(0,0);
  5066  001282  0E00               	movlw	0
  5067  001284  0100               	movlb	0	; () banked
  5068  001286  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5069  001288  0E00               	movlw	0
  5070  00128A  ECBE  F010         	call	_GLCD_GoTo
  5071                           
  5072                           ;screen_controls.c: 143: GLCD_WriteString("Run Times");
  5073  00128E  0E86               	movlw	low STR_20
  5074  001290  0100               	movlb	0	; () banked
  5075  001292  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5076  001294  0EFF               	movlw	high STR_20
  5077  001296  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5078  001298  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5079                           
  5080                           ;screen_controls.c: 144: GLCD_Line(0,9,127,9);
  5081  00129C  0E00               	movlw	0
  5082  00129E  0100               	movlb	0	; () banked
  5083  0012A0  6F76               	movwf	(GLCD_Line@X1+1)& (0+255),b
  5084  0012A2  0E00               	movlw	0
  5085  0012A4  6F75               	movwf	GLCD_Line@X1& (0+255),b
  5086  0012A6  0E00               	movlw	0
  5087  0012A8  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  5088  0012AA  0E09               	movlw	9
  5089  0012AC  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  5090  0012AE  0E00               	movlw	0
  5091  0012B0  6F7A               	movwf	(GLCD_Line@X2+1)& (0+255),b
  5092  0012B2  0E7F               	movlw	127
  5093  0012B4  6F79               	movwf	GLCD_Line@X2& (0+255),b
  5094  0012B6  0E00               	movlw	0
  5095  0012B8  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  5096  0012BA  0E09               	movlw	9
  5097  0012BC  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  5098  0012BE  EC23  F006         	call	_GLCD_Line	;wreg free
  5099                           
  5100                           ;screen_controls.c: 146: GLCD_GoTo(runTimeX, 2);
  5101  0012C2  0E02               	movlw	2
  5102  0012C4  0100               	movlb	0	; () banked
  5103  0012C6  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5104  0012C8  51BD               	movf	_runTimeX& (0+255),w,b
  5105  0012CA  ECBE  F010         	call	_GLCD_GoTo
  5106                           
  5107                           ;screen_controls.c: 147: GLCD_WriteString("Run Time: ");
  5108  0012CE  0E70               	movlw	low STR_21
  5109  0012D0  0100               	movlb	0	; () banked
  5110  0012D2  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5111  0012D4  0EFF               	movlw	high STR_21
  5112  0012D6  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5113  0012D8  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5114                           
  5115                           ;screen_controls.c: 148: GLCD_GoTo(valuesXStart, 2);
  5116  0012DC  0E02               	movlw	2
  5117  0012DE  0100               	movlb	0	; () banked
  5118  0012E0  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5119  0012E2  505E               	movf	_valuesXStart,w,c
  5120  0012E4  ECBE  F010         	call	_GLCD_GoTo
  5121                           
  5122                           ;screen_controls.c: 149: itoa(display, runMinutes, 10);
  5123  0012E8  0E93               	movlw	low Draw_runTime_Menu@display
  5124  0012EA  0100               	movlb	0	; () banked
  5125  0012EC  6F70               	movwf	itoa@buf& (0+255),b
  5126  0012EE  0E00               	movlw	high Draw_runTime_Menu@display
  5127  0012F0  6F71               	movwf	(itoa@buf+1)& (0+255),b
  5128  0012F2  C0C7  F072         	movff	_runMinutes,itoa@val
  5129  0012F6  6B73               	clrf	(itoa@val+1)& (0+255),b
  5130  0012F8  0E00               	movlw	0
  5131  0012FA  6F75               	movwf	(itoa@base+1)& (0+255),b
  5132  0012FC  0E0A               	movlw	10
  5133  0012FE  6F74               	movwf	itoa@base& (0+255),b
  5134  001300  EC23  F016         	call	_itoa	;wreg free
  5135                           
  5136                           ;screen_controls.c: 150: GLCD_WriteString(display);
  5137  001304  0E93               	movlw	low Draw_runTime_Menu@display
  5138  001306  0100               	movlb	0	; () banked
  5139  001308  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5140  00130A  0E00               	movlw	high Draw_runTime_Menu@display
  5141  00130C  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5142  00130E  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5143                           
  5144                           ;screen_controls.c: 151: GLCD_WriteString("min   ");
  5145  001312  0ED4               	movlw	low STR_1
  5146  001314  0100               	movlb	0	; () banked
  5147  001316  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5148  001318  0EFF               	movlw	high STR_1
  5149  00131A  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5150  00131C  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5151                           
  5152                           ;screen_controls.c: 153: GLCD_GoTo(runTimeX, 4);
  5153  001320  0E04               	movlw	4
  5154  001322  0100               	movlb	0	; () banked
  5155  001324  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5156  001326  51BD               	movf	_runTimeX& (0+255),w,b
  5157  001328  ECBE  F010         	call	_GLCD_GoTo
  5158                           
  5159                           ;screen_controls.c: 154: GLCD_WriteString("Time After: ");
  5160  00132C  0E49               	movlw	low STR_23
  5161  00132E  0100               	movlb	0	; () banked
  5162  001330  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5163  001332  0EFF               	movlw	high STR_23
  5164  001334  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5165  001336  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5166                           
  5167                           ;screen_controls.c: 155: GLCD_GoTo(valuesXStart, 4);
  5168  00133A  0E04               	movlw	4
  5169  00133C  0100               	movlb	0	; () banked
  5170  00133E  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5171  001340  505E               	movf	_valuesXStart,w,c
  5172  001342  ECBE  F010         	call	_GLCD_GoTo
  5173                           
  5174                           ;screen_controls.c: 156: itoa(display, afterMinutes, 10);
  5175  001346  0E93               	movlw	low Draw_runTime_Menu@display
  5176  001348  0100               	movlb	0	; () banked
  5177  00134A  6F70               	movwf	itoa@buf& (0+255),b
  5178  00134C  0E00               	movlw	high Draw_runTime_Menu@display
  5179  00134E  6F71               	movwf	(itoa@buf+1)& (0+255),b
  5180  001350  C0C6  F072         	movff	_afterMinutes,itoa@val
  5181  001354  6B73               	clrf	(itoa@val+1)& (0+255),b
  5182  001356  0E00               	movlw	0
  5183  001358  6F75               	movwf	(itoa@base+1)& (0+255),b
  5184  00135A  0E0A               	movlw	10
  5185  00135C  6F74               	movwf	itoa@base& (0+255),b
  5186  00135E  EC23  F016         	call	_itoa	;wreg free
  5187                           
  5188                           ;screen_controls.c: 157: GLCD_WriteString(display);
  5189  001362  0E93               	movlw	low Draw_runTime_Menu@display
  5190  001364  0100               	movlb	0	; () banked
  5191  001366  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5192  001368  0E00               	movlw	high Draw_runTime_Menu@display
  5193  00136A  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5194  00136C  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5195                           
  5196                           ;screen_controls.c: 158: GLCD_WriteString("min   ");
  5197  001370  0ED4               	movlw	low STR_1
  5198  001372  0100               	movlb	0	; () banked
  5199  001374  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5200  001376  0EFF               	movlw	high STR_1
  5201  001378  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5202  00137A  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5203                           
  5204                           ;screen_controls.c: 160: GLCD_GoTo(runTimeX, 6);
  5205  00137E  0E06               	movlw	6
  5206  001380  0100               	movlb	0	; () banked
  5207  001382  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5208  001384  51BD               	movf	_runTimeX& (0+255),w,b
  5209  001386  ECBE  F010         	call	_GLCD_GoTo
  5210                           
  5211                           ;screen_controls.c: 161: Make_Back_Arrow();
  5212  00138A  ECCE  F017         	call	_Make_Back_Arrow	;wreg free
  5213                           
  5214                           ;screen_controls.c: 163: GLCD_WriteString("Back");
  5215  00138E  0EE1               	movlw	low STR_25
  5216  001390  0100               	movlb	0	; () banked
  5217  001392  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5218  001394  0EFF               	movlw	high STR_25
  5219  001396  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5220  001398  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5221  00139C  0012               	return		;funcret
  5222  00139E                     __end_of_Draw_runTime_Menu:
  5223                           	opt stack 0
  5224                           tblptru	equ	0xFF8
  5225                           tblptrh	equ	0xFF7
  5226                           tblptrl	equ	0xFF6
  5227                           tablat	equ	0xFF5
  5228                           intcon	equ	0xFF2
  5229                           postinc0	equ	0xFEE
  5230                           wreg	equ	0xFE8
  5231                           postdec1	equ	0xFE5
  5232                           fsr1l	equ	0xFE1
  5233                           status	equ	0xFD8
  5234                           
  5235 ;; *************** function _Draw_Start_Colors_Menu *****************
  5236 ;; Defined at:
  5237 ;;		line 191 in file "screen_controls.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;		None
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  display        10   51[BANK0 ] unsigned char [10]
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      void 
  5244 ;; Registers used:
  5245 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5252 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5254 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5255 ;;Total ram usage:       10 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:   15
  5258 ;; This function calls:
  5259 ;;		_GLCD_ClearScreen
  5260 ;;		_GLCD_GoTo
  5261 ;;		_GLCD_Line
  5262 ;;		_GLCD_WriteString
  5263 ;;		_Make_Back_Arrow
  5264 ;;		___fttol
  5265 ;;		_itoa
  5266 ;; This function is called by:
  5267 ;;		_Check_Buttons
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text26
  5272  000A8C                     __ptext26:
  5273                           	opt stack 0
  5274  000A8C                     _Draw_Start_Colors_Menu:
  5275                           	opt stack 14
  5276                           
  5277                           ;screen_controls.c: 193: char display[10];
  5278                           ;screen_controls.c: 195: GLCD_ClearScreen();
  5279                           
  5280                           ;incstack = 0
  5281  000A8C  ECB3  F017         	call	_GLCD_ClearScreen	;wreg free
  5282                           
  5283                           ;screen_controls.c: 197: GLCD_GoTo(0,0);
  5284  000A90  0E00               	movlw	0
  5285  000A92  0100               	movlb	0	; () banked
  5286  000A94  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5287  000A96  0E00               	movlw	0
  5288  000A98  ECBE  F010         	call	_GLCD_GoTo
  5289                           
  5290                           ;screen_controls.c: 198: GLCD_WriteString("Start Colors");
  5291  000A9C  0E63               	movlw	low STR_30
  5292  000A9E  0100               	movlb	0	; () banked
  5293  000AA0  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5294  000AA2  0EFF               	movlw	high STR_30
  5295  000AA4  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5296  000AA6  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5297                           
  5298                           ;screen_controls.c: 199: GLCD_Line(0,9,127,9);
  5299  000AAA  0E00               	movlw	0
  5300  000AAC  0100               	movlb	0	; () banked
  5301  000AAE  6F76               	movwf	(GLCD_Line@X1+1)& (0+255),b
  5302  000AB0  0E00               	movlw	0
  5303  000AB2  6F75               	movwf	GLCD_Line@X1& (0+255),b
  5304  000AB4  0E00               	movlw	0
  5305  000AB6  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  5306  000AB8  0E09               	movlw	9
  5307  000ABA  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  5308  000ABC  0E00               	movlw	0
  5309  000ABE  6F7A               	movwf	(GLCD_Line@X2+1)& (0+255),b
  5310  000AC0  0E7F               	movlw	127
  5311  000AC2  6F79               	movwf	GLCD_Line@X2& (0+255),b
  5312  000AC4  0E00               	movlw	0
  5313  000AC6  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  5314  000AC8  0E09               	movlw	9
  5315  000ACA  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  5316  000ACC  EC23  F006         	call	_GLCD_Line	;wreg free
  5317                           
  5318                           ;screen_controls.c: 201: GLCD_GoTo(runTimeX, 2);
  5319  000AD0  0E02               	movlw	2
  5320  000AD2  0100               	movlb	0	; () banked
  5321  000AD4  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5322  000AD6  51BD               	movf	_runTimeX& (0+255),w,b
  5323  000AD8  ECBE  F010         	call	_GLCD_GoTo
  5324                           
  5325                           ;screen_controls.c: 202: GLCD_WriteString("Red: ");
  5326  000ADC  0EDB               	movlw	low STR_31
  5327  000ADE  0100               	movlb	0	; () banked
  5328  000AE0  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5329  000AE2  0EFF               	movlw	high STR_31
  5330  000AE4  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5331  000AE6  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5332                           
  5333                           ;screen_controls.c: 203: GLCD_GoTo(valuesXStart, 2);
  5334  000AEA  0E02               	movlw	2
  5335  000AEC  0100               	movlb	0	; () banked
  5336  000AEE  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5337  000AF0  505E               	movf	_valuesXStart,w,c
  5338  000AF2  ECBE  F010         	call	_GLCD_GoTo
  5339                           
  5340                           ;screen_controls.c: 204: itoa(display, redStart, 10);
  5341  000AF6  0E93               	movlw	low Draw_Start_Colors_Menu@display
  5342  000AF8  0100               	movlb	0	; () banked
  5343  000AFA  6F70               	movwf	itoa@buf& (0+255),b
  5344  000AFC  0E00               	movlw	high Draw_Start_Colors_Menu@display
  5345  000AFE  6F71               	movwf	(itoa@buf+1)& (0+255),b
  5346  000B00  C0AF  F060         	movff	_redStart,___fttol@f1
  5347  000B04  C0B0  F061         	movff	_redStart+1,___fttol@f1+1
  5348  000B08  C0B1  F062         	movff	_redStart+2,___fttol@f1+2
  5349  000B0C  ECCF  F009         	call	___fttol	;wreg free
  5350  000B10  C060  F072         	movff	?___fttol,itoa@val
  5351  000B14  C061  F073         	movff	?___fttol+1,itoa@val+1
  5352  000B18  0E00               	movlw	0
  5353  000B1A  0100               	movlb	0	; () banked
  5354  000B1C  6F75               	movwf	(itoa@base+1)& (0+255),b
  5355  000B1E  0E0A               	movlw	10
  5356  000B20  6F74               	movwf	itoa@base& (0+255),b
  5357  000B22  EC23  F016         	call	_itoa	;wreg free
  5358                           
  5359                           ;screen_controls.c: 205: GLCD_WriteString(display);
  5360  000B26  0E93               	movlw	low Draw_Start_Colors_Menu@display
  5361  000B28  0100               	movlb	0	; () banked
  5362  000B2A  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5363  000B2C  0E00               	movlw	high Draw_Start_Colors_Menu@display
  5364  000B2E  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5365  000B30  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5366                           
  5367                           ;screen_controls.c: 206: GLCD_WriteString("   ");
  5368  000B34  0EE7               	movlw	low (STR_2+1)
  5369  000B36  0100               	movlb	0	; () banked
  5370  000B38  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5371  000B3A  0EFF               	movlw	high (STR_2+1)
  5372  000B3C  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5373  000B3E  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5374                           
  5375                           ;screen_controls.c: 208: GLCD_GoTo(runTimeX, 3);
  5376  000B42  0E03               	movlw	3
  5377  000B44  0100               	movlb	0	; () banked
  5378  000B46  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5379  000B48  51BD               	movf	_runTimeX& (0+255),w,b
  5380  000B4A  ECBE  F010         	call	_GLCD_GoTo
  5381                           
  5382                           ;screen_controls.c: 209: GLCD_WriteString("Green: ");
  5383  000B4E  0EB6               	movlw	low STR_33
  5384  000B50  0100               	movlb	0	; () banked
  5385  000B52  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5386  000B54  0EFF               	movlw	high STR_33
  5387  000B56  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5388  000B58  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5389                           
  5390                           ;screen_controls.c: 210: GLCD_GoTo(valuesXStart, 3);
  5391  000B5C  0E03               	movlw	3
  5392  000B5E  0100               	movlb	0	; () banked
  5393  000B60  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5394  000B62  505E               	movf	_valuesXStart,w,c
  5395  000B64  ECBE  F010         	call	_GLCD_GoTo
  5396                           
  5397                           ;screen_controls.c: 211: itoa(display, greenStart, 10);
  5398  000B68  0E93               	movlw	low Draw_Start_Colors_Menu@display
  5399  000B6A  0100               	movlb	0	; () banked
  5400  000B6C  6F70               	movwf	itoa@buf& (0+255),b
  5401  000B6E  0E00               	movlw	high Draw_Start_Colors_Menu@display
  5402  000B70  6F71               	movwf	(itoa@buf+1)& (0+255),b
  5403  000B72  C0AC  F060         	movff	_greenStart,___fttol@f1
  5404  000B76  C0AD  F061         	movff	_greenStart+1,___fttol@f1+1
  5405  000B7A  C0AE  F062         	movff	_greenStart+2,___fttol@f1+2
  5406  000B7E  ECCF  F009         	call	___fttol	;wreg free
  5407  000B82  C060  F072         	movff	?___fttol,itoa@val
  5408  000B86  C061  F073         	movff	?___fttol+1,itoa@val+1
  5409  000B8A  0E00               	movlw	0
  5410  000B8C  0100               	movlb	0	; () banked
  5411  000B8E  6F75               	movwf	(itoa@base+1)& (0+255),b
  5412  000B90  0E0A               	movlw	10
  5413  000B92  6F74               	movwf	itoa@base& (0+255),b
  5414  000B94  EC23  F016         	call	_itoa	;wreg free
  5415                           
  5416                           ;screen_controls.c: 212: GLCD_WriteString(display);
  5417  000B98  0E93               	movlw	low Draw_Start_Colors_Menu@display
  5418  000B9A  0100               	movlb	0	; () banked
  5419  000B9C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5420  000B9E  0E00               	movlw	high Draw_Start_Colors_Menu@display
  5421  000BA0  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5422  000BA2  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5423                           
  5424                           ;screen_controls.c: 213: GLCD_WriteString("   ");
  5425  000BA6  0EE7               	movlw	low (STR_2+1)
  5426  000BA8  0100               	movlb	0	; () banked
  5427  000BAA  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5428  000BAC  0EFF               	movlw	high (STR_2+1)
  5429  000BAE  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5430  000BB0  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5431                           
  5432                           ;screen_controls.c: 215: GLCD_GoTo(runTimeX, 4);
  5433  000BB4  0E04               	movlw	4
  5434  000BB6  0100               	movlb	0	; () banked
  5435  000BB8  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5436  000BBA  51BD               	movf	_runTimeX& (0+255),w,b
  5437  000BBC  ECBE  F010         	call	_GLCD_GoTo
  5438                           
  5439                           ;screen_controls.c: 216: GLCD_WriteString("Blue: ");
  5440  000BC0  0EC6               	movlw	low STR_35
  5441  000BC2  0100               	movlb	0	; () banked
  5442  000BC4  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5443  000BC6  0EFF               	movlw	high STR_35
  5444  000BC8  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5445  000BCA  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5446                           
  5447                           ;screen_controls.c: 217: GLCD_GoTo(valuesXStart, 4);
  5448  000BCE  0E04               	movlw	4
  5449  000BD0  0100               	movlb	0	; () banked
  5450  000BD2  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5451  000BD4  505E               	movf	_valuesXStart,w,c
  5452  000BD6  ECBE  F010         	call	_GLCD_GoTo
  5453                           
  5454                           ;screen_controls.c: 218: itoa(display, blueStart, 10);
  5455  000BDA  0E93               	movlw	low Draw_Start_Colors_Menu@display
  5456  000BDC  0100               	movlb	0	; () banked
  5457  000BDE  6F70               	movwf	itoa@buf& (0+255),b
  5458  000BE0  0E00               	movlw	high Draw_Start_Colors_Menu@display
  5459  000BE2  6F71               	movwf	(itoa@buf+1)& (0+255),b
  5460  000BE4  C0A9  F060         	movff	_blueStart,___fttol@f1
  5461  000BE8  C0AA  F061         	movff	_blueStart+1,___fttol@f1+1
  5462  000BEC  C0AB  F062         	movff	_blueStart+2,___fttol@f1+2
  5463  000BF0  ECCF  F009         	call	___fttol	;wreg free
  5464  000BF4  C060  F072         	movff	?___fttol,itoa@val
  5465  000BF8  C061  F073         	movff	?___fttol+1,itoa@val+1
  5466  000BFC  0E00               	movlw	0
  5467  000BFE  0100               	movlb	0	; () banked
  5468  000C00  6F75               	movwf	(itoa@base+1)& (0+255),b
  5469  000C02  0E0A               	movlw	10
  5470  000C04  6F74               	movwf	itoa@base& (0+255),b
  5471  000C06  EC23  F016         	call	_itoa	;wreg free
  5472                           
  5473                           ;screen_controls.c: 219: GLCD_WriteString(display);
  5474  000C0A  0E93               	movlw	low Draw_Start_Colors_Menu@display
  5475  000C0C  0100               	movlb	0	; () banked
  5476  000C0E  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5477  000C10  0E00               	movlw	high Draw_Start_Colors_Menu@display
  5478  000C12  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5479  000C14  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5480                           
  5481                           ;screen_controls.c: 220: GLCD_WriteString("   ");
  5482  000C18  0EE7               	movlw	low (STR_2+1)
  5483  000C1A  0100               	movlb	0	; () banked
  5484  000C1C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5485  000C1E  0EFF               	movlw	high (STR_2+1)
  5486  000C20  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5487  000C22  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5488                           
  5489                           ;screen_controls.c: 223: GLCD_GoTo(runTimeX, 6);
  5490  000C26  0E06               	movlw	6
  5491  000C28  0100               	movlb	0	; () banked
  5492  000C2A  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5493  000C2C  51BD               	movf	_runTimeX& (0+255),w,b
  5494  000C2E  ECBE  F010         	call	_GLCD_GoTo
  5495                           
  5496                           ;screen_controls.c: 224: Make_Back_Arrow();
  5497  000C32  ECCE  F017         	call	_Make_Back_Arrow	;wreg free
  5498                           
  5499                           ;screen_controls.c: 226: GLCD_WriteString("Back");
  5500  000C36  0EE1               	movlw	low STR_25
  5501  000C38  0100               	movlb	0	; () banked
  5502  000C3A  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5503  000C3C  0EFF               	movlw	high STR_25
  5504  000C3E  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5505  000C40  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5506  000C44  0012               	return		;funcret
  5507  000C46                     __end_of_Draw_Start_Colors_Menu:
  5508                           	opt stack 0
  5509                           tblptru	equ	0xFF8
  5510                           tblptrh	equ	0xFF7
  5511                           tblptrl	equ	0xFF6
  5512                           tablat	equ	0xFF5
  5513                           intcon	equ	0xFF2
  5514                           postinc0	equ	0xFEE
  5515                           wreg	equ	0xFE8
  5516                           postdec1	equ	0xFE5
  5517                           fsr1l	equ	0xFE1
  5518                           status	equ	0xFD8
  5519                           
  5520 ;; *************** function _Draw_Brightness_Menu *****************
  5521 ;; Defined at:
  5522 ;;		line 166 in file "screen_controls.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  display        10   51[BANK0 ] unsigned char [10]
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      void 
  5529 ;; Registers used:
  5530 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5537 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5539 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5540 ;;Total ram usage:       10 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:   15
  5543 ;; This function calls:
  5544 ;;		_GLCD_ClearScreen
  5545 ;;		_GLCD_GoTo
  5546 ;;		_GLCD_Line
  5547 ;;		_GLCD_WriteString
  5548 ;;		_Make_Back_Arrow
  5549 ;;		___fttol
  5550 ;;		_itoa
  5551 ;; This function is called by:
  5552 ;;		_Check_Buttons
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text27
  5557  001942                     __ptext27:
  5558                           	opt stack 0
  5559  001942                     _Draw_Brightness_Menu:
  5560                           	opt stack 14
  5561                           
  5562                           ;screen_controls.c: 168: char display[10];
  5563                           ;screen_controls.c: 170: GLCD_ClearScreen();
  5564                           
  5565                           ;incstack = 0
  5566  001942  ECB3  F017         	call	_GLCD_ClearScreen	;wreg free
  5567                           
  5568                           ;screen_controls.c: 172: GLCD_GoTo(0,0);
  5569  001946  0E00               	movlw	0
  5570  001948  0100               	movlb	0	; () banked
  5571  00194A  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5572  00194C  0E00               	movlw	0
  5573  00194E  ECBE  F010         	call	_GLCD_GoTo
  5574                           
  5575                           ;screen_controls.c: 173: GLCD_WriteString("Light Brightness");
  5576  001952  0E38               	movlw	low STR_26
  5577  001954  0100               	movlb	0	; () banked
  5578  001956  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5579  001958  0EFF               	movlw	high STR_26
  5580  00195A  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5581  00195C  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5582                           
  5583                           ;screen_controls.c: 174: GLCD_Line(0,9,127,9);
  5584  001960  0E00               	movlw	0
  5585  001962  0100               	movlb	0	; () banked
  5586  001964  6F76               	movwf	(GLCD_Line@X1+1)& (0+255),b
  5587  001966  0E00               	movlw	0
  5588  001968  6F75               	movwf	GLCD_Line@X1& (0+255),b
  5589  00196A  0E00               	movlw	0
  5590  00196C  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  5591  00196E  0E09               	movlw	9
  5592  001970  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  5593  001972  0E00               	movlw	0
  5594  001974  6F7A               	movwf	(GLCD_Line@X2+1)& (0+255),b
  5595  001976  0E7F               	movlw	127
  5596  001978  6F79               	movwf	GLCD_Line@X2& (0+255),b
  5597  00197A  0E00               	movlw	0
  5598  00197C  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  5599  00197E  0E09               	movlw	9
  5600  001980  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  5601  001982  EC23  F006         	call	_GLCD_Line	;wreg free
  5602                           
  5603                           ;screen_controls.c: 176: GLCD_GoTo(runTimeX, 2);
  5604  001986  0E02               	movlw	2
  5605  001988  0100               	movlb	0	; () banked
  5606  00198A  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5607  00198C  51BD               	movf	_runTimeX& (0+255),w,b
  5608  00198E  ECBE  F010         	call	_GLCD_GoTo
  5609                           
  5610                           ;screen_controls.c: 177: GLCD_WriteString("Brightness: ");
  5611  001992  0E56               	movlw	low STR_27
  5612  001994  0100               	movlb	0	; () banked
  5613  001996  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5614  001998  0EFF               	movlw	high STR_27
  5615  00199A  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5616  00199C  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5617                           
  5618                           ;screen_controls.c: 178: GLCD_GoTo(valuesXStart, 2);
  5619  0019A0  0E02               	movlw	2
  5620  0019A2  0100               	movlb	0	; () banked
  5621  0019A4  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5622  0019A6  505E               	movf	_valuesXStart,w,c
  5623  0019A8  ECBE  F010         	call	_GLCD_GoTo
  5624                           
  5625                           ;screen_controls.c: 179: itoa(display, brightnessPercent, 10);
  5626  0019AC  0E93               	movlw	low Draw_Brightness_Menu@display
  5627  0019AE  0100               	movlb	0	; () banked
  5628  0019B0  6F70               	movwf	itoa@buf& (0+255),b
  5629  0019B2  0E00               	movlw	high Draw_Brightness_Menu@display
  5630  0019B4  6F71               	movwf	(itoa@buf+1)& (0+255),b
  5631  0019B6  C0B5  F060         	movff	_brightnessPercent,___fttol@f1
  5632  0019BA  C0B6  F061         	movff	_brightnessPercent+1,___fttol@f1+1
  5633  0019BE  C0B7  F062         	movff	_brightnessPercent+2,___fttol@f1+2
  5634  0019C2  ECCF  F009         	call	___fttol	;wreg free
  5635  0019C6  C060  F072         	movff	?___fttol,itoa@val
  5636  0019CA  C061  F073         	movff	?___fttol+1,itoa@val+1
  5637  0019CE  0E00               	movlw	0
  5638  0019D0  0100               	movlb	0	; () banked
  5639  0019D2  6F75               	movwf	(itoa@base+1)& (0+255),b
  5640  0019D4  0E0A               	movlw	10
  5641  0019D6  6F74               	movwf	itoa@base& (0+255),b
  5642  0019D8  EC23  F016         	call	_itoa	;wreg free
  5643                           
  5644                           ;screen_controls.c: 180: GLCD_WriteString(display);
  5645  0019DC  0E93               	movlw	low Draw_Brightness_Menu@display
  5646  0019DE  0100               	movlb	0	; () banked
  5647  0019E0  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5648  0019E2  0E00               	movlw	high Draw_Brightness_Menu@display
  5649  0019E4  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5650  0019E6  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5651                           
  5652                           ;screen_controls.c: 181: GLCD_WriteString("%  ");
  5653  0019EA  0EEB               	movlw	low STR_28
  5654  0019EC  0100               	movlb	0	; () banked
  5655  0019EE  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5656  0019F0  0EFF               	movlw	high STR_28
  5657  0019F2  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5658  0019F4  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5659                           
  5660                           ;screen_controls.c: 183: GLCD_GoTo(runTimeX, 6);
  5661  0019F8  0E06               	movlw	6
  5662  0019FA  0100               	movlb	0	; () banked
  5663  0019FC  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5664  0019FE  51BD               	movf	_runTimeX& (0+255),w,b
  5665  001A00  ECBE  F010         	call	_GLCD_GoTo
  5666                           
  5667                           ;screen_controls.c: 184: Make_Back_Arrow();
  5668  001A04  ECCE  F017         	call	_Make_Back_Arrow	;wreg free
  5669                           
  5670                           ;screen_controls.c: 186: GLCD_WriteString("Back");
  5671  001A08  0EE1               	movlw	low STR_25
  5672  001A0A  0100               	movlb	0	; () banked
  5673  001A0C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  5674  001A0E  0EFF               	movlw	high STR_25
  5675  001A10  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  5676  001A12  EC53  F014         	call	_GLCD_WriteString	;wreg free
  5677  001A16  0012               	return		;funcret
  5678  001A18                     __end_of_Draw_Brightness_Menu:
  5679                           	opt stack 0
  5680                           tblptru	equ	0xFF8
  5681                           tblptrh	equ	0xFF7
  5682                           tblptrl	equ	0xFF6
  5683                           tablat	equ	0xFF5
  5684                           intcon	equ	0xFF2
  5685                           postinc0	equ	0xFEE
  5686                           wreg	equ	0xFE8
  5687                           postdec1	equ	0xFE5
  5688                           fsr1l	equ	0xFE1
  5689                           status	equ	0xFD8
  5690                           
  5691 ;; *************** function _itoa *****************
  5692 ;; Defined at:
  5693 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  buf             2   16[BANK0 ] PTR unsigned char 
  5696 ;;		 -> Draw_Start_Colors_Menu@display(10), Draw_Brightness_Menu@display(10), Draw_runTime_Menu@display(10), Initialize_
      +Menus@display(20), 
  5697 ;;		 -> Start_Color_Menu_Function@display(10), Brightness_Menu_Function@display(10), Run_Time_Menu_Function@display(10),
      + 
  5698 ;;  val             2   18[BANK0 ] int 
  5699 ;;  base            2   20[BANK0 ] int 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;  cp              2   22[BANK0 ] PTR unsigned char 
  5702 ;;		 -> Draw_Start_Colors_Menu@display(10), Draw_Brightness_Menu@display(10), Draw_runTime_Menu@display(10), Initialize_
      +Menus@display(20), 
  5703 ;;		 -> Start_Color_Menu_Function@display(10), Brightness_Menu_Function@display(10), Run_Time_Menu_Function@display(10),
      + 
  5704 ;; Return value:  Size  Location     Type
  5705 ;;                  2   16[BANK0 ] PTR unsigned char 
  5706 ;; Registers used:
  5707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5713 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5714 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5716 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5717 ;;Total ram usage:        8 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:   11
  5720 ;; This function calls:
  5721 ;;		_utoa
  5722 ;; This function is called by:
  5723 ;;		_Initialize_Menus
  5724 ;;		_Draw_runTime_Menu
  5725 ;;		_Draw_Brightness_Menu
  5726 ;;		_Draw_Start_Colors_Menu
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           	psect	text28
  5731  002C46                     __ptext28:
  5732                           	opt stack 0
  5733  002C46                     _itoa:
  5734                           	opt stack 18
  5735                           
  5736                           ;incstack = 0
  5737  002C46  C070  F076         	movff	itoa@buf,itoa@cp
  5738  002C4A  C071  F077         	movff	itoa@buf+1,itoa@cp+1
  5739  002C4E  0100               	movlb	0	; () banked
  5740  002C50  AF73               	btfss	(itoa@val+1)& (0+255),7,b
  5741  002C52  D00C               	goto	l1208
  5742                           
  5743                           ; BSR set to: 0
  5744  002C54  C070  FFD9         	movff	itoa@buf,fsr2l
  5745  002C58  C071  FFDA         	movff	itoa@buf+1,fsr2h
  5746  002C5C  0E2D               	movlw	45
  5747  002C5E  6EDF               	movwf	indf2,c
  5748                           
  5749                           ; BSR set to: 0
  5750  002C60  4B70               	infsnz	itoa@buf& (0+255),f,b
  5751  002C62  2B71               	incf	(itoa@buf+1)& (0+255),f,b
  5752                           
  5753                           ; BSR set to: 0
  5754  002C64  6D72               	negf	itoa@val& (0+255),b
  5755  002C66  1F73               	comf	(itoa@val+1)& (0+255),f,b
  5756  002C68  B0D8               	btfsc	status,0,c
  5757  002C6A  2B73               	incf	(itoa@val+1)& (0+255),f,b
  5758  002C6C                     l1208:
  5759                           
  5760                           ; BSR set to: 0
  5761                           
  5762                           ; BSR set to: 0
  5763  002C6C  C070  F067         	movff	itoa@buf,utoa@buf
  5764  002C70  C071  F068         	movff	itoa@buf+1,utoa@buf+1
  5765  002C74  C072  F069         	movff	itoa@val,utoa@val
  5766  002C78  C073  F06A         	movff	itoa@val+1,utoa@val+1
  5767  002C7C  C074  F06B         	movff	itoa@base,utoa@base
  5768  002C80  C075  F06C         	movff	itoa@base+1,utoa@base+1
  5769  002C84  ECBB  F00D         	call	_utoa	;wreg free
  5770  002C88  0012               	return	
  5771  002C8A                     __end_of_itoa:
  5772                           	opt stack 0
  5773                           tblptru	equ	0xFF8
  5774                           tblptrh	equ	0xFF7
  5775                           tblptrl	equ	0xFF6
  5776                           tablat	equ	0xFF5
  5777                           intcon	equ	0xFF2
  5778                           postinc0	equ	0xFEE
  5779                           wreg	equ	0xFE8
  5780                           postdec1	equ	0xFE5
  5781                           fsr1l	equ	0xFE1
  5782                           indf2	equ	0xFDF
  5783                           fsr2h	equ	0xFDA
  5784                           fsr2l	equ	0xFD9
  5785                           status	equ	0xFD8
  5786                           
  5787 ;; *************** function _utoa *****************
  5788 ;; Defined at:
  5789 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  buf             2    7[BANK0 ] PTR unsigned char 
  5792 ;;		 -> Draw_Start_Colors_Menu@display(10), Draw_Brightness_Menu@display(10), Draw_runTime_Menu@display(10), Initialize_
      +Menus@display(20), 
  5793 ;;		 -> Start_Color_Menu_Function@display(10), Brightness_Menu_Function@display(10), Run_Time_Menu_Function@display(10),
      + 
  5794 ;;  val             2    9[BANK0 ] unsigned int 
  5795 ;;  base            2   11[BANK0 ] int 
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;  v               2   13[BANK0 ] unsigned int 
  5798 ;;  c               1   15[BANK0 ] unsigned char 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  2    7[BANK0 ] PTR unsigned char 
  5801 ;; Registers used:
  5802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5808 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5809 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5811 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5812 ;;Total ram usage:        9 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:   10
  5815 ;; This function calls:
  5816 ;;		___lwdiv
  5817 ;;		___lwmod
  5818 ;; This function is called by:
  5819 ;;		_itoa
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text29
  5824  001B76                     __ptext29:
  5825                           	opt stack 0
  5826  001B76                     _utoa:
  5827                           	opt stack 18
  5828                           
  5829                           ;incstack = 0
  5830  001B76  C069  F06D         	movff	utoa@val,utoa@v
  5831  001B7A  C06A  F06E         	movff	utoa@val+1,utoa@v+1
  5832  001B7E  C06D  F060         	movff	utoa@v,___lwdiv@dividend
  5833  001B82  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
  5834  001B86  C06B  F062         	movff	utoa@base,___lwdiv@divisor
  5835  001B8A  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
  5836  001B8E  EC58  F015         	call	___lwdiv	;wreg free
  5837  001B92  C060  F06D         	movff	?___lwdiv,utoa@v
  5838  001B96  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
  5839  001B9A  0100               	movlb	0	; () banked
  5840  001B9C  4B67               	infsnz	utoa@buf& (0+255),f,b
  5841  001B9E  2B68               	incf	(utoa@buf+1)& (0+255),f,b
  5842                           
  5843                           ; BSR set to: 0
  5844  001BA0  516D               	movf	utoa@v& (0+255),w,b
  5845  001BA2  116E               	iorwf	(utoa@v+1)& (0+255),w,b
  5846  001BA4  A4D8               	btfss	status,2,c
  5847  001BA6  D7EB               	goto	l1212
  5848                           
  5849                           ; BSR set to: 0
  5850                           
  5851                           ; BSR set to: 0
  5852  001BA8  C067  FFD9         	movff	utoa@buf,fsr2l
  5853  001BAC  C068  FFDA         	movff	utoa@buf+1,fsr2h
  5854  001BB0  0E00               	movlw	0
  5855  001BB2  6EDF               	movwf	indf2,c
  5856                           
  5857                           ; BSR set to: 0
  5858  001BB4  0767               	decf	utoa@buf& (0+255),f,b
  5859  001BB6  A0D8               	btfss	status,0,c
  5860  001BB8  0768               	decf	(utoa@buf+1)& (0+255),f,b
  5861  001BBA                     
  5862                           ; BSR set to: 0
  5863                           
  5864                           ; BSR set to: 0
  5865  001BBA  C069  F060         	movff	utoa@val,___lwmod@dividend
  5866  001BBE  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
  5867  001BC2  C06B  F062         	movff	utoa@base,___lwmod@divisor
  5868  001BC6  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
  5869  001BCA  EC45  F016         	call	___lwmod	;wreg free
  5870  001BCE  0100               	movlb	0	; () banked
  5871  001BD0  5160               	movf	?___lwmod& (0+255),w,b
  5872  001BD2  6F6F               	movwf	utoa@c& (0+255),b
  5873                           
  5874                           ; BSR set to: 0
  5875  001BD4  C069  F060         	movff	utoa@val,___lwdiv@dividend
  5876  001BD8  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
  5877  001BDC  C06B  F062         	movff	utoa@base,___lwdiv@divisor
  5878  001BE0  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
  5879  001BE4  EC58  F015         	call	___lwdiv	;wreg free
  5880  001BE8  C060  F069         	movff	?___lwdiv,utoa@val
  5881  001BEC  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
  5882  001BF0  0E09               	movlw	9
  5883  001BF2  0100               	movlb	0	; () banked
  5884  001BF4  656F               	cpfsgt	utoa@c& (0+255),b
  5885  001BF6  D002               	goto	l1215
  5886                           
  5887                           ; BSR set to: 0
  5888  001BF8  0E07               	movlw	7
  5889  001BFA  276F               	addwf	utoa@c& (0+255),f,b
  5890  001BFC                     l1215:
  5891                           
  5892                           ; BSR set to: 0
  5893  001BFC  0E30               	movlw	48
  5894  001BFE  276F               	addwf	utoa@c& (0+255),f,b
  5895                           
  5896                           ; BSR set to: 0
  5897  001C00  C067  FFD9         	movff	utoa@buf,fsr2l
  5898  001C04  C068  FFDA         	movff	utoa@buf+1,fsr2h
  5899  001C08  C06F  FFDF         	movff	utoa@c,indf2
  5900                           
  5901                           ; BSR set to: 0
  5902  001C0C  0767               	decf	utoa@buf& (0+255),f,b
  5903  001C0E  A0D8               	btfss	status,0,c
  5904  001C10  0768               	decf	(utoa@buf+1)& (0+255),f,b
  5905                           
  5906                           ; BSR set to: 0
  5907  001C12  5169               	movf	utoa@val& (0+255),w,b
  5908  001C14  116A               	iorwf	(utoa@val+1)& (0+255),w,b
  5909  001C16  A4D8               	btfss	status,2,c
  5910  001C18  D7D0               	goto	l1214
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;	Return value of _utoa is never used
  5914                           
  5915                           ; BSR set to: 0
  5916  001C1A  4B67               	infsnz	utoa@buf& (0+255),f,b
  5917  001C1C  2B68               	incf	(utoa@buf+1)& (0+255),f,b
  5918  001C1E  0012               	return	
  5919  001C20                     __end_of_utoa:
  5920                           	opt stack 0
  5921                           tblptru	equ	0xFF8
  5922                           tblptrh	equ	0xFF7
  5923                           tblptrl	equ	0xFF6
  5924                           tablat	equ	0xFF5
  5925                           intcon	equ	0xFF2
  5926                           postinc0	equ	0xFEE
  5927                           wreg	equ	0xFE8
  5928                           postdec1	equ	0xFE5
  5929                           fsr1l	equ	0xFE1
  5930                           indf2	equ	0xFDF
  5931                           fsr2h	equ	0xFDA
  5932                           fsr2l	equ	0xFD9
  5933                           status	equ	0xFD8
  5934                           
  5935 ;; *************** function ___lwmod *****************
  5936 ;; Defined at:
  5937 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  dividend        2    0[BANK0 ] unsigned int 
  5940 ;;  divisor         2    2[BANK0 ] unsigned int 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;  counter         1    4[BANK0 ] unsigned char 
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  2    0[BANK0 ] unsigned int 
  5945 ;; Registers used:
  5946 ;;		wreg, status,2, status,0
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5952 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5955 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5956 ;;Total ram usage:        5 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:    9
  5959 ;; This function calls:
  5960 ;;		Nothing
  5961 ;; This function is called by:
  5962 ;;		_utoa
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           	psect	text30
  5967  002C8A                     __ptext30:
  5968                           	opt stack 0
  5969  002C8A                     ___lwmod:
  5970                           	opt stack 18
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;incstack = 0
  5974  002C8A  0100               	movlb	0	; () banked
  5975  002C8C  5162               	movf	___lwmod@divisor& (0+255),w,b
  5976  002C8E  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5977  002C90  B4D8               	btfsc	status,2,c
  5978  002C92  D018               	goto	l1310
  5979                           
  5980                           ; BSR set to: 0
  5981  002C94  0E01               	movlw	1
  5982  002C96  6F64               	movwf	___lwmod@counter& (0+255),b
  5983  002C98  D004               	goto	l1305
  5984  002C9A                     
  5985                           ; BSR set to: 0
  5986                           
  5987                           ; BSR set to: 0
  5988  002C9A  90D8               	bcf	status,0,c
  5989  002C9C  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  5990  002C9E  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5991  002CA0  2B64               	incf	___lwmod@counter& (0+255),f,b
  5992  002CA2                     l1305:
  5993                           
  5994                           ; BSR set to: 0
  5995                           
  5996                           ; BSR set to: 0
  5997  002CA2  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5998  002CA4  D7FA               	goto	l1306
  5999  002CA6                     u2670:
  6000                           
  6001                           ; BSR set to: 0
  6002                           
  6003                           ; BSR set to: 0
  6004                           
  6005                           ; BSR set to: 0
  6006  002CA6  5162               	movf	___lwmod@divisor& (0+255),w,b
  6007  002CA8  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  6008  002CAA  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6009  002CAC  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6010  002CAE  A0D8               	btfss	status,0,c
  6011  002CB0  D004               	goto	l1309
  6012                           
  6013                           ; BSR set to: 0
  6014  002CB2  5162               	movf	___lwmod@divisor& (0+255),w,b
  6015  002CB4  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  6016  002CB6  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6017  002CB8  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6018  002CBA                     l1309:
  6019                           
  6020                           ; BSR set to: 0
  6021                           
  6022                           ; BSR set to: 0
  6023  002CBA  90D8               	bcf	status,0,c
  6024  002CBC  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6025  002CBE  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  6026                           
  6027                           ; BSR set to: 0
  6028  002CC0  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  6029  002CC2  D7F1               	goto	u2670
  6030  002CC4                     l1310:
  6031                           
  6032                           ; BSR set to: 0
  6033                           
  6034                           ; BSR set to: 0
  6035  002CC4  C060  F060         	movff	___lwmod@dividend,?___lwmod
  6036  002CC8  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  6037                           
  6038                           ; BSR set to: 0
  6039  002CCC  0012               	return		;funcret
  6040  002CCE                     __end_of___lwmod:
  6041                           	opt stack 0
  6042                           tblptru	equ	0xFF8
  6043                           tblptrh	equ	0xFF7
  6044                           tblptrl	equ	0xFF6
  6045                           tablat	equ	0xFF5
  6046                           intcon	equ	0xFF2
  6047                           postinc0	equ	0xFEE
  6048                           wreg	equ	0xFE8
  6049                           postdec1	equ	0xFE5
  6050                           fsr1l	equ	0xFE1
  6051                           indf2	equ	0xFDF
  6052                           fsr2h	equ	0xFDA
  6053                           fsr2l	equ	0xFD9
  6054                           status	equ	0xFD8
  6055                           
  6056 ;; *************** function ___lwdiv *****************
  6057 ;; Defined at:
  6058 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  dividend        2    0[BANK0 ] unsigned int 
  6061 ;;  divisor         2    2[BANK0 ] unsigned int 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  quotient        2    4[BANK0 ] unsigned int 
  6064 ;;  counter         1    6[BANK0 ] unsigned char 
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  2    0[BANK0 ] unsigned int 
  6067 ;; Registers used:
  6068 ;;		wreg, status,2, status,0
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6074 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6075 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6077 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6078 ;;Total ram usage:        7 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; Hardware stack levels required when called:    9
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_utoa
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text31
  6089  002AB0                     __ptext31:
  6090                           	opt stack 0
  6091  002AB0                     ___lwdiv:
  6092                           	opt stack 18
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;incstack = 0
  6096  002AB0  0E00               	movlw	0
  6097  002AB2  0100               	movlb	0	; () banked
  6098  002AB4  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6099  002AB6  0E00               	movlw	0
  6100  002AB8  6F64               	movwf	___lwdiv@quotient& (0+255),b
  6101                           
  6102                           ; BSR set to: 0
  6103  002ABA  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6104  002ABC  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6105  002ABE  B4D8               	btfsc	status,2,c
  6106  002AC0  D01C               	goto	l1300
  6107                           
  6108                           ; BSR set to: 0
  6109  002AC2  0E01               	movlw	1
  6110  002AC4  6F66               	movwf	___lwdiv@counter& (0+255),b
  6111  002AC6  D004               	goto	l1295
  6112  002AC8                     
  6113                           ; BSR set to: 0
  6114                           
  6115                           ; BSR set to: 0
  6116  002AC8  90D8               	bcf	status,0,c
  6117  002ACA  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  6118  002ACC  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6119  002ACE  2B66               	incf	___lwdiv@counter& (0+255),f,b
  6120  002AD0                     l1295:
  6121                           
  6122                           ; BSR set to: 0
  6123                           
  6124                           ; BSR set to: 0
  6125  002AD0  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6126  002AD2  D7FA               	goto	l1296
  6127  002AD4                     u2640:
  6128                           
  6129                           ; BSR set to: 0
  6130                           
  6131                           ; BSR set to: 0
  6132                           
  6133                           ; BSR set to: 0
  6134  002AD4  90D8               	bcf	status,0,c
  6135  002AD6  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
  6136  002AD8  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6137                           
  6138                           ; BSR set to: 0
  6139  002ADA  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6140  002ADC  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  6141  002ADE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6142  002AE0  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6143  002AE2  A0D8               	btfss	status,0,c
  6144  002AE4  D005               	goto	l1299
  6145                           
  6146                           ; BSR set to: 0
  6147  002AE6  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6148  002AE8  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  6149  002AEA  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6150  002AEC  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6151                           
  6152                           ; BSR set to: 0
  6153  002AEE  8164               	bsf	___lwdiv@quotient& (0+255),0,b
  6154  002AF0                     l1299:
  6155                           
  6156                           ; BSR set to: 0
  6157                           
  6158                           ; BSR set to: 0
  6159  002AF0  90D8               	bcf	status,0,c
  6160  002AF2  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6161  002AF4  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  6162                           
  6163                           ; BSR set to: 0
  6164  002AF6  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
  6165  002AF8  D7ED               	goto	u2640
  6166  002AFA                     l1300:
  6167                           
  6168                           ; BSR set to: 0
  6169                           
  6170                           ; BSR set to: 0
  6171  002AFA  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
  6172  002AFE  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6173                           
  6174                           ; BSR set to: 0
  6175  002B02  0012               	return		;funcret
  6176  002B04                     __end_of___lwdiv:
  6177                           	opt stack 0
  6178                           tblptru	equ	0xFF8
  6179                           tblptrh	equ	0xFF7
  6180                           tblptrl	equ	0xFF6
  6181                           tablat	equ	0xFF5
  6182                           intcon	equ	0xFF2
  6183                           postinc0	equ	0xFEE
  6184                           wreg	equ	0xFE8
  6185                           postdec1	equ	0xFE5
  6186                           fsr1l	equ	0xFE1
  6187                           indf2	equ	0xFDF
  6188                           fsr2h	equ	0xFDA
  6189                           fsr2l	equ	0xFD9
  6190                           status	equ	0xFD8
  6191                           
  6192 ;; *************** function ___fttol *****************
  6193 ;; Defined at:
  6194 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  f1              3    0[BANK0 ] float 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  lval            4   10[BANK0 ] unsigned long 
  6199 ;;  exp1            1   14[BANK0 ] unsigned char 
  6200 ;;  sign1           1    9[BANK0 ] unsigned char 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  4    0[BANK0 ] long 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6210 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6211 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6212 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6213 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6214 ;;Total ram usage:       15 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    9
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		_Set_Colors
  6221 ;;		_Initialize_Menus
  6222 ;;		_Draw_Brightness_Menu
  6223 ;;		_Draw_Start_Colors_Menu
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text32
  6228  00139E                     __ptext32:
  6229                           	opt stack 0
  6230  00139E                     ___fttol:
  6231                           	opt stack 20
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;incstack = 0
  6235  00139E  C062  F064         	movff	___fttol@f1+2,??___fttol
  6236  0013A2  0100               	movlb	0	; () banked
  6237  0013A4  6B65               	clrf	(??___fttol+1)& (0+255),b
  6238  0013A6  6B66               	clrf	(??___fttol+2)& (0+255),b
  6239  0013A8  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6240  0013AA  3764               	rlcf	??___fttol& (0+255),f,b
  6241  0013AC  E301               	bnc	u4021
  6242  0013AE  8165               	bsf	(??___fttol+1)& (0+255),0,b
  6243  0013B0                     u4021:
  6244  0013B0  5164               	movf	??___fttol& (0+255),w,b
  6245  0013B2  6F6E               	movwf	___fttol@exp1& (0+255),b
  6246  0013B4  516E               	movf	___fttol@exp1& (0+255),w,b
  6247  0013B6  A4D8               	btfss	status,2,c
  6248  0013B8  D009               	goto	l1192
  6249                           
  6250                           ; BSR set to: 0
  6251  0013BA  0E00               	movlw	0
  6252  0013BC  6F60               	movwf	?___fttol& (0+255),b
  6253  0013BE  0E00               	movlw	0
  6254  0013C0  6F61               	movwf	(?___fttol+1)& (0+255),b
  6255  0013C2  0E00               	movlw	0
  6256  0013C4  6F62               	movwf	(?___fttol+2)& (0+255),b
  6257  0013C6  0E00               	movlw	0
  6258  0013C8  6F63               	movwf	(?___fttol+3)& (0+255),b
  6259                           
  6260                           ; BSR set to: 0
  6261  0013CA  0012               	return	
  6262  0013CC                     l1192:
  6263                           
  6264                           ; BSR set to: 0
  6265                           
  6266                           ; BSR set to: 0
  6267  0013CC  0E17               	movlw	23
  6268  0013CE  6F64               	movwf	??___fttol& (0+255),b
  6269  0013D0  C060  F065         	movff	___fttol@f1,??___fttol+1
  6270  0013D4  C061  F066         	movff	___fttol@f1+1,??___fttol+2
  6271  0013D8  C062  F067         	movff	___fttol@f1+2,??___fttol+3
  6272  0013DC  2964               	incf	??___fttol& (0+255),w,b
  6273  0013DE  6F68               	movwf	(??___fttol+4)& (0+255),b
  6274  0013E0  D004               	goto	u4040
  6275  0013E2                     u4045:
  6276  0013E2  90D8               	bcf	status,0,c
  6277  0013E4  3367               	rrcf	(??___fttol+3)& (0+255),f,b
  6278  0013E6  3366               	rrcf	(??___fttol+2)& (0+255),f,b
  6279  0013E8  3365               	rrcf	(??___fttol+1)& (0+255),f,b
  6280  0013EA                     u4040:
  6281  0013EA  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
  6282  0013EC  D7FA               	goto	u4045
  6283  0013EE  0100               	movlb	0	; () banked
  6284  0013F0  5165               	movf	(??___fttol+1)& (0+255),w,b
  6285  0013F2  6F69               	movwf	___fttol@sign1& (0+255),b
  6286                           
  6287                           ; BSR set to: 0
  6288  0013F4  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
  6289                           
  6290                           ; BSR set to: 0
  6291  0013F6  0EFF               	movlw	255
  6292  0013F8  1760               	andwf	___fttol@f1& (0+255),f,b
  6293  0013FA  0EFF               	movlw	255
  6294  0013FC  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
  6295  0013FE  0E00               	movlw	0
  6296  001400  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
  6297                           
  6298                           ; BSR set to: 0
  6299  001402  5160               	movf	___fttol@f1& (0+255),w,b
  6300  001404  6F6A               	movwf	___fttol@lval& (0+255),b
  6301  001406  5161               	movf	(___fttol@f1+1)& (0+255),w,b
  6302  001408  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
  6303  00140A  5162               	movf	(___fttol@f1+2)& (0+255),w,b
  6304  00140C  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
  6305  00140E  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
  6306                           
  6307                           ; BSR set to: 0
  6308  001410  0E8E               	movlw	142
  6309  001412  5F6E               	subwf	___fttol@exp1& (0+255),f,b
  6310                           
  6311                           ; BSR set to: 0
  6312  001414  AF6E               	btfss	___fttol@exp1& (0+255),7,b
  6313  001416  D016               	goto	l1194
  6314                           
  6315                           ; BSR set to: 0
  6316  001418  516E               	movf	___fttol@exp1& (0+255),w,b
  6317  00141A  0A80               	xorlw	128
  6318  00141C  0F8F               	addlw	143
  6319  00141E  B0D8               	btfsc	status,0,c
  6320  001420  D009               	goto	l1195
  6321                           
  6322                           ; BSR set to: 0
  6323  001422  0E00               	movlw	0
  6324  001424  6F60               	movwf	?___fttol& (0+255),b
  6325  001426  0E00               	movlw	0
  6326  001428  6F61               	movwf	(?___fttol+1)& (0+255),b
  6327  00142A  0E00               	movlw	0
  6328  00142C  6F62               	movwf	(?___fttol+2)& (0+255),b
  6329  00142E  0E00               	movlw	0
  6330  001430  6F63               	movwf	(?___fttol+3)& (0+255),b
  6331                           
  6332                           ; BSR set to: 0
  6333  001432  0012               	return	
  6334  001434                     l1195:
  6335                           
  6336                           ; BSR set to: 0
  6337                           
  6338                           ; BSR set to: 0
  6339                           
  6340                           ; BSR set to: 0
  6341  001434  90D8               	bcf	status,0,c
  6342  001436  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6343  001438  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6344  00143A  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6345  00143C  336A               	rrcf	___fttol@lval& (0+255),f,b
  6346                           
  6347                           ; BSR set to: 0
  6348  00143E  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
  6349  001440  D7F9               	goto	l1195
  6350                           
  6351                           ; BSR set to: 0
  6352  001442  D015               	goto	u4080
  6353  001444                     l1194:
  6354                           
  6355                           ; BSR set to: 0
  6356                           
  6357                           ; BSR set to: 0
  6358  001444  0E17               	movlw	23
  6359  001446  656E               	cpfsgt	___fttol@exp1& (0+255),b
  6360  001448  D00F               	goto	l1200
  6361                           
  6362                           ; BSR set to: 0
  6363  00144A  0E00               	movlw	0
  6364  00144C  6F60               	movwf	?___fttol& (0+255),b
  6365  00144E  0E00               	movlw	0
  6366  001450  6F61               	movwf	(?___fttol+1)& (0+255),b
  6367  001452  0E00               	movlw	0
  6368  001454  6F62               	movwf	(?___fttol+2)& (0+255),b
  6369  001456  0E00               	movlw	0
  6370  001458  6F63               	movwf	(?___fttol+3)& (0+255),b
  6371                           
  6372                           ; BSR set to: 0
  6373  00145A  0012               	return	
  6374  00145C                     
  6375                           ; BSR set to: 0
  6376                           
  6377                           ; BSR set to: 0
  6378  00145C  90D8               	bcf	status,0,c
  6379  00145E  376A               	rlcf	___fttol@lval& (0+255),f,b
  6380  001460  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6381  001462  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6382  001464  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6383  001466  076E               	decf	___fttol@exp1& (0+255),f,b
  6384  001468                     l1200:
  6385                           
  6386                           ; BSR set to: 0
  6387                           
  6388                           ; BSR set to: 0
  6389  001468  516E               	movf	___fttol@exp1& (0+255),w,b
  6390  00146A  A4D8               	btfss	status,2,c
  6391  00146C  D7F7               	goto	l1201
  6392  00146E                     u4080:
  6393                           
  6394                           ; BSR set to: 0
  6395                           
  6396                           ; BSR set to: 0
  6397                           
  6398                           ; BSR set to: 0
  6399  00146E  5169               	movf	___fttol@sign1& (0+255),w,b
  6400  001470  B4D8               	btfsc	status,2,c
  6401  001472  D008               	goto	l1203
  6402                           
  6403                           ; BSR set to: 0
  6404  001474  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
  6405  001476  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
  6406  001478  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
  6407  00147A  6D6A               	negf	___fttol@lval& (0+255),b
  6408  00147C  0E00               	movlw	0
  6409  00147E  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6410  001480  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6411  001482  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6412  001484                     l1203:
  6413                           
  6414                           ; BSR set to: 0
  6415                           
  6416                           ; BSR set to: 0
  6417  001484  C06A  F060         	movff	___fttol@lval,?___fttol
  6418  001488  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
  6419  00148C  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
  6420  001490  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
  6421  001494  0012               	return	
  6422  001496                     __end_of___fttol:
  6423                           	opt stack 0
  6424                           tblptru	equ	0xFF8
  6425                           tblptrh	equ	0xFF7
  6426                           tblptrl	equ	0xFF6
  6427                           tablat	equ	0xFF5
  6428                           intcon	equ	0xFF2
  6429                           postinc0	equ	0xFEE
  6430                           wreg	equ	0xFE8
  6431                           postdec1	equ	0xFE5
  6432                           fsr1l	equ	0xFE1
  6433                           indf2	equ	0xFDF
  6434                           fsr2h	equ	0xFDA
  6435                           fsr2l	equ	0xFD9
  6436                           status	equ	0xFD8
  6437                           
  6438 ;; *************** function _Make_Back_Arrow *****************
  6439 ;; Defined at:
  6440 ;;		line 107 in file "screen_controls.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;		None
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;		None
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  1    wreg      void 
  6447 ;; Registers used:
  6448 ;;		wreg, status,2, status,0, cstack
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6458 ;;Total ram usage:        0 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:   12
  6461 ;; This function calls:
  6462 ;;		_GLCD_WriteData
  6463 ;; This function is called by:
  6464 ;;		_Draw_runTime_Menu
  6465 ;;		_Draw_Brightness_Menu
  6466 ;;		_Draw_Start_Colors_Menu
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           	psect	text33
  6471  002F9C                     __ptext33:
  6472                           	opt stack 0
  6473  002F9C                     _Make_Back_Arrow:
  6474                           	opt stack 16
  6475                           
  6476                           ;screen_controls.c: 109: GLCD_WriteData(0x04);
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;incstack = 0
  6480  002F9C  0E04               	movlw	4
  6481  002F9E  EC41  F012         	call	_GLCD_WriteData
  6482                           
  6483                           ;screen_controls.c: 110: GLCD_WriteData(0x0E);
  6484  002FA2  0E0E               	movlw	14
  6485  002FA4  EC41  F012         	call	_GLCD_WriteData
  6486                           
  6487                           ;screen_controls.c: 111: GLCD_WriteData(0x95);
  6488  002FA8  0E95               	movlw	149
  6489  002FAA  EC41  F012         	call	_GLCD_WriteData
  6490                           
  6491                           ;screen_controls.c: 112: GLCD_WriteData(0x84);
  6492  002FAE  0E84               	movlw	132
  6493  002FB0  EC41  F012         	call	_GLCD_WriteData
  6494                           
  6495                           ;screen_controls.c: 113: GLCD_WriteData(0x84);
  6496  002FB4  0E84               	movlw	132
  6497  002FB6  EC41  F012         	call	_GLCD_WriteData
  6498                           
  6499                           ;screen_controls.c: 114: GLCD_WriteData(0x44);
  6500  002FBA  0E44               	movlw	68
  6501  002FBC  EC41  F012         	call	_GLCD_WriteData
  6502                           
  6503                           ;screen_controls.c: 115: GLCD_WriteData(0x38);
  6504  002FC0  0E38               	movlw	56
  6505  002FC2  EC41  F012         	call	_GLCD_WriteData
  6506                           
  6507                           ;screen_controls.c: 116: GLCD_WriteData(0x00);
  6508  002FC6  0E00               	movlw	0
  6509  002FC8  EC41  F012         	call	_GLCD_WriteData
  6510  002FCC  0012               	return		;funcret
  6511  002FCE                     __end_of_Make_Back_Arrow:
  6512                           	opt stack 0
  6513                           tblptru	equ	0xFF8
  6514                           tblptrh	equ	0xFF7
  6515                           tblptrl	equ	0xFF6
  6516                           tablat	equ	0xFF5
  6517                           intcon	equ	0xFF2
  6518                           postinc0	equ	0xFEE
  6519                           wreg	equ	0xFE8
  6520                           postdec1	equ	0xFE5
  6521                           fsr1l	equ	0xFE1
  6522                           indf2	equ	0xFDF
  6523                           fsr2h	equ	0xFDA
  6524                           fsr2l	equ	0xFD9
  6525                           status	equ	0xFD8
  6526                           
  6527 ;; *************** function _GLCD_WriteString *****************
  6528 ;; Defined at:
  6529 ;;		line 70 in file "ks0108lib/KS0108.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;  stringToWrit    2   13[BANK0 ] PTR unsigned char 
  6532 ;;		 -> STR_37(5), STR_36(4), STR_35(7), STR_34(4), 
  6533 ;;		 -> STR_33(8), STR_32(4), Draw_Start_Colors_Menu@display(10), STR_31(6), 
  6534 ;;		 -> STR_30(13), STR_29(5), STR_28(4), Draw_Brightness_Menu@display(10), 
  6535 ;;		 -> STR_27(13), STR_26(17), STR_25(5), STR_24(7), 
  6536 ;;		 -> STR_23(13), STR_22(7), Draw_runTime_Menu@display(10), STR_21(11), 
  6537 ;;		 -> STR_20(10), STR_19(4), STR_18(9), STR_17(4), 
  6538 ;;		 -> STR_16(10), STR_15(4), STR_14(9), STR_13(4), 
  6539 ;;		 -> STR_12(11), STR_11(5), STR_10(11), STR_9(4), 
  6540 ;;		 -> Initialize_Menus@display(20), STR_8(8), STR_7(7), STR_6(10), 
  6541 ;;		 -> STR_5(4), STR_4(4), STR_3(4), Start_Color_Menu_Function@display(10), 
  6542 ;;		 -> STR_2(5), Brightness_Menu_Function@display(10), STR_1(7), Run_Time_Menu_Function@display(10), 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;		None
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  1    wreg      void 
  6547 ;; Registers used:
  6548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6554 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6557 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6558 ;;Total ram usage:        2 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; Hardware stack levels required when called:   13
  6561 ;; This function calls:
  6562 ;;		_GLCD_WriteChar
  6563 ;; This function is called by:
  6564 ;;		_Initialize_Menus
  6565 ;;		_Draw_runTime_Menu
  6566 ;;		_Draw_Brightness_Menu
  6567 ;;		_Draw_Start_Colors_Menu
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text34
  6572  0028A6                     __ptext34:
  6573                           	opt stack 0
  6574  0028A6                     _GLCD_WriteString:
  6575                           	opt stack 16
  6576                           
  6577                           ;KS0108.c: 72: while(*stringToWrite)
  6578                           
  6579                           ;incstack = 0
  6580  0028A6  D016               	goto	l637
  6581  0028A8                     
  6582                           ;KS0108.c: 73: GLCD_WriteChar(*stringToWrite++);
  6583  0028A8  C06D  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  6584  0028AC  C06E  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  6585  0028B0  0E00               	movlw	low (__mediumconst shr (0+16))
  6586  0028B2  6EF8               	movwf	tblptru,c
  6587  0028B4  0E0E               	movlw	(high __ramtop+-1)
  6588  0028B6  64F7               	cpfsgt	tblptrh,c
  6589  0028B8  D003               	bra	u3587
  6590  0028BA  0008               	tblrd		*
  6591  0028BC  50F5               	movf	tablat,w,c
  6592  0028BE  D005               	bra	u3580
  6593  0028C0                     u3587:
  6594  0028C0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6595  0028C4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6596  0028C8  50EF               	movf	indf0,w,c
  6597  0028CA                     u3580:
  6598  0028CA  EC7F  F014         	call	_GLCD_WriteChar
  6599  0028CE  0100               	movlb	0	; () banked
  6600  0028D0  4B6D               	infsnz	GLCD_WriteString@stringToWrite& (0+255),f,b
  6601  0028D2  2B6E               	incf	(GLCD_WriteString@stringToWrite+1)& (0+255),f,b
  6602  0028D4                     l637:
  6603                           
  6604                           ; BSR set to: 0
  6605  0028D4  C06D  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  6606  0028D8  C06E  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  6607  0028DC  0E00               	movlw	low (__mediumconst shr (0+16))
  6608  0028DE  6EF8               	movwf	tblptru,c
  6609  0028E0  0E0E               	movlw	(high __ramtop+-1)
  6610  0028E2  64F7               	cpfsgt	tblptrh,c
  6611  0028E4  D003               	bra	u3597
  6612  0028E6  0008               	tblrd		*
  6613  0028E8  50F5               	movf	tablat,w,c
  6614  0028EA  D005               	bra	u3590
  6615  0028EC                     u3597:
  6616  0028EC  CFF6 FFE9          	movff	tblptrl,fsr0l
  6617  0028F0  CFF7 FFEA          	movff	tblptrh,fsr0h
  6618  0028F4  50EF               	movf	indf0,w,c
  6619  0028F6                     u3590:
  6620  0028F6  0900               	iorlw	0
  6621  0028F8  B4D8               	btfsc	status,2,c
  6622  0028FA  0012               	return	
  6623  0028FC  D7D5               	goto	l638
  6624  0028FE                     __end_of_GLCD_WriteString:
  6625                           	opt stack 0
  6626                           tblptru	equ	0xFF8
  6627                           tblptrh	equ	0xFF7
  6628                           tblptrl	equ	0xFF6
  6629                           tablat	equ	0xFF5
  6630                           intcon	equ	0xFF2
  6631                           indf0	equ	0xFEF
  6632                           postinc0	equ	0xFEE
  6633                           fsr0h	equ	0xFEA
  6634                           fsr0l	equ	0xFE9
  6635                           wreg	equ	0xFE8
  6636                           postdec1	equ	0xFE5
  6637                           fsr1l	equ	0xFE1
  6638                           indf2	equ	0xFDF
  6639                           fsr2h	equ	0xFDA
  6640                           fsr2l	equ	0xFD9
  6641                           status	equ	0xFD8
  6642                           
  6643 ;; *************** function _GLCD_WriteChar *****************
  6644 ;; Defined at:
  6645 ;;		line 56 in file "ks0108lib/KS0108.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  charToWrite     1    wreg     unsigned char 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  charToWrite     1   10[BANK0 ] unsigned char 
  6650 ;;  i               2   11[BANK0 ] int 
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  1    wreg      void 
  6653 ;; Registers used:
  6654 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6661 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6663 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6664 ;;Total ram usage:        3 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:   12
  6667 ;; This function calls:
  6668 ;;		_GLCD_WriteData
  6669 ;; This function is called by:
  6670 ;;		_GLCD_WriteString
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text35
  6675  0028FE                     __ptext35:
  6676                           	opt stack 0
  6677  0028FE                     _GLCD_WriteChar:
  6678                           	opt stack 16
  6679                           
  6680                           ;incstack = 0
  6681                           ;GLCD_WriteChar@charToWrite stored from wreg
  6682  0028FE  0100               	movlb	0	; () banked
  6683  002900  6F6A               	movwf	GLCD_WriteChar@charToWrite& (0+255),b
  6684                           
  6685                           ;KS0108.c: 58: int i;
  6686                           ;KS0108.c: 59: charToWrite -= 32;
  6687  002902  0E20               	movlw	32
  6688  002904  0100               	movlb	0	; () banked
  6689  002906  5F6A               	subwf	GLCD_WriteChar@charToWrite& (0+255),f,b
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
  6693  002908  0E00               	movlw	0
  6694  00290A  6F6C               	movwf	(GLCD_WriteChar@i+1)& (0+255),b
  6695  00290C  0E00               	movlw	0
  6696  00290E  6F6B               	movwf	GLCD_WriteChar@i& (0+255),b
  6697  002910                     l4243:
  6698                           
  6699                           ; BSR set to: 0
  6700  002910  BF6C               	btfsc	(GLCD_WriteChar@i+1)& (0+255),7,b
  6701  002912  D006               	goto	l632
  6702  002914  516C               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  6703  002916  E11B               	bnz	l4253
  6704  002918  0E05               	movlw	5
  6705  00291A  5D6B               	subwf	GLCD_WriteChar@i& (0+255),w,b
  6706  00291C  B0D8               	btfsc	status,0,c
  6707  00291E  D017               	goto	u2870
  6708  002920                     l632:
  6709                           
  6710                           ; BSR set to: 0
  6711                           ;KS0108.c: 61: {
  6712                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
  6713                           
  6714                           ; BSR set to: 0
  6715  002920  516A               	movf	GLCD_WriteChar@charToWrite& (0+255),w,b
  6716  002922  0D05               	mullw	5
  6717  002924  516B               	movf	GLCD_WriteChar@i& (0+255),w,b
  6718  002926  26F3               	addwf	prodl,f,c
  6719  002928  516C               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  6720  00292A  22F4               	addwfc	prodh,f,c
  6721  00292C  0E57               	movlw	low _font5x8
  6722  00292E  24F3               	addwf	prodl,w,c
  6723  002930  6EF6               	movwf	tblptrl,c
  6724  002932  0EFD               	movlw	high _font5x8
  6725  002934  20F4               	addwfc	prodh,w,c
  6726  002936  6EF7               	movwf	tblptrh,c
  6727  002938                     	if	1	;There are 3 active tblptr bytes
  6728  002938  6AF8               	clrf	tblptru,c
  6729  00293A  0E00               	movlw	low (__mediumconst shr (0+16))
  6730  00293C  22F8               	addwfc	tblptru,f,c
  6731  00293E                     	endif
  6732  00293E  0008               	tblrd		*
  6733  002940  50F5               	movf	tablat,w,c
  6734  002942  EC41  F012         	call	_GLCD_WriteData
  6735  002946  0100               	movlb	0	; () banked
  6736  002948  4B6B               	infsnz	GLCD_WriteChar@i& (0+255),f,b
  6737  00294A  2B6C               	incf	(GLCD_WriteChar@i+1)& (0+255),f,b
  6738  00294C  D7E1               	goto	l4243
  6739  00294E                     u2870:
  6740  00294E                     l4253:
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;KS0108.c: 64: }
  6744                           ;KS0108.c: 65: GLCD_WriteData(0x00);
  6745  00294E  0E00               	movlw	0
  6746  002950  EC41  F012         	call	_GLCD_WriteData
  6747  002954  0012               	return		;funcret
  6748  002956                     __end_of_GLCD_WriteChar:
  6749                           	opt stack 0
  6750                           tblptru	equ	0xFF8
  6751                           tblptrh	equ	0xFF7
  6752                           tblptrl	equ	0xFF6
  6753                           tablat	equ	0xFF5
  6754                           prodh	equ	0xFF4
  6755                           prodl	equ	0xFF3
  6756                           intcon	equ	0xFF2
  6757                           indf0	equ	0xFEF
  6758                           postinc0	equ	0xFEE
  6759                           fsr0h	equ	0xFEA
  6760                           fsr0l	equ	0xFE9
  6761                           wreg	equ	0xFE8
  6762                           postdec1	equ	0xFE5
  6763                           fsr1l	equ	0xFE1
  6764                           indf2	equ	0xFDF
  6765                           fsr2h	equ	0xFDA
  6766                           fsr2l	equ	0xFD9
  6767                           status	equ	0xFD8
  6768                           
  6769 ;; *************** function _GLCD_Line *****************
  6770 ;; Defined at:
  6771 ;;		line 52 in file "ks0108lib/graphic.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;  X1              2   21[BANK0 ] unsigned int 
  6774 ;;  Y1              2   23[BANK0 ] unsigned int 
  6775 ;;  X2              2   25[BANK0 ] unsigned int 
  6776 ;;  Y2              2   27[BANK0 ] unsigned int 
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;  Dy              2   49[BANK0 ] int 
  6779 ;;  Dx              2   47[BANK0 ] int 
  6780 ;;  CurrentY        2   45[BANK0 ] int 
  6781 ;;  CurrentX        2   43[BANK0 ] int 
  6782 ;;  TwoDy           2   41[BANK0 ] int 
  6783 ;;  TwoDx           2   39[BANK0 ] int 
  6784 ;;  Yinc            2   37[BANK0 ] int 
  6785 ;;  Xinc            2   35[BANK0 ] int 
  6786 ;;  TwoDyAccumul    2   33[BANK0 ] int 
  6787 ;;  TwoDxAccumul    2   31[BANK0 ] int 
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1    wreg      void 
  6790 ;; Registers used:
  6791 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6797 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6798 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6799 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6800 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6801 ;;Total ram usage:       30 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:   14
  6804 ;; This function calls:
  6805 ;;		_GLCD_SetPixel
  6806 ;; This function is called by:
  6807 ;;		_Initialize_Menus
  6808 ;;		_Draw_runTime_Menu
  6809 ;;		_Draw_Brightness_Menu
  6810 ;;		_Draw_Start_Colors_Menu
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           	psect	text36
  6815  000C46                     __ptext36:
  6816                           	opt stack 0
  6817  000C46                     _GLCD_Line:
  6818                           	opt stack 15
  6819                           
  6820                           ;graphic.c: 54: int CurrentX, CurrentY, Xinc, Yinc,
  6821                           ;graphic.c: 55: Dx, Dy, TwoDx, TwoDy,
  6822                           ;graphic.c: 56: TwoDxAccumulatedError, TwoDyAccumulatedError;
  6823                           ;graphic.c: 58: Dx = (X2-X1);
  6824                           
  6825                           ;incstack = 0
  6826  000C46  C075  F07D         	movff	GLCD_Line@X1,??_GLCD_Line
  6827  000C4A  C076  F07E         	movff	GLCD_Line@X1+1,??_GLCD_Line+1
  6828  000C4E  0100               	movlb	0	; () banked
  6829  000C50  1F7D               	comf	??_GLCD_Line& (0+255),f,b
  6830  000C52  1F7E               	comf	(??_GLCD_Line+1)& (0+255),f,b
  6831  000C54  4B7D               	infsnz	??_GLCD_Line& (0+255),f,b
  6832  000C56  2B7E               	incf	(??_GLCD_Line+1)& (0+255),f,b
  6833  000C58  5179               	movf	GLCD_Line@X2& (0+255),w,b
  6834  000C5A  257D               	addwf	??_GLCD_Line& (0+255),w,b
  6835  000C5C  6F8F               	movwf	GLCD_Line@Dx& (0+255),b
  6836  000C5E  517A               	movf	(GLCD_Line@X2+1)& (0+255),w,b
  6837  000C60  217E               	addwfc	(??_GLCD_Line+1)& (0+255),w,b
  6838  000C62  6F90               	movwf	(GLCD_Line@Dx+1)& (0+255),b
  6839                           
  6840                           ;graphic.c: 59: Dy = (Y2-Y1);
  6841  000C64  C077  F07D         	movff	GLCD_Line@Y1,??_GLCD_Line
  6842  000C68  C078  F07E         	movff	GLCD_Line@Y1+1,??_GLCD_Line+1
  6843  000C6C  1F7D               	comf	??_GLCD_Line& (0+255),f,b
  6844  000C6E  1F7E               	comf	(??_GLCD_Line+1)& (0+255),f,b
  6845  000C70  4B7D               	infsnz	??_GLCD_Line& (0+255),f,b
  6846  000C72  2B7E               	incf	(??_GLCD_Line+1)& (0+255),f,b
  6847  000C74  517B               	movf	GLCD_Line@Y2& (0+255),w,b
  6848  000C76  257D               	addwf	??_GLCD_Line& (0+255),w,b
  6849  000C78  6F91               	movwf	GLCD_Line@Dy& (0+255),b
  6850  000C7A  517C               	movf	(GLCD_Line@Y2+1)& (0+255),w,b
  6851  000C7C  217E               	addwfc	(??_GLCD_Line+1)& (0+255),w,b
  6852  000C7E  6F92               	movwf	(GLCD_Line@Dy+1)& (0+255),b
  6853                           
  6854                           ;graphic.c: 61: TwoDx = Dx + Dx;
  6855  000C80  90D8               	bcf	status,0,c
  6856  000C82  358F               	rlcf	GLCD_Line@Dx& (0+255),w,b
  6857  000C84  6F87               	movwf	GLCD_Line@TwoDx& (0+255),b
  6858  000C86  3590               	rlcf	(GLCD_Line@Dx+1)& (0+255),w,b
  6859  000C88  6F88               	movwf	(GLCD_Line@TwoDx+1)& (0+255),b
  6860                           
  6861                           ;graphic.c: 62: TwoDy = Dy + Dy;
  6862  000C8A  90D8               	bcf	status,0,c
  6863  000C8C  3591               	rlcf	GLCD_Line@Dy& (0+255),w,b
  6864  000C8E  6F89               	movwf	GLCD_Line@TwoDy& (0+255),b
  6865  000C90  3592               	rlcf	(GLCD_Line@Dy+1)& (0+255),w,b
  6866  000C92  6F8A               	movwf	(GLCD_Line@TwoDy+1)& (0+255),b
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;graphic.c: 64: CurrentX = X1;
  6870  000C94  C075  F08B         	movff	GLCD_Line@X1,GLCD_Line@CurrentX
  6871  000C98  C076  F08C         	movff	GLCD_Line@X1+1,GLCD_Line@CurrentX+1
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;graphic.c: 65: CurrentY = Y1;
  6875  000C9C  C077  F08D         	movff	GLCD_Line@Y1,GLCD_Line@CurrentY
  6876  000CA0  C078  F08E         	movff	GLCD_Line@Y1+1,GLCD_Line@CurrentY+1
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;graphic.c: 67: Xinc = 1;
  6880  000CA4  0E00               	movlw	0
  6881  000CA6  6F84               	movwf	(GLCD_Line@Xinc+1)& (0+255),b
  6882  000CA8  0E01               	movlw	1
  6883  000CAA  6F83               	movwf	GLCD_Line@Xinc& (0+255),b
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;graphic.c: 68: Yinc = 1;
  6887  000CAC  0E00               	movlw	0
  6888  000CAE  6F86               	movwf	(GLCD_Line@Yinc+1)& (0+255),b
  6889  000CB0  0E01               	movlw	1
  6890  000CB2  6F85               	movwf	GLCD_Line@Yinc& (0+255),b
  6891                           
  6892                           ;graphic.c: 70: if(Dx < 0)
  6893  000CB4  AF90               	btfss	(GLCD_Line@Dx+1)& (0+255),7,b
  6894  000CB6  D00A               	goto	l583
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;graphic.c: 71: {
  6898                           ;graphic.c: 72: Xinc = -1;
  6899  000CB8  6983               	setf	GLCD_Line@Xinc& (0+255),b
  6900  000CBA  6984               	setf	(GLCD_Line@Xinc+1)& (0+255),b
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;graphic.c: 73: Dx = -Dx;
  6904  000CBC  6D8F               	negf	GLCD_Line@Dx& (0+255),b
  6905  000CBE  1F90               	comf	(GLCD_Line@Dx+1)& (0+255),f,b
  6906  000CC0  B0D8               	btfsc	status,0,c
  6907  000CC2  2B90               	incf	(GLCD_Line@Dx+1)& (0+255),f,b
  6908                           
  6909                           ;graphic.c: 74: TwoDx = -TwoDx;
  6910  000CC4  6D87               	negf	GLCD_Line@TwoDx& (0+255),b
  6911  000CC6  1F88               	comf	(GLCD_Line@TwoDx+1)& (0+255),f,b
  6912  000CC8  B0D8               	btfsc	status,0,c
  6913  000CCA  2B88               	incf	(GLCD_Line@TwoDx+1)& (0+255),f,b
  6914  000CCC                     l583:
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;graphic.c: 75: }
  6918                           ;graphic.c: 77: if (Dy < 0)
  6919                           
  6920                           ; BSR set to: 0
  6921  000CCC  AF92               	btfss	(GLCD_Line@Dy+1)& (0+255),7,b
  6922  000CCE  D00A               	goto	l584
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;graphic.c: 78: {
  6926                           ;graphic.c: 79: Yinc = -1;
  6927  000CD0  6985               	setf	GLCD_Line@Yinc& (0+255),b
  6928  000CD2  6986               	setf	(GLCD_Line@Yinc+1)& (0+255),b
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;graphic.c: 80: Dy = -Dy;
  6932  000CD4  6D91               	negf	GLCD_Line@Dy& (0+255),b
  6933  000CD6  1F92               	comf	(GLCD_Line@Dy+1)& (0+255),f,b
  6934  000CD8  B0D8               	btfsc	status,0,c
  6935  000CDA  2B92               	incf	(GLCD_Line@Dy+1)& (0+255),f,b
  6936                           
  6937                           ;graphic.c: 81: TwoDy = -TwoDy;
  6938  000CDC  6D89               	negf	GLCD_Line@TwoDy& (0+255),b
  6939  000CDE  1F8A               	comf	(GLCD_Line@TwoDy+1)& (0+255),f,b
  6940  000CE0  B0D8               	btfsc	status,0,c
  6941  000CE2  2B8A               	incf	(GLCD_Line@TwoDy+1)& (0+255),f,b
  6942  000CE4                     l584:
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;graphic.c: 82: }
  6946                           ;graphic.c: 84: GLCD_SetPixel(X1,Y1, color);
  6947                           
  6948                           ; BSR set to: 0
  6949  000CE4  C077  F06E         	movff	GLCD_Line@Y1,GLCD_SetPixel@y
  6950  000CE8  0E37               	movlw	low _color
  6951  000CEA  6EF6               	movwf	tblptrl,c
  6952  000CEC                     	if	1	;There is more than 1 active tblptr byte
  6953  000CEC  0EFF               	movlw	high _color
  6954  000CEE  6EF7               	movwf	tblptrh,c
  6955  000CF0                     	endif
  6956  000CF0                     	if	1	;There are 3 active tblptr bytes
  6957  000CF0  0E00               	movlw	low (_color shr (0+16))
  6958  000CF2  6EF8               	movwf	tblptru,c
  6959  000CF4                     	endif
  6960  000CF4  0008               	tblrd		*
  6961  000CF6  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  6962  000CFA  5175               	movf	GLCD_Line@X1& (0+255),w,b
  6963  000CFC  EC64  F00E         	call	_GLCD_SetPixel
  6964                           
  6965                           ;graphic.c: 86: if ((Dx != 0) || (Dy != 0))
  6966  000D00  0100               	movlb	0	; () banked
  6967  000D02  518F               	movf	GLCD_Line@Dx& (0+255),w,b
  6968  000D04  1190               	iorwf	(GLCD_Line@Dx+1)& (0+255),w,b
  6969  000D06  A4D8               	btfss	status,2,c
  6970  000D08  D004               	goto	u3680
  6971                           
  6972                           ; BSR set to: 0
  6973  000D0A  5191               	movf	GLCD_Line@Dy& (0+255),w,b
  6974  000D0C  1192               	iorwf	(GLCD_Line@Dy+1)& (0+255),w,b
  6975  000D0E  B4D8               	btfsc	status,2,c
  6976  000D10  0012               	return	
  6977  000D12                     u3680:
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;graphic.c: 87: {
  6981                           ;graphic.c: 89: if (Dy <= Dx)
  6982                           
  6983                           ; BSR set to: 0
  6984  000D12  5191               	movf	GLCD_Line@Dy& (0+255),w,b
  6985  000D14  5D8F               	subwf	GLCD_Line@Dx& (0+255),w,b
  6986  000D16  5190               	movf	(GLCD_Line@Dx+1)& (0+255),w,b
  6987  000D18  0A80               	xorlw	128
  6988  000D1A  6F7D               	movwf	??_GLCD_Line& (0+255),b
  6989  000D1C  5192               	movf	(GLCD_Line@Dy+1)& (0+255),w,b
  6990  000D1E  0A80               	xorlw	128
  6991  000D20  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  6992  000D22  A0D8               	btfss	status,0,c
  6993  000D24  D035               	goto	l588
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;graphic.c: 90: {
  6997                           ;graphic.c: 91: TwoDxAccumulatedError = 0;
  6998  000D26  0E00               	movlw	0
  6999  000D28  6F80               	movwf	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),b
  7000  000D2A  0E00               	movlw	0
  7001  000D2C  6F7F               	movwf	GLCD_Line@TwoDxAccumulatedError& (0+255),b
  7002  000D2E                     l4847:
  7003                           
  7004                           ; BSR set to: 0
  7005                           ;graphic.c: 93: {
  7006                           ;graphic.c: 94: CurrentX += Xinc;
  7007  000D2E  5183               	movf	GLCD_Line@Xinc& (0+255),w,b
  7008  000D30  278B               	addwf	GLCD_Line@CurrentX& (0+255),f,b
  7009  000D32  5184               	movf	(GLCD_Line@Xinc+1)& (0+255),w,b
  7010  000D34  238C               	addwfc	(GLCD_Line@CurrentX+1)& (0+255),f,b
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;graphic.c: 95: TwoDxAccumulatedError += TwoDy;
  7014  000D36  5189               	movf	GLCD_Line@TwoDy& (0+255),w,b
  7015  000D38  277F               	addwf	GLCD_Line@TwoDxAccumulatedError& (0+255),f,b
  7016  000D3A  518A               	movf	(GLCD_Line@TwoDy+1)& (0+255),w,b
  7017  000D3C  2380               	addwfc	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),f,b
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;graphic.c: 96: if(TwoDxAccumulatedError > Dx)
  7021  000D3E  517F               	movf	GLCD_Line@TwoDxAccumulatedError& (0+255),w,b
  7022  000D40  5D8F               	subwf	GLCD_Line@Dx& (0+255),w,b
  7023  000D42  5190               	movf	(GLCD_Line@Dx+1)& (0+255),w,b
  7024  000D44  0A80               	xorlw	128
  7025  000D46  6F7D               	movwf	??_GLCD_Line& (0+255),b
  7026  000D48  5180               	movf	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),w,b
  7027  000D4A  0A80               	xorlw	128
  7028  000D4C  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  7029  000D4E  B0D8               	btfsc	status,0,c
  7030  000D50  D008               	goto	l590
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;graphic.c: 97: {
  7034                           ;graphic.c: 98: CurrentY += Yinc;
  7035  000D52  5185               	movf	GLCD_Line@Yinc& (0+255),w,b
  7036  000D54  278D               	addwf	GLCD_Line@CurrentY& (0+255),f,b
  7037  000D56  5186               	movf	(GLCD_Line@Yinc+1)& (0+255),w,b
  7038  000D58  238E               	addwfc	(GLCD_Line@CurrentY+1)& (0+255),f,b
  7039                           
  7040                           ;graphic.c: 99: TwoDxAccumulatedError -= TwoDx;
  7041  000D5A  5187               	movf	GLCD_Line@TwoDx& (0+255),w,b
  7042  000D5C  5F7F               	subwf	GLCD_Line@TwoDxAccumulatedError& (0+255),f,b
  7043  000D5E  5188               	movf	(GLCD_Line@TwoDx+1)& (0+255),w,b
  7044  000D60  5B80               	subwfb	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),f,b
  7045  000D62                     l590:
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;graphic.c: 100: }
  7049                           ;graphic.c: 101: GLCD_SetPixel(CurrentX,CurrentY, color);
  7050                           
  7051                           ; BSR set to: 0
  7052  000D62  C08D  F06E         	movff	GLCD_Line@CurrentY,GLCD_SetPixel@y
  7053  000D66  0E37               	movlw	low _color
  7054  000D68  6EF6               	movwf	tblptrl,c
  7055  000D6A                     	if	1	;There is more than 1 active tblptr byte
  7056  000D6A  0EFF               	movlw	high _color
  7057  000D6C  6EF7               	movwf	tblptrh,c
  7058  000D6E                     	endif
  7059  000D6E                     	if	1	;There are 3 active tblptr bytes
  7060  000D6E  0E00               	movlw	low (_color shr (0+16))
  7061  000D70  6EF8               	movwf	tblptru,c
  7062  000D72                     	endif
  7063  000D72  0008               	tblrd		*
  7064  000D74  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  7065  000D78  518B               	movf	GLCD_Line@CurrentX& (0+255),w,b
  7066  000D7A  EC64  F00E         	call	_GLCD_SetPixel
  7067                           
  7068                           ;graphic.c: 102: }while (CurrentX != X2);
  7069  000D7E  0100               	movlb	0	; () banked
  7070  000D80  5179               	movf	GLCD_Line@X2& (0+255),w,b
  7071  000D82  198B               	xorwf	GLCD_Line@CurrentX& (0+255),w,b
  7072  000D84  E1D4               	bnz	l4847
  7073  000D86  517A               	movf	(GLCD_Line@X2+1)& (0+255),w,b
  7074  000D88  198C               	xorwf	(GLCD_Line@CurrentX+1)& (0+255),w,b
  7075  000D8A  B4D8               	btfsc	status,2,c
  7076  000D8C  0012               	return	
  7077  000D8E  D7CF               	goto	l589
  7078  000D90                     l588:
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;graphic.c: 104: else
  7082                           ;graphic.c: 105: {
  7083                           ;graphic.c: 106: TwoDyAccumulatedError = 0;
  7084                           
  7085                           ; BSR set to: 0
  7086  000D90  0E00               	movlw	0
  7087  000D92  6F82               	movwf	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),b
  7088  000D94  0E00               	movlw	0
  7089  000D96  6F81               	movwf	GLCD_Line@TwoDyAccumulatedError& (0+255),b
  7090  000D98                     l4861:
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;graphic.c: 108: {
  7094                           ;graphic.c: 109: CurrentY += Yinc;
  7095  000D98  5185               	movf	GLCD_Line@Yinc& (0+255),w,b
  7096  000D9A  278D               	addwf	GLCD_Line@CurrentY& (0+255),f,b
  7097  000D9C  5186               	movf	(GLCD_Line@Yinc+1)& (0+255),w,b
  7098  000D9E  238E               	addwfc	(GLCD_Line@CurrentY+1)& (0+255),f,b
  7099                           
  7100                           ; BSR set to: 0
  7101                           ;graphic.c: 110: TwoDyAccumulatedError += TwoDx;
  7102  000DA0  5187               	movf	GLCD_Line@TwoDx& (0+255),w,b
  7103  000DA2  2781               	addwf	GLCD_Line@TwoDyAccumulatedError& (0+255),f,b
  7104  000DA4  5188               	movf	(GLCD_Line@TwoDx+1)& (0+255),w,b
  7105  000DA6  2382               	addwfc	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),f,b
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;graphic.c: 111: if(TwoDyAccumulatedError>Dy)
  7109  000DA8  5181               	movf	GLCD_Line@TwoDyAccumulatedError& (0+255),w,b
  7110  000DAA  5D91               	subwf	GLCD_Line@Dy& (0+255),w,b
  7111  000DAC  5192               	movf	(GLCD_Line@Dy+1)& (0+255),w,b
  7112  000DAE  0A80               	xorlw	128
  7113  000DB0  6F7D               	movwf	??_GLCD_Line& (0+255),b
  7114  000DB2  5182               	movf	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),w,b
  7115  000DB4  0A80               	xorlw	128
  7116  000DB6  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  7117  000DB8  B0D8               	btfsc	status,0,c
  7118  000DBA  D008               	goto	l594
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;graphic.c: 112: {
  7122                           ;graphic.c: 113: CurrentX += Xinc;
  7123  000DBC  5183               	movf	GLCD_Line@Xinc& (0+255),w,b
  7124  000DBE  278B               	addwf	GLCD_Line@CurrentX& (0+255),f,b
  7125  000DC0  5184               	movf	(GLCD_Line@Xinc+1)& (0+255),w,b
  7126  000DC2  238C               	addwfc	(GLCD_Line@CurrentX+1)& (0+255),f,b
  7127                           
  7128                           ;graphic.c: 114: TwoDyAccumulatedError -= TwoDy;
  7129  000DC4  5189               	movf	GLCD_Line@TwoDy& (0+255),w,b
  7130  000DC6  5F81               	subwf	GLCD_Line@TwoDyAccumulatedError& (0+255),f,b
  7131  000DC8  518A               	movf	(GLCD_Line@TwoDy+1)& (0+255),w,b
  7132  000DCA  5B82               	subwfb	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),f,b
  7133  000DCC                     l594:
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;graphic.c: 115: }
  7137                           ;graphic.c: 116: GLCD_SetPixel(CurrentX,CurrentY, color);
  7138                           
  7139                           ; BSR set to: 0
  7140  000DCC  C08D  F06E         	movff	GLCD_Line@CurrentY,GLCD_SetPixel@y
  7141  000DD0  0E37               	movlw	low _color
  7142  000DD2  6EF6               	movwf	tblptrl,c
  7143  000DD4                     	if	1	;There is more than 1 active tblptr byte
  7144  000DD4  0EFF               	movlw	high _color
  7145  000DD6  6EF7               	movwf	tblptrh,c
  7146  000DD8                     	endif
  7147  000DD8                     	if	1	;There are 3 active tblptr bytes
  7148  000DD8  0E00               	movlw	low (_color shr (0+16))
  7149  000DDA  6EF8               	movwf	tblptru,c
  7150  000DDC                     	endif
  7151  000DDC  0008               	tblrd		*
  7152  000DDE  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  7153  000DE2  518B               	movf	GLCD_Line@CurrentX& (0+255),w,b
  7154  000DE4  EC64  F00E         	call	_GLCD_SetPixel
  7155                           
  7156                           ;graphic.c: 117: }while (CurrentY != Y2);
  7157  000DE8  0100               	movlb	0	; () banked
  7158  000DEA  517B               	movf	GLCD_Line@Y2& (0+255),w,b
  7159  000DEC  198D               	xorwf	GLCD_Line@CurrentY& (0+255),w,b
  7160  000DEE  E1D4               	bnz	l4861
  7161  000DF0  517C               	movf	(GLCD_Line@Y2+1)& (0+255),w,b
  7162  000DF2  198E               	xorwf	(GLCD_Line@CurrentY+1)& (0+255),w,b
  7163  000DF4  B4D8               	btfsc	status,2,c
  7164  000DF6  0012               	return	
  7165  000DF8  D7CF               	goto	l593
  7166  000DFA                     __end_of_GLCD_Line:
  7167                           	opt stack 0
  7168                           tblptru	equ	0xFF8
  7169                           tblptrh	equ	0xFF7
  7170                           tblptrl	equ	0xFF6
  7171                           tablat	equ	0xFF5
  7172                           prodh	equ	0xFF4
  7173                           prodl	equ	0xFF3
  7174                           intcon	equ	0xFF2
  7175                           indf0	equ	0xFEF
  7176                           postinc0	equ	0xFEE
  7177                           fsr0h	equ	0xFEA
  7178                           fsr0l	equ	0xFE9
  7179                           wreg	equ	0xFE8
  7180                           postdec1	equ	0xFE5
  7181                           fsr1l	equ	0xFE1
  7182                           indf2	equ	0xFDF
  7183                           fsr2h	equ	0xFDA
  7184                           fsr2l	equ	0xFD9
  7185                           status	equ	0xFD8
  7186                           
  7187 ;; *************** function _GLCD_SetPixel *****************
  7188 ;; Defined at:
  7189 ;;		line 78 in file "ks0108lib/KS0108.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;  x               1    wreg     unsigned char 
  7192 ;;  y               1   14[BANK0 ] unsigned char 
  7193 ;;  color           1   15[BANK0 ] unsigned char 
  7194 ;; Auto vars:     Size  Location     Type
  7195 ;;  x               1   19[BANK0 ] unsigned char 
  7196 ;;  tmp             1   18[BANK0 ] unsigned char 
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		wreg, status,2, status,0, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7207 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7208 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7209 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7210 ;;Total ram usage:        7 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:   13
  7213 ;; This function calls:
  7214 ;;		_GLCD_GoTo
  7215 ;;		_GLCD_ReadData
  7216 ;;		_GLCD_WriteData
  7217 ;;		___awdiv
  7218 ;; This function is called by:
  7219 ;;		_GLCD_Line
  7220 ;;		_GLCD_Rectangle
  7221 ;;		_GLCD_Circle
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text37
  7226  001CC8                     __ptext37:
  7227                           	opt stack 0
  7228  001CC8                     _GLCD_SetPixel:
  7229                           	opt stack 15
  7230                           
  7231                           ; BSR set to: 0
  7232                           ;incstack = 0
  7233                           ;GLCD_SetPixel@x stored from wreg
  7234  001CC8  0100               	movlb	0	; () banked
  7235  001CCA  6F73               	movwf	GLCD_SetPixel@x& (0+255),b
  7236                           
  7237                           ;KS0108.c: 80: unsigned char tmp;
  7238                           ;KS0108.c: 81: GLCD_GoTo(x, (y / 8));
  7239  001CCC  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  7240  001CD0  0100               	movlb	0	; () banked
  7241  001CD2  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  7242  001CD4  0E00               	movlw	0
  7243  001CD6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7244  001CD8  0E08               	movlw	8
  7245  001CDA  6F62               	movwf	___awdiv@divisor& (0+255),b
  7246  001CDC  EC02  F011         	call	___awdiv	;wreg free
  7247  001CE0  0100               	movlb	0	; () banked
  7248  001CE2  5160               	movf	?___awdiv& (0+255),w,b
  7249  001CE4  6F74               	movwf	_GLCD_SetPixel$1888& (0+255),b
  7250                           
  7251                           ;KS0108.c: 80: unsigned char tmp;
  7252                           ;KS0108.c: 81: GLCD_GoTo(x, (y / 8));
  7253  001CE6  C074  F06B         	movff	_GLCD_SetPixel$1888,GLCD_GoTo@y
  7254  001CEA  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  7255  001CEC  ECBE  F010         	call	_GLCD_GoTo
  7256                           
  7257                           ;KS0108.c: 82: tmp = GLCD_ReadData();
  7258  001CF0  EC7D  F012         	call	_GLCD_ReadData	;wreg free
  7259  001CF4  0100               	movlb	0	; () banked
  7260  001CF6  6F72               	movwf	GLCD_SetPixel@tmp& (0+255),b
  7261                           
  7262                           ;KS0108.c: 83: GLCD_GoTo(x, (y / 8));
  7263  001CF8  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  7264  001CFC  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  7265  001CFE  0E00               	movlw	0
  7266  001D00  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7267  001D02  0E08               	movlw	8
  7268  001D04  6F62               	movwf	___awdiv@divisor& (0+255),b
  7269  001D06  EC02  F011         	call	___awdiv	;wreg free
  7270  001D0A  0100               	movlb	0	; () banked
  7271  001D0C  5160               	movf	?___awdiv& (0+255),w,b
  7272  001D0E  6F74               	movwf	_GLCD_SetPixel$1888& (0+255),b
  7273                           
  7274                           ;KS0108.c: 83: GLCD_GoTo(x, (y / 8));
  7275  001D10  C074  F06B         	movff	_GLCD_SetPixel$1888,GLCD_GoTo@y
  7276  001D14  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  7277  001D16  ECBE  F010         	call	_GLCD_GoTo
  7278                           
  7279                           ;KS0108.c: 84: tmp = GLCD_ReadData();
  7280  001D1A  EC7D  F012         	call	_GLCD_ReadData	;wreg free
  7281  001D1E  0100               	movlb	0	; () banked
  7282  001D20  6F72               	movwf	GLCD_SetPixel@tmp& (0+255),b
  7283                           
  7284                           ;KS0108.c: 85: GLCD_GoTo(x, (y / 8));
  7285  001D22  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  7286  001D26  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  7287  001D28  0E00               	movlw	0
  7288  001D2A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7289  001D2C  0E08               	movlw	8
  7290  001D2E  6F62               	movwf	___awdiv@divisor& (0+255),b
  7291  001D30  EC02  F011         	call	___awdiv	;wreg free
  7292  001D34  0100               	movlb	0	; () banked
  7293  001D36  5160               	movf	?___awdiv& (0+255),w,b
  7294  001D38  6F74               	movwf	_GLCD_SetPixel$1888& (0+255),b
  7295                           
  7296                           ;KS0108.c: 85: GLCD_GoTo(x, (y / 8));
  7297  001D3A  C074  F06B         	movff	_GLCD_SetPixel$1888,GLCD_GoTo@y
  7298  001D3E  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  7299  001D40  ECBE  F010         	call	_GLCD_GoTo
  7300                           
  7301                           ;KS0108.c: 86: tmp |= (1 << (y % 8));
  7302  001D44  C06E  F070         	movff	GLCD_SetPixel@y,??_GLCD_SetPixel
  7303  001D48  0E07               	movlw	7
  7304  001D4A  0100               	movlb	0	; () banked
  7305  001D4C  1770               	andwf	??_GLCD_SetPixel& (0+255),f,b
  7306  001D4E  0E01               	movlw	1
  7307  001D50  6F71               	movwf	(??_GLCD_SetPixel+1)& (0+255),b
  7308  001D52  2B70               	incf	??_GLCD_SetPixel& (0+255),f,b
  7309  001D54  D002               	goto	u2854
  7310  001D56                     u2855:
  7311  001D56  90D8               	bcf	status,0,c
  7312  001D58  3771               	rlcf	(??_GLCD_SetPixel+1)& (0+255),f,b
  7313  001D5A                     u2854:
  7314  001D5A  2F70               	decfsz	??_GLCD_SetPixel& (0+255),f,b
  7315  001D5C  D7FC               	goto	u2855
  7316  001D5E  0100               	movlb	0	; () banked
  7317  001D60  5171               	movf	(??_GLCD_SetPixel+1)& (0+255),w,b
  7318  001D62  1372               	iorwf	GLCD_SetPixel@tmp& (0+255),f,b
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;KS0108.c: 87: GLCD_WriteData(tmp);
  7322  001D64  5172               	movf	GLCD_SetPixel@tmp& (0+255),w,b
  7323  001D66  EC41  F012         	call	_GLCD_WriteData
  7324  001D6A  0012               	return		;funcret
  7325  001D6C                     __end_of_GLCD_SetPixel:
  7326                           	opt stack 0
  7327                           tblptru	equ	0xFF8
  7328                           tblptrh	equ	0xFF7
  7329                           tblptrl	equ	0xFF6
  7330                           tablat	equ	0xFF5
  7331                           prodh	equ	0xFF4
  7332                           prodl	equ	0xFF3
  7333                           intcon	equ	0xFF2
  7334                           indf0	equ	0xFEF
  7335                           postinc0	equ	0xFEE
  7336                           fsr0h	equ	0xFEA
  7337                           fsr0l	equ	0xFE9
  7338                           wreg	equ	0xFE8
  7339                           postdec1	equ	0xFE5
  7340                           fsr1l	equ	0xFE1
  7341                           indf2	equ	0xFDF
  7342                           fsr2h	equ	0xFDA
  7343                           fsr2l	equ	0xFD9
  7344                           status	equ	0xFD8
  7345                           
  7346 ;; *************** function _GLCD_ReadData *****************
  7347 ;; Defined at:
  7348 ;;		line 94 in file "ks0108lib/KS0108-PIC18.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;		None
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;  data            1    9[BANK0 ] unsigned char 
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  1    wreg      unsigned char 
  7355 ;; Registers used:
  7356 ;;		wreg, status,2, status,0, cstack
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7364 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7365 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7366 ;;Total ram usage:        2 bytes
  7367 ;; Hardware stack levels used:    1
  7368 ;; Hardware stack levels required when called:   11
  7369 ;; This function calls:
  7370 ;;		_GLCD_Delay
  7371 ;;		_GLCD_DisableController
  7372 ;;		_GLCD_EnableController
  7373 ;;		_GLCD_ReadStatus
  7374 ;;		___awdiv
  7375 ;; This function is called by:
  7376 ;;		_GLCD_SetPixel
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text38
  7381  0024FA                     __ptext38:
  7382                           	opt stack 0
  7383  0024FA                     _GLCD_ReadData:
  7384                           	opt stack 16
  7385                           
  7386                           ;KS0108-PIC18.c: 96: unsigned char data;
  7387                           ;KS0108-PIC18.c: 97: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  7388                           
  7389                           ;incstack = 0
  7390  0024FA  C0C4  F060         	movff	_screen_x,___awdiv@dividend
  7391  0024FE  0100               	movlb	0	; () banked
  7392  002500  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  7393  002502  0E00               	movlw	0
  7394  002504  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7395  002506  0E40               	movlw	64
  7396  002508  6F62               	movwf	___awdiv@divisor& (0+255),b
  7397  00250A  EC02  F011         	call	___awdiv	;wreg free
  7398  00250E  0100               	movlb	0	; () banked
  7399  002510  5160               	movf	?___awdiv& (0+255),w,b
  7400  002512  EC4A  F018         	call	_GLCD_ReadStatus
  7401  002516  0100               	movlb	0	; () banked
  7402  002518  6F68               	movwf	??_GLCD_ReadData& (0+255),b
  7403  00251A  BF68               	btfsc	??_GLCD_ReadData& (0+255),7,b
  7404  00251C  D7EE               	goto	_GLCD_ReadData
  7405                           
  7406                           ; BSR set to: 0
  7407                           ;KS0108-PIC18.c: 98: TRISD = 0xFF;
  7408  00251E  6895               	setf	3989,c	;volatile
  7409                           
  7410                           ; BSR set to: 0
  7411                           ;KS0108-PIC18.c: 99: PORTA |= ((1 << 1) | (1 << 2));
  7412  002520  0E06               	movlw	6
  7413  002522  1280               	iorwf	3968,f,c	;volatile
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;KS0108-PIC18.c: 100: GLCD_EnableController(screen_x / 64);
  7417  002524  C0C4  F060         	movff	_screen_x,___awdiv@dividend
  7418  002528  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  7419  00252A  0E00               	movlw	0
  7420  00252C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7421  00252E  0E40               	movlw	64
  7422  002530  6F62               	movwf	___awdiv@divisor& (0+255),b
  7423  002532  EC02  F011         	call	___awdiv	;wreg free
  7424  002536  0100               	movlb	0	; () banked
  7425  002538  5160               	movf	?___awdiv& (0+255),w,b
  7426  00253A  EC60  F018         	call	_GLCD_EnableController
  7427                           
  7428                           ;KS0108-PIC18.c: 102: PORTA |= (1 << 3);
  7429  00253E  8680               	bsf	3968,3,c	;volatile
  7430                           
  7431                           ;KS0108-PIC18.c: 103: GLCD_Delay();
  7432  002540  EC67  F019         	call	_GLCD_Delay	;wreg free
  7433                           
  7434                           ;KS0108-PIC18.c: 104: data = PORTD;
  7435  002544  CF83 F069          	movff	3971,GLCD_ReadData@data	;volatile
  7436                           
  7437                           ;KS0108-PIC18.c: 105: PORTA &= ~(1 << 3);
  7438  002548  9680               	bcf	3968,3,c	;volatile
  7439                           
  7440                           ;KS0108-PIC18.c: 106: GLCD_DisableController(screen_x / 64);
  7441  00254A  C0C4  F060         	movff	_screen_x,___awdiv@dividend
  7442  00254E  0100               	movlb	0	; () banked
  7443  002550  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  7444  002552  0E00               	movlw	0
  7445  002554  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7446  002556  0E40               	movlw	64
  7447  002558  6F62               	movwf	___awdiv@divisor& (0+255),b
  7448  00255A  EC02  F011         	call	___awdiv	;wreg free
  7449  00255E  0100               	movlb	0	; () banked
  7450  002560  5160               	movf	?___awdiv& (0+255),w,b
  7451  002562  EC75  F018         	call	_GLCD_DisableController
  7452                           
  7453                           ;KS0108-PIC18.c: 107: screen_x++;
  7454  002566  0100               	movlb	0	; () banked
  7455  002568  2BC4               	incf	_screen_x& (0+255),f,b
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;KS0108-PIC18.c: 108: return data;
  7459  00256A  5169               	movf	GLCD_ReadData@data& (0+255),w,b
  7460  00256C  0012               	return	
  7461  00256E                     __end_of_GLCD_ReadData:
  7462                           	opt stack 0
  7463                           tblptru	equ	0xFF8
  7464                           tblptrh	equ	0xFF7
  7465                           tblptrl	equ	0xFF6
  7466                           tablat	equ	0xFF5
  7467                           prodh	equ	0xFF4
  7468                           prodl	equ	0xFF3
  7469                           intcon	equ	0xFF2
  7470                           indf0	equ	0xFEF
  7471                           postinc0	equ	0xFEE
  7472                           fsr0h	equ	0xFEA
  7473                           fsr0l	equ	0xFE9
  7474                           wreg	equ	0xFE8
  7475                           postdec1	equ	0xFE5
  7476                           fsr1l	equ	0xFE1
  7477                           indf2	equ	0xFDF
  7478                           fsr2h	equ	0xFDA
  7479                           fsr2l	equ	0xFD9
  7480                           status	equ	0xFD8
  7481                           
  7482 ;; *************** function _GLCD_ClearScreen *****************
  7483 ;; Defined at:
  7484 ;;		line 43 in file "ks0108lib/KS0108.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;		None
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;  j               1   15[BANK0 ] unsigned char 
  7489 ;;  i               1   14[BANK0 ] unsigned char 
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  1    wreg      void 
  7492 ;; Registers used:
  7493 ;;		wreg, status,2, status,0, cstack
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7500 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7502 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7503 ;;Total ram usage:        2 bytes
  7504 ;; Hardware stack levels used:    1
  7505 ;; Hardware stack levels required when called:   13
  7506 ;; This function calls:
  7507 ;;		_GLCD_GoTo
  7508 ;;		_GLCD_WriteData
  7509 ;; This function is called by:
  7510 ;;		_main
  7511 ;;		_Initialize_Menus
  7512 ;;		_Draw_runTime_Menu
  7513 ;;		_Draw_Brightness_Menu
  7514 ;;		_Draw_Start_Colors_Menu
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           	psect	text39
  7519  002F66                     __ptext39:
  7520                           	opt stack 0
  7521  002F66                     _GLCD_ClearScreen:
  7522                           	opt stack 16
  7523                           
  7524                           ;KS0108.c: 45: unsigned char i, j;
  7525                           ;KS0108.c: 46: for(j = 0; j < 64/8; j++)
  7526                           
  7527                           ; BSR set to: 0
  7528                           ;incstack = 0
  7529  002F66  0E00               	movlw	0
  7530  002F68  0100               	movlb	0	; () banked
  7531  002F6A  6F6F               	movwf	GLCD_ClearScreen@j& (0+255),b
  7532  002F6C                     l4795:
  7533                           
  7534                           ; BSR set to: 0
  7535  002F6C  0E07               	movlw	7
  7536  002F6E  656F               	cpfsgt	GLCD_ClearScreen@j& (0+255),b
  7537  002F70  D001               	goto	l625
  7538  002F72  0012               	return	
  7539  002F74                     l625:
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;KS0108.c: 47: {
  7543                           ;KS0108.c: 48: GLCD_GoTo(0,j);
  7544                           
  7545                           ; BSR set to: 0
  7546  002F74  C06F  F06B         	movff	GLCD_ClearScreen@j,GLCD_GoTo@y
  7547  002F78  0E00               	movlw	0
  7548  002F7A  ECBE  F010         	call	_GLCD_GoTo
  7549                           
  7550                           ;KS0108.c: 49: for(i = 0; i < 128; i++)
  7551  002F7E  0E00               	movlw	0
  7552  002F80  0100               	movlb	0	; () banked
  7553  002F82  6F6E               	movwf	GLCD_ClearScreen@i& (0+255),b
  7554  002F84                     l4803:
  7555                           
  7556                           ; BSR set to: 0
  7557  002F84  0E7F               	movlw	127
  7558  002F86  656E               	cpfsgt	GLCD_ClearScreen@i& (0+255),b
  7559  002F88  D001               	goto	l627
  7560  002F8A  D006               	goto	u3630
  7561  002F8C                     l627:
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;KS0108.c: 50: GLCD_WriteData(0x00);
  7565                           
  7566                           ; BSR set to: 0
  7567  002F8C  0E00               	movlw	0
  7568  002F8E  EC41  F012         	call	_GLCD_WriteData
  7569  002F92  0100               	movlb	0	; () banked
  7570  002F94  2B6E               	incf	GLCD_ClearScreen@i& (0+255),f,b
  7571  002F96  D7F6               	goto	l4803
  7572  002F98                     u3630:
  7573                           
  7574                           ; BSR set to: 0
  7575                           
  7576                           ; BSR set to: 0
  7577  002F98  2B6F               	incf	GLCD_ClearScreen@j& (0+255),f,b
  7578  002F9A  D7E8               	goto	l4795
  7579  002F9C                     __end_of_GLCD_ClearScreen:
  7580                           	opt stack 0
  7581                           tblptru	equ	0xFF8
  7582                           tblptrh	equ	0xFF7
  7583                           tblptrl	equ	0xFF6
  7584                           tablat	equ	0xFF5
  7585                           prodh	equ	0xFF4
  7586                           prodl	equ	0xFF3
  7587                           intcon	equ	0xFF2
  7588                           indf0	equ	0xFEF
  7589                           postinc0	equ	0xFEE
  7590                           fsr0h	equ	0xFEA
  7591                           fsr0l	equ	0xFE9
  7592                           wreg	equ	0xFE8
  7593                           postdec1	equ	0xFE5
  7594                           fsr1l	equ	0xFE1
  7595                           indf2	equ	0xFDF
  7596                           fsr2h	equ	0xFDA
  7597                           fsr2l	equ	0xFD9
  7598                           status	equ	0xFD8
  7599                           
  7600 ;; *************** function _Draw_Arrow *****************
  7601 ;; Defined at:
  7602 ;;		line 63 in file "screen_controls.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;		None
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;		None
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1    wreg      void 
  7609 ;; Registers used:
  7610 ;;		wreg, status,2, status,0, cstack
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7620 ;;Total ram usage:        0 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; Hardware stack levels required when called:   14
  7623 ;; This function calls:
  7624 ;;		_Clear_Arrow_Column
  7625 ;;		_Clear_Brightness_Arrows
  7626 ;;		_Clear_runTime_Arrows
  7627 ;;		_Clear_startColors_Arrows
  7628 ;;		_Draw_Brightness_Arrow
  7629 ;;		_Draw_runTime_Arrow
  7630 ;;		_Draw_startColors_Arrow
  7631 ;;		_GLCD_GoTo
  7632 ;;		_Make_Arrow
  7633 ;; This function is called by:
  7634 ;;		_main
  7635 ;;		_Check_Buttons
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639                           	psect	text40
  7640  002722                     __ptext40:
  7641                           	opt stack 0
  7642  002722                     _Draw_Arrow:
  7643                           	opt stack 16
  7644                           
  7645                           ;screen_controls.c: 67: switch(currentContext)
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;incstack = 0
  7649  002722  D023               	goto	l784
  7650  002724                     
  7651                           ;screen_controls.c: 70: Clear_Arrow_Column();
  7652  002724  ECF7  F013         	call	_Clear_Arrow_Column	;wreg free
  7653                           
  7654                           ;screen_controls.c: 71: GLCD_GoTo(0, mainState);
  7655  002728  C05D  F06B         	movff	_mainState,GLCD_GoTo@y
  7656  00272C  0E00               	movlw	0
  7657  00272E  ECBE  F010         	call	_GLCD_GoTo
  7658                           
  7659                           ;screen_controls.c: 72: Make_Arrow();
  7660  002732  EC1F  F019         	call	_Make_Arrow	;wreg free
  7661                           
  7662                           ;screen_controls.c: 73: break;
  7663  002736  0012               	return	
  7664  002738                     
  7665                           ;screen_controls.c: 76: Clear_runTime_Arrows();
  7666  002738  EC87  F011         	call	_Clear_runTime_Arrows	;wreg free
  7667                           
  7668                           ;screen_controls.c: 77: Draw_runTime_Arrow();
  7669  00273C  ECB7  F012         	call	_Draw_runTime_Arrow	;wreg free
  7670                           
  7671                           ;screen_controls.c: 78: break;
  7672  002740  0012               	return	
  7673  002742                     
  7674                           ;screen_controls.c: 81: Clear_Brightness_Arrows();
  7675  002742  ECAB  F014         	call	_Clear_Brightness_Arrows	;wreg free
  7676                           
  7677                           ;screen_controls.c: 82: Draw_Brightness_Arrow();
  7678  002746  ECD7  F014         	call	_Draw_Brightness_Arrow	;wreg free
  7679                           
  7680                           ;screen_controls.c: 83: break;
  7681  00274A  0012               	return	
  7682  00274C                     
  7683                           ;screen_controls.c: 86: Clear_startColors_Arrows();
  7684  00274C  EC10  F00E         	call	_Clear_startColors_Arrows	;wreg free
  7685                           
  7686                           ;screen_controls.c: 87: Draw_startColors_Arrow();
  7687  002750  ECEA  F00F         	call	_Draw_startColors_Arrow	;wreg free
  7688                           
  7689                           ;screen_controls.c: 88: break;
  7690  002754  0012               	return	
  7691  002756                     
  7692                           ;screen_controls.c: 91: Clear_Arrow_Column();
  7693  002756  ECF7  F013         	call	_Clear_Arrow_Column	;wreg free
  7694                           
  7695                           ;screen_controls.c: 92: GLCD_GoTo(0, mainState);
  7696  00275A  C05D  F06B         	movff	_mainState,GLCD_GoTo@y
  7697  00275E  0E00               	movlw	0
  7698  002760  ECBE  F010         	call	_GLCD_GoTo
  7699                           
  7700                           ;screen_controls.c: 93: Make_Arrow();
  7701  002764  EC1F  F019         	call	_Make_Arrow	;wreg free
  7702                           
  7703                           ;screen_controls.c: 95: }
  7704                           
  7705                           ;screen_controls.c: 94: break;
  7706  002768  0012               	return	
  7707  00276A                     l784:
  7708  00276A  0100               	movlb	0	; () banked
  7709  00276C  51CC               	movf	_currentContext& (0+255),w,b
  7710                           
  7711                           ; Switch size 1, requested type "space"
  7712                           ; Number of cases is 4, Range of values is 0 to 3
  7713                           ; switch strategies available:
  7714                           ; Name         Instructions Cycles
  7715                           ; simple_byte           13     7 (average)
  7716                           ;	Chosen strategy is simple_byte
  7717  00276E  0A00               	xorlw	0	; case 0
  7718  002770  B4D8               	btfsc	status,2,c
  7719  002772  D7D8               	goto	l785
  7720  002774  0A01               	xorlw	1	; case 1
  7721  002776  B4D8               	btfsc	status,2,c
  7722  002778  D7DF               	goto	l787
  7723  00277A  0A03               	xorlw	3	; case 2
  7724  00277C  B4D8               	btfsc	status,2,c
  7725  00277E  D7E1               	goto	l788
  7726  002780  0A01               	xorlw	1	; case 3
  7727  002782  B4D8               	btfsc	status,2,c
  7728  002784  D7E3               	goto	l789
  7729  002786  D7E7               	goto	l790
  7730  002788                     __end_of_Draw_Arrow:
  7731                           	opt stack 0
  7732                           tblptru	equ	0xFF8
  7733                           tblptrh	equ	0xFF7
  7734                           tblptrl	equ	0xFF6
  7735                           tablat	equ	0xFF5
  7736                           prodh	equ	0xFF4
  7737                           prodl	equ	0xFF3
  7738                           intcon	equ	0xFF2
  7739                           indf0	equ	0xFEF
  7740                           postinc0	equ	0xFEE
  7741                           fsr0h	equ	0xFEA
  7742                           fsr0l	equ	0xFE9
  7743                           wreg	equ	0xFE8
  7744                           postdec1	equ	0xFE5
  7745                           fsr1l	equ	0xFE1
  7746                           indf2	equ	0xFDF
  7747                           fsr2h	equ	0xFDA
  7748                           fsr2l	equ	0xFD9
  7749                           status	equ	0xFD8
  7750                           
  7751 ;; *************** function _Draw_startColors_Arrow *****************
  7752 ;; Defined at:
  7753 ;;		line 303 in file "screen_controls.c"
  7754 ;; Parameters:    Size  Location     Type
  7755 ;;		None
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;		None
  7758 ;; Return value:  Size  Location     Type
  7759 ;;                  1    wreg      void 
  7760 ;; Registers used:
  7761 ;;		wreg, status,2, status,0, cstack
  7762 ;; Tracked objects:
  7763 ;;		On entry : 0/0
  7764 ;;		On exit  : 0/0
  7765 ;;		Unchanged: 0/0
  7766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7771 ;;Total ram usage:        0 bytes
  7772 ;; Hardware stack levels used:    1
  7773 ;; Hardware stack levels required when called:   13
  7774 ;; This function calls:
  7775 ;;		_GLCD_GoTo
  7776 ;;		_Make_Arrow
  7777 ;; This function is called by:
  7778 ;;		_Draw_Arrow
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text41
  7783  001FD4                     __ptext41:
  7784                           	opt stack 0
  7785  001FD4                     _Draw_startColors_Arrow:
  7786                           	opt stack 16
  7787                           
  7788                           ;screen_controls.c: 305: switch(startColorsContext)
  7789                           
  7790                           ;incstack = 0
  7791  001FD4  D037               	goto	l847
  7792  001FD6                     
  7793                           ;screen_controls.c: 308: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  7794  001FD6  0E02               	movlw	2
  7795  001FD8  0100               	movlb	0	; () banked
  7796  001FDA  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  7797  001FDC  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  7798  001FDE  0800               	sublw	0
  7799  001FE0  25BD               	addwf	_runTimeX& (0+255),w,b
  7800  001FE2  ECBE  F010         	call	_GLCD_GoTo
  7801                           
  7802                           ;screen_controls.c: 309: Make_Arrow();
  7803  001FE6  EC1F  F019         	call	_Make_Arrow	;wreg free
  7804                           
  7805                           ;screen_controls.c: 310: break;
  7806  001FEA  0012               	return	
  7807  001FEC                     
  7808                           ;screen_controls.c: 313: GLCD_GoTo((runTimeX - ARROW_SIZE), 3);
  7809  001FEC  0E03               	movlw	3
  7810  001FEE  0100               	movlb	0	; () banked
  7811  001FF0  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  7812  001FF2  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  7813  001FF4  0800               	sublw	0
  7814  001FF6  25BD               	addwf	_runTimeX& (0+255),w,b
  7815  001FF8  ECBE  F010         	call	_GLCD_GoTo
  7816                           
  7817                           ;screen_controls.c: 314: Make_Arrow();
  7818  001FFC  EC1F  F019         	call	_Make_Arrow	;wreg free
  7819                           
  7820                           ;screen_controls.c: 315: break;
  7821  002000  0012               	return	
  7822  002002                     
  7823                           ;screen_controls.c: 318: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  7824  002002  0E04               	movlw	4
  7825  002004  0100               	movlb	0	; () banked
  7826  002006  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  7827  002008  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  7828  00200A  0800               	sublw	0
  7829  00200C  25BD               	addwf	_runTimeX& (0+255),w,b
  7830  00200E  ECBE  F010         	call	_GLCD_GoTo
  7831                           
  7832                           ;screen_controls.c: 319: Make_Arrow();
  7833  002012  EC1F  F019         	call	_Make_Arrow	;wreg free
  7834                           
  7835                           ;screen_controls.c: 320: break;
  7836  002016  0012               	return	
  7837  002018                     
  7838                           ;screen_controls.c: 323: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  7839  002018  0E06               	movlw	6
  7840  00201A  0100               	movlb	0	; () banked
  7841  00201C  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  7842  00201E  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  7843  002020  0800               	sublw	0
  7844  002022  25BD               	addwf	_runTimeX& (0+255),w,b
  7845  002024  ECBE  F010         	call	_GLCD_GoTo
  7846                           
  7847                           ;screen_controls.c: 324: Make_Arrow();
  7848  002028  EC1F  F019         	call	_Make_Arrow	;wreg free
  7849                           
  7850                           ;screen_controls.c: 326: break;
  7851                           
  7852                           ;screen_controls.c: 325: break;
  7853  00202C  0012               	return	
  7854  00202E                     
  7855                           ;screen_controls.c: 329: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  7856  00202E  0E02               	movlw	2
  7857  002030  0100               	movlb	0	; () banked
  7858  002032  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  7859  002034  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  7860  002036  0800               	sublw	0
  7861  002038  25BD               	addwf	_runTimeX& (0+255),w,b
  7862  00203A  ECBE  F010         	call	_GLCD_GoTo
  7863                           
  7864                           ;screen_controls.c: 330: Make_Arrow();
  7865  00203E  EC1F  F019         	call	_Make_Arrow	;wreg free
  7866                           
  7867                           ;screen_controls.c: 334: }
  7868                           
  7869                           ;screen_controls.c: 331: break;
  7870  002042  0012               	return	
  7871  002044                     l847:
  7872  002044  0100               	movlb	0	; () banked
  7873  002046  51C9               	movf	_startColorsContext& (0+255),w,b
  7874                           
  7875                           ; Switch size 1, requested type "space"
  7876                           ; Number of cases is 4, Range of values is 0 to 3
  7877                           ; switch strategies available:
  7878                           ; Name         Instructions Cycles
  7879                           ; simple_byte           13     7 (average)
  7880                           ;	Chosen strategy is simple_byte
  7881  002048  0A00               	xorlw	0	; case 0
  7882  00204A  B4D8               	btfsc	status,2,c
  7883  00204C  D7C4               	goto	l848
  7884  00204E  0A01               	xorlw	1	; case 1
  7885  002050  B4D8               	btfsc	status,2,c
  7886  002052  D7CC               	goto	l850
  7887  002054  0A03               	xorlw	3	; case 2
  7888  002056  B4D8               	btfsc	status,2,c
  7889  002058  D7D4               	goto	l851
  7890  00205A  0A01               	xorlw	1	; case 3
  7891  00205C  B4D8               	btfsc	status,2,c
  7892  00205E  D7DC               	goto	l852
  7893  002060  D7E6               	goto	l853
  7894  002062                     __end_of_Draw_startColors_Arrow:
  7895                           	opt stack 0
  7896                           tblptru	equ	0xFF8
  7897                           tblptrh	equ	0xFF7
  7898                           tblptrl	equ	0xFF6
  7899                           tablat	equ	0xFF5
  7900                           prodh	equ	0xFF4
  7901                           prodl	equ	0xFF3
  7902                           intcon	equ	0xFF2
  7903                           indf0	equ	0xFEF
  7904                           postinc0	equ	0xFEE
  7905                           fsr0h	equ	0xFEA
  7906                           fsr0l	equ	0xFE9
  7907                           wreg	equ	0xFE8
  7908                           postdec1	equ	0xFE5
  7909                           fsr1l	equ	0xFE1
  7910                           indf2	equ	0xFDF
  7911                           fsr2h	equ	0xFDA
  7912                           fsr2l	equ	0xFD9
  7913                           status	equ	0xFD8
  7914                           
  7915 ;; *************** function _Draw_runTime_Arrow *****************
  7916 ;; Defined at:
  7917 ;;		line 254 in file "screen_controls.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;		None
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;		None
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  1    wreg      void 
  7924 ;; Registers used:
  7925 ;;		wreg, status,2, status,0, cstack
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7935 ;;Total ram usage:        0 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; Hardware stack levels required when called:   13
  7938 ;; This function calls:
  7939 ;;		_GLCD_GoTo
  7940 ;;		_Make_Arrow
  7941 ;; This function is called by:
  7942 ;;		_Draw_Arrow
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text42
  7947  00256E                     __ptext42:
  7948                           	opt stack 0
  7949  00256E                     _Draw_runTime_Arrow:
  7950                           	opt stack 16
  7951                           
  7952                           ;screen_controls.c: 256: switch(runTimeContext)
  7953                           
  7954                           ;incstack = 0
  7955  00256E  D02C               	goto	l829
  7956  002570                     
  7957                           ;screen_controls.c: 259: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  7958  002570  0E02               	movlw	2
  7959  002572  0100               	movlb	0	; () banked
  7960  002574  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  7961  002576  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  7962  002578  0800               	sublw	0
  7963  00257A  25BD               	addwf	_runTimeX& (0+255),w,b
  7964  00257C  ECBE  F010         	call	_GLCD_GoTo
  7965                           
  7966                           ;screen_controls.c: 260: Make_Arrow();
  7967  002580  EC1F  F019         	call	_Make_Arrow	;wreg free
  7968                           
  7969                           ;screen_controls.c: 261: break;
  7970  002584  0012               	return	
  7971  002586                     
  7972                           ;screen_controls.c: 264: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  7973  002586  0E04               	movlw	4
  7974  002588  0100               	movlb	0	; () banked
  7975  00258A  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  7976  00258C  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  7977  00258E  0800               	sublw	0
  7978  002590  25BD               	addwf	_runTimeX& (0+255),w,b
  7979  002592  ECBE  F010         	call	_GLCD_GoTo
  7980                           
  7981                           ;screen_controls.c: 265: Make_Arrow();
  7982  002596  EC1F  F019         	call	_Make_Arrow	;wreg free
  7983                           
  7984                           ;screen_controls.c: 266: break;
  7985  00259A  0012               	return	
  7986  00259C                     
  7987                           ;screen_controls.c: 269: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  7988  00259C  0E06               	movlw	6
  7989  00259E  0100               	movlb	0	; () banked
  7990  0025A0  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  7991  0025A2  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  7992  0025A4  0800               	sublw	0
  7993  0025A6  25BD               	addwf	_runTimeX& (0+255),w,b
  7994  0025A8  ECBE  F010         	call	_GLCD_GoTo
  7995                           
  7996                           ;screen_controls.c: 270: Make_Arrow();
  7997  0025AC  EC1F  F019         	call	_Make_Arrow	;wreg free
  7998                           
  7999                           ;screen_controls.c: 272: break;
  8000                           
  8001                           ;screen_controls.c: 271: break;
  8002  0025B0  0012               	return	
  8003  0025B2                     
  8004                           ;screen_controls.c: 275: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  8005  0025B2  0E02               	movlw	2
  8006  0025B4  0100               	movlb	0	; () banked
  8007  0025B6  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  8008  0025B8  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8009  0025BA  0800               	sublw	0
  8010  0025BC  25BD               	addwf	_runTimeX& (0+255),w,b
  8011  0025BE  ECBE  F010         	call	_GLCD_GoTo
  8012                           
  8013                           ;screen_controls.c: 276: Make_Arrow();
  8014  0025C2  EC1F  F019         	call	_Make_Arrow	;wreg free
  8015                           
  8016                           ;screen_controls.c: 280: }
  8017                           
  8018                           ;screen_controls.c: 277: break;
  8019  0025C6  0012               	return	
  8020  0025C8                     l829:
  8021  0025C8  0100               	movlb	0	; () banked
  8022  0025CA  51CB               	movf	_runTimeContext& (0+255),w,b
  8023                           
  8024                           ; Switch size 1, requested type "space"
  8025                           ; Number of cases is 3, Range of values is 0 to 2
  8026                           ; switch strategies available:
  8027                           ; Name         Instructions Cycles
  8028                           ; simple_byte           10     6 (average)
  8029                           ;	Chosen strategy is simple_byte
  8030  0025CC  0A00               	xorlw	0	; case 0
  8031  0025CE  B4D8               	btfsc	status,2,c
  8032  0025D0  D7CF               	goto	l830
  8033  0025D2  0A01               	xorlw	1	; case 1
  8034  0025D4  B4D8               	btfsc	status,2,c
  8035  0025D6  D7D7               	goto	l832
  8036  0025D8  0A03               	xorlw	3	; case 2
  8037  0025DA  B4D8               	btfsc	status,2,c
  8038  0025DC  D7DF               	goto	l833
  8039  0025DE  D7E9               	goto	l834
  8040  0025E0                     __end_of_Draw_runTime_Arrow:
  8041                           	opt stack 0
  8042                           tblptru	equ	0xFF8
  8043                           tblptrh	equ	0xFF7
  8044                           tblptrl	equ	0xFF6
  8045                           tablat	equ	0xFF5
  8046                           prodh	equ	0xFF4
  8047                           prodl	equ	0xFF3
  8048                           intcon	equ	0xFF2
  8049                           indf0	equ	0xFEF
  8050                           postinc0	equ	0xFEE
  8051                           fsr0h	equ	0xFEA
  8052                           fsr0l	equ	0xFE9
  8053                           wreg	equ	0xFE8
  8054                           postdec1	equ	0xFE5
  8055                           fsr1l	equ	0xFE1
  8056                           indf2	equ	0xFDF
  8057                           fsr2h	equ	0xFDA
  8058                           fsr2l	equ	0xFD9
  8059                           status	equ	0xFD8
  8060                           
  8061 ;; *************** function _Draw_Brightness_Arrow *****************
  8062 ;; Defined at:
  8063 ;;		line 374 in file "screen_controls.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;		None
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;		None
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      void 
  8070 ;; Registers used:
  8071 ;;		wreg, status,2, status,0, cstack
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8081 ;;Total ram usage:        0 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; Hardware stack levels required when called:   13
  8084 ;; This function calls:
  8085 ;;		_GLCD_GoTo
  8086 ;;		_Make_Arrow
  8087 ;; This function is called by:
  8088 ;;		_Draw_Arrow
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092                           	psect	text43
  8093  0029AE                     __ptext43:
  8094                           	opt stack 0
  8095  0029AE                     _Draw_Brightness_Arrow:
  8096                           	opt stack 16
  8097                           
  8098                           ;screen_controls.c: 376: switch(brightnessContext)
  8099                           
  8100                           ;incstack = 0
  8101  0029AE  D021               	goto	l872
  8102  0029B0                     
  8103                           ;screen_controls.c: 379: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  8104  0029B0  0E02               	movlw	2
  8105  0029B2  0100               	movlb	0	; () banked
  8106  0029B4  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  8107  0029B6  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8108  0029B8  0800               	sublw	0
  8109  0029BA  25BD               	addwf	_runTimeX& (0+255),w,b
  8110  0029BC  ECBE  F010         	call	_GLCD_GoTo
  8111                           
  8112                           ;screen_controls.c: 380: Make_Arrow();
  8113  0029C0  EC1F  F019         	call	_Make_Arrow	;wreg free
  8114                           
  8115                           ;screen_controls.c: 381: break;
  8116  0029C4  0012               	return	
  8117  0029C6                     
  8118                           ;screen_controls.c: 384: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  8119  0029C6  0E06               	movlw	6
  8120  0029C8  0100               	movlb	0	; () banked
  8121  0029CA  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  8122  0029CC  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8123  0029CE  0800               	sublw	0
  8124  0029D0  25BD               	addwf	_runTimeX& (0+255),w,b
  8125  0029D2  ECBE  F010         	call	_GLCD_GoTo
  8126                           
  8127                           ;screen_controls.c: 385: Make_Arrow();
  8128  0029D6  EC1F  F019         	call	_Make_Arrow	;wreg free
  8129                           
  8130                           ;screen_controls.c: 387: break;
  8131                           
  8132                           ;screen_controls.c: 386: break;
  8133  0029DA  0012               	return	
  8134  0029DC                     
  8135                           ;screen_controls.c: 390: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  8136  0029DC  0E02               	movlw	2
  8137  0029DE  0100               	movlb	0	; () banked
  8138  0029E0  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  8139  0029E2  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8140  0029E4  0800               	sublw	0
  8141  0029E6  25BD               	addwf	_runTimeX& (0+255),w,b
  8142  0029E8  ECBE  F010         	call	_GLCD_GoTo
  8143                           
  8144                           ;screen_controls.c: 391: Make_Arrow();
  8145  0029EC  EC1F  F019         	call	_Make_Arrow	;wreg free
  8146                           
  8147                           ;screen_controls.c: 395: }
  8148                           
  8149                           ;screen_controls.c: 392: break;
  8150  0029F0  0012               	return	
  8151  0029F2                     l872:
  8152  0029F2  0100               	movlb	0	; () banked
  8153  0029F4  51CA               	movf	_brightnessContext& (0+255),w,b
  8154                           
  8155                           ; Switch size 1, requested type "space"
  8156                           ; Number of cases is 2, Range of values is 0 to 1
  8157                           ; switch strategies available:
  8158                           ; Name         Instructions Cycles
  8159                           ; simple_byte            7     4 (average)
  8160                           ;	Chosen strategy is simple_byte
  8161  0029F6  0A00               	xorlw	0	; case 0
  8162  0029F8  B4D8               	btfsc	status,2,c
  8163  0029FA  D7DA               	goto	l873
  8164  0029FC  0A01               	xorlw	1	; case 1
  8165  0029FE  B4D8               	btfsc	status,2,c
  8166  002A00  D7E2               	goto	l875
  8167  002A02  D7EC               	goto	l876
  8168  002A04                     __end_of_Draw_Brightness_Arrow:
  8169                           	opt stack 0
  8170                           tblptru	equ	0xFF8
  8171                           tblptrh	equ	0xFF7
  8172                           tblptrl	equ	0xFF6
  8173                           tablat	equ	0xFF5
  8174                           prodh	equ	0xFF4
  8175                           prodl	equ	0xFF3
  8176                           intcon	equ	0xFF2
  8177                           indf0	equ	0xFEF
  8178                           postinc0	equ	0xFEE
  8179                           fsr0h	equ	0xFEA
  8180                           fsr0l	equ	0xFE9
  8181                           wreg	equ	0xFE8
  8182                           postdec1	equ	0xFE5
  8183                           fsr1l	equ	0xFE1
  8184                           indf2	equ	0xFDF
  8185                           fsr2h	equ	0xFDA
  8186                           fsr2l	equ	0xFD9
  8187                           status	equ	0xFD8
  8188                           
  8189 ;; *************** function _Make_Arrow *****************
  8190 ;; Defined at:
  8191 ;;		line 100 in file "screen_controls.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;		None
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;		None
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1    wreg      void 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2, status,0, cstack
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8209 ;;Total ram usage:        0 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; Hardware stack levels required when called:   12
  8212 ;; This function calls:
  8213 ;;		_GLCD_WriteData
  8214 ;; This function is called by:
  8215 ;;		_Draw_Arrow
  8216 ;;		_Draw_runTime_Arrow
  8217 ;;		_Draw_startColors_Arrow
  8218 ;;		_Draw_Brightness_Arrow
  8219 ;; This function uses a non-reentrant model
  8220 ;;
  8221                           
  8222                           	psect	text44
  8223  00323E                     __ptext44:
  8224                           	opt stack 0
  8225  00323E                     _Make_Arrow:
  8226                           	opt stack 17
  8227                           
  8228                           ;screen_controls.c: 102: GLCD_WriteData(0x7E);
  8229                           
  8230                           ;incstack = 0
  8231  00323E  0E7E               	movlw	126
  8232  003240  EC41  F012         	call	_GLCD_WriteData
  8233                           
  8234                           ;screen_controls.c: 103: GLCD_WriteData(0x3C);
  8235  003244  0E3C               	movlw	60
  8236  003246  EC41  F012         	call	_GLCD_WriteData
  8237                           
  8238                           ;screen_controls.c: 104: GLCD_WriteData(0x18);
  8239  00324A  0E18               	movlw	24
  8240  00324C  EC41  F012         	call	_GLCD_WriteData
  8241  003250  0012               	return		;funcret
  8242  003252                     __end_of_Make_Arrow:
  8243                           	opt stack 0
  8244                           tblptru	equ	0xFF8
  8245                           tblptrh	equ	0xFF7
  8246                           tblptrl	equ	0xFF6
  8247                           tablat	equ	0xFF5
  8248                           prodh	equ	0xFF4
  8249                           prodl	equ	0xFF3
  8250                           intcon	equ	0xFF2
  8251                           indf0	equ	0xFEF
  8252                           postinc0	equ	0xFEE
  8253                           fsr0h	equ	0xFEA
  8254                           fsr0l	equ	0xFE9
  8255                           wreg	equ	0xFE8
  8256                           postdec1	equ	0xFE5
  8257                           fsr1l	equ	0xFE1
  8258                           indf2	equ	0xFDF
  8259                           fsr2h	equ	0xFDA
  8260                           fsr2l	equ	0xFD9
  8261                           status	equ	0xFD8
  8262                           
  8263 ;; *************** function _Clear_startColors_Arrows *****************
  8264 ;; Defined at:
  8265 ;;		line 341 in file "screen_controls.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;  i               1   14[BANK0 ] unsigned char 
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		wreg, status,2, status,0, cstack
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8282 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8283 ;;Total ram usage:        1 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:   13
  8286 ;; This function calls:
  8287 ;;		_GLCD_GoTo
  8288 ;;		_GLCD_WriteData
  8289 ;; This function is called by:
  8290 ;;		_Draw_Arrow
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           	psect	text45
  8295  001C20                     __ptext45:
  8296                           	opt stack 0
  8297  001C20                     _Clear_startColors_Arrows:
  8298                           	opt stack 16
  8299                           
  8300                           ;screen_controls.c: 343: unsigned char i=0;
  8301                           
  8302                           ;incstack = 0
  8303  001C20  0E00               	movlw	0
  8304  001C22  0100               	movlb	0	; () banked
  8305  001C24  6F6E               	movwf	Clear_startColors_Arrows@i& (0+255),b
  8306                           
  8307                           ; BSR set to: 0
  8308                           ;screen_controls.c: 345: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  8309  001C26  0E02               	movlw	2
  8310  001C28  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  8311  001C2A  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8312  001C2C  0800               	sublw	0
  8313  001C2E  25BD               	addwf	_runTimeX& (0+255),w,b
  8314  001C30  ECBE  F010         	call	_GLCD_GoTo
  8315                           
  8316                           ;screen_controls.c: 347: for(i=0; i<ARROW_SIZE; i++)
  8317  001C34  0E00               	movlw	0
  8318  001C36  0100               	movlb	0	; () banked
  8319  001C38  6F6E               	movwf	Clear_startColors_Arrows@i& (0+255),b
  8320  001C3A  D005               	goto	l857
  8321  001C3C                     
  8322                           ; BSR set to: 0
  8323                           ;screen_controls.c: 348: {
  8324                           ;screen_controls.c: 349: GLCD_WriteData(0x00);
  8325                           
  8326                           ; BSR set to: 0
  8327  001C3C  0E00               	movlw	0
  8328  001C3E  EC41  F012         	call	_GLCD_WriteData
  8329  001C42  0100               	movlb	0	; () banked
  8330  001C44  2B6E               	incf	Clear_startColors_Arrows@i& (0+255),f,b
  8331  001C46                     l857:
  8332                           
  8333                           ; BSR set to: 0
  8334                           
  8335                           ; BSR set to: 0
  8336  001C46  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8337  001C48  5D6E               	subwf	Clear_startColors_Arrows@i& (0+255),w,b
  8338  001C4A  A0D8               	btfss	status,0,c
  8339  001C4C  D7F7               	goto	l858
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;screen_controls.c: 350: }
  8343                           ;screen_controls.c: 352: GLCD_GoTo((runTimeX - ARROW_SIZE), 3);
  8344                           
  8345                           ; BSR set to: 0
  8346  001C4E  0E03               	movlw	3
  8347  001C50  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  8348  001C52  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8349  001C54  0800               	sublw	0
  8350  001C56  25BD               	addwf	_runTimeX& (0+255),w,b
  8351  001C58  ECBE  F010         	call	_GLCD_GoTo
  8352                           
  8353                           ;screen_controls.c: 354: for(i=0; i<ARROW_SIZE; i++)
  8354  001C5C  0E00               	movlw	0
  8355  001C5E  0100               	movlb	0	; () banked
  8356  001C60  6F6E               	movwf	Clear_startColors_Arrows@i& (0+255),b
  8357  001C62  D005               	goto	l860
  8358  001C64                     
  8359                           ; BSR set to: 0
  8360                           ;screen_controls.c: 355: {
  8361                           ;screen_controls.c: 356: GLCD_WriteData(0x00);
  8362                           
  8363                           ; BSR set to: 0
  8364  001C64  0E00               	movlw	0
  8365  001C66  EC41  F012         	call	_GLCD_WriteData
  8366  001C6A  0100               	movlb	0	; () banked
  8367  001C6C  2B6E               	incf	Clear_startColors_Arrows@i& (0+255),f,b
  8368  001C6E                     l860:
  8369                           
  8370                           ; BSR set to: 0
  8371                           
  8372                           ; BSR set to: 0
  8373  001C6E  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8374  001C70  5D6E               	subwf	Clear_startColors_Arrows@i& (0+255),w,b
  8375  001C72  A0D8               	btfss	status,0,c
  8376  001C74  D7F7               	goto	l861
  8377                           
  8378                           ; BSR set to: 0
  8379                           ;screen_controls.c: 357: }
  8380                           ;screen_controls.c: 359: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  8381                           
  8382                           ; BSR set to: 0
  8383  001C76  0E04               	movlw	4
  8384  001C78  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  8385  001C7A  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8386  001C7C  0800               	sublw	0
  8387  001C7E  25BD               	addwf	_runTimeX& (0+255),w,b
  8388  001C80  ECBE  F010         	call	_GLCD_GoTo
  8389                           
  8390                           ;screen_controls.c: 361: for(i=0; i<ARROW_SIZE; i++)
  8391  001C84  0E00               	movlw	0
  8392  001C86  0100               	movlb	0	; () banked
  8393  001C88  6F6E               	movwf	Clear_startColors_Arrows@i& (0+255),b
  8394  001C8A  D005               	goto	l863
  8395  001C8C                     
  8396                           ; BSR set to: 0
  8397                           ;screen_controls.c: 362: {
  8398                           ;screen_controls.c: 363: GLCD_WriteData(0x00);
  8399                           
  8400                           ; BSR set to: 0
  8401  001C8C  0E00               	movlw	0
  8402  001C8E  EC41  F012         	call	_GLCD_WriteData
  8403  001C92  0100               	movlb	0	; () banked
  8404  001C94  2B6E               	incf	Clear_startColors_Arrows@i& (0+255),f,b
  8405  001C96                     l863:
  8406                           
  8407                           ; BSR set to: 0
  8408                           
  8409                           ; BSR set to: 0
  8410  001C96  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8411  001C98  5D6E               	subwf	Clear_startColors_Arrows@i& (0+255),w,b
  8412  001C9A  A0D8               	btfss	status,0,c
  8413  001C9C  D7F7               	goto	l864
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;screen_controls.c: 364: }
  8417                           ;screen_controls.c: 366: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  8418                           
  8419                           ; BSR set to: 0
  8420  001C9E  0E06               	movlw	6
  8421  001CA0  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  8422  001CA2  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8423  001CA4  0800               	sublw	0
  8424  001CA6  25BD               	addwf	_runTimeX& (0+255),w,b
  8425  001CA8  ECBE  F010         	call	_GLCD_GoTo
  8426                           
  8427                           ;screen_controls.c: 367: for(i=0; i<ARROW_SIZE; i++)
  8428  001CAC  0E00               	movlw	0
  8429  001CAE  0100               	movlb	0	; () banked
  8430  001CB0  6F6E               	movwf	Clear_startColors_Arrows@i& (0+255),b
  8431  001CB2  D005               	goto	l866
  8432  001CB4                     
  8433                           ; BSR set to: 0
  8434                           ;screen_controls.c: 368: {
  8435                           ;screen_controls.c: 369: GLCD_WriteData(0x00);
  8436                           
  8437                           ; BSR set to: 0
  8438  001CB4  0E00               	movlw	0
  8439  001CB6  EC41  F012         	call	_GLCD_WriteData
  8440  001CBA  0100               	movlb	0	; () banked
  8441  001CBC  2B6E               	incf	Clear_startColors_Arrows@i& (0+255),f,b
  8442  001CBE                     l866:
  8443                           
  8444                           ; BSR set to: 0
  8445                           
  8446                           ; BSR set to: 0
  8447  001CBE  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8448  001CC0  5D6E               	subwf	Clear_startColors_Arrows@i& (0+255),w,b
  8449  001CC2  B0D8               	btfsc	status,0,c
  8450  001CC4  0012               	return	
  8451  001CC6  D7F6               	goto	l867
  8452  001CC8                     __end_of_Clear_startColors_Arrows:
  8453                           	opt stack 0
  8454                           tblptru	equ	0xFF8
  8455                           tblptrh	equ	0xFF7
  8456                           tblptrl	equ	0xFF6
  8457                           tablat	equ	0xFF5
  8458                           prodh	equ	0xFF4
  8459                           prodl	equ	0xFF3
  8460                           intcon	equ	0xFF2
  8461                           indf0	equ	0xFEF
  8462                           postinc0	equ	0xFEE
  8463                           fsr0h	equ	0xFEA
  8464                           fsr0l	equ	0xFE9
  8465                           wreg	equ	0xFE8
  8466                           postdec1	equ	0xFE5
  8467                           fsr1l	equ	0xFE1
  8468                           indf2	equ	0xFDF
  8469                           fsr2h	equ	0xFDA
  8470                           fsr2l	equ	0xFD9
  8471                           status	equ	0xFD8
  8472                           
  8473 ;; *************** function _Clear_runTime_Arrows *****************
  8474 ;; Defined at:
  8475 ;;		line 229 in file "screen_controls.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;		None
  8478 ;; Auto vars:     Size  Location     Type
  8479 ;;  i               1   14[BANK0 ] unsigned char 
  8480 ;; Return value:  Size  Location     Type
  8481 ;;                  1    wreg      void 
  8482 ;; Registers used:
  8483 ;;		wreg, status,2, status,0, cstack
  8484 ;; Tracked objects:
  8485 ;;		On entry : 0/0
  8486 ;;		On exit  : 0/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8492 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8493 ;;Total ram usage:        1 bytes
  8494 ;; Hardware stack levels used:    1
  8495 ;; Hardware stack levels required when called:   13
  8496 ;; This function calls:
  8497 ;;		_GLCD_GoTo
  8498 ;;		_GLCD_WriteData
  8499 ;; This function is called by:
  8500 ;;		_Draw_Arrow
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504                           	psect	text46
  8505  00230E                     __ptext46:
  8506                           	opt stack 0
  8507  00230E                     _Clear_runTime_Arrows:
  8508                           	opt stack 16
  8509                           
  8510                           ;screen_controls.c: 231: unsigned char i=0;
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;incstack = 0
  8514  00230E  0E00               	movlw	0
  8515  002310  0100               	movlb	0	; () banked
  8516  002312  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;screen_controls.c: 233: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  8520  002314  0E02               	movlw	2
  8521  002316  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  8522  002318  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8523  00231A  0800               	sublw	0
  8524  00231C  25BD               	addwf	_runTimeX& (0+255),w,b
  8525  00231E  ECBE  F010         	call	_GLCD_GoTo
  8526                           
  8527                           ;screen_controls.c: 235: for(i=0; i<ARROW_SIZE; i++)
  8528  002322  0E00               	movlw	0
  8529  002324  0100               	movlb	0	; () banked
  8530  002326  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  8531  002328  D005               	goto	l817
  8532  00232A                     
  8533                           ; BSR set to: 0
  8534                           ;screen_controls.c: 236: {
  8535                           ;screen_controls.c: 237: GLCD_WriteData(0x00);
  8536                           
  8537                           ; BSR set to: 0
  8538  00232A  0E00               	movlw	0
  8539  00232C  EC41  F012         	call	_GLCD_WriteData
  8540  002330  0100               	movlb	0	; () banked
  8541  002332  2B6E               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  8542  002334                     l817:
  8543                           
  8544                           ; BSR set to: 0
  8545                           
  8546                           ; BSR set to: 0
  8547  002334  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8548  002336  5D6E               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  8549  002338  A0D8               	btfss	status,0,c
  8550  00233A  D7F7               	goto	l818
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;screen_controls.c: 238: }
  8554                           ;screen_controls.c: 240: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  8555                           
  8556                           ; BSR set to: 0
  8557  00233C  0E04               	movlw	4
  8558  00233E  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  8559  002340  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8560  002342  0800               	sublw	0
  8561  002344  25BD               	addwf	_runTimeX& (0+255),w,b
  8562  002346  ECBE  F010         	call	_GLCD_GoTo
  8563                           
  8564                           ;screen_controls.c: 241: for(i=0; i<ARROW_SIZE; i++)
  8565  00234A  0E00               	movlw	0
  8566  00234C  0100               	movlb	0	; () banked
  8567  00234E  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  8568  002350  D005               	goto	l820
  8569  002352                     
  8570                           ; BSR set to: 0
  8571                           ;screen_controls.c: 242: {
  8572                           ;screen_controls.c: 243: GLCD_WriteData(0x00);
  8573                           
  8574                           ; BSR set to: 0
  8575  002352  0E00               	movlw	0
  8576  002354  EC41  F012         	call	_GLCD_WriteData
  8577  002358  0100               	movlb	0	; () banked
  8578  00235A  2B6E               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  8579  00235C                     l820:
  8580                           
  8581                           ; BSR set to: 0
  8582                           
  8583                           ; BSR set to: 0
  8584  00235C  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8585  00235E  5D6E               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  8586  002360  A0D8               	btfss	status,0,c
  8587  002362  D7F7               	goto	l821
  8588                           
  8589                           ; BSR set to: 0
  8590                           ;screen_controls.c: 244: }
  8591                           ;screen_controls.c: 246: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  8592                           
  8593                           ; BSR set to: 0
  8594  002364  0E06               	movlw	6
  8595  002366  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  8596  002368  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8597  00236A  0800               	sublw	0
  8598  00236C  25BD               	addwf	_runTimeX& (0+255),w,b
  8599  00236E  ECBE  F010         	call	_GLCD_GoTo
  8600                           
  8601                           ;screen_controls.c: 247: for(i=0; i<ARROW_SIZE; i++)
  8602  002372  0E00               	movlw	0
  8603  002374  0100               	movlb	0	; () banked
  8604  002376  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  8605  002378  D005               	goto	l823
  8606  00237A                     
  8607                           ; BSR set to: 0
  8608                           ;screen_controls.c: 248: {
  8609                           ;screen_controls.c: 249: GLCD_WriteData(0x00);
  8610                           
  8611                           ; BSR set to: 0
  8612  00237A  0E00               	movlw	0
  8613  00237C  EC41  F012         	call	_GLCD_WriteData
  8614  002380  0100               	movlb	0	; () banked
  8615  002382  2B6E               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  8616  002384                     l823:
  8617                           
  8618                           ; BSR set to: 0
  8619                           
  8620                           ; BSR set to: 0
  8621  002384  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8622  002386  5D6E               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  8623  002388  B0D8               	btfsc	status,0,c
  8624  00238A  0012               	return	
  8625  00238C  D7F6               	goto	l824
  8626  00238E                     __end_of_Clear_runTime_Arrows:
  8627                           	opt stack 0
  8628                           tblptru	equ	0xFF8
  8629                           tblptrh	equ	0xFF7
  8630                           tblptrl	equ	0xFF6
  8631                           tablat	equ	0xFF5
  8632                           prodh	equ	0xFF4
  8633                           prodl	equ	0xFF3
  8634                           intcon	equ	0xFF2
  8635                           indf0	equ	0xFEF
  8636                           postinc0	equ	0xFEE
  8637                           fsr0h	equ	0xFEA
  8638                           fsr0l	equ	0xFE9
  8639                           wreg	equ	0xFE8
  8640                           postdec1	equ	0xFE5
  8641                           fsr1l	equ	0xFE1
  8642                           indf2	equ	0xFDF
  8643                           fsr2h	equ	0xFDA
  8644                           fsr2l	equ	0xFD9
  8645                           status	equ	0xFD8
  8646                           
  8647 ;; *************** function _Clear_Brightness_Arrows *****************
  8648 ;; Defined at:
  8649 ;;		line 284 in file "screen_controls.c"
  8650 ;; Parameters:    Size  Location     Type
  8651 ;;		None
  8652 ;; Auto vars:     Size  Location     Type
  8653 ;;  i               1   14[BANK0 ] unsigned char 
  8654 ;; Return value:  Size  Location     Type
  8655 ;;                  1    wreg      void 
  8656 ;; Registers used:
  8657 ;;		wreg, status,2, status,0, cstack
  8658 ;; Tracked objects:
  8659 ;;		On entry : 0/0
  8660 ;;		On exit  : 0/0
  8661 ;;		Unchanged: 0/0
  8662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8666 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8667 ;;Total ram usage:        1 bytes
  8668 ;; Hardware stack levels used:    1
  8669 ;; Hardware stack levels required when called:   13
  8670 ;; This function calls:
  8671 ;;		_GLCD_GoTo
  8672 ;;		_GLCD_WriteData
  8673 ;; This function is called by:
  8674 ;;		_Draw_Arrow
  8675 ;; This function uses a non-reentrant model
  8676 ;;
  8677                           
  8678                           	psect	text47
  8679  002956                     __ptext47:
  8680                           	opt stack 0
  8681  002956                     _Clear_Brightness_Arrows:
  8682                           	opt stack 16
  8683                           
  8684                           ;screen_controls.c: 286: unsigned char i=0;
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;incstack = 0
  8688  002956  0E00               	movlw	0
  8689  002958  0100               	movlb	0	; () banked
  8690  00295A  6F6E               	movwf	Clear_Brightness_Arrows@i& (0+255),b
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;screen_controls.c: 288: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  8694  00295C  0E02               	movlw	2
  8695  00295E  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  8696  002960  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8697  002962  0800               	sublw	0
  8698  002964  25BD               	addwf	_runTimeX& (0+255),w,b
  8699  002966  ECBE  F010         	call	_GLCD_GoTo
  8700                           
  8701                           ;screen_controls.c: 290: for(i=0; i<ARROW_SIZE; i++)
  8702  00296A  0E00               	movlw	0
  8703  00296C  0100               	movlb	0	; () banked
  8704  00296E  6F6E               	movwf	Clear_Brightness_Arrows@i& (0+255),b
  8705  002970  D005               	goto	l838
  8706  002972                     
  8707                           ; BSR set to: 0
  8708                           ;screen_controls.c: 291: {
  8709                           ;screen_controls.c: 292: GLCD_WriteData(0x00);
  8710                           
  8711                           ; BSR set to: 0
  8712  002972  0E00               	movlw	0
  8713  002974  EC41  F012         	call	_GLCD_WriteData
  8714  002978  0100               	movlb	0	; () banked
  8715  00297A  2B6E               	incf	Clear_Brightness_Arrows@i& (0+255),f,b
  8716  00297C                     l838:
  8717                           
  8718                           ; BSR set to: 0
  8719                           
  8720                           ; BSR set to: 0
  8721  00297C  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8722  00297E  5D6E               	subwf	Clear_Brightness_Arrows@i& (0+255),w,b
  8723  002980  A0D8               	btfss	status,0,c
  8724  002982  D7F7               	goto	l839
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;screen_controls.c: 293: }
  8728                           ;screen_controls.c: 295: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  8729                           
  8730                           ; BSR set to: 0
  8731  002984  0E06               	movlw	6
  8732  002986  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  8733  002988  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8734  00298A  0800               	sublw	0
  8735  00298C  25BD               	addwf	_runTimeX& (0+255),w,b
  8736  00298E  ECBE  F010         	call	_GLCD_GoTo
  8737                           
  8738                           ;screen_controls.c: 296: for(i=0; i<ARROW_SIZE; i++)
  8739  002992  0E00               	movlw	0
  8740  002994  0100               	movlb	0	; () banked
  8741  002996  6F6E               	movwf	Clear_Brightness_Arrows@i& (0+255),b
  8742  002998  D005               	goto	l841
  8743  00299A                     
  8744                           ; BSR set to: 0
  8745                           ;screen_controls.c: 297: {
  8746                           ;screen_controls.c: 298: GLCD_WriteData(0x00);
  8747                           
  8748                           ; BSR set to: 0
  8749  00299A  0E00               	movlw	0
  8750  00299C  EC41  F012         	call	_GLCD_WriteData
  8751  0029A0  0100               	movlb	0	; () banked
  8752  0029A2  2B6E               	incf	Clear_Brightness_Arrows@i& (0+255),f,b
  8753  0029A4                     l841:
  8754                           
  8755                           ; BSR set to: 0
  8756                           
  8757                           ; BSR set to: 0
  8758  0029A4  51BB               	movf	_ARROW_SIZE& (0+255),w,b
  8759  0029A6  5D6E               	subwf	Clear_Brightness_Arrows@i& (0+255),w,b
  8760  0029A8  B0D8               	btfsc	status,0,c
  8761  0029AA  0012               	return	
  8762  0029AC  D7F6               	goto	l842
  8763  0029AE                     __end_of_Clear_Brightness_Arrows:
  8764                           	opt stack 0
  8765                           tblptru	equ	0xFF8
  8766                           tblptrh	equ	0xFF7
  8767                           tblptrl	equ	0xFF6
  8768                           tablat	equ	0xFF5
  8769                           prodh	equ	0xFF4
  8770                           prodl	equ	0xFF3
  8771                           intcon	equ	0xFF2
  8772                           indf0	equ	0xFEF
  8773                           postinc0	equ	0xFEE
  8774                           fsr0h	equ	0xFEA
  8775                           fsr0l	equ	0xFE9
  8776                           wreg	equ	0xFE8
  8777                           postdec1	equ	0xFE5
  8778                           fsr1l	equ	0xFE1
  8779                           indf2	equ	0xFDF
  8780                           fsr2h	equ	0xFDA
  8781                           fsr2l	equ	0xFD9
  8782                           status	equ	0xFD8
  8783                           
  8784 ;; *************** function _Clear_Arrow_Column *****************
  8785 ;; Defined at:
  8786 ;;		line 120 in file "screen_controls.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;		None
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;  i               1   22[BANK0 ] unsigned char 
  8791 ;;  j               1   21[BANK0 ] unsigned char 
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  1    wreg      void 
  8794 ;; Registers used:
  8795 ;;		wreg, status,2, status,0, cstack
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8802 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8803 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8804 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8805 ;;Total ram usage:        9 bytes
  8806 ;; Hardware stack levels used:    1
  8807 ;; Hardware stack levels required when called:   13
  8808 ;; This function calls:
  8809 ;;		_GLCD_GoTo
  8810 ;;		_GLCD_WriteData
  8811 ;; This function is called by:
  8812 ;;		_Draw_Arrow
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816                           	psect	text48
  8817  0027EE                     __ptext48:
  8818                           	opt stack 0
  8819  0027EE                     _Clear_Arrow_Column:
  8820                           	opt stack 16
  8821                           
  8822                           ;screen_controls.c: 122: unsigned char i, j;
  8823                           ;screen_controls.c: 124: for(i = 0; i < 64/8; i++)
  8824                           
  8825                           ; BSR set to: 0
  8826                           ;incstack = 0
  8827  0027EE  0E00               	movlw	0
  8828  0027F0  0100               	movlb	0	; () banked
  8829  0027F2  6F76               	movwf	Clear_Arrow_Column@i& (0+255),b
  8830  0027F4                     l4875:
  8831                           
  8832                           ; BSR set to: 0
  8833  0027F4  0E07               	movlw	7
  8834  0027F6  6576               	cpfsgt	Clear_Arrow_Column@i& (0+255),b
  8835  0027F8  D001               	goto	l800
  8836  0027FA  0012               	return	
  8837  0027FC                     l800:
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;screen_controls.c: 125: {
  8841                           ;screen_controls.c: 126: GLCD_GoTo(0, i);
  8842                           
  8843                           ; BSR set to: 0
  8844  0027FC  C076  F06B         	movff	Clear_Arrow_Column@i,GLCD_GoTo@y
  8845  002800  0E00               	movlw	0
  8846  002802  ECBE  F010         	call	_GLCD_GoTo
  8847                           
  8848                           ;screen_controls.c: 128: for(j = 0; j < (xMenuStart - 1); j++)
  8849  002806  0E00               	movlw	0
  8850  002808  0100               	movlb	0	; () banked
  8851  00280A  6F75               	movwf	Clear_Arrow_Column@j& (0+255),b
  8852  00280C  D005               	goto	l802
  8853  00280E                     
  8854                           ; BSR set to: 0
  8855                           ;screen_controls.c: 129: {
  8856                           ;screen_controls.c: 130: GLCD_WriteData(0x00);
  8857                           
  8858                           ; BSR set to: 0
  8859  00280E  0E00               	movlw	0
  8860  002810  EC41  F012         	call	_GLCD_WriteData
  8861  002814  0100               	movlb	0	; () banked
  8862  002816  2B75               	incf	Clear_Arrow_Column@j& (0+255),f,b
  8863  002818                     l802:
  8864                           
  8865                           ; BSR set to: 0
  8866                           
  8867                           ; BSR set to: 0
  8868  002818  0EFF               	movlw	255
  8869  00281A  6F6E               	movwf	??_Clear_Arrow_Column& (0+255),b
  8870  00281C  0EFF               	movlw	255
  8871  00281E  6F6F               	movwf	(??_Clear_Arrow_Column+1)& (0+255),b
  8872  002820  51BA               	movf	_xMenuStart& (0+255),w,b
  8873  002822  6F70               	movwf	(??_Clear_Arrow_Column+2)& (0+255),b
  8874  002824  6B71               	clrf	(??_Clear_Arrow_Column+3)& (0+255),b
  8875  002826  516E               	movf	??_Clear_Arrow_Column& (0+255),w,b
  8876  002828  2770               	addwf	(??_Clear_Arrow_Column+2)& (0+255),f,b
  8877  00282A  516F               	movf	(??_Clear_Arrow_Column+1)& (0+255),w,b
  8878  00282C  2371               	addwfc	(??_Clear_Arrow_Column+3)& (0+255),f,b
  8879  00282E  5175               	movf	Clear_Arrow_Column@j& (0+255),w,b
  8880  002830  6F72               	movwf	(??_Clear_Arrow_Column+4)& (0+255),b
  8881  002832  6B73               	clrf	(??_Clear_Arrow_Column+5)& (0+255),b
  8882  002834  5170               	movf	(??_Clear_Arrow_Column+2)& (0+255),w,b
  8883  002836  5D72               	subwf	(??_Clear_Arrow_Column+4)& (0+255),w,b
  8884  002838  5173               	movf	(??_Clear_Arrow_Column+5)& (0+255),w,b
  8885  00283A  0A80               	xorlw	128
  8886  00283C  6F74               	movwf	(??_Clear_Arrow_Column+6)& (0+255),b
  8887  00283E  5171               	movf	(??_Clear_Arrow_Column+3)& (0+255),w,b
  8888  002840  0A80               	xorlw	128
  8889  002842  5974               	subwfb	(??_Clear_Arrow_Column+6)& (0+255),w,b
  8890  002844  A0D8               	btfss	status,0,c
  8891  002846  D7E3               	goto	l803
  8892                           
  8893                           ; BSR set to: 0
  8894                           
  8895                           ; BSR set to: 0
  8896  002848  2B76               	incf	Clear_Arrow_Column@i& (0+255),f,b
  8897  00284A  D7D4               	goto	l4875
  8898  00284C                     __end_of_Clear_Arrow_Column:
  8899                           	opt stack 0
  8900                           tblptru	equ	0xFF8
  8901                           tblptrh	equ	0xFF7
  8902                           tblptrl	equ	0xFF6
  8903                           tablat	equ	0xFF5
  8904                           prodh	equ	0xFF4
  8905                           prodl	equ	0xFF3
  8906                           intcon	equ	0xFF2
  8907                           indf0	equ	0xFEF
  8908                           postinc0	equ	0xFEE
  8909                           fsr0h	equ	0xFEA
  8910                           fsr0l	equ	0xFE9
  8911                           wreg	equ	0xFE8
  8912                           postdec1	equ	0xFE5
  8913                           fsr1l	equ	0xFE1
  8914                           indf2	equ	0xFDF
  8915                           fsr2h	equ	0xFDA
  8916                           fsr2l	equ	0xFD9
  8917                           status	equ	0xFD8
  8918                           
  8919 ;; *************** function _GLCD_WriteData *****************
  8920 ;; Defined at:
  8921 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
  8922 ;; Parameters:    Size  Location     Type
  8923 ;;  dataToWrite     1    wreg     unsigned char 
  8924 ;; Auto vars:     Size  Location     Type
  8925 ;;  dataToWrite     1    9[BANK0 ] unsigned char 
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  1    wreg      void 
  8928 ;; Registers used:
  8929 ;;		wreg, status,2, status,0, cstack
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8937 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8938 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8939 ;;Total ram usage:        2 bytes
  8940 ;; Hardware stack levels used:    1
  8941 ;; Hardware stack levels required when called:   11
  8942 ;; This function calls:
  8943 ;;		_GLCD_Delay
  8944 ;;		_GLCD_DisableController
  8945 ;;		_GLCD_EnableController
  8946 ;;		_GLCD_ReadStatus
  8947 ;;		___awdiv
  8948 ;; This function is called by:
  8949 ;;		_GLCD_ClearScreen
  8950 ;;		_GLCD_WriteChar
  8951 ;;		_GLCD_SetPixel
  8952 ;;		_Make_Arrow
  8953 ;;		_Make_Back_Arrow
  8954 ;;		_Clear_Arrow_Column
  8955 ;;		_Clear_runTime_Arrows
  8956 ;;		_Clear_Brightness_Arrows
  8957 ;;		_Clear_startColors_Arrows
  8958 ;;		_GLCD_Bitmap
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           	psect	text49
  8963  002482                     __ptext49:
  8964                           	opt stack 0
  8965  002482                     _GLCD_WriteData:
  8966                           	opt stack 16
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;incstack = 0
  8970                           ;GLCD_WriteData@dataToWrite stored from wreg
  8971  002482  0100               	movlb	0	; () banked
  8972  002484  6F69               	movwf	GLCD_WriteData@dataToWrite& (0+255),b
  8973  002486                     
  8974                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  8975  002486  C0C4  F060         	movff	_screen_x,___awdiv@dividend
  8976  00248A  0100               	movlb	0	; () banked
  8977  00248C  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  8978  00248E  0E00               	movlw	0
  8979  002490  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  8980  002492  0E40               	movlw	64
  8981  002494  6F62               	movwf	___awdiv@divisor& (0+255),b
  8982  002496  EC02  F011         	call	___awdiv	;wreg free
  8983  00249A  0100               	movlb	0	; () banked
  8984  00249C  5160               	movf	?___awdiv& (0+255),w,b
  8985  00249E  EC4A  F018         	call	_GLCD_ReadStatus
  8986  0024A2  0100               	movlb	0	; () banked
  8987  0024A4  6F68               	movwf	??_GLCD_WriteData& (0+255),b
  8988  0024A6  BF68               	btfsc	??_GLCD_WriteData& (0+255),7,b
  8989  0024A8  D7EE               	goto	l4055
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;KS0108-PIC18.c: 116: TRISD = 0x00;
  8993                           
  8994                           ; BSR set to: 0
  8995  0024AA  0E00               	movlw	0
  8996  0024AC  6E95               	movwf	3989,c	;volatile
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
  9000  0024AE  9280               	bcf	3968,1,c	;volatile
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
  9004  0024B0  8480               	bsf	3968,2,c	;volatile
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;KS0108-PIC18.c: 119: PORTD = dataToWrite;
  9008  0024B2  C069  FF83         	movff	GLCD_WriteData@dataToWrite,3971	;volatile
  9009                           
  9010                           ; BSR set to: 0
  9011                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
  9012  0024B6  C0C4  F060         	movff	_screen_x,___awdiv@dividend
  9013  0024BA  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  9014  0024BC  0E00               	movlw	0
  9015  0024BE  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  9016  0024C0  0E40               	movlw	64
  9017  0024C2  6F62               	movwf	___awdiv@divisor& (0+255),b
  9018  0024C4  EC02  F011         	call	___awdiv	;wreg free
  9019  0024C8  0100               	movlb	0	; () banked
  9020  0024CA  5160               	movf	?___awdiv& (0+255),w,b
  9021  0024CC  EC60  F018         	call	_GLCD_EnableController
  9022                           
  9023                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
  9024  0024D0  8680               	bsf	3968,3,c	;volatile
  9025                           
  9026                           ;KS0108-PIC18.c: 122: GLCD_Delay();
  9027  0024D2  EC67  F019         	call	_GLCD_Delay	;wreg free
  9028                           
  9029                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
  9030  0024D6  9680               	bcf	3968,3,c	;volatile
  9031                           
  9032                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
  9033  0024D8  C0C4  F060         	movff	_screen_x,___awdiv@dividend
  9034  0024DC  0100               	movlb	0	; () banked
  9035  0024DE  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  9036  0024E0  0E00               	movlw	0
  9037  0024E2  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  9038  0024E4  0E40               	movlw	64
  9039  0024E6  6F62               	movwf	___awdiv@divisor& (0+255),b
  9040  0024E8  EC02  F011         	call	___awdiv	;wreg free
  9041  0024EC  0100               	movlb	0	; () banked
  9042  0024EE  5160               	movf	?___awdiv& (0+255),w,b
  9043  0024F0  EC75  F018         	call	_GLCD_DisableController
  9044                           
  9045                           ;KS0108-PIC18.c: 125: screen_x++;
  9046  0024F4  0100               	movlb	0	; () banked
  9047  0024F6  2BC4               	incf	_screen_x& (0+255),f,b
  9048                           
  9049                           ; BSR set to: 0
  9050  0024F8  0012               	return		;funcret
  9051  0024FA                     __end_of_GLCD_WriteData:
  9052                           	opt stack 0
  9053                           tblptru	equ	0xFF8
  9054                           tblptrh	equ	0xFF7
  9055                           tblptrl	equ	0xFF6
  9056                           tablat	equ	0xFF5
  9057                           prodh	equ	0xFF4
  9058                           prodl	equ	0xFF3
  9059                           intcon	equ	0xFF2
  9060                           indf0	equ	0xFEF
  9061                           postinc0	equ	0xFEE
  9062                           fsr0h	equ	0xFEA
  9063                           fsr0l	equ	0xFE9
  9064                           wreg	equ	0xFE8
  9065                           postdec1	equ	0xFE5
  9066                           fsr1l	equ	0xFE1
  9067                           indf2	equ	0xFDF
  9068                           fsr2h	equ	0xFDA
  9069                           fsr2l	equ	0xFD9
  9070                           status	equ	0xFD8
  9071                           
  9072 ;; *************** function _GLCD_GoTo *****************
  9073 ;; Defined at:
  9074 ;;		line 25 in file "ks0108lib/KS0108.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;  x               1    wreg     unsigned char 
  9077 ;;  y               1   11[BANK0 ] unsigned char 
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;  x               1   12[BANK0 ] unsigned char 
  9080 ;;  i               1   13[BANK0 ] unsigned char 
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  1    wreg      void 
  9083 ;; Registers used:
  9084 ;;		wreg, status,2, status,0, cstack
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9090 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9091 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9093 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9094 ;;Total ram usage:        3 bytes
  9095 ;; Hardware stack levels used:    1
  9096 ;; Hardware stack levels required when called:   12
  9097 ;; This function calls:
  9098 ;;		_GLCD_WriteCommand
  9099 ;;		___awdiv
  9100 ;; This function is called by:
  9101 ;;		_GLCD_ClearScreen
  9102 ;;		_GLCD_SetPixel
  9103 ;;		_Initialize_Menus
  9104 ;;		_Draw_Arrow
  9105 ;;		_Clear_Arrow_Column
  9106 ;;		_Draw_runTime_Menu
  9107 ;;		_Draw_Brightness_Menu
  9108 ;;		_Draw_Start_Colors_Menu
  9109 ;;		_Clear_runTime_Arrows
  9110 ;;		_Draw_runTime_Arrow
  9111 ;;		_Clear_Brightness_Arrows
  9112 ;;		_Draw_startColors_Arrow
  9113 ;;		_Clear_startColors_Arrows
  9114 ;;		_Draw_Brightness_Arrow
  9115 ;;		_GLCD_Bitmap
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119                           	psect	text50
  9120  00217C                     __ptext50:
  9121                           	opt stack 0
  9122  00217C                     _GLCD_GoTo:
  9123                           	opt stack 15
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;incstack = 0
  9127                           ;GLCD_GoTo@x stored from wreg
  9128  00217C  0100               	movlb	0	; () banked
  9129  00217E  6F6C               	movwf	GLCD_GoTo@x& (0+255),b
  9130                           
  9131                           ;KS0108.c: 27: unsigned char i;
  9132                           ;KS0108.c: 28: screen_x = x;
  9133  002180  C06C  F0C4         	movff	GLCD_GoTo@x,_screen_x
  9134                           
  9135                           ;KS0108.c: 29: screen_y = y;
  9136  002184  C06B  F0C3         	movff	GLCD_GoTo@y,_screen_y
  9137                           
  9138                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
  9139  002188  0E00               	movlw	0
  9140  00218A  0100               	movlb	0	; () banked
  9141  00218C  6F6D               	movwf	GLCD_GoTo@i& (0+255),b
  9142  00218E                     l4043:
  9143                           
  9144                           ; BSR set to: 0
  9145  00218E  0E01               	movlw	1
  9146  002190  656D               	cpfsgt	GLCD_GoTo@i& (0+255),b
  9147  002192  D001               	goto	l620
  9148  002194  D014               	goto	u2600
  9149  002196                     l620:
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;KS0108.c: 32: {
  9153                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
  9154                           
  9155                           ; BSR set to: 0
  9156  002196  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  9157  00219A  0E40               	movlw	64
  9158  00219C  EC7B  F017         	call	_GLCD_WriteCommand
  9159                           
  9160                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
  9161  0021A0  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  9162  0021A4  0100               	movlb	0	; () banked
  9163  0021A6  516B               	movf	GLCD_GoTo@y& (0+255),w,b
  9164  0021A8  09B8               	iorlw	184
  9165  0021AA  EC7B  F017         	call	_GLCD_WriteCommand
  9166                           
  9167                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
  9168  0021AE  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  9169  0021B2  0EC0               	movlw	192
  9170  0021B4  EC7B  F017         	call	_GLCD_WriteCommand
  9171  0021B8  0100               	movlb	0	; () banked
  9172  0021BA  2B6D               	incf	GLCD_GoTo@i& (0+255),f,b
  9173  0021BC  D7E8               	goto	l4043
  9174  0021BE                     u2600:
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;KS0108.c: 36: }
  9178                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
  9179                           
  9180                           ; BSR set to: 0
  9181  0021BE  C06C  F060         	movff	GLCD_GoTo@x,___awdiv@dividend
  9182  0021C2  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  9183  0021C4  0E00               	movlw	0
  9184  0021C6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  9185  0021C8  0E40               	movlw	64
  9186  0021CA  6F62               	movwf	___awdiv@divisor& (0+255),b
  9187  0021CC  EC02  F011         	call	___awdiv	;wreg free
  9188  0021D0  0100               	movlb	0	; () banked
  9189  0021D2  5160               	movf	?___awdiv& (0+255),w,b
  9190  0021D4  6F68               	movwf	GLCD_WriteCommand@controller& (0+255),b
  9191  0021D6  516C               	movf	GLCD_GoTo@x& (0+255),w,b
  9192  0021D8  0B3F               	andlw	63
  9193  0021DA  0940               	iorlw	64
  9194  0021DC  EC7B  F017         	call	_GLCD_WriteCommand
  9195                           
  9196                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
  9197  0021E0  C06C  F060         	movff	GLCD_GoTo@x,___awdiv@dividend
  9198  0021E4  0100               	movlb	0	; () banked
  9199  0021E6  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  9200  0021E8  0E00               	movlw	0
  9201  0021EA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  9202  0021EC  0E40               	movlw	64
  9203  0021EE  6F62               	movwf	___awdiv@divisor& (0+255),b
  9204  0021F0  EC02  F011         	call	___awdiv	;wreg free
  9205  0021F4  0100               	movlb	0	; () banked
  9206  0021F6  5160               	movf	?___awdiv& (0+255),w,b
  9207  0021F8  6F68               	movwf	GLCD_WriteCommand@controller& (0+255),b
  9208  0021FA  516B               	movf	GLCD_GoTo@y& (0+255),w,b
  9209  0021FC  09B8               	iorlw	184
  9210  0021FE  EC7B  F017         	call	_GLCD_WriteCommand
  9211  002202  0012               	return		;funcret
  9212  002204                     __end_of_GLCD_GoTo:
  9213                           	opt stack 0
  9214                           tblptru	equ	0xFF8
  9215                           tblptrh	equ	0xFF7
  9216                           tblptrl	equ	0xFF6
  9217                           tablat	equ	0xFF5
  9218                           prodh	equ	0xFF4
  9219                           prodl	equ	0xFF3
  9220                           intcon	equ	0xFF2
  9221                           indf0	equ	0xFEF
  9222                           postinc0	equ	0xFEE
  9223                           fsr0h	equ	0xFEA
  9224                           fsr0l	equ	0xFE9
  9225                           wreg	equ	0xFE8
  9226                           postdec1	equ	0xFE5
  9227                           fsr1l	equ	0xFE1
  9228                           indf2	equ	0xFDF
  9229                           fsr2h	equ	0xFDA
  9230                           fsr2l	equ	0xFD9
  9231                           status	equ	0xFD8
  9232                           
  9233 ;; *************** function ___awdiv *****************
  9234 ;; Defined at:
  9235 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;  dividend        2    0[BANK0 ] int 
  9238 ;;  divisor         2    2[BANK0 ] int 
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;  quotient        2    6[BANK0 ] int 
  9241 ;;  sign            1    5[BANK0 ] unsigned char 
  9242 ;;  counter         1    4[BANK0 ] unsigned char 
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  2    0[BANK0 ] int 
  9245 ;; Registers used:
  9246 ;;		wreg, status,2, status,0
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9252 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9253 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9255 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9256 ;;Total ram usage:        8 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; Hardware stack levels required when called:    9
  9259 ;; This function calls:
  9260 ;;		Nothing
  9261 ;; This function is called by:
  9262 ;;		_GLCD_GoTo
  9263 ;;		_GLCD_SetPixel
  9264 ;;		_GLCD_ReadData
  9265 ;;		_GLCD_WriteData
  9266 ;;		_GLCD_Bitmap
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270                           	psect	text51
  9271  002204                     __ptext51:
  9272                           	opt stack 0
  9273  002204                     ___awdiv:
  9274                           	opt stack 17
  9275                           
  9276                           ;incstack = 0
  9277  002204  0E00               	movlw	0
  9278  002206  0100               	movlb	0	; () banked
  9279  002208  6F65               	movwf	___awdiv@sign& (0+255),b
  9280                           
  9281                           ; BSR set to: 0
  9282  00220A  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9283  00220C  D006               	goto	l1045
  9284                           
  9285                           ; BSR set to: 0
  9286  00220E  6D62               	negf	___awdiv@divisor& (0+255),b
  9287  002210  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9288  002212  B0D8               	btfsc	status,0,c
  9289  002214  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9290                           
  9291                           ; BSR set to: 0
  9292  002216  0E01               	movlw	1
  9293  002218  6F65               	movwf	___awdiv@sign& (0+255),b
  9294  00221A                     l1045:
  9295                           
  9296                           ; BSR set to: 0
  9297                           
  9298                           ; BSR set to: 0
  9299  00221A  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9300  00221C  D006               	goto	l1046
  9301                           
  9302                           ; BSR set to: 0
  9303  00221E  6D60               	negf	___awdiv@dividend& (0+255),b
  9304  002220  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9305  002222  B0D8               	btfsc	status,0,c
  9306  002224  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9307                           
  9308                           ; BSR set to: 0
  9309  002226  0E01               	movlw	1
  9310  002228  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  9311  00222A                     l1046:
  9312                           
  9313                           ; BSR set to: 0
  9314                           
  9315                           ; BSR set to: 0
  9316  00222A  0E00               	movlw	0
  9317  00222C  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  9318  00222E  0E00               	movlw	0
  9319  002230  6F66               	movwf	___awdiv@quotient& (0+255),b
  9320                           
  9321                           ; BSR set to: 0
  9322  002232  5162               	movf	___awdiv@divisor& (0+255),w,b
  9323  002234  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9324  002236  B4D8               	btfsc	status,2,c
  9325  002238  D01C               	goto	l1053
  9326                           
  9327                           ; BSR set to: 0
  9328  00223A  0E01               	movlw	1
  9329  00223C  6F64               	movwf	___awdiv@counter& (0+255),b
  9330  00223E  D004               	goto	l1048
  9331  002240                     
  9332                           ; BSR set to: 0
  9333                           
  9334                           ; BSR set to: 0
  9335  002240  90D8               	bcf	status,0,c
  9336  002242  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  9337  002244  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9338  002246  2B64               	incf	___awdiv@counter& (0+255),f,b
  9339  002248                     l1048:
  9340                           
  9341                           ; BSR set to: 0
  9342                           
  9343                           ; BSR set to: 0
  9344  002248  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9345  00224A  D7FA               	goto	l1049
  9346  00224C                     u2540:
  9347                           
  9348                           ; BSR set to: 0
  9349                           
  9350                           ; BSR set to: 0
  9351                           
  9352                           ; BSR set to: 0
  9353  00224C  90D8               	bcf	status,0,c
  9354  00224E  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  9355  002250  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9356                           
  9357                           ; BSR set to: 0
  9358  002252  5162               	movf	___awdiv@divisor& (0+255),w,b
  9359  002254  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  9360  002256  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9361  002258  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9362  00225A  A0D8               	btfss	status,0,c
  9363  00225C  D005               	goto	l1052
  9364                           
  9365                           ; BSR set to: 0
  9366  00225E  5162               	movf	___awdiv@divisor& (0+255),w,b
  9367  002260  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  9368  002262  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9369  002264  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9370                           
  9371                           ; BSR set to: 0
  9372  002266  8166               	bsf	___awdiv@quotient& (0+255),0,b
  9373  002268                     l1052:
  9374                           
  9375                           ; BSR set to: 0
  9376                           
  9377                           ; BSR set to: 0
  9378  002268  90D8               	bcf	status,0,c
  9379  00226A  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9380  00226C  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  9381                           
  9382                           ; BSR set to: 0
  9383  00226E  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  9384  002270  D7ED               	goto	u2540
  9385  002272                     l1053:
  9386                           
  9387                           ; BSR set to: 0
  9388                           
  9389                           ; BSR set to: 0
  9390                           
  9391                           ; BSR set to: 0
  9392  002272  5165               	movf	___awdiv@sign& (0+255),w,b
  9393  002274  B4D8               	btfsc	status,2,c
  9394  002276  D004               	goto	l1054
  9395                           
  9396                           ; BSR set to: 0
  9397  002278  6D66               	negf	___awdiv@quotient& (0+255),b
  9398  00227A  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9399  00227C  B0D8               	btfsc	status,0,c
  9400  00227E  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9401  002280                     l1054:
  9402                           
  9403                           ; BSR set to: 0
  9404                           
  9405                           ; BSR set to: 0
  9406  002280  C066  F060         	movff	___awdiv@quotient,?___awdiv
  9407  002284  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  9408  002288  0012               	return	
  9409  00228A                     __end_of___awdiv:
  9410                           	opt stack 0
  9411                           tblptru	equ	0xFF8
  9412                           tblptrh	equ	0xFF7
  9413                           tblptrl	equ	0xFF6
  9414                           tablat	equ	0xFF5
  9415                           prodh	equ	0xFF4
  9416                           prodl	equ	0xFF3
  9417                           intcon	equ	0xFF2
  9418                           indf0	equ	0xFEF
  9419                           postinc0	equ	0xFEE
  9420                           fsr0h	equ	0xFEA
  9421                           fsr0l	equ	0xFE9
  9422                           wreg	equ	0xFE8
  9423                           postdec1	equ	0xFE5
  9424                           fsr1l	equ	0xFE1
  9425                           indf2	equ	0xFDF
  9426                           fsr2h	equ	0xFDA
  9427                           fsr2l	equ	0xFD9
  9428                           status	equ	0xFD8
  9429                           
  9430 ;; *************** function _GLCD_WriteCommand *****************
  9431 ;; Defined at:
  9432 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;  commandToWri    1    wreg     unsigned char 
  9435 ;;  controller      1    8[BANK0 ] unsigned char 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  commandToWri    1   10[BANK0 ] unsigned char 
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  1    wreg      void 
  9440 ;; Registers used:
  9441 ;;		wreg, status,2, status,0, cstack
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9447 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9448 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9449 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9450 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9451 ;;Total ram usage:        3 bytes
  9452 ;; Hardware stack levels used:    1
  9453 ;; Hardware stack levels required when called:   11
  9454 ;; This function calls:
  9455 ;;		_GLCD_Delay
  9456 ;;		_GLCD_DisableController
  9457 ;;		_GLCD_EnableController
  9458 ;;		_GLCD_ReadStatus
  9459 ;; This function is called by:
  9460 ;;		_GLCD_Initalize
  9461 ;;		_GLCD_GoTo
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           	psect	text52
  9466  002EF6                     __ptext52:
  9467                           	opt stack 0
  9468  002EF6                     _GLCD_WriteCommand:
  9469                           	opt stack 15
  9470                           
  9471                           ; BSR set to: 0
  9472                           ;incstack = 0
  9473                           ;GLCD_WriteCommand@commandToWrite stored from wreg
  9474  002EF6  0100               	movlb	0	; () banked
  9475  002EF8  6F6A               	movwf	GLCD_WriteCommand@commandToWrite& (0+255),b
  9476  002EFA                     
  9477                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
  9478  002EFA  0100               	movlb	0	; () banked
  9479  002EFC  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  9480  002EFE  EC4A  F018         	call	_GLCD_ReadStatus
  9481  002F02  0100               	movlb	0	; () banked
  9482  002F04  6F69               	movwf	??_GLCD_WriteCommand& (0+255),b
  9483  002F06  BF69               	btfsc	??_GLCD_WriteCommand& (0+255),7,b
  9484  002F08  D7F8               	goto	l3929
  9485                           
  9486                           ; BSR set to: 0
  9487                           ;KS0108-PIC18.c: 82: TRISD = 0x00;
  9488                           
  9489                           ; BSR set to: 0
  9490  002F0A  0E00               	movlw	0
  9491  002F0C  6E95               	movwf	3989,c	;volatile
  9492                           
  9493                           ; BSR set to: 0
  9494                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
  9495  002F0E  0EF9               	movlw	249
  9496  002F10  1680               	andwf	3968,f,c	;volatile
  9497                           
  9498                           ; BSR set to: 0
  9499                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
  9500  002F12  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  9501  002F14  EC60  F018         	call	_GLCD_EnableController
  9502                           
  9503                           ;KS0108-PIC18.c: 85: PORTD = commandToWrite;
  9504  002F18  C06A  FF83         	movff	GLCD_WriteCommand@commandToWrite,3971	;volatile
  9505                           
  9506                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
  9507  002F1C  8680               	bsf	3968,3,c	;volatile
  9508                           
  9509                           ;KS0108-PIC18.c: 87: GLCD_Delay();
  9510  002F1E  EC67  F019         	call	_GLCD_Delay	;wreg free
  9511                           
  9512                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
  9513  002F22  9680               	bcf	3968,3,c	;volatile
  9514                           
  9515                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
  9516  002F24  0100               	movlb	0	; () banked
  9517  002F26  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  9518  002F28  EC75  F018         	call	_GLCD_DisableController
  9519  002F2C  0012               	return		;funcret
  9520  002F2E                     __end_of_GLCD_WriteCommand:
  9521                           	opt stack 0
  9522                           tblptru	equ	0xFF8
  9523                           tblptrh	equ	0xFF7
  9524                           tblptrl	equ	0xFF6
  9525                           tablat	equ	0xFF5
  9526                           prodh	equ	0xFF4
  9527                           prodl	equ	0xFF3
  9528                           intcon	equ	0xFF2
  9529                           indf0	equ	0xFEF
  9530                           postinc0	equ	0xFEE
  9531                           fsr0h	equ	0xFEA
  9532                           fsr0l	equ	0xFE9
  9533                           wreg	equ	0xFE8
  9534                           postdec1	equ	0xFE5
  9535                           fsr1l	equ	0xFE1
  9536                           indf2	equ	0xFDF
  9537                           fsr2h	equ	0xFDA
  9538                           fsr2l	equ	0xFD9
  9539                           status	equ	0xFD8
  9540                           
  9541 ;; *************** function _GLCD_ReadStatus *****************
  9542 ;; Defined at:
  9543 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;  controller      1    wreg     unsigned char 
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;  controller      1    2[BANK0 ] unsigned char 
  9548 ;;  status          1    1[BANK0 ] unsigned char 
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  1    wreg      unsigned char 
  9551 ;; Registers used:
  9552 ;;		wreg, status,2, status,0, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9559 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9561 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9562 ;;Total ram usage:        2 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:   10
  9565 ;; This function calls:
  9566 ;;		_GLCD_Delay
  9567 ;;		_GLCD_DisableController
  9568 ;;		_GLCD_EnableController
  9569 ;; This function is called by:
  9570 ;;		_GLCD_WriteCommand
  9571 ;;		_GLCD_ReadData
  9572 ;;		_GLCD_WriteData
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           	psect	text53
  9577  003094                     __ptext53:
  9578                           	opt stack 0
  9579  003094                     _GLCD_ReadStatus:
  9580                           	opt stack 16
  9581                           
  9582                           ;incstack = 0
  9583                           ;GLCD_ReadStatus@controller stored from wreg
  9584  003094  0100               	movlb	0	; () banked
  9585  003096  6F62               	movwf	GLCD_ReadStatus@controller& (0+255),b
  9586                           
  9587                           ;KS0108-PIC18.c: 64: unsigned char status;
  9588                           ;KS0108-PIC18.c: 65: TRISD = 0xFF;
  9589  003098  6895               	setf	3989,c	;volatile
  9590                           
  9591                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
  9592  00309A  8280               	bsf	3968,1,c	;volatile
  9593                           
  9594                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
  9595  00309C  9480               	bcf	3968,2,c	;volatile
  9596                           
  9597                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
  9598  00309E  0100               	movlb	0	; () banked
  9599  0030A0  5162               	movf	GLCD_ReadStatus@controller& (0+255),w,b
  9600  0030A2  EC60  F018         	call	_GLCD_EnableController
  9601                           
  9602                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
  9603  0030A6  8680               	bsf	3968,3,c	;volatile
  9604                           
  9605                           ;KS0108-PIC18.c: 70: GLCD_Delay();
  9606  0030A8  EC67  F019         	call	_GLCD_Delay	;wreg free
  9607                           
  9608                           ;KS0108-PIC18.c: 71: status = PORTD;
  9609  0030AC  CF83 F061          	movff	3971,GLCD_ReadStatus@status	;volatile
  9610                           
  9611                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
  9612  0030B0  9680               	bcf	3968,3,c	;volatile
  9613                           
  9614                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
  9615  0030B2  0100               	movlb	0	; () banked
  9616  0030B4  5162               	movf	GLCD_ReadStatus@controller& (0+255),w,b
  9617  0030B6  EC75  F018         	call	_GLCD_DisableController
  9618                           
  9619                           ;KS0108-PIC18.c: 74: return status;
  9620  0030BA  0100               	movlb	0	; () banked
  9621  0030BC  5161               	movf	GLCD_ReadStatus@status& (0+255),w,b
  9622  0030BE  0012               	return	
  9623  0030C0                     __end_of_GLCD_ReadStatus:
  9624                           	opt stack 0
  9625                           tblptru	equ	0xFF8
  9626                           tblptrh	equ	0xFF7
  9627                           tblptrl	equ	0xFF6
  9628                           tablat	equ	0xFF5
  9629                           prodh	equ	0xFF4
  9630                           prodl	equ	0xFF3
  9631                           intcon	equ	0xFF2
  9632                           indf0	equ	0xFEF
  9633                           postinc0	equ	0xFEE
  9634                           fsr0h	equ	0xFEA
  9635                           fsr0l	equ	0xFE9
  9636                           wreg	equ	0xFE8
  9637                           postdec1	equ	0xFE5
  9638                           fsr1l	equ	0xFE1
  9639                           indf2	equ	0xFDF
  9640                           fsr2h	equ	0xFDA
  9641                           fsr2l	equ	0xFD9
  9642                           status	equ	0xFD8
  9643                           
  9644 ;; *************** function _GLCD_EnableController *****************
  9645 ;; Defined at:
  9646 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;  controller      1    wreg     unsigned char 
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;  controller      1    0[BANK0 ] unsigned char 
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  1    wreg      void 
  9653 ;; Registers used:
  9654 ;;		wreg, status,2, status,0
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9663 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9664 ;;Total ram usage:        1 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; Hardware stack levels required when called:    9
  9667 ;; This function calls:
  9668 ;;		Nothing
  9669 ;; This function is called by:
  9670 ;;		_GLCD_ReadStatus
  9671 ;;		_GLCD_WriteCommand
  9672 ;;		_GLCD_ReadData
  9673 ;;		_GLCD_WriteData
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           	psect	text54
  9678  0030C0                     __ptext54:
  9679                           	opt stack 0
  9680  0030C0                     _GLCD_EnableController:
  9681                           	opt stack 16
  9682                           
  9683                           ; BSR set to: 0
  9684                           ;incstack = 0
  9685                           ;GLCD_EnableController@controller stored from wreg
  9686  0030C0  0100               	movlb	0	; () banked
  9687  0030C2  6F60               	movwf	GLCD_EnableController@controller& (0+255),b
  9688                           
  9689                           ;KS0108-PIC18.c: 41: switch(controller){
  9690  0030C4  D006               	goto	l673
  9691  0030C6  9A80               	bcf	3968,5,c	;volatile
  9692  0030C8  0012               	return	
  9693  0030CA  9C80               	bcf	3968,6,c	;volatile
  9694  0030CC  0012               	return	
  9695  0030CE  9E80               	bcf	3968,7,c	;volatile
  9696                           
  9697                           ;KS0108-PIC18.c: 45: }
  9698  0030D0  0012               	return	
  9699  0030D2                     l673:
  9700  0030D2  0100               	movlb	0	; () banked
  9701  0030D4  5160               	movf	GLCD_EnableController@controller& (0+255),w,b
  9702                           
  9703                           ; Switch size 1, requested type "space"
  9704                           ; Number of cases is 3, Range of values is 0 to 2
  9705                           ; switch strategies available:
  9706                           ; Name         Instructions Cycles
  9707                           ; simple_byte           10     6 (average)
  9708                           ;	Chosen strategy is simple_byte
  9709  0030D6  0A00               	xorlw	0	; case 0
  9710  0030D8  B4D8               	btfsc	status,2,c
  9711  0030DA  D7F5               	goto	l674
  9712  0030DC  0A01               	xorlw	1	; case 1
  9713  0030DE  B4D8               	btfsc	status,2,c
  9714  0030E0  D7F4               	goto	l676
  9715  0030E2  0A03               	xorlw	3	; case 2
  9716  0030E4  A4D8               	btfss	status,2,c
  9717  0030E6  0012               	return	
  9718  0030E8  D7F2               	goto	l677
  9719  0030EA                     __end_of_GLCD_EnableController:
  9720                           	opt stack 0
  9721                           tblptru	equ	0xFF8
  9722                           tblptrh	equ	0xFF7
  9723                           tblptrl	equ	0xFF6
  9724                           tablat	equ	0xFF5
  9725                           prodh	equ	0xFF4
  9726                           prodl	equ	0xFF3
  9727                           intcon	equ	0xFF2
  9728                           indf0	equ	0xFEF
  9729                           postinc0	equ	0xFEE
  9730                           fsr0h	equ	0xFEA
  9731                           fsr0l	equ	0xFE9
  9732                           wreg	equ	0xFE8
  9733                           postdec1	equ	0xFE5
  9734                           fsr1l	equ	0xFE1
  9735                           indf2	equ	0xFDF
  9736                           fsr2h	equ	0xFDA
  9737                           fsr2l	equ	0xFD9
  9738                           status	equ	0xFD8
  9739                           
  9740 ;; *************** function _GLCD_DisableController *****************
  9741 ;; Defined at:
  9742 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;  controller      1    wreg     unsigned char 
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;  controller      1    0[BANK0 ] unsigned char 
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		wreg, status,2, status,0
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9759 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9760 ;;Total ram usage:        1 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; Hardware stack levels required when called:    9
  9763 ;; This function calls:
  9764 ;;		Nothing
  9765 ;; This function is called by:
  9766 ;;		_GLCD_ReadStatus
  9767 ;;		_GLCD_WriteCommand
  9768 ;;		_GLCD_ReadData
  9769 ;;		_GLCD_WriteData
  9770 ;; This function uses a non-reentrant model
  9771 ;;
  9772                           
  9773                           	psect	text55
  9774  0030EA                     __ptext55:
  9775                           	opt stack 0
  9776  0030EA                     _GLCD_DisableController:
  9777                           	opt stack 16
  9778                           
  9779                           ;incstack = 0
  9780                           ;GLCD_DisableController@controller stored from wreg
  9781  0030EA  0100               	movlb	0	; () banked
  9782  0030EC  6F60               	movwf	GLCD_DisableController@controller& (0+255),b
  9783                           
  9784                           ;KS0108-PIC18.c: 52: switch(controller)
  9785  0030EE  D006               	goto	l681
  9786  0030F0  8A80               	bsf	3968,5,c	;volatile
  9787  0030F2  0012               	return	
  9788  0030F4  8C80               	bsf	3968,6,c	;volatile
  9789  0030F6  0012               	return	
  9790  0030F8  8E80               	bsf	3968,7,c	;volatile
  9791                           
  9792                           ;KS0108-PIC18.c: 57: }
  9793  0030FA  0012               	return	
  9794  0030FC                     l681:
  9795  0030FC  0100               	movlb	0	; () banked
  9796  0030FE  5160               	movf	GLCD_DisableController@controller& (0+255),w,b
  9797                           
  9798                           ; Switch size 1, requested type "space"
  9799                           ; Number of cases is 3, Range of values is 0 to 2
  9800                           ; switch strategies available:
  9801                           ; Name         Instructions Cycles
  9802                           ; simple_byte           10     6 (average)
  9803                           ;	Chosen strategy is simple_byte
  9804  003100  0A00               	xorlw	0	; case 0
  9805  003102  B4D8               	btfsc	status,2,c
  9806  003104  D7F5               	goto	l682
  9807  003106  0A01               	xorlw	1	; case 1
  9808  003108  B4D8               	btfsc	status,2,c
  9809  00310A  D7F4               	goto	l684
  9810  00310C  0A03               	xorlw	3	; case 2
  9811  00310E  A4D8               	btfss	status,2,c
  9812  003110  0012               	return	
  9813  003112  D7F2               	goto	l685
  9814  003114                     __end_of_GLCD_DisableController:
  9815                           	opt stack 0
  9816                           tblptru	equ	0xFF8
  9817                           tblptrh	equ	0xFF7
  9818                           tblptrl	equ	0xFF6
  9819                           tablat	equ	0xFF5
  9820                           prodh	equ	0xFF4
  9821                           prodl	equ	0xFF3
  9822                           intcon	equ	0xFF2
  9823                           indf0	equ	0xFEF
  9824                           postinc0	equ	0xFEE
  9825                           fsr0h	equ	0xFEA
  9826                           fsr0l	equ	0xFE9
  9827                           wreg	equ	0xFE8
  9828                           postdec1	equ	0xFE5
  9829                           fsr1l	equ	0xFE1
  9830                           indf2	equ	0xFDF
  9831                           fsr2h	equ	0xFDA
  9832                           fsr2l	equ	0xFD9
  9833                           status	equ	0xFD8
  9834                           
  9835 ;; *************** function _GLCD_Delay *****************
  9836 ;; Defined at:
  9837 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;		None
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;		None
  9842 ;; Return value:  Size  Location     Type
  9843 ;;                  1    wreg      void 
  9844 ;; Registers used:
  9845 ;;		None
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9855 ;;Total ram usage:        0 bytes
  9856 ;; Hardware stack levels used:    1
  9857 ;; Hardware stack levels required when called:    9
  9858 ;; This function calls:
  9859 ;;		Nothing
  9860 ;; This function is called by:
  9861 ;;		_GLCD_ReadStatus
  9862 ;;		_GLCD_WriteCommand
  9863 ;;		_GLCD_ReadData
  9864 ;;		_GLCD_WriteData
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           
  9868                           	psect	text56
  9869  0032CE                     __ptext56:
  9870                           	opt stack 0
  9871  0032CE                     _GLCD_Delay:
  9872                           	opt stack 16
  9873                           
  9874                           ;KS0108-PIC18.c: 26: __nop();
  9875                           
  9876                           ;incstack = 0
  9877  0032CE  F000               	nop	
  9878  0032D0  0012               	return		;funcret
  9879  0032D2                     __end_of_GLCD_Delay:
  9880                           	opt stack 0
  9881                           tblptru	equ	0xFF8
  9882                           tblptrh	equ	0xFF7
  9883                           tblptrl	equ	0xFF6
  9884                           tablat	equ	0xFF5
  9885                           prodh	equ	0xFF4
  9886                           prodl	equ	0xFF3
  9887                           intcon	equ	0xFF2
  9888                           indf0	equ	0xFEF
  9889                           postinc0	equ	0xFEE
  9890                           fsr0h	equ	0xFEA
  9891                           fsr0l	equ	0xFE9
  9892                           wreg	equ	0xFE8
  9893                           postdec1	equ	0xFE5
  9894                           fsr1l	equ	0xFE1
  9895                           indf2	equ	0xFDF
  9896                           fsr2h	equ	0xFDA
  9897                           fsr2l	equ	0xFD9
  9898                           status	equ	0xFD8
  9899                           
  9900 ;; *************** function _INTERRUPT_InterruptManager *****************
  9901 ;; Defined at:
  9902 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;		None
  9905 ;; Auto vars:     Size  Location     Type
  9906 ;;		None
  9907 ;; Return value:  Size  Location     Type
  9908 ;;                  1    wreg      void 
  9909 ;; Registers used:
  9910 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9911 ;; Tracked objects:
  9912 ;;		On entry : 0/0
  9913 ;;		On exit  : 0/0
  9914 ;;		Unchanged: 0/0
  9915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9918 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9919 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9920 ;;Total ram usage:       18 bytes
  9921 ;; Hardware stack levels used:    1
  9922 ;; Hardware stack levels required when called:    8
  9923 ;; This function calls:
  9924 ;;		_PIN_MANAGER_IOC
  9925 ;;		_TMR0_ISR
  9926 ;; This function is called by:
  9927 ;;		Interrupt level 2
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931                           	psect	intcode
  9932  000008                     __pintcode:
  9933                           	opt stack 0
  9934  000008                     _INTERRUPT_InterruptManager:
  9935                           	opt stack 14
  9936                           
  9937                           ;incstack = 0
  9938  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9939  00000A  CFFA F04B          	movff	pclath,??_INTERRUPT_InterruptManager
  9940  00000E  CFFB F04C          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9941  000012  CFE9 F04D          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  9942  000016  CFEA F04E          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  9943  00001A  CFE1 F04F          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  9944  00001E  CFE2 F050          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  9945  000022  CFD9 F051          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  9946  000026  CFDA F052          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  9947  00002A  CFF3 F053          	movff	prodl,??_INTERRUPT_InterruptManager+8
  9948  00002E  CFF4 F054          	movff	prodh,??_INTERRUPT_InterruptManager+9
  9949  000032  CFF6 F055          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  9950  000036  CFF7 F056          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  9951  00003A  CFF8 F057          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  9952  00003E  CFF5 F058          	movff	tablat,??_INTERRUPT_InterruptManager+13
  9953  000042  C05F  F059         	movff	btemp,??_INTERRUPT_InterruptManager+14
  9954  000046  C060  F05A         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  9955  00004A  C061  F05B         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  9956  00004E  C062  F05C         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  9957                           
  9958                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  9959  000052  BAF2               	btfsc	intcon,5,c	;volatile
  9960  000054  A4F2               	btfss	intcon,2,c	;volatile
  9961  000056  D003               	goto	i2l259
  9962                           
  9963                           ;interrupt_manager.c: 61: {
  9964                           ;interrupt_manager.c: 62: TMR0_ISR();
  9965  000058  EC8A  F018         	call	_TMR0_ISR	;wreg free
  9966                           
  9967                           ;interrupt_manager.c: 63: }
  9968  00005C  D005               	goto	i2l261
  9969  00005E                     i2l259:
  9970                           
  9971                           ;interrupt_manager.c: 64: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  9972  00005E  B6F2               	btfsc	intcon,3,c	;volatile
  9973  000060  A0F2               	btfss	intcon,0,c	;volatile
  9974  000062  D002               	goto	i2l261
  9975                           
  9976                           ;interrupt_manager.c: 65: {
  9977                           ;interrupt_manager.c: 66: PIN_MANAGER_IOC();
  9978  000064  EC58  F00F         	call	_PIN_MANAGER_IOC	;wreg free
  9979  000068                     i2l261:
  9980                           
  9981                           ;interrupt_manager.c: 68: else
  9982                           ;interrupt_manager.c: 69: {
  9983  000068  C05C  F062         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  9984  00006C  C05B  F061         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  9985  000070  C05A  F060         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  9986  000074  C059  F05F         	movff	??_INTERRUPT_InterruptManager+14,btemp
  9987  000078  C058  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  9988  00007C  C057  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  9989  000080  C056  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  9990  000084  C055  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  9991  000088  C054  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  9992  00008C  C053  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  9993  000090  C052  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  9994  000094  C051  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  9995  000098  C050  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  9996  00009C  C04F  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  9997  0000A0  C04E  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  9998  0000A4  C04D  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  9999  0000A8  C04C  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10000  0000AC  C04B  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10001  0000B0  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10002  0000B2  0011               	retfie		f
 10003  0000B4                     __end_of_INTERRUPT_InterruptManager:
 10004                           	opt stack 0
 10005                           pclatu	equ	0xFFB
 10006                           pclath	equ	0xFFA
 10007                           tblptru	equ	0xFF8
 10008                           tblptrh	equ	0xFF7
 10009                           tblptrl	equ	0xFF6
 10010                           tablat	equ	0xFF5
 10011                           prodh	equ	0xFF4
 10012                           prodl	equ	0xFF3
 10013                           intcon	equ	0xFF2
 10014                           indf0	equ	0xFEF
 10015                           postinc0	equ	0xFEE
 10016                           fsr0h	equ	0xFEA
 10017                           fsr0l	equ	0xFE9
 10018                           wreg	equ	0xFE8
 10019                           postdec1	equ	0xFE5
 10020                           fsr1h	equ	0xFE2
 10021                           fsr1l	equ	0xFE1
 10022                           indf2	equ	0xFDF
 10023                           fsr2h	equ	0xFDA
 10024                           fsr2l	equ	0xFD9
 10025                           status	equ	0xFD8
 10026                           
 10027 ;; *************** function _TMR0_ISR *****************
 10028 ;; Defined at:
 10029 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 10030 ;; Parameters:    Size  Location     Type
 10031 ;;		None
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;		None
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  1    wreg      void 
 10036 ;; Registers used:
 10037 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10047 ;;Total ram usage:        0 bytes
 10048 ;; Hardware stack levels used:    1
 10049 ;; Hardware stack levels required when called:    1
 10050 ;; This function calls:
 10051 ;;		Absolute function
 10052 ;;		_TMR0_DefaultInterruptHandler
 10053 ;; This function is called by:
 10054 ;;		_INTERRUPT_InterruptManager
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           	psect	text58
 10059  003114                     __ptext58:
 10060                           	opt stack 0
 10061  003114                     _TMR0_ISR:
 10062                           	opt stack 20
 10063                           
 10064                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
 10065                           
 10066                           ;incstack = 0
 10067  003114  94F2               	bcf	intcon,2,c	;volatile
 10068                           
 10069                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
 10070  003116  0100               	movlb	0	; () banked
 10071  003118  51CE               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
 10072  00311A  6ED7               	movwf	4055,c	;volatile
 10073                           
 10074                           ; BSR set to: 0
 10075                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
 10076  00311C  C0CD  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;tmr0.c: 145: if(TMR0_InterruptHandler)
 10080  003120  51CF               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10081  003122  11D0               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10082  003124  B4D8               	btfsc	status,2,c
 10083  003126  0012               	return	
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;tmr0.c: 146: {
 10087                           ;tmr0.c: 147: TMR0_InterruptHandler();
 10088  003128  D801               	call	i2u447_48
 10089  00312A  0012               	return	
 10090  00312C                     i2u447_48:
 10091  00312C  0005               	push	
 10092  00312E  6EFA               	movwf	pclath,c
 10093  003130  51CF               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10094  003132  6EFD               	movwf	tosl,c
 10095  003134  51D0               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10096  003136  6EFE               	movwf	tosh,c
 10097  003138  6AFF               	clrf	tosu,c
 10098  00313A  50FA               	movf	pclath,w,c
 10099  00313C  0012               	return		;indir
 10100  00313E                     __end_of_TMR0_ISR:
 10101                           	opt stack 0
 10102                           tosu	equ	0xFFF
 10103                           tosh	equ	0xFFE
 10104                           tosl	equ	0xFFD
 10105                           pclatu	equ	0xFFB
 10106                           pclath	equ	0xFFA
 10107                           tblptru	equ	0xFF8
 10108                           tblptrh	equ	0xFF7
 10109                           tblptrl	equ	0xFF6
 10110                           tablat	equ	0xFF5
 10111                           prodh	equ	0xFF4
 10112                           prodl	equ	0xFF3
 10113                           intcon	equ	0xFF2
 10114                           indf0	equ	0xFEF
 10115                           postinc0	equ	0xFEE
 10116                           fsr0h	equ	0xFEA
 10117                           fsr0l	equ	0xFE9
 10118                           wreg	equ	0xFE8
 10119                           postdec1	equ	0xFE5
 10120                           fsr1h	equ	0xFE2
 10121                           fsr1l	equ	0xFE1
 10122                           indf2	equ	0xFDF
 10123                           fsr2h	equ	0xFDA
 10124                           fsr2l	equ	0xFD9
 10125                           status	equ	0xFD8
 10126                           
 10127 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10128 ;; Defined at:
 10129 ;;		line 158 in file "mcc_generated_files/tmr0.c"
 10130 ;; Parameters:    Size  Location     Type
 10131 ;;		None
 10132 ;; Auto vars:     Size  Location     Type
 10133 ;;		None
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  1    wreg      void 
 10136 ;; Registers used:
 10137 ;;		None
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10147 ;;Total ram usage:        0 bytes
 10148 ;; Hardware stack levels used:    1
 10149 ;; This function calls:
 10150 ;;		Nothing
 10151 ;; This function is called by:
 10152 ;;		_TMR0_Initialize
 10153 ;;		_TMR0_ISR
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           	psect	text59
 10158  0032D6                     __ptext59:
 10159                           	opt stack 0
 10160  0032D6                     _TMR0_DefaultInterruptHandler:
 10161                           	opt stack 20
 10162                           
 10163                           ;incstack = 0
 10164  0032D6  0012               	return		;funcret
 10165  0032D8                     __end_of_TMR0_DefaultInterruptHandler:
 10166                           	opt stack 0
 10167                           tosu	equ	0xFFF
 10168                           tosh	equ	0xFFE
 10169                           tosl	equ	0xFFD
 10170                           pclatu	equ	0xFFB
 10171                           pclath	equ	0xFFA
 10172                           tblptru	equ	0xFF8
 10173                           tblptrh	equ	0xFF7
 10174                           tblptrl	equ	0xFF6
 10175                           tablat	equ	0xFF5
 10176                           prodh	equ	0xFF4
 10177                           prodl	equ	0xFF3
 10178                           intcon	equ	0xFF2
 10179                           indf0	equ	0xFEF
 10180                           postinc0	equ	0xFEE
 10181                           fsr0h	equ	0xFEA
 10182                           fsr0l	equ	0xFE9
 10183                           wreg	equ	0xFE8
 10184                           postdec1	equ	0xFE5
 10185                           fsr1h	equ	0xFE2
 10186                           fsr1l	equ	0xFE1
 10187                           indf2	equ	0xFDF
 10188                           fsr2h	equ	0xFDA
 10189                           fsr2l	equ	0xFD9
 10190                           status	equ	0xFD8
 10191                           
 10192 ;; *************** function _PIN_MANAGER_IOC *****************
 10193 ;; Defined at:
 10194 ;;		line 140 in file "mcc_generated_files/pin_manager.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;		None
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;  result          1   73[COMRAM] unsigned char 
 10199 ;;  CHA             1   72[COMRAM] unsigned char 
 10200 ;;  CHB             1   71[COMRAM] unsigned char 
 10201 ;;  currentState    1   70[COMRAM] unsigned char 
 10202 ;; Return value:  Size  Location     Type
 10203 ;;                  1    wreg      void 
 10204 ;; Registers used:
 10205 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10206 ;; Tracked objects:
 10207 ;;		On entry : 0/0
 10208 ;;		On exit  : 0/0
 10209 ;;		Unchanged: 0/0
 10210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10212 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10214 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10215 ;;Total ram usage:        4 bytes
 10216 ;; Hardware stack levels used:    1
 10217 ;; Hardware stack levels required when called:    7
 10218 ;; This function calls:
 10219 ;;		_Brightness_Menu_Function
 10220 ;;		_Main_Menu_Function
 10221 ;;		_Run_Time_Menu_Function
 10222 ;;		_Start_Color_Menu_Function
 10223 ;; This function is called by:
 10224 ;;		_INTERRUPT_InterruptManager
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text60
 10229  001EB0                     __ptext60:
 10230                           	opt stack 0
 10231  001EB0                     _PIN_MANAGER_IOC:
 10232                           	opt stack 14
 10233                           
 10234                           ;pin_manager.c: 142: static unsigned char previousState;
 10235                           ;pin_manager.c: 143: unsigned char currentState;
 10236                           ;pin_manager.c: 144: char result;
 10237                           ;pin_manager.c: 145: unsigned char CHA, CHB;
 10238                           ;pin_manager.c: 147: CHA = PORTBbits.RB5;
 10239                           
 10240                           ;incstack = 0
 10241  001EB0  0E00               	movlw	0
 10242  001EB2  BA81               	btfsc	3969,5,c	;volatile
 10243  001EB4  0E01               	movlw	1
 10244  001EB6  6E49               	movwf	PIN_MANAGER_IOC@CHA,c
 10245                           
 10246                           ;pin_manager.c: 148: CHB = PORTBbits.RB4;
 10247  001EB8  0E00               	movlw	0
 10248  001EBA  B881               	btfsc	3969,4,c	;volatile
 10249  001EBC  0E01               	movlw	1
 10250  001EBE  6E48               	movwf	PIN_MANAGER_IOC@CHB,c
 10251                           
 10252                           ;pin_manager.c: 150: currentState = (CHA << 1) | CHB;
 10253  001EC0  5049               	movf	PIN_MANAGER_IOC@CHA,w,c
 10254  001EC2  2449               	addwf	PIN_MANAGER_IOC@CHA,w,c
 10255  001EC4  1048               	iorwf	PIN_MANAGER_IOC@CHB,w,c
 10256  001EC6  6E47               	movwf	PIN_MANAGER_IOC@currentState,c
 10257                           
 10258                           ;pin_manager.c: 152: if(previousState == 3)
 10259  001EC8  0E03               	movlw	3
 10260  001ECA  0100               	movlb	0	; () banked
 10261  001ECC  19C5               	xorwf	PIN_MANAGER_IOC@previousState& (0+255),w,b
 10262  001ECE  A4D8               	btfss	status,2,c
 10263  001ED0  D033               	goto	i2l151
 10264                           
 10265                           ; BSR set to: 0
 10266                           ;pin_manager.c: 153: {
 10267                           ;pin_manager.c: 156: if(CHA == 0)
 10268  001ED2  5049               	movf	PIN_MANAGER_IOC@CHA,w,c
 10269  001ED4  A4D8               	btfss	status,2,c
 10270  001ED6  D002               	goto	i2l147
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;pin_manager.c: 157: {
 10274                           ;pin_manager.c: 158: result = 1;
 10275  001ED8  0E01               	movlw	1
 10276  001EDA  D001               	goto	L3
 10277  001EDC                     i2l147:
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;pin_manager.c: 160: else
 10281                           ;pin_manager.c: 161: {
 10282                           ;pin_manager.c: 162: result = 0;
 10283                           
 10284                           ; BSR set to: 0
 10285  001EDC  0E00               	movlw	0
 10286  001EDE                     L3:
 10287  001EDE  6E4A               	movwf	PIN_MANAGER_IOC@result,c
 10288                           
 10289                           ; BSR set to: 0
 10290                           ;pin_manager.c: 163: }
 10291                           ;pin_manager.c: 166: switch(currentContext)
 10292  001EE0  D014               	goto	i2l149
 10293  001EE2                     
 10294                           ; BSR set to: 0
 10295                           
 10296                           ; BSR set to: 0
 10297  001EE2  504A               	movf	PIN_MANAGER_IOC@result,w,c
 10298  001EE4  ECF9  F018         	call	_Main_Menu_Function
 10299  001EE8  D027               	goto	i2l151
 10300  001EEA  504A               	movf	PIN_MANAGER_IOC@result,w,c
 10301  001EEC  EC78  F010         	call	_Run_Time_Menu_Function
 10302  001EF0  D023               	goto	i2l151
 10303  001EF2  504A               	movf	PIN_MANAGER_IOC@result,w,c
 10304  001EF4  EC9B  F008         	call	_Brightness_Menu_Function
 10305  001EF8  D01F               	goto	i2l151
 10306  001EFA  504A               	movf	PIN_MANAGER_IOC@result,w,c
 10307  001EFC  EC5C  F000         	call	_Start_Color_Menu_Function
 10308                           
 10309                           ;pin_manager.c: 174: case selectStateMenu: break;
 10310                           
 10311                           ;pin_manager.c: 173: case backlightMenu: break;
 10312                           
 10313                           ;pin_manager.c: 172: case endColors: break;
 10314  001F00  D01B               	goto	i2l151
 10315  001F02  504A               	movf	PIN_MANAGER_IOC@result,w,c
 10316  001F04  ECF9  F018         	call	_Main_Menu_Function
 10317                           
 10318                           ;pin_manager.c: 178: }
 10319  001F08  D017               	goto	i2l151
 10320  001F0A                     i2l149:
 10321  001F0A  0100               	movlb	0	; () banked
 10322  001F0C  51CC               	movf	_currentContext& (0+255),w,b
 10323                           
 10324                           ; Switch size 1, requested type "space"
 10325                           ; Number of cases is 7, Range of values is 0 to 6
 10326                           ; switch strategies available:
 10327                           ; Name         Instructions Cycles
 10328                           ; simple_byte           22    12 (average)
 10329                           ;	Chosen strategy is simple_byte
 10330  001F0E  0A00               	xorlw	0	; case 0
 10331  001F10  B4D8               	btfsc	status,2,c
 10332  001F12  D7E7               	goto	i2l150
 10333  001F14  0A01               	xorlw	1	; case 1
 10334  001F16  B4D8               	btfsc	status,2,c
 10335  001F18  D7E8               	goto	i2l152
 10336  001F1A  0A03               	xorlw	3	; case 2
 10337  001F1C  B4D8               	btfsc	status,2,c
 10338  001F1E  D7E9               	goto	i2l153
 10339  001F20  0A01               	xorlw	1	; case 3
 10340  001F22  B4D8               	btfsc	status,2,c
 10341  001F24  D7EA               	goto	i2l154
 10342  001F26  0A07               	xorlw	7	; case 4
 10343  001F28  B4D8               	btfsc	status,2,c
 10344  001F2A  D006               	goto	i2l151
 10345  001F2C  0A01               	xorlw	1	; case 5
 10346  001F2E  B4D8               	btfsc	status,2,c
 10347  001F30  D003               	goto	i2l151
 10348  001F32  0A03               	xorlw	3	; case 6
 10349  001F34  A4D8               	btfss	status,2,c
 10350  001F36  D7E5               	goto	i2l158
 10351  001F38                     i2l151:
 10352                           
 10353                           ;pin_manager.c: 179: }
 10354                           ;pin_manager.c: 181: previousState = currentState;
 10355                           
 10356                           ; BSR set to: 0
 10357  001F38  C047  F0C5         	movff	PIN_MANAGER_IOC@currentState,PIN_MANAGER_IOC@previousState
 10358                           
 10359                           ;pin_manager.c: 185: PORTB = PORTB;
 10360  001F3C  CF81 FF81          	movff	3969,3969	;volatile
 10361                           
 10362                           ;pin_manager.c: 187: INTCONbits.RBIF = 0;
 10363  001F40  90F2               	bcf	intcon,0,c	;volatile
 10364  001F42  0012               	return		;funcret
 10365  001F44                     __end_of_PIN_MANAGER_IOC:
 10366                           	opt stack 0
 10367                           tosu	equ	0xFFF
 10368                           tosh	equ	0xFFE
 10369                           tosl	equ	0xFFD
 10370                           pclatu	equ	0xFFB
 10371                           pclath	equ	0xFFA
 10372                           tblptru	equ	0xFF8
 10373                           tblptrh	equ	0xFF7
 10374                           tblptrl	equ	0xFF6
 10375                           tablat	equ	0xFF5
 10376                           prodh	equ	0xFF4
 10377                           prodl	equ	0xFF3
 10378                           intcon	equ	0xFF2
 10379                           indf0	equ	0xFEF
 10380                           postinc0	equ	0xFEE
 10381                           fsr0h	equ	0xFEA
 10382                           fsr0l	equ	0xFE9
 10383                           wreg	equ	0xFE8
 10384                           postdec1	equ	0xFE5
 10385                           fsr1h	equ	0xFE2
 10386                           fsr1l	equ	0xFE1
 10387                           indf2	equ	0xFDF
 10388                           fsr2h	equ	0xFDA
 10389                           fsr2l	equ	0xFD9
 10390                           status	equ	0xFD8
 10391                           
 10392 ;; *************** function _Start_Color_Menu_Function *****************
 10393 ;; Defined at:
 10394 ;;		line 303 in file "mcc_generated_files/pin_manager.c"
 10395 ;; Parameters:    Size  Location     Type
 10396 ;;  result          1    wreg     unsigned char 
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;  result          1   69[COMRAM] unsigned char 
 10399 ;;  display        10   59[COMRAM] unsigned char [10]
 10400 ;; Return value:  Size  Location     Type
 10401 ;;                  1    wreg      void 
 10402 ;; Registers used:
 10403 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/0
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10410 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10412 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10413 ;;Total ram usage:       11 bytes
 10414 ;; Hardware stack levels used:    1
 10415 ;; Hardware stack levels required when called:    6
 10416 ;; This function calls:
 10417 ;;		___ftadd
 10418 ;;		___ftge
 10419 ;;		___ftsub
 10420 ;;		i2_Draw_Arrow
 10421 ;;		i2_GLCD_GoTo
 10422 ;;		i2_GLCD_WriteString
 10423 ;;		i2_Set_Colors
 10424 ;;		i2___fttol
 10425 ;;		i2_itoa
 10426 ;; This function is called by:
 10427 ;;		_PIN_MANAGER_IOC
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           	psect	text61
 10432  0000B8                     __ptext61:
 10433                           	opt stack 0
 10434  0000B8                     _Start_Color_Menu_Function:
 10435                           	opt stack 14
 10436                           
 10437                           ;incstack = 0
 10438                           ;Start_Color_Menu_Function@result stored from wreg
 10439  0000B8  6E46               	movwf	Start_Color_Menu_Function@result,c
 10440                           
 10441                           ;pin_manager.c: 305: char display[10];
 10442                           ;pin_manager.c: 306: if(adjustValues > 0)
 10443  0000BA  0100               	movlb	0	; () banked
 10444  0000BC  51C8               	movf	_adjustValues& (0+255),w,b
 10445  0000BE  A4D8               	btfss	status,2,c
 10446  0000C0  D19B               	goto	i2l204
 10447  0000C2  D1A6               	goto	i2l203
 10448  0000C4                     
 10449                           ; BSR set to: 0
 10450                           ;pin_manager.c: 311: if(result)
 10451                           
 10452                           ; BSR set to: 0
 10453  0000C4  5046               	movf	Start_Color_Menu_Function@result,w,c
 10454  0000C6  B4D8               	btfsc	status,2,c
 10455  0000C8  D025               	goto	i2l206
 10456                           
 10457                           ; BSR set to: 0
 10458                           ;pin_manager.c: 312: {
 10459                           ;pin_manager.c: 313: if(redStart < 255) redStart++;
 10460  0000CA  C0AF  F001         	movff	_redStart,___ftge@ff1
 10461  0000CE  C0B0  F002         	movff	_redStart+1,___ftge@ff1+1
 10462  0000D2  C0B1  F003         	movff	_redStart+2,___ftge@ff1+2
 10463  0000D6  0E00               	movlw	0
 10464  0000D8  6E04               	movwf	___ftge@ff2,c
 10465  0000DA  0E7F               	movlw	127
 10466  0000DC  6E05               	movwf	___ftge@ff2+1,c
 10467  0000DE  0E43               	movlw	67
 10468  0000E0  6E06               	movwf	___ftge@ff2+2,c
 10469  0000E2  ECA2  F00F         	call	___ftge	;wreg free
 10470  0000E6  B0D8               	btfsc	status,0,c
 10471  0000E8  D039               	goto	i2l209
 10472  0000EA  C0AF  F009         	movff	_redStart,___ftadd@f1
 10473  0000EE  C0B0  F00A         	movff	_redStart+1,___ftadd@f1+1
 10474  0000F2  C0B1  F00B         	movff	_redStart+2,___ftadd@f1+2
 10475  0000F6  0E00               	movlw	0
 10476  0000F8  6E0C               	movwf	___ftadd@f2,c
 10477  0000FA  0E80               	movlw	128
 10478  0000FC  6E0D               	movwf	___ftadd@f2+1,c
 10479  0000FE  0E3F               	movlw	63
 10480  000100  6E0E               	movwf	___ftadd@f2+2,c
 10481  000102  ECFD  F006         	call	___ftadd	;wreg free
 10482  000106  C009  F0AF         	movff	?___ftadd,_redStart
 10483  00010A  C00A  F0B0         	movff	?___ftadd+1,_redStart+1
 10484  00010E  C00B  F0B1         	movff	?___ftadd+2,_redStart+2
 10485                           
 10486                           ;pin_manager.c: 314: }
 10487  000112  D024               	goto	i2l209
 10488  000114                     i2l206:
 10489                           
 10490                           ;pin_manager.c: 315: else
 10491                           ;pin_manager.c: 316: {
 10492                           ;pin_manager.c: 317: if(redStart > 0) redStart--;
 10493  000114  0E00               	movlw	0
 10494  000116  6E01               	movwf	___ftge@ff1,c
 10495  000118  0E00               	movlw	0
 10496  00011A  6E02               	movwf	___ftge@ff1+1,c
 10497  00011C  0E00               	movlw	0
 10498  00011E  6E03               	movwf	___ftge@ff1+2,c
 10499  000120  C0AF  F004         	movff	_redStart,___ftge@ff2
 10500  000124  C0B0  F005         	movff	_redStart+1,___ftge@ff2+1
 10501  000128  C0B1  F006         	movff	_redStart+2,___ftge@ff2+2
 10502  00012C  ECA2  F00F         	call	___ftge	;wreg free
 10503  000130  B0D8               	btfsc	status,0,c
 10504  000132  D014               	goto	i2l209
 10505  000134  C0AF  F015         	movff	_redStart,___ftsub@f1
 10506  000138  C0B0  F016         	movff	_redStart+1,___ftsub@f1+1
 10507  00013C  C0B1  F017         	movff	_redStart+2,___ftsub@f1+2
 10508  000140  0E00               	movlw	0
 10509  000142  6E18               	movwf	___ftsub@f2,c
 10510  000144  0E80               	movlw	128
 10511  000146  6E19               	movwf	___ftsub@f2+1,c
 10512  000148  0E3F               	movlw	63
 10513  00014A  6E1A               	movwf	___ftsub@f2+2,c
 10514  00014C  ECA9  F016         	call	___ftsub	;wreg free
 10515  000150  C015  F0AF         	movff	?___ftsub,_redStart
 10516  000154  C016  F0B0         	movff	?___ftsub+1,_redStart+1
 10517  000158  C017  F0B1         	movff	?___ftsub+2,_redStart+2
 10518  00015C                     i2l209:
 10519                           
 10520                           ;pin_manager.c: 318: }
 10521                           ;pin_manager.c: 320: Set_Colors(redStart, greenStart, blueStart);
 10522  00015C  C0AF  F027         	movff	_redStart,i2Set_Colors@Red
 10523  000160  C0B0  F028         	movff	_redStart+1,i2Set_Colors@Red+1
 10524  000164  C0B1  F029         	movff	_redStart+2,i2Set_Colors@Red+2
 10525  000168  C0AC  F02A         	movff	_greenStart,i2Set_Colors@Green
 10526  00016C  C0AD  F02B         	movff	_greenStart+1,i2Set_Colors@Green+1
 10527  000170  C0AE  F02C         	movff	_greenStart+2,i2Set_Colors@Green+2
 10528  000174  C0A9  F02D         	movff	_blueStart,i2Set_Colors@Blue
 10529  000178  C0AA  F02E         	movff	_blueStart+1,i2Set_Colors@Blue+1
 10530  00017C  C0AB  F02F         	movff	_blueStart+2,i2Set_Colors@Blue+2
 10531  000180  EC3D  F004         	call	i2_Set_Colors	;wreg free
 10532                           
 10533                           ;pin_manager.c: 322: GLCD_GoTo(valuesXStart, 2);
 10534  000184  0E02               	movlw	2
 10535  000186  6E0C               	movwf	i2GLCD_GoTo@y,c
 10536  000188  505E               	movf	_valuesXStart,w,c
 10537  00018A  EC04  F012         	call	i2_GLCD_GoTo
 10538                           
 10539                           ;pin_manager.c: 323: itoa(display, redStart, 10);
 10540  00018E  0E3C               	movlw	low Start_Color_Menu_Function@display
 10541  000190  6E11               	movwf	i2itoa@buf,c
 10542  000192  0E00               	movlw	high Start_Color_Menu_Function@display
 10543  000194  6E12               	movwf	i2itoa@buf+1,c
 10544  000196  C0AF  F001         	movff	_redStart,i2___fttol@f1
 10545  00019A  C0B0  F002         	movff	_redStart+1,i2___fttol@f1+1
 10546  00019E  C0B1  F003         	movff	_redStart+2,i2___fttol@f1+2
 10547  0001A2  ECC6  F00A         	call	i2___fttol	;wreg free
 10548  0001A6  C001  F013         	movff	?i2___fttol,i2itoa@val
 10549  0001AA  C002  F014         	movff	?i2___fttol+1,i2itoa@val+1
 10550  0001AE  0E00               	movlw	0
 10551  0001B0  6E16               	movwf	i2itoa@base+1,c
 10552  0001B2  0E0A               	movlw	10
 10553  0001B4  6E15               	movwf	i2itoa@base,c
 10554  0001B6  EC67  F016         	call	i2_itoa	;wreg free
 10555                           
 10556                           ;pin_manager.c: 324: GLCD_WriteString(display);
 10557  0001BA  0E3C               	movlw	low Start_Color_Menu_Function@display
 10558  0001BC  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
 10559  0001BE  0E00               	movlw	high Start_Color_Menu_Function@display
 10560  0001C0  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
 10561  0001C2  EC02  F015         	call	i2_GLCD_WriteString	;wreg free
 10562                           
 10563                           ;pin_manager.c: 325: GLCD_WriteString("   ");
 10564  0001C6  0EE7               	movlw	low (STR_2+1)
 10565  0001C8  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
 10566  0001CA  0EFF               	movlw	high (STR_2+1)
 10567  0001CC  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
 10568  0001CE  EC02  F015         	call	i2_GLCD_WriteString	;wreg free
 10569                           
 10570                           ;pin_manager.c: 326: break;
 10571  0001D2  0012               	return	
 10572  0001D4                     
 10573                           ;pin_manager.c: 329: if(result)
 10574  0001D4  5046               	movf	Start_Color_Menu_Function@result,w,c
 10575  0001D6  B4D8               	btfsc	status,2,c
 10576  0001D8  D025               	goto	i2l212
 10577                           
 10578                           ;pin_manager.c: 330: {
 10579                           ;pin_manager.c: 331: if(greenStart < 255) greenStart++;
 10580  0001DA  C0AC  F001         	movff	_greenStart,___ftge@ff1
 10581  0001DE  C0AD  F002         	movff	_greenStart+1,___ftge@ff1+1
 10582  0001E2  C0AE  F003         	movff	_greenStart+2,___ftge@ff1+2
 10583  0001E6  0E00               	movlw	0
 10584  0001E8  6E04               	movwf	___ftge@ff2,c
 10585  0001EA  0E7F               	movlw	127
 10586  0001EC  6E05               	movwf	___ftge@ff2+1,c
 10587  0001EE  0E43               	movlw	67
 10588  0001F0  6E06               	movwf	___ftge@ff2+2,c
 10589  0001F2  ECA2  F00F         	call	___ftge	;wreg free
 10590  0001F6  B0D8               	btfsc	status,0,c
 10591  0001F8  D039               	goto	i2l215
 10592  0001FA  C0AC  F009         	movff	_greenStart,___ftadd@f1
 10593  0001FE  C0AD  F00A         	movff	_greenStart+1,___ftadd@f1+1
 10594  000202  C0AE  F00B         	movff	_greenStart+2,___ftadd@f1+2
 10595  000206  0E00               	movlw	0
 10596  000208  6E0C               	movwf	___ftadd@f2,c
 10597  00020A  0E80               	movlw	128
 10598  00020C  6E0D               	movwf	___ftadd@f2+1,c
 10599  00020E  0E3F               	movlw	63
 10600  000210  6E0E               	movwf	___ftadd@f2+2,c
 10601  000212  ECFD  F006         	call	___ftadd	;wreg free
 10602  000216  C009  F0AC         	movff	?___ftadd,_greenStart
 10603  00021A  C00A  F0AD         	movff	?___ftadd+1,_greenStart+1
 10604  00021E  C00B  F0AE         	movff	?___ftadd+2,_greenStart+2
 10605                           
 10606                           ;pin_manager.c: 332: }
 10607  000222  D024               	goto	i2l215
 10608  000224                     i2l212:
 10609                           
 10610                           ;pin_manager.c: 333: else
 10611                           ;pin_manager.c: 334: {
 10612                           ;pin_manager.c: 335: if(greenStart > 0) greenStart--;
 10613  000224  0E00               	movlw	0
 10614  000226  6E01               	movwf	___ftge@ff1,c
 10615  000228  0E00               	movlw	0
 10616  00022A  6E02               	movwf	___ftge@ff1+1,c
 10617  00022C  0E00               	movlw	0
 10618  00022E  6E03               	movwf	___ftge@ff1+2,c
 10619  000230  C0AC  F004         	movff	_greenStart,___ftge@ff2
 10620  000234  C0AD  F005         	movff	_greenStart+1,___ftge@ff2+1
 10621  000238  C0AE  F006         	movff	_greenStart+2,___ftge@ff2+2
 10622  00023C  ECA2  F00F         	call	___ftge	;wreg free
 10623  000240  B0D8               	btfsc	status,0,c
 10624  000242  D014               	goto	i2l215
 10625  000244  C0AC  F015         	movff	_greenStart,___ftsub@f1
 10626  000248  C0AD  F016         	movff	_greenStart+1,___ftsub@f1+1
 10627  00024C  C0AE  F017         	movff	_greenStart+2,___ftsub@f1+2
 10628  000250  0E00               	movlw	0
 10629  000252  6E18               	movwf	___ftsub@f2,c
 10630  000254  0E80               	movlw	128
 10631  000256  6E19               	movwf	___ftsub@f2+1,c
 10632  000258  0E3F               	movlw	63
 10633  00025A  6E1A               	movwf	___ftsub@f2+2,c
 10634  00025C  ECA9  F016         	call	___ftsub	;wreg free
 10635  000260  C015  F0AC         	movff	?___ftsub,_greenStart
 10636  000264  C016  F0AD         	movff	?___ftsub+1,_greenStart+1
 10637  000268  C017  F0AE         	movff	?___ftsub+2,_greenStart+2
 10638  00026C                     i2l215:
 10639                           
 10640                           ;pin_manager.c: 336: }
 10641                           ;pin_manager.c: 338: Set_Colors(redStart, greenStart, blueStart);
 10642  00026C  C0AF  F027         	movff	_redStart,i2Set_Colors@Red
 10643  000270  C0B0  F028         	movff	_redStart+1,i2Set_Colors@Red+1
 10644  000274  C0B1  F029         	movff	_redStart+2,i2Set_Colors@Red+2
 10645  000278  C0AC  F02A         	movff	_greenStart,i2Set_Colors@Green
 10646  00027C  C0AD  F02B         	movff	_greenStart+1,i2Set_Colors@Green+1
 10647  000280  C0AE  F02C         	movff	_greenStart+2,i2Set_Colors@Green+2
 10648  000284  C0A9  F02D         	movff	_blueStart,i2Set_Colors@Blue
 10649  000288  C0AA  F02E         	movff	_blueStart+1,i2Set_Colors@Blue+1
 10650  00028C  C0AB  F02F         	movff	_blueStart+2,i2Set_Colors@Blue+2
 10651  000290  EC3D  F004         	call	i2_Set_Colors	;wreg free
 10652                           
 10653                           ;pin_manager.c: 340: GLCD_GoTo(valuesXStart, 3);
 10654  000294  0E03               	movlw	3
 10655  000296  6E0C               	movwf	i2GLCD_GoTo@y,c
 10656  000298  505E               	movf	_valuesXStart,w,c
 10657  00029A  EC04  F012         	call	i2_GLCD_GoTo
 10658                           
 10659                           ;pin_manager.c: 341: itoa(display, greenStart, 10);
 10660  00029E  0E3C               	movlw	low Start_Color_Menu_Function@display
 10661  0002A0  6E11               	movwf	i2itoa@buf,c
 10662  0002A2  0E00               	movlw	high Start_Color_Menu_Function@display
 10663  0002A4  6E12               	movwf	i2itoa@buf+1,c
 10664  0002A6  C0AC  F001         	movff	_greenStart,i2___fttol@f1
 10665  0002AA  C0AD  F002         	movff	_greenStart+1,i2___fttol@f1+1
 10666  0002AE  C0AE  F003         	movff	_greenStart+2,i2___fttol@f1+2
 10667  0002B2  ECC6  F00A         	call	i2___fttol	;wreg free
 10668  0002B6  C001  F013         	movff	?i2___fttol,i2itoa@val
 10669  0002BA  C002  F014         	movff	?i2___fttol+1,i2itoa@val+1
 10670  0002BE  0E00               	movlw	0
 10671  0002C0  6E16               	movwf	i2itoa@base+1,c
 10672  0002C2  0E0A               	movlw	10
 10673  0002C4  6E15               	movwf	i2itoa@base,c
 10674  0002C6  EC67  F016         	call	i2_itoa	;wreg free
 10675                           
 10676                           ;pin_manager.c: 342: GLCD_WriteString(display);
 10677  0002CA  0E3C               	movlw	low Start_Color_Menu_Function@display
 10678  0002CC  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
 10679  0002CE  0E00               	movlw	high Start_Color_Menu_Function@display
 10680  0002D0  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
 10681  0002D2  EC02  F015         	call	i2_GLCD_WriteString	;wreg free
 10682                           
 10683                           ;pin_manager.c: 343: GLCD_WriteString("   ");
 10684  0002D6  0EE7               	movlw	low (STR_2+1)
 10685  0002D8  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
 10686  0002DA  0EFF               	movlw	high (STR_2+1)
 10687  0002DC  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
 10688  0002DE  EC02  F015         	call	i2_GLCD_WriteString	;wreg free
 10689                           
 10690                           ;pin_manager.c: 344: break;
 10691  0002E2  0012               	return	
 10692  0002E4                     
 10693                           ;pin_manager.c: 347: if(result)
 10694  0002E4  5046               	movf	Start_Color_Menu_Function@result,w,c
 10695  0002E6  B4D8               	btfsc	status,2,c
 10696  0002E8  D025               	goto	i2l217
 10697                           
 10698                           ;pin_manager.c: 348: {
 10699                           ;pin_manager.c: 349: if(blueStart < 255) blueStart++;
 10700  0002EA  C0A9  F001         	movff	_blueStart,___ftge@ff1
 10701  0002EE  C0AA  F002         	movff	_blueStart+1,___ftge@ff1+1
 10702  0002F2  C0AB  F003         	movff	_blueStart+2,___ftge@ff1+2
 10703  0002F6  0E00               	movlw	0
 10704  0002F8  6E04               	movwf	___ftge@ff2,c
 10705  0002FA  0E7F               	movlw	127
 10706  0002FC  6E05               	movwf	___ftge@ff2+1,c
 10707  0002FE  0E43               	movlw	67
 10708  000300  6E06               	movwf	___ftge@ff2+2,c
 10709  000302  ECA2  F00F         	call	___ftge	;wreg free
 10710  000306  B0D8               	btfsc	status,0,c
 10711  000308  D039               	goto	i2l220
 10712  00030A  C0A9  F009         	movff	_blueStart,___ftadd@f1
 10713  00030E  C0AA  F00A         	movff	_blueStart+1,___ftadd@f1+1
 10714  000312  C0AB  F00B         	movff	_blueStart+2,___ftadd@f1+2
 10715  000316  0E00               	movlw	0
 10716  000318  6E0C               	movwf	___ftadd@f2,c
 10717  00031A  0E80               	movlw	128
 10718  00031C  6E0D               	movwf	___ftadd@f2+1,c
 10719  00031E  0E3F               	movlw	63
 10720  000320  6E0E               	movwf	___ftadd@f2+2,c
 10721  000322  ECFD  F006         	call	___ftadd	;wreg free
 10722  000326  C009  F0A9         	movff	?___ftadd,_blueStart
 10723  00032A  C00A  F0AA         	movff	?___ftadd+1,_blueStart+1
 10724  00032E  C00B  F0AB         	movff	?___ftadd+2,_blueStart+2
 10725                           
 10726                           ;pin_manager.c: 350: }
 10727  000332  D024               	goto	i2l220
 10728  000334                     i2l217:
 10729                           
 10730                           ;pin_manager.c: 351: else
 10731                           ;pin_manager.c: 352: {
 10732                           ;pin_manager.c: 353: if(blueStart > 0) blueStart--;
 10733  000334  0E00               	movlw	0
 10734  000336  6E01               	movwf	___ftge@ff1,c
 10735  000338  0E00               	movlw	0
 10736  00033A  6E02               	movwf	___ftge@ff1+1,c
 10737  00033C  0E00               	movlw	0
 10738  00033E  6E03               	movwf	___ftge@ff1+2,c
 10739  000340  C0A9  F004         	movff	_blueStart,___ftge@ff2
 10740  000344  C0AA  F005         	movff	_blueStart+1,___ftge@ff2+1
 10741  000348  C0AB  F006         	movff	_blueStart+2,___ftge@ff2+2
 10742  00034C  ECA2  F00F         	call	___ftge	;wreg free
 10743  000350  B0D8               	btfsc	status,0,c
 10744  000352  D014               	goto	i2l220
 10745  000354  C0A9  F015         	movff	_blueStart,___ftsub@f1
 10746  000358  C0AA  F016         	movff	_blueStart+1,___ftsub@f1+1
 10747  00035C  C0AB  F017         	movff	_blueStart+2,___ftsub@f1+2
 10748  000360  0E00               	movlw	0
 10749  000362  6E18               	movwf	___ftsub@f2,c
 10750  000364  0E80               	movlw	128
 10751  000366  6E19               	movwf	___ftsub@f2+1,c
 10752  000368  0E3F               	movlw	63
 10753  00036A  6E1A               	movwf	___ftsub@f2+2,c
 10754  00036C  ECA9  F016         	call	___ftsub	;wreg free
 10755  000370  C015  F0A9         	movff	?___ftsub,_blueStart
 10756  000374  C016  F0AA         	movff	?___ftsub+1,_blueStart+1
 10757  000378  C017  F0AB         	movff	?___ftsub+2,_blueStart+2
 10758  00037C                     i2l220:
 10759                           
 10760                           ;pin_manager.c: 354: }
 10761                           ;pin_manager.c: 356: Set_Colors(redStart, greenStart, blueStart);
 10762  00037C  C0AF  F027         	movff	_redStart,i2Set_Colors@Red
 10763  000380  C0B0  F028         	movff	_redStart+1,i2Set_Colors@Red+1
 10764  000384  C0B1  F029         	movff	_redStart+2,i2Set_Colors@Red+2
 10765  000388  C0AC  F02A         	movff	_greenStart,i2Set_Colors@Green
 10766  00038C  C0AD  F02B         	movff	_greenStart+1,i2Set_Colors@Green+1
 10767  000390  C0AE  F02C         	movff	_greenStart+2,i2Set_Colors@Green+2
 10768  000394  C0A9  F02D         	movff	_blueStart,i2Set_Colors@Blue
 10769  000398  C0AA  F02E         	movff	_blueStart+1,i2Set_Colors@Blue+1
 10770  00039C  C0AB  F02F         	movff	_blueStart+2,i2Set_Colors@Blue+2
 10771  0003A0  EC3D  F004         	call	i2_Set_Colors	;wreg free
 10772                           
 10773                           ;pin_manager.c: 358: GLCD_GoTo(valuesXStart, 4);
 10774  0003A4  0E04               	movlw	4
 10775  0003A6  6E0C               	movwf	i2GLCD_GoTo@y,c
 10776  0003A8  505E               	movf	_valuesXStart,w,c
 10777  0003AA  EC04  F012         	call	i2_GLCD_GoTo
 10778                           
 10779                           ;pin_manager.c: 359: itoa(display, blueStart, 10);
 10780  0003AE  0E3C               	movlw	low Start_Color_Menu_Function@display
 10781  0003B0  6E11               	movwf	i2itoa@buf,c
 10782  0003B2  0E00               	movlw	high Start_Color_Menu_Function@display
 10783  0003B4  6E12               	movwf	i2itoa@buf+1,c
 10784  0003B6  C0A9  F001         	movff	_blueStart,i2___fttol@f1
 10785  0003BA  C0AA  F002         	movff	_blueStart+1,i2___fttol@f1+1
 10786  0003BE  C0AB  F003         	movff	_blueStart+2,i2___fttol@f1+2
 10787  0003C2  ECC6  F00A         	call	i2___fttol	;wreg free
 10788  0003C6  C001  F013         	movff	?i2___fttol,i2itoa@val
 10789  0003CA  C002  F014         	movff	?i2___fttol+1,i2itoa@val+1
 10790  0003CE  0E00               	movlw	0
 10791  0003D0  6E16               	movwf	i2itoa@base+1,c
 10792  0003D2  0E0A               	movlw	10
 10793  0003D4  6E15               	movwf	i2itoa@base,c
 10794  0003D6  EC67  F016         	call	i2_itoa	;wreg free
 10795                           
 10796                           ;pin_manager.c: 360: GLCD_WriteString(display);
 10797  0003DA  0E3C               	movlw	low Start_Color_Menu_Function@display
 10798  0003DC  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
 10799  0003DE  0E00               	movlw	high Start_Color_Menu_Function@display
 10800  0003E0  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
 10801  0003E2  EC02  F015         	call	i2_GLCD_WriteString	;wreg free
 10802                           
 10803                           ;pin_manager.c: 361: GLCD_WriteString("   ");
 10804  0003E6  0EE7               	movlw	low (STR_2+1)
 10805  0003E8  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
 10806  0003EA  0EFF               	movlw	high (STR_2+1)
 10807  0003EC  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
 10808  0003EE  EC02  F015         	call	i2_GLCD_WriteString	;wreg free
 10809                           
 10810                           ;pin_manager.c: 362: break;
 10811  0003F2  0012               	return	
 10812  0003F4                     i2l221:
 10813                           
 10814                           ; BSR set to: 0
 10815  0003F4  F000               	nop	
 10816                           
 10817                           ;pin_manager.c: 367: }
 10818                           
 10819                           ;pin_manager.c: 365: break;
 10820  0003F6  0012               	return	
 10821  0003F8                     i2l204:
 10822  0003F8  0100               	movlb	0	; () banked
 10823  0003FA  51C9               	movf	_startColorsContext& (0+255),w,b
 10824                           
 10825                           ; Switch size 1, requested type "space"
 10826                           ; Number of cases is 3, Range of values is 0 to 2
 10827                           ; switch strategies available:
 10828                           ; Name         Instructions Cycles
 10829                           ; simple_byte           10     6 (average)
 10830                           ;	Chosen strategy is simple_byte
 10831  0003FC  0A00               	xorlw	0	; case 0
 10832  0003FE  B4D8               	btfsc	status,2,c
 10833  000400  D661               	goto	i2l205
 10834  000402  0A01               	xorlw	1	; case 1
 10835  000404  B4D8               	btfsc	status,2,c
 10836  000406  D6E6               	goto	i2l211
 10837  000408  0A03               	xorlw	3	; case 2
 10838  00040A  B4D8               	btfsc	status,2,c
 10839  00040C  D76B               	goto	i2l216
 10840  00040E  D7F2               	goto	i2l221
 10841  000410                     i2l203:
 10842                           
 10843                           ; BSR set to: 0
 10844                           ;pin_manager.c: 369: else
 10845                           ;pin_manager.c: 370: {
 10846                           ;pin_manager.c: 371: if(result)
 10847                           
 10848                           ; BSR set to: 0
 10849  000410  5046               	movf	Start_Color_Menu_Function@result,w,c
 10850  000412  B4D8               	btfsc	status,2,c
 10851  000414  D005               	goto	i2l223
 10852                           
 10853                           ; BSR set to: 0
 10854                           ;pin_manager.c: 372: {
 10855                           ;pin_manager.c: 373: if(startColorsContext < startColorsBack) startColorsContext++;
 10856  000416  0E03               	movlw	3
 10857  000418  61C9               	cpfslt	_startColorsContext& (0+255),b
 10858  00041A  D005               	goto	i2l226
 10859                           
 10860                           ; BSR set to: 0
 10861  00041C  2BC9               	incf	_startColorsContext& (0+255),f,b
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;pin_manager.c: 374: }
 10865  00041E  D003               	goto	i2l226
 10866  000420                     i2l223:
 10867                           
 10868                           ; BSR set to: 0
 10869                           ;pin_manager.c: 375: else
 10870                           ;pin_manager.c: 376: {
 10871                           ;pin_manager.c: 377: if(startColorsContext > startRed) startColorsContext--;
 10872                           
 10873                           ; BSR set to: 0
 10874  000420  51C9               	movf	_startColorsContext& (0+255),w,b
 10875  000422  A4D8               	btfss	status,2,c
 10876                           
 10877                           ; BSR set to: 0
 10878  000424  07C9               	decf	_startColorsContext& (0+255),f,b
 10879  000426                     i2l226:
 10880                           
 10881                           ; BSR set to: 0
 10882                           ;pin_manager.c: 378: }
 10883                           ;pin_manager.c: 380: Draw_Arrow();
 10884                           
 10885                           ; BSR set to: 0
 10886                           
 10887                           ; BSR set to: 0
 10888  000426  ECC4  F013         	call	i2_Draw_Arrow	;wreg free
 10889  00042A  0012               	return	
 10890  00042C                     __end_of_Start_Color_Menu_Function:
 10891                           	opt stack 0
 10892                           tosu	equ	0xFFF
 10893                           tosh	equ	0xFFE
 10894                           tosl	equ	0xFFD
 10895                           pclatu	equ	0xFFB
 10896                           pclath	equ	0xFFA
 10897                           tblptru	equ	0xFF8
 10898                           tblptrh	equ	0xFF7
 10899                           tblptrl	equ	0xFF6
 10900                           tablat	equ	0xFF5
 10901                           prodh	equ	0xFF4
 10902                           prodl	equ	0xFF3
 10903                           intcon	equ	0xFF2
 10904                           indf0	equ	0xFEF
 10905                           postinc0	equ	0xFEE
 10906                           fsr0h	equ	0xFEA
 10907                           fsr0l	equ	0xFE9
 10908                           wreg	equ	0xFE8
 10909                           postdec1	equ	0xFE5
 10910                           fsr1h	equ	0xFE2
 10911                           fsr1l	equ	0xFE1
 10912                           indf2	equ	0xFDF
 10913                           fsr2h	equ	0xFDA
 10914                           fsr2l	equ	0xFD9
 10915                           status	equ	0xFD8
 10916                           
 10917 ;; *************** function _Run_Time_Menu_Function *****************
 10918 ;; Defined at:
 10919 ;;		line 209 in file "mcc_generated_files/pin_manager.c"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;  result          1    wreg     unsigned char 
 10922 ;; Auto vars:     Size  Location     Type
 10923 ;;  result          1   34[COMRAM] unsigned char 
 10924 ;;  display        10   24[COMRAM] unsigned char [10]
 10925 ;; Return value:  Size  Location     Type
 10926 ;;                  1    wreg      void 
 10927 ;; Registers used:
 10928 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10929 ;; Tracked objects:
 10930 ;;		On entry : 0/0
 10931 ;;		On exit  : 0/0
 10932 ;;		Unchanged: 0/0
 10933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10935 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10937 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10938 ;;Total ram usage:       11 bytes
 10939 ;; Hardware stack levels used:    1
 10940 ;; Hardware stack levels required when called:    6
 10941 ;; This function calls:
 10942 ;;		i2_Draw_Arrow
 10943 ;;		i2_GLCD_GoTo
 10944 ;;		i2_GLCD_WriteString
 10945 ;;		i2_itoa
 10946 ;; This function is called by:
 10947 ;;		_PIN_MANAGER_IOC
 10948 ;; This function uses a non-reentrant model
 10949 ;;
 10950                           
 10951                           	psect	text62
 10952  0020F0                     __ptext62:
 10953                           	opt stack 0
 10954  0020F0                     _Run_Time_Menu_Function:
 10955                           	opt stack 14
 10956                           
 10957                           ;incstack = 0
 10958                           ;Run_Time_Menu_Function@result stored from wreg
 10959  0020F0  6E23               	movwf	Run_Time_Menu_Function@result,c
 10960                           
 10961                           ;pin_manager.c: 211: char display[10];
 10962                           ;pin_manager.c: 212: if(adjustValues > 0)
 10963  0020F2  0100               	movlb	0	; () banked
 10964  0020F4  51C8               	movf	_adjustValues& (0+255),w,b
 10965  0020F6  A4D8               	btfss	status,2,c
 10966  0020F8  D02D               	goto	i2l170
 10967  0020FA  D032               	goto	i2l169
 10968  0020FC                     
 10969                           ; BSR set to: 0
 10970                           ;pin_manager.c: 217: if(result)
 10971                           
 10972                           ; BSR set to: 0
 10973  0020FC  5023               	movf	Run_Time_Menu_Function@result,w,c
 10974  0020FE  B4D8               	btfsc	status,2,c
 10975  002100  D005               	goto	i2l172
 10976                           
 10977                           ; BSR set to: 0
 10978                           ;pin_manager.c: 218: {
 10979                           ;pin_manager.c: 219: if(runMinutes < 255) runMinutes++;
 10980  002102  29C7               	incf	_runMinutes& (0+255),w,b
 10981  002104  B4D8               	btfsc	status,2,c
 10982  002106  D005               	goto	i2l175
 10983                           
 10984                           ; BSR set to: 0
 10985  002108  2BC7               	incf	_runMinutes& (0+255),f,b
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;pin_manager.c: 220: }
 10989  00210A  D003               	goto	i2l175
 10990  00210C                     i2l172:
 10991                           
 10992                           ; BSR set to: 0
 10993                           ;pin_manager.c: 221: else
 10994                           ;pin_manager.c: 222: {
 10995                           ;pin_manager.c: 223: if(runMinutes > 0) runMinutes--;
 10996                           
 10997                           ; BSR set to: 0
 10998  00210C  51C7               	movf	_runMinutes& (0+255),w,b
 10999  00210E  A4D8               	btfss	status,2,c
 11000                           
 11001                           ; BSR set to: 0
 11002  002110  07C7               	decf	_runMinutes& (0+255),f,b
 11003  002112                     i2l175:
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;pin_manager.c: 224: }
 11007                           ;pin_manager.c: 225: GLCD_GoTo(valuesXStart, 2);
 11008                           
 11009                           ; BSR set to: 0
 11010                           
 11011                           ; BSR set to: 0
 11012  002112  0E02               	movlw	2
 11013  002114  6E0C               	movwf	i2GLCD_GoTo@y,c
 11014  002116  505E               	movf	_valuesXStart,w,c
 11015  002118  EC04  F012         	call	i2_GLCD_GoTo
 11016                           
 11017                           ;pin_manager.c: 226: itoa(display, runMinutes, 10);
 11018  00211C  0E19               	movlw	low Run_Time_Menu_Function@display
 11019  00211E  6E11               	movwf	i2itoa@buf,c
 11020  002120  0E00               	movlw	high Run_Time_Menu_Function@display
 11021  002122  6E12               	movwf	i2itoa@buf+1,c
 11022  002124  C0C7  F013         	movff	_runMinutes,i2itoa@val
 11023  002128  6A14               	clrf	i2itoa@val+1,c
 11024  00212A  0E00               	movlw	0
 11025  00212C  6E16               	movwf	i2itoa@base+1,c
 11026  00212E  0E0A               	movlw	10
 11027  002130  6E15               	movwf	i2itoa@base,c
 11028  002132  EC67  F016         	call	i2_itoa	;wreg free
 11029                           
 11030                           ;pin_manager.c: 227: GLCD_WriteString(display);
 11031  002136  0E19               	movlw	low Run_Time_Menu_Function@display
 11032  002138  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
 11033  00213A  0E00               	movlw	high Run_Time_Menu_Function@display
 11034  00213C  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
 11035  00213E  EC02  F015         	call	i2_GLCD_WriteString	;wreg free
 11036                           
 11037                           ;pin_manager.c: 228: GLCD_WriteString("min   ");
 11038  002142  0ED4               	movlw	low STR_1
 11039  002144  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
 11040  002146  0EFF               	movlw	high STR_1
 11041  002148  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
 11042  00214A  EC02  F015         	call	i2_GLCD_WriteString	;wreg free
 11043                           
 11044                           ;pin_manager.c: 229: break;
 11045  00214E  0012               	return	
 11046  002150                     i2l177:
 11047                           
 11048                           ; BSR set to: 0
 11049  002150  F000               	nop	
 11050                           
 11051                           ;pin_manager.c: 234: }
 11052                           
 11053                           ;pin_manager.c: 232: break;
 11054  002152  0012               	return	
 11055  002154                     i2l170:
 11056  002154  0100               	movlb	0	; () banked
 11057  002156  51CB               	movf	_runTimeContext& (0+255),w,b
 11058                           
 11059                           ; Switch size 1, requested type "space"
 11060                           ; Number of cases is 1, Range of values is 0 to 0
 11061                           ; switch strategies available:
 11062                           ; Name         Instructions Cycles
 11063                           ; simple_byte            4     3 (average)
 11064                           ;	Chosen strategy is simple_byte
 11065  002158  0A00               	xorlw	0	; case 0
 11066  00215A  B4D8               	btfsc	status,2,c
 11067  00215C  D7CF               	goto	i2l171
 11068  00215E  D7F8               	goto	i2l177
 11069  002160                     i2l169:
 11070                           
 11071                           ; BSR set to: 0
 11072                           ;pin_manager.c: 236: else
 11073                           ;pin_manager.c: 237: {
 11074                           ;pin_manager.c: 238: if(result)
 11075                           
 11076                           ; BSR set to: 0
 11077  002160  5023               	movf	Run_Time_Menu_Function@result,w,c
 11078  002162  B4D8               	btfsc	status,2,c
 11079  002164  D005               	goto	i2l179
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;pin_manager.c: 239: {
 11083                           ;pin_manager.c: 240: if(runTimeContext < runTimeBack) runTimeContext++;
 11084  002166  0E02               	movlw	2
 11085  002168  61CB               	cpfslt	_runTimeContext& (0+255),b
 11086  00216A  D005               	goto	i2l182
 11087                           
 11088                           ; BSR set to: 0
 11089  00216C  2BCB               	incf	_runTimeContext& (0+255),f,b
 11090                           
 11091                           ; BSR set to: 0
 11092                           ;pin_manager.c: 241: }
 11093  00216E  D003               	goto	i2l182
 11094  002170                     i2l179:
 11095                           
 11096                           ; BSR set to: 0
 11097                           ;pin_manager.c: 242: else
 11098                           ;pin_manager.c: 243: {
 11099                           ;pin_manager.c: 244: if(runTimeContext > runTimeSelection) runTimeContext--;
 11100                           
 11101                           ; BSR set to: 0
 11102  002170  51CB               	movf	_runTimeContext& (0+255),w,b
 11103  002172  A4D8               	btfss	status,2,c
 11104                           
 11105                           ; BSR set to: 0
 11106  002174  07CB               	decf	_runTimeContext& (0+255),f,b
 11107  002176                     i2l182:
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;pin_manager.c: 245: }
 11111                           ;pin_manager.c: 247: Draw_Arrow();
 11112                           
 11113                           ; BSR set to: 0
 11114                           
 11115                           ; BSR set to: 0
 11116  002176  ECC4  F013         	call	i2_Draw_Arrow	;wreg free
 11117  00217A  0012               	return	
 11118  00217C                     __end_of_Run_Time_Menu_Function:
 11119                           	opt stack 0
 11120                           tosu	equ	0xFFF
 11121                           tosh	equ	0xFFE
 11122                           tosl	equ	0xFFD
 11123                           pclatu	equ	0xFFB
 11124                           pclath	equ	0xFFA
 11125                           tblptru	equ	0xFF8
 11126                           tblptrh	equ	0xFF7
 11127                           tblptrl	equ	0xFF6
 11128                           tablat	equ	0xFF5
 11129                           prodh	equ	0xFF4
 11130                           prodl	equ	0xFF3
 11131                           intcon	equ	0xFF2
 11132                           indf0	equ	0xFEF
 11133                           postinc0	equ	0xFEE
 11134                           fsr0h	equ	0xFEA
 11135                           fsr0l	equ	0xFE9
 11136                           wreg	equ	0xFE8
 11137                           postdec1	equ	0xFE5
 11138                           fsr1h	equ	0xFE2
 11139                           fsr1l	equ	0xFE1
 11140                           indf2	equ	0xFDF
 11141                           fsr2h	equ	0xFDA
 11142                           fsr2l	equ	0xFD9
 11143                           status	equ	0xFD8
 11144                           
 11145 ;; *************** function _Main_Menu_Function *****************
 11146 ;; Defined at:
 11147 ;;		line 192 in file "mcc_generated_files/pin_manager.c"
 11148 ;; Parameters:    Size  Location     Type
 11149 ;;  result          1    wreg     unsigned char 
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;  result          1   23[COMRAM] unsigned char 
 11152 ;; Return value:  Size  Location     Type
 11153 ;;                  1    wreg      void 
 11154 ;; Registers used:
 11155 ;;		wreg, status,2, status,0, cstack
 11156 ;; Tracked objects:
 11157 ;;		On entry : 0/0
 11158 ;;		On exit  : 0/0
 11159 ;;		Unchanged: 0/0
 11160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11164 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11165 ;;Total ram usage:        1 bytes
 11166 ;; Hardware stack levels used:    1
 11167 ;; Hardware stack levels required when called:    6
 11168 ;; This function calls:
 11169 ;;		i2_Draw_Arrow
 11170 ;; This function is called by:
 11171 ;;		_PIN_MANAGER_IOC
 11172 ;; This function uses a non-reentrant model
 11173 ;;
 11174                           
 11175                           	psect	text63
 11176  0031F2                     __ptext63:
 11177                           	opt stack 0
 11178  0031F2                     _Main_Menu_Function:
 11179                           	opt stack 14
 11180                           
 11181                           ;incstack = 0
 11182                           ;Main_Menu_Function@result stored from wreg
 11183  0031F2  6E18               	movwf	Main_Menu_Function@result,c
 11184                           
 11185                           ;pin_manager.c: 195: if(result)
 11186  0031F4  5018               	movf	Main_Menu_Function@result,w,c
 11187  0031F6  B4D8               	btfsc	status,2,c
 11188  0031F8  D005               	goto	i2l162
 11189                           
 11190                           ;pin_manager.c: 196: {
 11191                           ;pin_manager.c: 197: if(mainState < selectState) mainState = mainState + 1;
 11192  0031FA  0E07               	movlw	7
 11193  0031FC  605D               	cpfslt	_mainState,c
 11194  0031FE  D007               	goto	i2l165
 11195  003200  285D               	incf	_mainState,w,c
 11196  003202  D004               	goto	L4
 11197  003204                     i2l162:
 11198                           
 11199                           ;pin_manager.c: 199: else
 11200                           ;pin_manager.c: 200: {
 11201                           ;pin_manager.c: 201: if(mainState > setRunTime) mainState = mainState - 1;
 11202  003204  0E02               	movlw	2
 11203  003206  645D               	cpfsgt	_mainState,c
 11204  003208  D002               	goto	i2l165
 11205  00320A  045D               	decf	_mainState,w,c
 11206  00320C                     L4:
 11207  00320C  6E5D               	movwf	_mainState,c
 11208  00320E                     i2l165:
 11209                           
 11210                           ;pin_manager.c: 202: }
 11211                           ;pin_manager.c: 205: Draw_Arrow();
 11212  00320E  ECC4  F013         	call	i2_Draw_Arrow	;wreg free
 11213  003212  0012               	return		;funcret
 11214  003214                     __end_of_Main_Menu_Function:
 11215                           	opt stack 0
 11216                           tosu	equ	0xFFF
 11217                           tosh	equ	0xFFE
 11218                           tosl	equ	0xFFD
 11219                           pclatu	equ	0xFFB
 11220                           pclath	equ	0xFFA
 11221                           tblptru	equ	0xFF8
 11222                           tblptrh	equ	0xFF7
 11223                           tblptrl	equ	0xFF6
 11224                           tablat	equ	0xFF5
 11225                           prodh	equ	0xFF4
 11226                           prodl	equ	0xFF3
 11227                           intcon	equ	0xFF2
 11228                           indf0	equ	0xFEF
 11229                           postinc0	equ	0xFEE
 11230                           fsr0h	equ	0xFEA
 11231                           fsr0l	equ	0xFE9
 11232                           wreg	equ	0xFE8
 11233                           postdec1	equ	0xFE5
 11234                           fsr1h	equ	0xFE2
 11235                           fsr1l	equ	0xFE1
 11236                           indf2	equ	0xFDF
 11237                           fsr2h	equ	0xFDA
 11238                           fsr2l	equ	0xFD9
 11239                           status	equ	0xFD8
 11240                           
 11241 ;; *************** function _Brightness_Menu_Function *****************
 11242 ;; Defined at:
 11243 ;;		line 254 in file "mcc_generated_files/pin_manager.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;  result          1    wreg     unsigned char 
 11246 ;; Auto vars:     Size  Location     Type
 11247 ;;  result          1   69[COMRAM] unsigned char 
 11248 ;;  display        10   59[COMRAM] unsigned char [10]
 11249 ;; Return value:  Size  Location     Type
 11250 ;;                  1    wreg      void 
 11251 ;; Registers used:
 11252 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11253 ;; Tracked objects:
 11254 ;;		On entry : 0/0
 11255 ;;		On exit  : 0/0
 11256 ;;		Unchanged: 0/0
 11257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11259 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11261 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11262 ;;Total ram usage:       11 bytes
 11263 ;; Hardware stack levels used:    1
 11264 ;; Hardware stack levels required when called:    6
 11265 ;; This function calls:
 11266 ;;		___ftadd
 11267 ;;		___ftge
 11268 ;;		___ftsub
 11269 ;;		i2_Draw_Arrow
 11270 ;;		i2_GLCD_GoTo
 11271 ;;		i2_GLCD_WriteString
 11272 ;;		i2_Set_Colors
 11273 ;;		i2___fttol
 11274 ;;		i2_itoa
 11275 ;; This function is called by:
 11276 ;;		_PIN_MANAGER_IOC
 11277 ;; This function uses a non-reentrant model
 11278 ;;
 11279                           
 11280                           	psect	text64
 11281  001136                     __ptext64:
 11282                           	opt stack 0
 11283  001136                     _Brightness_Menu_Function:
 11284                           	opt stack 14
 11285                           
 11286                           ;incstack = 0
 11287                           ;Brightness_Menu_Function@result stored from wreg
 11288  001136  6E46               	movwf	Brightness_Menu_Function@result,c
 11289                           
 11290                           ;pin_manager.c: 256: char display[10];
 11291                           ;pin_manager.c: 257: if(adjustValues > 0)
 11292  001138  0100               	movlb	0	; () banked
 11293  00113A  51C8               	movf	_adjustValues& (0+255),w,b
 11294  00113C  A4D8               	btfss	status,2,c
 11295  00113E  D08B               	goto	i2l187
 11296  001140  D090               	goto	i2l186
 11297  001142                     
 11298                           ; BSR set to: 0
 11299                           ;pin_manager.c: 262: if(result)
 11300                           
 11301                           ; BSR set to: 0
 11302  001142  5046               	movf	Brightness_Menu_Function@result,w,c
 11303  001144  B4D8               	btfsc	status,2,c
 11304  001146  D025               	goto	i2l189
 11305                           
 11306                           ; BSR set to: 0
 11307                           ;pin_manager.c: 263: {
 11308                           ;pin_manager.c: 264: if(brightnessPercent < 100) brightnessPercent++;
 11309  001148  C0B5  F001         	movff	_brightnessPercent,___ftge@ff1
 11310  00114C  C0B6  F002         	movff	_brightnessPercent+1,___ftge@ff1+1
 11311  001150  C0B7  F003         	movff	_brightnessPercent+2,___ftge@ff1+2
 11312  001154  0E00               	movlw	0
 11313  001156  6E04               	movwf	___ftge@ff2,c
 11314  001158  0EC8               	movlw	200
 11315  00115A  6E05               	movwf	___ftge@ff2+1,c
 11316  00115C  0E42               	movlw	66
 11317  00115E  6E06               	movwf	___ftge@ff2+2,c
 11318  001160  ECA2  F00F         	call	___ftge	;wreg free
 11319  001164  B0D8               	btfsc	status,0,c
 11320  001166  D039               	goto	i2l192
 11321  001168  C0B5  F009         	movff	_brightnessPercent,___ftadd@f1
 11322  00116C  C0B6  F00A         	movff	_brightnessPercent+1,___ftadd@f1+1
 11323  001170  C0B7  F00B         	movff	_brightnessPercent+2,___ftadd@f1+2
 11324  001174  0E00               	movlw	0
 11325  001176  6E0C               	movwf	___ftadd@f2,c
 11326  001178  0E80               	movlw	128
 11327  00117A  6E0D               	movwf	___ftadd@f2+1,c
 11328  00117C  0E3F               	movlw	63
 11329  00117E  6E0E               	movwf	___ftadd@f2+2,c
 11330  001180  ECFD  F006         	call	___ftadd	;wreg free
 11331  001184  C009  F0B5         	movff	?___ftadd,_brightnessPercent
 11332  001188  C00A  F0B6         	movff	?___ftadd+1,_brightnessPercent+1
 11333  00118C  C00B  F0B7         	movff	?___ftadd+2,_brightnessPercent+2
 11334                           
 11335                           ;pin_manager.c: 265: }
 11336  001190  D024               	goto	i2l192
 11337  001192                     i2l189:
 11338                           
 11339                           ;pin_manager.c: 266: else
 11340                           ;pin_manager.c: 267: {
 11341                           ;pin_manager.c: 268: if(brightnessPercent > 0) brightnessPercent--;
 11342  001192  0E00               	movlw	0
 11343  001194  6E01               	movwf	___ftge@ff1,c
 11344  001196  0E00               	movlw	0
 11345  001198  6E02               	movwf	___ftge@ff1+1,c
 11346  00119A  0E00               	movlw	0
 11347  00119C  6E03               	movwf	___ftge@ff1+2,c
 11348  00119E  C0B5  F004         	movff	_brightnessPercent,___ftge@ff2
 11349  0011A2  C0B6  F005         	movff	_brightnessPercent+1,___ftge@ff2+1
 11350  0011A6  C0B7  F006         	movff	_brightnessPercent+2,___ftge@ff2+2
 11351  0011AA  ECA2  F00F         	call	___ftge	;wreg free
 11352  0011AE  B0D8               	btfsc	status,0,c
 11353  0011B0  D014               	goto	i2l192
 11354  0011B2  C0B5  F015         	movff	_brightnessPercent,___ftsub@f1
 11355  0011B6  C0B6  F016         	movff	_brightnessPercent+1,___ftsub@f1+1
 11356  0011BA  C0B7  F017         	movff	_brightnessPercent+2,___ftsub@f1+2
 11357  0011BE  0E00               	movlw	0
 11358  0011C0  6E18               	movwf	___ftsub@f2,c
 11359  0011C2  0E80               	movlw	128
 11360  0011C4  6E19               	movwf	___ftsub@f2+1,c
 11361  0011C6  0E3F               	movlw	63
 11362  0011C8  6E1A               	movwf	___ftsub@f2+2,c
 11363  0011CA  ECA9  F016         	call	___ftsub	;wreg free
 11364  0011CE  C015  F0B5         	movff	?___ftsub,_brightnessPercent
 11365  0011D2  C016  F0B6         	movff	?___ftsub+1,_brightnessPercent+1
 11366  0011D6  C017  F0B7         	movff	?___ftsub+2,_brightnessPercent+2
 11367  0011DA                     i2l192:
 11368                           
 11369                           ;pin_manager.c: 269: }
 11370                           ;pin_manager.c: 272: Set_Colors(redStart, greenStart, blueStart);
 11371  0011DA  C0AF  F027         	movff	_redStart,i2Set_Colors@Red
 11372  0011DE  C0B0  F028         	movff	_redStart+1,i2Set_Colors@Red+1
 11373  0011E2  C0B1  F029         	movff	_redStart+2,i2Set_Colors@Red+2
 11374  0011E6  C0AC  F02A         	movff	_greenStart,i2Set_Colors@Green
 11375  0011EA  C0AD  F02B         	movff	_greenStart+1,i2Set_Colors@Green+1
 11376  0011EE  C0AE  F02C         	movff	_greenStart+2,i2Set_Colors@Green+2
 11377  0011F2  C0A9  F02D         	movff	_blueStart,i2Set_Colors@Blue
 11378  0011F6  C0AA  F02E         	movff	_blueStart+1,i2Set_Colors@Blue+1
 11379  0011FA  C0AB  F02F         	movff	_blueStart+2,i2Set_Colors@Blue+2
 11380  0011FE  EC3D  F004         	call	i2_Set_Colors	;wreg free
 11381                           
 11382                           ;pin_manager.c: 273: GLCD_GoTo(valuesXStart, 2);
 11383  001202  0E02               	movlw	2
 11384  001204  6E0C               	movwf	i2GLCD_GoTo@y,c
 11385  001206  505E               	movf	_valuesXStart,w,c
 11386  001208  EC04  F012         	call	i2_GLCD_GoTo
 11387                           
 11388                           ;pin_manager.c: 274: itoa(display, brightnessPercent, 10);
 11389  00120C  0E3C               	movlw	low Brightness_Menu_Function@display
 11390  00120E  6E11               	movwf	i2itoa@buf,c
 11391  001210  0E00               	movlw	high Brightness_Menu_Function@display
 11392  001212  6E12               	movwf	i2itoa@buf+1,c
 11393  001214  C0B5  F001         	movff	_brightnessPercent,i2___fttol@f1
 11394  001218  C0B6  F002         	movff	_brightnessPercent+1,i2___fttol@f1+1
 11395  00121C  C0B7  F003         	movff	_brightnessPercent+2,i2___fttol@f1+2
 11396  001220  ECC6  F00A         	call	i2___fttol	;wreg free
 11397  001224  C001  F013         	movff	?i2___fttol,i2itoa@val
 11398  001228  C002  F014         	movff	?i2___fttol+1,i2itoa@val+1
 11399  00122C  0E00               	movlw	0
 11400  00122E  6E16               	movwf	i2itoa@base+1,c
 11401  001230  0E0A               	movlw	10
 11402  001232  6E15               	movwf	i2itoa@base,c
 11403  001234  EC67  F016         	call	i2_itoa	;wreg free
 11404                           
 11405                           ;pin_manager.c: 275: GLCD_WriteString(display);
 11406  001238  0E3C               	movlw	low Brightness_Menu_Function@display
 11407  00123A  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
 11408  00123C  0E00               	movlw	high Brightness_Menu_Function@display
 11409  00123E  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
 11410  001240  EC02  F015         	call	i2_GLCD_WriteString	;wreg free
 11411                           
 11412                           ;pin_manager.c: 276: GLCD_WriteString("%   ");
 11413  001244  0EE6               	movlw	low STR_2
 11414  001246  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
 11415  001248  0EFF               	movlw	high STR_2
 11416  00124A  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
 11417  00124C  EC02  F015         	call	i2_GLCD_WriteString	;wreg free
 11418                           
 11419                           ;pin_manager.c: 277: break;
 11420  001250  0012               	return	
 11421  001252                     i2l194:
 11422                           
 11423                           ; BSR set to: 0
 11424  001252  F000               	nop	
 11425                           
 11426                           ;pin_manager.c: 282: }
 11427                           
 11428                           ;pin_manager.c: 280: break;
 11429  001254  0012               	return	
 11430  001256                     i2l187:
 11431  001256  0100               	movlb	0	; () banked
 11432  001258  51CA               	movf	_brightnessContext& (0+255),w,b
 11433                           
 11434                           ; Switch size 1, requested type "space"
 11435                           ; Number of cases is 1, Range of values is 0 to 0
 11436                           ; switch strategies available:
 11437                           ; Name         Instructions Cycles
 11438                           ; simple_byte            4     3 (average)
 11439                           ;	Chosen strategy is simple_byte
 11440  00125A  0A00               	xorlw	0	; case 0
 11441  00125C  B4D8               	btfsc	status,2,c
 11442  00125E  D771               	goto	i2l188
 11443  001260  D7F8               	goto	i2l194
 11444  001262                     i2l186:
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;pin_manager.c: 284: else
 11448                           ;pin_manager.c: 285: {
 11449                           ;pin_manager.c: 286: if(result)
 11450                           
 11451                           ; BSR set to: 0
 11452  001262  5046               	movf	Brightness_Menu_Function@result,w,c
 11453  001264  B4D8               	btfsc	status,2,c
 11454  001266  D005               	goto	i2l196
 11455                           
 11456                           ; BSR set to: 0
 11457                           ;pin_manager.c: 287: {
 11458                           ;pin_manager.c: 288: if(brightnessContext < brightnessBack) brightnessContext++;
 11459  001268  51CA               	movf	_brightnessContext& (0+255),w,b
 11460  00126A  A4D8               	btfss	status,2,c
 11461  00126C  D005               	goto	i2l199
 11462                           
 11463                           ; BSR set to: 0
 11464  00126E  2BCA               	incf	_brightnessContext& (0+255),f,b
 11465                           
 11466                           ; BSR set to: 0
 11467                           ;pin_manager.c: 289: }
 11468  001270  D003               	goto	i2l199
 11469  001272                     i2l196:
 11470                           
 11471                           ; BSR set to: 0
 11472                           ;pin_manager.c: 290: else
 11473                           ;pin_manager.c: 291: {
 11474                           ;pin_manager.c: 292: if(brightnessContext > brightness) brightnessContext--;
 11475                           
 11476                           ; BSR set to: 0
 11477  001272  51CA               	movf	_brightnessContext& (0+255),w,b
 11478  001274  A4D8               	btfss	status,2,c
 11479                           
 11480                           ; BSR set to: 0
 11481  001276  07CA               	decf	_brightnessContext& (0+255),f,b
 11482  001278                     i2l199:
 11483                           
 11484                           ; BSR set to: 0
 11485                           ;pin_manager.c: 293: }
 11486                           ;pin_manager.c: 295: Draw_Arrow();
 11487                           
 11488                           ; BSR set to: 0
 11489                           
 11490                           ; BSR set to: 0
 11491  001278  ECC4  F013         	call	i2_Draw_Arrow	;wreg free
 11492  00127C  0012               	return	
 11493  00127E                     __end_of_Brightness_Menu_Function:
 11494                           	opt stack 0
 11495                           tosu	equ	0xFFF
 11496                           tosh	equ	0xFFE
 11497                           tosl	equ	0xFFD
 11498                           pclatu	equ	0xFFB
 11499                           pclath	equ	0xFFA
 11500                           tblptru	equ	0xFF8
 11501                           tblptrh	equ	0xFF7
 11502                           tblptrl	equ	0xFF6
 11503                           tablat	equ	0xFF5
 11504                           prodh	equ	0xFF4
 11505                           prodl	equ	0xFF3
 11506                           intcon	equ	0xFF2
 11507                           indf0	equ	0xFEF
 11508                           postinc0	equ	0xFEE
 11509                           fsr0h	equ	0xFEA
 11510                           fsr0l	equ	0xFE9
 11511                           wreg	equ	0xFE8
 11512                           postdec1	equ	0xFE5
 11513                           fsr1h	equ	0xFE2
 11514                           fsr1l	equ	0xFE1
 11515                           indf2	equ	0xFDF
 11516                           fsr2h	equ	0xFDA
 11517                           fsr2l	equ	0xFD9
 11518                           status	equ	0xFD8
 11519                           
 11520 ;; *************** function i2_itoa *****************
 11521 ;; Defined at:
 11522 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 11523 ;; Parameters:    Size  Location     Type
 11524 ;;  buf             2   16[COMRAM] PTR unsigned char 
 11525 ;;		 -> Draw_Start_Colors_Menu@display(10), Draw_Brightness_Menu@display(10), Draw_runTime_Menu@display(10), Initialize_
      +Menus@display(20), 
 11526 ;;		 -> Start_Color_Menu_Function@display(10), Brightness_Menu_Function@display(10), Run_Time_Menu_Function@display(10),
      + 
 11527 ;;  val             2   18[COMRAM] int 
 11528 ;;  base            2   20[COMRAM] int 
 11529 ;; Auto vars:     Size  Location     Type
 11530 ;;  itoa            2   22[COMRAM] PTR unsigned char 
 11531 ;;		 -> Draw_Start_Colors_Menu@display(10), Draw_Brightness_Menu@display(10), Draw_runTime_Menu@display(10), Initialize_
      +Menus@display(20), 
 11532 ;;		 -> Start_Color_Menu_Function@display(10), Brightness_Menu_Function@display(10), Run_Time_Menu_Function@display(10),
      + 
 11533 ;; Return value:  Size  Location     Type
 11534 ;;                  2   16[COMRAM] PTR unsigned char 
 11535 ;; Registers used:
 11536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11537 ;; Tracked objects:
 11538 ;;		On entry : 0/0
 11539 ;;		On exit  : 0/0
 11540 ;;		Unchanged: 0/0
 11541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11542 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11543 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11545 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11546 ;;Total ram usage:        8 bytes
 11547 ;; Hardware stack levels used:    1
 11548 ;; Hardware stack levels required when called:    2
 11549 ;; This function calls:
 11550 ;;		i2_utoa
 11551 ;; This function is called by:
 11552 ;;		_Run_Time_Menu_Function
 11553 ;;		_Brightness_Menu_Function
 11554 ;;		_Start_Color_Menu_Function
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558                           	psect	text65
 11559  002CCE                     __ptext65:
 11560                           	opt stack 0
 11561  002CCE                     i2_itoa:
 11562                           	opt stack 17
 11563                           
 11564                           ;incstack = 0
 11565  002CCE  C011  F017         	movff	i2itoa@buf,i2itoa@cp
 11566  002CD2  C012  F018         	movff	i2itoa@buf+1,i2itoa@cp+1
 11567  002CD6  AE14               	btfss	i2itoa@val+1,7,c
 11568  002CD8  D00C               	goto	i2l1208
 11569  002CDA  C011  FFD9         	movff	i2itoa@buf,fsr2l
 11570  002CDE  C012  FFDA         	movff	i2itoa@buf+1,fsr2h
 11571  002CE2  0E2D               	movlw	45
 11572  002CE4  6EDF               	movwf	indf2,c
 11573  002CE6  4A11               	infsnz	i2itoa@buf,f,c
 11574  002CE8  2A12               	incf	i2itoa@buf+1,f,c
 11575  002CEA  6C13               	negf	i2itoa@val,c
 11576  002CEC  1E14               	comf	i2itoa@val+1,f,c
 11577  002CEE  B0D8               	btfsc	status,0,c
 11578  002CF0  2A14               	incf	i2itoa@val+1,f,c
 11579  002CF2                     i2l1208:
 11580  002CF2  C011  F008         	movff	i2itoa@buf,i2utoa@buf
 11581  002CF6  C012  F009         	movff	i2itoa@buf+1,i2utoa@buf+1
 11582  002CFA  C013  F00A         	movff	i2itoa@val,i2utoa@val
 11583  002CFE  C014  F00B         	movff	i2itoa@val+1,i2utoa@val+1
 11584  002D02  C015  F00C         	movff	i2itoa@base,i2utoa@base
 11585  002D06  C016  F00D         	movff	i2itoa@base+1,i2utoa@base+1
 11586  002D0A  ECB6  F00E         	call	i2_utoa	;wreg free
 11587  002D0E  0012               	return	
 11588  002D10                     __end_ofi2_itoa:
 11589                           	opt stack 0
 11590                           tosu	equ	0xFFF
 11591                           tosh	equ	0xFFE
 11592                           tosl	equ	0xFFD
 11593                           pclatu	equ	0xFFB
 11594                           pclath	equ	0xFFA
 11595                           tblptru	equ	0xFF8
 11596                           tblptrh	equ	0xFF7
 11597                           tblptrl	equ	0xFF6
 11598                           tablat	equ	0xFF5
 11599                           prodh	equ	0xFF4
 11600                           prodl	equ	0xFF3
 11601                           intcon	equ	0xFF2
 11602                           indf0	equ	0xFEF
 11603                           postinc0	equ	0xFEE
 11604                           fsr0h	equ	0xFEA
 11605                           fsr0l	equ	0xFE9
 11606                           wreg	equ	0xFE8
 11607                           postdec1	equ	0xFE5
 11608                           fsr1h	equ	0xFE2
 11609                           fsr1l	equ	0xFE1
 11610                           indf2	equ	0xFDF
 11611                           fsr2h	equ	0xFDA
 11612                           fsr2l	equ	0xFD9
 11613                           status	equ	0xFD8
 11614                           
 11615 ;; *************** function i2_utoa *****************
 11616 ;; Defined at:
 11617 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;  buf             2    7[COMRAM] PTR unsigned char 
 11620 ;;		 -> Draw_Start_Colors_Menu@display(10), Draw_Brightness_Menu@display(10), Draw_runTime_Menu@display(10), Initialize_
      +Menus@display(20), 
 11621 ;;		 -> Start_Color_Menu_Function@display(10), Brightness_Menu_Function@display(10), Run_Time_Menu_Function@display(10),
      + 
 11622 ;;  val             2    9[COMRAM] unsigned int 
 11623 ;;  base            2   11[COMRAM] int 
 11624 ;; Auto vars:     Size  Location     Type
 11625 ;;  utoa            2   13[COMRAM] unsigned int 
 11626 ;;  utoa            1   15[COMRAM] unsigned char 
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  2    7[COMRAM] PTR unsigned char 
 11629 ;; Registers used:
 11630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11636 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11637 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11639 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11640 ;;Total ram usage:        9 bytes
 11641 ;; Hardware stack levels used:    1
 11642 ;; Hardware stack levels required when called:    1
 11643 ;; This function calls:
 11644 ;;		i2___lwdiv
 11645 ;;		i2___lwmod
 11646 ;; This function is called by:
 11647 ;;		i2_itoa
 11648 ;; This function uses a non-reentrant model
 11649 ;;
 11650                           
 11651                           	psect	text66
 11652  001D6C                     __ptext66:
 11653                           	opt stack 0
 11654  001D6C                     i2_utoa:
 11655                           	opt stack 17
 11656                           
 11657                           ;incstack = 0
 11658  001D6C  C00A  F00E         	movff	i2utoa@val,i2utoa@v
 11659  001D70  C00B  F00F         	movff	i2utoa@val+1,i2utoa@v+1
 11660  001D74  C00E  F001         	movff	i2utoa@v,i2___lwdiv@dividend
 11661  001D78  C00F  F002         	movff	i2utoa@v+1,i2___lwdiv@dividend+1
 11662  001D7C  C00C  F003         	movff	i2utoa@base,i2___lwdiv@divisor
 11663  001D80  C00D  F004         	movff	i2utoa@base+1,i2___lwdiv@divisor+1
 11664  001D84  ECAC  F015         	call	i2___lwdiv	;wreg free
 11665  001D88  C001  F00E         	movff	?i2___lwdiv,i2utoa@v
 11666  001D8C  C002  F00F         	movff	?i2___lwdiv+1,i2utoa@v+1
 11667  001D90  4A08               	infsnz	i2utoa@buf,f,c
 11668  001D92  2A09               	incf	i2utoa@buf+1,f,c
 11669  001D94  500E               	movf	i2utoa@v,w,c
 11670  001D96  100F               	iorwf	i2utoa@v+1,w,c
 11671  001D98  A4D8               	btfss	status,2,c
 11672  001D9A  D7EC               	goto	i2l1212
 11673  001D9C  C008  FFD9         	movff	i2utoa@buf,fsr2l
 11674  001DA0  C009  FFDA         	movff	i2utoa@buf+1,fsr2h
 11675  001DA4  0E00               	movlw	0
 11676  001DA6  6EDF               	movwf	indf2,c
 11677  001DA8  0608               	decf	i2utoa@buf,f,c
 11678  001DAA  A0D8               	btfss	status,0,c
 11679  001DAC  0609               	decf	i2utoa@buf+1,f,c
 11680  001DAE  C00A  F001         	movff	i2utoa@val,i2___lwmod@dividend
 11681  001DB2  C00B  F002         	movff	i2utoa@val+1,i2___lwmod@dividend+1
 11682  001DB6  C00C  F003         	movff	i2utoa@base,i2___lwmod@divisor
 11683  001DBA  C00D  F004         	movff	i2utoa@base+1,i2___lwmod@divisor+1
 11684  001DBE  EC88  F016         	call	i2___lwmod	;wreg free
 11685  001DC2  5001               	movf	?i2___lwmod,w,c
 11686  001DC4  6E10               	movwf	i2utoa@c,c
 11687  001DC6  C00A  F001         	movff	i2utoa@val,i2___lwdiv@dividend
 11688  001DCA  C00B  F002         	movff	i2utoa@val+1,i2___lwdiv@dividend+1
 11689  001DCE  C00C  F003         	movff	i2utoa@base,i2___lwdiv@divisor
 11690  001DD2  C00D  F004         	movff	i2utoa@base+1,i2___lwdiv@divisor+1
 11691  001DD6  ECAC  F015         	call	i2___lwdiv	;wreg free
 11692  001DDA  C001  F00A         	movff	?i2___lwdiv,i2utoa@val
 11693  001DDE  C002  F00B         	movff	?i2___lwdiv+1,i2utoa@val+1
 11694  001DE2  0E09               	movlw	9
 11695  001DE4  6410               	cpfsgt	i2utoa@c,c
 11696  001DE6  D002               	goto	i2l1215
 11697  001DE8  0E07               	movlw	7
 11698  001DEA  2610               	addwf	i2utoa@c,f,c
 11699  001DEC                     i2l1215:
 11700  001DEC  0E30               	movlw	48
 11701  001DEE  2610               	addwf	i2utoa@c,f,c
 11702  001DF0  C008  FFD9         	movff	i2utoa@buf,fsr2l
 11703  001DF4  C009  FFDA         	movff	i2utoa@buf+1,fsr2h
 11704  001DF8  C010  FFDF         	movff	i2utoa@c,indf2
 11705  001DFC  0608               	decf	i2utoa@buf,f,c
 11706  001DFE  A0D8               	btfss	status,0,c
 11707  001E00  0609               	decf	i2utoa@buf+1,f,c
 11708  001E02  500A               	movf	i2utoa@val,w,c
 11709  001E04  100B               	iorwf	i2utoa@val+1,w,c
 11710  001E06  A4D8               	btfss	status,2,c
 11711  001E08  D7D2               	goto	i2l1214
 11712                           
 11713                           ;	Return value of i2_utoa is never used
 11714  001E0A  4A08               	infsnz	i2utoa@buf,f,c
 11715  001E0C  2A09               	incf	i2utoa@buf+1,f,c
 11716  001E0E  0012               	return	
 11717  001E10                     __end_ofi2_utoa:
 11718                           	opt stack 0
 11719                           tosu	equ	0xFFF
 11720                           tosh	equ	0xFFE
 11721                           tosl	equ	0xFFD
 11722                           pclatu	equ	0xFFB
 11723                           pclath	equ	0xFFA
 11724                           tblptru	equ	0xFF8
 11725                           tblptrh	equ	0xFF7
 11726                           tblptrl	equ	0xFF6
 11727                           tablat	equ	0xFF5
 11728                           prodh	equ	0xFF4
 11729                           prodl	equ	0xFF3
 11730                           intcon	equ	0xFF2
 11731                           indf0	equ	0xFEF
 11732                           postinc0	equ	0xFEE
 11733                           fsr0h	equ	0xFEA
 11734                           fsr0l	equ	0xFE9
 11735                           wreg	equ	0xFE8
 11736                           postdec1	equ	0xFE5
 11737                           fsr1h	equ	0xFE2
 11738                           fsr1l	equ	0xFE1
 11739                           indf2	equ	0xFDF
 11740                           fsr2h	equ	0xFDA
 11741                           fsr2l	equ	0xFD9
 11742                           status	equ	0xFD8
 11743                           
 11744 ;; *************** function i2___lwmod *****************
 11745 ;; Defined at:
 11746 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 11747 ;; Parameters:    Size  Location     Type
 11748 ;;  dividend        2    0[COMRAM] unsigned int 
 11749 ;;  divisor         2    2[COMRAM] unsigned int 
 11750 ;; Auto vars:     Size  Location     Type
 11751 ;;  __lwmod         1    4[COMRAM] unsigned char 
 11752 ;; Return value:  Size  Location     Type
 11753 ;;                  2    0[COMRAM] unsigned int 
 11754 ;; Registers used:
 11755 ;;		wreg, status,2, status,0
 11756 ;; Tracked objects:
 11757 ;;		On entry : 0/0
 11758 ;;		On exit  : 0/0
 11759 ;;		Unchanged: 0/0
 11760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11764 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11765 ;;Total ram usage:        5 bytes
 11766 ;; Hardware stack levels used:    1
 11767 ;; This function calls:
 11768 ;;		Nothing
 11769 ;; This function is called by:
 11770 ;;		i2_utoa
 11771 ;; This function uses a non-reentrant model
 11772 ;;
 11773                           
 11774                           	psect	text67
 11775  002D10                     __ptext67:
 11776                           	opt stack 0
 11777  002D10                     i2___lwmod:
 11778                           	opt stack 17
 11779                           
 11780                           ;incstack = 0
 11781  002D10  5003               	movf	i2___lwmod@divisor,w,c
 11782  002D12  1004               	iorwf	i2___lwmod@divisor+1,w,c
 11783  002D14  B4D8               	btfsc	status,2,c
 11784  002D16  D018               	goto	i2l1310
 11785  002D18  0E01               	movlw	1
 11786  002D1A  6E05               	movwf	i2___lwmod@counter,c
 11787  002D1C  D004               	goto	i2l1305
 11788  002D1E  90D8               	bcf	status,0,c
 11789  002D20  3603               	rlcf	i2___lwmod@divisor,f,c
 11790  002D22  3604               	rlcf	i2___lwmod@divisor+1,f,c
 11791  002D24  2A05               	incf	i2___lwmod@counter,f,c
 11792  002D26                     i2l1305:
 11793  002D26  AE04               	btfss	i2___lwmod@divisor+1,7,c
 11794  002D28  D7FA               	goto	i2l1306
 11795  002D2A                     i2u283_40:
 11796  002D2A  5003               	movf	i2___lwmod@divisor,w,c
 11797  002D2C  5C01               	subwf	i2___lwmod@dividend,w,c
 11798  002D2E  5004               	movf	i2___lwmod@divisor+1,w,c
 11799  002D30  5802               	subwfb	i2___lwmod@dividend+1,w,c
 11800  002D32  A0D8               	btfss	status,0,c
 11801  002D34  D004               	goto	i2l1309
 11802  002D36  5003               	movf	i2___lwmod@divisor,w,c
 11803  002D38  5E01               	subwf	i2___lwmod@dividend,f,c
 11804  002D3A  5004               	movf	i2___lwmod@divisor+1,w,c
 11805  002D3C  5A02               	subwfb	i2___lwmod@dividend+1,f,c
 11806  002D3E                     i2l1309:
 11807  002D3E  90D8               	bcf	status,0,c
 11808  002D40  3204               	rrcf	i2___lwmod@divisor+1,f,c
 11809  002D42  3203               	rrcf	i2___lwmod@divisor,f,c
 11810  002D44  2E05               	decfsz	i2___lwmod@counter,f,c
 11811  002D46  D7F1               	goto	i2u283_40
 11812  002D48                     i2l1310:
 11813  002D48  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
 11814  002D4C  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 11815  002D50  0012               	return		;funcret
 11816  002D52                     __end_ofi2___lwmod:
 11817                           	opt stack 0
 11818                           tosu	equ	0xFFF
 11819                           tosh	equ	0xFFE
 11820                           tosl	equ	0xFFD
 11821                           pclatu	equ	0xFFB
 11822                           pclath	equ	0xFFA
 11823                           tblptru	equ	0xFF8
 11824                           tblptrh	equ	0xFF7
 11825                           tblptrl	equ	0xFF6
 11826                           tablat	equ	0xFF5
 11827                           prodh	equ	0xFF4
 11828                           prodl	equ	0xFF3
 11829                           intcon	equ	0xFF2
 11830                           indf0	equ	0xFEF
 11831                           postinc0	equ	0xFEE
 11832                           fsr0h	equ	0xFEA
 11833                           fsr0l	equ	0xFE9
 11834                           wreg	equ	0xFE8
 11835                           postdec1	equ	0xFE5
 11836                           fsr1h	equ	0xFE2
 11837                           fsr1l	equ	0xFE1
 11838                           indf2	equ	0xFDF
 11839                           fsr2h	equ	0xFDA
 11840                           fsr2l	equ	0xFD9
 11841                           status	equ	0xFD8
 11842                           
 11843 ;; *************** function i2___lwdiv *****************
 11844 ;; Defined at:
 11845 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 11846 ;; Parameters:    Size  Location     Type
 11847 ;;  dividend        2    0[COMRAM] unsigned int 
 11848 ;;  divisor         2    2[COMRAM] unsigned int 
 11849 ;; Auto vars:     Size  Location     Type
 11850 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 11851 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 11852 ;; Return value:  Size  Location     Type
 11853 ;;                  2    0[COMRAM] unsigned int 
 11854 ;; Registers used:
 11855 ;;		wreg, status,2, status,0
 11856 ;; Tracked objects:
 11857 ;;		On entry : 0/0
 11858 ;;		On exit  : 0/0
 11859 ;;		Unchanged: 0/0
 11860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11861 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11862 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11864 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11865 ;;Total ram usage:        7 bytes
 11866 ;; Hardware stack levels used:    1
 11867 ;; This function calls:
 11868 ;;		Nothing
 11869 ;; This function is called by:
 11870 ;;		i2_utoa
 11871 ;; This function uses a non-reentrant model
 11872 ;;
 11873                           
 11874                           	psect	text68
 11875  002B58                     __ptext68:
 11876                           	opt stack 0
 11877  002B58                     i2___lwdiv:
 11878                           	opt stack 17
 11879                           
 11880                           ;incstack = 0
 11881  002B58  0E00               	movlw	0
 11882  002B5A  6E06               	movwf	i2___lwdiv@quotient+1,c
 11883  002B5C  0E00               	movlw	0
 11884  002B5E  6E05               	movwf	i2___lwdiv@quotient,c
 11885  002B60  5003               	movf	i2___lwdiv@divisor,w,c
 11886  002B62  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 11887  002B64  B4D8               	btfsc	status,2,c
 11888  002B66  D01C               	goto	i2l1300
 11889  002B68  0E01               	movlw	1
 11890  002B6A  6E07               	movwf	i2___lwdiv@counter,c
 11891  002B6C  D004               	goto	i2l1295
 11892  002B6E  90D8               	bcf	status,0,c
 11893  002B70  3603               	rlcf	i2___lwdiv@divisor,f,c
 11894  002B72  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 11895  002B74  2A07               	incf	i2___lwdiv@counter,f,c
 11896  002B76                     i2l1295:
 11897  002B76  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 11898  002B78  D7FA               	goto	i2l1296
 11899  002B7A                     i2u280_40:
 11900  002B7A  90D8               	bcf	status,0,c
 11901  002B7C  3605               	rlcf	i2___lwdiv@quotient,f,c
 11902  002B7E  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 11903  002B80  5003               	movf	i2___lwdiv@divisor,w,c
 11904  002B82  5C01               	subwf	i2___lwdiv@dividend,w,c
 11905  002B84  5004               	movf	i2___lwdiv@divisor+1,w,c
 11906  002B86  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 11907  002B88  A0D8               	btfss	status,0,c
 11908  002B8A  D005               	goto	i2l1299
 11909  002B8C  5003               	movf	i2___lwdiv@divisor,w,c
 11910  002B8E  5E01               	subwf	i2___lwdiv@dividend,f,c
 11911  002B90  5004               	movf	i2___lwdiv@divisor+1,w,c
 11912  002B92  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 11913  002B94  8005               	bsf	i2___lwdiv@quotient,0,c
 11914  002B96                     i2l1299:
 11915  002B96  90D8               	bcf	status,0,c
 11916  002B98  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 11917  002B9A  3203               	rrcf	i2___lwdiv@divisor,f,c
 11918  002B9C  2E07               	decfsz	i2___lwdiv@counter,f,c
 11919  002B9E  D7ED               	goto	i2u280_40
 11920  002BA0                     i2l1300:
 11921  002BA0  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 11922  002BA4  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 11923  002BA8  0012               	return		;funcret
 11924  002BAA                     __end_ofi2___lwdiv:
 11925                           	opt stack 0
 11926                           tosu	equ	0xFFF
 11927                           tosh	equ	0xFFE
 11928                           tosl	equ	0xFFD
 11929                           pclatu	equ	0xFFB
 11930                           pclath	equ	0xFFA
 11931                           tblptru	equ	0xFF8
 11932                           tblptrh	equ	0xFF7
 11933                           tblptrl	equ	0xFF6
 11934                           tablat	equ	0xFF5
 11935                           prodh	equ	0xFF4
 11936                           prodl	equ	0xFF3
 11937                           intcon	equ	0xFF2
 11938                           indf0	equ	0xFEF
 11939                           postinc0	equ	0xFEE
 11940                           fsr0h	equ	0xFEA
 11941                           fsr0l	equ	0xFE9
 11942                           wreg	equ	0xFE8
 11943                           postdec1	equ	0xFE5
 11944                           fsr1h	equ	0xFE2
 11945                           fsr1l	equ	0xFE1
 11946                           indf2	equ	0xFDF
 11947                           fsr2h	equ	0xFDA
 11948                           fsr2l	equ	0xFD9
 11949                           status	equ	0xFD8
 11950                           
 11951 ;; *************** function i2_Set_Colors *****************
 11952 ;; Defined at:
 11953 ;;		line 389 in file "mcc_generated_files/pin_manager.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;  Red             3   38[COMRAM] float 
 11956 ;;  Green           3   41[COMRAM] float 
 11957 ;;  Blue            3   44[COMRAM] float 
 11958 ;; Auto vars:     Size  Location     Type
 11959 ;;  Set_Colors      3   53[COMRAM] float 
 11960 ;;  Set_Colors      3   50[COMRAM] float 
 11961 ;;  Set_Colors      3   47[COMRAM] float 
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  1    wreg      void 
 11964 ;; Registers used:
 11965 ;;		wreg, status,2, status,0, cstack
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11971 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11972 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11974 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11975 ;;Total ram usage:       21 bytes
 11976 ;; Hardware stack levels used:    1
 11977 ;; Hardware stack levels required when called:    2
 11978 ;; This function calls:
 11979 ;;		i2_PWM2_LoadDutyValue
 11980 ;;		i2_PWM3_LoadDutyValue
 11981 ;;		i2_PWM4_LoadDutyValue
 11982 ;;		i2___awtoft
 11983 ;;		i2___ftdiv
 11984 ;;		i2___ftmul
 11985 ;;		i2___fttol
 11986 ;; This function is called by:
 11987 ;;		_Brightness_Menu_Function
 11988 ;;		_Start_Color_Menu_Function
 11989 ;; This function uses a non-reentrant model
 11990 ;;
 11991                           
 11992                           	psect	text69
 11993  00087A                     __ptext69:
 11994                           	opt stack 0
 11995  00087A                     i2_Set_Colors:
 11996                           	opt stack 17
 11997                           
 11998                           ;pin_manager.c: 391: float appliedRed, appliedGreen, appliedBlue;
 11999                           ;pin_manager.c: 393: appliedRed = (maxBrightness * (Red/255)) * (brightnessPercent/100);
 12000                           
 12001                           ;incstack = 0
 12002  00087A  0E00               	movlw	0
 12003  00087C  6E0C               	movwf	i2___ftdiv@f2,c
 12004  00087E  0E7F               	movlw	127
 12005  000880  6E0D               	movwf	i2___ftdiv@f2+1,c
 12006  000882  0E43               	movlw	67
 12007  000884  6E0E               	movwf	i2___ftdiv@f2+2,c
 12008  000886  C027  F009         	movff	i2Set_Colors@Red,i2___ftdiv@f1
 12009  00088A  C028  F00A         	movff	i2Set_Colors@Red+1,i2___ftdiv@f1+1
 12010  00088E  C029  F00B         	movff	i2Set_Colors@Red+2,i2___ftdiv@f1+2
 12011  000892  EC2E  F00C         	call	i2___ftdiv	;wreg free
 12012  000896  C009  F01B         	movff	?i2___ftdiv,i2___ftmul@f2
 12013  00089A  C00A  F01C         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 12014  00089E  C00B  F01D         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 12015  0008A2  C0B8  F009         	movff	_maxBrightness,i2___awtoft@c
 12016  0008A6  C0B9  F00A         	movff	_maxBrightness+1,i2___awtoft@c+1
 12017  0008AA  EC97  F017         	call	i2___awtoft	;wreg free
 12018  0008AE  C009  F018         	movff	?i2___awtoft,i2___ftmul@f1
 12019  0008B2  C00A  F019         	movff	?i2___awtoft+1,i2___ftmul@f1+1
 12020  0008B6  C00B  F01A         	movff	?i2___awtoft+2,i2___ftmul@f1+2
 12021  0008BA  EC40  F00B         	call	i2___ftmul	;wreg free
 12022  0008BE  C018  F039         	movff	?i2___ftmul,i2_Set_Colors$2088
 12023  0008C2  C019  F03A         	movff	?i2___ftmul+1,i2_Set_Colors$2088+1
 12024  0008C6  C01A  F03B         	movff	?i2___ftmul+2,i2_Set_Colors$2088+2
 12025                           
 12026                           ;pin_manager.c: 391: float appliedRed, appliedGreen, appliedBlue;
 12027                           ;pin_manager.c: 393: appliedRed = (maxBrightness * (Red/255)) * (brightnessPercent/100);
 12028  0008CA  C039  F018         	movff	i2_Set_Colors$2088,i2___ftmul@f1
 12029  0008CE  C03A  F019         	movff	i2_Set_Colors$2088+1,i2___ftmul@f1+1
 12030  0008D2  C03B  F01A         	movff	i2_Set_Colors$2088+2,i2___ftmul@f1+2
 12031  0008D6  0E00               	movlw	0
 12032  0008D8  6E0C               	movwf	i2___ftdiv@f2,c
 12033  0008DA  0EC8               	movlw	200
 12034  0008DC  6E0D               	movwf	i2___ftdiv@f2+1,c
 12035  0008DE  0E42               	movlw	66
 12036  0008E0  6E0E               	movwf	i2___ftdiv@f2+2,c
 12037  0008E2  C0B5  F009         	movff	_brightnessPercent,i2___ftdiv@f1
 12038  0008E6  C0B6  F00A         	movff	_brightnessPercent+1,i2___ftdiv@f1+1
 12039  0008EA  C0B7  F00B         	movff	_brightnessPercent+2,i2___ftdiv@f1+2
 12040  0008EE  EC2E  F00C         	call	i2___ftdiv	;wreg free
 12041  0008F2  C009  F01B         	movff	?i2___ftdiv,i2___ftmul@f2
 12042  0008F6  C00A  F01C         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 12043  0008FA  C00B  F01D         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 12044  0008FE  EC40  F00B         	call	i2___ftmul	;wreg free
 12045  000902  C018  F030         	movff	?i2___ftmul,i2Set_Colors@appliedRed
 12046  000906  C019  F031         	movff	?i2___ftmul+1,i2Set_Colors@appliedRed+1
 12047  00090A  C01A  F032         	movff	?i2___ftmul+2,i2Set_Colors@appliedRed+2
 12048                           
 12049                           ;pin_manager.c: 394: appliedGreen = (maxBrightness * (Green/255)) * (brightnessPercent/1
      +                          00);
 12050  00090E  0E00               	movlw	0
 12051  000910  6E0C               	movwf	i2___ftdiv@f2,c
 12052  000912  0E7F               	movlw	127
 12053  000914  6E0D               	movwf	i2___ftdiv@f2+1,c
 12054  000916  0E43               	movlw	67
 12055  000918  6E0E               	movwf	i2___ftdiv@f2+2,c
 12056  00091A  C02A  F009         	movff	i2Set_Colors@Green,i2___ftdiv@f1
 12057  00091E  C02B  F00A         	movff	i2Set_Colors@Green+1,i2___ftdiv@f1+1
 12058  000922  C02C  F00B         	movff	i2Set_Colors@Green+2,i2___ftdiv@f1+2
 12059  000926  EC2E  F00C         	call	i2___ftdiv	;wreg free
 12060  00092A  C009  F01B         	movff	?i2___ftdiv,i2___ftmul@f2
 12061  00092E  C00A  F01C         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 12062  000932  C00B  F01D         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 12063  000936  C0B8  F009         	movff	_maxBrightness,i2___awtoft@c
 12064  00093A  C0B9  F00A         	movff	_maxBrightness+1,i2___awtoft@c+1
 12065  00093E  EC97  F017         	call	i2___awtoft	;wreg free
 12066  000942  C009  F018         	movff	?i2___awtoft,i2___ftmul@f1
 12067  000946  C00A  F019         	movff	?i2___awtoft+1,i2___ftmul@f1+1
 12068  00094A  C00B  F01A         	movff	?i2___awtoft+2,i2___ftmul@f1+2
 12069  00094E  EC40  F00B         	call	i2___ftmul	;wreg free
 12070  000952  C018  F039         	movff	?i2___ftmul,i2_Set_Colors$2088
 12071  000956  C019  F03A         	movff	?i2___ftmul+1,i2_Set_Colors$2088+1
 12072  00095A  C01A  F03B         	movff	?i2___ftmul+2,i2_Set_Colors$2088+2
 12073                           
 12074                           ;pin_manager.c: 394: appliedGreen = (maxBrightness * (Green/255)) * (brightnessPercent/1
      +                          00);
 12075  00095E  C039  F018         	movff	i2_Set_Colors$2088,i2___ftmul@f1
 12076  000962  C03A  F019         	movff	i2_Set_Colors$2088+1,i2___ftmul@f1+1
 12077  000966  C03B  F01A         	movff	i2_Set_Colors$2088+2,i2___ftmul@f1+2
 12078  00096A  0E00               	movlw	0
 12079  00096C  6E0C               	movwf	i2___ftdiv@f2,c
 12080  00096E  0EC8               	movlw	200
 12081  000970  6E0D               	movwf	i2___ftdiv@f2+1,c
 12082  000972  0E42               	movlw	66
 12083  000974  6E0E               	movwf	i2___ftdiv@f2+2,c
 12084  000976  C0B5  F009         	movff	_brightnessPercent,i2___ftdiv@f1
 12085  00097A  C0B6  F00A         	movff	_brightnessPercent+1,i2___ftdiv@f1+1
 12086  00097E  C0B7  F00B         	movff	_brightnessPercent+2,i2___ftdiv@f1+2
 12087  000982  EC2E  F00C         	call	i2___ftdiv	;wreg free
 12088  000986  C009  F01B         	movff	?i2___ftdiv,i2___ftmul@f2
 12089  00098A  C00A  F01C         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 12090  00098E  C00B  F01D         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 12091  000992  EC40  F00B         	call	i2___ftmul	;wreg free
 12092  000996  C018  F033         	movff	?i2___ftmul,i2Set_Colors@appliedGreen
 12093  00099A  C019  F034         	movff	?i2___ftmul+1,i2Set_Colors@appliedGreen+1
 12094  00099E  C01A  F035         	movff	?i2___ftmul+2,i2Set_Colors@appliedGreen+2
 12095                           
 12096                           ;pin_manager.c: 395: appliedBlue = (maxBrightness * (Blue/255)) * (brightnessPercent/100
      +                          );
 12097  0009A2  0E00               	movlw	0
 12098  0009A4  6E0C               	movwf	i2___ftdiv@f2,c
 12099  0009A6  0E7F               	movlw	127
 12100  0009A8  6E0D               	movwf	i2___ftdiv@f2+1,c
 12101  0009AA  0E43               	movlw	67
 12102  0009AC  6E0E               	movwf	i2___ftdiv@f2+2,c
 12103  0009AE  C02D  F009         	movff	i2Set_Colors@Blue,i2___ftdiv@f1
 12104  0009B2  C02E  F00A         	movff	i2Set_Colors@Blue+1,i2___ftdiv@f1+1
 12105  0009B6  C02F  F00B         	movff	i2Set_Colors@Blue+2,i2___ftdiv@f1+2
 12106  0009BA  EC2E  F00C         	call	i2___ftdiv	;wreg free
 12107  0009BE  C009  F01B         	movff	?i2___ftdiv,i2___ftmul@f2
 12108  0009C2  C00A  F01C         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 12109  0009C6  C00B  F01D         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 12110  0009CA  C0B8  F009         	movff	_maxBrightness,i2___awtoft@c
 12111  0009CE  C0B9  F00A         	movff	_maxBrightness+1,i2___awtoft@c+1
 12112  0009D2  EC97  F017         	call	i2___awtoft	;wreg free
 12113  0009D6  C009  F018         	movff	?i2___awtoft,i2___ftmul@f1
 12114  0009DA  C00A  F019         	movff	?i2___awtoft+1,i2___ftmul@f1+1
 12115  0009DE  C00B  F01A         	movff	?i2___awtoft+2,i2___ftmul@f1+2
 12116  0009E2  EC40  F00B         	call	i2___ftmul	;wreg free
 12117  0009E6  C018  F039         	movff	?i2___ftmul,i2_Set_Colors$2088
 12118  0009EA  C019  F03A         	movff	?i2___ftmul+1,i2_Set_Colors$2088+1
 12119  0009EE  C01A  F03B         	movff	?i2___ftmul+2,i2_Set_Colors$2088+2
 12120                           
 12121                           ;pin_manager.c: 395: appliedBlue = (maxBrightness * (Blue/255)) * (brightnessPercent/100
      +                          );
 12122  0009F2  C039  F018         	movff	i2_Set_Colors$2088,i2___ftmul@f1
 12123  0009F6  C03A  F019         	movff	i2_Set_Colors$2088+1,i2___ftmul@f1+1
 12124  0009FA  C03B  F01A         	movff	i2_Set_Colors$2088+2,i2___ftmul@f1+2
 12125  0009FE  0E00               	movlw	0
 12126  000A00  6E0C               	movwf	i2___ftdiv@f2,c
 12127  000A02  0EC8               	movlw	200
 12128  000A04  6E0D               	movwf	i2___ftdiv@f2+1,c
 12129  000A06  0E42               	movlw	66
 12130  000A08  6E0E               	movwf	i2___ftdiv@f2+2,c
 12131  000A0A  C0B5  F009         	movff	_brightnessPercent,i2___ftdiv@f1
 12132  000A0E  C0B6  F00A         	movff	_brightnessPercent+1,i2___ftdiv@f1+1
 12133  000A12  C0B7  F00B         	movff	_brightnessPercent+2,i2___ftdiv@f1+2
 12134  000A16  EC2E  F00C         	call	i2___ftdiv	;wreg free
 12135  000A1A  C009  F01B         	movff	?i2___ftdiv,i2___ftmul@f2
 12136  000A1E  C00A  F01C         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 12137  000A22  C00B  F01D         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 12138  000A26  EC40  F00B         	call	i2___ftmul	;wreg free
 12139  000A2A  C018  F036         	movff	?i2___ftmul,i2Set_Colors@appliedBlue
 12140  000A2E  C019  F037         	movff	?i2___ftmul+1,i2Set_Colors@appliedBlue+1
 12141  000A32  C01A  F038         	movff	?i2___ftmul+2,i2Set_Colors@appliedBlue+2
 12142                           
 12143                           ;pin_manager.c: 398: PWM2_LoadDutyValue(appliedRed);
 12144  000A36  C030  F001         	movff	i2Set_Colors@appliedRed,i2___fttol@f1
 12145  000A3A  C031  F002         	movff	i2Set_Colors@appliedRed+1,i2___fttol@f1+1
 12146  000A3E  C032  F003         	movff	i2Set_Colors@appliedRed+2,i2___fttol@f1+2
 12147  000A42  ECC6  F00A         	call	i2___fttol	;wreg free
 12148  000A46  C001  F010         	movff	?i2___fttol,i2PWM2_LoadDutyValue@dutyValue
 12149  000A4A  C002  F011         	movff	?i2___fttol+1,i2PWM2_LoadDutyValue@dutyValue+1
 12150  000A4E  EC19  F018         	call	i2_PWM2_LoadDutyValue	;wreg free
 12151                           
 12152                           ;pin_manager.c: 399: PWM3_LoadDutyValue(appliedBlue);
 12153  000A52  C036  F001         	movff	i2Set_Colors@appliedBlue,i2___fttol@f1
 12154  000A56  C037  F002         	movff	i2Set_Colors@appliedBlue+1,i2___fttol@f1+1
 12155  000A5A  C038  F003         	movff	i2Set_Colors@appliedBlue+2,i2___fttol@f1+2
 12156  000A5E  ECC6  F00A         	call	i2___fttol	;wreg free
 12157  000A62  C001  F010         	movff	?i2___fttol,i2PWM3_LoadDutyValue@dutyValue
 12158  000A66  C002  F011         	movff	?i2___fttol+1,i2PWM3_LoadDutyValue@dutyValue+1
 12159  000A6A  EC00  F018         	call	i2_PWM3_LoadDutyValue	;wreg free
 12160                           
 12161                           ;pin_manager.c: 400: PWM4_LoadDutyValue(appliedGreen);
 12162  000A6E  C033  F001         	movff	i2Set_Colors@appliedGreen,i2___fttol@f1
 12163  000A72  C034  F002         	movff	i2Set_Colors@appliedGreen+1,i2___fttol@f1+1
 12164  000A76  C035  F003         	movff	i2Set_Colors@appliedGreen+2,i2___fttol@f1+2
 12165  000A7A  ECC6  F00A         	call	i2___fttol	;wreg free
 12166  000A7E  C001  F010         	movff	?i2___fttol,i2PWM4_LoadDutyValue@dutyValue
 12167  000A82  C002  F011         	movff	?i2___fttol+1,i2PWM4_LoadDutyValue@dutyValue+1
 12168  000A86  ECE7  F017         	call	i2_PWM4_LoadDutyValue	;wreg free
 12169  000A8A  0012               	return		;funcret
 12170  000A8C                     __end_ofi2_Set_Colors:
 12171                           	opt stack 0
 12172                           tosu	equ	0xFFF
 12173                           tosh	equ	0xFFE
 12174                           tosl	equ	0xFFD
 12175                           pclatu	equ	0xFFB
 12176                           pclath	equ	0xFFA
 12177                           tblptru	equ	0xFF8
 12178                           tblptrh	equ	0xFF7
 12179                           tblptrl	equ	0xFF6
 12180                           tablat	equ	0xFF5
 12181                           prodh	equ	0xFF4
 12182                           prodl	equ	0xFF3
 12183                           intcon	equ	0xFF2
 12184                           indf0	equ	0xFEF
 12185                           postinc0	equ	0xFEE
 12186                           fsr0h	equ	0xFEA
 12187                           fsr0l	equ	0xFE9
 12188                           wreg	equ	0xFE8
 12189                           postdec1	equ	0xFE5
 12190                           fsr1h	equ	0xFE2
 12191                           fsr1l	equ	0xFE1
 12192                           indf2	equ	0xFDF
 12193                           fsr2h	equ	0xFDA
 12194                           fsr2l	equ	0xFD9
 12195                           status	equ	0xFD8
 12196                           
 12197 ;; *************** function i2___fttol *****************
 12198 ;; Defined at:
 12199 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;  f1              3    0[COMRAM] float 
 12202 ;; Auto vars:     Size  Location     Type
 12203 ;;  __fttol         4   10[COMRAM] unsigned long 
 12204 ;;  __fttol         1   14[COMRAM] unsigned char 
 12205 ;;  __fttol         1    9[COMRAM] unsigned char 
 12206 ;; Return value:  Size  Location     Type
 12207 ;;                  4    0[COMRAM] long 
 12208 ;; Registers used:
 12209 ;;		wreg, status,2, status,0
 12210 ;; Tracked objects:
 12211 ;;		On entry : 0/0
 12212 ;;		On exit  : 0/0
 12213 ;;		Unchanged: 0/0
 12214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12215 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12216 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12217 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12218 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12219 ;;Total ram usage:       15 bytes
 12220 ;; Hardware stack levels used:    1
 12221 ;; This function calls:
 12222 ;;		Nothing
 12223 ;; This function is called by:
 12224 ;;		_Brightness_Menu_Function
 12225 ;;		_Start_Color_Menu_Function
 12226 ;;		i2_Set_Colors
 12227 ;; This function uses a non-reentrant model
 12228 ;;
 12229                           
 12230                           	psect	text70
 12231  00158C                     __ptext70:
 12232                           	opt stack 0
 12233  00158C                     i2___fttol:
 12234                           	opt stack 19
 12235                           
 12236                           ;incstack = 0
 12237  00158C  C003  F005         	movff	i2___fttol@f1+2,??i2___fttol
 12238  001590  6A06               	clrf	(??i2___fttol+1)& (0+255),c
 12239  001592  6A07               	clrf	(??i2___fttol+2)& (0+255),c
 12240  001594  3402               	rlcf	i2___fttol@f1+1,w,c
 12241  001596  3605               	rlcf	??i2___fttol& (0+255),f,c
 12242  001598  E301               	bnc	u346_41
 12243  00159A  8006               	bsf	(??i2___fttol+1)& (0+255),0,c
 12244  00159C                     u346_41:
 12245  00159C  5005               	movf	??i2___fttol,w,c
 12246  00159E  6E0F               	movwf	i2___fttol@exp1,c
 12247  0015A0  500F               	movf	i2___fttol@exp1,w,c
 12248  0015A2  A4D8               	btfss	status,2,c
 12249  0015A4  D009               	goto	i2l1192
 12250  0015A6  0E00               	movlw	0
 12251  0015A8  6E01               	movwf	?i2___fttol,c
 12252  0015AA  0E00               	movlw	0
 12253  0015AC  6E02               	movwf	?i2___fttol+1,c
 12254  0015AE  0E00               	movlw	0
 12255  0015B0  6E03               	movwf	?i2___fttol+2,c
 12256  0015B2  0E00               	movlw	0
 12257  0015B4  6E04               	movwf	?i2___fttol+3,c
 12258  0015B6  0012               	return	
 12259  0015B8                     i2l1192:
 12260  0015B8  0E17               	movlw	23
 12261  0015BA  6E05               	movwf	??i2___fttol& (0+255),c
 12262  0015BC  C001  F006         	movff	i2___fttol@f1,??i2___fttol+1
 12263  0015C0  C002  F007         	movff	i2___fttol@f1+1,??i2___fttol+2
 12264  0015C4  C003  F008         	movff	i2___fttol@f1+2,??i2___fttol+3
 12265  0015C8  2805               	incf	??i2___fttol,w,c
 12266  0015CA  6E09               	movwf	(??i2___fttol+4)& (0+255),c
 12267  0015CC  D004               	goto	i2u348_40
 12268  0015CE                     i2u348_45:
 12269  0015CE  90D8               	bcf	status,0,c
 12270  0015D0  3208               	rrcf	??i2___fttol+3,f,c
 12271  0015D2  3207               	rrcf	??i2___fttol+2,f,c
 12272  0015D4  3206               	rrcf	??i2___fttol+1,f,c
 12273  0015D6                     i2u348_40:
 12274  0015D6  2E09               	decfsz	(??i2___fttol+4)& (0+255),f,c
 12275  0015D8  D7FA               	goto	i2u348_45
 12276  0015DA  5006               	movf	??i2___fttol+1,w,c
 12277  0015DC  6E0A               	movwf	i2___fttol@sign1,c
 12278  0015DE  8E02               	bsf	i2___fttol@f1+1,7,c
 12279  0015E0  0EFF               	movlw	255
 12280  0015E2  1601               	andwf	i2___fttol@f1,f,c
 12281  0015E4  0EFF               	movlw	255
 12282  0015E6  1602               	andwf	i2___fttol@f1+1,f,c
 12283  0015E8  0E00               	movlw	0
 12284  0015EA  1603               	andwf	i2___fttol@f1+2,f,c
 12285  0015EC  5001               	movf	i2___fttol@f1,w,c
 12286  0015EE  6E0B               	movwf	i2___fttol@lval,c
 12287  0015F0  5002               	movf	i2___fttol@f1+1,w,c
 12288  0015F2  6E0C               	movwf	i2___fttol@lval+1,c
 12289  0015F4  5003               	movf	i2___fttol@f1+2,w,c
 12290  0015F6  6E0D               	movwf	i2___fttol@lval+2,c
 12291  0015F8  6A0E               	clrf	i2___fttol@lval+3,c
 12292  0015FA  0E8E               	movlw	142
 12293  0015FC  5E0F               	subwf	i2___fttol@exp1,f,c
 12294  0015FE  AE0F               	btfss	i2___fttol@exp1,7,c
 12295  001600  D016               	goto	i2l1194
 12296  001602  500F               	movf	i2___fttol@exp1,w,c
 12297  001604  0A80               	xorlw	128
 12298  001606  0F8F               	addlw	143
 12299  001608  B0D8               	btfsc	status,0,c
 12300  00160A  D009               	goto	i2l1195
 12301  00160C  0E00               	movlw	0
 12302  00160E  6E01               	movwf	?i2___fttol,c
 12303  001610  0E00               	movlw	0
 12304  001612  6E02               	movwf	?i2___fttol+1,c
 12305  001614  0E00               	movlw	0
 12306  001616  6E03               	movwf	?i2___fttol+2,c
 12307  001618  0E00               	movlw	0
 12308  00161A  6E04               	movwf	?i2___fttol+3,c
 12309  00161C  0012               	return	
 12310  00161E                     i2l1195:
 12311  00161E  90D8               	bcf	status,0,c
 12312  001620  320E               	rrcf	i2___fttol@lval+3,f,c
 12313  001622  320D               	rrcf	i2___fttol@lval+2,f,c
 12314  001624  320C               	rrcf	i2___fttol@lval+1,f,c
 12315  001626  320B               	rrcf	i2___fttol@lval,f,c
 12316  001628  3E0F               	incfsz	i2___fttol@exp1,f,c
 12317  00162A  D7F9               	goto	i2l1195
 12318  00162C  D015               	goto	i2u352_40
 12319  00162E                     i2l1194:
 12320  00162E  0E17               	movlw	23
 12321  001630  640F               	cpfsgt	i2___fttol@exp1,c
 12322  001632  D00F               	goto	i2l1200
 12323  001634  0E00               	movlw	0
 12324  001636  6E01               	movwf	?i2___fttol,c
 12325  001638  0E00               	movlw	0
 12326  00163A  6E02               	movwf	?i2___fttol+1,c
 12327  00163C  0E00               	movlw	0
 12328  00163E  6E03               	movwf	?i2___fttol+2,c
 12329  001640  0E00               	movlw	0
 12330  001642  6E04               	movwf	?i2___fttol+3,c
 12331  001644  0012               	return	
 12332  001646  90D8               	bcf	status,0,c
 12333  001648  360B               	rlcf	i2___fttol@lval,f,c
 12334  00164A  360C               	rlcf	i2___fttol@lval+1,f,c
 12335  00164C  360D               	rlcf	i2___fttol@lval+2,f,c
 12336  00164E  360E               	rlcf	i2___fttol@lval+3,f,c
 12337  001650  060F               	decf	i2___fttol@exp1,f,c
 12338  001652                     i2l1200:
 12339  001652  500F               	movf	i2___fttol@exp1,w,c
 12340  001654  A4D8               	btfss	status,2,c
 12341  001656  D7F7               	goto	i2l1201
 12342  001658                     i2u352_40:
 12343  001658  500A               	movf	i2___fttol@sign1,w,c
 12344  00165A  B4D8               	btfsc	status,2,c
 12345  00165C  D008               	goto	i2l1203
 12346  00165E  1E0E               	comf	i2___fttol@lval+3,f,c
 12347  001660  1E0D               	comf	i2___fttol@lval+2,f,c
 12348  001662  1E0C               	comf	i2___fttol@lval+1,f,c
 12349  001664  6C0B               	negf	i2___fttol@lval,c
 12350  001666  0E00               	movlw	0
 12351  001668  220C               	addwfc	i2___fttol@lval+1,f,c
 12352  00166A  220D               	addwfc	i2___fttol@lval+2,f,c
 12353  00166C  220E               	addwfc	i2___fttol@lval+3,f,c
 12354  00166E                     i2l1203:
 12355  00166E  C00B  F001         	movff	i2___fttol@lval,?i2___fttol
 12356  001672  C00C  F002         	movff	i2___fttol@lval+1,?i2___fttol+1
 12357  001676  C00D  F003         	movff	i2___fttol@lval+2,?i2___fttol+2
 12358  00167A  C00E  F004         	movff	i2___fttol@lval+3,?i2___fttol+3
 12359  00167E  0012               	return	
 12360  001680                     __end_ofi2___fttol:
 12361                           	opt stack 0
 12362                           tosu	equ	0xFFF
 12363                           tosh	equ	0xFFE
 12364                           tosl	equ	0xFFD
 12365                           pclatu	equ	0xFFB
 12366                           pclath	equ	0xFFA
 12367                           tblptru	equ	0xFF8
 12368                           tblptrh	equ	0xFF7
 12369                           tblptrl	equ	0xFF6
 12370                           tablat	equ	0xFF5
 12371                           prodh	equ	0xFF4
 12372                           prodl	equ	0xFF3
 12373                           intcon	equ	0xFF2
 12374                           indf0	equ	0xFEF
 12375                           postinc0	equ	0xFEE
 12376                           fsr0h	equ	0xFEA
 12377                           fsr0l	equ	0xFE9
 12378                           wreg	equ	0xFE8
 12379                           postdec1	equ	0xFE5
 12380                           fsr1h	equ	0xFE2
 12381                           fsr1l	equ	0xFE1
 12382                           indf2	equ	0xFDF
 12383                           fsr2h	equ	0xFDA
 12384                           fsr2l	equ	0xFD9
 12385                           status	equ	0xFD8
 12386                           
 12387 ;; *************** function i2___ftmul *****************
 12388 ;; Defined at:
 12389 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 12390 ;; Parameters:    Size  Location     Type
 12391 ;;  f1              3   23[COMRAM] float 
 12392 ;;  f2              3   26[COMRAM] float 
 12393 ;; Auto vars:     Size  Location     Type
 12394 ;;  __ftmul         3   33[COMRAM] unsigned um
 12395 ;;  __ftmul         1   37[COMRAM] unsigned char 
 12396 ;;  __ftmul         1   36[COMRAM] unsigned char 
 12397 ;;  __ftmul         1   32[COMRAM] unsigned char 
 12398 ;; Return value:  Size  Location     Type
 12399 ;;                  3   23[COMRAM] float 
 12400 ;; Registers used:
 12401 ;;		wreg, status,2, status,0, cstack
 12402 ;; Tracked objects:
 12403 ;;		On entry : 0/0
 12404 ;;		On exit  : 0/0
 12405 ;;		Unchanged: 0/0
 12406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12407 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12408 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12409 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12410 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12411 ;;Total ram usage:       15 bytes
 12412 ;; Hardware stack levels used:    1
 12413 ;; Hardware stack levels required when called:    1
 12414 ;; This function calls:
 12415 ;;		i2___ftpack
 12416 ;; This function is called by:
 12417 ;;		i2_Set_Colors
 12418 ;; This function uses a non-reentrant model
 12419 ;;
 12420                           
 12421                           	psect	text71
 12422  001680                     __ptext71:
 12423                           	opt stack 0
 12424  001680                     i2___ftmul:
 12425                           	opt stack 17
 12426                           
 12427                           ;incstack = 0
 12428  001680  C01A  F01E         	movff	i2___ftmul@f1+2,??i2___ftmul
 12429  001684  6A1F               	clrf	(??i2___ftmul+1)& (0+255),c
 12430  001686  6A20               	clrf	(??i2___ftmul+2)& (0+255),c
 12431  001688  3419               	rlcf	i2___ftmul@f1+1,w,c
 12432  00168A  361E               	rlcf	??i2___ftmul& (0+255),f,c
 12433  00168C  E301               	bnc	u340_41
 12434  00168E  801F               	bsf	(??i2___ftmul+1)& (0+255),0,c
 12435  001690                     u340_41:
 12436  001690  501E               	movf	??i2___ftmul,w,c
 12437  001692  6E21               	movwf	i2___ftmul@exp,c
 12438  001694  5021               	movf	i2___ftmul@exp,w,c
 12439  001696  A4D8               	btfss	status,2,c
 12440  001698  D007               	goto	i2l1171
 12441  00169A  0E00               	movlw	0
 12442  00169C  6E18               	movwf	?i2___ftmul,c
 12443  00169E  0E00               	movlw	0
 12444  0016A0  6E19               	movwf	?i2___ftmul+1,c
 12445  0016A2  0E00               	movlw	0
 12446  0016A4  6E1A               	movwf	?i2___ftmul+2,c
 12447  0016A6  0012               	return	
 12448  0016A8                     i2l1171:
 12449  0016A8  C01D  F01E         	movff	i2___ftmul@f2+2,??i2___ftmul
 12450  0016AC  6A1F               	clrf	(??i2___ftmul+1)& (0+255),c
 12451  0016AE  6A20               	clrf	(??i2___ftmul+2)& (0+255),c
 12452  0016B0  341C               	rlcf	i2___ftmul@f2+1,w,c
 12453  0016B2  361E               	rlcf	??i2___ftmul& (0+255),f,c
 12454  0016B4  E301               	bnc	u342_41
 12455  0016B6  801F               	bsf	(??i2___ftmul+1)& (0+255),0,c
 12456  0016B8                     u342_41:
 12457  0016B8  501E               	movf	??i2___ftmul,w,c
 12458  0016BA  6E26               	movwf	i2___ftmul@sign,c
 12459  0016BC  5026               	movf	i2___ftmul@sign,w,c
 12460  0016BE  A4D8               	btfss	status,2,c
 12461  0016C0  D007               	goto	i2l1173
 12462  0016C2  0E00               	movlw	0
 12463  0016C4  6E18               	movwf	?i2___ftmul,c
 12464  0016C6  0E00               	movlw	0
 12465  0016C8  6E19               	movwf	?i2___ftmul+1,c
 12466  0016CA  0E00               	movlw	0
 12467  0016CC  6E1A               	movwf	?i2___ftmul+2,c
 12468  0016CE  0012               	return	
 12469  0016D0                     i2l1173:
 12470  0016D0  5026               	movf	i2___ftmul@sign,w,c
 12471  0016D2  0F7B               	addlw	123
 12472  0016D4  2621               	addwf	i2___ftmul@exp,f,c
 12473  0016D6  C01A  F026         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 12474  0016DA  501D               	movf	i2___ftmul@f2+2,w,c
 12475  0016DC  1A26               	xorwf	i2___ftmul@sign,f,c
 12476  0016DE  0E80               	movlw	128
 12477  0016E0  1626               	andwf	i2___ftmul@sign,f,c
 12478  0016E2  8E19               	bsf	i2___ftmul@f1+1,7,c
 12479  0016E4  8E1C               	bsf	i2___ftmul@f2+1,7,c
 12480  0016E6  0EFF               	movlw	255
 12481  0016E8  161B               	andwf	i2___ftmul@f2,f,c
 12482  0016EA  0EFF               	movlw	255
 12483  0016EC  161C               	andwf	i2___ftmul@f2+1,f,c
 12484  0016EE  0E00               	movlw	0
 12485  0016F0  161D               	andwf	i2___ftmul@f2+2,f,c
 12486  0016F2  0E00               	movlw	0
 12487  0016F4  6E22               	movwf	i2___ftmul@f3_as_product,c
 12488  0016F6  0E00               	movlw	0
 12489  0016F8  6E23               	movwf	i2___ftmul@f3_as_product+1,c
 12490  0016FA  0E00               	movlw	0
 12491  0016FC  6E24               	movwf	i2___ftmul@f3_as_product+2,c
 12492  0016FE  0E07               	movlw	7
 12493  001700  6E25               	movwf	i2___ftmul@cntr,c
 12494  001702  A018               	btfss	i2___ftmul@f1,0,c
 12495  001704  D006               	goto	i2l1175
 12496  001706  501B               	movf	i2___ftmul@f2,w,c
 12497  001708  2622               	addwf	i2___ftmul@f3_as_product,f,c
 12498  00170A  501C               	movf	i2___ftmul@f2+1,w,c
 12499  00170C  2223               	addwfc	i2___ftmul@f3_as_product+1,f,c
 12500  00170E  501D               	movf	i2___ftmul@f2+2,w,c
 12501  001710  2224               	addwfc	i2___ftmul@f3_as_product+2,f,c
 12502  001712                     i2l1175:
 12503  001712  90D8               	bcf	status,0,c
 12504  001714  321A               	rrcf	i2___ftmul@f1+2,f,c
 12505  001716  3219               	rrcf	i2___ftmul@f1+1,f,c
 12506  001718  3218               	rrcf	i2___ftmul@f1,f,c
 12507  00171A  90D8               	bcf	status,0,c
 12508  00171C  361B               	rlcf	i2___ftmul@f2,f,c
 12509  00171E  361C               	rlcf	i2___ftmul@f2+1,f,c
 12510  001720  361D               	rlcf	i2___ftmul@f2+2,f,c
 12511  001722  2E25               	decfsz	i2___ftmul@cntr,f,c
 12512  001724  D7EE               	goto	i2l1174
 12513  001726  0E09               	movlw	9
 12514  001728  6E25               	movwf	i2___ftmul@cntr,c
 12515  00172A  A018               	btfss	i2___ftmul@f1,0,c
 12516  00172C  D006               	goto	i2l1178
 12517  00172E  501B               	movf	i2___ftmul@f2,w,c
 12518  001730  2622               	addwf	i2___ftmul@f3_as_product,f,c
 12519  001732  501C               	movf	i2___ftmul@f2+1,w,c
 12520  001734  2223               	addwfc	i2___ftmul@f3_as_product+1,f,c
 12521  001736  501D               	movf	i2___ftmul@f2+2,w,c
 12522  001738  2224               	addwfc	i2___ftmul@f3_as_product+2,f,c
 12523  00173A                     i2l1178:
 12524  00173A  90D8               	bcf	status,0,c
 12525  00173C  321A               	rrcf	i2___ftmul@f1+2,f,c
 12526  00173E  3219               	rrcf	i2___ftmul@f1+1,f,c
 12527  001740  3218               	rrcf	i2___ftmul@f1,f,c
 12528  001742  90D8               	bcf	status,0,c
 12529  001744  3224               	rrcf	i2___ftmul@f3_as_product+2,f,c
 12530  001746  3223               	rrcf	i2___ftmul@f3_as_product+1,f,c
 12531  001748  3222               	rrcf	i2___ftmul@f3_as_product,f,c
 12532  00174A  2E25               	decfsz	i2___ftmul@cntr,f,c
 12533  00174C  D7EE               	goto	i2l1177
 12534  00174E  C022  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 12535  001752  C023  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 12536  001756  C024  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 12537  00175A  C021  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 12538  00175E  C026  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 12539  001762  EC64  F00D         	call	i2___ftpack	;wreg free
 12540  001766  C001  F018         	movff	?i2___ftpack,?i2___ftmul
 12541  00176A  C002  F019         	movff	?i2___ftpack+1,?i2___ftmul+1
 12542  00176E  C003  F01A         	movff	?i2___ftpack+2,?i2___ftmul+2
 12543  001772  0012               	return	
 12544  001774                     __end_ofi2___ftmul:
 12545                           	opt stack 0
 12546                           tosu	equ	0xFFF
 12547                           tosh	equ	0xFFE
 12548                           tosl	equ	0xFFD
 12549                           pclatu	equ	0xFFB
 12550                           pclath	equ	0xFFA
 12551                           tblptru	equ	0xFF8
 12552                           tblptrh	equ	0xFF7
 12553                           tblptrl	equ	0xFF6
 12554                           tablat	equ	0xFF5
 12555                           prodh	equ	0xFF4
 12556                           prodl	equ	0xFF3
 12557                           intcon	equ	0xFF2
 12558                           indf0	equ	0xFEF
 12559                           postinc0	equ	0xFEE
 12560                           fsr0h	equ	0xFEA
 12561                           fsr0l	equ	0xFE9
 12562                           wreg	equ	0xFE8
 12563                           postdec1	equ	0xFE5
 12564                           fsr1h	equ	0xFE2
 12565                           fsr1l	equ	0xFE1
 12566                           indf2	equ	0xFDF
 12567                           fsr2h	equ	0xFDA
 12568                           fsr2l	equ	0xFD9
 12569                           status	equ	0xFD8
 12570                           
 12571 ;; *************** function i2___ftdiv *****************
 12572 ;; Defined at:
 12573 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 12574 ;; Parameters:    Size  Location     Type
 12575 ;;  f1              3    8[COMRAM] float 
 12576 ;;  f2              3   11[COMRAM] float 
 12577 ;; Auto vars:     Size  Location     Type
 12578 ;;  __ftdiv         3   18[COMRAM] float 
 12579 ;;  __ftdiv         1   22[COMRAM] unsigned char 
 12580 ;;  __ftdiv         1   21[COMRAM] unsigned char 
 12581 ;;  __ftdiv         1   17[COMRAM] unsigned char 
 12582 ;; Return value:  Size  Location     Type
 12583 ;;                  3    8[COMRAM] float 
 12584 ;; Registers used:
 12585 ;;		wreg, status,2, status,0, cstack
 12586 ;; Tracked objects:
 12587 ;;		On entry : 0/0
 12588 ;;		On exit  : 0/0
 12589 ;;		Unchanged: 0/0
 12590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12591 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12592 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12593 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12594 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12595 ;;Total ram usage:       15 bytes
 12596 ;; Hardware stack levels used:    1
 12597 ;; Hardware stack levels required when called:    1
 12598 ;; This function calls:
 12599 ;;		i2___ftpack
 12600 ;; This function is called by:
 12601 ;;		i2_Set_Colors
 12602 ;; This function uses a non-reentrant model
 12603 ;;
 12604                           
 12605                           	psect	text72
 12606  00185C                     __ptext72:
 12607                           	opt stack 0
 12608  00185C                     i2___ftdiv:
 12609                           	opt stack 17
 12610                           
 12611                           ;incstack = 0
 12612  00185C  C00B  F00F         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 12613  001860  6A10               	clrf	(??i2___ftdiv+1)& (0+255),c
 12614  001862  6A11               	clrf	(??i2___ftdiv+2)& (0+255),c
 12615  001864  340A               	rlcf	i2___ftdiv@f1+1,w,c
 12616  001866  360F               	rlcf	??i2___ftdiv& (0+255),f,c
 12617  001868  E301               	bnc	u335_41
 12618  00186A  8010               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 12619  00186C                     u335_41:
 12620  00186C  500F               	movf	??i2___ftdiv,w,c
 12621  00186E  6E16               	movwf	i2___ftdiv@exp,c
 12622  001870  5016               	movf	i2___ftdiv@exp,w,c
 12623  001872  A4D8               	btfss	status,2,c
 12624  001874  D007               	goto	i2l1156
 12625  001876  0E00               	movlw	0
 12626  001878  6E09               	movwf	?i2___ftdiv,c
 12627  00187A  0E00               	movlw	0
 12628  00187C  6E0A               	movwf	?i2___ftdiv+1,c
 12629  00187E  0E00               	movlw	0
 12630  001880  6E0B               	movwf	?i2___ftdiv+2,c
 12631  001882  0012               	return	
 12632  001884                     i2l1156:
 12633  001884  C00E  F00F         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 12634  001888  6A10               	clrf	(??i2___ftdiv+1)& (0+255),c
 12635  00188A  6A11               	clrf	(??i2___ftdiv+2)& (0+255),c
 12636  00188C  340D               	rlcf	i2___ftdiv@f2+1,w,c
 12637  00188E  360F               	rlcf	??i2___ftdiv& (0+255),f,c
 12638  001890  E301               	bnc	u337_41
 12639  001892  8010               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 12640  001894                     u337_41:
 12641  001894  500F               	movf	??i2___ftdiv,w,c
 12642  001896  6E17               	movwf	i2___ftdiv@sign,c
 12643  001898  5017               	movf	i2___ftdiv@sign,w,c
 12644  00189A  A4D8               	btfss	status,2,c
 12645  00189C  D007               	goto	i2l1158
 12646  00189E  0E00               	movlw	0
 12647  0018A0  6E09               	movwf	?i2___ftdiv,c
 12648  0018A2  0E00               	movlw	0
 12649  0018A4  6E0A               	movwf	?i2___ftdiv+1,c
 12650  0018A6  0E00               	movlw	0
 12651  0018A8  6E0B               	movwf	?i2___ftdiv+2,c
 12652  0018AA  0012               	return	
 12653  0018AC                     i2l1158:
 12654  0018AC  0E00               	movlw	0
 12655  0018AE  6E13               	movwf	i2___ftdiv@f3,c
 12656  0018B0  0E00               	movlw	0
 12657  0018B2  6E14               	movwf	i2___ftdiv@f3+1,c
 12658  0018B4  0E00               	movlw	0
 12659  0018B6  6E15               	movwf	i2___ftdiv@f3+2,c
 12660  0018B8  5017               	movf	i2___ftdiv@sign,w,c
 12661  0018BA  0F89               	addlw	137
 12662  0018BC  5E16               	subwf	i2___ftdiv@exp,f,c
 12663  0018BE  C00B  F017         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 12664  0018C2  500E               	movf	i2___ftdiv@f2+2,w,c
 12665  0018C4  1A17               	xorwf	i2___ftdiv@sign,f,c
 12666  0018C6  0E80               	movlw	128
 12667  0018C8  1617               	andwf	i2___ftdiv@sign,f,c
 12668  0018CA  8E0A               	bsf	i2___ftdiv@f1+1,7,c
 12669  0018CC  0EFF               	movlw	255
 12670  0018CE  1609               	andwf	i2___ftdiv@f1,f,c
 12671  0018D0  0EFF               	movlw	255
 12672  0018D2  160A               	andwf	i2___ftdiv@f1+1,f,c
 12673  0018D4  0E00               	movlw	0
 12674  0018D6  160B               	andwf	i2___ftdiv@f1+2,f,c
 12675  0018D8  8E0D               	bsf	i2___ftdiv@f2+1,7,c
 12676  0018DA  0EFF               	movlw	255
 12677  0018DC  160C               	andwf	i2___ftdiv@f2,f,c
 12678  0018DE  0EFF               	movlw	255
 12679  0018E0  160D               	andwf	i2___ftdiv@f2+1,f,c
 12680  0018E2  0E00               	movlw	0
 12681  0018E4  160E               	andwf	i2___ftdiv@f2+2,f,c
 12682  0018E6  0E18               	movlw	24
 12683  0018E8  6E12               	movwf	i2___ftdiv@cntr,c
 12684  0018EA  90D8               	bcf	status,0,c
 12685  0018EC  3613               	rlcf	i2___ftdiv@f3,f,c
 12686  0018EE  3614               	rlcf	i2___ftdiv@f3+1,f,c
 12687  0018F0  3615               	rlcf	i2___ftdiv@f3+2,f,c
 12688  0018F2  500C               	movf	i2___ftdiv@f2,w,c
 12689  0018F4  5C09               	subwf	i2___ftdiv@f1,w,c
 12690  0018F6  500D               	movf	i2___ftdiv@f2+1,w,c
 12691  0018F8  580A               	subwfb	i2___ftdiv@f1+1,w,c
 12692  0018FA  500E               	movf	i2___ftdiv@f2+2,w,c
 12693  0018FC  580B               	subwfb	i2___ftdiv@f1+2,w,c
 12694  0018FE  A0D8               	btfss	status,0,c
 12695  001900  D007               	goto	i2l1160
 12696  001902  500C               	movf	i2___ftdiv@f2,w,c
 12697  001904  5E09               	subwf	i2___ftdiv@f1,f,c
 12698  001906  500D               	movf	i2___ftdiv@f2+1,w,c
 12699  001908  5A0A               	subwfb	i2___ftdiv@f1+1,f,c
 12700  00190A  500E               	movf	i2___ftdiv@f2+2,w,c
 12701  00190C  5A0B               	subwfb	i2___ftdiv@f1+2,f,c
 12702  00190E  8013               	bsf	i2___ftdiv@f3,0,c
 12703  001910                     i2l1160:
 12704  001910  90D8               	bcf	status,0,c
 12705  001912  3609               	rlcf	i2___ftdiv@f1,f,c
 12706  001914  360A               	rlcf	i2___ftdiv@f1+1,f,c
 12707  001916  360B               	rlcf	i2___ftdiv@f1+2,f,c
 12708  001918  2E12               	decfsz	i2___ftdiv@cntr,f,c
 12709  00191A  D7E7               	goto	i2l1159
 12710  00191C  C013  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 12711  001920  C014  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 12712  001924  C015  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 12713  001928  C016  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 12714  00192C  C017  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 12715  001930  EC64  F00D         	call	i2___ftpack	;wreg free
 12716  001934  C001  F009         	movff	?i2___ftpack,?i2___ftdiv
 12717  001938  C002  F00A         	movff	?i2___ftpack+1,?i2___ftdiv+1
 12718  00193C  C003  F00B         	movff	?i2___ftpack+2,?i2___ftdiv+2
 12719  001940  0012               	return	
 12720  001942                     __end_ofi2___ftdiv:
 12721                           	opt stack 0
 12722                           tosu	equ	0xFFF
 12723                           tosh	equ	0xFFE
 12724                           tosl	equ	0xFFD
 12725                           pclatu	equ	0xFFB
 12726                           pclath	equ	0xFFA
 12727                           tblptru	equ	0xFF8
 12728                           tblptrh	equ	0xFF7
 12729                           tblptrl	equ	0xFF6
 12730                           tablat	equ	0xFF5
 12731                           prodh	equ	0xFF4
 12732                           prodl	equ	0xFF3
 12733                           intcon	equ	0xFF2
 12734                           indf0	equ	0xFEF
 12735                           postinc0	equ	0xFEE
 12736                           fsr0h	equ	0xFEA
 12737                           fsr0l	equ	0xFE9
 12738                           wreg	equ	0xFE8
 12739                           postdec1	equ	0xFE5
 12740                           fsr1h	equ	0xFE2
 12741                           fsr1l	equ	0xFE1
 12742                           indf2	equ	0xFDF
 12743                           fsr2h	equ	0xFDA
 12744                           fsr2l	equ	0xFD9
 12745                           status	equ	0xFD8
 12746                           
 12747 ;; *************** function i2___awtoft *****************
 12748 ;; Defined at:
 12749 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 12750 ;; Parameters:    Size  Location     Type
 12751 ;;  c               2    8[COMRAM] int 
 12752 ;; Auto vars:     Size  Location     Type
 12753 ;;  __awtoft        1   11[COMRAM] unsigned char 
 12754 ;; Return value:  Size  Location     Type
 12755 ;;                  3    8[COMRAM] float 
 12756 ;; Registers used:
 12757 ;;		wreg, status,2, status,0, cstack
 12758 ;; Tracked objects:
 12759 ;;		On entry : 0/0
 12760 ;;		On exit  : 0/0
 12761 ;;		Unchanged: 0/0
 12762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12763 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12766 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12767 ;;Total ram usage:        4 bytes
 12768 ;; Hardware stack levels used:    1
 12769 ;; Hardware stack levels required when called:    1
 12770 ;; This function calls:
 12771 ;;		i2___ftpack
 12772 ;; This function is called by:
 12773 ;;		i2_Set_Colors
 12774 ;; This function uses a non-reentrant model
 12775 ;;
 12776                           
 12777                           	psect	text73
 12778  002F2E                     __ptext73:
 12779                           	opt stack 0
 12780  002F2E                     i2___awtoft:
 12781                           	opt stack 17
 12782                           
 12783                           ;incstack = 0
 12784  002F2E  0E00               	movlw	0
 12785  002F30  6E0C               	movwf	i2___awtoft@sign,c
 12786  002F32  AE0A               	btfss	i2___awtoft@c+1,7,c
 12787  002F34  D006               	goto	i2l1073
 12788  002F36  6C09               	negf	i2___awtoft@c,c
 12789  002F38  1E0A               	comf	i2___awtoft@c+1,f,c
 12790  002F3A  B0D8               	btfsc	status,0,c
 12791  002F3C  2A0A               	incf	i2___awtoft@c+1,f,c
 12792  002F3E  0E01               	movlw	1
 12793  002F40  6E0C               	movwf	i2___awtoft@sign,c
 12794  002F42                     i2l1073:
 12795  002F42  C009  F001         	movff	i2___awtoft@c,i2___ftpack@arg
 12796  002F46  C00A  F002         	movff	i2___awtoft@c+1,i2___ftpack@arg+1
 12797  002F4A  6A03               	clrf	i2___ftpack@arg+2,c
 12798  002F4C  0E8E               	movlw	142
 12799  002F4E  6E04               	movwf	i2___ftpack@exp,c
 12800  002F50  C00C  F005         	movff	i2___awtoft@sign,i2___ftpack@sign
 12801  002F54  EC64  F00D         	call	i2___ftpack	;wreg free
 12802  002F58  C001  F009         	movff	?i2___ftpack,?i2___awtoft
 12803  002F5C  C002  F00A         	movff	?i2___ftpack+1,?i2___awtoft+1
 12804  002F60  C003  F00B         	movff	?i2___ftpack+2,?i2___awtoft+2
 12805  002F64  0012               	return	
 12806  002F66                     __end_ofi2___awtoft:
 12807                           	opt stack 0
 12808                           tosu	equ	0xFFF
 12809                           tosh	equ	0xFFE
 12810                           tosl	equ	0xFFD
 12811                           pclatu	equ	0xFFB
 12812                           pclath	equ	0xFFA
 12813                           tblptru	equ	0xFF8
 12814                           tblptrh	equ	0xFF7
 12815                           tblptrl	equ	0xFF6
 12816                           tablat	equ	0xFF5
 12817                           prodh	equ	0xFF4
 12818                           prodl	equ	0xFF3
 12819                           intcon	equ	0xFF2
 12820                           indf0	equ	0xFEF
 12821                           postinc0	equ	0xFEE
 12822                           fsr0h	equ	0xFEA
 12823                           fsr0l	equ	0xFE9
 12824                           wreg	equ	0xFE8
 12825                           postdec1	equ	0xFE5
 12826                           fsr1h	equ	0xFE2
 12827                           fsr1l	equ	0xFE1
 12828                           indf2	equ	0xFDF
 12829                           fsr2h	equ	0xFDA
 12830                           fsr2l	equ	0xFD9
 12831                           status	equ	0xFD8
 12832                           
 12833 ;; *************** function i2_PWM4_LoadDutyValue *****************
 12834 ;; Defined at:
 12835 ;;		line 80 in file "mcc_generated_files/pwm4.c"
 12836 ;; Parameters:    Size  Location     Type
 12837 ;;  dutyValue       2   15[COMRAM] unsigned int 
 12838 ;; Auto vars:     Size  Location     Type
 12839 ;;		None
 12840 ;; Return value:  Size  Location     Type
 12841 ;;                  1    wreg      void 
 12842 ;; Registers used:
 12843 ;;		wreg, status,2, status,0
 12844 ;; Tracked objects:
 12845 ;;		On entry : 0/0
 12846 ;;		On exit  : 0/0
 12847 ;;		Unchanged: 0/0
 12848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12851 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12852 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12853 ;;Total ram usage:        4 bytes
 12854 ;; Hardware stack levels used:    1
 12855 ;; This function calls:
 12856 ;;		Nothing
 12857 ;; This function is called by:
 12858 ;;		i2_Set_Colors
 12859 ;; This function uses a non-reentrant model
 12860 ;;
 12861                           
 12862                           	psect	text74
 12863  002FCE                     __ptext74:
 12864                           	opt stack 0
 12865  002FCE                     i2_PWM4_LoadDutyValue:
 12866                           	opt stack 18
 12867                           
 12868                           ;pwm4.c: 83: CCPR4L = ((dutyValue & 0x03FC)>>2);
 12869                           
 12870                           ;incstack = 0
 12871  002FCE  C010  F012         	movff	i2PWM4_LoadDutyValue@dutyValue,??i2_PWM4_LoadDutyValue
 12872  002FD2  C011  F013         	movff	i2PWM4_LoadDutyValue@dutyValue+1,??i2_PWM4_LoadDutyValue+1
 12873  002FD6  90D8               	bcf	status,0,c
 12874  002FD8  3213               	rrcf	??i2_PWM4_LoadDutyValue+1,f,c
 12875  002FDA  3212               	rrcf	??i2_PWM4_LoadDutyValue,f,c
 12876  002FDC  90D8               	bcf	status,0,c
 12877  002FDE  3213               	rrcf	??i2_PWM4_LoadDutyValue+1,f,c
 12878  002FE0  3212               	rrcf	??i2_PWM4_LoadDutyValue,f,c
 12879  002FE2  5012               	movf	??i2_PWM4_LoadDutyValue,w,c
 12880  002FE4  010F               	movlb	15	; () banked
 12881  002FE6  6F4B               	movwf	75,b	;volatile
 12882                           
 12883                           ;pwm4.c: 86: CCP4CON = ((uint8_t)(CCP4CON & 0xCF) | ((dutyValue & 0x0003)<<4));
 12884  002FE8  C010  F012         	movff	i2PWM4_LoadDutyValue@dutyValue,??i2_PWM4_LoadDutyValue
 12885  002FEC  0E03               	movlw	3
 12886  002FEE  1612               	andwf	??i2_PWM4_LoadDutyValue,f,c
 12887  002FF0  3A12               	swapf	??i2_PWM4_LoadDutyValue,f,c
 12888  002FF2  0EF0               	movlw	240
 12889  002FF4  1612               	andwf	??i2_PWM4_LoadDutyValue,f,c
 12890  002FF6  514A               	movf	74,w,b	;volatile
 12891  002FF8  0BCF               	andlw	207
 12892  002FFA  1012               	iorwf	??i2_PWM4_LoadDutyValue,w,c
 12893  002FFC  6F4A               	movwf	74,b	;volatile
 12894                           
 12895                           ; BSR set to: 15
 12896  002FFE  0012               	return		;funcret
 12897  003000                     __end_ofi2_PWM4_LoadDutyValue:
 12898                           	opt stack 0
 12899                           tosu	equ	0xFFF
 12900                           tosh	equ	0xFFE
 12901                           tosl	equ	0xFFD
 12902                           pclatu	equ	0xFFB
 12903                           pclath	equ	0xFFA
 12904                           tblptru	equ	0xFF8
 12905                           tblptrh	equ	0xFF7
 12906                           tblptrl	equ	0xFF6
 12907                           tablat	equ	0xFF5
 12908                           prodh	equ	0xFF4
 12909                           prodl	equ	0xFF3
 12910                           intcon	equ	0xFF2
 12911                           indf0	equ	0xFEF
 12912                           postinc0	equ	0xFEE
 12913                           fsr0h	equ	0xFEA
 12914                           fsr0l	equ	0xFE9
 12915                           wreg	equ	0xFE8
 12916                           postdec1	equ	0xFE5
 12917                           fsr1h	equ	0xFE2
 12918                           fsr1l	equ	0xFE1
 12919                           indf2	equ	0xFDF
 12920                           fsr2h	equ	0xFDA
 12921                           fsr2l	equ	0xFD9
 12922                           status	equ	0xFD8
 12923                           
 12924 ;; *************** function i2_PWM3_LoadDutyValue *****************
 12925 ;; Defined at:
 12926 ;;		line 80 in file "mcc_generated_files/pwm3.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;  dutyValue       2   15[COMRAM] unsigned int 
 12929 ;; Auto vars:     Size  Location     Type
 12930 ;;		None
 12931 ;; Return value:  Size  Location     Type
 12932 ;;                  1    wreg      void 
 12933 ;; Registers used:
 12934 ;;		wreg, status,2, status,0
 12935 ;; Tracked objects:
 12936 ;;		On entry : 0/0
 12937 ;;		On exit  : 0/0
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12943 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12944 ;;Total ram usage:        4 bytes
 12945 ;; Hardware stack levels used:    1
 12946 ;; This function calls:
 12947 ;;		Nothing
 12948 ;; This function is called by:
 12949 ;;		i2_Set_Colors
 12950 ;; This function uses a non-reentrant model
 12951 ;;
 12952                           
 12953                           	psect	text75
 12954  003000                     __ptext75:
 12955                           	opt stack 0
 12956  003000                     i2_PWM3_LoadDutyValue:
 12957                           	opt stack 18
 12958                           
 12959                           ;pwm3.c: 83: CCPR3L = ((dutyValue & 0x03FC)>>2);
 12960                           
 12961                           ; BSR set to: 15
 12962                           ;incstack = 0
 12963  003000  C010  F012         	movff	i2PWM3_LoadDutyValue@dutyValue,??i2_PWM3_LoadDutyValue
 12964  003004  C011  F013         	movff	i2PWM3_LoadDutyValue@dutyValue+1,??i2_PWM3_LoadDutyValue+1
 12965  003008  90D8               	bcf	status,0,c
 12966  00300A  3213               	rrcf	??i2_PWM3_LoadDutyValue+1,f,c
 12967  00300C  3212               	rrcf	??i2_PWM3_LoadDutyValue,f,c
 12968  00300E  90D8               	bcf	status,0,c
 12969  003010  3213               	rrcf	??i2_PWM3_LoadDutyValue+1,f,c
 12970  003012  3212               	rrcf	??i2_PWM3_LoadDutyValue,f,c
 12971  003014  5012               	movf	??i2_PWM3_LoadDutyValue,w,c
 12972  003016  010F               	movlb	15	; () banked
 12973  003018  6F4E               	movwf	78,b	;volatile
 12974                           
 12975                           ;pwm3.c: 86: CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue & 0x0003)<<4));
 12976  00301A  C010  F012         	movff	i2PWM3_LoadDutyValue@dutyValue,??i2_PWM3_LoadDutyValue
 12977  00301E  0E03               	movlw	3
 12978  003020  1612               	andwf	??i2_PWM3_LoadDutyValue,f,c
 12979  003022  3A12               	swapf	??i2_PWM3_LoadDutyValue,f,c
 12980  003024  0EF0               	movlw	240
 12981  003026  1612               	andwf	??i2_PWM3_LoadDutyValue,f,c
 12982  003028  514D               	movf	77,w,b	;volatile
 12983  00302A  0BCF               	andlw	207
 12984  00302C  1012               	iorwf	??i2_PWM3_LoadDutyValue,w,c
 12985  00302E  6F4D               	movwf	77,b	;volatile
 12986                           
 12987                           ; BSR set to: 15
 12988  003030  0012               	return		;funcret
 12989  003032                     __end_ofi2_PWM3_LoadDutyValue:
 12990                           	opt stack 0
 12991                           tosu	equ	0xFFF
 12992                           tosh	equ	0xFFE
 12993                           tosl	equ	0xFFD
 12994                           pclatu	equ	0xFFB
 12995                           pclath	equ	0xFFA
 12996                           tblptru	equ	0xFF8
 12997                           tblptrh	equ	0xFF7
 12998                           tblptrl	equ	0xFF6
 12999                           tablat	equ	0xFF5
 13000                           prodh	equ	0xFF4
 13001                           prodl	equ	0xFF3
 13002                           intcon	equ	0xFF2
 13003                           indf0	equ	0xFEF
 13004                           postinc0	equ	0xFEE
 13005                           fsr0h	equ	0xFEA
 13006                           fsr0l	equ	0xFE9
 13007                           wreg	equ	0xFE8
 13008                           postdec1	equ	0xFE5
 13009                           fsr1h	equ	0xFE2
 13010                           fsr1l	equ	0xFE1
 13011                           indf2	equ	0xFDF
 13012                           fsr2h	equ	0xFDA
 13013                           fsr2l	equ	0xFD9
 13014                           status	equ	0xFD8
 13015                           
 13016 ;; *************** function i2_PWM2_LoadDutyValue *****************
 13017 ;; Defined at:
 13018 ;;		line 80 in file "mcc_generated_files/pwm2.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;  dutyValue       2   15[COMRAM] unsigned int 
 13021 ;; Auto vars:     Size  Location     Type
 13022 ;;		None
 13023 ;; Return value:  Size  Location     Type
 13024 ;;                  1    wreg      void 
 13025 ;; Registers used:
 13026 ;;		wreg, status,2, status,0
 13027 ;; Tracked objects:
 13028 ;;		On entry : 0/0
 13029 ;;		On exit  : 0/0
 13030 ;;		Unchanged: 0/0
 13031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13034 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13035 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13036 ;;Total ram usage:        4 bytes
 13037 ;; Hardware stack levels used:    1
 13038 ;; This function calls:
 13039 ;;		Nothing
 13040 ;; This function is called by:
 13041 ;;		i2_Set_Colors
 13042 ;; This function uses a non-reentrant model
 13043 ;;
 13044                           
 13045                           	psect	text76
 13046  003032                     __ptext76:
 13047                           	opt stack 0
 13048  003032                     i2_PWM2_LoadDutyValue:
 13049                           	opt stack 18
 13050                           
 13051                           ;pwm2.c: 83: CCPR2L = ((dutyValue & 0x03FC)>>2);
 13052                           
 13053                           ; BSR set to: 15
 13054                           ;incstack = 0
 13055  003032  C010  F012         	movff	i2PWM2_LoadDutyValue@dutyValue,??i2_PWM2_LoadDutyValue
 13056  003036  C011  F013         	movff	i2PWM2_LoadDutyValue@dutyValue+1,??i2_PWM2_LoadDutyValue+1
 13057  00303A  90D8               	bcf	status,0,c
 13058  00303C  3213               	rrcf	??i2_PWM2_LoadDutyValue+1,f,c
 13059  00303E  3212               	rrcf	??i2_PWM2_LoadDutyValue,f,c
 13060  003040  90D8               	bcf	status,0,c
 13061  003042  3213               	rrcf	??i2_PWM2_LoadDutyValue+1,f,c
 13062  003044  3212               	rrcf	??i2_PWM2_LoadDutyValue,f,c
 13063  003046  5012               	movf	??i2_PWM2_LoadDutyValue,w,c
 13064  003048  010F               	movlb	15	; () banked
 13065  00304A  6F51               	movwf	81,b	;volatile
 13066                           
 13067                           ;pwm2.c: 86: CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4));
 13068  00304C  C010  F012         	movff	i2PWM2_LoadDutyValue@dutyValue,??i2_PWM2_LoadDutyValue
 13069  003050  0E03               	movlw	3
 13070  003052  1612               	andwf	??i2_PWM2_LoadDutyValue,f,c
 13071  003054  3A12               	swapf	??i2_PWM2_LoadDutyValue,f,c
 13072  003056  0EF0               	movlw	240
 13073  003058  1612               	andwf	??i2_PWM2_LoadDutyValue,f,c
 13074  00305A  5150               	movf	80,w,b	;volatile
 13075  00305C  0BCF               	andlw	207
 13076  00305E  1012               	iorwf	??i2_PWM2_LoadDutyValue,w,c
 13077  003060  6F50               	movwf	80,b	;volatile
 13078                           
 13079                           ; BSR set to: 15
 13080  003062  0012               	return		;funcret
 13081  003064                     __end_ofi2_PWM2_LoadDutyValue:
 13082                           	opt stack 0
 13083                           tosu	equ	0xFFF
 13084                           tosh	equ	0xFFE
 13085                           tosl	equ	0xFFD
 13086                           pclatu	equ	0xFFB
 13087                           pclath	equ	0xFFA
 13088                           tblptru	equ	0xFF8
 13089                           tblptrh	equ	0xFF7
 13090                           tblptrl	equ	0xFF6
 13091                           tablat	equ	0xFF5
 13092                           prodh	equ	0xFF4
 13093                           prodl	equ	0xFF3
 13094                           intcon	equ	0xFF2
 13095                           indf0	equ	0xFEF
 13096                           postinc0	equ	0xFEE
 13097                           fsr0h	equ	0xFEA
 13098                           fsr0l	equ	0xFE9
 13099                           wreg	equ	0xFE8
 13100                           postdec1	equ	0xFE5
 13101                           fsr1h	equ	0xFE2
 13102                           fsr1l	equ	0xFE1
 13103                           indf2	equ	0xFDF
 13104                           fsr2h	equ	0xFDA
 13105                           fsr2l	equ	0xFD9
 13106                           status	equ	0xFD8
 13107                           
 13108 ;; *************** function i2_GLCD_WriteString *****************
 13109 ;; Defined at:
 13110 ;;		line 70 in file "ks0108lib/KS0108.c"
 13111 ;; Parameters:    Size  Location     Type
 13112 ;;  stringToWrit    2   13[COMRAM] PTR unsigned char 
 13113 ;;		 -> STR_37(5), STR_36(4), STR_35(7), STR_34(4), 
 13114 ;;		 -> STR_33(8), STR_32(4), Draw_Start_Colors_Menu@display(10), STR_31(6), 
 13115 ;;		 -> STR_30(13), STR_29(5), STR_28(4), Draw_Brightness_Menu@display(10), 
 13116 ;;		 -> STR_27(13), STR_26(17), STR_25(5), STR_24(7), 
 13117 ;;		 -> STR_23(13), STR_22(7), Draw_runTime_Menu@display(10), STR_21(11), 
 13118 ;;		 -> STR_20(10), STR_19(4), STR_18(9), STR_17(4), 
 13119 ;;		 -> STR_16(10), STR_15(4), STR_14(9), STR_13(4), 
 13120 ;;		 -> STR_12(11), STR_11(5), STR_10(11), STR_9(4), 
 13121 ;;		 -> Initialize_Menus@display(20), STR_8(8), STR_7(7), STR_6(10), 
 13122 ;;		 -> STR_5(4), STR_4(4), STR_3(4), Start_Color_Menu_Function@display(10), 
 13123 ;;		 -> STR_2(5), Brightness_Menu_Function@display(10), STR_1(7), Run_Time_Menu_Function@display(10), 
 13124 ;; Auto vars:     Size  Location     Type
 13125 ;;		None
 13126 ;; Return value:  Size  Location     Type
 13127 ;;                  1    wreg      void 
 13128 ;; Registers used:
 13129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13130 ;; Tracked objects:
 13131 ;;		On entry : 0/0
 13132 ;;		On exit  : 0/0
 13133 ;;		Unchanged: 0/0
 13134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13138 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13139 ;;Total ram usage:        2 bytes
 13140 ;; Hardware stack levels used:    1
 13141 ;; Hardware stack levels required when called:    4
 13142 ;; This function calls:
 13143 ;;		i2_GLCD_WriteChar
 13144 ;; This function is called by:
 13145 ;;		_Run_Time_Menu_Function
 13146 ;;		_Brightness_Menu_Function
 13147 ;;		_Start_Color_Menu_Function
 13148 ;; This function uses a non-reentrant model
 13149 ;;
 13150                           
 13151                           	psect	text77
 13152  002A04                     __ptext77:
 13153                           	opt stack 0
 13154  002A04                     i2_GLCD_WriteString:
 13155                           	opt stack 15
 13156                           
 13157                           ;KS0108.c: 72: while(*stringToWrite)
 13158                           
 13159                           ; BSR set to: 15
 13160                           ;incstack = 0
 13161  002A04  D015               	goto	i2l637
 13162  002A06                     
 13163                           ;KS0108.c: 73: GLCD_WriteChar(*stringToWrite++);
 13164  002A06  C00E  FFF6         	movff	i2GLCD_WriteString@stringToWrite,tblptrl
 13165  002A0A  C00F  FFF7         	movff	i2GLCD_WriteString@stringToWrite+1,tblptrh
 13166  002A0E  0E00               	movlw	low (__mediumconst shr (0+16))
 13167  002A10  6EF8               	movwf	tblptru,c
 13168  002A12  0E0E               	movlw	(high __ramtop+-1)
 13169  002A14  64F7               	cpfsgt	tblptrh,c
 13170  002A16  D003               	bra	i2u410_47
 13171  002A18  0008               	tblrd		*
 13172  002A1A  50F5               	movf	tablat,w,c
 13173  002A1C  D005               	bra	i2u410_40
 13174  002A1E                     i2u410_47:
 13175  002A1E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13176  002A22  CFF7 FFEA          	movff	tblptrh,fsr0h
 13177  002A26  50EF               	movf	indf0,w,c
 13178  002A28                     i2u410_40:
 13179  002A28  ECD5  F015         	call	i2_GLCD_WriteChar
 13180  002A2C  4A0E               	infsnz	i2GLCD_WriteString@stringToWrite,f,c
 13181  002A2E  2A0F               	incf	i2GLCD_WriteString@stringToWrite+1,f,c
 13182  002A30                     i2l637:
 13183  002A30  C00E  FFF6         	movff	i2GLCD_WriteString@stringToWrite,tblptrl
 13184  002A34  C00F  FFF7         	movff	i2GLCD_WriteString@stringToWrite+1,tblptrh
 13185  002A38  0E00               	movlw	low (__mediumconst shr (0+16))
 13186  002A3A  6EF8               	movwf	tblptru,c
 13187  002A3C  0E0E               	movlw	(high __ramtop+-1)
 13188  002A3E  64F7               	cpfsgt	tblptrh,c
 13189  002A40  D003               	bra	i2u411_47
 13190  002A42  0008               	tblrd		*
 13191  002A44  50F5               	movf	tablat,w,c
 13192  002A46  D005               	bra	i2u411_40
 13193  002A48                     i2u411_47:
 13194  002A48  CFF6 FFE9          	movff	tblptrl,fsr0l
 13195  002A4C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13196  002A50  50EF               	movf	indf0,w,c
 13197  002A52                     i2u411_40:
 13198  002A52  0900               	iorlw	0
 13199  002A54  B4D8               	btfsc	status,2,c
 13200  002A56  0012               	return	
 13201  002A58  D7D6               	goto	i2l638
 13202  002A5A                     __end_ofi2_GLCD_WriteString:
 13203                           	opt stack 0
 13204                           tosu	equ	0xFFF
 13205                           tosh	equ	0xFFE
 13206                           tosl	equ	0xFFD
 13207                           pclatu	equ	0xFFB
 13208                           pclath	equ	0xFFA
 13209                           tblptru	equ	0xFF8
 13210                           tblptrh	equ	0xFF7
 13211                           tblptrl	equ	0xFF6
 13212                           tablat	equ	0xFF5
 13213                           prodh	equ	0xFF4
 13214                           prodl	equ	0xFF3
 13215                           intcon	equ	0xFF2
 13216                           indf0	equ	0xFEF
 13217                           postinc0	equ	0xFEE
 13218                           fsr0h	equ	0xFEA
 13219                           fsr0l	equ	0xFE9
 13220                           wreg	equ	0xFE8
 13221                           postdec1	equ	0xFE5
 13222                           fsr1h	equ	0xFE2
 13223                           fsr1l	equ	0xFE1
 13224                           indf2	equ	0xFDF
 13225                           fsr2h	equ	0xFDA
 13226                           fsr2l	equ	0xFD9
 13227                           status	equ	0xFD8
 13228                           
 13229 ;; *************** function i2_GLCD_WriteChar *****************
 13230 ;; Defined at:
 13231 ;;		line 56 in file "ks0108lib/KS0108.c"
 13232 ;; Parameters:    Size  Location     Type
 13233 ;;  charToWrite     1    wreg     unsigned char 
 13234 ;; Auto vars:     Size  Location     Type
 13235 ;;  charToWrite     1   10[COMRAM] unsigned char 
 13236 ;;  GLCD_WriteCh    2   11[COMRAM] int 
 13237 ;; Return value:  Size  Location     Type
 13238 ;;                  1    wreg      void 
 13239 ;; Registers used:
 13240 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13241 ;; Tracked objects:
 13242 ;;		On entry : 0/0
 13243 ;;		On exit  : 0/0
 13244 ;;		Unchanged: 0/0
 13245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13247 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13249 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13250 ;;Total ram usage:        3 bytes
 13251 ;; Hardware stack levels used:    1
 13252 ;; Hardware stack levels required when called:    3
 13253 ;; This function calls:
 13254 ;;		i2_GLCD_WriteData
 13255 ;; This function is called by:
 13256 ;;		i2_GLCD_WriteString
 13257 ;; This function uses a non-reentrant model
 13258 ;;
 13259                           
 13260                           	psect	text78
 13261  002BAA                     __ptext78:
 13262                           	opt stack 0
 13263  002BAA                     i2_GLCD_WriteChar:
 13264                           	opt stack 15
 13265                           
 13266                           ;incstack = 0
 13267                           ;i2GLCD_WriteChar@charToWrite stored from wreg
 13268  002BAA  6E0B               	movwf	i2GLCD_WriteChar@charToWrite,c
 13269                           
 13270                           ;KS0108.c: 58: int i;
 13271                           ;KS0108.c: 59: charToWrite -= 32;
 13272  002BAC  0E20               	movlw	32
 13273  002BAE  5E0B               	subwf	i2GLCD_WriteChar@charToWrite,f,c
 13274                           
 13275                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
 13276  002BB0  0E00               	movlw	0
 13277  002BB2  6E0D               	movwf	i2GLCD_WriteChar@i+1,c
 13278  002BB4  0E00               	movlw	0
 13279  002BB6  6E0C               	movwf	i2GLCD_WriteChar@i,c
 13280  002BB8                     i2l4403:
 13281  002BB8  BE0D               	btfsc	i2GLCD_WriteChar@i+1,7,c
 13282  002BBA  D006               	goto	i2l632
 13283  002BBC  500D               	movf	i2GLCD_WriteChar@i+1,w,c
 13284  002BBE  E11A               	bnz	i2l4413
 13285  002BC0  0E05               	movlw	5
 13286  002BC2  5C0C               	subwf	i2GLCD_WriteChar@i,w,c
 13287  002BC4  B0D8               	btfsc	status,0,c
 13288  002BC6  D016               	goto	i2u321_40
 13289  002BC8                     i2l632:
 13290                           
 13291                           ;KS0108.c: 61: {
 13292                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
 13293  002BC8  500B               	movf	i2GLCD_WriteChar@charToWrite,w,c
 13294  002BCA  0D05               	mullw	5
 13295  002BCC  500C               	movf	i2GLCD_WriteChar@i,w,c
 13296  002BCE  26F3               	addwf	prodl,f,c
 13297  002BD0  500D               	movf	i2GLCD_WriteChar@i+1,w,c
 13298  002BD2  22F4               	addwfc	prodh,f,c
 13299  002BD4  0E57               	movlw	low _font5x8
 13300  002BD6  24F3               	addwf	prodl,w,c
 13301  002BD8  6EF6               	movwf	tblptrl,c
 13302  002BDA  0EFD               	movlw	high _font5x8
 13303  002BDC  20F4               	addwfc	prodh,w,c
 13304  002BDE  6EF7               	movwf	tblptrh,c
 13305  002BE0                     	if	1	;There are 3 active tblptr bytes
 13306  002BE0  6AF8               	clrf	tblptru,c
 13307  002BE2  0E00               	movlw	low (__mediumconst shr (0+16))
 13308  002BE4  22F8               	addwfc	tblptru,f,c
 13309  002BE6                     	endif
 13310  002BE6  0008               	tblrd		*
 13311  002BE8  50F5               	movf	tablat,w,c
 13312  002BEA  EC29  F013         	call	i2_GLCD_WriteData
 13313  002BEE  4A0C               	infsnz	i2GLCD_WriteChar@i,f,c
 13314  002BF0  2A0D               	incf	i2GLCD_WriteChar@i+1,f,c
 13315  002BF2  D7E2               	goto	i2l4403
 13316  002BF4                     i2u321_40:
 13317  002BF4                     i2l4413:
 13318                           
 13319                           ;KS0108.c: 64: }
 13320                           ;KS0108.c: 65: GLCD_WriteData(0x00);
 13321  002BF4  0E00               	movlw	0
 13322  002BF6  EC29  F013         	call	i2_GLCD_WriteData
 13323  002BFA  0012               	return		;funcret
 13324  002BFC                     __end_ofi2_GLCD_WriteChar:
 13325                           	opt stack 0
 13326                           tosu	equ	0xFFF
 13327                           tosh	equ	0xFFE
 13328                           tosl	equ	0xFFD
 13329                           pclatu	equ	0xFFB
 13330                           pclath	equ	0xFFA
 13331                           tblptru	equ	0xFF8
 13332                           tblptrh	equ	0xFF7
 13333                           tblptrl	equ	0xFF6
 13334                           tablat	equ	0xFF5
 13335                           prodh	equ	0xFF4
 13336                           prodl	equ	0xFF3
 13337                           intcon	equ	0xFF2
 13338                           indf0	equ	0xFEF
 13339                           postinc0	equ	0xFEE
 13340                           fsr0h	equ	0xFEA
 13341                           fsr0l	equ	0xFE9
 13342                           wreg	equ	0xFE8
 13343                           postdec1	equ	0xFE5
 13344                           fsr1h	equ	0xFE2
 13345                           fsr1l	equ	0xFE1
 13346                           indf2	equ	0xFDF
 13347                           fsr2h	equ	0xFDA
 13348                           fsr2l	equ	0xFD9
 13349                           status	equ	0xFD8
 13350                           
 13351 ;; *************** function i2_Draw_Arrow *****************
 13352 ;; Defined at:
 13353 ;;		line 63 in file "screen_controls.c"
 13354 ;; Parameters:    Size  Location     Type
 13355 ;;		None
 13356 ;; Auto vars:     Size  Location     Type
 13357 ;;		None
 13358 ;; Return value:  Size  Location     Type
 13359 ;;                  1    wreg      void 
 13360 ;; Registers used:
 13361 ;;		wreg, status,2, status,0, cstack
 13362 ;; Tracked objects:
 13363 ;;		On entry : 0/0
 13364 ;;		On exit  : 0/0
 13365 ;;		Unchanged: 0/0
 13366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13371 ;;Total ram usage:        0 bytes
 13372 ;; Hardware stack levels used:    1
 13373 ;; Hardware stack levels required when called:    5
 13374 ;; This function calls:
 13375 ;;		i2_Clear_Arrow_Column
 13376 ;;		i2_Clear_Brightness_Arrows
 13377 ;;		i2_Clear_runTime_Arrows
 13378 ;;		i2_Clear_startColors_Arrows
 13379 ;;		i2_Draw_Brightness_Arrow
 13380 ;;		i2_Draw_runTime_Arrow
 13381 ;;		i2_Draw_startColors_Arrow
 13382 ;;		i2_GLCD_GoTo
 13383 ;;		i2_Make_Arrow
 13384 ;; This function is called by:
 13385 ;;		_Main_Menu_Function
 13386 ;;		_Run_Time_Menu_Function
 13387 ;;		_Brightness_Menu_Function
 13388 ;;		_Start_Color_Menu_Function
 13389 ;; This function uses a non-reentrant model
 13390 ;;
 13391                           
 13392                           	psect	text79
 13393  002788                     __ptext79:
 13394                           	opt stack 0
 13395  002788                     i2_Draw_Arrow:
 13396                           	opt stack 14
 13397                           
 13398                           ;screen_controls.c: 67: switch(currentContext)
 13399                           
 13400                           ;incstack = 0
 13401  002788  D023               	goto	i2l784
 13402  00278A                     
 13403                           ;screen_controls.c: 70: Clear_Arrow_Column();
 13404  00278A  EC26  F014         	call	i2_Clear_Arrow_Column	;wreg free
 13405                           
 13406                           ;screen_controls.c: 71: GLCD_GoTo(0, mainState);
 13407  00278E  C05D  F00C         	movff	_mainState,i2GLCD_GoTo@y
 13408  002792  0E00               	movlw	0
 13409  002794  EC04  F012         	call	i2_GLCD_GoTo
 13410                           
 13411                           ;screen_controls.c: 72: Make_Arrow();
 13412  002798  EC29  F019         	call	i2_Make_Arrow	;wreg free
 13413                           
 13414                           ;screen_controls.c: 73: break;
 13415  00279C  0012               	return	
 13416  00279E                     
 13417                           ;screen_controls.c: 76: Clear_runTime_Arrows();
 13418  00279E  ECC7  F011         	call	i2_Clear_runTime_Arrows	;wreg free
 13419                           
 13420                           ;screen_controls.c: 77: Draw_runTime_Arrow();
 13421  0027A2  ECF0  F012         	call	i2_Draw_runTime_Arrow	;wreg free
 13422                           
 13423                           ;screen_controls.c: 78: break;
 13424  0027A6  0012               	return	
 13425  0027A8                     
 13426                           ;screen_controls.c: 81: Clear_Brightness_Arrows();
 13427  0027A8  EC82  F015         	call	i2_Clear_Brightness_Arrows	;wreg free
 13428                           
 13429                           ;screen_controls.c: 82: Draw_Brightness_Arrow();
 13430  0027AC  EC2D  F015         	call	i2_Draw_Brightness_Arrow	;wreg free
 13431                           
 13432                           ;screen_controls.c: 83: break;
 13433  0027B0  0012               	return	
 13434  0027B2                     
 13435                           ;screen_controls.c: 86: Clear_startColors_Arrows();
 13436  0027B2  EC08  F00F         	call	i2_Clear_startColors_Arrows	;wreg free
 13437                           
 13438                           ;screen_controls.c: 87: Draw_startColors_Arrow();
 13439  0027B6  EC31  F010         	call	i2_Draw_startColors_Arrow	;wreg free
 13440                           
 13441                           ;screen_controls.c: 88: break;
 13442  0027BA  0012               	return	
 13443  0027BC                     
 13444                           ;screen_controls.c: 91: Clear_Arrow_Column();
 13445  0027BC  EC26  F014         	call	i2_Clear_Arrow_Column	;wreg free
 13446                           
 13447                           ;screen_controls.c: 92: GLCD_GoTo(0, mainState);
 13448  0027C0  C05D  F00C         	movff	_mainState,i2GLCD_GoTo@y
 13449  0027C4  0E00               	movlw	0
 13450  0027C6  EC04  F012         	call	i2_GLCD_GoTo
 13451                           
 13452                           ;screen_controls.c: 93: Make_Arrow();
 13453  0027CA  EC29  F019         	call	i2_Make_Arrow	;wreg free
 13454                           
 13455                           ;screen_controls.c: 95: }
 13456                           
 13457                           ;screen_controls.c: 94: break;
 13458  0027CE  0012               	return	
 13459  0027D0                     i2l784:
 13460  0027D0  0100               	movlb	0	; () banked
 13461  0027D2  51CC               	movf	_currentContext& (0+255),w,b
 13462                           
 13463                           ; Switch size 1, requested type "space"
 13464                           ; Number of cases is 4, Range of values is 0 to 3
 13465                           ; switch strategies available:
 13466                           ; Name         Instructions Cycles
 13467                           ; simple_byte           13     7 (average)
 13468                           ;	Chosen strategy is simple_byte
 13469  0027D4  0A00               	xorlw	0	; case 0
 13470  0027D6  B4D8               	btfsc	status,2,c
 13471  0027D8  D7D8               	goto	i2l785
 13472  0027DA  0A01               	xorlw	1	; case 1
 13473  0027DC  B4D8               	btfsc	status,2,c
 13474  0027DE  D7DF               	goto	i2l787
 13475  0027E0  0A03               	xorlw	3	; case 2
 13476  0027E2  B4D8               	btfsc	status,2,c
 13477  0027E4  D7E1               	goto	i2l788
 13478  0027E6  0A01               	xorlw	1	; case 3
 13479  0027E8  B4D8               	btfsc	status,2,c
 13480  0027EA  D7E3               	goto	i2l789
 13481  0027EC  D7E7               	goto	i2l790
 13482  0027EE                     __end_ofi2_Draw_Arrow:
 13483                           	opt stack 0
 13484                           tosu	equ	0xFFF
 13485                           tosh	equ	0xFFE
 13486                           tosl	equ	0xFFD
 13487                           pclatu	equ	0xFFB
 13488                           pclath	equ	0xFFA
 13489                           tblptru	equ	0xFF8
 13490                           tblptrh	equ	0xFF7
 13491                           tblptrl	equ	0xFF6
 13492                           tablat	equ	0xFF5
 13493                           prodh	equ	0xFF4
 13494                           prodl	equ	0xFF3
 13495                           intcon	equ	0xFF2
 13496                           indf0	equ	0xFEF
 13497                           postinc0	equ	0xFEE
 13498                           fsr0h	equ	0xFEA
 13499                           fsr0l	equ	0xFE9
 13500                           wreg	equ	0xFE8
 13501                           postdec1	equ	0xFE5
 13502                           fsr1h	equ	0xFE2
 13503                           fsr1l	equ	0xFE1
 13504                           indf2	equ	0xFDF
 13505                           fsr2h	equ	0xFDA
 13506                           fsr2l	equ	0xFD9
 13507                           status	equ	0xFD8
 13508                           
 13509 ;; *************** function i2_Draw_startColors_Arrow *****************
 13510 ;; Defined at:
 13511 ;;		line 303 in file "screen_controls.c"
 13512 ;; Parameters:    Size  Location     Type
 13513 ;;		None
 13514 ;; Auto vars:     Size  Location     Type
 13515 ;;		None
 13516 ;; Return value:  Size  Location     Type
 13517 ;;                  1    wreg      void 
 13518 ;; Registers used:
 13519 ;;		wreg, status,2, status,0, cstack
 13520 ;; Tracked objects:
 13521 ;;		On entry : 0/0
 13522 ;;		On exit  : 0/0
 13523 ;;		Unchanged: 0/0
 13524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13529 ;;Total ram usage:        0 bytes
 13530 ;; Hardware stack levels used:    1
 13531 ;; Hardware stack levels required when called:    4
 13532 ;; This function calls:
 13533 ;;		i2_GLCD_GoTo
 13534 ;;		i2_Make_Arrow
 13535 ;; This function is called by:
 13536 ;;		i2_Draw_Arrow
 13537 ;; This function uses a non-reentrant model
 13538 ;;
 13539                           
 13540                           	psect	text80
 13541  002062                     __ptext80:
 13542                           	opt stack 0
 13543  002062                     i2_Draw_startColors_Arrow:
 13544                           	opt stack 14
 13545                           
 13546                           ;screen_controls.c: 305: switch(startColorsContext)
 13547                           
 13548                           ;incstack = 0
 13549  002062  D037               	goto	i2l847
 13550  002064                     
 13551                           ;screen_controls.c: 308: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 13552  002064  0E02               	movlw	2
 13553  002066  6E0C               	movwf	i2GLCD_GoTo@y,c
 13554  002068  0100               	movlb	0	; () banked
 13555  00206A  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 13556  00206C  0800               	sublw	0
 13557  00206E  25BD               	addwf	_runTimeX& (0+255),w,b
 13558  002070  EC04  F012         	call	i2_GLCD_GoTo
 13559                           
 13560                           ;screen_controls.c: 309: Make_Arrow();
 13561  002074  EC29  F019         	call	i2_Make_Arrow	;wreg free
 13562                           
 13563                           ;screen_controls.c: 310: break;
 13564  002078  0012               	return	
 13565  00207A                     
 13566                           ;screen_controls.c: 313: GLCD_GoTo((runTimeX - ARROW_SIZE), 3);
 13567  00207A  0E03               	movlw	3
 13568  00207C  6E0C               	movwf	i2GLCD_GoTo@y,c
 13569  00207E  0100               	movlb	0	; () banked
 13570  002080  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 13571  002082  0800               	sublw	0
 13572  002084  25BD               	addwf	_runTimeX& (0+255),w,b
 13573  002086  EC04  F012         	call	i2_GLCD_GoTo
 13574                           
 13575                           ;screen_controls.c: 314: Make_Arrow();
 13576  00208A  EC29  F019         	call	i2_Make_Arrow	;wreg free
 13577                           
 13578                           ;screen_controls.c: 315: break;
 13579  00208E  0012               	return	
 13580  002090                     
 13581                           ;screen_controls.c: 318: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
 13582  002090  0E04               	movlw	4
 13583  002092  6E0C               	movwf	i2GLCD_GoTo@y,c
 13584  002094  0100               	movlb	0	; () banked
 13585  002096  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 13586  002098  0800               	sublw	0
 13587  00209A  25BD               	addwf	_runTimeX& (0+255),w,b
 13588  00209C  EC04  F012         	call	i2_GLCD_GoTo
 13589                           
 13590                           ;screen_controls.c: 319: Make_Arrow();
 13591  0020A0  EC29  F019         	call	i2_Make_Arrow	;wreg free
 13592                           
 13593                           ;screen_controls.c: 320: break;
 13594  0020A4  0012               	return	
 13595  0020A6                     
 13596                           ;screen_controls.c: 323: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
 13597  0020A6  0E06               	movlw	6
 13598  0020A8  6E0C               	movwf	i2GLCD_GoTo@y,c
 13599  0020AA  0100               	movlb	0	; () banked
 13600  0020AC  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 13601  0020AE  0800               	sublw	0
 13602  0020B0  25BD               	addwf	_runTimeX& (0+255),w,b
 13603  0020B2  EC04  F012         	call	i2_GLCD_GoTo
 13604                           
 13605                           ;screen_controls.c: 324: Make_Arrow();
 13606  0020B6  EC29  F019         	call	i2_Make_Arrow	;wreg free
 13607                           
 13608                           ;screen_controls.c: 326: break;
 13609                           
 13610                           ;screen_controls.c: 325: break;
 13611  0020BA  0012               	return	
 13612  0020BC                     
 13613                           ;screen_controls.c: 329: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 13614  0020BC  0E02               	movlw	2
 13615  0020BE  6E0C               	movwf	i2GLCD_GoTo@y,c
 13616  0020C0  0100               	movlb	0	; () banked
 13617  0020C2  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 13618  0020C4  0800               	sublw	0
 13619  0020C6  25BD               	addwf	_runTimeX& (0+255),w,b
 13620  0020C8  EC04  F012         	call	i2_GLCD_GoTo
 13621                           
 13622                           ;screen_controls.c: 330: Make_Arrow();
 13623  0020CC  EC29  F019         	call	i2_Make_Arrow	;wreg free
 13624                           
 13625                           ;screen_controls.c: 334: }
 13626                           
 13627                           ;screen_controls.c: 331: break;
 13628  0020D0  0012               	return	
 13629  0020D2                     i2l847:
 13630  0020D2  0100               	movlb	0	; () banked
 13631  0020D4  51C9               	movf	_startColorsContext& (0+255),w,b
 13632                           
 13633                           ; Switch size 1, requested type "space"
 13634                           ; Number of cases is 4, Range of values is 0 to 3
 13635                           ; switch strategies available:
 13636                           ; Name         Instructions Cycles
 13637                           ; simple_byte           13     7 (average)
 13638                           ;	Chosen strategy is simple_byte
 13639  0020D6  0A00               	xorlw	0	; case 0
 13640  0020D8  B4D8               	btfsc	status,2,c
 13641  0020DA  D7C4               	goto	i2l848
 13642  0020DC  0A01               	xorlw	1	; case 1
 13643  0020DE  B4D8               	btfsc	status,2,c
 13644  0020E0  D7CC               	goto	i2l850
 13645  0020E2  0A03               	xorlw	3	; case 2
 13646  0020E4  B4D8               	btfsc	status,2,c
 13647  0020E6  D7D4               	goto	i2l851
 13648  0020E8  0A01               	xorlw	1	; case 3
 13649  0020EA  B4D8               	btfsc	status,2,c
 13650  0020EC  D7DC               	goto	i2l852
 13651  0020EE  D7E6               	goto	i2l853
 13652  0020F0                     __end_ofi2_Draw_startColors_Arrow:
 13653                           	opt stack 0
 13654                           tosu	equ	0xFFF
 13655                           tosh	equ	0xFFE
 13656                           tosl	equ	0xFFD
 13657                           pclatu	equ	0xFFB
 13658                           pclath	equ	0xFFA
 13659                           tblptru	equ	0xFF8
 13660                           tblptrh	equ	0xFF7
 13661                           tblptrl	equ	0xFF6
 13662                           tablat	equ	0xFF5
 13663                           prodh	equ	0xFF4
 13664                           prodl	equ	0xFF3
 13665                           intcon	equ	0xFF2
 13666                           indf0	equ	0xFEF
 13667                           postinc0	equ	0xFEE
 13668                           fsr0h	equ	0xFEA
 13669                           fsr0l	equ	0xFE9
 13670                           wreg	equ	0xFE8
 13671                           postdec1	equ	0xFE5
 13672                           fsr1h	equ	0xFE2
 13673                           fsr1l	equ	0xFE1
 13674                           indf2	equ	0xFDF
 13675                           fsr2h	equ	0xFDA
 13676                           fsr2l	equ	0xFD9
 13677                           status	equ	0xFD8
 13678                           
 13679 ;; *************** function i2_Draw_runTime_Arrow *****************
 13680 ;; Defined at:
 13681 ;;		line 254 in file "screen_controls.c"
 13682 ;; Parameters:    Size  Location     Type
 13683 ;;		None
 13684 ;; Auto vars:     Size  Location     Type
 13685 ;;		None
 13686 ;; Return value:  Size  Location     Type
 13687 ;;                  1    wreg      void 
 13688 ;; Registers used:
 13689 ;;		wreg, status,2, status,0, cstack
 13690 ;; Tracked objects:
 13691 ;;		On entry : 0/0
 13692 ;;		On exit  : 0/0
 13693 ;;		Unchanged: 0/0
 13694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13699 ;;Total ram usage:        0 bytes
 13700 ;; Hardware stack levels used:    1
 13701 ;; Hardware stack levels required when called:    4
 13702 ;; This function calls:
 13703 ;;		i2_GLCD_GoTo
 13704 ;;		i2_Make_Arrow
 13705 ;; This function is called by:
 13706 ;;		i2_Draw_Arrow
 13707 ;; This function uses a non-reentrant model
 13708 ;;
 13709                           
 13710                           	psect	text81
 13711  0025E0                     __ptext81:
 13712                           	opt stack 0
 13713  0025E0                     i2_Draw_runTime_Arrow:
 13714                           	opt stack 14
 13715                           
 13716                           ;screen_controls.c: 256: switch(runTimeContext)
 13717                           
 13718                           ;incstack = 0
 13719  0025E0  D02C               	goto	i2l829
 13720  0025E2                     
 13721                           ;screen_controls.c: 259: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 13722  0025E2  0E02               	movlw	2
 13723  0025E4  6E0C               	movwf	i2GLCD_GoTo@y,c
 13724  0025E6  0100               	movlb	0	; () banked
 13725  0025E8  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 13726  0025EA  0800               	sublw	0
 13727  0025EC  25BD               	addwf	_runTimeX& (0+255),w,b
 13728  0025EE  EC04  F012         	call	i2_GLCD_GoTo
 13729                           
 13730                           ;screen_controls.c: 260: Make_Arrow();
 13731  0025F2  EC29  F019         	call	i2_Make_Arrow	;wreg free
 13732                           
 13733                           ;screen_controls.c: 261: break;
 13734  0025F6  0012               	return	
 13735  0025F8                     
 13736                           ;screen_controls.c: 264: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
 13737  0025F8  0E04               	movlw	4
 13738  0025FA  6E0C               	movwf	i2GLCD_GoTo@y,c
 13739  0025FC  0100               	movlb	0	; () banked
 13740  0025FE  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 13741  002600  0800               	sublw	0
 13742  002602  25BD               	addwf	_runTimeX& (0+255),w,b
 13743  002604  EC04  F012         	call	i2_GLCD_GoTo
 13744                           
 13745                           ;screen_controls.c: 265: Make_Arrow();
 13746  002608  EC29  F019         	call	i2_Make_Arrow	;wreg free
 13747                           
 13748                           ;screen_controls.c: 266: break;
 13749  00260C  0012               	return	
 13750  00260E                     
 13751                           ;screen_controls.c: 269: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
 13752  00260E  0E06               	movlw	6
 13753  002610  6E0C               	movwf	i2GLCD_GoTo@y,c
 13754  002612  0100               	movlb	0	; () banked
 13755  002614  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 13756  002616  0800               	sublw	0
 13757  002618  25BD               	addwf	_runTimeX& (0+255),w,b
 13758  00261A  EC04  F012         	call	i2_GLCD_GoTo
 13759                           
 13760                           ;screen_controls.c: 270: Make_Arrow();
 13761  00261E  EC29  F019         	call	i2_Make_Arrow	;wreg free
 13762                           
 13763                           ;screen_controls.c: 272: break;
 13764                           
 13765                           ;screen_controls.c: 271: break;
 13766  002622  0012               	return	
 13767  002624                     
 13768                           ;screen_controls.c: 275: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 13769  002624  0E02               	movlw	2
 13770  002626  6E0C               	movwf	i2GLCD_GoTo@y,c
 13771  002628  0100               	movlb	0	; () banked
 13772  00262A  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 13773  00262C  0800               	sublw	0
 13774  00262E  25BD               	addwf	_runTimeX& (0+255),w,b
 13775  002630  EC04  F012         	call	i2_GLCD_GoTo
 13776                           
 13777                           ;screen_controls.c: 276: Make_Arrow();
 13778  002634  EC29  F019         	call	i2_Make_Arrow	;wreg free
 13779                           
 13780                           ;screen_controls.c: 280: }
 13781                           
 13782                           ;screen_controls.c: 277: break;
 13783  002638  0012               	return	
 13784  00263A                     i2l829:
 13785  00263A  0100               	movlb	0	; () banked
 13786  00263C  51CB               	movf	_runTimeContext& (0+255),w,b
 13787                           
 13788                           ; Switch size 1, requested type "space"
 13789                           ; Number of cases is 3, Range of values is 0 to 2
 13790                           ; switch strategies available:
 13791                           ; Name         Instructions Cycles
 13792                           ; simple_byte           10     6 (average)
 13793                           ;	Chosen strategy is simple_byte
 13794  00263E  0A00               	xorlw	0	; case 0
 13795  002640  B4D8               	btfsc	status,2,c
 13796  002642  D7CF               	goto	i2l830
 13797  002644  0A01               	xorlw	1	; case 1
 13798  002646  B4D8               	btfsc	status,2,c
 13799  002648  D7D7               	goto	i2l832
 13800  00264A  0A03               	xorlw	3	; case 2
 13801  00264C  B4D8               	btfsc	status,2,c
 13802  00264E  D7DF               	goto	i2l833
 13803  002650  D7E9               	goto	i2l834
 13804  002652                     __end_ofi2_Draw_runTime_Arrow:
 13805                           	opt stack 0
 13806                           tosu	equ	0xFFF
 13807                           tosh	equ	0xFFE
 13808                           tosl	equ	0xFFD
 13809                           pclatu	equ	0xFFB
 13810                           pclath	equ	0xFFA
 13811                           tblptru	equ	0xFF8
 13812                           tblptrh	equ	0xFF7
 13813                           tblptrl	equ	0xFF6
 13814                           tablat	equ	0xFF5
 13815                           prodh	equ	0xFF4
 13816                           prodl	equ	0xFF3
 13817                           intcon	equ	0xFF2
 13818                           indf0	equ	0xFEF
 13819                           postinc0	equ	0xFEE
 13820                           fsr0h	equ	0xFEA
 13821                           fsr0l	equ	0xFE9
 13822                           wreg	equ	0xFE8
 13823                           postdec1	equ	0xFE5
 13824                           fsr1h	equ	0xFE2
 13825                           fsr1l	equ	0xFE1
 13826                           indf2	equ	0xFDF
 13827                           fsr2h	equ	0xFDA
 13828                           fsr2l	equ	0xFD9
 13829                           status	equ	0xFD8
 13830                           
 13831 ;; *************** function i2_Draw_Brightness_Arrow *****************
 13832 ;; Defined at:
 13833 ;;		line 374 in file "screen_controls.c"
 13834 ;; Parameters:    Size  Location     Type
 13835 ;;		None
 13836 ;; Auto vars:     Size  Location     Type
 13837 ;;		None
 13838 ;; Return value:  Size  Location     Type
 13839 ;;                  1    wreg      void 
 13840 ;; Registers used:
 13841 ;;		wreg, status,2, status,0, cstack
 13842 ;; Tracked objects:
 13843 ;;		On entry : 0/0
 13844 ;;		On exit  : 0/0
 13845 ;;		Unchanged: 0/0
 13846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13851 ;;Total ram usage:        0 bytes
 13852 ;; Hardware stack levels used:    1
 13853 ;; Hardware stack levels required when called:    4
 13854 ;; This function calls:
 13855 ;;		i2_GLCD_GoTo
 13856 ;;		i2_Make_Arrow
 13857 ;; This function is called by:
 13858 ;;		i2_Draw_Arrow
 13859 ;; This function uses a non-reentrant model
 13860 ;;
 13861                           
 13862                           	psect	text82
 13863  002A5A                     __ptext82:
 13864                           	opt stack 0
 13865  002A5A                     i2_Draw_Brightness_Arrow:
 13866                           	opt stack 14
 13867                           
 13868                           ;screen_controls.c: 376: switch(brightnessContext)
 13869                           
 13870                           ;incstack = 0
 13871  002A5A  D021               	goto	i2l872
 13872  002A5C                     
 13873                           ;screen_controls.c: 379: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 13874  002A5C  0E02               	movlw	2
 13875  002A5E  6E0C               	movwf	i2GLCD_GoTo@y,c
 13876  002A60  0100               	movlb	0	; () banked
 13877  002A62  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 13878  002A64  0800               	sublw	0
 13879  002A66  25BD               	addwf	_runTimeX& (0+255),w,b
 13880  002A68  EC04  F012         	call	i2_GLCD_GoTo
 13881                           
 13882                           ;screen_controls.c: 380: Make_Arrow();
 13883  002A6C  EC29  F019         	call	i2_Make_Arrow	;wreg free
 13884                           
 13885                           ;screen_controls.c: 381: break;
 13886  002A70  0012               	return	
 13887  002A72                     
 13888                           ;screen_controls.c: 384: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
 13889  002A72  0E06               	movlw	6
 13890  002A74  6E0C               	movwf	i2GLCD_GoTo@y,c
 13891  002A76  0100               	movlb	0	; () banked
 13892  002A78  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 13893  002A7A  0800               	sublw	0
 13894  002A7C  25BD               	addwf	_runTimeX& (0+255),w,b
 13895  002A7E  EC04  F012         	call	i2_GLCD_GoTo
 13896                           
 13897                           ;screen_controls.c: 385: Make_Arrow();
 13898  002A82  EC29  F019         	call	i2_Make_Arrow	;wreg free
 13899                           
 13900                           ;screen_controls.c: 387: break;
 13901                           
 13902                           ;screen_controls.c: 386: break;
 13903  002A86  0012               	return	
 13904  002A88                     
 13905                           ;screen_controls.c: 390: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 13906  002A88  0E02               	movlw	2
 13907  002A8A  6E0C               	movwf	i2GLCD_GoTo@y,c
 13908  002A8C  0100               	movlb	0	; () banked
 13909  002A8E  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 13910  002A90  0800               	sublw	0
 13911  002A92  25BD               	addwf	_runTimeX& (0+255),w,b
 13912  002A94  EC04  F012         	call	i2_GLCD_GoTo
 13913                           
 13914                           ;screen_controls.c: 391: Make_Arrow();
 13915  002A98  EC29  F019         	call	i2_Make_Arrow	;wreg free
 13916                           
 13917                           ;screen_controls.c: 395: }
 13918                           
 13919                           ;screen_controls.c: 392: break;
 13920  002A9C  0012               	return	
 13921  002A9E                     i2l872:
 13922  002A9E  0100               	movlb	0	; () banked
 13923  002AA0  51CA               	movf	_brightnessContext& (0+255),w,b
 13924                           
 13925                           ; Switch size 1, requested type "space"
 13926                           ; Number of cases is 2, Range of values is 0 to 1
 13927                           ; switch strategies available:
 13928                           ; Name         Instructions Cycles
 13929                           ; simple_byte            7     4 (average)
 13930                           ;	Chosen strategy is simple_byte
 13931  002AA2  0A00               	xorlw	0	; case 0
 13932  002AA4  B4D8               	btfsc	status,2,c
 13933  002AA6  D7DA               	goto	i2l873
 13934  002AA8  0A01               	xorlw	1	; case 1
 13935  002AAA  B4D8               	btfsc	status,2,c
 13936  002AAC  D7E2               	goto	i2l875
 13937  002AAE  D7EC               	goto	i2l876
 13938  002AB0                     __end_ofi2_Draw_Brightness_Arrow:
 13939                           	opt stack 0
 13940                           tosu	equ	0xFFF
 13941                           tosh	equ	0xFFE
 13942                           tosl	equ	0xFFD
 13943                           pclatu	equ	0xFFB
 13944                           pclath	equ	0xFFA
 13945                           tblptru	equ	0xFF8
 13946                           tblptrh	equ	0xFF7
 13947                           tblptrl	equ	0xFF6
 13948                           tablat	equ	0xFF5
 13949                           prodh	equ	0xFF4
 13950                           prodl	equ	0xFF3
 13951                           intcon	equ	0xFF2
 13952                           indf0	equ	0xFEF
 13953                           postinc0	equ	0xFEE
 13954                           fsr0h	equ	0xFEA
 13955                           fsr0l	equ	0xFE9
 13956                           wreg	equ	0xFE8
 13957                           postdec1	equ	0xFE5
 13958                           fsr1h	equ	0xFE2
 13959                           fsr1l	equ	0xFE1
 13960                           indf2	equ	0xFDF
 13961                           fsr2h	equ	0xFDA
 13962                           fsr2l	equ	0xFD9
 13963                           status	equ	0xFD8
 13964                           
 13965 ;; *************** function i2_Make_Arrow *****************
 13966 ;; Defined at:
 13967 ;;		line 100 in file "screen_controls.c"
 13968 ;; Parameters:    Size  Location     Type
 13969 ;;		None
 13970 ;; Auto vars:     Size  Location     Type
 13971 ;;		None
 13972 ;; Return value:  Size  Location     Type
 13973 ;;                  1    wreg      void 
 13974 ;; Registers used:
 13975 ;;		wreg, status,2, status,0, cstack
 13976 ;; Tracked objects:
 13977 ;;		On entry : 0/0
 13978 ;;		On exit  : 0/0
 13979 ;;		Unchanged: 0/0
 13980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13985 ;;Total ram usage:        0 bytes
 13986 ;; Hardware stack levels used:    1
 13987 ;; Hardware stack levels required when called:    3
 13988 ;; This function calls:
 13989 ;;		i2_GLCD_WriteData
 13990 ;; This function is called by:
 13991 ;;		i2_Draw_Arrow
 13992 ;;		i2_Draw_runTime_Arrow
 13993 ;;		i2_Draw_startColors_Arrow
 13994 ;;		i2_Draw_Brightness_Arrow
 13995 ;; This function uses a non-reentrant model
 13996 ;;
 13997                           
 13998                           	psect	text83
 13999  003252                     __ptext83:
 14000                           	opt stack 0
 14001  003252                     i2_Make_Arrow:
 14002                           	opt stack 15
 14003                           
 14004                           ;screen_controls.c: 102: GLCD_WriteData(0x7E);
 14005                           
 14006                           ;incstack = 0
 14007  003252  0E7E               	movlw	126
 14008  003254  EC29  F013         	call	i2_GLCD_WriteData
 14009                           
 14010                           ;screen_controls.c: 103: GLCD_WriteData(0x3C);
 14011  003258  0E3C               	movlw	60
 14012  00325A  EC29  F013         	call	i2_GLCD_WriteData
 14013                           
 14014                           ;screen_controls.c: 104: GLCD_WriteData(0x18);
 14015  00325E  0E18               	movlw	24
 14016  003260  EC29  F013         	call	i2_GLCD_WriteData
 14017  003264  0012               	return		;funcret
 14018  003266                     __end_ofi2_Make_Arrow:
 14019                           	opt stack 0
 14020                           tosu	equ	0xFFF
 14021                           tosh	equ	0xFFE
 14022                           tosl	equ	0xFFD
 14023                           pclatu	equ	0xFFB
 14024                           pclath	equ	0xFFA
 14025                           tblptru	equ	0xFF8
 14026                           tblptrh	equ	0xFF7
 14027                           tblptrl	equ	0xFF6
 14028                           tablat	equ	0xFF5
 14029                           prodh	equ	0xFF4
 14030                           prodl	equ	0xFF3
 14031                           intcon	equ	0xFF2
 14032                           indf0	equ	0xFEF
 14033                           postinc0	equ	0xFEE
 14034                           fsr0h	equ	0xFEA
 14035                           fsr0l	equ	0xFE9
 14036                           wreg	equ	0xFE8
 14037                           postdec1	equ	0xFE5
 14038                           fsr1h	equ	0xFE2
 14039                           fsr1l	equ	0xFE1
 14040                           indf2	equ	0xFDF
 14041                           fsr2h	equ	0xFDA
 14042                           fsr2l	equ	0xFD9
 14043                           status	equ	0xFD8
 14044                           
 14045 ;; *************** function i2_Clear_startColors_Arrows *****************
 14046 ;; Defined at:
 14047 ;;		line 341 in file "screen_controls.c"
 14048 ;; Parameters:    Size  Location     Type
 14049 ;;		None
 14050 ;; Auto vars:     Size  Location     Type
 14051 ;;  Clear_startC    1   14[COMRAM] unsigned char 
 14052 ;; Return value:  Size  Location     Type
 14053 ;;                  1    wreg      void 
 14054 ;; Registers used:
 14055 ;;		wreg, status,2, status,0, cstack
 14056 ;; Tracked objects:
 14057 ;;		On entry : 0/0
 14058 ;;		On exit  : 0/0
 14059 ;;		Unchanged: 0/0
 14060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14065 ;;Total ram usage:        1 bytes
 14066 ;; Hardware stack levels used:    1
 14067 ;; Hardware stack levels required when called:    4
 14068 ;; This function calls:
 14069 ;;		i2_GLCD_GoTo
 14070 ;;		i2_GLCD_WriteData
 14071 ;; This function is called by:
 14072 ;;		i2_Draw_Arrow
 14073 ;; This function uses a non-reentrant model
 14074 ;;
 14075                           
 14076                           	psect	text84
 14077  001E10                     __ptext84:
 14078                           	opt stack 0
 14079  001E10                     i2_Clear_startColors_Arrows:
 14080                           	opt stack 14
 14081                           
 14082                           ;screen_controls.c: 343: unsigned char i=0;
 14083                           
 14084                           ;incstack = 0
 14085  001E10  0E00               	movlw	0
 14086  001E12  6E0F               	movwf	i2Clear_startColors_Arrows@i,c
 14087                           
 14088                           ;screen_controls.c: 345: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 14089  001E14  0E02               	movlw	2
 14090  001E16  6E0C               	movwf	i2GLCD_GoTo@y,c
 14091  001E18  0100               	movlb	0	; () banked
 14092  001E1A  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14093  001E1C  0800               	sublw	0
 14094  001E1E  25BD               	addwf	_runTimeX& (0+255),w,b
 14095  001E20  EC04  F012         	call	i2_GLCD_GoTo
 14096                           
 14097                           ;screen_controls.c: 347: for(i=0; i<ARROW_SIZE; i++)
 14098  001E24  0E00               	movlw	0
 14099  001E26  6E0F               	movwf	i2Clear_startColors_Arrows@i,c
 14100  001E28  D004               	goto	i2l857
 14101  001E2A                     
 14102                           ;screen_controls.c: 348: {
 14103                           ;screen_controls.c: 349: GLCD_WriteData(0x00);
 14104  001E2A  0E00               	movlw	0
 14105  001E2C  EC29  F013         	call	i2_GLCD_WriteData
 14106  001E30  2A0F               	incf	i2Clear_startColors_Arrows@i,f,c
 14107  001E32                     i2l857:
 14108  001E32  0100               	movlb	0	; () banked
 14109  001E34  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14110  001E36  5C0F               	subwf	i2Clear_startColors_Arrows@i,w,c
 14111  001E38  A0D8               	btfss	status,0,c
 14112  001E3A  D7F7               	goto	i2l858
 14113                           
 14114                           ; BSR set to: 0
 14115                           ;screen_controls.c: 350: }
 14116                           ;screen_controls.c: 352: GLCD_GoTo((runTimeX - ARROW_SIZE), 3);
 14117                           
 14118                           ; BSR set to: 0
 14119  001E3C  0E03               	movlw	3
 14120  001E3E  6E0C               	movwf	i2GLCD_GoTo@y,c
 14121  001E40  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14122  001E42  0800               	sublw	0
 14123  001E44  25BD               	addwf	_runTimeX& (0+255),w,b
 14124  001E46  EC04  F012         	call	i2_GLCD_GoTo
 14125                           
 14126                           ;screen_controls.c: 354: for(i=0; i<ARROW_SIZE; i++)
 14127  001E4A  0E00               	movlw	0
 14128  001E4C  6E0F               	movwf	i2Clear_startColors_Arrows@i,c
 14129  001E4E  D004               	goto	i2l860
 14130  001E50                     
 14131                           ;screen_controls.c: 355: {
 14132                           ;screen_controls.c: 356: GLCD_WriteData(0x00);
 14133  001E50  0E00               	movlw	0
 14134  001E52  EC29  F013         	call	i2_GLCD_WriteData
 14135  001E56  2A0F               	incf	i2Clear_startColors_Arrows@i,f,c
 14136  001E58                     i2l860:
 14137  001E58  0100               	movlb	0	; () banked
 14138  001E5A  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14139  001E5C  5C0F               	subwf	i2Clear_startColors_Arrows@i,w,c
 14140  001E5E  A0D8               	btfss	status,0,c
 14141  001E60  D7F7               	goto	i2l861
 14142                           
 14143                           ; BSR set to: 0
 14144                           ;screen_controls.c: 357: }
 14145                           ;screen_controls.c: 359: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
 14146                           
 14147                           ; BSR set to: 0
 14148  001E62  0E04               	movlw	4
 14149  001E64  6E0C               	movwf	i2GLCD_GoTo@y,c
 14150  001E66  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14151  001E68  0800               	sublw	0
 14152  001E6A  25BD               	addwf	_runTimeX& (0+255),w,b
 14153  001E6C  EC04  F012         	call	i2_GLCD_GoTo
 14154                           
 14155                           ;screen_controls.c: 361: for(i=0; i<ARROW_SIZE; i++)
 14156  001E70  0E00               	movlw	0
 14157  001E72  6E0F               	movwf	i2Clear_startColors_Arrows@i,c
 14158  001E74  D004               	goto	i2l863
 14159  001E76                     
 14160                           ;screen_controls.c: 362: {
 14161                           ;screen_controls.c: 363: GLCD_WriteData(0x00);
 14162  001E76  0E00               	movlw	0
 14163  001E78  EC29  F013         	call	i2_GLCD_WriteData
 14164  001E7C  2A0F               	incf	i2Clear_startColors_Arrows@i,f,c
 14165  001E7E                     i2l863:
 14166  001E7E  0100               	movlb	0	; () banked
 14167  001E80  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14168  001E82  5C0F               	subwf	i2Clear_startColors_Arrows@i,w,c
 14169  001E84  A0D8               	btfss	status,0,c
 14170  001E86  D7F7               	goto	i2l864
 14171                           
 14172                           ; BSR set to: 0
 14173                           ;screen_controls.c: 364: }
 14174                           ;screen_controls.c: 366: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
 14175                           
 14176                           ; BSR set to: 0
 14177  001E88  0E06               	movlw	6
 14178  001E8A  6E0C               	movwf	i2GLCD_GoTo@y,c
 14179  001E8C  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14180  001E8E  0800               	sublw	0
 14181  001E90  25BD               	addwf	_runTimeX& (0+255),w,b
 14182  001E92  EC04  F012         	call	i2_GLCD_GoTo
 14183                           
 14184                           ;screen_controls.c: 367: for(i=0; i<ARROW_SIZE; i++)
 14185  001E96  0E00               	movlw	0
 14186  001E98  6E0F               	movwf	i2Clear_startColors_Arrows@i,c
 14187  001E9A  D004               	goto	i2l866
 14188  001E9C                     
 14189                           ;screen_controls.c: 368: {
 14190                           ;screen_controls.c: 369: GLCD_WriteData(0x00);
 14191  001E9C  0E00               	movlw	0
 14192  001E9E  EC29  F013         	call	i2_GLCD_WriteData
 14193  001EA2  2A0F               	incf	i2Clear_startColors_Arrows@i,f,c
 14194  001EA4                     i2l866:
 14195  001EA4  0100               	movlb	0	; () banked
 14196  001EA6  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14197  001EA8  5C0F               	subwf	i2Clear_startColors_Arrows@i,w,c
 14198  001EAA  B0D8               	btfsc	status,0,c
 14199  001EAC  0012               	return	
 14200  001EAE  D7F6               	goto	i2l867
 14201  001EB0                     __end_ofi2_Clear_startColors_Arrows:
 14202                           	opt stack 0
 14203                           tosu	equ	0xFFF
 14204                           tosh	equ	0xFFE
 14205                           tosl	equ	0xFFD
 14206                           pclatu	equ	0xFFB
 14207                           pclath	equ	0xFFA
 14208                           tblptru	equ	0xFF8
 14209                           tblptrh	equ	0xFF7
 14210                           tblptrl	equ	0xFF6
 14211                           tablat	equ	0xFF5
 14212                           prodh	equ	0xFF4
 14213                           prodl	equ	0xFF3
 14214                           intcon	equ	0xFF2
 14215                           indf0	equ	0xFEF
 14216                           postinc0	equ	0xFEE
 14217                           fsr0h	equ	0xFEA
 14218                           fsr0l	equ	0xFE9
 14219                           wreg	equ	0xFE8
 14220                           postdec1	equ	0xFE5
 14221                           fsr1h	equ	0xFE2
 14222                           fsr1l	equ	0xFE1
 14223                           indf2	equ	0xFDF
 14224                           fsr2h	equ	0xFDA
 14225                           fsr2l	equ	0xFD9
 14226                           status	equ	0xFD8
 14227                           
 14228 ;; *************** function i2_Clear_runTime_Arrows *****************
 14229 ;; Defined at:
 14230 ;;		line 229 in file "screen_controls.c"
 14231 ;; Parameters:    Size  Location     Type
 14232 ;;		None
 14233 ;; Auto vars:     Size  Location     Type
 14234 ;;  Clear_runTim    1   14[COMRAM] unsigned char 
 14235 ;; Return value:  Size  Location     Type
 14236 ;;                  1    wreg      void 
 14237 ;; Registers used:
 14238 ;;		wreg, status,2, status,0, cstack
 14239 ;; Tracked objects:
 14240 ;;		On entry : 0/0
 14241 ;;		On exit  : 0/0
 14242 ;;		Unchanged: 0/0
 14243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14247 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14248 ;;Total ram usage:        1 bytes
 14249 ;; Hardware stack levels used:    1
 14250 ;; Hardware stack levels required when called:    4
 14251 ;; This function calls:
 14252 ;;		i2_GLCD_GoTo
 14253 ;;		i2_GLCD_WriteData
 14254 ;; This function is called by:
 14255 ;;		i2_Draw_Arrow
 14256 ;; This function uses a non-reentrant model
 14257 ;;
 14258                           
 14259                           	psect	text85
 14260  00238E                     __ptext85:
 14261                           	opt stack 0
 14262  00238E                     i2_Clear_runTime_Arrows:
 14263                           	opt stack 14
 14264                           
 14265                           ;screen_controls.c: 231: unsigned char i=0;
 14266                           
 14267                           ; BSR set to: 0
 14268                           ;incstack = 0
 14269  00238E  0E00               	movlw	0
 14270  002390  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
 14271                           
 14272                           ;screen_controls.c: 233: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 14273  002392  0E02               	movlw	2
 14274  002394  6E0C               	movwf	i2GLCD_GoTo@y,c
 14275  002396  0100               	movlb	0	; () banked
 14276  002398  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14277  00239A  0800               	sublw	0
 14278  00239C  25BD               	addwf	_runTimeX& (0+255),w,b
 14279  00239E  EC04  F012         	call	i2_GLCD_GoTo
 14280                           
 14281                           ;screen_controls.c: 235: for(i=0; i<ARROW_SIZE; i++)
 14282  0023A2  0E00               	movlw	0
 14283  0023A4  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
 14284  0023A6  D004               	goto	i2l817
 14285  0023A8                     
 14286                           ;screen_controls.c: 236: {
 14287                           ;screen_controls.c: 237: GLCD_WriteData(0x00);
 14288  0023A8  0E00               	movlw	0
 14289  0023AA  EC29  F013         	call	i2_GLCD_WriteData
 14290  0023AE  2A0F               	incf	i2Clear_runTime_Arrows@i,f,c
 14291  0023B0                     i2l817:
 14292  0023B0  0100               	movlb	0	; () banked
 14293  0023B2  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14294  0023B4  5C0F               	subwf	i2Clear_runTime_Arrows@i,w,c
 14295  0023B6  A0D8               	btfss	status,0,c
 14296  0023B8  D7F7               	goto	i2l818
 14297                           
 14298                           ; BSR set to: 0
 14299                           ;screen_controls.c: 238: }
 14300                           ;screen_controls.c: 240: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
 14301                           
 14302                           ; BSR set to: 0
 14303  0023BA  0E04               	movlw	4
 14304  0023BC  6E0C               	movwf	i2GLCD_GoTo@y,c
 14305  0023BE  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14306  0023C0  0800               	sublw	0
 14307  0023C2  25BD               	addwf	_runTimeX& (0+255),w,b
 14308  0023C4  EC04  F012         	call	i2_GLCD_GoTo
 14309                           
 14310                           ;screen_controls.c: 241: for(i=0; i<ARROW_SIZE; i++)
 14311  0023C8  0E00               	movlw	0
 14312  0023CA  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
 14313  0023CC  D004               	goto	i2l820
 14314  0023CE                     
 14315                           ;screen_controls.c: 242: {
 14316                           ;screen_controls.c: 243: GLCD_WriteData(0x00);
 14317  0023CE  0E00               	movlw	0
 14318  0023D0  EC29  F013         	call	i2_GLCD_WriteData
 14319  0023D4  2A0F               	incf	i2Clear_runTime_Arrows@i,f,c
 14320  0023D6                     i2l820:
 14321  0023D6  0100               	movlb	0	; () banked
 14322  0023D8  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14323  0023DA  5C0F               	subwf	i2Clear_runTime_Arrows@i,w,c
 14324  0023DC  A0D8               	btfss	status,0,c
 14325  0023DE  D7F7               	goto	i2l821
 14326                           
 14327                           ; BSR set to: 0
 14328                           ;screen_controls.c: 244: }
 14329                           ;screen_controls.c: 246: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
 14330                           
 14331                           ; BSR set to: 0
 14332  0023E0  0E06               	movlw	6
 14333  0023E2  6E0C               	movwf	i2GLCD_GoTo@y,c
 14334  0023E4  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14335  0023E6  0800               	sublw	0
 14336  0023E8  25BD               	addwf	_runTimeX& (0+255),w,b
 14337  0023EA  EC04  F012         	call	i2_GLCD_GoTo
 14338                           
 14339                           ;screen_controls.c: 247: for(i=0; i<ARROW_SIZE; i++)
 14340  0023EE  0E00               	movlw	0
 14341  0023F0  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
 14342  0023F2  D004               	goto	i2l823
 14343  0023F4                     
 14344                           ;screen_controls.c: 248: {
 14345                           ;screen_controls.c: 249: GLCD_WriteData(0x00);
 14346  0023F4  0E00               	movlw	0
 14347  0023F6  EC29  F013         	call	i2_GLCD_WriteData
 14348  0023FA  2A0F               	incf	i2Clear_runTime_Arrows@i,f,c
 14349  0023FC                     i2l823:
 14350  0023FC  0100               	movlb	0	; () banked
 14351  0023FE  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14352  002400  5C0F               	subwf	i2Clear_runTime_Arrows@i,w,c
 14353  002402  B0D8               	btfsc	status,0,c
 14354  002404  0012               	return	
 14355  002406  D7F6               	goto	i2l824
 14356  002408                     __end_ofi2_Clear_runTime_Arrows:
 14357                           	opt stack 0
 14358                           tosu	equ	0xFFF
 14359                           tosh	equ	0xFFE
 14360                           tosl	equ	0xFFD
 14361                           pclatu	equ	0xFFB
 14362                           pclath	equ	0xFFA
 14363                           tblptru	equ	0xFF8
 14364                           tblptrh	equ	0xFF7
 14365                           tblptrl	equ	0xFF6
 14366                           tablat	equ	0xFF5
 14367                           prodh	equ	0xFF4
 14368                           prodl	equ	0xFF3
 14369                           intcon	equ	0xFF2
 14370                           indf0	equ	0xFEF
 14371                           postinc0	equ	0xFEE
 14372                           fsr0h	equ	0xFEA
 14373                           fsr0l	equ	0xFE9
 14374                           wreg	equ	0xFE8
 14375                           postdec1	equ	0xFE5
 14376                           fsr1h	equ	0xFE2
 14377                           fsr1l	equ	0xFE1
 14378                           indf2	equ	0xFDF
 14379                           fsr2h	equ	0xFDA
 14380                           fsr2l	equ	0xFD9
 14381                           status	equ	0xFD8
 14382                           
 14383 ;; *************** function i2_Clear_Brightness_Arrows *****************
 14384 ;; Defined at:
 14385 ;;		line 284 in file "screen_controls.c"
 14386 ;; Parameters:    Size  Location     Type
 14387 ;;		None
 14388 ;; Auto vars:     Size  Location     Type
 14389 ;;  Clear_Bright    1   14[COMRAM] unsigned char 
 14390 ;; Return value:  Size  Location     Type
 14391 ;;                  1    wreg      void 
 14392 ;; Registers used:
 14393 ;;		wreg, status,2, status,0, cstack
 14394 ;; Tracked objects:
 14395 ;;		On entry : 0/0
 14396 ;;		On exit  : 0/0
 14397 ;;		Unchanged: 0/0
 14398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14402 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14403 ;;Total ram usage:        1 bytes
 14404 ;; Hardware stack levels used:    1
 14405 ;; Hardware stack levels required when called:    4
 14406 ;; This function calls:
 14407 ;;		i2_GLCD_GoTo
 14408 ;;		i2_GLCD_WriteData
 14409 ;; This function is called by:
 14410 ;;		i2_Draw_Arrow
 14411 ;; This function uses a non-reentrant model
 14412 ;;
 14413                           
 14414                           	psect	text86
 14415  002B04                     __ptext86:
 14416                           	opt stack 0
 14417  002B04                     i2_Clear_Brightness_Arrows:
 14418                           	opt stack 14
 14419                           
 14420                           ;screen_controls.c: 286: unsigned char i=0;
 14421                           
 14422                           ; BSR set to: 0
 14423                           ;incstack = 0
 14424  002B04  0E00               	movlw	0
 14425  002B06  6E0F               	movwf	i2Clear_Brightness_Arrows@i,c
 14426                           
 14427                           ;screen_controls.c: 288: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 14428  002B08  0E02               	movlw	2
 14429  002B0A  6E0C               	movwf	i2GLCD_GoTo@y,c
 14430  002B0C  0100               	movlb	0	; () banked
 14431  002B0E  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14432  002B10  0800               	sublw	0
 14433  002B12  25BD               	addwf	_runTimeX& (0+255),w,b
 14434  002B14  EC04  F012         	call	i2_GLCD_GoTo
 14435                           
 14436                           ;screen_controls.c: 290: for(i=0; i<ARROW_SIZE; i++)
 14437  002B18  0E00               	movlw	0
 14438  002B1A  6E0F               	movwf	i2Clear_Brightness_Arrows@i,c
 14439  002B1C  D004               	goto	i2l838
 14440  002B1E                     
 14441                           ;screen_controls.c: 291: {
 14442                           ;screen_controls.c: 292: GLCD_WriteData(0x00);
 14443  002B1E  0E00               	movlw	0
 14444  002B20  EC29  F013         	call	i2_GLCD_WriteData
 14445  002B24  2A0F               	incf	i2Clear_Brightness_Arrows@i,f,c
 14446  002B26                     i2l838:
 14447  002B26  0100               	movlb	0	; () banked
 14448  002B28  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14449  002B2A  5C0F               	subwf	i2Clear_Brightness_Arrows@i,w,c
 14450  002B2C  A0D8               	btfss	status,0,c
 14451  002B2E  D7F7               	goto	i2l839
 14452                           
 14453                           ; BSR set to: 0
 14454                           ;screen_controls.c: 293: }
 14455                           ;screen_controls.c: 295: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
 14456                           
 14457                           ; BSR set to: 0
 14458  002B30  0E06               	movlw	6
 14459  002B32  6E0C               	movwf	i2GLCD_GoTo@y,c
 14460  002B34  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14461  002B36  0800               	sublw	0
 14462  002B38  25BD               	addwf	_runTimeX& (0+255),w,b
 14463  002B3A  EC04  F012         	call	i2_GLCD_GoTo
 14464                           
 14465                           ;screen_controls.c: 296: for(i=0; i<ARROW_SIZE; i++)
 14466  002B3E  0E00               	movlw	0
 14467  002B40  6E0F               	movwf	i2Clear_Brightness_Arrows@i,c
 14468  002B42  D004               	goto	i2l841
 14469  002B44                     
 14470                           ;screen_controls.c: 297: {
 14471                           ;screen_controls.c: 298: GLCD_WriteData(0x00);
 14472  002B44  0E00               	movlw	0
 14473  002B46  EC29  F013         	call	i2_GLCD_WriteData
 14474  002B4A  2A0F               	incf	i2Clear_Brightness_Arrows@i,f,c
 14475  002B4C                     i2l841:
 14476  002B4C  0100               	movlb	0	; () banked
 14477  002B4E  51BB               	movf	_ARROW_SIZE& (0+255),w,b
 14478  002B50  5C0F               	subwf	i2Clear_Brightness_Arrows@i,w,c
 14479  002B52  B0D8               	btfsc	status,0,c
 14480  002B54  0012               	return	
 14481  002B56  D7F6               	goto	i2l842
 14482  002B58                     __end_ofi2_Clear_Brightness_Arrows:
 14483                           	opt stack 0
 14484                           tosu	equ	0xFFF
 14485                           tosh	equ	0xFFE
 14486                           tosl	equ	0xFFD
 14487                           pclatu	equ	0xFFB
 14488                           pclath	equ	0xFFA
 14489                           tblptru	equ	0xFF8
 14490                           tblptrh	equ	0xFF7
 14491                           tblptrl	equ	0xFF6
 14492                           tablat	equ	0xFF5
 14493                           prodh	equ	0xFF4
 14494                           prodl	equ	0xFF3
 14495                           intcon	equ	0xFF2
 14496                           indf0	equ	0xFEF
 14497                           postinc0	equ	0xFEE
 14498                           fsr0h	equ	0xFEA
 14499                           fsr0l	equ	0xFE9
 14500                           wreg	equ	0xFE8
 14501                           postdec1	equ	0xFE5
 14502                           fsr1h	equ	0xFE2
 14503                           fsr1l	equ	0xFE1
 14504                           indf2	equ	0xFDF
 14505                           fsr2h	equ	0xFDA
 14506                           fsr2l	equ	0xFD9
 14507                           status	equ	0xFD8
 14508                           
 14509 ;; *************** function i2_Clear_Arrow_Column *****************
 14510 ;; Defined at:
 14511 ;;		line 120 in file "screen_controls.c"
 14512 ;; Parameters:    Size  Location     Type
 14513 ;;		None
 14514 ;; Auto vars:     Size  Location     Type
 14515 ;;  Clear_Arrow_    1   22[COMRAM] unsigned char 
 14516 ;;  Clear_Arrow_    1   21[COMRAM] unsigned char 
 14517 ;; Return value:  Size  Location     Type
 14518 ;;                  1    wreg      void 
 14519 ;; Registers used:
 14520 ;;		wreg, status,2, status,0, cstack
 14521 ;; Tracked objects:
 14522 ;;		On entry : 0/0
 14523 ;;		On exit  : 0/0
 14524 ;;		Unchanged: 0/0
 14525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14528 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14529 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14530 ;;Total ram usage:        9 bytes
 14531 ;; Hardware stack levels used:    1
 14532 ;; Hardware stack levels required when called:    4
 14533 ;; This function calls:
 14534 ;;		i2_GLCD_GoTo
 14535 ;;		i2_GLCD_WriteData
 14536 ;; This function is called by:
 14537 ;;		i2_Draw_Arrow
 14538 ;; This function uses a non-reentrant model
 14539 ;;
 14540                           
 14541                           	psect	text87
 14542  00284C                     __ptext87:
 14543                           	opt stack 0
 14544  00284C                     i2_Clear_Arrow_Column:
 14545                           	opt stack 14
 14546                           
 14547                           ;screen_controls.c: 122: unsigned char i, j;
 14548                           ;screen_controls.c: 124: for(i = 0; i < 64/8; i++)
 14549                           
 14550                           ; BSR set to: 0
 14551                           ;incstack = 0
 14552  00284C  0E00               	movlw	0
 14553  00284E  6E17               	movwf	i2Clear_Arrow_Column@i,c
 14554  002850                     i2l4417:
 14555  002850  0E07               	movlw	7
 14556  002852  6417               	cpfsgt	i2Clear_Arrow_Column@i,c
 14557  002854  D001               	goto	i2l800
 14558  002856  0012               	return	
 14559  002858                     i2l800:
 14560                           
 14561                           ;screen_controls.c: 125: {
 14562                           ;screen_controls.c: 126: GLCD_GoTo(0, i);
 14563  002858  C017  F00C         	movff	i2Clear_Arrow_Column@i,i2GLCD_GoTo@y
 14564  00285C  0E00               	movlw	0
 14565  00285E  EC04  F012         	call	i2_GLCD_GoTo
 14566                           
 14567                           ;screen_controls.c: 128: for(j = 0; j < (xMenuStart - 1); j++)
 14568  002862  0E00               	movlw	0
 14569  002864  6E16               	movwf	i2Clear_Arrow_Column@j,c
 14570  002866  D004               	goto	i2l802
 14571  002868                     
 14572                           ;screen_controls.c: 129: {
 14573                           ;screen_controls.c: 130: GLCD_WriteData(0x00);
 14574  002868  0E00               	movlw	0
 14575  00286A  EC29  F013         	call	i2_GLCD_WriteData
 14576  00286E  2A16               	incf	i2Clear_Arrow_Column@j,f,c
 14577  002870                     i2l802:
 14578  002870  0EFF               	movlw	255
 14579  002872  6E0F               	movwf	??i2_Clear_Arrow_Column& (0+255),c
 14580  002874  0EFF               	movlw	255
 14581  002876  6E10               	movwf	(??i2_Clear_Arrow_Column+1)& (0+255),c
 14582  002878  0100               	movlb	0	; () banked
 14583  00287A  51BA               	movf	_xMenuStart& (0+255),w,b
 14584  00287C  6E11               	movwf	(??i2_Clear_Arrow_Column+2)& (0+255),c
 14585  00287E  6A12               	clrf	(??i2_Clear_Arrow_Column+3)& (0+255),c
 14586  002880  500F               	movf	??i2_Clear_Arrow_Column,w,c
 14587  002882  2611               	addwf	??i2_Clear_Arrow_Column+2,f,c
 14588  002884  5010               	movf	??i2_Clear_Arrow_Column+1,w,c
 14589  002886  2212               	addwfc	??i2_Clear_Arrow_Column+3,f,c
 14590  002888  5016               	movf	i2Clear_Arrow_Column@j,w,c
 14591  00288A  6E13               	movwf	(??i2_Clear_Arrow_Column+4)& (0+255),c
 14592  00288C  6A14               	clrf	(??i2_Clear_Arrow_Column+5)& (0+255),c
 14593  00288E  5011               	movf	??i2_Clear_Arrow_Column+2,w,c
 14594  002890  5C13               	subwf	??i2_Clear_Arrow_Column+4,w,c
 14595  002892  5014               	movf	??i2_Clear_Arrow_Column+5,w,c
 14596  002894  0A80               	xorlw	128
 14597  002896  6E15               	movwf	(??i2_Clear_Arrow_Column+6)& (0+255),c
 14598  002898  5012               	movf	??i2_Clear_Arrow_Column+3,w,c
 14599  00289A  0A80               	xorlw	128
 14600  00289C  5815               	subwfb	(??i2_Clear_Arrow_Column+6)& (0+255),w,c
 14601  00289E  A0D8               	btfss	status,0,c
 14602  0028A0  D7E3               	goto	i2l803
 14603                           
 14604                           ; BSR set to: 0
 14605                           
 14606                           ; BSR set to: 0
 14607  0028A2  2A17               	incf	i2Clear_Arrow_Column@i,f,c
 14608  0028A4  D7D5               	goto	i2l4417
 14609  0028A6                     __end_ofi2_Clear_Arrow_Column:
 14610                           	opt stack 0
 14611                           tosu	equ	0xFFF
 14612                           tosh	equ	0xFFE
 14613                           tosl	equ	0xFFD
 14614                           pclatu	equ	0xFFB
 14615                           pclath	equ	0xFFA
 14616                           tblptru	equ	0xFF8
 14617                           tblptrh	equ	0xFF7
 14618                           tblptrl	equ	0xFF6
 14619                           tablat	equ	0xFF5
 14620                           prodh	equ	0xFF4
 14621                           prodl	equ	0xFF3
 14622                           intcon	equ	0xFF2
 14623                           indf0	equ	0xFEF
 14624                           postinc0	equ	0xFEE
 14625                           fsr0h	equ	0xFEA
 14626                           fsr0l	equ	0xFE9
 14627                           wreg	equ	0xFE8
 14628                           postdec1	equ	0xFE5
 14629                           fsr1h	equ	0xFE2
 14630                           fsr1l	equ	0xFE1
 14631                           indf2	equ	0xFDF
 14632                           fsr2h	equ	0xFDA
 14633                           fsr2l	equ	0xFD9
 14634                           status	equ	0xFD8
 14635                           
 14636 ;; *************** function i2_GLCD_WriteData *****************
 14637 ;; Defined at:
 14638 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
 14639 ;; Parameters:    Size  Location     Type
 14640 ;;  dataToWrite     1    wreg     unsigned char 
 14641 ;; Auto vars:     Size  Location     Type
 14642 ;;  dataToWrite     1    9[COMRAM] unsigned char 
 14643 ;; Return value:  Size  Location     Type
 14644 ;;                  1    wreg      void 
 14645 ;; Registers used:
 14646 ;;		wreg, status,2, status,0, cstack
 14647 ;; Tracked objects:
 14648 ;;		On entry : 0/0
 14649 ;;		On exit  : 0/0
 14650 ;;		Unchanged: 0/0
 14651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14656 ;;Total ram usage:        2 bytes
 14657 ;; Hardware stack levels used:    1
 14658 ;; Hardware stack levels required when called:    2
 14659 ;; This function calls:
 14660 ;;		i2_GLCD_Delay
 14661 ;;		i2_GLCD_DisableController
 14662 ;;		i2_GLCD_EnableController
 14663 ;;		i2_GLCD_ReadStatus
 14664 ;;		i2___awdiv
 14665 ;; This function is called by:
 14666 ;;		i2_GLCD_WriteChar
 14667 ;;		i2_Make_Arrow
 14668 ;;		i2_Clear_Arrow_Column
 14669 ;;		i2_Clear_runTime_Arrows
 14670 ;;		i2_Clear_Brightness_Arrows
 14671 ;;		i2_Clear_startColors_Arrows
 14672 ;; This function uses a non-reentrant model
 14673 ;;
 14674                           
 14675                           	psect	text88
 14676  002652                     __ptext88:
 14677                           	opt stack 0
 14678  002652                     i2_GLCD_WriteData:
 14679                           	opt stack 15
 14680                           
 14681                           ;incstack = 0
 14682                           ;i2GLCD_WriteData@dataToWrite stored from wreg
 14683  002652  6E0A               	movwf	i2GLCD_WriteData@dataToWrite,c
 14684  002654                     
 14685                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
 14686  002654  C0C4  F001         	movff	_screen_x,i2___awdiv@dividend
 14687  002658  6A02               	clrf	i2___awdiv@dividend+1,c
 14688  00265A  0E00               	movlw	0
 14689  00265C  6E04               	movwf	i2___awdiv@divisor+1,c
 14690  00265E  0E40               	movlw	64
 14691  002660  6E03               	movwf	i2___awdiv@divisor,c
 14692  002662  EC45  F011         	call	i2___awdiv	;wreg free
 14693  002666  5001               	movf	?i2___awdiv,w,c
 14694  002668  ECC5  F018         	call	i2_GLCD_ReadStatus
 14695  00266C  6E09               	movwf	??i2_GLCD_WriteData& (0+255),c
 14696  00266E  BE09               	btfsc	??i2_GLCD_WriteData,7,c
 14697  002670  D7F1               	goto	i2l4013
 14698                           
 14699                           ;KS0108-PIC18.c: 116: TRISD = 0x00;
 14700  002672  0E00               	movlw	0
 14701  002674  6E95               	movwf	3989,c	;volatile
 14702                           
 14703                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
 14704  002676  9280               	bcf	3968,1,c	;volatile
 14705                           
 14706                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
 14707  002678  8480               	bsf	3968,2,c	;volatile
 14708                           
 14709                           ;KS0108-PIC18.c: 119: PORTD = dataToWrite;
 14710  00267A  C00A  FF83         	movff	i2GLCD_WriteData@dataToWrite,3971	;volatile
 14711                           
 14712                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
 14713  00267E  C0C4  F001         	movff	_screen_x,i2___awdiv@dividend
 14714  002682  6A02               	clrf	i2___awdiv@dividend+1,c
 14715  002684  0E00               	movlw	0
 14716  002686  6E04               	movwf	i2___awdiv@divisor+1,c
 14717  002688  0E40               	movlw	64
 14718  00268A  6E03               	movwf	i2___awdiv@divisor,c
 14719  00268C  EC45  F011         	call	i2___awdiv	;wreg free
 14720  002690  5001               	movf	?i2___awdiv,w,c
 14721  002692  EC9F  F018         	call	i2_GLCD_EnableController
 14722                           
 14723                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
 14724  002696  8680               	bsf	3968,3,c	;volatile
 14725                           
 14726                           ;KS0108-PIC18.c: 122: GLCD_Delay();
 14727  002698  EC69  F019         	call	i2_GLCD_Delay	;wreg free
 14728                           
 14729                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
 14730  00269C  9680               	bcf	3968,3,c	;volatile
 14731                           
 14732                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
 14733  00269E  C0C4  F001         	movff	_screen_x,i2___awdiv@dividend
 14734  0026A2  6A02               	clrf	i2___awdiv@dividend+1,c
 14735  0026A4  0E00               	movlw	0
 14736  0026A6  6E04               	movwf	i2___awdiv@divisor+1,c
 14737  0026A8  0E40               	movlw	64
 14738  0026AA  6E03               	movwf	i2___awdiv@divisor,c
 14739  0026AC  EC45  F011         	call	i2___awdiv	;wreg free
 14740  0026B0  5001               	movf	?i2___awdiv,w,c
 14741  0026B2  ECB2  F018         	call	i2_GLCD_DisableController
 14742                           
 14743                           ;KS0108-PIC18.c: 125: screen_x++;
 14744  0026B6  0100               	movlb	0	; () banked
 14745  0026B8  2BC4               	incf	_screen_x& (0+255),f,b
 14746                           
 14747                           ; BSR set to: 0
 14748  0026BA  0012               	return		;funcret
 14749  0026BC                     __end_ofi2_GLCD_WriteData:
 14750                           	opt stack 0
 14751                           tosu	equ	0xFFF
 14752                           tosh	equ	0xFFE
 14753                           tosl	equ	0xFFD
 14754                           pclatu	equ	0xFFB
 14755                           pclath	equ	0xFFA
 14756                           tblptru	equ	0xFF8
 14757                           tblptrh	equ	0xFF7
 14758                           tblptrl	equ	0xFF6
 14759                           tablat	equ	0xFF5
 14760                           prodh	equ	0xFF4
 14761                           prodl	equ	0xFF3
 14762                           intcon	equ	0xFF2
 14763                           indf0	equ	0xFEF
 14764                           postinc0	equ	0xFEE
 14765                           fsr0h	equ	0xFEA
 14766                           fsr0l	equ	0xFE9
 14767                           wreg	equ	0xFE8
 14768                           postdec1	equ	0xFE5
 14769                           fsr1h	equ	0xFE2
 14770                           fsr1l	equ	0xFE1
 14771                           indf2	equ	0xFDF
 14772                           fsr2h	equ	0xFDA
 14773                           fsr2l	equ	0xFD9
 14774                           status	equ	0xFD8
 14775                           
 14776 ;; *************** function i2_GLCD_GoTo *****************
 14777 ;; Defined at:
 14778 ;;		line 25 in file "ks0108lib/KS0108.c"
 14779 ;; Parameters:    Size  Location     Type
 14780 ;;  x               1    wreg     unsigned char 
 14781 ;;  y               1   11[COMRAM] unsigned char 
 14782 ;; Auto vars:     Size  Location     Type
 14783 ;;  x               1   12[COMRAM] unsigned char 
 14784 ;;  GLCD_GoTo       1   13[COMRAM] unsigned char 
 14785 ;; Return value:  Size  Location     Type
 14786 ;;                  1    wreg      void 
 14787 ;; Registers used:
 14788 ;;		wreg, status,2, status,0, cstack
 14789 ;; Tracked objects:
 14790 ;;		On entry : 0/0
 14791 ;;		On exit  : 0/0
 14792 ;;		Unchanged: 0/0
 14793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14794 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14795 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14797 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14798 ;;Total ram usage:        3 bytes
 14799 ;; Hardware stack levels used:    1
 14800 ;; Hardware stack levels required when called:    3
 14801 ;; This function calls:
 14802 ;;		i2_GLCD_WriteCommand
 14803 ;;		i2___awdiv
 14804 ;; This function is called by:
 14805 ;;		_Run_Time_Menu_Function
 14806 ;;		_Brightness_Menu_Function
 14807 ;;		_Start_Color_Menu_Function
 14808 ;;		i2_Draw_Arrow
 14809 ;;		i2_Clear_Arrow_Column
 14810 ;;		i2_Clear_runTime_Arrows
 14811 ;;		i2_Draw_runTime_Arrow
 14812 ;;		i2_Clear_Brightness_Arrows
 14813 ;;		i2_Draw_startColors_Arrow
 14814 ;;		i2_Clear_startColors_Arrows
 14815 ;;		i2_Draw_Brightness_Arrow
 14816 ;; This function uses a non-reentrant model
 14817 ;;
 14818                           
 14819                           	psect	text89
 14820  002408                     __ptext89:
 14821                           	opt stack 0
 14822  002408                     i2_GLCD_GoTo:
 14823                           	opt stack 16
 14824                           
 14825                           ; BSR set to: 0
 14826                           ;incstack = 0
 14827                           ;i2GLCD_GoTo@x stored from wreg
 14828  002408  6E0D               	movwf	i2GLCD_GoTo@x,c
 14829                           
 14830                           ;KS0108.c: 27: unsigned char i;
 14831                           ;KS0108.c: 28: screen_x = x;
 14832  00240A  C00D  F0C4         	movff	i2GLCD_GoTo@x,_screen_x
 14833                           
 14834                           ;KS0108.c: 29: screen_y = y;
 14835  00240E  C00C  F0C3         	movff	i2GLCD_GoTo@y,_screen_y
 14836                           
 14837                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
 14838  002412  0E00               	movlw	0
 14839  002414  6E0E               	movwf	i2GLCD_GoTo@i,c
 14840  002416                     i2l4145:
 14841  002416  0E01               	movlw	1
 14842  002418  640E               	cpfsgt	i2GLCD_GoTo@i,c
 14843  00241A  D001               	goto	i2l620
 14844  00241C  D012               	goto	i2u270_40
 14845  00241E                     i2l620:
 14846                           
 14847                           ;KS0108.c: 32: {
 14848                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
 14849  00241E  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
 14850  002422  0E40               	movlw	64
 14851  002424  EC32  F018         	call	i2_GLCD_WriteCommand
 14852                           
 14853                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
 14854  002428  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
 14855  00242C  500C               	movf	i2GLCD_GoTo@y,w,c
 14856  00242E  09B8               	iorlw	184
 14857  002430  EC32  F018         	call	i2_GLCD_WriteCommand
 14858                           
 14859                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
 14860  002434  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
 14861  002438  0EC0               	movlw	192
 14862  00243A  EC32  F018         	call	i2_GLCD_WriteCommand
 14863  00243E  2A0E               	incf	i2GLCD_GoTo@i,f,c
 14864  002440  D7EA               	goto	i2l4145
 14865  002442                     i2u270_40:
 14866                           
 14867                           ;KS0108.c: 36: }
 14868                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
 14869  002442  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
 14870  002446  6A02               	clrf	i2___awdiv@dividend+1,c
 14871  002448  0E00               	movlw	0
 14872  00244A  6E04               	movwf	i2___awdiv@divisor+1,c
 14873  00244C  0E40               	movlw	64
 14874  00244E  6E03               	movwf	i2___awdiv@divisor,c
 14875  002450  EC45  F011         	call	i2___awdiv	;wreg free
 14876  002454  5001               	movf	?i2___awdiv,w,c
 14877  002456  6E09               	movwf	i2GLCD_WriteCommand@controller,c
 14878  002458  500D               	movf	i2GLCD_GoTo@x,w,c
 14879  00245A  0B3F               	andlw	63
 14880  00245C  0940               	iorlw	64
 14881  00245E  EC32  F018         	call	i2_GLCD_WriteCommand
 14882                           
 14883                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
 14884  002462  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
 14885  002466  6A02               	clrf	i2___awdiv@dividend+1,c
 14886  002468  0E00               	movlw	0
 14887  00246A  6E04               	movwf	i2___awdiv@divisor+1,c
 14888  00246C  0E40               	movlw	64
 14889  00246E  6E03               	movwf	i2___awdiv@divisor,c
 14890  002470  EC45  F011         	call	i2___awdiv	;wreg free
 14891  002474  5001               	movf	?i2___awdiv,w,c
 14892  002476  6E09               	movwf	i2GLCD_WriteCommand@controller,c
 14893  002478  500C               	movf	i2GLCD_GoTo@y,w,c
 14894  00247A  09B8               	iorlw	184
 14895  00247C  EC32  F018         	call	i2_GLCD_WriteCommand
 14896  002480  0012               	return		;funcret
 14897  002482                     __end_ofi2_GLCD_GoTo:
 14898                           	opt stack 0
 14899                           tosu	equ	0xFFF
 14900                           tosh	equ	0xFFE
 14901                           tosl	equ	0xFFD
 14902                           pclatu	equ	0xFFB
 14903                           pclath	equ	0xFFA
 14904                           tblptru	equ	0xFF8
 14905                           tblptrh	equ	0xFF7
 14906                           tblptrl	equ	0xFF6
 14907                           tablat	equ	0xFF5
 14908                           prodh	equ	0xFF4
 14909                           prodl	equ	0xFF3
 14910                           intcon	equ	0xFF2
 14911                           indf0	equ	0xFEF
 14912                           postinc0	equ	0xFEE
 14913                           fsr0h	equ	0xFEA
 14914                           fsr0l	equ	0xFE9
 14915                           wreg	equ	0xFE8
 14916                           postdec1	equ	0xFE5
 14917                           fsr1h	equ	0xFE2
 14918                           fsr1l	equ	0xFE1
 14919                           indf2	equ	0xFDF
 14920                           fsr2h	equ	0xFDA
 14921                           fsr2l	equ	0xFD9
 14922                           status	equ	0xFD8
 14923                           
 14924 ;; *************** function i2___awdiv *****************
 14925 ;; Defined at:
 14926 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 14927 ;; Parameters:    Size  Location     Type
 14928 ;;  dividend        2    0[COMRAM] int 
 14929 ;;  divisor         2    2[COMRAM] int 
 14930 ;; Auto vars:     Size  Location     Type
 14931 ;;  __awdiv         2    6[COMRAM] int 
 14932 ;;  __awdiv         1    5[COMRAM] unsigned char 
 14933 ;;  __awdiv         1    4[COMRAM] unsigned char 
 14934 ;; Return value:  Size  Location     Type
 14935 ;;                  2    0[COMRAM] int 
 14936 ;; Registers used:
 14937 ;;		wreg, status,2, status,0
 14938 ;; Tracked objects:
 14939 ;;		On entry : 0/0
 14940 ;;		On exit  : 0/0
 14941 ;;		Unchanged: 0/0
 14942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14944 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14946 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14947 ;;Total ram usage:        8 bytes
 14948 ;; Hardware stack levels used:    1
 14949 ;; This function calls:
 14950 ;;		Nothing
 14951 ;; This function is called by:
 14952 ;;		i2_GLCD_GoTo
 14953 ;;		i2_GLCD_WriteData
 14954 ;; This function uses a non-reentrant model
 14955 ;;
 14956                           
 14957                           	psect	text90
 14958  00228A                     __ptext90:
 14959                           	opt stack 0
 14960  00228A                     i2___awdiv:
 14961                           	opt stack 16
 14962                           
 14963                           ;incstack = 0
 14964  00228A  0E00               	movlw	0
 14965  00228C  6E06               	movwf	i2___awdiv@sign,c
 14966  00228E  AE04               	btfss	i2___awdiv@divisor+1,7,c
 14967  002290  D006               	goto	i2l1045
 14968  002292  6C03               	negf	i2___awdiv@divisor,c
 14969  002294  1E04               	comf	i2___awdiv@divisor+1,f,c
 14970  002296  B0D8               	btfsc	status,0,c
 14971  002298  2A04               	incf	i2___awdiv@divisor+1,f,c
 14972  00229A  0E01               	movlw	1
 14973  00229C  6E06               	movwf	i2___awdiv@sign,c
 14974  00229E                     i2l1045:
 14975  00229E  AE02               	btfss	i2___awdiv@dividend+1,7,c
 14976  0022A0  D006               	goto	i2l1046
 14977  0022A2  6C01               	negf	i2___awdiv@dividend,c
 14978  0022A4  1E02               	comf	i2___awdiv@dividend+1,f,c
 14979  0022A6  B0D8               	btfsc	status,0,c
 14980  0022A8  2A02               	incf	i2___awdiv@dividend+1,f,c
 14981  0022AA  0E01               	movlw	1
 14982  0022AC  1A06               	xorwf	i2___awdiv@sign,f,c
 14983  0022AE                     i2l1046:
 14984  0022AE  0E00               	movlw	0
 14985  0022B0  6E08               	movwf	i2___awdiv@quotient+1,c
 14986  0022B2  0E00               	movlw	0
 14987  0022B4  6E07               	movwf	i2___awdiv@quotient,c
 14988  0022B6  5003               	movf	i2___awdiv@divisor,w,c
 14989  0022B8  1004               	iorwf	i2___awdiv@divisor+1,w,c
 14990  0022BA  B4D8               	btfsc	status,2,c
 14991  0022BC  D01C               	goto	i2l1053
 14992  0022BE  0E01               	movlw	1
 14993  0022C0  6E05               	movwf	i2___awdiv@counter,c
 14994  0022C2  D004               	goto	i2l1048
 14995  0022C4  90D8               	bcf	status,0,c
 14996  0022C6  3603               	rlcf	i2___awdiv@divisor,f,c
 14997  0022C8  3604               	rlcf	i2___awdiv@divisor+1,f,c
 14998  0022CA  2A05               	incf	i2___awdiv@counter,f,c
 14999  0022CC                     i2l1048:
 15000  0022CC  AE04               	btfss	i2___awdiv@divisor+1,7,c
 15001  0022CE  D7FA               	goto	i2l1049
 15002  0022D0                     i2u247_40:
 15003  0022D0  90D8               	bcf	status,0,c
 15004  0022D2  3607               	rlcf	i2___awdiv@quotient,f,c
 15005  0022D4  3608               	rlcf	i2___awdiv@quotient+1,f,c
 15006  0022D6  5003               	movf	i2___awdiv@divisor,w,c
 15007  0022D8  5C01               	subwf	i2___awdiv@dividend,w,c
 15008  0022DA  5004               	movf	i2___awdiv@divisor+1,w,c
 15009  0022DC  5802               	subwfb	i2___awdiv@dividend+1,w,c
 15010  0022DE  A0D8               	btfss	status,0,c
 15011  0022E0  D005               	goto	i2l1052
 15012  0022E2  5003               	movf	i2___awdiv@divisor,w,c
 15013  0022E4  5E01               	subwf	i2___awdiv@dividend,f,c
 15014  0022E6  5004               	movf	i2___awdiv@divisor+1,w,c
 15015  0022E8  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 15016  0022EA  8007               	bsf	i2___awdiv@quotient,0,c
 15017  0022EC                     i2l1052:
 15018  0022EC  90D8               	bcf	status,0,c
 15019  0022EE  3204               	rrcf	i2___awdiv@divisor+1,f,c
 15020  0022F0  3203               	rrcf	i2___awdiv@divisor,f,c
 15021  0022F2  2E05               	decfsz	i2___awdiv@counter,f,c
 15022  0022F4  D7ED               	goto	i2u247_40
 15023  0022F6                     i2l1053:
 15024  0022F6  5006               	movf	i2___awdiv@sign,w,c
 15025  0022F8  B4D8               	btfsc	status,2,c
 15026  0022FA  D004               	goto	i2l1054
 15027  0022FC  6C07               	negf	i2___awdiv@quotient,c
 15028  0022FE  1E08               	comf	i2___awdiv@quotient+1,f,c
 15029  002300  B0D8               	btfsc	status,0,c
 15030  002302  2A08               	incf	i2___awdiv@quotient+1,f,c
 15031  002304                     i2l1054:
 15032  002304  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 15033  002308  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 15034  00230C  0012               	return	
 15035  00230E                     __end_ofi2___awdiv:
 15036                           	opt stack 0
 15037                           tosu	equ	0xFFF
 15038                           tosh	equ	0xFFE
 15039                           tosl	equ	0xFFD
 15040                           pclatu	equ	0xFFB
 15041                           pclath	equ	0xFFA
 15042                           tblptru	equ	0xFF8
 15043                           tblptrh	equ	0xFF7
 15044                           tblptrl	equ	0xFF6
 15045                           tablat	equ	0xFF5
 15046                           prodh	equ	0xFF4
 15047                           prodl	equ	0xFF3
 15048                           intcon	equ	0xFF2
 15049                           indf0	equ	0xFEF
 15050                           postinc0	equ	0xFEE
 15051                           fsr0h	equ	0xFEA
 15052                           fsr0l	equ	0xFE9
 15053                           wreg	equ	0xFE8
 15054                           postdec1	equ	0xFE5
 15055                           fsr1h	equ	0xFE2
 15056                           fsr1l	equ	0xFE1
 15057                           indf2	equ	0xFDF
 15058                           fsr2h	equ	0xFDA
 15059                           fsr2l	equ	0xFD9
 15060                           status	equ	0xFD8
 15061                           
 15062 ;; *************** function i2_GLCD_WriteCommand *****************
 15063 ;; Defined at:
 15064 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
 15065 ;; Parameters:    Size  Location     Type
 15066 ;;  commandToWri    1    wreg     unsigned char 
 15067 ;;  controller      1    8[COMRAM] unsigned char 
 15068 ;; Auto vars:     Size  Location     Type
 15069 ;;  commandToWri    1   10[COMRAM] unsigned char 
 15070 ;; Return value:  Size  Location     Type
 15071 ;;                  1    wreg      void 
 15072 ;; Registers used:
 15073 ;;		wreg, status,2, status,0, cstack
 15074 ;; Tracked objects:
 15075 ;;		On entry : 0/0
 15076 ;;		On exit  : 0/0
 15077 ;;		Unchanged: 0/0
 15078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15079 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15082 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15083 ;;Total ram usage:        3 bytes
 15084 ;; Hardware stack levels used:    1
 15085 ;; Hardware stack levels required when called:    2
 15086 ;; This function calls:
 15087 ;;		i2_GLCD_Delay
 15088 ;;		i2_GLCD_DisableController
 15089 ;;		i2_GLCD_EnableController
 15090 ;;		i2_GLCD_ReadStatus
 15091 ;; This function is called by:
 15092 ;;		i2_GLCD_GoTo
 15093 ;; This function uses a non-reentrant model
 15094 ;;
 15095                           
 15096                           	psect	text91
 15097  003064                     __ptext91:
 15098                           	opt stack 0
 15099  003064                     i2_GLCD_WriteCommand:
 15100                           	opt stack 16
 15101                           
 15102                           ;incstack = 0
 15103                           ;i2GLCD_WriteCommand@commandToWrite stored from wreg
 15104  003064  6E0B               	movwf	i2GLCD_WriteCommand@commandToWrite,c
 15105  003066                     
 15106                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
 15107  003066  5009               	movf	i2GLCD_WriteCommand@controller,w,c
 15108  003068  ECC5  F018         	call	i2_GLCD_ReadStatus
 15109  00306C  6E0A               	movwf	??i2_GLCD_WriteCommand& (0+255),c
 15110  00306E  BE0A               	btfsc	??i2_GLCD_WriteCommand,7,c
 15111  003070  D7FA               	goto	i2l3993
 15112                           
 15113                           ;KS0108-PIC18.c: 82: TRISD = 0x00;
 15114  003072  0E00               	movlw	0
 15115  003074  6E95               	movwf	3989,c	;volatile
 15116                           
 15117                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
 15118  003076  0EF9               	movlw	249
 15119  003078  1680               	andwf	3968,f,c	;volatile
 15120                           
 15121                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
 15122  00307A  5009               	movf	i2GLCD_WriteCommand@controller,w,c
 15123  00307C  EC9F  F018         	call	i2_GLCD_EnableController
 15124                           
 15125                           ;KS0108-PIC18.c: 85: PORTD = commandToWrite;
 15126  003080  C00B  FF83         	movff	i2GLCD_WriteCommand@commandToWrite,3971	;volatile
 15127                           
 15128                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
 15129  003084  8680               	bsf	3968,3,c	;volatile
 15130                           
 15131                           ;KS0108-PIC18.c: 87: GLCD_Delay();
 15132  003086  EC69  F019         	call	i2_GLCD_Delay	;wreg free
 15133                           
 15134                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
 15135  00308A  9680               	bcf	3968,3,c	;volatile
 15136                           
 15137                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
 15138  00308C  5009               	movf	i2GLCD_WriteCommand@controller,w,c
 15139  00308E  ECB2  F018         	call	i2_GLCD_DisableController
 15140  003092  0012               	return		;funcret
 15141  003094                     __end_ofi2_GLCD_WriteCommand:
 15142                           	opt stack 0
 15143                           tosu	equ	0xFFF
 15144                           tosh	equ	0xFFE
 15145                           tosl	equ	0xFFD
 15146                           pclatu	equ	0xFFB
 15147                           pclath	equ	0xFFA
 15148                           tblptru	equ	0xFF8
 15149                           tblptrh	equ	0xFF7
 15150                           tblptrl	equ	0xFF6
 15151                           tablat	equ	0xFF5
 15152                           prodh	equ	0xFF4
 15153                           prodl	equ	0xFF3
 15154                           intcon	equ	0xFF2
 15155                           indf0	equ	0xFEF
 15156                           postinc0	equ	0xFEE
 15157                           fsr0h	equ	0xFEA
 15158                           fsr0l	equ	0xFE9
 15159                           wreg	equ	0xFE8
 15160                           postdec1	equ	0xFE5
 15161                           fsr1h	equ	0xFE2
 15162                           fsr1l	equ	0xFE1
 15163                           indf2	equ	0xFDF
 15164                           fsr2h	equ	0xFDA
 15165                           fsr2l	equ	0xFD9
 15166                           status	equ	0xFD8
 15167                           
 15168 ;; *************** function i2_GLCD_ReadStatus *****************
 15169 ;; Defined at:
 15170 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
 15171 ;; Parameters:    Size  Location     Type
 15172 ;;  controller      1    wreg     unsigned char 
 15173 ;; Auto vars:     Size  Location     Type
 15174 ;;  controller      1    2[COMRAM] unsigned char 
 15175 ;;  GLCD_ReadSta    1    1[COMRAM] unsigned char 
 15176 ;; Return value:  Size  Location     Type
 15177 ;;                  1    wreg      unsigned char 
 15178 ;; Registers used:
 15179 ;;		wreg, status,2, status,0, cstack
 15180 ;; Tracked objects:
 15181 ;;		On entry : 0/0
 15182 ;;		On exit  : 0/0
 15183 ;;		Unchanged: 0/0
 15184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15188 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15189 ;;Total ram usage:        2 bytes
 15190 ;; Hardware stack levels used:    1
 15191 ;; Hardware stack levels required when called:    1
 15192 ;; This function calls:
 15193 ;;		i2_GLCD_Delay
 15194 ;;		i2_GLCD_DisableController
 15195 ;;		i2_GLCD_EnableController
 15196 ;; This function is called by:
 15197 ;;		i2_GLCD_WriteCommand
 15198 ;;		i2_GLCD_WriteData
 15199 ;; This function uses a non-reentrant model
 15200 ;;
 15201                           
 15202                           	psect	text92
 15203  00318A                     __ptext92:
 15204                           	opt stack 0
 15205  00318A                     i2_GLCD_ReadStatus:
 15206                           	opt stack 15
 15207                           
 15208                           ;incstack = 0
 15209                           ;i2GLCD_ReadStatus@controller stored from wreg
 15210  00318A  6E03               	movwf	i2GLCD_ReadStatus@controller,c
 15211                           
 15212                           ;KS0108-PIC18.c: 64: unsigned char status;
 15213                           ;KS0108-PIC18.c: 65: TRISD = 0xFF;
 15214  00318C  6895               	setf	3989,c	;volatile
 15215                           
 15216                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
 15217  00318E  8280               	bsf	3968,1,c	;volatile
 15218                           
 15219                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
 15220  003190  9480               	bcf	3968,2,c	;volatile
 15221                           
 15222                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
 15223  003192  5003               	movf	i2GLCD_ReadStatus@controller,w,c
 15224  003194  EC9F  F018         	call	i2_GLCD_EnableController
 15225                           
 15226                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
 15227  003198  8680               	bsf	3968,3,c	;volatile
 15228                           
 15229                           ;KS0108-PIC18.c: 70: GLCD_Delay();
 15230  00319A  EC69  F019         	call	i2_GLCD_Delay	;wreg free
 15231                           
 15232                           ;KS0108-PIC18.c: 71: status = PORTD;
 15233  00319E  CF83 F002          	movff	3971,i2GLCD_ReadStatus@status	;volatile
 15234                           
 15235                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
 15236  0031A2  9680               	bcf	3968,3,c	;volatile
 15237                           
 15238                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
 15239  0031A4  5003               	movf	i2GLCD_ReadStatus@controller,w,c
 15240  0031A6  ECB2  F018         	call	i2_GLCD_DisableController
 15241                           
 15242                           ;KS0108-PIC18.c: 74: return status;
 15243  0031AA  5002               	movf	i2GLCD_ReadStatus@status,w,c
 15244  0031AC  0012               	return	
 15245  0031AE                     __end_ofi2_GLCD_ReadStatus:
 15246                           	opt stack 0
 15247                           tosu	equ	0xFFF
 15248                           tosh	equ	0xFFE
 15249                           tosl	equ	0xFFD
 15250                           pclatu	equ	0xFFB
 15251                           pclath	equ	0xFFA
 15252                           tblptru	equ	0xFF8
 15253                           tblptrh	equ	0xFF7
 15254                           tblptrl	equ	0xFF6
 15255                           tablat	equ	0xFF5
 15256                           prodh	equ	0xFF4
 15257                           prodl	equ	0xFF3
 15258                           intcon	equ	0xFF2
 15259                           indf0	equ	0xFEF
 15260                           postinc0	equ	0xFEE
 15261                           fsr0h	equ	0xFEA
 15262                           fsr0l	equ	0xFE9
 15263                           wreg	equ	0xFE8
 15264                           postdec1	equ	0xFE5
 15265                           fsr1h	equ	0xFE2
 15266                           fsr1l	equ	0xFE1
 15267                           indf2	equ	0xFDF
 15268                           fsr2h	equ	0xFDA
 15269                           fsr2l	equ	0xFD9
 15270                           status	equ	0xFD8
 15271                           
 15272 ;; *************** function i2_GLCD_EnableController *****************
 15273 ;; Defined at:
 15274 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
 15275 ;; Parameters:    Size  Location     Type
 15276 ;;  controller      1    wreg     unsigned char 
 15277 ;; Auto vars:     Size  Location     Type
 15278 ;;  controller      1    0[COMRAM] unsigned char 
 15279 ;; Return value:  Size  Location     Type
 15280 ;;                  1    wreg      void 
 15281 ;; Registers used:
 15282 ;;		wreg, status,2, status,0
 15283 ;; Tracked objects:
 15284 ;;		On entry : 0/0
 15285 ;;		On exit  : 0/0
 15286 ;;		Unchanged: 0/0
 15287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15292 ;;Total ram usage:        1 bytes
 15293 ;; Hardware stack levels used:    1
 15294 ;; This function calls:
 15295 ;;		Nothing
 15296 ;; This function is called by:
 15297 ;;		i2_GLCD_ReadStatus
 15298 ;;		i2_GLCD_WriteCommand
 15299 ;;		i2_GLCD_WriteData
 15300 ;; This function uses a non-reentrant model
 15301 ;;
 15302                           
 15303                           	psect	text93
 15304  00313E                     __ptext93:
 15305                           	opt stack 0
 15306  00313E                     i2_GLCD_EnableController:
 15307                           	opt stack 15
 15308                           
 15309                           ;incstack = 0
 15310                           ;i2GLCD_EnableController@controller stored from wreg
 15311  00313E  6E01               	movwf	i2GLCD_EnableController@controller,c
 15312                           
 15313                           ;KS0108-PIC18.c: 41: switch(controller){
 15314  003140  D006               	goto	i2l673
 15315  003142  9A80               	bcf	3968,5,c	;volatile
 15316  003144  0012               	return	
 15317  003146  9C80               	bcf	3968,6,c	;volatile
 15318  003148  0012               	return	
 15319  00314A  9E80               	bcf	3968,7,c	;volatile
 15320                           
 15321                           ;KS0108-PIC18.c: 45: }
 15322  00314C  0012               	return	
 15323  00314E                     i2l673:
 15324  00314E  5001               	movf	i2GLCD_EnableController@controller,w,c
 15325                           
 15326                           ; Switch size 1, requested type "space"
 15327                           ; Number of cases is 3, Range of values is 0 to 2
 15328                           ; switch strategies available:
 15329                           ; Name         Instructions Cycles
 15330                           ; simple_byte           10     6 (average)
 15331                           ;	Chosen strategy is simple_byte
 15332  003150  0A00               	xorlw	0	; case 0
 15333  003152  B4D8               	btfsc	status,2,c
 15334  003154  D7F6               	goto	i2l674
 15335  003156  0A01               	xorlw	1	; case 1
 15336  003158  B4D8               	btfsc	status,2,c
 15337  00315A  D7F5               	goto	i2l676
 15338  00315C  0A03               	xorlw	3	; case 2
 15339  00315E  A4D8               	btfss	status,2,c
 15340  003160  0012               	return	
 15341  003162  D7F3               	goto	i2l677
 15342  003164                     __end_ofi2_GLCD_EnableController:
 15343                           	opt stack 0
 15344                           tosu	equ	0xFFF
 15345                           tosh	equ	0xFFE
 15346                           tosl	equ	0xFFD
 15347                           pclatu	equ	0xFFB
 15348                           pclath	equ	0xFFA
 15349                           tblptru	equ	0xFF8
 15350                           tblptrh	equ	0xFF7
 15351                           tblptrl	equ	0xFF6
 15352                           tablat	equ	0xFF5
 15353                           prodh	equ	0xFF4
 15354                           prodl	equ	0xFF3
 15355                           intcon	equ	0xFF2
 15356                           indf0	equ	0xFEF
 15357                           postinc0	equ	0xFEE
 15358                           fsr0h	equ	0xFEA
 15359                           fsr0l	equ	0xFE9
 15360                           wreg	equ	0xFE8
 15361                           postdec1	equ	0xFE5
 15362                           fsr1h	equ	0xFE2
 15363                           fsr1l	equ	0xFE1
 15364                           indf2	equ	0xFDF
 15365                           fsr2h	equ	0xFDA
 15366                           fsr2l	equ	0xFD9
 15367                           status	equ	0xFD8
 15368                           
 15369 ;; *************** function i2_GLCD_DisableController *****************
 15370 ;; Defined at:
 15371 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
 15372 ;; Parameters:    Size  Location     Type
 15373 ;;  controller      1    wreg     unsigned char 
 15374 ;; Auto vars:     Size  Location     Type
 15375 ;;  controller      1    0[COMRAM] unsigned char 
 15376 ;; Return value:  Size  Location     Type
 15377 ;;                  1    wreg      void 
 15378 ;; Registers used:
 15379 ;;		wreg, status,2, status,0
 15380 ;; Tracked objects:
 15381 ;;		On entry : 0/0
 15382 ;;		On exit  : 0/0
 15383 ;;		Unchanged: 0/0
 15384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15389 ;;Total ram usage:        1 bytes
 15390 ;; Hardware stack levels used:    1
 15391 ;; This function calls:
 15392 ;;		Nothing
 15393 ;; This function is called by:
 15394 ;;		i2_GLCD_ReadStatus
 15395 ;;		i2_GLCD_WriteCommand
 15396 ;;		i2_GLCD_WriteData
 15397 ;; This function uses a non-reentrant model
 15398 ;;
 15399                           
 15400                           	psect	text94
 15401  003164                     __ptext94:
 15402                           	opt stack 0
 15403  003164                     i2_GLCD_DisableController:
 15404                           	opt stack 15
 15405                           
 15406                           ;incstack = 0
 15407                           ;i2GLCD_DisableController@controller stored from wreg
 15408  003164  6E01               	movwf	i2GLCD_DisableController@controller,c
 15409                           
 15410                           ;KS0108-PIC18.c: 52: switch(controller)
 15411  003166  D006               	goto	i2l681
 15412  003168  8A80               	bsf	3968,5,c	;volatile
 15413  00316A  0012               	return	
 15414  00316C  8C80               	bsf	3968,6,c	;volatile
 15415  00316E  0012               	return	
 15416  003170  8E80               	bsf	3968,7,c	;volatile
 15417                           
 15418                           ;KS0108-PIC18.c: 57: }
 15419  003172  0012               	return	
 15420  003174                     i2l681:
 15421  003174  5001               	movf	i2GLCD_DisableController@controller,w,c
 15422                           
 15423                           ; Switch size 1, requested type "space"
 15424                           ; Number of cases is 3, Range of values is 0 to 2
 15425                           ; switch strategies available:
 15426                           ; Name         Instructions Cycles
 15427                           ; simple_byte           10     6 (average)
 15428                           ;	Chosen strategy is simple_byte
 15429  003176  0A00               	xorlw	0	; case 0
 15430  003178  B4D8               	btfsc	status,2,c
 15431  00317A  D7F6               	goto	i2l682
 15432  00317C  0A01               	xorlw	1	; case 1
 15433  00317E  B4D8               	btfsc	status,2,c
 15434  003180  D7F5               	goto	i2l684
 15435  003182  0A03               	xorlw	3	; case 2
 15436  003184  A4D8               	btfss	status,2,c
 15437  003186  0012               	return	
 15438  003188  D7F3               	goto	i2l685
 15439  00318A                     __end_ofi2_GLCD_DisableController:
 15440                           	opt stack 0
 15441                           tosu	equ	0xFFF
 15442                           tosh	equ	0xFFE
 15443                           tosl	equ	0xFFD
 15444                           pclatu	equ	0xFFB
 15445                           pclath	equ	0xFFA
 15446                           tblptru	equ	0xFF8
 15447                           tblptrh	equ	0xFF7
 15448                           tblptrl	equ	0xFF6
 15449                           tablat	equ	0xFF5
 15450                           prodh	equ	0xFF4
 15451                           prodl	equ	0xFF3
 15452                           intcon	equ	0xFF2
 15453                           indf0	equ	0xFEF
 15454                           postinc0	equ	0xFEE
 15455                           fsr0h	equ	0xFEA
 15456                           fsr0l	equ	0xFE9
 15457                           wreg	equ	0xFE8
 15458                           postdec1	equ	0xFE5
 15459                           fsr1h	equ	0xFE2
 15460                           fsr1l	equ	0xFE1
 15461                           indf2	equ	0xFDF
 15462                           fsr2h	equ	0xFDA
 15463                           fsr2l	equ	0xFD9
 15464                           status	equ	0xFD8
 15465                           
 15466 ;; *************** function i2_GLCD_Delay *****************
 15467 ;; Defined at:
 15468 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
 15469 ;; Parameters:    Size  Location     Type
 15470 ;;		None
 15471 ;; Auto vars:     Size  Location     Type
 15472 ;;		None
 15473 ;; Return value:  Size  Location     Type
 15474 ;;                  1    wreg      void 
 15475 ;; Registers used:
 15476 ;;		None
 15477 ;; Tracked objects:
 15478 ;;		On entry : 0/0
 15479 ;;		On exit  : 0/0
 15480 ;;		Unchanged: 0/0
 15481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15486 ;;Total ram usage:        0 bytes
 15487 ;; Hardware stack levels used:    1
 15488 ;; This function calls:
 15489 ;;		Nothing
 15490 ;; This function is called by:
 15491 ;;		i2_GLCD_ReadStatus
 15492 ;;		i2_GLCD_WriteCommand
 15493 ;;		i2_GLCD_WriteData
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           	psect	text95
 15498  0032D2                     __ptext95:
 15499                           	opt stack 0
 15500  0032D2                     i2_GLCD_Delay:
 15501                           	opt stack 15
 15502                           
 15503                           ;KS0108-PIC18.c: 26: __nop();
 15504                           
 15505                           ;incstack = 0
 15506  0032D2  F000               	nop	
 15507  0032D4  0012               	return		;funcret
 15508  0032D6                     __end_ofi2_GLCD_Delay:
 15509                           	opt stack 0
 15510                           tosu	equ	0xFFF
 15511                           tosh	equ	0xFFE
 15512                           tosl	equ	0xFFD
 15513                           pclatu	equ	0xFFB
 15514                           pclath	equ	0xFFA
 15515                           tblptru	equ	0xFF8
 15516                           tblptrh	equ	0xFF7
 15517                           tblptrl	equ	0xFF6
 15518                           tablat	equ	0xFF5
 15519                           prodh	equ	0xFF4
 15520                           prodl	equ	0xFF3
 15521                           intcon	equ	0xFF2
 15522                           indf0	equ	0xFEF
 15523                           postinc0	equ	0xFEE
 15524                           fsr0h	equ	0xFEA
 15525                           fsr0l	equ	0xFE9
 15526                           wreg	equ	0xFE8
 15527                           postdec1	equ	0xFE5
 15528                           fsr1h	equ	0xFE2
 15529                           fsr1l	equ	0xFE1
 15530                           indf2	equ	0xFDF
 15531                           fsr2h	equ	0xFDA
 15532                           fsr2l	equ	0xFD9
 15533                           status	equ	0xFD8
 15534                           
 15535 ;; *************** function ___ftsub *****************
 15536 ;; Defined at:
 15537 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 15538 ;; Parameters:    Size  Location     Type
 15539 ;;  f1              3   20[COMRAM] float 
 15540 ;;  f2              3   23[COMRAM] float 
 15541 ;; Auto vars:     Size  Location     Type
 15542 ;;		None
 15543 ;; Return value:  Size  Location     Type
 15544 ;;                  3   20[COMRAM] float 
 15545 ;; Registers used:
 15546 ;;		wreg, status,2, status,0, cstack
 15547 ;; Tracked objects:
 15548 ;;		On entry : 0/0
 15549 ;;		On exit  : 0/0
 15550 ;;		Unchanged: 0/0
 15551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15552 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15555 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15556 ;;Total ram usage:        6 bytes
 15557 ;; Hardware stack levels used:    1
 15558 ;; Hardware stack levels required when called:    2
 15559 ;; This function calls:
 15560 ;;		___ftadd
 15561 ;; This function is called by:
 15562 ;;		_Brightness_Menu_Function
 15563 ;;		_Start_Color_Menu_Function
 15564 ;; This function uses a non-reentrant model
 15565 ;;
 15566                           
 15567                           	psect	text96
 15568  002D52                     __ptext96:
 15569                           	opt stack 0
 15570  002D52                     ___ftsub:
 15571                           	opt stack 17
 15572                           
 15573                           ;incstack = 0
 15574  002D52  5018               	movf	___ftsub@f2,w,c
 15575  002D54  1019               	iorwf	___ftsub@f2+1,w,c
 15576  002D56  101A               	iorwf	___ftsub@f2+2,w,c
 15577  002D58  B4D8               	btfsc	status,2,c
 15578  002D5A  D006               	goto	i2l1188
 15579  002D5C  0E00               	movlw	0
 15580  002D5E  1A18               	xorwf	___ftsub@f2,f,c
 15581  002D60  0E00               	movlw	0
 15582  002D62  1A19               	xorwf	___ftsub@f2+1,f,c
 15583  002D64  0E80               	movlw	128
 15584  002D66  1A1A               	xorwf	___ftsub@f2+2,f,c
 15585  002D68                     i2l1188:
 15586  002D68  C015  F009         	movff	___ftsub@f1,___ftadd@f1
 15587  002D6C  C016  F00A         	movff	___ftsub@f1+1,___ftadd@f1+1
 15588  002D70  C017  F00B         	movff	___ftsub@f1+2,___ftadd@f1+2
 15589  002D74  C018  F00C         	movff	___ftsub@f2,___ftadd@f2
 15590  002D78  C019  F00D         	movff	___ftsub@f2+1,___ftadd@f2+1
 15591  002D7C  C01A  F00E         	movff	___ftsub@f2+2,___ftadd@f2+2
 15592  002D80  ECFD  F006         	call	___ftadd	;wreg free
 15593  002D84  C009  F015         	movff	?___ftadd,?___ftsub
 15594  002D88  C00A  F016         	movff	?___ftadd+1,?___ftsub+1
 15595  002D8C  C00B  F017         	movff	?___ftadd+2,?___ftsub+2
 15596  002D90  0012               	return	
 15597  002D92                     __end_of___ftsub:
 15598                           	opt stack 0
 15599                           tosu	equ	0xFFF
 15600                           tosh	equ	0xFFE
 15601                           tosl	equ	0xFFD
 15602                           pclatu	equ	0xFFB
 15603                           pclath	equ	0xFFA
 15604                           tblptru	equ	0xFF8
 15605                           tblptrh	equ	0xFF7
 15606                           tblptrl	equ	0xFF6
 15607                           tablat	equ	0xFF5
 15608                           prodh	equ	0xFF4
 15609                           prodl	equ	0xFF3
 15610                           intcon	equ	0xFF2
 15611                           indf0	equ	0xFEF
 15612                           postinc0	equ	0xFEE
 15613                           fsr0h	equ	0xFEA
 15614                           fsr0l	equ	0xFE9
 15615                           wreg	equ	0xFE8
 15616                           postdec1	equ	0xFE5
 15617                           fsr1h	equ	0xFE2
 15618                           fsr1l	equ	0xFE1
 15619                           indf2	equ	0xFDF
 15620                           fsr2h	equ	0xFDA
 15621                           fsr2l	equ	0xFD9
 15622                           status	equ	0xFD8
 15623                           
 15624 ;; *************** function ___ftadd *****************
 15625 ;; Defined at:
 15626 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 15627 ;; Parameters:    Size  Location     Type
 15628 ;;  f1              3    8[COMRAM] float 
 15629 ;;  f2              3   11[COMRAM] float 
 15630 ;; Auto vars:     Size  Location     Type
 15631 ;;  exp1            1   19[COMRAM] unsigned char 
 15632 ;;  exp2            1   18[COMRAM] unsigned char 
 15633 ;;  sign            1   17[COMRAM] unsigned char 
 15634 ;; Return value:  Size  Location     Type
 15635 ;;                  3    8[COMRAM] float 
 15636 ;; Registers used:
 15637 ;;		wreg, status,2, status,0, cstack
 15638 ;; Tracked objects:
 15639 ;;		On entry : 0/0
 15640 ;;		On exit  : 0/0
 15641 ;;		Unchanged: 0/0
 15642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15643 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15644 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15645 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15646 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15647 ;;Total ram usage:       12 bytes
 15648 ;; Hardware stack levels used:    1
 15649 ;; Hardware stack levels required when called:    1
 15650 ;; This function calls:
 15651 ;;		i2___ftpack
 15652 ;; This function is called by:
 15653 ;;		_Brightness_Menu_Function
 15654 ;;		_Start_Color_Menu_Function
 15655 ;;		___ftsub
 15656 ;; This function uses a non-reentrant model
 15657 ;;
 15658                           
 15659                           	psect	text97
 15660  000DFA                     __ptext97:
 15661                           	opt stack 0
 15662  000DFA                     ___ftadd:
 15663                           	opt stack 17
 15664                           
 15665                           ;incstack = 0
 15666  000DFA  C00B  F00F         	movff	___ftadd@f1+2,??___ftadd
 15667  000DFE  6A10               	clrf	(??___ftadd+1)& (0+255),c
 15668  000E00  6A11               	clrf	(??___ftadd+2)& (0+255),c
 15669  000E02  340A               	rlcf	___ftadd@f1+1,w,c
 15670  000E04  360F               	rlcf	??___ftadd& (0+255),f,c
 15671  000E06  E301               	bnc	u296_41
 15672  000E08  8010               	bsf	(??___ftadd+1)& (0+255),0,c
 15673  000E0A                     u296_41:
 15674  000E0A  500F               	movf	??___ftadd,w,c
 15675  000E0C  6E14               	movwf	___ftadd@exp1,c
 15676  000E0E  C00E  F00F         	movff	___ftadd@f2+2,??___ftadd
 15677  000E12  6A10               	clrf	(??___ftadd+1)& (0+255),c
 15678  000E14  6A11               	clrf	(??___ftadd+2)& (0+255),c
 15679  000E16  340D               	rlcf	___ftadd@f2+1,w,c
 15680  000E18  360F               	rlcf	??___ftadd& (0+255),f,c
 15681  000E1A  E301               	bnc	u297_41
 15682  000E1C  8010               	bsf	(??___ftadd+1)& (0+255),0,c
 15683  000E1E                     u297_41:
 15684  000E1E  500F               	movf	??___ftadd,w,c
 15685  000E20  6E13               	movwf	___ftadd@exp2,c
 15686  000E22  5014               	movf	___ftadd@exp1,w,c
 15687  000E24  B4D8               	btfsc	status,2,c
 15688  000E26  D00B               	goto	i2u300_40
 15689  000E28  5013               	movf	___ftadd@exp2,w,c
 15690  000E2A  5C14               	subwf	___ftadd@exp1,w,c
 15691  000E2C  B0D8               	btfsc	status,0,c
 15692  000E2E  D00E               	goto	i2l1123
 15693  000E30  5014               	movf	___ftadd@exp1,w,c
 15694  000E32  0800               	sublw	0
 15695  000E34  2413               	addwf	___ftadd@exp2,w,c
 15696  000E36  6E0F               	movwf	??___ftadd& (0+255),c
 15697  000E38  0E18               	movlw	24
 15698  000E3A  640F               	cpfsgt	??___ftadd,c
 15699  000E3C  D007               	goto	i2l1123
 15700  000E3E                     i2u300_40:
 15701  000E3E  C00C  F009         	movff	___ftadd@f2,?___ftadd
 15702  000E42  C00D  F00A         	movff	___ftadd@f2+1,?___ftadd+1
 15703  000E46  C00E  F00B         	movff	___ftadd@f2+2,?___ftadd+2
 15704  000E4A  0012               	return	
 15705  000E4C                     i2l1123:
 15706  000E4C  5013               	movf	___ftadd@exp2,w,c
 15707  000E4E  B4D8               	btfsc	status,2,c
 15708  000E50  D00B               	goto	i2u303_40
 15709  000E52  5014               	movf	___ftadd@exp1,w,c
 15710  000E54  5C13               	subwf	___ftadd@exp2,w,c
 15711  000E56  B0D8               	btfsc	status,0,c
 15712  000E58  D00E               	goto	i2l1127
 15713  000E5A  5013               	movf	___ftadd@exp2,w,c
 15714  000E5C  0800               	sublw	0
 15715  000E5E  2414               	addwf	___ftadd@exp1,w,c
 15716  000E60  6E0F               	movwf	??___ftadd& (0+255),c
 15717  000E62  0E18               	movlw	24
 15718  000E64  640F               	cpfsgt	??___ftadd,c
 15719  000E66  D007               	goto	i2l1127
 15720  000E68                     i2u303_40:
 15721  000E68  C009  F009         	movff	___ftadd@f1,?___ftadd
 15722  000E6C  C00A  F00A         	movff	___ftadd@f1+1,?___ftadd+1
 15723  000E70  C00B  F00B         	movff	___ftadd@f1+2,?___ftadd+2
 15724  000E74  0012               	return	
 15725  000E76                     i2l1127:
 15726  000E76  0E06               	movlw	6
 15727  000E78  6E12               	movwf	___ftadd@sign,c
 15728  000E7A  BE0B               	btfsc	___ftadd@f1+2,7,c
 15729  000E7C  8E12               	bsf	___ftadd@sign,7,c
 15730  000E7E  BE0E               	btfsc	___ftadd@f2+2,7,c
 15731  000E80  8C12               	bsf	___ftadd@sign,6,c
 15732  000E82  8E0A               	bsf	___ftadd@f1+1,7,c
 15733  000E84  0EFF               	movlw	255
 15734  000E86  1609               	andwf	___ftadd@f1,f,c
 15735  000E88  0EFF               	movlw	255
 15736  000E8A  160A               	andwf	___ftadd@f1+1,f,c
 15737  000E8C  0E00               	movlw	0
 15738  000E8E  160B               	andwf	___ftadd@f1+2,f,c
 15739  000E90  8E0D               	bsf	___ftadd@f2+1,7,c
 15740  000E92  0EFF               	movlw	255
 15741  000E94  160C               	andwf	___ftadd@f2,f,c
 15742  000E96  0EFF               	movlw	255
 15743  000E98  160D               	andwf	___ftadd@f2+1,f,c
 15744  000E9A  0E00               	movlw	0
 15745  000E9C  160E               	andwf	___ftadd@f2+2,f,c
 15746  000E9E  5013               	movf	___ftadd@exp2,w,c
 15747  000EA0  5C14               	subwf	___ftadd@exp1,w,c
 15748  000EA2  B0D8               	btfsc	status,0,c
 15749  000EA4  D01B               	goto	i2l1132
 15750  000EA6                     i2u306_40:
 15751  000EA6  90D8               	bcf	status,0,c
 15752  000EA8  360C               	rlcf	___ftadd@f2,f,c
 15753  000EAA  360D               	rlcf	___ftadd@f2+1,f,c
 15754  000EAC  360E               	rlcf	___ftadd@f2+2,f,c
 15755  000EAE  0613               	decf	___ftadd@exp2,f,c
 15756  000EB0  5014               	movf	___ftadd@exp1,w,c
 15757  000EB2  1813               	xorwf	___ftadd@exp2,w,c
 15758  000EB4  B4D8               	btfsc	status,2,c
 15759  000EB6  D00D               	goto	i2l1137
 15760  000EB8  0612               	decf	___ftadd@sign,f,c
 15761  000EBA  C012  F00F         	movff	___ftadd@sign,??___ftadd
 15762  000EBE  0E07               	movlw	7
 15763  000EC0  160F               	andwf	??___ftadd,f,c
 15764  000EC2  B4D8               	btfsc	status,2,c
 15765  000EC4  D006               	goto	i2l1137
 15766  000EC6  D7EF               	goto	i2u306_40
 15767  000EC8  90D8               	bcf	status,0,c
 15768  000ECA  320B               	rrcf	___ftadd@f1+2,f,c
 15769  000ECC  320A               	rrcf	___ftadd@f1+1,f,c
 15770  000ECE  3209               	rrcf	___ftadd@f1,f,c
 15771  000ED0  2A14               	incf	___ftadd@exp1,f,c
 15772  000ED2                     i2l1137:
 15773  000ED2  5013               	movf	___ftadd@exp2,w,c
 15774  000ED4  1814               	xorwf	___ftadd@exp1,w,c
 15775  000ED6  B4D8               	btfsc	status,2,c
 15776  000ED8  D01F               	goto	i2u313_40
 15777  000EDA  D7F6               	goto	i2l1138
 15778  000EDC                     i2l1132:
 15779  000EDC  5014               	movf	___ftadd@exp1,w,c
 15780  000EDE  5C13               	subwf	___ftadd@exp2,w,c
 15781  000EE0  B0D8               	btfsc	status,0,c
 15782  000EE2  D01A               	goto	i2u313_40
 15783  000EE4                     i2u310_40:
 15784  000EE4  90D8               	bcf	status,0,c
 15785  000EE6  3609               	rlcf	___ftadd@f1,f,c
 15786  000EE8  360A               	rlcf	___ftadd@f1+1,f,c
 15787  000EEA  360B               	rlcf	___ftadd@f1+2,f,c
 15788  000EEC  0614               	decf	___ftadd@exp1,f,c
 15789  000EEE  5014               	movf	___ftadd@exp1,w,c
 15790  000EF0  1813               	xorwf	___ftadd@exp2,w,c
 15791  000EF2  B4D8               	btfsc	status,2,c
 15792  000EF4  D00D               	goto	i2l1146
 15793  000EF6  0612               	decf	___ftadd@sign,f,c
 15794  000EF8  C012  F00F         	movff	___ftadd@sign,??___ftadd
 15795  000EFC  0E07               	movlw	7
 15796  000EFE  160F               	andwf	??___ftadd,f,c
 15797  000F00  B4D8               	btfsc	status,2,c
 15798  000F02  D006               	goto	i2l1146
 15799  000F04  D7EF               	goto	i2u310_40
 15800  000F06  90D8               	bcf	status,0,c
 15801  000F08  320E               	rrcf	___ftadd@f2+2,f,c
 15802  000F0A  320D               	rrcf	___ftadd@f2+1,f,c
 15803  000F0C  320C               	rrcf	___ftadd@f2,f,c
 15804  000F0E  2A13               	incf	___ftadd@exp2,f,c
 15805  000F10                     i2l1146:
 15806  000F10  5013               	movf	___ftadd@exp2,w,c
 15807  000F12  1814               	xorwf	___ftadd@exp1,w,c
 15808  000F14  A4D8               	btfss	status,2,c
 15809  000F16  D7F7               	goto	i2l1147
 15810  000F18                     i2u313_40:
 15811  000F18  AE12               	btfss	___ftadd@sign,7,c
 15812  000F1A  D00C               	goto	i2l1149
 15813  000F1C  0EFF               	movlw	255
 15814  000F1E  1A09               	xorwf	___ftadd@f1,f,c
 15815  000F20  0EFF               	movlw	255
 15816  000F22  1A0A               	xorwf	___ftadd@f1+1,f,c
 15817  000F24  0EFF               	movlw	255
 15818  000F26  1A0B               	xorwf	___ftadd@f1+2,f,c
 15819  000F28  0E01               	movlw	1
 15820  000F2A  2609               	addwf	___ftadd@f1,f,c
 15821  000F2C  0E00               	movlw	0
 15822  000F2E  220A               	addwfc	___ftadd@f1+1,f,c
 15823  000F30  0E00               	movlw	0
 15824  000F32  220B               	addwfc	___ftadd@f1+2,f,c
 15825  000F34                     i2l1149:
 15826  000F34  AC12               	btfss	___ftadd@sign,6,c
 15827  000F36  D00C               	goto	i2l1150
 15828  000F38  0EFF               	movlw	255
 15829  000F3A  1A0C               	xorwf	___ftadd@f2,f,c
 15830  000F3C  0EFF               	movlw	255
 15831  000F3E  1A0D               	xorwf	___ftadd@f2+1,f,c
 15832  000F40  0EFF               	movlw	255
 15833  000F42  1A0E               	xorwf	___ftadd@f2+2,f,c
 15834  000F44  0E01               	movlw	1
 15835  000F46  260C               	addwf	___ftadd@f2,f,c
 15836  000F48  0E00               	movlw	0
 15837  000F4A  220D               	addwfc	___ftadd@f2+1,f,c
 15838  000F4C  0E00               	movlw	0
 15839  000F4E  220E               	addwfc	___ftadd@f2+2,f,c
 15840  000F50                     i2l1150:
 15841  000F50  0E00               	movlw	0
 15842  000F52  6E12               	movwf	___ftadd@sign,c
 15843  000F54  5009               	movf	___ftadd@f1,w,c
 15844  000F56  260C               	addwf	___ftadd@f2,f,c
 15845  000F58  500A               	movf	___ftadd@f1+1,w,c
 15846  000F5A  220D               	addwfc	___ftadd@f2+1,f,c
 15847  000F5C  500B               	movf	___ftadd@f1+2,w,c
 15848  000F5E  220E               	addwfc	___ftadd@f2+2,f,c
 15849  000F60  AE0E               	btfss	___ftadd@f2+2,7,c
 15850  000F62  D00E               	goto	i2l1151
 15851  000F64  0EFF               	movlw	255
 15852  000F66  1A0C               	xorwf	___ftadd@f2,f,c
 15853  000F68  0EFF               	movlw	255
 15854  000F6A  1A0D               	xorwf	___ftadd@f2+1,f,c
 15855  000F6C  0EFF               	movlw	255
 15856  000F6E  1A0E               	xorwf	___ftadd@f2+2,f,c
 15857  000F70  0E01               	movlw	1
 15858  000F72  260C               	addwf	___ftadd@f2,f,c
 15859  000F74  0E00               	movlw	0
 15860  000F76  220D               	addwfc	___ftadd@f2+1,f,c
 15861  000F78  0E00               	movlw	0
 15862  000F7A  220E               	addwfc	___ftadd@f2+2,f,c
 15863  000F7C  0E01               	movlw	1
 15864  000F7E  6E12               	movwf	___ftadd@sign,c
 15865  000F80                     i2l1151:
 15866  000F80  C00C  F001         	movff	___ftadd@f2,i2___ftpack@arg
 15867  000F84  C00D  F002         	movff	___ftadd@f2+1,i2___ftpack@arg+1
 15868  000F88  C00E  F003         	movff	___ftadd@f2+2,i2___ftpack@arg+2
 15869  000F8C  C014  F004         	movff	___ftadd@exp1,i2___ftpack@exp
 15870  000F90  C012  F005         	movff	___ftadd@sign,i2___ftpack@sign
 15871  000F94  EC64  F00D         	call	i2___ftpack	;wreg free
 15872  000F98  C001  F009         	movff	?i2___ftpack,?___ftadd
 15873  000F9C  C002  F00A         	movff	?i2___ftpack+1,?___ftadd+1
 15874  000FA0  C003  F00B         	movff	?i2___ftpack+2,?___ftadd+2
 15875  000FA4  0012               	return	
 15876  000FA6                     __end_of___ftadd:
 15877                           	opt stack 0
 15878                           tosu	equ	0xFFF
 15879                           tosh	equ	0xFFE
 15880                           tosl	equ	0xFFD
 15881                           pclatu	equ	0xFFB
 15882                           pclath	equ	0xFFA
 15883                           tblptru	equ	0xFF8
 15884                           tblptrh	equ	0xFF7
 15885                           tblptrl	equ	0xFF6
 15886                           tablat	equ	0xFF5
 15887                           prodh	equ	0xFF4
 15888                           prodl	equ	0xFF3
 15889                           intcon	equ	0xFF2
 15890                           indf0	equ	0xFEF
 15891                           postinc0	equ	0xFEE
 15892                           fsr0h	equ	0xFEA
 15893                           fsr0l	equ	0xFE9
 15894                           wreg	equ	0xFE8
 15895                           postdec1	equ	0xFE5
 15896                           fsr1h	equ	0xFE2
 15897                           fsr1l	equ	0xFE1
 15898                           indf2	equ	0xFDF
 15899                           fsr2h	equ	0xFDA
 15900                           fsr2l	equ	0xFD9
 15901                           status	equ	0xFD8
 15902                           
 15903 ;; *************** function i2___ftpack *****************
 15904 ;; Defined at:
 15905 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 15906 ;; Parameters:    Size  Location     Type
 15907 ;;  arg             3    0[COMRAM] unsigned um
 15908 ;;  exp             1    3[COMRAM] unsigned char 
 15909 ;;  sign            1    4[COMRAM] unsigned char 
 15910 ;; Auto vars:     Size  Location     Type
 15911 ;;		None
 15912 ;; Return value:  Size  Location     Type
 15913 ;;                  3    0[COMRAM] float 
 15914 ;; Registers used:
 15915 ;;		wreg, status,2, status,0
 15916 ;; Tracked objects:
 15917 ;;		On entry : 0/0
 15918 ;;		On exit  : 0/0
 15919 ;;		Unchanged: 0/0
 15920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15921 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15923 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15924 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15925 ;;Total ram usage:        8 bytes
 15926 ;; Hardware stack levels used:    1
 15927 ;; This function calls:
 15928 ;;		Nothing
 15929 ;; This function is called by:
 15930 ;;		___ftadd
 15931 ;;		i2___awtoft
 15932 ;;		i2___ftdiv
 15933 ;;		i2___ftmul
 15934 ;; This function uses a non-reentrant model
 15935 ;;
 15936                           
 15937                           	psect	text98
 15938  001AC8                     __ptext98:
 15939                           	opt stack 0
 15940  001AC8                     i2___ftpack:
 15941                           	opt stack 17
 15942                           
 15943                           ;incstack = 0
 15944  001AC8  5004               	movf	i2___ftpack@exp,w,c
 15945  001ACA  B4D8               	btfsc	status,2,c
 15946  001ACC  D005               	goto	i2u272_40
 15947  001ACE  5001               	movf	i2___ftpack@arg,w,c
 15948  001AD0  1002               	iorwf	i2___ftpack@arg+1,w,c
 15949  001AD2  1003               	iorwf	i2___ftpack@arg+2,w,c
 15950  001AD4  A4D8               	btfss	status,2,c
 15951  001AD6  D00C               	goto	i2l1092
 15952  001AD8                     i2u272_40:
 15953  001AD8  0E00               	movlw	0
 15954  001ADA  6E01               	movwf	?i2___ftpack,c
 15955  001ADC  0E00               	movlw	0
 15956  001ADE  6E02               	movwf	?i2___ftpack+1,c
 15957  001AE0  0E00               	movlw	0
 15958  001AE2  6E03               	movwf	?i2___ftpack+2,c
 15959  001AE4  0012               	return	
 15960  001AE6  2A04               	incf	i2___ftpack@exp,f,c
 15961  001AE8  90D8               	bcf	status,0,c
 15962  001AEA  3203               	rrcf	i2___ftpack@arg+2,f,c
 15963  001AEC  3202               	rrcf	i2___ftpack@arg+1,f,c
 15964  001AEE  3201               	rrcf	i2___ftpack@arg,f,c
 15965  001AF0                     i2l1092:
 15966  001AF0  0E00               	movlw	0
 15967  001AF2  1401               	andwf	i2___ftpack@arg,w,c
 15968  001AF4  6E06               	movwf	??i2___ftpack& (0+255),c
 15969  001AF6  0E00               	movlw	0
 15970  001AF8  1402               	andwf	i2___ftpack@arg+1,w,c
 15971  001AFA  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 15972  001AFC  0EFE               	movlw	254
 15973  001AFE  1403               	andwf	i2___ftpack@arg+2,w,c
 15974  001B00  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 15975  001B02  5006               	movf	??i2___ftpack,w,c
 15976  001B04  1007               	iorwf	??i2___ftpack+1,w,c
 15977  001B06  1008               	iorwf	??i2___ftpack+2,w,c
 15978  001B08  B4D8               	btfsc	status,2,c
 15979  001B0A  D00C               	goto	i2l1095
 15980  001B0C  D7EC               	goto	i2l1093
 15981  001B0E  2A04               	incf	i2___ftpack@exp,f,c
 15982  001B10  0E01               	movlw	1
 15983  001B12  2601               	addwf	i2___ftpack@arg,f,c
 15984  001B14  0E00               	movlw	0
 15985  001B16  2202               	addwfc	i2___ftpack@arg+1,f,c
 15986  001B18  0E00               	movlw	0
 15987  001B1A  2203               	addwfc	i2___ftpack@arg+2,f,c
 15988  001B1C  90D8               	bcf	status,0,c
 15989  001B1E  3203               	rrcf	i2___ftpack@arg+2,f,c
 15990  001B20  3202               	rrcf	i2___ftpack@arg+1,f,c
 15991  001B22  3201               	rrcf	i2___ftpack@arg,f,c
 15992  001B24                     i2l1095:
 15993  001B24  0E00               	movlw	0
 15994  001B26  1401               	andwf	i2___ftpack@arg,w,c
 15995  001B28  6E06               	movwf	??i2___ftpack& (0+255),c
 15996  001B2A  0E00               	movlw	0
 15997  001B2C  1402               	andwf	i2___ftpack@arg+1,w,c
 15998  001B2E  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 15999  001B30  0EFF               	movlw	255
 16000  001B32  1403               	andwf	i2___ftpack@arg+2,w,c
 16001  001B34  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 16002  001B36  5006               	movf	??i2___ftpack,w,c
 16003  001B38  1007               	iorwf	??i2___ftpack+1,w,c
 16004  001B3A  1008               	iorwf	??i2___ftpack+2,w,c
 16005  001B3C  B4D8               	btfsc	status,2,c
 16006  001B3E  D006               	goto	i2l1098
 16007  001B40  D7E6               	goto	i2l1096
 16008  001B42  0604               	decf	i2___ftpack@exp,f,c
 16009  001B44  90D8               	bcf	status,0,c
 16010  001B46  3601               	rlcf	i2___ftpack@arg,f,c
 16011  001B48  3602               	rlcf	i2___ftpack@arg+1,f,c
 16012  001B4A  3603               	rlcf	i2___ftpack@arg+2,f,c
 16013  001B4C                     i2l1098:
 16014  001B4C  BE02               	btfsc	i2___ftpack@arg+1,7,c
 16015  001B4E  D003               	goto	i2u276_40
 16016  001B50  0E02               	movlw	2
 16017  001B52  6004               	cpfslt	i2___ftpack@exp,c
 16018  001B54  D7F6               	goto	i2l1099
 16019  001B56                     i2u276_40:
 16020  001B56  A004               	btfss	i2___ftpack@exp,0,c
 16021  001B58  9E02               	bcf	i2___ftpack@arg+1,7,c
 16022  001B5A  90D8               	bcf	status,0,c
 16023  001B5C  3204               	rrcf	i2___ftpack@exp,f,c
 16024  001B5E  5004               	movf	i2___ftpack@exp,w,c
 16025  001B60  1203               	iorwf	i2___ftpack@arg+2,f,c
 16026  001B62  5005               	movf	i2___ftpack@sign,w,c
 16027  001B64  A4D8               	btfss	status,2,c
 16028  001B66  8E03               	bsf	i2___ftpack@arg+2,7,c
 16029  001B68  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 16030  001B6C  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 16031  001B70  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 16032  001B74  0012               	return	
 16033  001B76                     __end_ofi2___ftpack:
 16034                           	opt stack 0
 16035                           tosu	equ	0xFFF
 16036                           tosh	equ	0xFFE
 16037                           tosl	equ	0xFFD
 16038                           pclatu	equ	0xFFB
 16039                           pclath	equ	0xFFA
 16040                           tblptru	equ	0xFF8
 16041                           tblptrh	equ	0xFF7
 16042                           tblptrl	equ	0xFF6
 16043                           tablat	equ	0xFF5
 16044                           prodh	equ	0xFF4
 16045                           prodl	equ	0xFF3
 16046                           intcon	equ	0xFF2
 16047                           indf0	equ	0xFEF
 16048                           postinc0	equ	0xFEE
 16049                           fsr0h	equ	0xFEA
 16050                           fsr0l	equ	0xFE9
 16051                           wreg	equ	0xFE8
 16052                           postdec1	equ	0xFE5
 16053                           fsr1h	equ	0xFE2
 16054                           fsr1l	equ	0xFE1
 16055                           indf2	equ	0xFDF
 16056                           fsr2h	equ	0xFDA
 16057                           fsr2l	equ	0xFD9
 16058                           status	equ	0xFD8
 16059                           
 16060 ;; *************** function ___ftge *****************
 16061 ;; Defined at:
 16062 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 16063 ;; Parameters:    Size  Location     Type
 16064 ;;  ff1             3    0[COMRAM] float 
 16065 ;;  ff2             3    3[COMRAM] float 
 16066 ;; Auto vars:     Size  Location     Type
 16067 ;;		None
 16068 ;; Return value:  Size  Location     Type
 16069 ;;		None               void
 16070 ;; Registers used:
 16071 ;;		wreg, status,2, status,0
 16072 ;; Tracked objects:
 16073 ;;		On entry : 0/0
 16074 ;;		On exit  : 0/0
 16075 ;;		Unchanged: 0/0
 16076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16077 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16079 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16080 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16081 ;;Total ram usage:        9 bytes
 16082 ;; Hardware stack levels used:    1
 16083 ;; This function calls:
 16084 ;;		Nothing
 16085 ;; This function is called by:
 16086 ;;		_Brightness_Menu_Function
 16087 ;;		_Start_Color_Menu_Function
 16088 ;; This function uses a non-reentrant model
 16089 ;;
 16090                           
 16091                           	psect	text99
 16092  001F44                     __ptext99:
 16093                           	opt stack 0
 16094  001F44                     ___ftge:
 16095                           	opt stack 19
 16096                           
 16097                           ;incstack = 0
 16098  001F44  AE03               	btfss	___ftge@ff1+2,7,c
 16099  001F46  D016               	goto	i2l1164
 16100  001F48  C001  F007         	movff	___ftge@ff1,??___ftge
 16101  001F4C  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
 16102  001F50  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
 16103  001F54  1E07               	comf	??___ftge,f,c
 16104  001F56  1E08               	comf	??___ftge+1,f,c
 16105  001F58  1E09               	comf	??___ftge+2,f,c
 16106  001F5A  2A07               	incf	??___ftge,f,c
 16107  001F5C  0E00               	movlw	0
 16108  001F5E  2208               	addwfc	??___ftge+1,f,c
 16109  001F60  2209               	addwfc	??___ftge+2,f,c
 16110  001F62  0E00               	movlw	0
 16111  001F64  2407               	addwf	??___ftge,w,c
 16112  001F66  6E01               	movwf	___ftge@ff1,c
 16113  001F68  0E00               	movlw	0
 16114  001F6A  2008               	addwfc	??___ftge+1,w,c
 16115  001F6C  6E02               	movwf	___ftge@ff1+1,c
 16116  001F6E  0E80               	movlw	128
 16117  001F70  2009               	addwfc	??___ftge+2,w,c
 16118  001F72  6E03               	movwf	___ftge@ff1+2,c
 16119  001F74                     i2l1164:
 16120  001F74  AE06               	btfss	___ftge@ff2+2,7,c
 16121  001F76  D016               	goto	i2l1165
 16122  001F78  C004  F007         	movff	___ftge@ff2,??___ftge
 16123  001F7C  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
 16124  001F80  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
 16125  001F84  1E07               	comf	??___ftge,f,c
 16126  001F86  1E08               	comf	??___ftge+1,f,c
 16127  001F88  1E09               	comf	??___ftge+2,f,c
 16128  001F8A  2A07               	incf	??___ftge,f,c
 16129  001F8C  0E00               	movlw	0
 16130  001F8E  2208               	addwfc	??___ftge+1,f,c
 16131  001F90  2209               	addwfc	??___ftge+2,f,c
 16132  001F92  0E00               	movlw	0
 16133  001F94  2407               	addwf	??___ftge,w,c
 16134  001F96  6E04               	movwf	___ftge@ff2,c
 16135  001F98  0E00               	movlw	0
 16136  001F9A  2008               	addwfc	??___ftge+1,w,c
 16137  001F9C  6E05               	movwf	___ftge@ff2+1,c
 16138  001F9E  0E80               	movlw	128
 16139  001FA0  2009               	addwfc	??___ftge+2,w,c
 16140  001FA2  6E06               	movwf	___ftge@ff2+2,c
 16141  001FA4                     i2l1165:
 16142  001FA4  0E00               	movlw	0
 16143  001FA6  1A01               	xorwf	___ftge@ff1,f,c
 16144  001FA8  0E00               	movlw	0
 16145  001FAA  1A02               	xorwf	___ftge@ff1+1,f,c
 16146  001FAC  0E80               	movlw	128
 16147  001FAE  1A03               	xorwf	___ftge@ff1+2,f,c
 16148  001FB0  0E00               	movlw	0
 16149  001FB2  1A04               	xorwf	___ftge@ff2,f,c
 16150  001FB4  0E00               	movlw	0
 16151  001FB6  1A05               	xorwf	___ftge@ff2+1,f,c
 16152  001FB8  0E80               	movlw	128
 16153  001FBA  1A06               	xorwf	___ftge@ff2+2,f,c
 16154  001FBC  5004               	movf	___ftge@ff2,w,c
 16155  001FBE  5C01               	subwf	___ftge@ff1,w,c
 16156  001FC0  5005               	movf	___ftge@ff2+1,w,c
 16157  001FC2  5802               	subwfb	___ftge@ff1+1,w,c
 16158  001FC4  5006               	movf	___ftge@ff2+2,w,c
 16159  001FC6  5803               	subwfb	___ftge@ff1+2,w,c
 16160  001FC8  B0D8               	btfsc	status,0,c
 16161  001FCA  D002               	goto	i2l3789
 16162  001FCC  90D8               	bcf	status,0,c
 16163  001FCE  0012               	return	
 16164  001FD0                     i2l3789:
 16165  001FD0  80D8               	bsf	status,0,c
 16166  001FD2  0012               	return	
 16167  001FD4                     __end_of___ftge:
 16168                           	opt stack 0
 16169                           tosu	equ	0xFFF
 16170                           tosh	equ	0xFFE
 16171                           tosl	equ	0xFFD
 16172                           pclatu	equ	0xFFB
 16173                           pclath	equ	0xFFA
 16174                           tblptru	equ	0xFF8
 16175                           tblptrh	equ	0xFF7
 16176                           tblptrl	equ	0xFF6
 16177                           tablat	equ	0xFF5
 16178                           prodh	equ	0xFF4
 16179                           prodl	equ	0xFF3
 16180                           intcon	equ	0xFF2
 16181                           indf0	equ	0xFEF
 16182                           postinc0	equ	0xFEE
 16183                           fsr0h	equ	0xFEA
 16184                           fsr0l	equ	0xFE9
 16185                           wreg	equ	0xFE8
 16186                           postdec1	equ	0xFE5
 16187                           fsr1h	equ	0xFE2
 16188                           fsr1l	equ	0xFE1
 16189                           indf2	equ	0xFDF
 16190                           fsr2h	equ	0xFDA
 16191                           fsr2l	equ	0xFD9
 16192                           status	equ	0xFD8
 16193                           tosu	equ	0xFFF
 16194                           tosh	equ	0xFFE
 16195                           tosl	equ	0xFFD
 16196                           pclatu	equ	0xFFB
 16197                           pclath	equ	0xFFA
 16198                           tblptru	equ	0xFF8
 16199                           tblptrh	equ	0xFF7
 16200                           tblptrl	equ	0xFF6
 16201                           tablat	equ	0xFF5
 16202                           prodh	equ	0xFF4
 16203                           prodl	equ	0xFF3
 16204                           intcon	equ	0xFF2
 16205                           indf0	equ	0xFEF
 16206                           postinc0	equ	0xFEE
 16207                           fsr0h	equ	0xFEA
 16208                           fsr0l	equ	0xFE9
 16209                           wreg	equ	0xFE8
 16210                           postdec1	equ	0xFE5
 16211                           fsr1h	equ	0xFE2
 16212                           fsr1l	equ	0xFE1
 16213                           indf2	equ	0xFDF
 16214                           fsr2h	equ	0xFDA
 16215                           fsr2l	equ	0xFD9
 16216                           status	equ	0xFD8
 16217                           
 16218                           	psect	text100
 16219  000000                     __ptext100:
 16220                           	opt stack 0
 16221                           tosu	equ	0xFFF
 16222                           tosh	equ	0xFFE
 16223                           tosl	equ	0xFFD
 16224                           pclatu	equ	0xFFB
 16225                           pclath	equ	0xFFA
 16226                           tblptru	equ	0xFF8
 16227                           tblptrh	equ	0xFF7
 16228                           tblptrl	equ	0xFF6
 16229                           tablat	equ	0xFF5
 16230                           prodh	equ	0xFF4
 16231                           prodl	equ	0xFF3
 16232                           intcon	equ	0xFF2
 16233                           indf0	equ	0xFEF
 16234                           postinc0	equ	0xFEE
 16235                           fsr0h	equ	0xFEA
 16236                           fsr0l	equ	0xFE9
 16237                           wreg	equ	0xFE8
 16238                           postdec1	equ	0xFE5
 16239                           fsr1h	equ	0xFE2
 16240                           fsr1l	equ	0xFE1
 16241                           indf2	equ	0xFDF
 16242                           fsr2h	equ	0xFDA
 16243                           fsr2l	equ	0xFD9
 16244                           status	equ	0xFD8
 16245                           
 16246                           	psect	rparam
 16247  0000                     tosu	equ	0xFFF
 16248                           tosh	equ	0xFFE
 16249                           tosl	equ	0xFFD
 16250                           pclatu	equ	0xFFB
 16251                           pclath	equ	0xFFA
 16252                           tblptru	equ	0xFF8
 16253                           tblptrh	equ	0xFF7
 16254                           tblptrl	equ	0xFF6
 16255                           tablat	equ	0xFF5
 16256                           prodh	equ	0xFF4
 16257                           prodl	equ	0xFF3
 16258                           intcon	equ	0xFF2
 16259                           indf0	equ	0xFEF
 16260                           postinc0	equ	0xFEE
 16261                           fsr0h	equ	0xFEA
 16262                           fsr0l	equ	0xFE9
 16263                           wreg	equ	0xFE8
 16264                           postdec1	equ	0xFE5
 16265                           fsr1h	equ	0xFE2
 16266                           fsr1l	equ	0xFE1
 16267                           indf2	equ	0xFDF
 16268                           fsr2h	equ	0xFDA
 16269                           fsr2l	equ	0xFD9
 16270                           status	equ	0xFD8
 16271                           
 16272                           	psect	temp
 16273  00005F                     btemp:
 16274                           	opt stack 0
 16275  00005F                     	ds	1
 16276  0000                     int$flags	set	btemp
 16277  0000                     wtemp6	set	btemp+1
 16278                           tosu	equ	0xFFF
 16279                           tosh	equ	0xFFE
 16280                           tosl	equ	0xFFD
 16281                           pclatu	equ	0xFFB
 16282                           pclath	equ	0xFFA
 16283                           tblptru	equ	0xFF8
 16284                           tblptrh	equ	0xFF7
 16285                           tblptrl	equ	0xFF6
 16286                           tablat	equ	0xFF5
 16287                           prodh	equ	0xFF4
 16288                           prodl	equ	0xFF3
 16289                           intcon	equ	0xFF2
 16290                           indf0	equ	0xFEF
 16291                           postinc0	equ	0xFEE
 16292                           fsr0h	equ	0xFEA
 16293                           fsr0l	equ	0xFE9
 16294                           wreg	equ	0xFE8
 16295                           postdec1	equ	0xFE5
 16296                           fsr1h	equ	0xFE2
 16297                           fsr1l	equ	0xFE1
 16298                           indf2	equ	0xFDF
 16299                           fsr2h	equ	0xFDA
 16300                           fsr2l	equ	0xFD9
 16301                           status	equ	0xFD8


Data Sizes:
    Strings     199
    Constant    481
    Data        23
    BSS         15
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      94
    BANK0           160     73     113
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    IOCB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> Draw_Start_Colors_Menu@display(BANK0[10]), Draw_Brightness_Menu@display(BANK0[10]), Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[20]), 
		 -> Start_Color_Menu_Function@display(COMRAM[10]), Brightness_Menu_Function@display(COMRAM[10]), Run_Time_Menu_Function@display(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> Draw_Start_Colors_Menu@display(BANK0[10]), Draw_Brightness_Menu@display(BANK0[10]), Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[20]), 
		 -> Start_Color_Menu_Function@display(COMRAM[10]), Brightness_Menu_Function@display(COMRAM[10]), Run_Time_Menu_Function@display(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> Draw_Start_Colors_Menu@display(BANK0[10]), Draw_Brightness_Menu@display(BANK0[10]), Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[20]), 
		 -> Start_Color_Menu_Function@display(COMRAM[10]), Brightness_Menu_Function@display(COMRAM[10]), Run_Time_Menu_Function@display(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 20
		 -> Draw_Start_Colors_Menu@display(BANK0[10]), Draw_Brightness_Menu@display(BANK0[10]), Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[20]), 
		 -> Start_Color_Menu_Function@display(COMRAM[10]), Brightness_Menu_Function@display(COMRAM[10]), Run_Time_Menu_Function@display(COMRAM[10]), 

    GLCD_WriteString@stringToWrite	PTR unsigned char  size(2) Largest target is 20
		 -> STR_37(CODE[5]), STR_36(CODE[4]), STR_35(CODE[7]), STR_34(CODE[4]), 
		 -> STR_33(CODE[8]), STR_32(CODE[4]), Draw_Start_Colors_Menu@display(BANK0[10]), STR_31(CODE[6]), 
		 -> STR_30(CODE[13]), STR_29(CODE[5]), STR_28(CODE[4]), Draw_Brightness_Menu@display(BANK0[10]), 
		 -> STR_27(CODE[13]), STR_26(CODE[17]), STR_25(CODE[5]), STR_24(CODE[7]), 
		 -> STR_23(CODE[13]), STR_22(CODE[7]), Draw_runTime_Menu@display(BANK0[10]), STR_21(CODE[11]), 
		 -> STR_20(CODE[10]), STR_19(CODE[4]), STR_18(CODE[9]), STR_17(CODE[4]), 
		 -> STR_16(CODE[10]), STR_15(CODE[4]), STR_14(CODE[9]), STR_13(CODE[4]), 
		 -> STR_12(CODE[11]), STR_11(CODE[5]), STR_10(CODE[11]), STR_9(CODE[4]), 
		 -> Initialize_Menus@display(BANK0[20]), STR_8(CODE[8]), STR_7(CODE[7]), STR_6(CODE[10]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), Start_Color_Menu_Function@display(COMRAM[10]), 
		 -> STR_2(CODE[5]), Brightness_Menu_Function@display(COMRAM[10]), STR_1(CODE[7]), Run_Time_Menu_Function@display(COMRAM[10]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> Draw_Start_Colors_Menu@display(BANK0[10]), Draw_Brightness_Menu@display(BANK0[10]), Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[20]), 
		 -> Start_Color_Menu_Function@display(COMRAM[10]), Brightness_Menu_Function@display(COMRAM[10]), Run_Time_Menu_Function@display(COMRAM[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_PIN_MANAGER_IOC
    _PIN_MANAGER_IOC->_Brightness_Menu_Function
    _PIN_MANAGER_IOC->_Start_Color_Menu_Function
    _Start_Color_Menu_Function->i2_Set_Colors
    _Run_Time_Menu_Function->i2_itoa
    _Brightness_Menu_Function->i2_Set_Colors
    i2_itoa->i2_utoa
    i2_utoa->i2___lwdiv
    i2_Set_Colors->i2___ftmul
    i2___ftmul->i2___ftdiv
    i2___ftdiv->i2___ftpack
    i2___awtoft->i2___ftpack
    i2_PWM4_LoadDutyValue->i2___fttol
    i2_PWM3_LoadDutyValue->i2___fttol
    i2_PWM2_LoadDutyValue->i2___fttol
    i2_GLCD_WriteString->i2_GLCD_WriteChar
    i2_GLCD_WriteChar->i2_GLCD_WriteData
    i2_Draw_Arrow->i2_Clear_Arrow_Column
    i2_Draw_startColors_Arrow->i2_GLCD_GoTo
    i2_Draw_runTime_Arrow->i2_GLCD_GoTo
    i2_Draw_Brightness_Arrow->i2_GLCD_GoTo
    i2_Make_Arrow->i2_GLCD_WriteData
    i2_Clear_startColors_Arrows->i2_GLCD_GoTo
    i2_Clear_runTime_Arrows->i2_GLCD_GoTo
    i2_Clear_Brightness_Arrows->i2_GLCD_GoTo
    i2_Clear_Arrow_Column->i2_GLCD_GoTo
    i2_GLCD_WriteData->i2___awdiv
    i2_GLCD_GoTo->i2_GLCD_WriteCommand
    i2_GLCD_WriteCommand->i2___awdiv
    i2_GLCD_ReadStatus->i2_GLCD_DisableController
    i2_GLCD_ReadStatus->i2_GLCD_EnableController
    ___ftsub->___ftadd
    ___ftadd->i2___ftpack

Critical Paths under _main in BANK0

    _main->_Check_Buttons
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _GLCD_Initalize->_GLCD_WriteCommand
    _Check_Buttons->_Initialize_Menus
    _Set_Colors->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    _PWM4_LoadDutyValue->___fttol
    _PWM3_LoadDutyValue->___fttol
    _PWM2_LoadDutyValue->___fttol
    _Initialize_Menus->_GLCD_Line
    _Draw_runTime_Menu->_GLCD_Line
    _Draw_Start_Colors_Menu->_GLCD_Line
    _Draw_Brightness_Menu->_GLCD_Line
    _itoa->_utoa
    _utoa->___lwdiv
    _Make_Back_Arrow->_GLCD_WriteData
    _GLCD_WriteString->_GLCD_WriteChar
    _GLCD_WriteChar->_GLCD_WriteData
    _GLCD_Line->_GLCD_SetPixel
    _GLCD_SetPixel->_GLCD_GoTo
    _GLCD_ReadData->___awdiv
    _GLCD_ClearScreen->_GLCD_GoTo
    _Draw_Arrow->_Clear_Arrow_Column
    _Draw_startColors_Arrow->_GLCD_GoTo
    _Draw_runTime_Arrow->_GLCD_GoTo
    _Draw_Brightness_Arrow->_GLCD_GoTo
    _Make_Arrow->_GLCD_WriteData
    _Clear_startColors_Arrows->_GLCD_GoTo
    _Clear_runTime_Arrows->_GLCD_GoTo
    _Clear_Brightness_Arrows->_GLCD_GoTo
    _Clear_Arrow_Column->_GLCD_GoTo
    _GLCD_WriteData->___awdiv
    _GLCD_GoTo->_GLCD_WriteCommand
    _GLCD_WriteCommand->___awdiv
    _GLCD_ReadStatus->_GLCD_DisableController
    _GLCD_ReadStatus->_GLCD_EnableController

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  442469
                                             72 BANK0      1     1      0
                      _Check_Buttons
                         _Draw_Arrow
                   _GLCD_ClearScreen
                     _GLCD_Initalize
                   _Initialize_Menus
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              2 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCD_Initalize                                       1     1      0     767
                                             11 BANK0      1     1      0
               _GLCD_InitializePorts
                  _GLCD_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _GLCD_InitializePorts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        1     1      0  298827
                                             71 BANK0      1     1      0
                         _Draw_Arrow
               _Draw_Brightness_Menu
             _Draw_Start_Colors_Menu
                  _Draw_runTime_Menu
                   _Initialize_Menus
                 _PWM2_LoadDutyValue
                         _Set_Colors
 ---------------------------------------------------------------------------------
 (2) _Set_Colors                                          21    12      9   13377
                                             38 BANK0     21    12      9
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3752
                                             23 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3706
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2707
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2388
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _PWM4_LoadDutyValue                                   4     2      2     196
                                             15 BANK0      4     2      2
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     196
                                             15 BANK0      4     2      2
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM2_LoadDutyValue                                   4     2      2     272
                                             15 BANK0      4     2      2
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _Initialize_Menus                                    20    20      0   49204
                                             51 BANK0     20    20      0
                   _GLCD_ClearScreen
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
                            ___fttol
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _Draw_runTime_Menu                                   10    10      0   50445
                                             51 BANK0     10    10      0
                   _GLCD_ClearScreen
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
                    _Make_Back_Arrow
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _Draw_Start_Colors_Menu                              10    10      0   51549
                                             51 BANK0     10    10      0
                   _GLCD_ClearScreen
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
                    _Make_Back_Arrow
                            ___fttol
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _Draw_Brightness_Menu                                10    10      0   51461
                                             51 BANK0     10    10      0
                   _GLCD_ClearScreen
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
                    _Make_Back_Arrow
                            ___fttol
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    4044
                                             16 BANK0      8     2      6
                            ___fttol (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1307
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1060
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) _Make_Back_Arrow                                      0     0      0    2301
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _GLCD_WriteString                                     2     0      2    5977
                                             13 BANK0      2     0      2
                     _GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (3) _GLCD_WriteChar                                       3     3      0    2392
                                             10 BANK0      3     3      0
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _GLCD_Line                                           30    22      8   19654
                                             21 BANK0     30    22      8
                      _GLCD_SetPixel
 ---------------------------------------------------------------------------------
 (3) _GLCD_SetPixel                                        7     5      2   17230
                                             14 BANK0      7     5      2
                          _GLCD_GoTo
                      _GLCD_ReadData
                     _GLCD_WriteData
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GLCD_ReadData                                        2     2      0    2302
                                              8 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _GLCD_ClearScreen                                     2     2      0   10390
                                             14 BANK0      2     2      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _Draw_Arrow                                           0     0      0   82519
                 _Clear_Arrow_Column
            _Clear_Brightness_Arrows
               _Clear_runTime_Arrows
           _Clear_startColors_Arrows
              _Draw_Brightness_Arrow
                 _Draw_runTime_Arrow
             _Draw_startColors_Arrow
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Draw_startColors_Arrow                               0     0      0   10276
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Draw_runTime_Arrow                                   0     0      0   10276
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Draw_Brightness_Arrow                                0     0      0   10276
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Make_Arrow                                           0     0      0    2301
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_startColors_Arrows                             1     1      0   10373
                                             14 BANK0      1     1      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_runTime_Arrows                                 1     1      0   10349
                                             14 BANK0      1     1      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_Brightness_Arrows                              1     1      0   10325
                                             14 BANK0      1     1      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_Arrow_Column                                   9     9      0   10368
                                             14 BANK0      9     9      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _GLCD_WriteData                                       2     2      0    2301
                                              8 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GLCD_GoTo                                            3     2      1    7975
                                             11 BANK0      3     2      1
                  _GLCD_WriteCommand
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2124
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _GLCD_WriteCommand                                    3     2      1     699
                                              8 BANK0      3     2      1
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _GLCD_ReadStatus                                      2     2      0     111
                                              1 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
 ---------------------------------------------------------------------------------
 (6) _GLCD_EnableController                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_DisableController                               1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_Delay                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                          18    18      0  124107
                                             74 COMRAM    18    18      0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     4     4      0  124107
                                             70 COMRAM     4     4      0
           _Brightness_Menu_Function
                 _Main_Menu_Function
             _Run_Time_Menu_Function
          _Start_Color_Menu_Function
 ---------------------------------------------------------------------------------
 (11) _Start_Color_Menu_Function                          11    11      0   37876
                                             59 COMRAM    11    11      0
                            ___ftadd
                             ___ftge
                            ___ftsub
                       i2_Draw_Arrow
                        i2_GLCD_GoTo
                 i2_GLCD_WriteString
                       i2_Set_Colors
                          i2___fttol
                             i2_itoa
 ---------------------------------------------------------------------------------
 (11) _Run_Time_Menu_Function                             11    11      0   26431
                                             24 COMRAM    11    11      0
                       i2_Draw_Arrow
                        i2_GLCD_GoTo
                 i2_GLCD_WriteString
                             i2_itoa
 ---------------------------------------------------------------------------------
 (11) _Main_Menu_Function                                  1     1      0   21853
                                             23 COMRAM     1     1      0
                       i2_Draw_Arrow
 ---------------------------------------------------------------------------------
 (11) _Brightness_Menu_Function                           11    11      0   37744
                                             59 COMRAM    11    11      0
                            ___ftadd
                             ___ftge
                            ___ftsub
                       i2_Draw_Arrow
                        i2_GLCD_GoTo
                 i2_GLCD_WriteString
                       i2_Set_Colors
                          i2___fttol
                             i2_itoa
 ---------------------------------------------------------------------------------
 (12) i2_itoa                                              8     2      6    1410
                                             16 COMRAM     8     2      6
                          i2___fttol (ARG)
                             i2_utoa
 ---------------------------------------------------------------------------------
 (13) i2_utoa                                              9     3      6     857
                                              7 COMRAM     9     3      6
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (14) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (14) i2___lwdiv                                           7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2_Set_Colors                                       21    12      9    4188
                                             38 COMRAM    21    12      9
               i2_PWM2_LoadDutyValue
               i2_PWM3_LoadDutyValue
               i2_PWM4_LoadDutyValue
                         i2___awtoft
                          i2___ftdiv
                          i2___ftmul
                          i2___fttol
 ---------------------------------------------------------------------------------
 (12) i2___fttol                                          15    11      4     434
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (13) i2___ftmul                                          15     9      6    1181
                                             23 COMRAM    15     9      6
                         i2___awtoft (ARG)
                          i2___ftdiv (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (13) i2___ftdiv                                          15     9      6    1135
                                              8 COMRAM    15     9      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (13) i2___awtoft                                          4     1      3     712
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (13) i2_PWM4_LoadDutyValue                                4     2      2      70
                                             15 COMRAM     4     2      2
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (13) i2_PWM3_LoadDutyValue                                4     2      2      70
                                             15 COMRAM     4     2      2
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (13) i2_PWM2_LoadDutyValue                                4     2      2      70
                                             15 COMRAM     4     2      2
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (12) i2_GLCD_WriteString                                  2     0      2    1133
                                             13 COMRAM     2     0      2
                   i2_GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_WriteChar                                    3     3      0     828
                                             10 COMRAM     3     3      0
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (12) i2_Draw_Arrow                                        0     0      0   21831
               i2_Clear_Arrow_Column
          i2_Clear_Brightness_Arrows
             i2_Clear_runTime_Arrows
         i2_Clear_startColors_Arrows
            i2_Draw_Brightness_Arrow
               i2_Draw_runTime_Arrow
           i2_Draw_startColors_Arrow
                        i2_GLCD_GoTo
                       i2_Make_Arrow
 ---------------------------------------------------------------------------------
 (13) i2_Draw_startColors_Arrow                            0     0      0    2690
                        i2_GLCD_GoTo
                       i2_Make_Arrow
 ---------------------------------------------------------------------------------
 (13) i2_Draw_runTime_Arrow                                0     0      0    2690
                        i2_GLCD_GoTo
                       i2_Make_Arrow
 ---------------------------------------------------------------------------------
 (13) i2_Draw_Brightness_Arrow                             0     0      0    2690
                        i2_GLCD_GoTo
                       i2_Make_Arrow
 ---------------------------------------------------------------------------------
 (13) i2_Make_Arrow                                        0     0      0     737
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (13) i2_Clear_startColors_Arrows                          1     1      0    2787
                                             14 COMRAM     1     1      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (13) i2_Clear_runTime_Arrows                              1     1      0    2763
                                             14 COMRAM     1     1      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (13) i2_Clear_Brightness_Arrows                           1     1      0    2739
                                             14 COMRAM     1     1      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (13) i2_Clear_Arrow_Column                                9     9      0    2782
                                             14 COMRAM     9     9      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (14) i2_GLCD_WriteData                                    2     2      0     737
                                              8 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (12) i2_GLCD_GoTo                                         3     2      1    1953
                                             11 COMRAM     3     2      1
                i2_GLCD_WriteCommand
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (15) i2___awdiv                                           8     4      4     560
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_WriteCommand                                 3     2      1     373
                                              8 COMRAM     3     2      1
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2_GLCD_ReadStatus                                   2     2      0     111
                                              1 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
 ---------------------------------------------------------------------------------
 (16) i2_GLCD_EnableController                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_GLCD_DisableController                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_GLCD_Delay                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) ___ftsub                                             6     0      6    3070
                                             20 COMRAM     6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (13) ___ftadd                                            12     6      6    2269
                                              8 COMRAM    12     6      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (14) i2___ftpack                                          8     3      5     543
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (12) ___ftge                                              9     3      6    1352
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Draw_Arrow
       _Clear_Arrow_Column
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Clear_Brightness_Arrows
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Clear_runTime_Arrows
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Clear_startColors_Arrows
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Draw_Brightness_Arrow
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _Make_Arrow
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _Draw_runTime_Arrow
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _Make_Arrow
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _Draw_startColors_Arrow
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _Make_Arrow
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _Draw_Brightness_Menu
       _GLCD_ClearScreen
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _Make_Back_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       ___fttol
       _itoa
         ___fttol (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
     _Draw_Start_Colors_Menu
       _GLCD_ClearScreen
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _Make_Back_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       ___fttol
       _itoa
         ___fttol (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
     _Draw_runTime_Menu
       _GLCD_ClearScreen
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _Make_Back_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _itoa
         ___fttol (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
     _Initialize_Menus
       _GLCD_ClearScreen
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       ___fttol
       _itoa
         ___fttol (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
     _PWM2_LoadDutyValue
       ___fttol (ARG)
     _Set_Colors
       _PWM2_LoadDutyValue
         ___fttol (ARG)
       _PWM3_LoadDutyValue
         ___fttol (ARG)
       _PWM4_LoadDutyValue
         ___fttol (ARG)
       ___awtoft
         ___ftpack
       ___ftdiv
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
   _Draw_Arrow
     _Clear_Arrow_Column
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Clear_Brightness_Arrows
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Clear_runTime_Arrows
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Clear_startColors_Arrows
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Draw_Brightness_Arrow
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _Draw_runTime_Arrow
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _Draw_startColors_Arrow
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _Make_Arrow
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
   _GLCD_ClearScreen
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_WriteData
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv
   _GLCD_Initalize
     _GLCD_InitializePorts
     _GLCD_WriteCommand
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv (ARG)
   _Initialize_Menus
     _GLCD_ClearScreen
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_Line
       _GLCD_SetPixel
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_ReadData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
         ___awdiv
     _GLCD_WriteString
       _GLCD_WriteChar
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     ___fttol
     _itoa
       ___fttol (ARG)
       _utoa (ARG)
         ___lwdiv
         ___lwmod
   _PWM2_LoadDutyValue
     ___fttol (ARG)
   _PWM3_LoadDutyValue
     ___fttol (ARG)
   _PWM4_LoadDutyValue
     ___fttol (ARG)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR4_Initialize
       _TMR4_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _Brightness_Menu_Function
       ___ftadd
         i2___ftpack
       ___ftge
       ___ftsub
         ___ftadd
           i2___ftpack
       i2_Draw_Arrow
         i2_Clear_Arrow_Column
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_Brightness_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_runTime_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_startColors_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Draw_Brightness_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_Draw_runTime_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_Draw_startColors_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_GLCD_GoTo
           i2_GLCD_WriteCommand
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv (ARG)
           i2___awdiv
         i2_Make_Arrow
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
       i2_GLCD_GoTo
         i2_GLCD_WriteCommand
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
           i2_GLCD_ReadStatus
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
           i2___awdiv (ARG)
         i2___awdiv
       i2_GLCD_WriteString
         i2_GLCD_WriteChar
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
       i2_Set_Colors
         i2_PWM2_LoadDutyValue
           i2___fttol (ARG)
         i2_PWM3_LoadDutyValue
           i2___fttol (ARG)
         i2_PWM4_LoadDutyValue
           i2___fttol (ARG)
         i2___awtoft
           i2___ftpack
         i2___ftdiv
           i2___ftpack
         i2___ftmul
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___ftpack
           i2___ftpack (ARG)
         i2___fttol
       i2___fttol
       i2_itoa
         i2___fttol (ARG)
         i2_utoa (ARG)
           i2___lwdiv
           i2___lwmod
     _Main_Menu_Function
       i2_Draw_Arrow
         i2_Clear_Arrow_Column
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_Brightness_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_runTime_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_startColors_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Draw_Brightness_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_Draw_runTime_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_Draw_startColors_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_GLCD_GoTo
           i2_GLCD_WriteCommand
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv (ARG)
           i2___awdiv
         i2_Make_Arrow
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
     _Run_Time_Menu_Function
       i2_Draw_Arrow
         i2_Clear_Arrow_Column
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_Brightness_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_runTime_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_startColors_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Draw_Brightness_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_Draw_runTime_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_Draw_startColors_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_GLCD_GoTo
           i2_GLCD_WriteCommand
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv (ARG)
           i2___awdiv
         i2_Make_Arrow
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
       i2_GLCD_GoTo
         i2_GLCD_WriteCommand
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
           i2_GLCD_ReadStatus
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
           i2___awdiv (ARG)
         i2___awdiv
       i2_GLCD_WriteString
         i2_GLCD_WriteChar
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
       i2_itoa
         i2___fttol (ARG)
         i2_utoa (ARG)
           i2___lwdiv
           i2___lwmod
     _Start_Color_Menu_Function
       ___ftadd
         i2___ftpack
       ___ftge
       ___ftsub
         ___ftadd
           i2___ftpack
       i2_Draw_Arrow
         i2_Clear_Arrow_Column
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_Brightness_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_runTime_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_startColors_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Draw_Brightness_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_Draw_runTime_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_Draw_startColors_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_GLCD_GoTo
           i2_GLCD_WriteCommand
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv (ARG)
           i2___awdiv
         i2_Make_Arrow
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
       i2_GLCD_GoTo
         i2_GLCD_WriteCommand
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
           i2_GLCD_ReadStatus
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
           i2___awdiv (ARG)
         i2___awdiv
       i2_GLCD_WriteString
         i2_GLCD_WriteChar
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
       i2_Set_Colors
         i2_PWM2_LoadDutyValue
           i2___fttol (ARG)
         i2_PWM3_LoadDutyValue
           i2___fttol (ARG)
         i2_PWM4_LoadDutyValue
           i2___fttol (ARG)
         i2___awtoft
           i2___ftpack
         i2___ftdiv
           i2___ftpack
         i2___ftmul
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___ftpack
           i2___ftpack (ARG)
         i2___fttol
       i2___fttol
       i2_itoa
         i2___fttol (ARG)
         i2_utoa (ARG)
           i2___lwdiv
           i2___lwmod
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      71       5       70.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5E       1      100.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CF       6        0.0%
DATA                 0      0      CF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 14 14:46:01 2020

             GLCD_WriteCommand@controller 0068                    _Run_Time_Menu_Function 20F0  
               GLCD_WriteData@dataToWrite 0069                           GLCD_Initalize@i 006B  
                            ___awdiv@sign 0065                     ?i2_PWM2_LoadDutyValue 0010  
                      i2___lwdiv@dividend 0001                               __CFG_BORV$3 000000  
                              i2___awtoft 2F2E                                i2___ftpack 1AC8  
      i2GLCD_DisableController@controller 0001          GLCD_DisableController@controller 0060  
                         _timer0ReloadVal 00CD                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 0014  
                            ___ftadd@exp2 0013                              ___ftadd@sign 0012  
                                     l620 2196                                       l540 0FDC  
                                     l541 1014                                       l542 104C  
                                     l526 271C                                       l551 10D2  
                                     l543 1050                                       l535 0FC2  
                                     l615 31E2                                       l800 27FC  
                                     l632 2920                                       l536 1090  
                                     l544 1054                                       l625 2F74  
                                     l537 1068                                       l545 105C  
                                     l802 2818                                       l538 0FCC  
                                     l803 280E                                       l627 2F8C  
                                     l555 1124                                       l547 10AE  
                                     l820 235C                                       l556 1114  
                                     l821 2352                                       l637 28D4  
                                     l830 2570                                       l590 0D62  
                                     l638 28A8                                       l558 112C  
                                     l823 2384                                       l583 0CCC  
                                     l824 237A                                       l832 2586  
                                     l584 0CE4                                       l681 30FC  
                                     l673 30D2                                       l841 29A4  
                                     l817 2334                                       l833 259C  
                                     l593 0D98                                       l682 30F0  
                                     l674 30C6                                       l842 299A  
                                     l818 232A                                       l834 25B2  
                                     l850 1FEC                                       l594 0DCC  
                                     l851 2002                                       l684 30F4  
                                     l676 30CA                                       l860 1C6E  
                                     l852 2018                                       l588 0D90  
                                     l685 30F8                                       l677 30CE  
                                     l861 1C64                                       l829 25C8  
                                     l853 202E                                       l589 0D2E  
                                     l838 297C                                       l790 2756  
                                     l839 2972                                       l863 1C96  
                                     l847 2044                                       l864 1C8C  
                                     l872 29F2                                       l848 1FD6  
                                     l784 276A                                       l857 1C46  
                                     l873 29B0                                       l785 2724  
                                     l866 1CBE                                       l858 1C3C  
                                     l867 1CB4                                       l875 29C6  
                                     l787 2738                                       l876 29DC  
                                     l788 2742                                       l789 274C  
                            __CFG_CPB$OFF 000000                                       _PR4 000FA9  
                            __CFG_CPD$OFF 000000             __size_ofi2_PWM4_LoadDutyValue 0032  
            __end_of_Draw_Brightness_Menu 1A18                           _PWM4_Initialize 3266  
                                     tosl 000FFD                                       wreg 000FE8  
             PIN_MANAGER_IOC@currentState 0047                      Set_Colors@appliedRed 008F  
       __end_of_Start_Color_Menu_Function 042C                        __size_of_GLCD_GoTo 0088  
                      __size_of_GLCD_Line 01B4                              ___ftdiv@cntr 0071  
                            ___ftdiv@sign 0076                                      l1200 1468  
                                    l1201 145C                                      l1203 1484  
                                    l1052 2268                                      l1300 2AFA  
                                    l1212 1B7E                                      l1053 2272  
                                    l1045 221A                                      l1054 2280  
                                    l1046 222A                                      l1310 2CC4  
                                    l1214 1BBA                                      l1215 1BFC  
                                    l1048 2248                                      l1208 2C6C  
                                    l1160 182A                                      l1049 2240  
                                    l1305 2CA2                                      l1073 2ED2  
                                    l1306 2C9A                                      l1171 14C0  
                                    l1092 1A42                                      l1156 179E  
                                    l1309 2CBA                                      l1093 1A38  
                                    l1173 14E8                                      l1158 17C6  
                                    l1174 151A                                      l1095 1A76  
                                    l1159 1804                                      l1175 152A  
                                    l1192 13CC                                      l1096 1A60  
                                    l1177 1542                                      l1194 1444  
                                    l1098 1A9E                                      l1178 1552  
                                    l1195 1434                                      l1099 1A94  
                                    l1295 2AD0                                      l1296 2AC8  
                                    l4043 218E                                      l1299 2AF0  
                                    l4055 2486                                      l4243 2910  
                                    l4253 294E                                      l4803 2F84  
                                    l3929 2EFA                                      l4861 0D98  
                                    l4847 0D2E                                      l4875 27F4  
                                    l4795 2F6C                                      l5691 31DA  
                                    STR_1 FFD4                                      STR_2 FFE6  
                                    STR_3 FFE7                                      STR_4 FFE7  
                                    STR_5 FFE7                                      STR_6 FF9A  
                                    STR_7 FFCD                                      STR_8 FFBE  
                                    STR_9 FFFB                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u4021 13B0                                      u2600 21BE  
                                    u4040 13EA                                      u2540 224C  
                                    u4045 13E2                                      u4080 146E  
                                    u2640 2AD4                                      u3630 2F98  
                                    u2670 2CA6                                      u2930 1AA8  
                                    u3580 28CA                                      u2854 1D5A  
                                    u2870 294E                                      u3590 28F6  
                                    u4630 1120                                      u2855 1D56  
                                    u3911 14A8                                      u3680 0D12  
                                    u4560 10AA                                      u2890 1A2A  
                                    u3587 28C0                                      u3931 14D0  
                                    u3597 28EC                                      u3861 1786  
                                    u3881 17AE                                      u4767 26F8  
                                    u4777 0FB2                                      _TMR4 000F87  
                           _maxBrightness 00B8                                      _WPUB 000F5B  
          __size_of_Draw_Brightness_Arrow 0056             __end_of_Draw_Brightness_Arrow 2A04  
            __end_ofi2_PWM3_LoadDutyValue 3032                          i2Set_Colors@Blue 002D  
                                    _main 26BC                              ___ftpack@arg 0060  
                                    _itoa 2C46                              ___ftpack@exp 0063  
              ??_Brightness_Menu_Function 003C                           _TMR0_StartTimer 32C6  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                      i2___lwdiv@quotient 0005                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 005F  
                                    _utoa 1B76                                      prodh 000FF4  
         __end_ofi2_GLCD_EnableController 3164                                      prodl 000FF3  
                                    start 00B4                             __CFG_IESO$OFF 000000  
                            i2___ftdiv@f1 0009                              i2___ftdiv@f2 000C  
                            i2___ftdiv@f3 0013                    _Draw_Start_Colors_Menu 0A8C  
                   Set_Colors@appliedBlue 0095                              i2___awtoft@c 0009  
                           __CFG_MCLRE$ON 000000                              ___ftmul@cntr 0084  
                     i2_GLCD_WriteCommand 3064                              i2___ftmul@f1 0018  
                            i2___ftmul@f2 001B                              ___param_bank 000000  
                            ___ftmul@sign 0085                              i2___fttol@f1 0001  
                            ___fttol@exp1 006E               ?i2_Clear_startColors_Arrows 0001  
                _Clear_startColors_Arrows 1C20                              ___fttol@lval 006A  
         __size_of_GLCD_DisableController 002A                       __size_of_GLCD_Delay 0004  
                 __end_of_PWM2_Initialize 329C                   __end_of_TMR0_Initialize 2EBC  
             ??i2_Clear_Brightness_Arrows 000F            ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_GLCD_ReadStatus 30C0            __size_of_OSCILLATOR_Initialize 0012  
           __end_of_OSCILLATOR_Initialize 32AE                      _Clear_runTime_Arrows 230E  
                                   ?_main 0001                                     ?_itoa 0070  
                         __end_of___awdiv 228A                                     _EEADR 000F74  
                            ?i2_GLCD_GoTo 000C                           __end_of___ftadd 0FA6  
                                   STR_10 FF3E                                     STR_11 FFE6  
                                   STR_20 FF86                                     STR_12 FF7B  
                                   STR_13 FFEF                                     STR_21 FF70  
                                   STR_22 FFD4                                     STR_14 FFAD  
                                   STR_30 FF63                                     STR_15 FFEF  
                                   STR_31 FFDB                                     STR_23 FF49  
                                   STR_32 FFE7                                     STR_24 FFD4  
                                   STR_16 FF90                                     STR_17 FFF3  
                                   STR_25 FFE1                                     STR_33 FFB6  
                                   STR_34 FFE7                                     STR_18 FFA4  
                                   STR_26 FF38                                     STR_19 FFF7  
                                   STR_35 FFC6                                     STR_27 FF56  
                                   STR_36 FFE7                                     STR_28 FFEB  
                                   STR_37 FFE1                                     STR_29 FFE1  
                         __end_of___ftdiv 185C                                     ?_utoa 0067  
                         __end_of___ftmul 158C                                     _T0CON 000FD5  
                         ___awdiv@divisor 0062                           __end_of___ftsub 2D92  
                         __end_of___fttol 1496                                     _T4CON 000F88  
                         __end_of___lwdiv 2B04                           __end_of___lwmod 2CCE  
                                   i2l203 0410                                     i2l211 01D4  
                                   i2l204 03F8                                     i2l220 037C  
                                   i2l212 0224                                     i2l221 03F4  
                                   i2l205 00C4                                     i2l206 0114  
                                   i2l150 1EE2                                     i2l223 0420  
                                   i2l215 026C                                     i2l151 1F38  
                                   i2l216 02E4                                     i2l152 1EEA  
                                   i2l217 0334                                     i2l209 015C  
                                   i2l153 1EF2                                     i2l162 3204  
                                   i2l170 2154                                     i2l226 0426  
                                   i2l154 1EFA                                     i2l171 20FC  
                                   i2l147 1EDC                                     i2l172 210C  
                                   i2l165 320E                                     i2l149 1F0A  
                                   i2l261 0068                                     i2l182 2176  
                                   i2l158 1F02                                     i2l175 2112  
                                   i2l192 11DA                                     i2l169 2160  
                                   i2l177 2150                                     i2l186 1262  
                                   i2l194 1252                                     i2l187 1256  
                                   i2l179 2170                                     i2l259 005E  
                                   i2l620 241E                                     i2l196 1272  
                                   i2l188 1142                                     i2l189 1192  
                                   i2l199 1278                                     i2l800 2858  
                                   i2l632 2BC8                                     i2l802 2870  
                                   i2l803 2868                                     i2l820 23D6  
                                   i2l821 23CE                                     i2l637 2A30  
                                   i2l830 25E2                                     i2l638 2A06  
                                   i2l823 23FC                                     i2l824 23F4  
                                   i2l832 25F8                                     i2l681 3174  
                                   i2l673 314E                                     i2l841 2B4C  
                                   i2l817 23B0                                     i2l833 260E  
                                   i2l682 3168                                     i2l674 3142  
                                   i2l842 2B44                                     i2l818 23A8  
                                   i2l834 2624                                     i2l850 207A  
                                   i2l851 2090                                     i2l684 316C  
                                   i2l676 3146                                     i2l860 1E58  
                                   i2l852 20A6                                     i2l685 3170  
                                   i2l677 314A                                     i2l861 1E50  
                                   i2l829 263A                                     i2l853 20BC  
                                   i2l838 2B26                                     i2l790 27BC  
                                   i2l839 2B1E                                     i2l863 1E7E  
                                   i2l847 20D2                                     i2l864 1E76  
                                   i2l872 2A9E                                     i2l848 2064  
                                   i2l784 27D0                                     i2l857 1E32  
                                   i2l873 2A5C                                     i2l785 278A  
                                   i2l866 1EA4                                     i2l858 1E2A  
                                   i2l867 1E9C                                     i2l875 2A72  
                                   i2l787 279E                                     i2l876 2A88  
                                   i2l788 27A8                           ___awdiv@counter 0064  
                                   i2l789 27B2                        _PWM4_LoadDutyValue 2DCE  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _PORTA 000F80                                     _PORTB 000F81  
                                   _PORTD 000F83           Brightness_Menu_Function@display 003C  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                                _Draw_Arrow 2722  
       __size_of_TMR0_SetInterruptHandler 000A                  ?i2_Draw_Brightness_Arrow 0001  
                           __CFG_WRT0$OFF 000000                           _TMR4_Initialize 322A  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
               ?_TMR0_SetInterruptHandler 0060                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000               __size_of_Clear_Arrow_Column 005E  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                    ?i2_GLCD_WriteCommand 0009                          __end_of_TMR0_ISR 313E  
                              _Make_Arrow 323E                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                         __end_of_font5x8 FF37                                i2itoa@base 0015  
              i2Clear_Brightness_Arrows@i 000F                            __CFG_EBTRB$OFF 000000  
                           ___awtoft@sign 006B                   __end_of_PIN_MANAGER_IOC 1F44  
                                   _color FF37                         i2Set_Colors@Green 002A  
                           Set_Colors@Red 0086                       ?_PWM4_LoadDutyValue 006F  
                           ___ftpack@sign 0064                           _Make_Back_Arrow 2F9C  
                 __end_of_PWM3_Initialize 328A                                     pclath 000FFA  
                                   tablat 000FF5                      i2_Clear_Arrow_Column 284C  
                  ??_GLCD_InitializePorts 0060                __end_of_Main_Menu_Function 3214  
                                   utoa@c 006F                                     utoa@v 006D  
                                   status 000FD8                                     wtemp6 0060  
                           i2___ftdiv@exp 0016                        __size_ofi2___awdiv 0084  
                      __size_ofi2___ftdiv 00E6                        __size_ofi2___ftmul 00F4  
                      __size_ofi2___fttol 00F4                        __size_ofi2___lwdiv 0052  
                      __size_ofi2___lwmod 0042                    Set_Colors@appliedGreen 0092  
             Draw_Brightness_Menu@display 0093                           __initialization 2BFC  
                            __end_of_main 2722                             i2___ftmul@exp 0021  
                            __end_of_itoa 2C8A             i2PWM4_LoadDutyValue@dutyValue 0010  
                            __end_of_utoa 1C20                      ??_PWM4_LoadDutyValue 0071  
                       __end_of_GLCD_GoTo 2204                    ??i2_PWM2_LoadDutyValue 0012  
                       __end_of_GLCD_Line 0DFA                 Clear_startColors_Arrows@i 006E  
              ??i2_Draw_startColors_Arrow 000F                   __end_of_PWM4_Initialize 3278  
             ?_INTERRUPT_InterruptManager 0001                 __size_of_Initialize_Menus 0230  
                   ?_Clear_runTime_Arrows 0001                       Clear_Arrow_Column@i 0076  
                     Clear_Arrow_Column@j 0075                               ?i2___awtoft 0009  
                             ?i2___ftpack 0001                                    ??_main 00A8  
                           ___fttol@sign1 0069                                i2utoa@base 000C  
                                  ??_itoa 0076                                    ??_utoa 006D  
                           __activetblptr 000003                            __CFG_RETEN$OFF 000000  
                   ??i2_GLCD_WriteCommand 000A                          GLCD_SetPixel@tmp 0072  
                 __end_of_TMR0_StartTimer 32CA         __size_ofi2_GLCD_DisableController 0026  
                           ?i2_GLCD_Delay 0001                                    _EEADRH 000F75  
                                  _EEDATA 000F73                                    _CCPR2H 000F52  
                                  _CCPR3H 000F4F                                    _CCPR2L 000F51  
                                  _CCPR4H 000F4C                                    _CCPR3L 000F4E  
                                  _CCPR4L 000F4B                                    _EECON2 000F7E  
                                  _ANCON0 000F5D                                    _ANCON1 000F5C  
               ?i2_GLCD_DisableController 0001                    _GLCD_DisableController 30EA  
                        ___awdiv@dividend 0060                          __end_of___awtoft 2EF6  
                        __end_of___ftpack 1AC8                 i2_Clear_Brightness_Arrows 2B04  
                              _Set_Colors 065C                     ?i2_Clear_Arrow_Column 0001  
                                  i2l1200 1652                                    i2l1201 1646  
                                  i2l1123 0E4C                                    i2l1203 166E  
                                  i2l1132 0EDC                                    i2l1052 22EC  
                                  i2l1300 2BA0                                    i2l1212 1D74  
                                  i2l1053 22F6                                    i2l1045 229E  
                                  i2l1150 0F50                                    i2l1054 2304  
                                  i2l1046 22AE                                    i2l1310 2D48  
                                  i2l1214 1DAE                                    i2l1151 0F80  
                                  i2l1127 0E76                                    i2l1215 1DEC  
                         __CFG_BBSIZ$BB2K 000000                                    i2l1048 22CC  
                                  i2l1160 1910                                    i2l1208 2CF2  
                                  i2l1137 0ED2                                    i2l1049 22C4  
                                  i2l1073 2F42                                    i2l1305 2D26  
                                  i2l1146 0F10                                    i2l1138 0EC8  
                                  i2l1306 2D1E                                    i2l1147 0F06  
                                  i2l1171 16A8                                    i2l1164 1F74  
                                  i2l1092 1AF0                                    i2l1156 1884  
                                  i2l1165 1FA4                                    i2l1093 1AE6  
                                  i2l1149 0F34                                    i2l1173 16D0  
                                  i2l1309 2D3E                                    i2l1158 18AC  
                                  i2l1174 1702                                    i2l1095 1B24  
                                  i2l1159 18EA                                    i2l1175 1712  
                                  i2l1096 1B0E                                    i2l1192 15B8  
                                  i2l1177 172A                                    i2l1098 1B4C  
                                  i2l1178 173A                                    i2l1194 162E  
                                  i2l1099 1B42                                    i2l1195 161E  
                                  i2l1188 2D68                                    i2l4013 2654  
                                  i2l1295 2B76                                    i2l1296 2B6E  
                                  i2l1299 2B96                            __CFG_WDTEN$OFF 000000  
                                  i2l4145 2416                                    i2l4403 2BB8  
                                  i2l4413 2BF4                                    i2l4417 2850  
                                  i2l3789 1FD0                                    i2l3993 3066  
                                  _TABLAT 000FF5                                    u340_41 1690  
                                  u342_41 16B8                                    u335_41 186C  
                                  u337_41 1894                                    u346_41 159C  
                                  u296_41 0E0A                                    u297_41 0E1E  
                                  _OSCCON 000FD3                 __size_ofi2_GLCD_WriteChar 0052  
               __size_ofi2_GLCD_WriteData 006A                           _TMR4_StartTimer 32C2  
                                  i2_itoa 2CCE                                    i2_utoa 1D6C  
                        _GLCD_WriteString 28A6                      _Draw_Brightness_Menu 1942  
                          __CFG_XINST$OFF 000000                                    ___ftge 1F44  
             __size_of_PWM3_LoadDutyValue 003C                                 ??___awdiv 0064  
                               ??___ftadd 000F                            __CFG_STVREN$ON 000000  
                               ??___ftdiv 006E                                 ??___ftmul 007D  
                               ??___ftsub 001B                                 ??___fttol 0064  
                               ??___lwdiv 0064                                 ??___lwmod 0064  
                        ?_TMR0_Initialize 0001                          ?_PWM2_Initialize 0001  
                 __end_of_TMR4_Initialize 323E                                    clear_0 2C34  
                          Set_Colors@Blue 008C                          ___awdiv@quotient 0066  
                        ?_GLCD_ReadStatus 0001           __end_ofi2_Draw_Brightness_Arrow 2AB0  
                  __size_of_Check_Buttons 0190                      i2_PWM3_LoadDutyValue 3000  
                          i2___awdiv@sign 0006             __size_ofi2_Draw_runTime_Arrow 0072  
                   ___ftmul@f3_as_product 0081                                    itoa@cp 0076  
                            __pdataCOMRAM 005E                               ?_Draw_Arrow 0001  
                       __end_ofi2___awdiv 230E                         __end_ofi2___ftdiv 1942  
                 __end_of_Make_Back_Arrow 2FCE                         __end_ofi2___ftmul 1774  
                       __end_ofi2___fttol 1680                         __end_ofi2___lwdiv 2BAA  
                            __mediumconst FD56                         __end_ofi2___lwmod 2D52  
             ??_Start_Color_Menu_Function 003C                                    tblptrh 000FF7  
                                  tblptrl 000FF6          __size_ofi2_GLCD_EnableController 0026  
                                  tblptru 000FF8                     _GLCD_EnableController 30C0  
                             ?_Make_Arrow 0001                            ??i2_GLCD_Delay 0001  
                            ??_GLCD_Delay 0060  TMR0_SetInterruptHandler@InterruptHandler 0060  
                        ?_PIN_MANAGER_IOC 0001             __size_of_INTERRUPT_Initialize 0004  
                        ?_PWM3_Initialize 0001                         _SYSTEM_Initialize 31AE  
                          i2___ftdiv@cntr 0012                                __accesstop 0060  
                 __end_of__initialization 2C3C                            i2___ftdiv@sign 0017  
              __end_ofi2_GLCD_WriteString 2A5A                                ___ftadd@f1 0009  
                              ___ftadd@f2 000C           i2GLCD_WriteString@stringToWrite 000E  
           GLCD_WriteString@stringToWrite 006D                       __size_ofi2___awtoft 0038  
                     __size_ofi2___ftpack 00AE                                ___ftge@ff1 0001  
                              ___ftge@ff2 0004                        ?_SYSTEM_Initialize 0001  
              __end_of_PWM2_LoadDutyValue 2E82                   i2Set_Colors@appliedBlue 0036  
                           ___rparam_used 000001                   ?_Run_Time_Menu_Function 0001  
                              ___ftdiv@f1 0068                                ___ftdiv@f2 006B  
                              ___ftdiv@f3 0072                     ?_Draw_Brightness_Menu 0001  
                         GLCD_WriteChar@i 006B                         ?_GLCD_ClearScreen 0001  
                       _appliedBrightness 00B2                                ___awtoft@c 0068  
                          i2___ftpack@arg 0001                            i2___ftpack@exp 0004  
                              ___ftmul@f1 0077                                ___ftmul@f2 007A  
                            i2GLCD_GoTo@i 000E                              i2GLCD_GoTo@x 000D  
                            i2GLCD_GoTo@y 000C                     __end_of_GLCD_ReadData 256E  
                              ___ftsub@f1 0015                                ___ftsub@f2 0018  
                            _adjustValues 00C8                                ___fttol@f1 0060  
                      i2___lwmod@dividend 0001                            __pcstackCOMRAM 0001  
                      ??_GLCD_ClearScreen 006E                              __pidataBANK0 3214  
                     ??_SYSTEM_Initialize 0064                                 ?_TMR0_ISR 0001  
                           __end_of_color FF38                  ??_Draw_startColors_Arrow 006E  
                  ??_Clear_runTime_Arrows 006E              PIN_MANAGER_IOC@previousState 00C5  
                          i2___ftmul@cntr 0025                            i2___ftmul@sign 0026  
                   __end_of_GLCD_SetPixel 1D6C                          ?_PWM4_Initialize 0001  
                      __end_of_GLCD_Delay 32D2                     ?i2_PWM3_LoadDutyValue 0010  
                          i2___fttol@exp1 000F                   __size_of_GLCD_Initalize 0022  
                          i2___fttol@lval 000B               PWM4_LoadDutyValue@dutyValue 006F  
                            _afterMinutes 00C6                        _Draw_runTime_Arrow 256E  
                    __size_ofi2_GLCD_GoTo 007A                          ?_TMR0_StartTimer 0001  
                     ?_Draw_runTime_Arrow 0001                   __end_of_TMR4_StartTimer 32C6  
                  ??i2_Clear_Arrow_Column 000F                 __end_of_SYSTEM_Initialize 31D0  
                             ?_Set_Colors 0086                                __pbssBANK0 00BF  
                         __CFG_PLLCFG$OFF 000000                             _Check_Buttons 0FA6  
                 ?_Draw_Start_Colors_Menu 0001            __end_of_Run_Time_Menu_Function 217C  
            __end_ofi2_PWM4_LoadDutyValue 3000                ??_Clear_startColors_Arrows 006E  
                ?_Clear_Brightness_Arrows 0001                                   ?i2_itoa 0011  
                                 ?i2_utoa 0008                 _Start_Color_Menu_Function 00B8  
                     __size_of_Draw_Arrow 0066                         i2_Set_Colors$2088 0039  
                                 ?___ftge 0001          __end_of_TMR0_SetInterruptHandler 32B8  
                    ??_Draw_runTime_Arrow 006E                       __size_of_Make_Arrow 0014  
                              ??_TMR0_ISR 0001                                   _CCP2CON 000F50  
                                 _CCP3CON 000F4D                                   _CCP4CON 000F4A  
                        _Initialize_Menus 042C                   __size_of_GLCD_WriteChar 0058  
                 __size_of_GLCD_WriteData 0078                         GLCD_ClearScreen@i 006E  
                       GLCD_ClearScreen@j 006F                          ?_TMR4_Initialize 0001  
                               ?___awtoft 0068                                 ?___ftpack 0060  
                        __CFG_CANMX$PORTB 000000                    ?_GLCD_EnableController 0001  
                                 _REFOCON 000F9A                          ?_Make_Back_Arrow 0001  
               GLCD_ReadStatus@controller 0062                                   _OSCCON2 000FD2  
                                 _TBLPTRH 000FF7                                   _TBLPTRL 000FF6  
                                 _TBLPTRU 000FF8                         _GLCD_WriteCommand 2EF6  
                                 _OSCTUNE 000F9B                  Clear_Brightness_Arrows@i 006E  
                Draw_runTime_Menu@display 0093           Start_Color_Menu_Function@result 0046  
                      ?_GLCD_WriteCommand 0068            __end_of_Draw_Start_Colors_Menu 0C46  
                          ?_Check_Buttons 0001                          i2_GLCD_WriteChar 2BAA  
                        i2_GLCD_WriteData 2652            GLCD_Line@TwoDxAccumulatedError 007F  
                  ??_Draw_Brightness_Menu 0093          __size_ofi2_Draw_Brightness_Arrow 0056  
                   _Draw_Brightness_Arrow 29AE                                _greenStart 00AC  
                     ??_GLCD_WriteCommand 0069                                _xMenuStart 00BA  
                         __size_ofi2_itoa 0042                                   i2utoa@c 0010  
                         __CFG_PWRTEN$OFF 000000                                   i2utoa@v 000E  
                         __size_ofi2_utoa 00A4                                   __Hparam 0000  
             i2GLCD_WriteChar@charToWrite 000B             Run_Time_Menu_Function@display 0019  
                                 __Lparam 0000                           __size_of___ftge 0090  
                                 ___awdiv 2204                      __end_ofi2_GLCD_Delay 32D6  
                                 ___ftadd 0DFA                                   ___ftdiv 1774  
                                 ___ftmul 1496                                   ___ftsub 2D52  
                                 ___fttol 139E                                   ___lwdiv 2AB0  
                                 ___lwmod 2C8A                        _Main_Menu_Function 31F2  
         __size_of_Draw_startColors_Arrow 008E                    ??i2_PWM3_LoadDutyValue 0012  
        __end_ofi2_GLCD_DisableController 318A                                   __pcinit 2BFC  
                            ??i2___awtoft 000C                              ??i2___ftpack 0006  
                     __size_of_Set_Colors 021E                                ??___awtoft 006B  
                              ??___ftpack 0065                   i2___ftmul@f3_as_product 0022  
                                 __ramtop 0F00         __size_of_Brightness_Menu_Function 0148  
                                 __ptext0 26BC                                   __ptext1 31AE  
                                 __ptext2 322A                                   __ptext3 32C2  
                                 __ptext4 2E82                                   __ptext5 32C6  
                                 __ptext6 32AE                                   __ptext7 3266  
                                 __ptext8 3278                                   __ptext9 328A  
               ?_Brightness_Menu_Function 0001                                 _GLCD_GoTo 217C  
                               _GLCD_Line 0C46                                 _T0CONbits 000FD5  
                                 _font5x8 FD57                __end_of_Clear_Arrow_Column 284C  
                   _OSCILLATOR_Initialize 329C                       ?_Main_Menu_Function 0001  
               __end_of_GLCD_WriteCommand 2F2E                   i2_GLCD_EnableController 313E  
                           ?i2_Draw_Arrow 0001                  __end_of_GLCD_WriteString 28FE  
                               _T4CONbits 000F88                   ?_GLCD_DisableController 0001  
                         Set_Colors@Green 0089                  ??_PIN_MANAGER_Initialize 0060  
                       __CFG_MSSPMSK$MSK7 000000                     GLCD_ReadStatus@status 0061  
                           ?i2_Make_Arrow 0001                        PIN_MANAGER_IOC@CHA 0049  
                      PIN_MANAGER_IOC@CHB 0048                __size_of_SYSTEM_Initialize 0022  
                        ?_TMR4_StartTimer 0001           __end_of_Clear_Brightness_Arrows 29AE  
                    end_of_initialization 2C3C                  ??i2_Clear_runTime_Arrows 000F  
                 Initialize_Menus@display 0093                                   itoa@buf 0070  
                                 itoa@val 0072             i2PWM2_LoadDutyValue@dutyValue 0010  
           __size_of_GLCD_InitializePorts 000A                        __end_ofi2___awtoft 2F66  
                      __end_ofi2___ftpack 1B76                      ??_Main_Menu_Function 0018  
                              GLCD_GoTo@i 006D                                GLCD_GoTo@x 006C  
                              GLCD_GoTo@y 006B            GLCD_Line@TwoDyAccumulatedError 0081  
             i2GLCD_WriteData@dataToWrite 000A                                   postdec1 000FE5  
                                 postinc0 000FEE               __size_of_PWM4_LoadDutyValue 003C  
                                 utoa@buf 0067                                   utoa@val 0069  
                   Clear_runTime_Arrows@i 006E                            GLCD_Line@TwoDx 0087  
                          GLCD_Line@TwoDy 0089               __end_ofi2_GLCD_WriteCommand 3094  
                          _GLCD_Initalize 31D0             __size_ofi2_PWM2_LoadDutyValue 0032  
                _TMR0_SetInterruptHandler 32AE                                 _PORTBbits 000F81  
                              ?_GLCD_GoTo 006B                                ?_GLCD_Line 0075  
          __end_of_GLCD_DisableController 3114                            ??i2_Draw_Arrow 0018  
                    i2_PWM4_LoadDutyValue 2FCE                              ??_Draw_Arrow 0077  
                        __CFG_FOSC$INTIO2 000000                                _runMinutes 00C7  
                          ??i2_Make_Arrow 000B                              ??_Make_Arrow 006A  
                         ??_Check_Buttons 00A7                                 i2___awdiv 228A  
       __size_ofi2_Draw_startColors_Arrow 008E                                 i2___ftdiv 185C  
                       i2___lwdiv@divisor 0003                                 i2___ftmul 1680  
               ?i2_Draw_startColors_Arrow 0001                    _Draw_startColors_Arrow 1FD4  
                               i2___fttol 158C                                 i2___lwdiv 2B58  
                               i2___lwmod 2D10                         i2___lwdiv@counter 0007  
                           ?i2_Set_Colors 0027                  i2Set_Colors@appliedGreen 0033  
            __end_ofi2_Draw_runTime_Arrow 2652                    ?_Draw_Brightness_Arrow 0001  
                             ___ftdiv@exp 0075                           i2___awtoft@sign 000C  
                      i2___awdiv@dividend 0001                           i2Set_Colors@Red 0027  
                         i2___ftpack@sign 0005                __end_of_PWM3_LoadDutyValue 2E46  
                          __end_ofi2_itoa 2D10                            __end_ofi2_utoa 1E10  
                             ___ftmul@exp 0080                        __end_of_Draw_Arrow 2788  
            __end_of_INTERRUPT_Initialize 32CE                    __end_of_GLCD_Initalize 31F2  
                      __end_of_Make_Arrow 3252                            GLCD_SetPixel@x 0073  
                          GLCD_SetPixel@y 006E                            __end_of___ftge 1FD4  
                      i2_GLCD_WriteString 2A04                            _GLCD_WriteChar 28FE  
                          _GLCD_WriteData 2482                     PIN_MANAGER_IOC@result 004A  
                           __pidataCOMRAM 32D8                         __size_of_TMR0_ISR 002A  
                      _PWM2_LoadDutyValue 2E46                 ??i2_GLCD_EnableController 0001  
      __size_of_Start_Color_Menu_Function 0374                                 i2itoa@buf 0011  
                               i2itoa@val 0013                    ?_OSCILLATOR_Initialize 0001  
                   ?i2_PWM4_LoadDutyValue 0010                          _timeAfterFinishX 00BC  
               __size_of_GLCD_ClearScreen 0036                __size_of_GLCD_WriteCommand 0038  
                     ?i2_GLCD_WriteString 000E                  i2_GLCD_DisableController 3164  
                     start_initialization 2BFC                        i2___awdiv@quotient 0007  
                __size_of_PWM2_Initialize 0012                  __size_of_TMR0_Initialize 003A  
                     ?_PWM2_LoadDutyValue 006F           __size_of_PIN_MANAGER_Initialize 003C  
                __size_of_GLCD_ReadStatus 002C                           i2___fttol@sign1 000A  
                              ?i2___awdiv 0001                                ?i2___ftdiv 0009  
                          ??i2_Set_Colors 0030                                ?i2___ftmul 0018  
                              ?i2___fttol 0001                              ??_Set_Colors 008F  
                              ?i2___lwdiv 0001                                ?i2___lwmod 0001  
                               i2utoa@buf 0008                                 i2utoa@val 000A  
                __end_of_Initialize_Menus 065C           __size_ofi2_Clear_runTime_Arrows 007A  
                 i2_Draw_Brightness_Arrow 2A5A                                  ??i2_itoa 0017  
                    ??i2_GLCD_WriteString 0010                                  ??i2_utoa 000E  
                   __size_ofi2_GLCD_Delay 0004                  __size_of_PIN_MANAGER_IOC 0094  
                    ??_PWM2_LoadDutyValue 0071                  __size_of_PWM3_Initialize 0012  
                          _currentContext 00CC               PWM2_LoadDutyValue@dutyValue 006F  
                                ??___ftge 0007                    __end_of_GLCD_WriteChar 2956  
                  __end_of_GLCD_WriteData 24FA               i2Clear_startColors_Arrows@i 000F  
                             _CCPTMRSbits 000F99                           ?_GLCD_Initalize 0001  
                             __pdataBANK0 00A9              ??i2_Clear_startColors_Arrows 000F  
                __end_ofi2_GLCD_WriteChar 2BFC                  __end_ofi2_GLCD_WriteData 26BC  
                 ??_GLCD_EnableController 0060          __size_of_Clear_Brightness_Arrows 0058  
           __size_of_Clear_runTime_Arrows 0080                             ??i2_GLCD_GoTo 000D  
                      __end_of_Set_Colors 087A                               ??_GLCD_GoTo 006C  
                             ??_GLCD_Line 007D                         __size_of___awtoft 003A  
                 i2GLCD_ReadStatus@status 0002                         __size_of___ftpack 00B0  
                      _startColorsContext 00C9                               __pbssCOMRAM 005D  
                  i2Set_Colors@appliedRed 0030                             __pcstackBANK0 0060  
                __size_of_PWM4_Initialize 0012                         i2___lwmod@divisor 0003  
                       i2___lwmod@counter 0005                         i2_GLCD_ReadStatus 318A  
                  __size_of_GLCD_ReadData 0074                              i2_GLCD_Delay 32D2  
                       _Draw_runTime_Menu 127E                        ?i2_GLCD_ReadStatus 0001  
           __size_ofi2_Clear_Arrow_Column 005A                    __size_of_GLCD_SetPixel 00A4  
                Main_Menu_Function@result 0018                        ?_Draw_runTime_Menu 0001  
                   _TMR0_InterruptHandler 00CF                                 __pnvBANK0 00CD  
                         _Set_Colors$1887 0098                  __size_of_TMR0_StartTimer 0004  
     __size_ofi2_Clear_startColors_Arrows 00A0          __end_of_Brightness_Menu_Function 127E  
                    __end_ofi2_Draw_Arrow 27EE                       ??i2_GLCD_ReadStatus 0002  
                        ___lwdiv@dividend 0060                    _PIN_MANAGER_Initialize 2D92  
                    __end_ofi2_Make_Arrow 3266                       ??_Draw_runTime_Menu 0093  
                               __pintcode 0008                        GLCD_SetPixel@color 006F  
                         ?_GLCD_WriteChar 0001                           ?_GLCD_WriteData 0001  
                           __pmediumconst FD56                   i2Clear_runTime_Arrows@i 000F  
                                ?___awdiv 0060                                 __ptext100 0000  
             __size_of_Draw_runTime_Arrow 0072                                  ?___ftadd 0009  
                                ?___ftdiv 0068                                  ?___ftmul 0077  
                                ?___ftsub 0015                                  ?___fttol 0060  
                               _blueStart 00A9                                  ?___lwdiv 0060  
                                ?___lwmod 0060                    i2_Clear_runTime_Arrows 238E  
                  ??i2_PWM4_LoadDutyValue 0012              ??_INTERRUPT_InterruptManager 004B  
       __size_of_Clear_startColors_Arrows 00A8                 ?_Clear_startColors_Arrows 0001  
                    i2_Draw_runTime_Arrow 25E0                                 _mainState 005D  
               __end_ofi2_GLCD_ReadStatus 31AE                         ?_GLCD_WriteString 006D  
                __size_of_TMR4_Initialize 0014                       __end_ofi2_GLCD_GoTo 2482  
               __end_of_Draw_runTime_Menu 139E                          ___lwdiv@quotient 0064  
                             ??i2___awdiv 0005                        ??_GLCD_WriteString 006F  
                             ??i2___ftdiv 000F                               ??i2___ftmul 001E  
                             ??i2___fttol 0005                 ??i2_Draw_Brightness_Arrow 000F  
                             ??i2___lwdiv 0005                               ??i2___lwmod 0005  
                    _INTERRUPT_Initialize 32CA                        _Clear_Arrow_Column 27EE  
                __size_of_Make_Back_Arrow 0032                         ??_TMR0_Initialize 0062  
                       ??_PWM2_Initialize 0060                         ??_GLCD_ReadStatus 0061  
                                _IOCBbits 000F5A                                  _LATEbits 000F8D  
       i2GLCD_EnableController@controller 0001           GLCD_EnableController@controller 0060  
           __size_of_Draw_Brightness_Menu 00D6                                  i2u300_40 0E3E  
                                i2u310_40 0EE4                                  i2u303_40 0E68  
     __size_of_INTERRUPT_InterruptManager 00AC                                  i2u313_40 0F18  
                                i2u321_40 2BF4                                  i2u306_40 0EA6  
                                i2u410_40 2A28                                  i2u410_47 2A1E  
                                i2u411_40 2A52                                  i2u411_47 2A48  
              ??_TMR0_SetInterruptHandler 0062                                  i2u270_40 2442  
                                i2u247_40 22D0                                  i2u272_40 1AD8  
                                i2u352_40 1658                                  i2u280_40 2B7A  
                     ?_Clear_Arrow_Column 0001                                  i2u283_40 2D2A  
                                i2u276_40 1B56                                  i2u348_40 15D6  
                                i2u348_45 15CE                                  _PIR4bits 000FB7  
                                i2u447_48 312C          Start_Color_Menu_Function@display 003C  
                                _RCONbits 000FD0                             _GLCD_ReadData 24FA  
                           GLCD_Line@Xinc 0083                             GLCD_Line@Yinc 0085  
                                _TMR0_ISR 3114                         ??_PIN_MANAGER_IOC 0047  
                    __end_ofi2_Set_Colors 0A8C          __end_ofi2_Draw_startColors_Arrow 20F0  
                           _GLCD_SetPixel 1CC8                         ??_PWM3_Initialize 0060  
                       _brightnessContext 00CA              __end_of_GLCD_InitializePorts 32C2  
                   ?i2_Draw_runTime_Arrow 0001             __size_ofi2_PWM3_LoadDutyValue 0032  
                        __CFG_SOSCSEL$DIG 000000                          _GLCD_ClearScreen 2F66  
          Brightness_Menu_Function@result 0046                         _brightnessPercent 00B5  
                       i2___awdiv@divisor 0003                      ??_Clear_Arrow_Column 006E  
                 ?_Draw_startColors_Arrow 0001                         i2___awdiv@counter 0005  
                ??_Run_Time_Menu_Function 0019                   ??_Draw_Brightness_Arrow 006E  
                               copy_data0 2C10                                  i2itoa@cp 0017  
                   ?_INTERRUPT_Initialize 0001              __end_ofi2_PWM2_LoadDutyValue 3064  
                       ??_PWM4_Initialize 0060                                _EECON1bits 000F7F  
             __size_of_Main_Menu_Function 0022                  __size_of_TMR4_StartTimer 0004  
                                __Hrparam 0000             i2PWM3_LoadDutyValue@dutyValue 0010  
              __end_of_PWM4_LoadDutyValue 2E0A                                  __Lrparam 0000  
                          ?_GLCD_ReadData 0001                        __CFG_BOREN$SBORDIS 000000  
      __end_ofi2_Clear_startColors_Arrows 1EB0                i2_Clear_startColors_Arrows 1E10  
                _Brightness_Menu_Function 1136        __size_ofi2_Clear_Brightness_Arrows 0054  
                 ??_OSCILLATOR_Initialize 0060                ??i2_GLCD_DisableController 0001  
                       ??_TMR0_StartTimer 0060                          __size_of___awdiv 0086  
              ?i2_Clear_Brightness_Arrows 0001                   _Clear_Brightness_Arrows 2956  
                        __size_of___ftadd 01AC                          __size_of___ftdiv 00E8  
                        __size_of___ftmul 00F6                          __size_of___ftsub 0040  
                        __size_of___fttol 00F8                            ?_GLCD_SetPixel 006E  
                        __size_of___lwdiv 0054                          __size_of___lwmod 0044  
                                ___awtoft 2EBC                                  ___ftpack 1A18  
                       GLCD_Line@CurrentX 008B                         GLCD_Line@CurrentY 008D  
                  _IOCB4_InterruptHandler 00C1                               i2_GLCD_GoTo 2408  
                      _PWM3_LoadDutyValue 2E0A            __end_of_Draw_startColors_Arrow 2062  
             i2GLCD_ReadStatus@controller 0003                  ??_Draw_Start_Colors_Menu 0093  
              __size_ofi2_GLCD_ReadStatus 0024                           ___lwdiv@divisor 0062  
            __size_ofi2_GLCD_WriteCommand 0030                           ___lwdiv@counter 0066  
                                __ptext10 2D92                                  __ptext11 329C  
                                __ptext20 1A18                                  __ptext12 32CA  
                                __ptext21 2DCE                                  __ptext13 31D0  
                                __ptext30 2C8A                                  __ptext22 2E0A  
                                __ptext14 32B8                                  __ptext31 2AB0  
                                __ptext23 2E46                                  __ptext15 0FA6  
                                __ptext40 2722                                  __ptext32 139E  
                                __ptext24 042C                                  __ptext16 065C  
                                __ptext41 1FD4                                  __ptext33 2F9C  
                                __ptext25 127E                                  __ptext17 1496  
                                __ptext50 217C                                  __ptext42 256E  
                                __ptext34 28A6                                  __ptext26 0A8C  
                                __ptext18 1774                                  __ptext51 2204  
                                __ptext43 29AE                                  __ptext35 28FE  
                                __ptext27 1942                                  __ptext19 2EBC  
                                __ptext60 1EB0                                  __ptext52 2EF6  
                                __ptext44 323E                                  __ptext36 0C46  
                                __ptext28 2C46                __size_of_Draw_runTime_Menu 0120  
                                __ptext61 00B8                                  __ptext53 3094  
                                __ptext45 1C20                                  __ptext37 1CC8  
                                __ptext29 1B76                                  __ptext70 158C  
                                __ptext62 20F0                                  __ptext54 30C0  
                                __ptext46 230E                                  __ptext38 24FA  
                                __ptext71 1680                                  __ptext63 31F2  
                                __ptext55 30EA                                  __ptext47 2956  
                                __ptext39 2F66                                  __ptext80 2062  
                                __ptext72 185C                                  __ptext64 1136  
                                __ptext56 32CE                                  __ptext48 27EE  
                                __ptext81 25E0                                  __ptext73 2F2E  
                                __ptext65 2CCE                                  __ptext49 2482  
                                __ptext90 228A                                  __ptext82 2A5A  
                                __ptext74 2FCE                                  __ptext66 1D6C  
                                __ptext58 3114                       ?_PWM3_LoadDutyValue 006F  
                                __ptext91 3064                                  __ptext83 3252  
                                __ptext75 3000                                  __ptext67 2D10  
                                __ptext59 32D6                                  __ptext92 318A  
                                __ptext84 1E10                                  __ptext76 3032  
                                __ptext68 2B58                                  __ptext93 313E  
                                __ptext85 238E                                  __ptext77 2A04  
                                __ptext69 087A                                  __ptext94 3164  
                                __ptext86 2B04                                  __ptext78 2BAA  
                                __ptext95 32D2                                  __ptext87 284C  
                                __ptext79 2788                                  __ptext96 2D52  
                                __ptext88 2652                                  __ptext97 0DFA  
                                __ptext89 2408                                  __ptext98 1AC8  
                                __ptext99 1F44                                _GLCD_Delay 32CE  
                   __end_of_Check_Buttons 1136                     __size_ofi2_Draw_Arrow 0066  
                       ?_Initialize_Menus 0001                         ??_TMR4_Initialize 0060  
                           __size_of_main 0066                     __size_ofi2_Make_Arrow 0014  
                                _redStart 00AF             i2GLCD_WriteCommand@controller 0009  
                           __size_of_itoa 0044                                _ARROW_SIZE 00BB  
                           __size_of_utoa 00AA      __end_of_TMR0_DefaultInterruptHandler 32D8  
   __size_of_TMR0_DefaultInterruptHandler 0002              _TMR0_DefaultInterruptHandler 32D6  
                      ??_Initialize_Menus 0093                          ??_GLCD_Initalize 006B  
                                _screen_x 00C4                                  _screen_y 00C3  
                       ??_Make_Back_Arrow 006A                                  _subMenuY 00BE  
                    ??_PWM3_LoadDutyValue 0071                                  int$flags 005F  
                                _runTimeX 00BD        __end_of_INTERRUPT_InterruptManager 00B4  
              _INTERRUPT_InterruptManager 0008                    ??i2_Draw_runTime_Arrow 000F  
       __end_ofi2_Clear_Brightness_Arrows 2B58                       __CFG_INTOSCSEL$HIGH 000000  
                       ?i2_GLCD_WriteChar 0001                         ?i2_GLCD_WriteData 0001  
          __size_of_GLCD_EnableController 002A             __end_of_GLCD_EnableController 30EA  
                              _INTCONbits 000FF2                        ??i2_GLCD_WriteChar 000B  
                      ??i2_GLCD_WriteData 0009                  i2_Draw_startColors_Arrow 2062  
                            i2_Draw_Arrow 2788                                  itoa@base 0074  
                            i2_Make_Arrow 3252                    ??_INTERRUPT_Initialize 0060  
         __size_of_Run_Time_Menu_Function 008C              Run_Time_Menu_Function@result 0023  
                            _valuesXStart 005E                                  intlevel2 0000  
            __end_of_Clear_runTime_Arrows 238E                          ___lwmod@dividend 0060  
                       GLCD_ReadData@data 0069                   ?_PIN_MANAGER_Initialize 0001  
                        ??_GLCD_WriteChar 006A                          ??_GLCD_WriteData 0068  
                    _GLCD_InitializePorts 32B8                           ??_GLCD_ReadData 0068  
             __size_ofi2_GLCD_WriteString 0056          __end_of_Clear_startColors_Arrows 1CC8  
                   __size_ofi2_Set_Colors 0212             ?_TMR0_DefaultInterruptHandler 0001  
               GLCD_WriteChar@charToWrite 006A               __size_of_PWM2_LoadDutyValue 003C  
                             GLCD_Line@X1 0075                               GLCD_Line@X2 0079  
                             GLCD_Line@Y1 0077                               GLCD_Line@Y2 007B  
                             GLCD_Line@Dx 008F                               GLCD_Line@Dy 0091  
               ??_Clear_Brightness_Arrows 006E                         i2GLCD_WriteChar@i 000C  
                 ?i2_Clear_runTime_Arrows 0001                  ?i2_GLCD_EnableController 0001  
                         ??_GLCD_SetPixel 0070                  ??_GLCD_DisableController 0060  
                      __CFG_WDTPS$1048576 000000              __end_ofi2_Clear_Arrow_Column 28A6  
             PWM3_LoadDutyValue@dutyValue 006F                         ??_TMR4_StartTimer 0060  
                   i2Clear_Arrow_Column@i 0017                     i2Clear_Arrow_Column@j 0016  
                    i2_PWM2_LoadDutyValue 3032                                  utoa@base 006B  
           Draw_Start_Colors_Menu@display 0093                           ___lwmod@divisor 0062  
                         _TMR0_Initialize 2E82                           _PWM2_Initialize 328A  
                         ___lwmod@counter 0064                           _GLCD_ReadStatus 3094  
              ?_Start_Color_Menu_Function 0001           __size_of_Draw_Start_Colors_Menu 01BA  
                             ?_GLCD_Delay 0001                              i2_Set_Colors 087A  
          __end_of_PIN_MANAGER_Initialize 2DCE                       __CFG_BORPWR$ZPBORMV 000000  
                  _IOCB5_InterruptHandler 00BF                           _PIN_MANAGER_IOC 1EB0  
                   ?_GLCD_InitializePorts 0001                            _runTimeContext 00CB  
                __end_of_GLCD_ClearScreen 2F9C                        _GLCD_SetPixel$1888 0074  
                         _PWM3_Initialize 3278                 __size_of_GLCD_WriteString 0058  
          __end_ofi2_Clear_runTime_Arrows 2408         i2GLCD_WriteCommand@commandToWrite 000B  
         GLCD_WriteCommand@commandToWrite 006A                __end_of_Draw_runTime_Arrow 25E0  
