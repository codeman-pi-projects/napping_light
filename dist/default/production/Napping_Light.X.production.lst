

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jul 23 23:20:47 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87  0000                     
    88                           ; Version 1.45
    89                           ; Generated 16/11/2017 GMT
    90                           ; 
    91                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F46K80 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123 ;; Function _IOCB4_DefaultInterruptHandler is unused but had its address taken
   124  0000                     
   125 ;; Function _IOCB5_DefaultInterruptHandler is unused but had its address taken
   126  0000                     
   127                           	psect	idataCOMRAM
   128  001658                     __pidataCOMRAM:
   129                           	opt stack 0
   130                           
   131                           ;initializer for _valuesXStart
   132  001658  50                 	db	80
   133                           
   134                           ;initializer for _timeAfterFinishX
   135  001659  41                 	db	65
   136                           
   137                           ;initializer for _subMenuY
   138  00165A  03                 	db	3
   139                           
   140                           	psect	idataBANK0
   141  00165B                     __pidataBANK0:
   142                           	opt stack 0
   143                           
   144                           ;initializer for _xMenuStart
   145  00165B  04                 	db	4
   146                           
   147                           ;initializer for _ARROW_SIZE
   148  00165C  04                 	db	4
   149                           
   150                           ;initializer for _runTimeX
   151  00165D  0A                 	db	10
   152                           
   153                           	psect	mediumconst
   154  00FDA0                     __pmediumconst:
   155                           	opt stack 0
   156  00FDA0  00                 	db	0
   157  00FDA1                     _font5x8:
   158                           	opt stack 0
   159  00FDA1  00                 	db	0
   160  00FDA2  00                 	db	0
   161  00FDA3  00                 	db	0
   162  00FDA4  00                 	db	0
   163  00FDA5  00                 	db	0
   164  00FDA6  00                 	db	0
   165  00FDA7  00                 	db	0
   166  00FDA8  5F                 	db	95
   167  00FDA9  00                 	db	0
   168  00FDAA  00                 	db	0
   169  00FDAB  00                 	db	0
   170  00FDAC  07                 	db	7
   171  00FDAD  00                 	db	0
   172  00FDAE  07                 	db	7
   173  00FDAF  00                 	db	0
   174  00FDB0  14                 	db	20
   175  00FDB1  7F                 	db	127
   176  00FDB2  14                 	db	20
   177  00FDB3  7F                 	db	127
   178  00FDB4  14                 	db	20
   179  00FDB5  24                 	db	36
   180  00FDB6  2A                 	db	42
   181  00FDB7  7F                 	db	127
   182  00FDB8  2A                 	db	42
   183  00FDB9  12                 	db	18
   184  00FDBA  23                 	db	35
   185  00FDBB  13                 	db	19
   186  00FDBC  08                 	db	8
   187  00FDBD  64                 	db	100
   188  00FDBE  62                 	db	98
   189  00FDBF  36                 	db	54
   190  00FDC0  49                 	db	73
   191  00FDC1  55                 	db	85
   192  00FDC2  22                 	db	34
   193  00FDC3  50                 	db	80
   194  00FDC4  00                 	db	0
   195  00FDC5  05                 	db	5
   196  00FDC6  03                 	db	3
   197  00FDC7  00                 	db	0
   198  00FDC8  00                 	db	0
   199  00FDC9  00                 	db	0
   200  00FDCA  1C                 	db	28
   201  00FDCB  22                 	db	34
   202  00FDCC  41                 	db	65
   203  00FDCD  00                 	db	0
   204  00FDCE  00                 	db	0
   205  00FDCF  41                 	db	65
   206  00FDD0  22                 	db	34
   207  00FDD1  1C                 	db	28
   208  00FDD2  00                 	db	0
   209  00FDD3  08                 	db	8
   210  00FDD4  2A                 	db	42
   211  00FDD5  1C                 	db	28
   212  00FDD6  2A                 	db	42
   213  00FDD7  08                 	db	8
   214  00FDD8  08                 	db	8
   215  00FDD9  08                 	db	8
   216  00FDDA  3E                 	db	62
   217  00FDDB  08                 	db	8
   218  00FDDC  08                 	db	8
   219  00FDDD  00                 	db	0
   220  00FDDE  50                 	db	80
   221  00FDDF  30                 	db	48
   222  00FDE0  00                 	db	0
   223  00FDE1  00                 	db	0
   224  00FDE2  08                 	db	8
   225  00FDE3  08                 	db	8
   226  00FDE4  08                 	db	8
   227  00FDE5  08                 	db	8
   228  00FDE6  08                 	db	8
   229  00FDE7  00                 	db	0
   230  00FDE8  30                 	db	48
   231  00FDE9  30                 	db	48
   232  00FDEA  00                 	db	0
   233  00FDEB  00                 	db	0
   234  00FDEC  20                 	db	32
   235  00FDED  10                 	db	16
   236  00FDEE  08                 	db	8
   237  00FDEF  04                 	db	4
   238  00FDF0  02                 	db	2
   239  00FDF1  3E                 	db	62
   240  00FDF2  51                 	db	81
   241  00FDF3  49                 	db	73
   242  00FDF4  45                 	db	69
   243  00FDF5  3E                 	db	62
   244  00FDF6  00                 	db	0
   245  00FDF7  42                 	db	66
   246  00FDF8  7F                 	db	127
   247  00FDF9  40                 	db	64
   248  00FDFA  00                 	db	0
   249  00FDFB  42                 	db	66
   250  00FDFC  61                 	db	97
   251  00FDFD  51                 	db	81
   252  00FDFE  49                 	db	73
   253  00FDFF  46                 	db	70
   254  00FE00  21                 	db	33
   255  00FE01  41                 	db	65
   256  00FE02  45                 	db	69
   257  00FE03  4B                 	db	75
   258  00FE04  31                 	db	49
   259  00FE05  18                 	db	24
   260  00FE06  14                 	db	20
   261  00FE07  12                 	db	18
   262  00FE08  7F                 	db	127
   263  00FE09  10                 	db	16
   264  00FE0A  27                 	db	39
   265  00FE0B  45                 	db	69
   266  00FE0C  45                 	db	69
   267  00FE0D  45                 	db	69
   268  00FE0E  39                 	db	57
   269  00FE0F  3C                 	db	60
   270  00FE10  4A                 	db	74
   271  00FE11  49                 	db	73
   272  00FE12  49                 	db	73
   273  00FE13  30                 	db	48
   274  00FE14  01                 	db	1
   275  00FE15  71                 	db	113
   276  00FE16  09                 	db	9
   277  00FE17  05                 	db	5
   278  00FE18  03                 	db	3
   279  00FE19  36                 	db	54
   280  00FE1A  49                 	db	73
   281  00FE1B  49                 	db	73
   282  00FE1C  49                 	db	73
   283  00FE1D  36                 	db	54
   284  00FE1E  06                 	db	6
   285  00FE1F  49                 	db	73
   286  00FE20  49                 	db	73
   287  00FE21  29                 	db	41
   288  00FE22  1E                 	db	30
   289  00FE23  00                 	db	0
   290  00FE24  36                 	db	54
   291  00FE25  36                 	db	54
   292  00FE26  00                 	db	0
   293  00FE27  00                 	db	0
   294  00FE28  00                 	db	0
   295  00FE29  56                 	db	86
   296  00FE2A  36                 	db	54
   297  00FE2B  00                 	db	0
   298  00FE2C  00                 	db	0
   299  00FE2D  00                 	db	0
   300  00FE2E  08                 	db	8
   301  00FE2F  14                 	db	20
   302  00FE30  22                 	db	34
   303  00FE31  41                 	db	65
   304  00FE32  14                 	db	20
   305  00FE33  14                 	db	20
   306  00FE34  14                 	db	20
   307  00FE35  14                 	db	20
   308  00FE36  14                 	db	20
   309  00FE37  41                 	db	65
   310  00FE38  22                 	db	34
   311  00FE39  14                 	db	20
   312  00FE3A  08                 	db	8
   313  00FE3B  00                 	db	0
   314  00FE3C  02                 	db	2
   315  00FE3D  01                 	db	1
   316  00FE3E  51                 	db	81
   317  00FE3F  09                 	db	9
   318  00FE40  06                 	db	6
   319  00FE41  32                 	db	50
   320  00FE42  49                 	db	73
   321  00FE43  79                 	db	121
   322  00FE44  41                 	db	65
   323  00FE45  3E                 	db	62
   324  00FE46  7E                 	db	126
   325  00FE47  11                 	db	17
   326  00FE48  11                 	db	17
   327  00FE49  11                 	db	17
   328  00FE4A  7E                 	db	126
   329  00FE4B  7F                 	db	127
   330  00FE4C  49                 	db	73
   331  00FE4D  49                 	db	73
   332  00FE4E  49                 	db	73
   333  00FE4F  36                 	db	54
   334  00FE50  3E                 	db	62
   335  00FE51  41                 	db	65
   336  00FE52  41                 	db	65
   337  00FE53  41                 	db	65
   338  00FE54  22                 	db	34
   339  00FE55  7F                 	db	127
   340  00FE56  41                 	db	65
   341  00FE57  41                 	db	65
   342  00FE58  22                 	db	34
   343  00FE59  1C                 	db	28
   344  00FE5A  7F                 	db	127
   345  00FE5B  49                 	db	73
   346  00FE5C  49                 	db	73
   347  00FE5D  49                 	db	73
   348  00FE5E  41                 	db	65
   349  00FE5F  7F                 	db	127
   350  00FE60  09                 	db	9
   351  00FE61  09                 	db	9
   352  00FE62  01                 	db	1
   353  00FE63  01                 	db	1
   354  00FE64  3E                 	db	62
   355  00FE65  41                 	db	65
   356  00FE66  41                 	db	65
   357  00FE67  51                 	db	81
   358  00FE68  32                 	db	50
   359  00FE69  7F                 	db	127
   360  00FE6A  08                 	db	8
   361  00FE6B  08                 	db	8
   362  00FE6C  08                 	db	8
   363  00FE6D  7F                 	db	127
   364  00FE6E  00                 	db	0
   365  00FE6F  41                 	db	65
   366  00FE70  7F                 	db	127
   367  00FE71  41                 	db	65
   368  00FE72  00                 	db	0
   369  00FE73  20                 	db	32
   370  00FE74  40                 	db	64
   371  00FE75  41                 	db	65
   372  00FE76  3F                 	db	63
   373  00FE77  01                 	db	1
   374  00FE78  7F                 	db	127
   375  00FE79  08                 	db	8
   376  00FE7A  14                 	db	20
   377  00FE7B  22                 	db	34
   378  00FE7C  41                 	db	65
   379  00FE7D  7F                 	db	127
   380  00FE7E  40                 	db	64
   381  00FE7F  40                 	db	64
   382  00FE80  40                 	db	64
   383  00FE81  40                 	db	64
   384  00FE82  7F                 	db	127
   385  00FE83  02                 	db	2
   386  00FE84  04                 	db	4
   387  00FE85  02                 	db	2
   388  00FE86  7F                 	db	127
   389  00FE87  7F                 	db	127
   390  00FE88  04                 	db	4
   391  00FE89  08                 	db	8
   392  00FE8A  10                 	db	16
   393  00FE8B  7F                 	db	127
   394  00FE8C  3E                 	db	62
   395  00FE8D  41                 	db	65
   396  00FE8E  41                 	db	65
   397  00FE8F  41                 	db	65
   398  00FE90  3E                 	db	62
   399  00FE91  7F                 	db	127
   400  00FE92  09                 	db	9
   401  00FE93  09                 	db	9
   402  00FE94  09                 	db	9
   403  00FE95  06                 	db	6
   404  00FE96  3E                 	db	62
   405  00FE97  41                 	db	65
   406  00FE98  51                 	db	81
   407  00FE99  21                 	db	33
   408  00FE9A  5E                 	db	94
   409  00FE9B  7F                 	db	127
   410  00FE9C  09                 	db	9
   411  00FE9D  19                 	db	25
   412  00FE9E  29                 	db	41
   413  00FE9F  46                 	db	70
   414  00FEA0  46                 	db	70
   415  00FEA1  49                 	db	73
   416  00FEA2  49                 	db	73
   417  00FEA3  49                 	db	73
   418  00FEA4  31                 	db	49
   419  00FEA5  01                 	db	1
   420  00FEA6  01                 	db	1
   421  00FEA7  7F                 	db	127
   422  00FEA8  01                 	db	1
   423  00FEA9  01                 	db	1
   424  00FEAA  3F                 	db	63
   425  00FEAB  40                 	db	64
   426  00FEAC  40                 	db	64
   427  00FEAD  40                 	db	64
   428  00FEAE  3F                 	db	63
   429  00FEAF  1F                 	db	31
   430  00FEB0  20                 	db	32
   431  00FEB1  40                 	db	64
   432  00FEB2  20                 	db	32
   433  00FEB3  1F                 	db	31
   434  00FEB4  7F                 	db	127
   435  00FEB5  20                 	db	32
   436  00FEB6  18                 	db	24
   437  00FEB7  20                 	db	32
   438  00FEB8  7F                 	db	127
   439  00FEB9  63                 	db	99
   440  00FEBA  14                 	db	20
   441  00FEBB  08                 	db	8
   442  00FEBC  14                 	db	20
   443  00FEBD  63                 	db	99
   444  00FEBE  03                 	db	3
   445  00FEBF  04                 	db	4
   446  00FEC0  78                 	db	120
   447  00FEC1  04                 	db	4
   448  00FEC2  03                 	db	3
   449  00FEC3  61                 	db	97
   450  00FEC4  51                 	db	81
   451  00FEC5  49                 	db	73
   452  00FEC6  45                 	db	69
   453  00FEC7  43                 	db	67
   454  00FEC8  00                 	db	0
   455  00FEC9  00                 	db	0
   456  00FECA  7F                 	db	127
   457  00FECB  41                 	db	65
   458  00FECC  41                 	db	65
   459  00FECD  02                 	db	2
   460  00FECE  04                 	db	4
   461  00FECF  08                 	db	8
   462  00FED0  10                 	db	16
   463  00FED1  20                 	db	32
   464  00FED2  41                 	db	65
   465  00FED3  41                 	db	65
   466  00FED4  7F                 	db	127
   467  00FED5  00                 	db	0
   468  00FED6  00                 	db	0
   469  00FED7  04                 	db	4
   470  00FED8  02                 	db	2
   471  00FED9  01                 	db	1
   472  00FEDA  02                 	db	2
   473  00FEDB  04                 	db	4
   474  00FEDC  40                 	db	64
   475  00FEDD  40                 	db	64
   476  00FEDE  40                 	db	64
   477  00FEDF  40                 	db	64
   478  00FEE0  40                 	db	64
   479  00FEE1  00                 	db	0
   480  00FEE2  01                 	db	1
   481  00FEE3  02                 	db	2
   482  00FEE4  04                 	db	4
   483  00FEE5  00                 	db	0
   484  00FEE6  20                 	db	32
   485  00FEE7  54                 	db	84
   486  00FEE8  54                 	db	84
   487  00FEE9  54                 	db	84
   488  00FEEA  78                 	db	120
   489  00FEEB  7F                 	db	127
   490  00FEEC  48                 	db	72
   491  00FEED  44                 	db	68
   492  00FEEE  44                 	db	68
   493  00FEEF  38                 	db	56
   494  00FEF0  38                 	db	56
   495  00FEF1  44                 	db	68
   496  00FEF2  44                 	db	68
   497  00FEF3  44                 	db	68
   498  00FEF4  20                 	db	32
   499  00FEF5  38                 	db	56
   500  00FEF6  44                 	db	68
   501  00FEF7  44                 	db	68
   502  00FEF8  48                 	db	72
   503  00FEF9  7F                 	db	127
   504  00FEFA  38                 	db	56
   505  00FEFB  54                 	db	84
   506  00FEFC  54                 	db	84
   507  00FEFD  54                 	db	84
   508  00FEFE  18                 	db	24
   509  00FEFF  08                 	db	8
   510  00FF00  7E                 	db	126
   511  00FF01  09                 	db	9
   512  00FF02  01                 	db	1
   513  00FF03  02                 	db	2
   514  00FF04  08                 	db	8
   515  00FF05  14                 	db	20
   516  00FF06  54                 	db	84
   517  00FF07  54                 	db	84
   518  00FF08  3C                 	db	60
   519  00FF09  7F                 	db	127
   520  00FF0A  08                 	db	8
   521  00FF0B  04                 	db	4
   522  00FF0C  04                 	db	4
   523  00FF0D  78                 	db	120
   524  00FF0E  00                 	db	0
   525  00FF0F  44                 	db	68
   526  00FF10  7D                 	db	125
   527  00FF11  40                 	db	64
   528  00FF12  00                 	db	0
   529  00FF13  20                 	db	32
   530  00FF14  40                 	db	64
   531  00FF15  44                 	db	68
   532  00FF16  3D                 	db	61
   533  00FF17  00                 	db	0
   534  00FF18  00                 	db	0
   535  00FF19  7F                 	db	127
   536  00FF1A  10                 	db	16
   537  00FF1B  28                 	db	40
   538  00FF1C  44                 	db	68
   539  00FF1D  00                 	db	0
   540  00FF1E  41                 	db	65
   541  00FF1F  7F                 	db	127
   542  00FF20  40                 	db	64
   543  00FF21  00                 	db	0
   544  00FF22  7C                 	db	124
   545  00FF23  04                 	db	4
   546  00FF24  18                 	db	24
   547  00FF25  04                 	db	4
   548  00FF26  78                 	db	120
   549  00FF27  7C                 	db	124
   550  00FF28  08                 	db	8
   551  00FF29  04                 	db	4
   552  00FF2A  04                 	db	4
   553  00FF2B  78                 	db	120
   554  00FF2C  38                 	db	56
   555  00FF2D  44                 	db	68
   556  00FF2E  44                 	db	68
   557  00FF2F  44                 	db	68
   558  00FF30  38                 	db	56
   559  00FF31  7C                 	db	124
   560  00FF32  14                 	db	20
   561  00FF33  14                 	db	20
   562  00FF34  14                 	db	20
   563  00FF35  08                 	db	8
   564  00FF36  08                 	db	8
   565  00FF37  14                 	db	20
   566  00FF38  14                 	db	20
   567  00FF39  18                 	db	24
   568  00FF3A  7C                 	db	124
   569  00FF3B  7C                 	db	124
   570  00FF3C  08                 	db	8
   571  00FF3D  04                 	db	4
   572  00FF3E  04                 	db	4
   573  00FF3F  08                 	db	8
   574  00FF40  48                 	db	72
   575  00FF41  54                 	db	84
   576  00FF42  54                 	db	84
   577  00FF43  54                 	db	84
   578  00FF44  20                 	db	32
   579  00FF45  04                 	db	4
   580  00FF46  3F                 	db	63
   581  00FF47  44                 	db	68
   582  00FF48  40                 	db	64
   583  00FF49  20                 	db	32
   584  00FF4A  3C                 	db	60
   585  00FF4B  40                 	db	64
   586  00FF4C  40                 	db	64
   587  00FF4D  20                 	db	32
   588  00FF4E  7C                 	db	124
   589  00FF4F  1C                 	db	28
   590  00FF50  20                 	db	32
   591  00FF51  40                 	db	64
   592  00FF52  20                 	db	32
   593  00FF53  1C                 	db	28
   594  00FF54  3C                 	db	60
   595  00FF55  40                 	db	64
   596  00FF56  30                 	db	48
   597  00FF57  40                 	db	64
   598  00FF58  3C                 	db	60
   599  00FF59  44                 	db	68
   600  00FF5A  28                 	db	40
   601  00FF5B  10                 	db	16
   602  00FF5C  28                 	db	40
   603  00FF5D  44                 	db	68
   604  00FF5E  0C                 	db	12
   605  00FF5F  50                 	db	80
   606  00FF60  50                 	db	80
   607  00FF61  50                 	db	80
   608  00FF62  3C                 	db	60
   609  00FF63  44                 	db	68
   610  00FF64  64                 	db	100
   611  00FF65  54                 	db	84
   612  00FF66  4C                 	db	76
   613  00FF67  44                 	db	68
   614  00FF68  00                 	db	0
   615  00FF69  08                 	db	8
   616  00FF6A  36                 	db	54
   617  00FF6B  41                 	db	65
   618  00FF6C  00                 	db	0
   619  00FF6D  00                 	db	0
   620  00FF6E  00                 	db	0
   621  00FF6F  7F                 	db	127
   622  00FF70  00                 	db	0
   623  00FF71  00                 	db	0
   624  00FF72  00                 	db	0
   625  00FF73  41                 	db	65
   626  00FF74  36                 	db	54
   627  00FF75  08                 	db	8
   628  00FF76  00                 	db	0
   629  00FF77  08                 	db	8
   630  00FF78  08                 	db	8
   631  00FF79  2A                 	db	42
   632  00FF7A  1C                 	db	28
   633  00FF7B  08                 	db	8
   634  00FF7C  08                 	db	8
   635  00FF7D  1C                 	db	28
   636  00FF7E  2A                 	db	42
   637  00FF7F  08                 	db	8
   638  00FF80  08                 	db	8
   639  00FF81                     __end_of_font5x8:
   640                           	opt stack 0
   641  00FF81                     _color:
   642                           	opt stack 0
   643  00FF81  01                 	db	1
   644  00FF82                     __end_of_color:
   645                           	opt stack 0
   646  00FF82                     STR_14:
   647  00FF82  54                 	db	84	;'T'
   648  00FF83  69                 	db	105	;'i'
   649  00FF84  6D                 	db	109	;'m'
   650  00FF85  65                 	db	101	;'e'
   651  00FF86  20                 	db	32
   652  00FF87  41                 	db	65	;'A'
   653  00FF88  66                 	db	102	;'f'
   654  00FF89  74                 	db	116	;'t'
   655  00FF8A  65                 	db	101	;'e'
   656  00FF8B  72                 	db	114	;'r'
   657  00FF8C  3A                 	db	58	;':'
   658  00FF8D  20                 	db	32
   659  00FF8E  00                 	db	0
   660  00FF8F                     STR_12:
   661  00FF8F  52                 	db	82	;'R'
   662  00FF90  75                 	db	117	;'u'
   663  00FF91  6E                 	db	110	;'n'
   664  00FF92  20                 	db	32
   665  00FF93  54                 	db	84	;'T'
   666  00FF94  69                 	db	105	;'i'
   667  00FF95  6D                 	db	109	;'m'
   668  00FF96  65                 	db	101	;'e'
   669  00FF97  3A                 	db	58	;':'
   670  00FF98  20                 	db	32
   671  00FF99  00                 	db	0
   672  00FF9A                     STR_7:
   673  00FF9A  53                 	db	83	;'S'
   674  00FF9B  74                 	db	116	;'t'
   675  00FF9C  61                 	db	97	;'a'
   676  00FF9D  72                 	db	114	;'r'
   677  00FF9E  74                 	db	116	;'t'
   678  00FF9F  43                 	db	67	;'C'
   679  00FFA0  6F                 	db	111	;'o'
   680  00FFA1  6C                 	db	108	;'l'
   681  00FFA2  6F                 	db	111	;'o'
   682  00FFA3  72                 	db	114	;'r'
   683  00FFA4  00                 	db	0
   684  00FFA5                     STR_6:
   685  00FFA5  42                 	db	66	;'B'
   686  00FFA6  72                 	db	114	;'r'
   687  00FFA7  69                 	db	105	;'i'
   688  00FFA8  67                 	db	103	;'g'
   689  00FFA9  68                 	db	104	;'h'
   690  00FFAA  74                 	db	116	;'t'
   691  00FFAB  6E                 	db	110	;'n'
   692  00FFAC  65                 	db	101	;'e'
   693  00FFAD  73                 	db	115	;'s'
   694  00FFAE  73                 	db	115	;'s'
   695  00FFAF  00                 	db	0
   696  00FFB0                     STR_11:
   697  00FFB0  52                 	db	82	;'R'
   698  00FFB1  75                 	db	117	;'u'
   699  00FFB2  6E                 	db	110	;'n'
   700  00FFB3  20                 	db	32
   701  00FFB4  54                 	db	84	;'T'
   702  00FFB5  69                 	db	105	;'i'
   703  00FFB6  6D                 	db	109	;'m'
   704  00FFB7  65                 	db	101	;'e'
   705  00FFB8  73                 	db	115	;'s'
   706  00FFB9  00                 	db	0
   707  00FFBA                     STR_9:
   708  00FFBA  42                 	db	66	;'B'
   709  00FFBB  61                 	db	97	;'a'
   710  00FFBC  63                 	db	99	;'c'
   711  00FFBD  6B                 	db	107	;'k'
   712  00FFBE  6C                 	db	108	;'l'
   713  00FFBF  69                 	db	105	;'i'
   714  00FFC0  67                 	db	103	;'g'
   715  00FFC1  68                 	db	104	;'h'
   716  00FFC2  74                 	db	116	;'t'
   717  00FFC3  00                 	db	0
   718  00FFC4                     STR_2:
   719  00FFC4  4D                 	db	77	;'M'
   720  00FFC5  61                 	db	97	;'a'
   721  00FFC6  69                 	db	105	;'i'
   722  00FFC7  6E                 	db	110	;'n'
   723  00FFC8  20                 	db	32
   724  00FFC9  4D                 	db	77	;'M'
   725  00FFCA  65                 	db	101	;'e'
   726  00FFCB  6E                 	db	110	;'n'
   727  00FFCC  75                 	db	117	;'u'
   728  00FFCD  00                 	db	0
   729  00FFCE                     STR_10:
   730  00FFCE  53                 	db	83	;'S'
   731  00FFCF  65                 	db	101	;'e'
   732  00FFD0  6C                 	db	108	;'l'
   733  00FFD1  53                 	db	83	;'S'
   734  00FFD2  74                 	db	116	;'t'
   735  00FFD3  61                 	db	97	;'a'
   736  00FFD4  74                 	db	116	;'t'
   737  00FFD5  65                 	db	101	;'e'
   738  00FFD6  00                 	db	0
   739  00FFD7                     STR_8:
   740  00FFD7  45                 	db	69	;'E'
   741  00FFD8  6E                 	db	110	;'n'
   742  00FFD9  64                 	db	100	;'d'
   743  00FFDA  43                 	db	67	;'C'
   744  00FFDB  6F                 	db	111	;'o'
   745  00FFDC  6C                 	db	108	;'l'
   746  00FFDD  6F                 	db	111	;'o'
   747  00FFDE  72                 	db	114	;'r'
   748  00FFDF  00                 	db	0
   749  00FFE0                     STR_4:
   750  00FFE0  52                 	db	82	;'R'
   751  00FFE1  75                 	db	117	;'u'
   752  00FFE2  6E                 	db	110	;'n'
   753  00FFE3  54                 	db	84	;'T'
   754  00FFE4  69                 	db	105	;'i'
   755  00FFE5  6D                 	db	109	;'m'
   756  00FFE6  65                 	db	101	;'e'
   757  00FFE7  00                 	db	0
   758  00FFE8                     STR_3:
   759  00FFE8  56                 	db	86	;'V'
   760  00FFE9  61                 	db	97	;'a'
   761  00FFEA  6C                 	db	108	;'l'
   762  00FFEB  75                 	db	117	;'u'
   763  00FFEC  65                 	db	101	;'e'
   764  00FFED  73                 	db	115	;'s'
   765  00FFEE  00                 	db	0
   766  00FFEF                     STR_1:
   767  00FFEF  6D                 	db	109	;'m'
   768  00FFF0  69                 	db	105	;'i'
   769  00FFF1  6E                 	db	110	;'n'
   770  00FFF2  20                 	db	32
   771  00FFF3  20                 	db	32
   772  00FFF4  20                 	db	32
   773  00FFF5  00                 	db	0
   774  00FFF6                     STR_16:
   775  00FFF6  42                 	db	66	;'B'
   776  00FFF7  61                 	db	97	;'a'
   777  00FFF8  63                 	db	99	;'c'
   778  00FFF9  6B                 	db	107	;'k'
   779  00FFFA  00                 	db	0
   780  00FFFB                     STR_5:
   781  00FFFB  6D                 	db	109	;'m'
   782  00FFFC  69                 	db	105	;'i'
   783  00FFFD  6E                 	db	110	;'n'
   784  00FFFE  00                 	db	0
   785  0000                     
   786                           ; #config settings
   787  00FFFF  00                 	db	0	; dummy byte at the end
   788  0000                     
   789                           	psect	nvBANK0
   790  00009F                     __pnvBANK0:
   791                           	opt stack 0
   792  00009F                     _timer0ReloadVal:
   793                           	opt stack 0
   794  00009F                     	ds	2
   795  0000A1                     _TMR0_InterruptHandler:
   796                           	opt stack 0
   797  0000A1                     	ds	2
   798  0000A3                     _IOCB5_InterruptHandler:
   799                           	opt stack 0
   800  0000A3                     	ds	2
   801  0000A5                     _IOCB4_InterruptHandler:
   802                           	opt stack 0
   803  0000A5                     	ds	2
   804  0000                     _IOCBbits	set	3930
   805  0000                     _WPUB	set	3931
   806  0000                     _ANCON1	set	3932
   807  0000                     _ANCON0	set	3933
   808  0000                     _PORTC	set	3970
   809  0000                     _PORTA	set	3968
   810  0000                     _LATEbits	set	3981
   811  0000                     _T0CONbits	set	4053
   812  0000                     _TMR0L	set	4054
   813  0000                     _TMR0H	set	4055
   814  0000                     _T0CON	set	4053
   815  0000                     _EEDATA	set	3955
   816  0000                     _EEADR	set	3956
   817  0000                     _EEADRH	set	3957
   818  0000                     _EECON2	set	3966
   819  0000                     _EECON1bits	set	3967
   820  0000                     _TABLAT	set	4085
   821  0000                     _TBLPTRL	set	4086
   822  0000                     _TBLPTRH	set	4087
   823  0000                     _TBLPTRU	set	4088
   824  0000                     _CCPTMRSbits	set	3993
   825  0000                     _CCPR1H	set	4029
   826  0000                     _CCPR1L	set	4028
   827  0000                     _ECCP1DEL	set	4030
   828  0000                     _PSTR1CON	set	3996
   829  0000                     _ECCP1AS	set	4031
   830  0000                     _CCP1CON	set	4027
   831  0000                     _REFOCON	set	3994
   832  0000                     _OSCTUNE	set	3995
   833  0000                     _OSCCON2	set	4050
   834  0000                     _OSCCON	set	4051
   835  0000                     _RCONbits	set	4048
   836  0000                     _PORTB	set	3969
   837  0000                     _PORTBbits	set	3969
   838  0000                     _INTCONbits	set	4082
   839  0000                     _TRISD	set	3989
   840  0000                     _TRISC	set	3988
   841  0000                     _TRISB	set	3987
   842  0000                     _TRISA	set	3986
   843  0000                     _TRISE	set	3990
   844  0000                     _LATC	set	3979
   845  0000                     _LATB	set	3978
   846  0000                     _LATA	set	3977
   847  0000                     _LATD	set	3980
   848  0000                     _LATE	set	3981
   849  0000                     _T4CONbits	set	3976
   850  0000                     _PIR4bits	set	4023
   851  0000                     _TMR4	set	3975
   852  0000                     _PR4	set	4009
   853  0000                     _T4CON	set	3976
   854                           
   855                           	psect	cinit
   856  000E58                     __pcinit:
   857                           	opt stack 0
   858  000E58                     start_initialization:
   859                           	opt stack 0
   860  000E58                     __initialization:
   861                           	opt stack 0
   862                           
   863                           ; Initialize objects allocated to BANK0 (3 bytes)
   864                           ; load TBLPTR registers with __pidataBANK0
   865  000E58  0E5B               	movlw	low __pidataBANK0
   866  000E5A  6EF6               	movwf	tblptrl,c
   867  000E5C  0E16               	movlw	high __pidataBANK0
   868  000E5E  6EF7               	movwf	tblptrh,c
   869  000E60  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   870  000E62  6EF8               	movwf	tblptru,c
   871  000E64  0009               	tblrd		*+	;fetch initializer
   872  000E66  CFF5 F0AA          	movff	tablat,__pdataBANK0
   873  000E6A  0009               	tblrd		*+	;fetch initializer
   874  000E6C  CFF5 F0AB          	movff	tablat,__pdataBANK0+1
   875  000E70  0009               	tblrd		*+	;fetch initializer
   876  000E72  CFF5 F0AC          	movff	tablat,__pdataBANK0+2
   877                           
   878                           ; Initialize objects allocated to COMRAM (3 bytes)
   879                           ; load TBLPTR registers with __pidataCOMRAM
   880  000E76  0E58               	movlw	low __pidataCOMRAM
   881  000E78  6EF6               	movwf	tblptrl,c
   882  000E7A  0E16               	movlw	high __pidataCOMRAM
   883  000E7C  6EF7               	movwf	tblptrh,c
   884  000E7E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   885  000E80  6EF8               	movwf	tblptru,c
   886  000E82  0009               	tblrd		*+	;fetch initializer
   887  000E84  CFF5 F042          	movff	tablat,__pdataCOMRAM
   888  000E88  0009               	tblrd		*+	;fetch initializer
   889  000E8A  CFF5 F043          	movff	tablat,__pdataCOMRAM+1
   890  000E8E  0009               	tblrd		*+	;fetch initializer
   891  000E90  CFF5 F044          	movff	tablat,__pdataCOMRAM+2
   892                           
   893                           ; Clear objects allocated to BANK0 (3 bytes)
   894  000E94  0100               	movlb	0
   895  000E96  6BA9               	clrf	(__pbssBANK0+2)& (0+255),b
   896  000E98  6BA8               	clrf	(__pbssBANK0+1)& (0+255),b
   897  000E9A  6BA7               	clrf	__pbssBANK0& (0+255),b
   898                           
   899                           ; Clear objects allocated to COMRAM (8 bytes)
   900  000E9C  EE00  F03A         	lfsr	0,__pbssCOMRAM
   901  000EA0  0E08               	movlw	8
   902  000EA2                     clear_0:
   903  000EA2  6AEE               	clrf	postinc0,c
   904  000EA4  06E8               	decf	wreg,f,c
   905  000EA6  E1FD               	bnz	clear_0
   906  000EA8                     end_of_initialization:
   907                           	opt stack 0
   908  000EA8                     __end_of__initialization:
   909                           	opt stack 0
   910  000EA8  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   911  000EAA  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   912  000EAC  0100               	movlb	0
   913  000EAE  EF7B  F009         	goto	_main	;jump to C main() function
   914                           tblptru	equ	0xFF8
   915                           tblptrh	equ	0xFF7
   916                           tblptrl	equ	0xFF6
   917                           tablat	equ	0xFF5
   918                           postinc0	equ	0xFEE
   919                           wreg	equ	0xFE8
   920                           
   921                           	psect	bssCOMRAM
   922  00003A                     __pbssCOMRAM:
   923                           	opt stack 0
   924  00003A                     	ds	1
   925  00003B                     	ds	1
   926  00003C                     PIN_MANAGER_IOC@previousState:
   927                           	opt stack 0
   928  00003C                     	ds	1
   929  00003D                     _runMinutes:
   930                           	opt stack 0
   931  00003D                     	ds	1
   932  00003E                     _adjustValues:
   933                           	opt stack 0
   934  00003E                     	ds	1
   935  00003F                     _runTimeContext:
   936                           	opt stack 0
   937  00003F                     	ds	1
   938  000040                     _currentContext:
   939                           	opt stack 0
   940  000040                     	ds	1
   941  000041                     _mainState:
   942                           	opt stack 0
   943  000041                     	ds	1
   944                           tblptru	equ	0xFF8
   945                           tblptrh	equ	0xFF7
   946                           tblptrl	equ	0xFF6
   947                           tablat	equ	0xFF5
   948                           postinc0	equ	0xFEE
   949                           wreg	equ	0xFE8
   950                           
   951                           	psect	dataCOMRAM
   952  000042                     __pdataCOMRAM:
   953                           	opt stack 0
   954  000042                     _valuesXStart:
   955                           	opt stack 0
   956  000042                     	ds	1
   957  000043                     _timeAfterFinishX:
   958                           	opt stack 0
   959  000043                     	ds	1
   960  000044                     _subMenuY:
   961                           	opt stack 0
   962  000044                     	ds	1
   963                           tblptru	equ	0xFF8
   964                           tblptrh	equ	0xFF7
   965                           tblptrl	equ	0xFF6
   966                           tablat	equ	0xFF5
   967                           postinc0	equ	0xFEE
   968                           wreg	equ	0xFE8
   969                           
   970                           	psect	bssBANK0
   971  0000A7                     __pbssBANK0:
   972                           	opt stack 0
   973  0000A7                     _screen_y:
   974                           	opt stack 0
   975  0000A7                     	ds	1
   976  0000A8                     _screen_x:
   977                           	opt stack 0
   978  0000A8                     	ds	1
   979  0000A9                     _afterMinutes:
   980                           	opt stack 0
   981  0000A9                     	ds	1
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           postinc0	equ	0xFEE
   987                           wreg	equ	0xFE8
   988                           
   989                           	psect	dataBANK0
   990  0000AA                     __pdataBANK0:
   991                           	opt stack 0
   992  0000AA                     _xMenuStart:
   993                           	opt stack 0
   994  0000AA                     	ds	1
   995  0000AB                     _ARROW_SIZE:
   996                           	opt stack 0
   997  0000AB                     	ds	1
   998  0000AC                     _runTimeX:
   999                           	opt stack 0
  1000  0000AC                     	ds	1
  1001                           tblptru	equ	0xFF8
  1002                           tblptrh	equ	0xFF7
  1003                           tblptrl	equ	0xFF6
  1004                           tablat	equ	0xFF5
  1005                           postinc0	equ	0xFEE
  1006                           wreg	equ	0xFE8
  1007                           
  1008                           	psect	cstackBANK0
  1009  000060                     __pcstackBANK0:
  1010                           	opt stack 0
  1011  000060                     ?___awdiv:
  1012                           	opt stack 0
  1013  000060                     ?___lwdiv:
  1014                           	opt stack 0
  1015  000060                     ?___lwmod:
  1016                           	opt stack 0
  1017  000060                     GLCD_EnableController@controller:
  1018                           	opt stack 0
  1019  000060                     GLCD_DisableController@controller:
  1020                           	opt stack 0
  1021  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  1022                           	opt stack 0
  1023  000060                     IOCB5_SetInterruptHandler@InterruptHandler:
  1024                           	opt stack 0
  1025  000060                     TMR0_SetInterruptHandler@InterruptHandler:
  1026                           	opt stack 0
  1027  000060                     ___awdiv@dividend:
  1028                           	opt stack 0
  1029  000060                     ___lwdiv@dividend:
  1030                           	opt stack 0
  1031  000060                     ___lwmod@dividend:
  1032                           	opt stack 0
  1033                           
  1034                           ; 2 bytes @ 0x0
  1035  000060                     	ds	1
  1036  000061                     GLCD_ReadStatus@status:
  1037                           	opt stack 0
  1038                           
  1039                           ; 1 bytes @ 0x1
  1040  000061                     	ds	1
  1041  000062                     ??_TMR0_Initialize:
  1042  000062                     GLCD_ReadStatus@controller:
  1043                           	opt stack 0
  1044  000062                     ___awdiv@divisor:
  1045                           	opt stack 0
  1046  000062                     ___lwdiv@divisor:
  1047                           	opt stack 0
  1048  000062                     ___lwmod@divisor:
  1049                           	opt stack 0
  1050                           
  1051                           ; 2 bytes @ 0x2
  1052  000062                     	ds	2
  1053  000064                     ___awdiv@counter:
  1054                           	opt stack 0
  1055  000064                     ___lwmod@counter:
  1056                           	opt stack 0
  1057  000064                     ___lwdiv@quotient:
  1058                           	opt stack 0
  1059                           
  1060                           ; 2 bytes @ 0x4
  1061  000064                     	ds	1
  1062  000065                     ___awdiv@sign:
  1063                           	opt stack 0
  1064                           
  1065                           ; 1 bytes @ 0x5
  1066  000065                     	ds	1
  1067  000066                     ___lwdiv@counter:
  1068                           	opt stack 0
  1069  000066                     ___awdiv@quotient:
  1070                           	opt stack 0
  1071                           
  1072                           ; 2 bytes @ 0x6
  1073  000066                     	ds	1
  1074  000067                     utoa@buf:
  1075                           	opt stack 0
  1076                           
  1077                           ; 2 bytes @ 0x7
  1078  000067                     	ds	1
  1079  000068                     ??_GLCD_WriteData:
  1080  000068                     ??_GLCD_ReadData:
  1081  000068                     GLCD_WriteCommand@controller:
  1082                           	opt stack 0
  1083                           
  1084                           ; 1 bytes @ 0x8
  1085  000068                     	ds	1
  1086  000069                     ??_GLCD_WriteCommand:
  1087  000069                     GLCD_ReadData@data:
  1088                           	opt stack 0
  1089  000069                     GLCD_WriteData@dataToWrite:
  1090                           	opt stack 0
  1091  000069                     utoa@val:
  1092                           	opt stack 0
  1093                           
  1094                           ; 2 bytes @ 0x9
  1095  000069                     	ds	1
  1096  00006A                     GLCD_WriteChar@charToWrite:
  1097                           	opt stack 0
  1098  00006A                     GLCD_WriteCommand@commandToWrite:
  1099                           	opt stack 0
  1100                           
  1101                           ; 1 bytes @ 0xA
  1102  00006A                     	ds	1
  1103  00006B                     GLCD_Initalize@i:
  1104                           	opt stack 0
  1105  00006B                     GLCD_GoTo@y:
  1106                           	opt stack 0
  1107  00006B                     GLCD_WriteChar@i:
  1108                           	opt stack 0
  1109  00006B                     utoa@base:
  1110                           	opt stack 0
  1111                           
  1112                           ; 2 bytes @ 0xB
  1113  00006B                     	ds	1
  1114  00006C                     GLCD_GoTo@x:
  1115                           	opt stack 0
  1116                           
  1117                           ; 1 bytes @ 0xC
  1118  00006C                     	ds	1
  1119  00006D                     GLCD_GoTo@i:
  1120                           	opt stack 0
  1121  00006D                     GLCD_WriteString@stringToWrite:
  1122                           	opt stack 0
  1123  00006D                     utoa@v:
  1124                           	opt stack 0
  1125                           
  1126                           ; 2 bytes @ 0xD
  1127  00006D                     	ds	1
  1128  00006E                     ??_Clear_Arrow_Column:
  1129  00006E                     GLCD_ClearScreen@i:
  1130                           	opt stack 0
  1131  00006E                     GLCD_SetPixel@y:
  1132                           	opt stack 0
  1133  00006E                     Clear_runTime_Arrows@i:
  1134                           	opt stack 0
  1135                           
  1136                           ; 1 bytes @ 0xE
  1137  00006E                     	ds	1
  1138  00006F                     GLCD_ClearScreen@j:
  1139                           	opt stack 0
  1140  00006F                     GLCD_SetPixel@color:
  1141                           	opt stack 0
  1142  00006F                     utoa@c:
  1143                           	opt stack 0
  1144                           
  1145                           ; 1 bytes @ 0xF
  1146  00006F                     	ds	1
  1147  000070                     ??_GLCD_SetPixel:
  1148  000070                     itoa@buf:
  1149                           	opt stack 0
  1150                           
  1151                           ; 2 bytes @ 0x10
  1152  000070                     	ds	2
  1153  000072                     GLCD_SetPixel@tmp:
  1154                           	opt stack 0
  1155  000072                     itoa@val:
  1156                           	opt stack 0
  1157                           
  1158                           ; 2 bytes @ 0x12
  1159  000072                     	ds	1
  1160  000073                     GLCD_SetPixel@x:
  1161                           	opt stack 0
  1162                           
  1163                           ; 1 bytes @ 0x13
  1164  000073                     	ds	1
  1165  000074                     _GLCD_SetPixel$1733:
  1166                           	opt stack 0
  1167  000074                     itoa@base:
  1168                           	opt stack 0
  1169                           
  1170                           ; 2 bytes @ 0x14
  1171  000074                     	ds	1
  1172  000075                     Clear_Arrow_Column@j:
  1173                           	opt stack 0
  1174  000075                     GLCD_Line@X1:
  1175                           	opt stack 0
  1176                           
  1177                           ; 2 bytes @ 0x15
  1178  000075                     	ds	1
  1179  000076                     Clear_Arrow_Column@i:
  1180                           	opt stack 0
  1181  000076                     itoa@cp:
  1182                           	opt stack 0
  1183                           
  1184                           ; 2 bytes @ 0x16
  1185  000076                     	ds	1
  1186  000077                     GLCD_Line@Y1:
  1187                           	opt stack 0
  1188                           
  1189                           ; 2 bytes @ 0x17
  1190  000077                     	ds	2
  1191  000079                     GLCD_Line@X2:
  1192                           	opt stack 0
  1193                           
  1194                           ; 2 bytes @ 0x19
  1195  000079                     	ds	2
  1196  00007B                     GLCD_Line@Y2:
  1197                           	opt stack 0
  1198                           
  1199                           ; 2 bytes @ 0x1B
  1200  00007B                     	ds	2
  1201  00007D                     ??_GLCD_Line:
  1202                           
  1203                           ; 1 bytes @ 0x1D
  1204  00007D                     	ds	2
  1205  00007F                     GLCD_Line@TwoDxAccumulatedError:
  1206                           	opt stack 0
  1207                           
  1208                           ; 2 bytes @ 0x1F
  1209  00007F                     	ds	2
  1210  000081                     GLCD_Line@TwoDyAccumulatedError:
  1211                           	opt stack 0
  1212                           
  1213                           ; 2 bytes @ 0x21
  1214  000081                     	ds	2
  1215  000083                     GLCD_Line@Xinc:
  1216                           	opt stack 0
  1217                           
  1218                           ; 2 bytes @ 0x23
  1219  000083                     	ds	2
  1220  000085                     GLCD_Line@Yinc:
  1221                           	opt stack 0
  1222                           
  1223                           ; 2 bytes @ 0x25
  1224  000085                     	ds	2
  1225  000087                     GLCD_Line@TwoDx:
  1226                           	opt stack 0
  1227                           
  1228                           ; 2 bytes @ 0x27
  1229  000087                     	ds	2
  1230  000089                     GLCD_Line@TwoDy:
  1231                           	opt stack 0
  1232                           
  1233                           ; 2 bytes @ 0x29
  1234  000089                     	ds	2
  1235  00008B                     GLCD_Line@CurrentX:
  1236                           	opt stack 0
  1237                           
  1238                           ; 2 bytes @ 0x2B
  1239  00008B                     	ds	2
  1240  00008D                     GLCD_Line@CurrentY:
  1241                           	opt stack 0
  1242                           
  1243                           ; 2 bytes @ 0x2D
  1244  00008D                     	ds	2
  1245  00008F                     GLCD_Line@Dx:
  1246                           	opt stack 0
  1247                           
  1248                           ; 2 bytes @ 0x2F
  1249  00008F                     	ds	2
  1250  000091                     GLCD_Line@Dy:
  1251                           	opt stack 0
  1252                           
  1253                           ; 2 bytes @ 0x31
  1254  000091                     	ds	2
  1255  000093                     Initialize_Menus@display:
  1256                           	opt stack 0
  1257  000093                     Draw_runTime_Menu@display:
  1258                           	opt stack 0
  1259                           
  1260                           ; 10 bytes @ 0x33
  1261  000093                     	ds	10
  1262  00009D                     ??_Check_Buttons:
  1263                           
  1264                           ; 1 bytes @ 0x3D
  1265  00009D                     	ds	1
  1266  00009E                     ??_main:
  1267                           
  1268                           ; 1 bytes @ 0x3E
  1269  00009E                     	ds	1
  1270                           tblptru	equ	0xFF8
  1271                           tblptrh	equ	0xFF7
  1272                           tblptrl	equ	0xFF6
  1273                           tablat	equ	0xFF5
  1274                           postinc0	equ	0xFEE
  1275                           wreg	equ	0xFE8
  1276                           
  1277                           	psect	cstackCOMRAM
  1278  000001                     __pcstackCOMRAM:
  1279                           	opt stack 0
  1280  000001                     ?i2___awdiv:
  1281                           	opt stack 0
  1282  000001                     ?i2___lwdiv:
  1283                           	opt stack 0
  1284  000001                     ?i2___lwmod:
  1285                           	opt stack 0
  1286  000001                     i2GLCD_EnableController@controller:
  1287                           	opt stack 0
  1288  000001                     i2GLCD_DisableController@controller:
  1289                           	opt stack 0
  1290  000001                     i2___awdiv@dividend:
  1291                           	opt stack 0
  1292  000001                     i2___lwdiv@dividend:
  1293                           	opt stack 0
  1294  000001                     i2___lwmod@dividend:
  1295                           	opt stack 0
  1296                           
  1297                           ; 2 bytes @ 0x0
  1298  000001                     	ds	1
  1299  000002                     i2GLCD_ReadStatus@status:
  1300                           	opt stack 0
  1301                           
  1302                           ; 1 bytes @ 0x1
  1303  000002                     	ds	1
  1304  000003                     i2GLCD_ReadStatus@controller:
  1305                           	opt stack 0
  1306  000003                     i2___awdiv@divisor:
  1307                           	opt stack 0
  1308  000003                     i2___lwdiv@divisor:
  1309                           	opt stack 0
  1310  000003                     i2___lwmod@divisor:
  1311                           	opt stack 0
  1312                           
  1313                           ; 2 bytes @ 0x2
  1314  000003                     	ds	2
  1315  000005                     i2___awdiv@counter:
  1316                           	opt stack 0
  1317  000005                     i2___lwmod@counter:
  1318                           	opt stack 0
  1319  000005                     i2___lwdiv@quotient:
  1320                           	opt stack 0
  1321                           
  1322                           ; 2 bytes @ 0x4
  1323  000005                     	ds	1
  1324  000006                     i2___awdiv@sign:
  1325                           	opt stack 0
  1326                           
  1327                           ; 1 bytes @ 0x5
  1328  000006                     	ds	1
  1329  000007                     i2___lwdiv@counter:
  1330                           	opt stack 0
  1331  000007                     i2___awdiv@quotient:
  1332                           	opt stack 0
  1333                           
  1334                           ; 2 bytes @ 0x6
  1335  000007                     	ds	1
  1336  000008                     i2utoa@buf:
  1337                           	opt stack 0
  1338                           
  1339                           ; 2 bytes @ 0x7
  1340  000008                     	ds	1
  1341  000009                     ??i2_GLCD_WriteData:
  1342  000009                     i2GLCD_WriteCommand@controller:
  1343                           	opt stack 0
  1344                           
  1345                           ; 1 bytes @ 0x8
  1346  000009                     	ds	1
  1347  00000A                     ??i2_GLCD_WriteCommand:
  1348  00000A                     i2GLCD_WriteData@dataToWrite:
  1349                           	opt stack 0
  1350  00000A                     i2utoa@val:
  1351                           	opt stack 0
  1352                           
  1353                           ; 2 bytes @ 0x9
  1354  00000A                     	ds	1
  1355  00000B                     i2GLCD_WriteChar@charToWrite:
  1356                           	opt stack 0
  1357  00000B                     i2GLCD_WriteCommand@commandToWrite:
  1358                           	opt stack 0
  1359                           
  1360                           ; 1 bytes @ 0xA
  1361  00000B                     	ds	1
  1362  00000C                     i2GLCD_GoTo@y:
  1363                           	opt stack 0
  1364  00000C                     i2GLCD_WriteChar@i:
  1365                           	opt stack 0
  1366  00000C                     i2utoa@base:
  1367                           	opt stack 0
  1368                           
  1369                           ; 2 bytes @ 0xB
  1370  00000C                     	ds	1
  1371  00000D                     i2GLCD_GoTo@x:
  1372                           	opt stack 0
  1373                           
  1374                           ; 1 bytes @ 0xC
  1375  00000D                     	ds	1
  1376  00000E                     i2GLCD_GoTo@i:
  1377                           	opt stack 0
  1378  00000E                     i2GLCD_WriteString@stringToWrite:
  1379                           	opt stack 0
  1380  00000E                     i2utoa@v:
  1381                           	opt stack 0
  1382                           
  1383                           ; 2 bytes @ 0xD
  1384  00000E                     	ds	1
  1385  00000F                     ??i2_Clear_Arrow_Column:
  1386  00000F                     i2Clear_runTime_Arrows@i:
  1387                           	opt stack 0
  1388                           
  1389                           ; 1 bytes @ 0xE
  1390  00000F                     	ds	1
  1391  000010                     i2utoa@c:
  1392                           	opt stack 0
  1393                           
  1394                           ; 1 bytes @ 0xF
  1395  000010                     	ds	1
  1396  000011                     i2itoa@buf:
  1397                           	opt stack 0
  1398                           
  1399                           ; 2 bytes @ 0x10
  1400  000011                     	ds	2
  1401  000013                     i2itoa@val:
  1402                           	opt stack 0
  1403                           
  1404                           ; 2 bytes @ 0x12
  1405  000013                     	ds	2
  1406  000015                     i2itoa@base:
  1407                           	opt stack 0
  1408                           
  1409                           ; 2 bytes @ 0x14
  1410  000015                     	ds	1
  1411  000016                     i2Clear_Arrow_Column@j:
  1412                           	opt stack 0
  1413                           
  1414                           ; 1 bytes @ 0x15
  1415  000016                     	ds	1
  1416  000017                     i2Clear_Arrow_Column@i:
  1417                           	opt stack 0
  1418  000017                     i2itoa@cp:
  1419                           	opt stack 0
  1420                           
  1421                           ; 2 bytes @ 0x16
  1422  000017                     	ds	1
  1423  000018                     Main_Menu_Function@result:
  1424                           	opt stack 0
  1425                           
  1426                           ; 1 bytes @ 0x17
  1427  000018                     	ds	1
  1428  000019                     Run_Time_Menu_Function@display:
  1429                           	opt stack 0
  1430                           
  1431                           ; 10 bytes @ 0x18
  1432  000019                     	ds	10
  1433  000023                     Run_Time_Menu_Function@result:
  1434                           	opt stack 0
  1435                           
  1436                           ; 1 bytes @ 0x22
  1437  000023                     	ds	1
  1438  000024                     PIN_MANAGER_IOC@currentState:
  1439                           	opt stack 0
  1440                           
  1441                           ; 1 bytes @ 0x23
  1442  000024                     	ds	1
  1443  000025                     PIN_MANAGER_IOC@CHB:
  1444                           	opt stack 0
  1445                           
  1446                           ; 1 bytes @ 0x24
  1447  000025                     	ds	1
  1448  000026                     PIN_MANAGER_IOC@CHA:
  1449                           	opt stack 0
  1450                           
  1451                           ; 1 bytes @ 0x25
  1452  000026                     	ds	1
  1453  000027                     PIN_MANAGER_IOC@result:
  1454                           	opt stack 0
  1455                           
  1456                           ; 1 bytes @ 0x26
  1457  000027                     	ds	1
  1458  000028                     ??_INTERRUPT_InterruptManager:
  1459                           
  1460                           ; 1 bytes @ 0x27
  1461  000028                     	ds	18
  1462                           tblptru	equ	0xFF8
  1463                           tblptrh	equ	0xFF7
  1464                           tblptrl	equ	0xFF6
  1465                           tablat	equ	0xFF5
  1466                           postinc0	equ	0xFEE
  1467                           wreg	equ	0xFE8
  1468                           
  1469 ;;
  1470 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1471 ;;
  1472 ;; *************** function _main *****************
  1473 ;; Defined at:
  1474 ;;		line 58 in file "main.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1490 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1491 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1492 ;;Total ram usage:        1 bytes
  1493 ;; Hardware stack levels required when called:   17
  1494 ;; This function calls:
  1495 ;;		_Check_Buttons
  1496 ;;		_Draw_Arrow
  1497 ;;		_GLCD_ClearScreen
  1498 ;;		_GLCD_Initalize
  1499 ;;		_Initialize_Menus
  1500 ;;		_SYSTEM_Initialize
  1501 ;; This function is called by:
  1502 ;;		Startup code after reset
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text0
  1507  0012F6                     __ptext0:
  1508                           	opt stack 0
  1509  0012F6                     _main:
  1510                           	opt stack 14
  1511                           
  1512                           ;main.c: 61: SYSTEM_Initialize();
  1513                           
  1514                           ;incstack = 0
  1515  0012F6  ECDA  F00A         	call	_SYSTEM_Initialize	;wreg free
  1516                           
  1517                           ;main.c: 80: (INTCONbits.GIE = 1);
  1518  0012FA  8EF2               	bsf	intcon,7,c	;volatile
  1519                           
  1520                           ;main.c: 86: (INTCONbits.PEIE = 1);
  1521  0012FC  8CF2               	bsf	intcon,6,c	;volatile
  1522                           
  1523                           ;main.c: 94: do { LATEbits.LATE1 = 1; } while(0);
  1524  0012FE  828D               	bsf	3981,1,c	;volatile
  1525                           
  1526                           ;main.c: 95: _delay((unsigned long)((10)*(8000000/4000.0)));
  1527  001300  0E1A               	movlw	26
  1528  001302  0100               	movlb	0	; () banked
  1529  001304  6F9E               	movwf	??_main& (0+255),b
  1530  001306  0EF8               	movlw	248
  1531  001308                     u2407:
  1532  001308  2EE8               	decfsz	wreg,f,c
  1533  00130A  D7FE               	bra	u2407
  1534  00130C  2F9E               	decfsz	??_main& (0+255),f,b
  1535  00130E  D7FC               	bra	u2407
  1536  001310  F000               	nop	
  1537                           
  1538                           ;main.c: 96: GLCD_Initalize();
  1539  001312  ECAA  F00A         	call	_GLCD_Initalize	;wreg free
  1540                           
  1541                           ;main.c: 97: GLCD_ClearScreen();
  1542  001316  ECD1  F009         	call	_GLCD_ClearScreen	;wreg free
  1543                           
  1544                           ;main.c: 100: Initialize_Menus();
  1545  00131A  EC36  F001         	call	_Initialize_Menus	;wreg free
  1546                           
  1547                           ;main.c: 102: currentContext = mainMenu;
  1548  00131E  0E00               	movlw	0
  1549  001320  6E40               	movwf	_currentContext,c
  1550                           
  1551                           ;main.c: 103: mainState = setRunTime;
  1552  001322  0E02               	movlw	2
  1553  001324  6E41               	movwf	_mainState,c
  1554                           
  1555                           ;main.c: 104: Draw_Arrow();
  1556  001326  ECF5  F008         	call	_Draw_Arrow	;wreg free
  1557  00132A                     
  1558                           ;main.c: 107: {
  1559                           ;main.c: 109: Check_Buttons();
  1560  00132A  EC7E  F002         	call	_Check_Buttons	;wreg free
  1561  00132E  D7FD               	goto	l420
  1562  001330                     __end_of_main:
  1563                           	opt stack 0
  1564                           tblptru	equ	0xFF8
  1565                           tblptrh	equ	0xFF7
  1566                           tblptrl	equ	0xFF6
  1567                           tablat	equ	0xFF5
  1568                           intcon	equ	0xFF2
  1569                           postinc0	equ	0xFEE
  1570                           wreg	equ	0xFE8
  1571                           
  1572 ;; *************** function _SYSTEM_Initialize *****************
  1573 ;; Defined at:
  1574 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:   11
  1595 ;; This function calls:
  1596 ;;		_EPWM1_Initialize
  1597 ;;		_INTERRUPT_Initialize
  1598 ;;		_OSCILLATOR_Initialize
  1599 ;;		_PIN_MANAGER_Initialize
  1600 ;;		_TMR0_Initialize
  1601 ;;		_TMR4_Initialize
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text1
  1608  0015B4                     __ptext1:
  1609                           	opt stack 0
  1610  0015B4                     _SYSTEM_Initialize:
  1611                           	opt stack 19
  1612                           
  1613                           ;mcc.c: 114: INTERRUPT_Initialize();
  1614                           
  1615                           ;incstack = 0
  1616  0015B4  EC26  F00B         	call	_INTERRUPT_Initialize	;wreg free
  1617                           
  1618                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1619  0015B8  EC86  F007         	call	_PIN_MANAGER_Initialize	;wreg free
  1620                           
  1621                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1622  0015BC  EC05  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  1623                           
  1624                           ;mcc.c: 117: EPWM1_Initialize();
  1625  0015C0  ECCC  F00A         	call	_EPWM1_Initialize	;wreg free
  1626                           
  1627                           ;mcc.c: 118: TMR4_Initialize();
  1628  0015C4  ECE7  F00A         	call	_TMR4_Initialize	;wreg free
  1629                           
  1630                           ;mcc.c: 119: TMR0_Initialize();
  1631  0015C8  EC98  F009         	call	_TMR0_Initialize	;wreg free
  1632  0015CC  0012               	return		;funcret
  1633  0015CE                     __end_of_SYSTEM_Initialize:
  1634                           	opt stack 0
  1635                           tblptru	equ	0xFF8
  1636                           tblptrh	equ	0xFF7
  1637                           tblptrl	equ	0xFF6
  1638                           tablat	equ	0xFF5
  1639                           intcon	equ	0xFF2
  1640                           postinc0	equ	0xFEE
  1641                           wreg	equ	0xFE8
  1642                           
  1643 ;; *************** function _TMR4_Initialize *****************
  1644 ;; Defined at:
  1645 ;;		line 61 in file "mcc_generated_files/tmr4.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;		None
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1663 ;;Total ram usage:        0 bytes
  1664 ;; Hardware stack levels used:    1
  1665 ;; Hardware stack levels required when called:   10
  1666 ;; This function calls:
  1667 ;;		_TMR4_StartTimer
  1668 ;; This function is called by:
  1669 ;;		_SYSTEM_Initialize
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           	psect	text2
  1674  0015CE                     __ptext2:
  1675                           	opt stack 0
  1676  0015CE                     _TMR4_Initialize:
  1677                           	opt stack 19
  1678                           
  1679                           ;tmr4.c: 66: T4CON = 0x02;
  1680                           
  1681                           ;incstack = 0
  1682  0015CE  0E02               	movlw	2
  1683  0015D0  6E88               	movwf	3976,c	;volatile
  1684                           
  1685                           ;tmr4.c: 69: PR4 = 0xF9;
  1686  0015D2  0EF9               	movlw	249
  1687  0015D4  6EA9               	movwf	4009,c	;volatile
  1688                           
  1689                           ;tmr4.c: 72: TMR4 = 0x00;
  1690  0015D6  0E00               	movlw	0
  1691  0015D8  6E87               	movwf	3975,c	;volatile
  1692                           
  1693                           ;tmr4.c: 75: PIR4bits.TMR4IF = 0;
  1694  0015DA  9EB7               	bcf	4023,7,c	;volatile
  1695                           
  1696                           ;tmr4.c: 78: TMR4_StartTimer();
  1697  0015DC  EC22  F00B         	call	_TMR4_StartTimer	;wreg free
  1698  0015E0  0012               	return		;funcret
  1699  0015E2                     __end_of_TMR4_Initialize:
  1700                           	opt stack 0
  1701                           tblptru	equ	0xFF8
  1702                           tblptrh	equ	0xFF7
  1703                           tblptrl	equ	0xFF6
  1704                           tablat	equ	0xFF5
  1705                           intcon	equ	0xFF2
  1706                           postinc0	equ	0xFEE
  1707                           wreg	equ	0xFE8
  1708                           
  1709 ;; *************** function _TMR4_StartTimer *****************
  1710 ;; Defined at:
  1711 ;;		line 81 in file "mcc_generated_files/tmr4.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		None
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    9
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_TMR4_Initialize
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text3
  1740  001644                     __ptext3:
  1741                           	opt stack 0
  1742  001644                     _TMR4_StartTimer:
  1743                           	opt stack 19
  1744                           
  1745                           ;tmr4.c: 84: T4CONbits.TMR4ON = 1;
  1746                           
  1747                           ;incstack = 0
  1748  001644  8488               	bsf	3976,2,c	;volatile
  1749  001646  0012               	return		;funcret
  1750  001648                     __end_of_TMR4_StartTimer:
  1751                           	opt stack 0
  1752                           tblptru	equ	0xFF8
  1753                           tblptrh	equ	0xFF7
  1754                           tblptrl	equ	0xFF6
  1755                           tablat	equ	0xFF5
  1756                           intcon	equ	0xFF2
  1757                           postinc0	equ	0xFEE
  1758                           wreg	equ	0xFE8
  1759                           
  1760 ;; *************** function _TMR0_Initialize *****************
  1761 ;; Defined at:
  1762 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1778 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1779 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1780 ;;Total ram usage:        2 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:   10
  1783 ;; This function calls:
  1784 ;;		_TMR0_SetInterruptHandler
  1785 ;;		_TMR0_StartTimer
  1786 ;; This function is called by:
  1787 ;;		_SYSTEM_Initialize
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text4
  1792  001330                     __ptext4:
  1793                           	opt stack 0
  1794  001330                     _TMR0_Initialize:
  1795                           	opt stack 19
  1796                           
  1797                           ;tmr0.c: 71: T0CON = 0x14;
  1798                           
  1799                           ;incstack = 0
  1800  001330  0E14               	movlw	20
  1801  001332  6ED5               	movwf	4053,c	;volatile
  1802                           
  1803                           ;tmr0.c: 74: TMR0H = 0x0B;
  1804  001334  0E0B               	movlw	11
  1805  001336  6ED7               	movwf	4055,c	;volatile
  1806                           
  1807                           ;tmr0.c: 77: TMR0L = 0xDB;
  1808  001338  0EDB               	movlw	219
  1809  00133A  6ED6               	movwf	4054,c	;volatile
  1810                           
  1811                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  1812  00133C  50D6               	movf	4054,w,c	;volatile
  1813  00133E  CFD7 F062          	movff	4055,??_TMR0_Initialize	;volatile
  1814  001342  0100               	movlb	0	; () banked
  1815  001344  6B63               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  1816  001346  C062  F063         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1817  00134A  6B62               	clrf	??_TMR0_Initialize& (0+255),b
  1818  00134C  1162               	iorwf	??_TMR0_Initialize& (0+255),w,b
  1819  00134E  6F9F               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  1820  001350  5163               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  1821  001352  6FA0               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  1825  001354  94F2               	bcf	intcon,2,c	;volatile
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  1829  001356  8AF2               	bsf	intcon,5,c	;volatile
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1833  001358  0E5E               	movlw	low _TMR0_DefaultInterruptHandler
  1834  00135A  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  1835  00135C  0E16               	movlw	high _TMR0_DefaultInterruptHandler
  1836  00135E  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1837  001360  EC0E  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  1838                           
  1839                           ;tmr0.c: 92: TMR0_StartTimer();
  1840  001364  EC24  F00B         	call	_TMR0_StartTimer	;wreg free
  1841  001368  0012               	return		;funcret
  1842  00136A                     __end_of_TMR0_Initialize:
  1843                           	opt stack 0
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           intcon	equ	0xFF2
  1849                           postinc0	equ	0xFEE
  1850                           wreg	equ	0xFE8
  1851                           
  1852 ;; *************** function _TMR0_StartTimer *****************
  1853 ;; Defined at:
  1854 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		None
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1872 ;;Total ram usage:        0 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    9
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_TMR0_Initialize
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text5
  1883  001648                     __ptext5:
  1884                           	opt stack 0
  1885  001648                     _TMR0_StartTimer:
  1886                           	opt stack 19
  1887                           
  1888                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
  1889                           
  1890                           ;incstack = 0
  1891  001648  8ED5               	bsf	4053,7,c	;volatile
  1892  00164A  0012               	return		;funcret
  1893  00164C                     __end_of_TMR0_StartTimer:
  1894                           	opt stack 0
  1895                           tblptru	equ	0xFF8
  1896                           tblptrh	equ	0xFF7
  1897                           tblptrl	equ	0xFF6
  1898                           tablat	equ	0xFF5
  1899                           intcon	equ	0xFF2
  1900                           postinc0	equ	0xFEE
  1901                           wreg	equ	0xFE8
  1902                           
  1903 ;; *************** function _TMR0_SetInterruptHandler *****************
  1904 ;; Defined at:
  1905 ;;		line 154 in file "mcc_generated_files/tmr0.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1908 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1920 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1923 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1924 ;;Total ram usage:        2 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    9
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_TMR0_Initialize
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text6
  1935  00161C                     __ptext6:
  1936                           	opt stack 0
  1937  00161C                     _TMR0_SetInterruptHandler:
  1938                           	opt stack 19
  1939                           
  1940                           ;tmr0.c: 155: TMR0_InterruptHandler = InterruptHandler;
  1941                           
  1942                           ;incstack = 0
  1943  00161C  C060  F0A1         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1944  001620  C061  F0A2         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1945  001624  0012               	return		;funcret
  1946  001626                     __end_of_TMR0_SetInterruptHandler:
  1947                           	opt stack 0
  1948                           tblptru	equ	0xFF8
  1949                           tblptrh	equ	0xFF7
  1950                           tblptrl	equ	0xFF6
  1951                           tablat	equ	0xFF5
  1952                           intcon	equ	0xFF2
  1953                           postinc0	equ	0xFEE
  1954                           wreg	equ	0xFE8
  1955                           
  1956 ;; *************** function _PIN_MANAGER_Initialize *****************
  1957 ;; Defined at:
  1958 ;;		line 61 in file "mcc_generated_files/pin_manager.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:   10
  1979 ;; This function calls:
  1980 ;;		_IOCB4_SetInterruptHandler
  1981 ;;		_IOCB5_SetInterruptHandler
  1982 ;; This function is called by:
  1983 ;;		_SYSTEM_Initialize
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text7
  1988  000F0C                     __ptext7:
  1989                           	opt stack 0
  1990  000F0C                     _PIN_MANAGER_Initialize:
  1991                           	opt stack 19
  1992                           
  1993                           ;pin_manager.c: 66: LATE = 0x00;
  1994                           
  1995                           ;incstack = 0
  1996  000F0C  0E00               	movlw	0
  1997  000F0E  6E8D               	movwf	3981,c	;volatile
  1998                           
  1999                           ;pin_manager.c: 67: LATD = 0x00;
  2000  000F10  0E00               	movlw	0
  2001  000F12  6E8C               	movwf	3980,c	;volatile
  2002                           
  2003                           ;pin_manager.c: 68: LATA = 0x00;
  2004  000F14  0E00               	movlw	0
  2005  000F16  6E89               	movwf	3977,c	;volatile
  2006                           
  2007                           ;pin_manager.c: 69: LATB = 0x00;
  2008  000F18  0E00               	movlw	0
  2009  000F1A  6E8A               	movwf	3978,c	;volatile
  2010                           
  2011                           ;pin_manager.c: 70: LATC = 0x00;
  2012  000F1C  0E00               	movlw	0
  2013  000F1E  6E8B               	movwf	3979,c	;volatile
  2014                           
  2015                           ;pin_manager.c: 75: TRISE = 0x05;
  2016  000F20  0E05               	movlw	5
  2017  000F22  6E96               	movwf	3990,c	;volatile
  2018                           
  2019                           ;pin_manager.c: 76: TRISA = 0x01;
  2020  000F24  0E01               	movlw	1
  2021  000F26  6E92               	movwf	3986,c	;volatile
  2022                           
  2023                           ;pin_manager.c: 77: TRISB = 0xFF;
  2024  000F28  6893               	setf	3987,c	;volatile
  2025                           
  2026                           ;pin_manager.c: 78: TRISC = 0x00;
  2027  000F2A  0E00               	movlw	0
  2028  000F2C  6E94               	movwf	3988,c	;volatile
  2029                           
  2030                           ;pin_manager.c: 79: TRISD = 0x0F;
  2031  000F2E  0E0F               	movlw	15
  2032  000F30  6E95               	movwf	3989,c	;volatile
  2033                           
  2034                           ;pin_manager.c: 84: ANCON0 = 0x00;
  2035  000F32  0E00               	movlw	0
  2036  000F34  010F               	movlb	15	; () banked
  2037  000F36  6F5D               	movwf	93,b	;volatile
  2038                           
  2039                           ;pin_manager.c: 85: ANCON1 = 0x00;
  2040  000F38  0E00               	movlw	0
  2041  000F3A  6F5C               	movwf	92,b	;volatile
  2042                           
  2043                           ;pin_manager.c: 91: WPUB = 0x00;
  2044  000F3C  0E00               	movlw	0
  2045  000F3E  6F5B               	movwf	91,b	;volatile
  2046                           
  2047                           ; BSR set to: 15
  2048                           ;pin_manager.c: 99: IOCBbits.IOCB4 = 1;
  2049  000F40  895A               	bsf	90,4,b	;volatile
  2050                           
  2051                           ; BSR set to: 15
  2052                           ;pin_manager.c: 100: IOCBbits.IOCB5 = 1;
  2053  000F42  8B5A               	bsf	90,5,b	;volatile
  2054                           
  2055                           ; BSR set to: 15
  2056                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  2057  000F44  0E00               	movlw	0
  2058  000F46  0100               	movlb	0	; () banked
  2059  000F48  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  2060  000F4A  0E00               	movlw	0
  2061  000F4C  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2062  000F4E  EC18  F00B         	call	_IOCB4_SetInterruptHandler	;wreg free
  2063                           
  2064                           ;pin_manager.c: 104: IOCB5_SetInterruptHandler(IOCB5_DefaultInterruptHandler);
  2065  000F52  0E00               	movlw	0
  2066  000F54  0100               	movlb	0	; () banked
  2067  000F56  6F60               	movwf	IOCB5_SetInterruptHandler@InterruptHandler& (0+255),b
  2068  000F58  0E00               	movlw	0
  2069  000F5A  6F61               	movwf	(IOCB5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2070  000F5C  EC13  F00B         	call	_IOCB5_SetInterruptHandler	;wreg free
  2071                           
  2072                           ;pin_manager.c: 107: INTCONbits.RBIE = 1;
  2073  000F60  86F2               	bsf	intcon,3,c	;volatile
  2074  000F62  0012               	return		;funcret
  2075  000F64                     __end_of_PIN_MANAGER_Initialize:
  2076                           	opt stack 0
  2077                           tblptru	equ	0xFF8
  2078                           tblptrh	equ	0xFF7
  2079                           tblptrl	equ	0xFF6
  2080                           tablat	equ	0xFF5
  2081                           intcon	equ	0xFF2
  2082                           postinc0	equ	0xFEE
  2083                           wreg	equ	0xFE8
  2084                           
  2085 ;; *************** function _IOCB5_SetInterruptHandler *****************
  2086 ;; Defined at:
  2087 ;;		line 303 in file "mcc_generated_files/pin_manager.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  2090 ;;		 -> IOCB5_DefaultInterruptHandler(1), 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2102 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2105 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2106 ;;Total ram usage:        2 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    9
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_PIN_MANAGER_Initialize
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text8
  2117  001626                     __ptext8:
  2118                           	opt stack 0
  2119  001626                     _IOCB5_SetInterruptHandler:
  2120                           	opt stack 19
  2121                           
  2122                           ;pin_manager.c: 304: IOCB5_InterruptHandler = InterruptHandler;
  2123                           
  2124                           ;incstack = 0
  2125  001626  C060  F0A3         	movff	IOCB5_SetInterruptHandler@InterruptHandler,_IOCB5_InterruptHandler
  2126  00162A  C061  F0A4         	movff	IOCB5_SetInterruptHandler@InterruptHandler+1,_IOCB5_InterruptHandler+1
  2127  00162E  0012               	return		;funcret
  2128  001630                     __end_of_IOCB5_SetInterruptHandler:
  2129                           	opt stack 0
  2130                           tblptru	equ	0xFF8
  2131                           tblptrh	equ	0xFF7
  2132                           tblptrl	equ	0xFF6
  2133                           tablat	equ	0xFF5
  2134                           intcon	equ	0xFF2
  2135                           postinc0	equ	0xFEE
  2136                           wreg	equ	0xFE8
  2137                           
  2138 ;; *************** function _IOCB4_SetInterruptHandler *****************
  2139 ;; Defined at:
  2140 ;;		line 274 in file "mcc_generated_files/pin_manager.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  2143 ;;		 -> IOCB4_DefaultInterruptHandler(1), 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg, status,2, status,0
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2155 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2158 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;Total ram usage:        2 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    9
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_PIN_MANAGER_Initialize
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           	psect	text9
  2170  001630                     __ptext9:
  2171                           	opt stack 0
  2172  001630                     _IOCB4_SetInterruptHandler:
  2173                           	opt stack 19
  2174                           
  2175                           ;pin_manager.c: 275: IOCB4_InterruptHandler = InterruptHandler;
  2176                           
  2177                           ;incstack = 0
  2178  001630  C060  F0A5         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  2179  001634  C061  F0A6         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  2180  001638  0012               	return		;funcret
  2181  00163A                     __end_of_IOCB4_SetInterruptHandler:
  2182                           	opt stack 0
  2183                           tblptru	equ	0xFF8
  2184                           tblptrh	equ	0xFF7
  2185                           tblptrl	equ	0xFF6
  2186                           tablat	equ	0xFF5
  2187                           intcon	equ	0xFF2
  2188                           postinc0	equ	0xFEE
  2189                           wreg	equ	0xFE8
  2190                           
  2191 ;; *************** function _OSCILLATOR_Initialize *****************
  2192 ;; Defined at:
  2193 ;;		line 122 in file "mcc_generated_files/mcc.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2211 ;;Total ram usage:        0 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    9
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_SYSTEM_Initialize
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text10
  2222  00160A                     __ptext10:
  2223                           	opt stack 0
  2224  00160A                     _OSCILLATOR_Initialize:
  2225                           	opt stack 20
  2226                           
  2227                           ;mcc.c: 125: OSCCON = 0x60;
  2228                           
  2229                           ;incstack = 0
  2230  00160A  0E60               	movlw	96
  2231  00160C  6ED3               	movwf	4051,c	;volatile
  2232                           
  2233                           ;mcc.c: 127: OSCCON2 = 0x00;
  2234  00160E  0E00               	movlw	0
  2235  001610  6ED2               	movwf	4050,c	;volatile
  2236                           
  2237                           ;mcc.c: 129: OSCTUNE = 0x00;
  2238  001612  0E00               	movlw	0
  2239  001614  6E9B               	movwf	3995,c	;volatile
  2240                           
  2241                           ;mcc.c: 131: REFOCON = 0x00;
  2242  001616  0E00               	movlw	0
  2243  001618  6E9A               	movwf	3994,c	;volatile
  2244  00161A  0012               	return		;funcret
  2245  00161C                     __end_of_OSCILLATOR_Initialize:
  2246                           	opt stack 0
  2247                           tblptru	equ	0xFF8
  2248                           tblptrh	equ	0xFF7
  2249                           tblptrl	equ	0xFF6
  2250                           tablat	equ	0xFF5
  2251                           intcon	equ	0xFF2
  2252                           postinc0	equ	0xFEE
  2253                           wreg	equ	0xFE8
  2254                           
  2255 ;; *************** function _INTERRUPT_Initialize *****************
  2256 ;; Defined at:
  2257 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		None
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2275 ;;Total ram usage:        0 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    9
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_SYSTEM_Initialize
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text11
  2286  00164C                     __ptext11:
  2287                           	opt stack 0
  2288  00164C                     _INTERRUPT_Initialize:
  2289                           	opt stack 20
  2290                           
  2291                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2292                           
  2293                           ;incstack = 0
  2294  00164C  9ED0               	bcf	4048,7,c	;volatile
  2295  00164E  0012               	return		;funcret
  2296  001650                     __end_of_INTERRUPT_Initialize:
  2297                           	opt stack 0
  2298                           tblptru	equ	0xFF8
  2299                           tblptrh	equ	0xFF7
  2300                           tblptrl	equ	0xFF6
  2301                           tablat	equ	0xFF5
  2302                           intcon	equ	0xFF2
  2303                           postinc0	equ	0xFEE
  2304                           wreg	equ	0xFE8
  2305                           
  2306 ;; *************** function _EPWM1_Initialize *****************
  2307 ;; Defined at:
  2308 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;		None
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;		None
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, status,2
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2326 ;;Total ram usage:        0 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:    9
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_SYSTEM_Initialize
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text12
  2337  001598                     __ptext12:
  2338                           	opt stack 0
  2339  001598                     _EPWM1_Initialize:
  2340                           	opt stack 20
  2341                           
  2342                           ;epwm1.c: 68: CCP1CON = 0x3C;
  2343                           
  2344                           ;incstack = 0
  2345  001598  0E3C               	movlw	60
  2346  00159A  6EBB               	movwf	4027,c	;volatile
  2347                           
  2348                           ;epwm1.c: 71: ECCP1AS = 0x00;
  2349  00159C  0E00               	movlw	0
  2350  00159E  6EBF               	movwf	4031,c	;volatile
  2351                           
  2352                           ;epwm1.c: 74: PSTR1CON = 0x0F;
  2353  0015A0  0E0F               	movlw	15
  2354  0015A2  6E9C               	movwf	3996,c	;volatile
  2355                           
  2356                           ;epwm1.c: 77: ECCP1DEL = 0x80;
  2357  0015A4  0E80               	movlw	128
  2358  0015A6  6EBE               	movwf	4030,c	;volatile
  2359                           
  2360                           ;epwm1.c: 80: CCPR1L = 0x18;
  2361  0015A8  0E18               	movlw	24
  2362  0015AA  6EBC               	movwf	4028,c	;volatile
  2363                           
  2364                           ;epwm1.c: 83: CCPR1H = 0x00;
  2365  0015AC  0E00               	movlw	0
  2366  0015AE  6EBD               	movwf	4029,c	;volatile
  2367                           
  2368                           ;epwm1.c: 87: CCPTMRSbits.C1TSEL = 0x1;
  2369  0015B0  8099               	bsf	3993,0,c	;volatile
  2370  0015B2  0012               	return		;funcret
  2371  0015B4                     __end_of_EPWM1_Initialize:
  2372                           	opt stack 0
  2373                           tblptru	equ	0xFF8
  2374                           tblptrh	equ	0xFF7
  2375                           tblptrl	equ	0xFF6
  2376                           tablat	equ	0xFF5
  2377                           intcon	equ	0xFF2
  2378                           postinc0	equ	0xFEE
  2379                           wreg	equ	0xFE8
  2380                           
  2381 ;; *************** function _GLCD_Initalize *****************
  2382 ;; Defined at:
  2383 ;;		line 15 in file "ks0108lib/KS0108.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;  i               1   11[BANK0 ] unsigned char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2, status,0, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2398 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2400 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2401 ;;Total ram usage:        1 bytes
  2402 ;; Hardware stack levels used:    1
  2403 ;; Hardware stack levels required when called:   12
  2404 ;; This function calls:
  2405 ;;		_GLCD_InitializePorts
  2406 ;;		_GLCD_WriteCommand
  2407 ;; This function is called by:
  2408 ;;		_main
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           	psect	text13
  2413  001554                     __ptext13:
  2414                           	opt stack 0
  2415  001554                     _GLCD_Initalize:
  2416                           	opt stack 18
  2417                           
  2418                           ;KS0108.c: 17: unsigned char i;
  2419                           ;KS0108.c: 18: GLCD_InitializePorts();
  2420                           
  2421                           ;incstack = 0
  2422  001554  EC1D  F00B         	call	_GLCD_InitializePorts	;wreg free
  2423                           
  2424                           ;KS0108.c: 19: for(i = 0; i < 3; i++)
  2425  001558  0E00               	movlw	0
  2426  00155A  0100               	movlb	0	; () banked
  2427  00155C  6F6B               	movwf	GLCD_Initalize@i& (0+255),b
  2428  00155E                     l3684:
  2429                           
  2430                           ; BSR set to: 0
  2431  00155E  0E02               	movlw	2
  2432  001560  656B               	cpfsgt	GLCD_Initalize@i& (0+255),b
  2433  001562  D001               	goto	l500
  2434  001564  0012               	return	
  2435  001566                     l500:
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;KS0108.c: 20: GLCD_WriteCommand((0x3E | 0x01), i);
  2439                           
  2440                           ; BSR set to: 0
  2441  001566  C06B  F068         	movff	GLCD_Initalize@i,GLCD_WriteCommand@controller
  2442  00156A  0E3F               	movlw	63
  2443  00156C  ECB5  F009         	call	_GLCD_WriteCommand
  2444  001570  0100               	movlb	0	; () banked
  2445  001572  2B6B               	incf	GLCD_Initalize@i& (0+255),f,b
  2446  001574  D7F4               	goto	l3684
  2447  001576                     __end_of_GLCD_Initalize:
  2448                           	opt stack 0
  2449                           tblptru	equ	0xFF8
  2450                           tblptrh	equ	0xFF7
  2451                           tblptrl	equ	0xFF6
  2452                           tablat	equ	0xFF5
  2453                           intcon	equ	0xFF2
  2454                           postinc0	equ	0xFEE
  2455                           wreg	equ	0xFE8
  2456                           
  2457 ;; *************** function _GLCD_InitializePorts *****************
  2458 ;; Defined at:
  2459 ;;		line 31 in file "ks0108lib/KS0108-PIC18.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2477 ;;Total ram usage:        0 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    9
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_GLCD_Initalize
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text14
  2488  00163A                     __ptext14:
  2489                           	opt stack 0
  2490  00163A                     _GLCD_InitializePorts:
  2491                           	opt stack 20
  2492                           
  2493                           ;KS0108-PIC18.c: 33: PORTA |= ((1 << 5) | (1 << 6) | (1 << 7));
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;incstack = 0
  2497  00163A  0EE0               	movlw	224
  2498  00163C  1280               	iorwf	3968,f,c	;volatile
  2499                           
  2500                           ;KS0108-PIC18.c: 34: TRISA &= ~((1 << 5) | (1 << 6) | (1 << 7) | (1 << 2) | (1 << 1) | (
      +                          1 << 3));
  2501  00163E  0E11               	movlw	17
  2502  001640  1692               	andwf	3986,f,c	;volatile
  2503  001642  0012               	return		;funcret
  2504  001644                     __end_of_GLCD_InitializePorts:
  2505                           	opt stack 0
  2506                           tblptru	equ	0xFF8
  2507                           tblptrh	equ	0xFF7
  2508                           tblptrl	equ	0xFF6
  2509                           tablat	equ	0xFF5
  2510                           intcon	equ	0xFF2
  2511                           postinc0	equ	0xFEE
  2512                           wreg	equ	0xFE8
  2513                           
  2514 ;; *************** function _Check_Buttons *****************
  2515 ;; Defined at:
  2516 ;;		line 126 in file "main.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2532 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2533 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2534 ;;Total ram usage:        1 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:   16
  2537 ;; This function calls:
  2538 ;;		_Draw_Arrow
  2539 ;;		_Draw_runTime_Menu
  2540 ;;		_Initialize_Menus
  2541 ;; This function is called by:
  2542 ;;		_main
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text15
  2547  0004FC                     __ptext15:
  2548                           	opt stack 0
  2549  0004FC                     _Check_Buttons:
  2550                           	opt stack 14
  2551                           
  2552                           ;main.c: 132: if(!PORTBbits.RB2)
  2553                           
  2554                           ;incstack = 0
  2555  0004FC  B481               	btfsc	3969,2,c	;volatile
  2556  0004FE  0012               	return	
  2557                           
  2558                           ;main.c: 133: {
  2559                           ;main.c: 134: _delay((unsigned long)((10)*(8000000/4000.0)));
  2560  000500  0E1A               	movlw	26
  2561  000502  0100               	movlb	0	; () banked
  2562  000504  6F9D               	movwf	??_Check_Buttons& (0+255),b
  2563  000506  0EF8               	movlw	248
  2564  000508                     u2417:
  2565  000508  2EE8               	decfsz	wreg,f,c
  2566  00050A  D7FE               	bra	u2417
  2567  00050C  2F9D               	decfsz	??_Check_Buttons& (0+255),f,b
  2568  00050E  D7FC               	bra	u2417
  2569  000510  F000               	nop	
  2570                           
  2571                           ;main.c: 136: while(!PORTBbits.RB2)
  2572  000512  D047               	goto	l443
  2573  000514                     
  2574                           ;main.c: 138: if(currentContext == mainMenu)
  2575  000514  5040               	movf	_currentContext,w,c
  2576  000516  B4D8               	btfsc	status,2,c
  2577  000518  D018               	goto	l430
  2578  00051A  D02B               	goto	l429
  2579  00051C                     
  2580                           ;main.c: 143: currentContext = runTime;
  2581  00051C  0E01               	movlw	1
  2582  00051E  6E40               	movwf	_currentContext,c
  2583                           
  2584                           ;main.c: 144: runTimeContext = runTimeSelection;
  2585  000520  0E00               	movlw	0
  2586  000522  6E3F               	movwf	_runTimeContext,c
  2587                           
  2588                           ;main.c: 145: Draw_runTime_Menu();
  2589  000524  ECEE  F001         	call	_Draw_runTime_Menu	;wreg free
  2590                           
  2591                           ;main.c: 146: break;
  2592  000528  D03C               	goto	l443
  2593  00052A                     
  2594                           ;main.c: 148: currentContext = brightnessMenu;
  2595  00052A  0E02               	movlw	2
  2596  00052C  D007               	goto	L4
  2597  00052E                     
  2598                           ;main.c: 151: currentContext = startColorRed;
  2599  00052E  0E03               	movlw	3
  2600  000530  D005               	goto	L4
  2601  000532                     
  2602                           ;main.c: 154: currentContext = endColorRed;
  2603  000532  0E06               	movlw	6
  2604  000534  D003               	goto	L4
  2605  000536                     
  2606                           ;main.c: 157: currentContext = backlightMenu;
  2607  000536  0E09               	movlw	9
  2608  000538  D001               	goto	L4
  2609  00053A                     
  2610                           ;main.c: 160: currentContext = selectStateMenu;
  2611  00053A  0E0A               	movlw	10
  2612  00053C                     L4:
  2613  00053C  6E40               	movwf	_currentContext,c
  2614                           
  2615                           ;main.c: 161: break;
  2616  00053E  D031               	goto	l443
  2617  000540                     
  2618                           ;main.c: 163: currentContext = mainMenu;
  2619  000540  0E00               	movlw	0
  2620  000542  6E40               	movwf	_currentContext,c
  2621                           
  2622                           ;main.c: 164: Initialize_Menus();
  2623  000544  EC36  F001         	call	_Initialize_Menus	;wreg free
  2624                           
  2625                           ;main.c: 166: }
  2626                           
  2627                           ;main.c: 165: break;
  2628  000548  D02C               	goto	l443
  2629  00054A                     l430:
  2630  00054A  5041               	movf	_mainState,w,c
  2631                           
  2632                           ; Switch size 1, requested type "space"
  2633                           ; Number of cases is 6, Range of values is 2 to 7
  2634                           ; switch strategies available:
  2635                           ; Name         Instructions Cycles
  2636                           ; simple_byte           19    10 (average)
  2637                           ;	Chosen strategy is simple_byte
  2638  00054C  0A02               	xorlw	2	; case 2
  2639  00054E  B4D8               	btfsc	status,2,c
  2640  000550  D7E5               	goto	l431
  2641  000552  0A01               	xorlw	1	; case 3
  2642  000554  B4D8               	btfsc	status,2,c
  2643  000556  D7E9               	goto	l433
  2644  000558  0A07               	xorlw	7	; case 4
  2645  00055A  B4D8               	btfsc	status,2,c
  2646  00055C  D7E8               	goto	l434
  2647  00055E  0A01               	xorlw	1	; case 5
  2648  000560  B4D8               	btfsc	status,2,c
  2649  000562  D7E7               	goto	l435
  2650  000564  0A03               	xorlw	3	; case 6
  2651  000566  B4D8               	btfsc	status,2,c
  2652  000568  D7E6               	goto	l436
  2653  00056A  0A01               	xorlw	1	; case 7
  2654  00056C  B4D8               	btfsc	status,2,c
  2655  00056E  D7E5               	goto	l437
  2656  000570  D7E7               	goto	l438
  2657  000572                     l429:
  2658                           
  2659                           ;main.c: 169: else if(currentContext == runTime)
  2660  000572  0440               	decf	_currentContext,w,c
  2661  000574  A4D8               	btfss	status,2,c
  2662  000576  D011               	goto	l440
  2663                           
  2664                           ;main.c: 170: {
  2665                           ;main.c: 171: if(runTimeContext == runTimeBack)
  2666  000578  0E02               	movlw	2
  2667  00057A  183F               	xorwf	_runTimeContext,w,c
  2668  00057C  A4D8               	btfss	status,2,c
  2669  00057E  D005               	goto	l441
  2670                           
  2671                           ;main.c: 172: {
  2672                           ;main.c: 174: currentContext = mainMenu;
  2673  000580  0E00               	movlw	0
  2674  000582  6E40               	movwf	_currentContext,c
  2675                           
  2676                           ;main.c: 175: Initialize_Menus();
  2677  000584  EC36  F001         	call	_Initialize_Menus	;wreg free
  2678                           
  2679                           ;main.c: 176: }
  2680  000588  D00C               	goto	l443
  2681  00058A                     l441:
  2682                           
  2683                           ;main.c: 177: else
  2684                           ;main.c: 178: {
  2685                           ;main.c: 179: adjustValues = !adjustValues;
  2686  00058A  503E               	movf	_adjustValues,w,c
  2687  00058C  A4D8               	btfss	status,2,c
  2688  00058E  D002               	goto	u2230
  2689  000590  0E01               	movlw	1
  2690  000592  D001               	goto	u2240
  2691  000594                     u2230:
  2692  000594  0E00               	movlw	0
  2693  000596                     u2240:
  2694  000596  6E3E               	movwf	_adjustValues,c
  2695                           
  2696                           ;main.c: 182: }
  2697                           ;main.c: 183: }
  2698  000598  D004               	goto	l443
  2699  00059A                     l440:
  2700                           
  2701                           ;main.c: 185: else
  2702                           ;main.c: 186: {
  2703                           ;main.c: 187: currentContext = mainMenu;
  2704  00059A  0E00               	movlw	0
  2705  00059C  6E40               	movwf	_currentContext,c
  2706                           
  2707                           ;main.c: 188: Initialize_Menus();
  2708  00059E  EC36  F001         	call	_Initialize_Menus	;wreg free
  2709  0005A2                     l443:
  2710  0005A2  A481               	btfss	3969,2,c	;volatile
  2711  0005A4  D7B7               	goto	l428
  2712                           
  2713                           ;main.c: 189: }
  2714                           ;main.c: 191: Draw_Arrow();
  2715  0005A6  ECF5  F008         	call	_Draw_Arrow	;wreg free
  2716  0005AA  0012               	return	
  2717  0005AC                     __end_of_Check_Buttons:
  2718                           	opt stack 0
  2719                           tblptru	equ	0xFF8
  2720                           tblptrh	equ	0xFF7
  2721                           tblptrl	equ	0xFF6
  2722                           tablat	equ	0xFF5
  2723                           intcon	equ	0xFF2
  2724                           postinc0	equ	0xFEE
  2725                           wreg	equ	0xFE8
  2726                           status	equ	0xFD8
  2727                           
  2728 ;; *************** function _Initialize_Menus *****************
  2729 ;; Defined at:
  2730 ;;		line 12 in file "screen_controls.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  display        10   51[BANK0 ] unsigned char [10]
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2745 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2747 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2748 ;;Total ram usage:       10 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:   15
  2751 ;; This function calls:
  2752 ;;		_GLCD_ClearScreen
  2753 ;;		_GLCD_GoTo
  2754 ;;		_GLCD_Line
  2755 ;;		_GLCD_WriteString
  2756 ;;		_itoa
  2757 ;; This function is called by:
  2758 ;;		_main
  2759 ;;		_Check_Buttons
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text16
  2764  00026C                     __ptext16:
  2765                           	opt stack 0
  2766  00026C                     _Initialize_Menus:
  2767                           	opt stack 15
  2768                           
  2769                           ;screen_controls.c: 14: char display[10];
  2770                           ;screen_controls.c: 16: GLCD_ClearScreen();
  2771                           
  2772                           ;incstack = 0
  2773  00026C  ECD1  F009         	call	_GLCD_ClearScreen	;wreg free
  2774                           
  2775                           ;screen_controls.c: 18: GLCD_GoTo(xMenuStart,0);
  2776  000270  0E00               	movlw	0
  2777  000272  0100               	movlb	0	; () banked
  2778  000274  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2779  000276  51AA               	movf	_xMenuStart& (0+255),w,b
  2780  000278  EC1B  F004         	call	_GLCD_GoTo
  2781                           
  2782                           ;screen_controls.c: 19: GLCD_WriteString("Main Menu");
  2783  00027C  0EC4               	movlw	low STR_2
  2784  00027E  0100               	movlb	0	; () banked
  2785  000280  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2786  000282  0EFF               	movlw	high STR_2
  2787  000284  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2788  000286  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  2789                           
  2790                           ;screen_controls.c: 20: GLCD_GoTo((valuesXStart - 4), 0);
  2791  00028A  0E00               	movlw	0
  2792  00028C  0100               	movlb	0	; () banked
  2793  00028E  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2794  000290  5042               	movf	_valuesXStart,w,c
  2795  000292  0FFC               	addlw	252
  2796  000294  EC1B  F004         	call	_GLCD_GoTo
  2797                           
  2798                           ;screen_controls.c: 21: GLCD_WriteString("Values");
  2799  000298  0EE8               	movlw	low STR_3
  2800  00029A  0100               	movlb	0	; () banked
  2801  00029C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2802  00029E  0EFF               	movlw	high STR_3
  2803  0002A0  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2804  0002A2  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  2805                           
  2806                           ;screen_controls.c: 22: GLCD_Line(0,12,127,12);
  2807  0002A6  0E00               	movlw	0
  2808  0002A8  0100               	movlb	0	; () banked
  2809  0002AA  6F76               	movwf	(GLCD_Line@X1+1)& (0+255),b
  2810  0002AC  0E00               	movlw	0
  2811  0002AE  6F75               	movwf	GLCD_Line@X1& (0+255),b
  2812  0002B0  0E00               	movlw	0
  2813  0002B2  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  2814  0002B4  0E0C               	movlw	12
  2815  0002B6  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  2816  0002B8  0E00               	movlw	0
  2817  0002BA  6F7A               	movwf	(GLCD_Line@X2+1)& (0+255),b
  2818  0002BC  0E7F               	movlw	127
  2819  0002BE  6F79               	movwf	GLCD_Line@X2& (0+255),b
  2820  0002C0  0E00               	movlw	0
  2821  0002C2  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  2822  0002C4  0E0C               	movlw	12
  2823  0002C6  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  2824  0002C8  EC5C  F000         	call	_GLCD_Line	;wreg free
  2825                           
  2826                           ;screen_controls.c: 23: GLCD_Line((valuesXStart - 8),0,(valuesXStart - 8),63);
  2827  0002CC  0EF8               	movlw	248
  2828  0002CE  2442               	addwf	_valuesXStart,w,c
  2829  0002D0  0100               	movlb	0	; () banked
  2830  0002D2  6F75               	movwf	GLCD_Line@X1& (0+255),b
  2831  0002D4  6B76               	clrf	(GLCD_Line@X1+1)& (0+255),b
  2832  0002D6  0EFF               	movlw	255
  2833  0002D8  2376               	addwfc	(GLCD_Line@X1+1)& (0+255),f,b
  2834  0002DA  0E00               	movlw	0
  2835  0002DC  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  2836  0002DE  0E00               	movlw	0
  2837  0002E0  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  2838  0002E2  0EF8               	movlw	248
  2839  0002E4  2442               	addwf	_valuesXStart,w,c
  2840  0002E6  6F79               	movwf	GLCD_Line@X2& (0+255),b
  2841  0002E8  6B7A               	clrf	(GLCD_Line@X2+1)& (0+255),b
  2842  0002EA  0EFF               	movlw	255
  2843  0002EC  237A               	addwfc	(GLCD_Line@X2+1)& (0+255),f,b
  2844  0002EE  0E00               	movlw	0
  2845  0002F0  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  2846  0002F2  0E3F               	movlw	63
  2847  0002F4  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  2848  0002F6  EC5C  F000         	call	_GLCD_Line	;wreg free
  2849                           
  2850                           ;screen_controls.c: 26: GLCD_GoTo(xMenuStart, setRunTime);
  2851  0002FA  0E02               	movlw	2
  2852  0002FC  0100               	movlb	0	; () banked
  2853  0002FE  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2854  000300  51AA               	movf	_xMenuStart& (0+255),w,b
  2855  000302  EC1B  F004         	call	_GLCD_GoTo
  2856                           
  2857                           ;screen_controls.c: 27: GLCD_WriteString("RunTime");
  2858  000306  0EE0               	movlw	low STR_4
  2859  000308  0100               	movlb	0	; () banked
  2860  00030A  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2861  00030C  0EFF               	movlw	high STR_4
  2862  00030E  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2863  000310  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  2864                           
  2865                           ;screen_controls.c: 28: GLCD_GoTo(valuesXStart, setRunTime);
  2866  000314  0E02               	movlw	2
  2867  000316  0100               	movlb	0	; () banked
  2868  000318  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2869  00031A  5042               	movf	_valuesXStart,w,c
  2870  00031C  EC1B  F004         	call	_GLCD_GoTo
  2871                           
  2872                           ;screen_controls.c: 29: itoa(display, runMinutes, 10);
  2873  000320  0E93               	movlw	low Initialize_Menus@display
  2874  000322  0100               	movlb	0	; () banked
  2875  000324  6F70               	movwf	itoa@buf& (0+255),b
  2876  000326  0E00               	movlw	high Initialize_Menus@display
  2877  000328  6F71               	movwf	(itoa@buf+1)& (0+255),b
  2878  00032A  C03D  F072         	movff	_runMinutes,itoa@val
  2879  00032E  6B73               	clrf	(itoa@val+1)& (0+255),b
  2880  000330  0E00               	movlw	0
  2881  000332  6F75               	movwf	(itoa@base+1)& (0+255),b
  2882  000334  0E0A               	movlw	10
  2883  000336  6F74               	movwf	itoa@base& (0+255),b
  2884  000338  ECB1  F008         	call	_itoa	;wreg free
  2885                           
  2886                           ;screen_controls.c: 30: GLCD_WriteString(display);
  2887  00033C  0E93               	movlw	low Initialize_Menus@display
  2888  00033E  0100               	movlb	0	; () banked
  2889  000340  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2890  000342  0E00               	movlw	high Initialize_Menus@display
  2891  000344  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2892  000346  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  2893                           
  2894                           ;screen_controls.c: 31: GLCD_WriteString("min");
  2895  00034A  0EFB               	movlw	low STR_5
  2896  00034C  0100               	movlb	0	; () banked
  2897  00034E  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2898  000350  0EFF               	movlw	high STR_5
  2899  000352  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2900  000354  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  2901                           
  2902                           ;screen_controls.c: 33: GLCD_GoTo(xMenuStart, setBrightness);
  2903  000358  0E03               	movlw	3
  2904  00035A  0100               	movlb	0	; () banked
  2905  00035C  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2906  00035E  51AA               	movf	_xMenuStart& (0+255),w,b
  2907  000360  EC1B  F004         	call	_GLCD_GoTo
  2908                           
  2909                           ;screen_controls.c: 34: GLCD_WriteString("Brightness");
  2910  000364  0EA5               	movlw	low STR_6
  2911  000366  0100               	movlb	0	; () banked
  2912  000368  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2913  00036A  0EFF               	movlw	high STR_6
  2914  00036C  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2915  00036E  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  2916                           
  2917                           ;screen_controls.c: 36: GLCD_GoTo(xMenuStart, setStartColors);
  2918  000372  0E04               	movlw	4
  2919  000374  0100               	movlb	0	; () banked
  2920  000376  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2921  000378  51AA               	movf	_xMenuStart& (0+255),w,b
  2922  00037A  EC1B  F004         	call	_GLCD_GoTo
  2923                           
  2924                           ;screen_controls.c: 37: GLCD_WriteString("StartColor");
  2925  00037E  0E9A               	movlw	low STR_7
  2926  000380  0100               	movlb	0	; () banked
  2927  000382  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2928  000384  0EFF               	movlw	high STR_7
  2929  000386  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2930  000388  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  2931                           
  2932                           ;screen_controls.c: 39: GLCD_GoTo(xMenuStart, setFinishedColors);
  2933  00038C  0E05               	movlw	5
  2934  00038E  0100               	movlb	0	; () banked
  2935  000390  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2936  000392  51AA               	movf	_xMenuStart& (0+255),w,b
  2937  000394  EC1B  F004         	call	_GLCD_GoTo
  2938                           
  2939                           ;screen_controls.c: 40: GLCD_WriteString("EndColor");
  2940  000398  0ED7               	movlw	low STR_8
  2941  00039A  0100               	movlb	0	; () banked
  2942  00039C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2943  00039E  0EFF               	movlw	high STR_8
  2944  0003A0  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2945  0003A2  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  2946                           
  2947                           ;screen_controls.c: 42: GLCD_GoTo(xMenuStart, setBacklightBrightness);
  2948  0003A6  0E06               	movlw	6
  2949  0003A8  0100               	movlb	0	; () banked
  2950  0003AA  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2951  0003AC  51AA               	movf	_xMenuStart& (0+255),w,b
  2952  0003AE  EC1B  F004         	call	_GLCD_GoTo
  2953                           
  2954                           ;screen_controls.c: 43: GLCD_WriteString("Backlight");
  2955  0003B2  0EBA               	movlw	low STR_9
  2956  0003B4  0100               	movlb	0	; () banked
  2957  0003B6  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2958  0003B8  0EFF               	movlw	high STR_9
  2959  0003BA  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2960  0003BC  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  2961                           
  2962                           ;screen_controls.c: 45: GLCD_GoTo(xMenuStart, selectState);
  2963  0003C0  0E07               	movlw	7
  2964  0003C2  0100               	movlb	0	; () banked
  2965  0003C4  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2966  0003C6  51AA               	movf	_xMenuStart& (0+255),w,b
  2967  0003C8  EC1B  F004         	call	_GLCD_GoTo
  2968                           
  2969                           ;screen_controls.c: 46: GLCD_WriteString("SelState");
  2970  0003CC  0ECE               	movlw	low STR_10
  2971  0003CE  0100               	movlb	0	; () banked
  2972  0003D0  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2973  0003D2  0EFF               	movlw	high STR_10
  2974  0003D4  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2975  0003D6  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  2976  0003DA  0012               	return		;funcret
  2977  0003DC                     __end_of_Initialize_Menus:
  2978                           	opt stack 0
  2979                           tblptru	equ	0xFF8
  2980                           tblptrh	equ	0xFF7
  2981                           tblptrl	equ	0xFF6
  2982                           tablat	equ	0xFF5
  2983                           intcon	equ	0xFF2
  2984                           postinc0	equ	0xFEE
  2985                           wreg	equ	0xFE8
  2986                           status	equ	0xFD8
  2987                           
  2988 ;; *************** function _Draw_runTime_Menu *****************
  2989 ;; Defined at:
  2990 ;;		line 114 in file "screen_controls.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  display        10   51[BANK0 ] unsigned char [10]
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3005 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3007 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3008 ;;Total ram usage:       10 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:   15
  3011 ;; This function calls:
  3012 ;;		_GLCD_ClearScreen
  3013 ;;		_GLCD_GoTo
  3014 ;;		_GLCD_Line
  3015 ;;		_GLCD_WriteString
  3016 ;;		_Make_Back_Arrow
  3017 ;;		_itoa
  3018 ;; This function is called by:
  3019 ;;		_Check_Buttons
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text17
  3024  0003DC                     __ptext17:
  3025                           	opt stack 0
  3026  0003DC                     _Draw_runTime_Menu:
  3027                           	opt stack 14
  3028                           
  3029                           ;screen_controls.c: 116: char display[10];
  3030                           ;screen_controls.c: 118: GLCD_ClearScreen();
  3031                           
  3032                           ;incstack = 0
  3033  0003DC  ECD1  F009         	call	_GLCD_ClearScreen	;wreg free
  3034                           
  3035                           ;screen_controls.c: 120: GLCD_GoTo(0,0);
  3036  0003E0  0E00               	movlw	0
  3037  0003E2  0100               	movlb	0	; () banked
  3038  0003E4  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  3039  0003E6  0E00               	movlw	0
  3040  0003E8  EC1B  F004         	call	_GLCD_GoTo
  3041                           
  3042                           ;screen_controls.c: 121: GLCD_WriteString("Run Times");
  3043  0003EC  0EB0               	movlw	low STR_11
  3044  0003EE  0100               	movlb	0	; () banked
  3045  0003F0  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3046  0003F2  0EFF               	movlw	high STR_11
  3047  0003F4  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3048  0003F6  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  3049                           
  3050                           ;screen_controls.c: 122: GLCD_Line(0,9,127,9);
  3051  0003FA  0E00               	movlw	0
  3052  0003FC  0100               	movlb	0	; () banked
  3053  0003FE  6F76               	movwf	(GLCD_Line@X1+1)& (0+255),b
  3054  000400  0E00               	movlw	0
  3055  000402  6F75               	movwf	GLCD_Line@X1& (0+255),b
  3056  000404  0E00               	movlw	0
  3057  000406  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  3058  000408  0E09               	movlw	9
  3059  00040A  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  3060  00040C  0E00               	movlw	0
  3061  00040E  6F7A               	movwf	(GLCD_Line@X2+1)& (0+255),b
  3062  000410  0E7F               	movlw	127
  3063  000412  6F79               	movwf	GLCD_Line@X2& (0+255),b
  3064  000414  0E00               	movlw	0
  3065  000416  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  3066  000418  0E09               	movlw	9
  3067  00041A  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  3068  00041C  EC5C  F000         	call	_GLCD_Line	;wreg free
  3069                           
  3070                           ;screen_controls.c: 124: GLCD_GoTo(runTimeX, 2);
  3071  000420  0E02               	movlw	2
  3072  000422  0100               	movlb	0	; () banked
  3073  000424  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  3074  000426  51AC               	movf	_runTimeX& (0+255),w,b
  3075  000428  EC1B  F004         	call	_GLCD_GoTo
  3076                           
  3077                           ;screen_controls.c: 125: GLCD_WriteString("Run Time: ");
  3078  00042C  0E8F               	movlw	low STR_12
  3079  00042E  0100               	movlb	0	; () banked
  3080  000430  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3081  000432  0EFF               	movlw	high STR_12
  3082  000434  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3083  000436  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  3084                           
  3085                           ;screen_controls.c: 126: GLCD_GoTo(valuesXStart, 2);
  3086  00043A  0E02               	movlw	2
  3087  00043C  0100               	movlb	0	; () banked
  3088  00043E  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  3089  000440  5042               	movf	_valuesXStart,w,c
  3090  000442  EC1B  F004         	call	_GLCD_GoTo
  3091                           
  3092                           ;screen_controls.c: 127: itoa(display, runMinutes, 10);
  3093  000446  0E93               	movlw	low Draw_runTime_Menu@display
  3094  000448  0100               	movlb	0	; () banked
  3095  00044A  6F70               	movwf	itoa@buf& (0+255),b
  3096  00044C  0E00               	movlw	high Draw_runTime_Menu@display
  3097  00044E  6F71               	movwf	(itoa@buf+1)& (0+255),b
  3098  000450  C03D  F072         	movff	_runMinutes,itoa@val
  3099  000454  6B73               	clrf	(itoa@val+1)& (0+255),b
  3100  000456  0E00               	movlw	0
  3101  000458  6F75               	movwf	(itoa@base+1)& (0+255),b
  3102  00045A  0E0A               	movlw	10
  3103  00045C  6F74               	movwf	itoa@base& (0+255),b
  3104  00045E  ECB1  F008         	call	_itoa	;wreg free
  3105                           
  3106                           ;screen_controls.c: 128: GLCD_WriteString(display);
  3107  000462  0E93               	movlw	low Draw_runTime_Menu@display
  3108  000464  0100               	movlb	0	; () banked
  3109  000466  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3110  000468  0E00               	movlw	high Draw_runTime_Menu@display
  3111  00046A  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3112  00046C  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  3113                           
  3114                           ;screen_controls.c: 129: GLCD_WriteString("min");
  3115  000470  0EFB               	movlw	low STR_5
  3116  000472  0100               	movlb	0	; () banked
  3117  000474  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3118  000476  0EFF               	movlw	high STR_5
  3119  000478  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3120  00047A  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  3121                           
  3122                           ;screen_controls.c: 131: GLCD_GoTo(runTimeX, 4);
  3123  00047E  0E04               	movlw	4
  3124  000480  0100               	movlb	0	; () banked
  3125  000482  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  3126  000484  51AC               	movf	_runTimeX& (0+255),w,b
  3127  000486  EC1B  F004         	call	_GLCD_GoTo
  3128                           
  3129                           ;screen_controls.c: 132: GLCD_WriteString("Time After: ");
  3130  00048A  0E82               	movlw	low STR_14
  3131  00048C  0100               	movlb	0	; () banked
  3132  00048E  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3133  000490  0EFF               	movlw	high STR_14
  3134  000492  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3135  000494  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  3136                           
  3137                           ;screen_controls.c: 133: GLCD_GoTo(valuesXStart, 4);
  3138  000498  0E04               	movlw	4
  3139  00049A  0100               	movlb	0	; () banked
  3140  00049C  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  3141  00049E  5042               	movf	_valuesXStart,w,c
  3142  0004A0  EC1B  F004         	call	_GLCD_GoTo
  3143                           
  3144                           ;screen_controls.c: 134: itoa(display, afterMinutes, 10);
  3145  0004A4  0E93               	movlw	low Draw_runTime_Menu@display
  3146  0004A6  0100               	movlb	0	; () banked
  3147  0004A8  6F70               	movwf	itoa@buf& (0+255),b
  3148  0004AA  0E00               	movlw	high Draw_runTime_Menu@display
  3149  0004AC  6F71               	movwf	(itoa@buf+1)& (0+255),b
  3150  0004AE  C0A9  F072         	movff	_afterMinutes,itoa@val
  3151  0004B2  6B73               	clrf	(itoa@val+1)& (0+255),b
  3152  0004B4  0E00               	movlw	0
  3153  0004B6  6F75               	movwf	(itoa@base+1)& (0+255),b
  3154  0004B8  0E0A               	movlw	10
  3155  0004BA  6F74               	movwf	itoa@base& (0+255),b
  3156  0004BC  ECB1  F008         	call	_itoa	;wreg free
  3157                           
  3158                           ;screen_controls.c: 135: GLCD_WriteString(display);
  3159  0004C0  0E93               	movlw	low Draw_runTime_Menu@display
  3160  0004C2  0100               	movlb	0	; () banked
  3161  0004C4  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3162  0004C6  0E00               	movlw	high Draw_runTime_Menu@display
  3163  0004C8  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3164  0004CA  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  3165                           
  3166                           ;screen_controls.c: 136: GLCD_WriteString("min");
  3167  0004CE  0EFB               	movlw	low STR_5
  3168  0004D0  0100               	movlb	0	; () banked
  3169  0004D2  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3170  0004D4  0EFF               	movlw	high STR_5
  3171  0004D6  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3172  0004D8  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  3173                           
  3174                           ;screen_controls.c: 138: GLCD_GoTo(runTimeX, 6);
  3175  0004DC  0E06               	movlw	6
  3176  0004DE  0100               	movlb	0	; () banked
  3177  0004E0  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  3178  0004E2  51AC               	movf	_runTimeX& (0+255),w,b
  3179  0004E4  EC1B  F004         	call	_GLCD_GoTo
  3180                           
  3181                           ;screen_controls.c: 139: Make_Back_Arrow();
  3182  0004E8  ECEC  F009         	call	_Make_Back_Arrow	;wreg free
  3183                           
  3184                           ;screen_controls.c: 141: GLCD_WriteString("Back");
  3185  0004EC  0EF6               	movlw	low STR_16
  3186  0004EE  0100               	movlb	0	; () banked
  3187  0004F0  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3188  0004F2  0EFF               	movlw	high STR_16
  3189  0004F4  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3190  0004F6  ECB2  F007         	call	_GLCD_WriteString	;wreg free
  3191  0004FA  0012               	return		;funcret
  3192  0004FC                     __end_of_Draw_runTime_Menu:
  3193                           	opt stack 0
  3194                           tblptru	equ	0xFF8
  3195                           tblptrh	equ	0xFF7
  3196                           tblptrl	equ	0xFF6
  3197                           tablat	equ	0xFF5
  3198                           intcon	equ	0xFF2
  3199                           postinc0	equ	0xFEE
  3200                           wreg	equ	0xFE8
  3201                           status	equ	0xFD8
  3202                           
  3203 ;; *************** function _itoa *****************
  3204 ;; Defined at:
  3205 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  buf             2   16[BANK0 ] PTR unsigned char 
  3208 ;;		 -> Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Run_Time_Menu_Function@display(10), 
  3209 ;;  val             2   18[BANK0 ] int 
  3210 ;;  base            2   20[BANK0 ] int 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  cp              2   22[BANK0 ] PTR unsigned char 
  3213 ;;		 -> Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Run_Time_Menu_Function@display(10), 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  2   16[BANK0 ] PTR unsigned char 
  3216 ;; Registers used:
  3217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3223 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3224 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3226 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3227 ;;Total ram usage:        8 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:   11
  3230 ;; This function calls:
  3231 ;;		_utoa
  3232 ;; This function is called by:
  3233 ;;		_Initialize_Menus
  3234 ;;		_Draw_runTime_Menu
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           	psect	text18
  3239  001162                     __ptext18:
  3240                           	opt stack 0
  3241  001162                     _itoa:
  3242                           	opt stack 18
  3243                           
  3244                           ;incstack = 0
  3245  001162  C070  F076         	movff	itoa@buf,itoa@cp
  3246  001166  C071  F077         	movff	itoa@buf+1,itoa@cp+1
  3247  00116A  0100               	movlb	0	; () banked
  3248  00116C  AF73               	btfss	(itoa@val+1)& (0+255),7,b
  3249  00116E  D00C               	goto	l1019
  3250                           
  3251                           ; BSR set to: 0
  3252  001170  C070  FFD9         	movff	itoa@buf,fsr2l
  3253  001174  C071  FFDA         	movff	itoa@buf+1,fsr2h
  3254  001178  0E2D               	movlw	45
  3255  00117A  6EDF               	movwf	indf2,c
  3256                           
  3257                           ; BSR set to: 0
  3258  00117C  4B70               	infsnz	itoa@buf& (0+255),f,b
  3259  00117E  2B71               	incf	(itoa@buf+1)& (0+255),f,b
  3260                           
  3261                           ; BSR set to: 0
  3262  001180  6D72               	negf	itoa@val& (0+255),b
  3263  001182  1F73               	comf	(itoa@val+1)& (0+255),f,b
  3264  001184  B0D8               	btfsc	status,0,c
  3265  001186  2B73               	incf	(itoa@val+1)& (0+255),f,b
  3266  001188                     l1019:
  3267                           
  3268                           ; BSR set to: 0
  3269                           
  3270                           ; BSR set to: 0
  3271  001188  C070  F067         	movff	itoa@buf,utoa@buf
  3272  00118C  C071  F068         	movff	itoa@buf+1,utoa@buf+1
  3273  001190  C072  F069         	movff	itoa@val,utoa@val
  3274  001194  C073  F06A         	movff	itoa@val+1,utoa@val+1
  3275  001198  C074  F06B         	movff	itoa@base,utoa@base
  3276  00119C  C075  F06C         	movff	itoa@base+1,utoa@base+1
  3277  0011A0  ECD6  F002         	call	_utoa	;wreg free
  3278  0011A4  0012               	return	
  3279  0011A6                     __end_of_itoa:
  3280                           	opt stack 0
  3281                           tblptru	equ	0xFF8
  3282                           tblptrh	equ	0xFF7
  3283                           tblptrl	equ	0xFF6
  3284                           tablat	equ	0xFF5
  3285                           intcon	equ	0xFF2
  3286                           postinc0	equ	0xFEE
  3287                           wreg	equ	0xFE8
  3288                           indf2	equ	0xFDF
  3289                           fsr2h	equ	0xFDA
  3290                           fsr2l	equ	0xFD9
  3291                           status	equ	0xFD8
  3292                           
  3293 ;; *************** function _utoa *****************
  3294 ;; Defined at:
  3295 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  buf             2    7[BANK0 ] PTR unsigned char 
  3298 ;;		 -> Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Run_Time_Menu_Function@display(10), 
  3299 ;;  val             2    9[BANK0 ] unsigned int 
  3300 ;;  base            2   11[BANK0 ] int 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  v               2   13[BANK0 ] unsigned int 
  3303 ;;  c               1   15[BANK0 ] unsigned char 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  2    7[BANK0 ] PTR unsigned char 
  3306 ;; Registers used:
  3307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3313 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3314 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3316 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3317 ;;Total ram usage:        9 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:   10
  3320 ;; This function calls:
  3321 ;;		___lwdiv
  3322 ;;		___lwmod
  3323 ;; This function is called by:
  3324 ;;		_itoa
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text19
  3329  0005AC                     __ptext19:
  3330                           	opt stack 0
  3331  0005AC                     _utoa:
  3332                           	opt stack 18
  3333                           
  3334                           ;incstack = 0
  3335  0005AC  C069  F06D         	movff	utoa@val,utoa@v
  3336  0005B0  C06A  F06E         	movff	utoa@val+1,utoa@v+1
  3337  0005B4  C06D  F060         	movff	utoa@v,___lwdiv@dividend
  3338  0005B8  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
  3339  0005BC  C06B  F062         	movff	utoa@base,___lwdiv@divisor
  3340  0005C0  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
  3341  0005C4  EC35  F008         	call	___lwdiv	;wreg free
  3342  0005C8  C060  F06D         	movff	?___lwdiv,utoa@v
  3343  0005CC  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
  3344  0005D0  0100               	movlb	0	; () banked
  3345  0005D2  4B67               	infsnz	utoa@buf& (0+255),f,b
  3346  0005D4  2B68               	incf	(utoa@buf+1)& (0+255),f,b
  3347                           
  3348                           ; BSR set to: 0
  3349  0005D6  516D               	movf	utoa@v& (0+255),w,b
  3350  0005D8  116E               	iorwf	(utoa@v+1)& (0+255),w,b
  3351  0005DA  A4D8               	btfss	status,2,c
  3352  0005DC  D7EB               	goto	l1023
  3353                           
  3354                           ; BSR set to: 0
  3355                           
  3356                           ; BSR set to: 0
  3357  0005DE  C067  FFD9         	movff	utoa@buf,fsr2l
  3358  0005E2  C068  FFDA         	movff	utoa@buf+1,fsr2h
  3359  0005E6  0E00               	movlw	0
  3360  0005E8  6EDF               	movwf	indf2,c
  3361                           
  3362                           ; BSR set to: 0
  3363  0005EA  0767               	decf	utoa@buf& (0+255),f,b
  3364  0005EC  A0D8               	btfss	status,0,c
  3365  0005EE  0768               	decf	(utoa@buf+1)& (0+255),f,b
  3366  0005F0                     
  3367                           ; BSR set to: 0
  3368                           
  3369                           ; BSR set to: 0
  3370  0005F0  C069  F060         	movff	utoa@val,___lwmod@dividend
  3371  0005F4  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
  3372  0005F8  C06B  F062         	movff	utoa@base,___lwmod@divisor
  3373  0005FC  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
  3374  000600  ECD3  F008         	call	___lwmod	;wreg free
  3375  000604  0100               	movlb	0	; () banked
  3376  000606  5160               	movf	?___lwmod& (0+255),w,b
  3377  000608  6F6F               	movwf	utoa@c& (0+255),b
  3378                           
  3379                           ; BSR set to: 0
  3380  00060A  C069  F060         	movff	utoa@val,___lwdiv@dividend
  3381  00060E  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
  3382  000612  C06B  F062         	movff	utoa@base,___lwdiv@divisor
  3383  000616  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
  3384  00061A  EC35  F008         	call	___lwdiv	;wreg free
  3385  00061E  C060  F069         	movff	?___lwdiv,utoa@val
  3386  000622  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
  3387  000626  0E09               	movlw	9
  3388  000628  0100               	movlb	0	; () banked
  3389  00062A  656F               	cpfsgt	utoa@c& (0+255),b
  3390  00062C  D002               	goto	l1026
  3391                           
  3392                           ; BSR set to: 0
  3393  00062E  0E07               	movlw	7
  3394  000630  276F               	addwf	utoa@c& (0+255),f,b
  3395  000632                     l1026:
  3396                           
  3397                           ; BSR set to: 0
  3398  000632  0E30               	movlw	48
  3399  000634  276F               	addwf	utoa@c& (0+255),f,b
  3400                           
  3401                           ; BSR set to: 0
  3402  000636  C067  FFD9         	movff	utoa@buf,fsr2l
  3403  00063A  C068  FFDA         	movff	utoa@buf+1,fsr2h
  3404  00063E  C06F  FFDF         	movff	utoa@c,indf2
  3405                           
  3406                           ; BSR set to: 0
  3407  000642  0767               	decf	utoa@buf& (0+255),f,b
  3408  000644  A0D8               	btfss	status,0,c
  3409  000646  0768               	decf	(utoa@buf+1)& (0+255),f,b
  3410                           
  3411                           ; BSR set to: 0
  3412  000648  5169               	movf	utoa@val& (0+255),w,b
  3413  00064A  116A               	iorwf	(utoa@val+1)& (0+255),w,b
  3414  00064C  A4D8               	btfss	status,2,c
  3415  00064E  D7D0               	goto	l1025
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;	Return value of _utoa is never used
  3419                           
  3420                           ; BSR set to: 0
  3421  000650  4B67               	infsnz	utoa@buf& (0+255),f,b
  3422  000652  2B68               	incf	(utoa@buf+1)& (0+255),f,b
  3423  000654  0012               	return	
  3424  000656                     __end_of_utoa:
  3425                           	opt stack 0
  3426                           tblptru	equ	0xFF8
  3427                           tblptrh	equ	0xFF7
  3428                           tblptrl	equ	0xFF6
  3429                           tablat	equ	0xFF5
  3430                           intcon	equ	0xFF2
  3431                           postinc0	equ	0xFEE
  3432                           wreg	equ	0xFE8
  3433                           indf2	equ	0xFDF
  3434                           fsr2h	equ	0xFDA
  3435                           fsr2l	equ	0xFD9
  3436                           status	equ	0xFD8
  3437                           
  3438 ;; *************** function ___lwmod *****************
  3439 ;; Defined at:
  3440 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  dividend        2    0[BANK0 ] unsigned int 
  3443 ;;  divisor         2    2[BANK0 ] unsigned int 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  counter         1    4[BANK0 ] unsigned char 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  2    0[BANK0 ] unsigned int 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3455 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3456 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3458 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3459 ;;Total ram usage:        5 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    9
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_utoa
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text20
  3470  0011A6                     __ptext20:
  3471                           	opt stack 0
  3472  0011A6                     ___lwmod:
  3473                           	opt stack 18
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;incstack = 0
  3477  0011A6  0100               	movlb	0	; () banked
  3478  0011A8  5162               	movf	___lwmod@divisor& (0+255),w,b
  3479  0011AA  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3480  0011AC  B4D8               	btfsc	status,2,c
  3481  0011AE  D018               	goto	l1121
  3482                           
  3483                           ; BSR set to: 0
  3484  0011B0  0E01               	movlw	1
  3485  0011B2  6F64               	movwf	___lwmod@counter& (0+255),b
  3486  0011B4  D004               	goto	l1116
  3487  0011B6                     
  3488                           ; BSR set to: 0
  3489                           
  3490                           ; BSR set to: 0
  3491  0011B6  90D8               	bcf	status,0,c
  3492  0011B8  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  3493  0011BA  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3494  0011BC  2B64               	incf	___lwmod@counter& (0+255),f,b
  3495  0011BE                     l1116:
  3496                           
  3497                           ; BSR set to: 0
  3498                           
  3499                           ; BSR set to: 0
  3500  0011BE  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3501  0011C0  D7FA               	goto	l1117
  3502  0011C2                     u1490:
  3503                           
  3504                           ; BSR set to: 0
  3505                           
  3506                           ; BSR set to: 0
  3507                           
  3508                           ; BSR set to: 0
  3509  0011C2  5162               	movf	___lwmod@divisor& (0+255),w,b
  3510  0011C4  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  3511  0011C6  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3512  0011C8  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3513  0011CA  A0D8               	btfss	status,0,c
  3514  0011CC  D004               	goto	l1120
  3515                           
  3516                           ; BSR set to: 0
  3517  0011CE  5162               	movf	___lwmod@divisor& (0+255),w,b
  3518  0011D0  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  3519  0011D2  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3520  0011D4  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3521  0011D6                     l1120:
  3522                           
  3523                           ; BSR set to: 0
  3524                           
  3525                           ; BSR set to: 0
  3526  0011D6  90D8               	bcf	status,0,c
  3527  0011D8  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3528  0011DA  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  3529                           
  3530                           ; BSR set to: 0
  3531  0011DC  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  3532  0011DE  D7F1               	goto	u1490
  3533  0011E0                     l1121:
  3534                           
  3535                           ; BSR set to: 0
  3536                           
  3537                           ; BSR set to: 0
  3538  0011E0  C060  F060         	movff	___lwmod@dividend,?___lwmod
  3539  0011E4  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  3540                           
  3541                           ; BSR set to: 0
  3542  0011E8  0012               	return		;funcret
  3543  0011EA                     __end_of___lwmod:
  3544                           	opt stack 0
  3545                           tblptru	equ	0xFF8
  3546                           tblptrh	equ	0xFF7
  3547                           tblptrl	equ	0xFF6
  3548                           tablat	equ	0xFF5
  3549                           intcon	equ	0xFF2
  3550                           postinc0	equ	0xFEE
  3551                           wreg	equ	0xFE8
  3552                           indf2	equ	0xFDF
  3553                           fsr2h	equ	0xFDA
  3554                           fsr2l	equ	0xFD9
  3555                           status	equ	0xFD8
  3556                           
  3557 ;; *************** function ___lwdiv *****************
  3558 ;; Defined at:
  3559 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  dividend        2    0[BANK0 ] unsigned int 
  3562 ;;  divisor         2    2[BANK0 ] unsigned int 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  quotient        2    4[BANK0 ] unsigned int 
  3565 ;;  counter         1    6[BANK0 ] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  2    0[BANK0 ] unsigned int 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3575 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3576 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3578 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3579 ;;Total ram usage:        7 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:    9
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_utoa
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text21
  3590  00106A                     __ptext21:
  3591                           	opt stack 0
  3592  00106A                     ___lwdiv:
  3593                           	opt stack 18
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;incstack = 0
  3597  00106A  0E00               	movlw	0
  3598  00106C  0100               	movlb	0	; () banked
  3599  00106E  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3600  001070  0E00               	movlw	0
  3601  001072  6F64               	movwf	___lwdiv@quotient& (0+255),b
  3602                           
  3603                           ; BSR set to: 0
  3604  001074  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3605  001076  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  3606  001078  B4D8               	btfsc	status,2,c
  3607  00107A  D01C               	goto	l1111
  3608                           
  3609                           ; BSR set to: 0
  3610  00107C  0E01               	movlw	1
  3611  00107E  6F66               	movwf	___lwdiv@counter& (0+255),b
  3612  001080  D004               	goto	l1106
  3613  001082                     
  3614                           ; BSR set to: 0
  3615                           
  3616                           ; BSR set to: 0
  3617  001082  90D8               	bcf	status,0,c
  3618  001084  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  3619  001086  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3620  001088  2B66               	incf	___lwdiv@counter& (0+255),f,b
  3621  00108A                     l1106:
  3622                           
  3623                           ; BSR set to: 0
  3624                           
  3625                           ; BSR set to: 0
  3626  00108A  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3627  00108C  D7FA               	goto	l1107
  3628  00108E                     u1460:
  3629                           
  3630                           ; BSR set to: 0
  3631                           
  3632                           ; BSR set to: 0
  3633                           
  3634                           ; BSR set to: 0
  3635  00108E  90D8               	bcf	status,0,c
  3636  001090  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
  3637  001092  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3638                           
  3639                           ; BSR set to: 0
  3640  001094  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3641  001096  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  3642  001098  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3643  00109A  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3644  00109C  A0D8               	btfss	status,0,c
  3645  00109E  D005               	goto	l1110
  3646                           
  3647                           ; BSR set to: 0
  3648  0010A0  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3649  0010A2  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  3650  0010A4  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3651  0010A6  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3652                           
  3653                           ; BSR set to: 0
  3654  0010A8  8164               	bsf	___lwdiv@quotient& (0+255),0,b
  3655  0010AA                     l1110:
  3656                           
  3657                           ; BSR set to: 0
  3658                           
  3659                           ; BSR set to: 0
  3660  0010AA  90D8               	bcf	status,0,c
  3661  0010AC  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3662  0010AE  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  3663                           
  3664                           ; BSR set to: 0
  3665  0010B0  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
  3666  0010B2  D7ED               	goto	u1460
  3667  0010B4                     l1111:
  3668                           
  3669                           ; BSR set to: 0
  3670                           
  3671                           ; BSR set to: 0
  3672  0010B4  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
  3673  0010B8  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3674                           
  3675                           ; BSR set to: 0
  3676  0010BC  0012               	return		;funcret
  3677  0010BE                     __end_of___lwdiv:
  3678                           	opt stack 0
  3679                           tblptru	equ	0xFF8
  3680                           tblptrh	equ	0xFF7
  3681                           tblptrl	equ	0xFF6
  3682                           tablat	equ	0xFF5
  3683                           intcon	equ	0xFF2
  3684                           postinc0	equ	0xFEE
  3685                           wreg	equ	0xFE8
  3686                           indf2	equ	0xFDF
  3687                           fsr2h	equ	0xFDA
  3688                           fsr2l	equ	0xFD9
  3689                           status	equ	0xFD8
  3690                           
  3691 ;; *************** function _Make_Back_Arrow *****************
  3692 ;; Defined at:
  3693 ;;		line 85 in file "screen_controls.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;		None
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, status,2, status,0, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3711 ;;Total ram usage:        0 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:   12
  3714 ;; This function calls:
  3715 ;;		_GLCD_WriteData
  3716 ;; This function is called by:
  3717 ;;		_Draw_runTime_Menu
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           	psect	text22
  3722  0013D8                     __ptext22:
  3723                           	opt stack 0
  3724  0013D8                     _Make_Back_Arrow:
  3725                           	opt stack 16
  3726                           
  3727                           ;screen_controls.c: 87: GLCD_WriteData(0x04);
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;incstack = 0
  3731  0013D8  0E04               	movlw	4
  3732  0013DA  ECE2  F005         	call	_GLCD_WriteData
  3733                           
  3734                           ;screen_controls.c: 88: GLCD_WriteData(0x0E);
  3735  0013DE  0E0E               	movlw	14
  3736  0013E0  ECE2  F005         	call	_GLCD_WriteData
  3737                           
  3738                           ;screen_controls.c: 89: GLCD_WriteData(0x95);
  3739  0013E4  0E95               	movlw	149
  3740  0013E6  ECE2  F005         	call	_GLCD_WriteData
  3741                           
  3742                           ;screen_controls.c: 90: GLCD_WriteData(0x84);
  3743  0013EA  0E84               	movlw	132
  3744  0013EC  ECE2  F005         	call	_GLCD_WriteData
  3745                           
  3746                           ;screen_controls.c: 91: GLCD_WriteData(0x84);
  3747  0013F0  0E84               	movlw	132
  3748  0013F2  ECE2  F005         	call	_GLCD_WriteData
  3749                           
  3750                           ;screen_controls.c: 92: GLCD_WriteData(0x44);
  3751  0013F6  0E44               	movlw	68
  3752  0013F8  ECE2  F005         	call	_GLCD_WriteData
  3753                           
  3754                           ;screen_controls.c: 93: GLCD_WriteData(0x38);
  3755  0013FC  0E38               	movlw	56
  3756  0013FE  ECE2  F005         	call	_GLCD_WriteData
  3757                           
  3758                           ;screen_controls.c: 94: GLCD_WriteData(0x00);
  3759  001402  0E00               	movlw	0
  3760  001404  ECE2  F005         	call	_GLCD_WriteData
  3761  001408  0012               	return		;funcret
  3762  00140A                     __end_of_Make_Back_Arrow:
  3763                           	opt stack 0
  3764                           tblptru	equ	0xFF8
  3765                           tblptrh	equ	0xFF7
  3766                           tblptrl	equ	0xFF6
  3767                           tablat	equ	0xFF5
  3768                           intcon	equ	0xFF2
  3769                           postinc0	equ	0xFEE
  3770                           wreg	equ	0xFE8
  3771                           indf2	equ	0xFDF
  3772                           fsr2h	equ	0xFDA
  3773                           fsr2l	equ	0xFD9
  3774                           status	equ	0xFD8
  3775                           
  3776 ;; *************** function _GLCD_WriteString *****************
  3777 ;; Defined at:
  3778 ;;		line 70 in file "ks0108lib/KS0108.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  stringToWrit    2   13[BANK0 ] PTR unsigned char 
  3781 ;;		 -> STR_16(5), STR_15(4), STR_14(13), STR_13(4), 
  3782 ;;		 -> Draw_runTime_Menu@display(10), STR_12(11), STR_11(10), STR_10(9), 
  3783 ;;		 -> STR_9(10), STR_8(9), STR_7(11), STR_6(11), 
  3784 ;;		 -> STR_5(4), Initialize_Menus@display(10), STR_4(8), STR_3(7), 
  3785 ;;		 -> STR_2(10), STR_1(7), Run_Time_Menu_Function@display(10), 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3797 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3800 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3801 ;;Total ram usage:        2 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:   13
  3804 ;; This function calls:
  3805 ;;		_GLCD_WriteChar
  3806 ;; This function is called by:
  3807 ;;		_Initialize_Menus
  3808 ;;		_Draw_runTime_Menu
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text23
  3813  000F64                     __ptext23:
  3814                           	opt stack 0
  3815  000F64                     _GLCD_WriteString:
  3816                           	opt stack 16
  3817                           
  3818                           ;KS0108.c: 72: while(*stringToWrite)
  3819                           
  3820                           ;incstack = 0
  3821  000F64  D016               	goto	l522
  3822  000F66                     
  3823                           ;KS0108.c: 73: GLCD_WriteChar(*stringToWrite++);
  3824  000F66  C06D  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  3825  000F6A  C06E  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  3826  000F6E  0E00               	movlw	low (__mediumconst shr (0+16))
  3827  000F70  6EF8               	movwf	tblptru,c
  3828  000F72  0E0E               	movlw	(high __ramtop+-1)
  3829  000F74  64F7               	cpfsgt	tblptrh,c
  3830  000F76  D003               	bra	u1777
  3831  000F78  0008               	tblrd		*
  3832  000F7A  50F5               	movf	tablat,w,c
  3833  000F7C  D005               	bra	u1770
  3834  000F7E                     u1777:
  3835  000F7E  CFF6 FFE9          	movff	tblptrl,fsr0l
  3836  000F82  CFF7 FFEA          	movff	tblptrh,fsr0h
  3837  000F86  50EF               	movf	indf0,w,c
  3838  000F88                     u1770:
  3839  000F88  ECDE  F007         	call	_GLCD_WriteChar
  3840  000F8C  0100               	movlb	0	; () banked
  3841  000F8E  4B6D               	infsnz	GLCD_WriteString@stringToWrite& (0+255),f,b
  3842  000F90  2B6E               	incf	(GLCD_WriteString@stringToWrite+1)& (0+255),f,b
  3843  000F92                     l522:
  3844                           
  3845                           ; BSR set to: 0
  3846  000F92  C06D  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  3847  000F96  C06E  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  3848  000F9A  0E00               	movlw	low (__mediumconst shr (0+16))
  3849  000F9C  6EF8               	movwf	tblptru,c
  3850  000F9E  0E0E               	movlw	(high __ramtop+-1)
  3851  000FA0  64F7               	cpfsgt	tblptrh,c
  3852  000FA2  D003               	bra	u1787
  3853  000FA4  0008               	tblrd		*
  3854  000FA6  50F5               	movf	tablat,w,c
  3855  000FA8  D005               	bra	u1780
  3856  000FAA                     u1787:
  3857  000FAA  CFF6 FFE9          	movff	tblptrl,fsr0l
  3858  000FAE  CFF7 FFEA          	movff	tblptrh,fsr0h
  3859  000FB2  50EF               	movf	indf0,w,c
  3860  000FB4                     u1780:
  3861  000FB4  0900               	iorlw	0
  3862  000FB6  B4D8               	btfsc	status,2,c
  3863  000FB8  0012               	return	
  3864  000FBA  D7D5               	goto	l523
  3865  000FBC                     __end_of_GLCD_WriteString:
  3866                           	opt stack 0
  3867                           tblptru	equ	0xFF8
  3868                           tblptrh	equ	0xFF7
  3869                           tblptrl	equ	0xFF6
  3870                           tablat	equ	0xFF5
  3871                           intcon	equ	0xFF2
  3872                           indf0	equ	0xFEF
  3873                           postinc0	equ	0xFEE
  3874                           fsr0h	equ	0xFEA
  3875                           fsr0l	equ	0xFE9
  3876                           wreg	equ	0xFE8
  3877                           indf2	equ	0xFDF
  3878                           fsr2h	equ	0xFDA
  3879                           fsr2l	equ	0xFD9
  3880                           status	equ	0xFD8
  3881                           
  3882 ;; *************** function _GLCD_WriteChar *****************
  3883 ;; Defined at:
  3884 ;;		line 56 in file "ks0108lib/KS0108.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  charToWrite     1    wreg     unsigned char 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  charToWrite     1   10[BANK0 ] unsigned char 
  3889 ;;  i               2   11[BANK0 ] int 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3900 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3902 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3903 ;;Total ram usage:        3 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:   12
  3906 ;; This function calls:
  3907 ;;		_GLCD_WriteData
  3908 ;; This function is called by:
  3909 ;;		_GLCD_WriteString
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text24
  3914  000FBC                     __ptext24:
  3915                           	opt stack 0
  3916  000FBC                     _GLCD_WriteChar:
  3917                           	opt stack 16
  3918                           
  3919                           ;incstack = 0
  3920                           ;GLCD_WriteChar@charToWrite stored from wreg
  3921  000FBC  0100               	movlb	0	; () banked
  3922  000FBE  6F6A               	movwf	GLCD_WriteChar@charToWrite& (0+255),b
  3923                           
  3924                           ;KS0108.c: 58: int i;
  3925                           ;KS0108.c: 59: charToWrite -= 32;
  3926  000FC0  0E20               	movlw	32
  3927  000FC2  0100               	movlb	0	; () banked
  3928  000FC4  5F6A               	subwf	GLCD_WriteChar@charToWrite& (0+255),f,b
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
  3932  000FC6  0E00               	movlw	0
  3933  000FC8  6F6C               	movwf	(GLCD_WriteChar@i+1)& (0+255),b
  3934  000FCA  0E00               	movlw	0
  3935  000FCC  6F6B               	movwf	GLCD_WriteChar@i& (0+255),b
  3936  000FCE                     l3086:
  3937                           
  3938                           ; BSR set to: 0
  3939  000FCE  BF6C               	btfsc	(GLCD_WriteChar@i+1)& (0+255),7,b
  3940  000FD0  D006               	goto	l517
  3941  000FD2  516C               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  3942  000FD4  E11B               	bnz	l3096
  3943  000FD6  0E05               	movlw	5
  3944  000FD8  5D6B               	subwf	GLCD_WriteChar@i& (0+255),w,b
  3945  000FDA  B0D8               	btfsc	status,0,c
  3946  000FDC  D017               	goto	u1610
  3947  000FDE                     l517:
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;KS0108.c: 61: {
  3951                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
  3952                           
  3953                           ; BSR set to: 0
  3954  000FDE  516A               	movf	GLCD_WriteChar@charToWrite& (0+255),w,b
  3955  000FE0  0D05               	mullw	5
  3956  000FE2  516B               	movf	GLCD_WriteChar@i& (0+255),w,b
  3957  000FE4  26F3               	addwf	prodl,f,c
  3958  000FE6  516C               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  3959  000FE8  22F4               	addwfc	prodh,f,c
  3960  000FEA  0EA1               	movlw	low _font5x8
  3961  000FEC  24F3               	addwf	prodl,w,c
  3962  000FEE  6EF6               	movwf	tblptrl,c
  3963  000FF0  0EFD               	movlw	high _font5x8
  3964  000FF2  20F4               	addwfc	prodh,w,c
  3965  000FF4  6EF7               	movwf	tblptrh,c
  3966  000FF6                     	if	1	;There are 3 active tblptr bytes
  3967  000FF6  6AF8               	clrf	tblptru,c
  3968  000FF8  0E00               	movlw	low (__mediumconst shr (0+16))
  3969  000FFA  22F8               	addwfc	tblptru,f,c
  3970  000FFC                     	endif
  3971  000FFC  0008               	tblrd		*
  3972  000FFE  50F5               	movf	tablat,w,c
  3973  001000  ECE2  F005         	call	_GLCD_WriteData
  3974  001004  0100               	movlb	0	; () banked
  3975  001006  4B6B               	infsnz	GLCD_WriteChar@i& (0+255),f,b
  3976  001008  2B6C               	incf	(GLCD_WriteChar@i+1)& (0+255),f,b
  3977  00100A  D7E1               	goto	l3086
  3978  00100C                     u1610:
  3979  00100C                     l3096:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;KS0108.c: 64: }
  3983                           ;KS0108.c: 65: GLCD_WriteData(0x00);
  3984  00100C  0E00               	movlw	0
  3985  00100E  ECE2  F005         	call	_GLCD_WriteData
  3986  001012  0012               	return		;funcret
  3987  001014                     __end_of_GLCD_WriteChar:
  3988                           	opt stack 0
  3989                           tblptru	equ	0xFF8
  3990                           tblptrh	equ	0xFF7
  3991                           tblptrl	equ	0xFF6
  3992                           tablat	equ	0xFF5
  3993                           prodh	equ	0xFF4
  3994                           prodl	equ	0xFF3
  3995                           intcon	equ	0xFF2
  3996                           indf0	equ	0xFEF
  3997                           postinc0	equ	0xFEE
  3998                           fsr0h	equ	0xFEA
  3999                           fsr0l	equ	0xFE9
  4000                           wreg	equ	0xFE8
  4001                           indf2	equ	0xFDF
  4002                           fsr2h	equ	0xFDA
  4003                           fsr2l	equ	0xFD9
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function _GLCD_Line *****************
  4007 ;; Defined at:
  4008 ;;		line 52 in file "ks0108lib/graphic.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  X1              2   21[BANK0 ] unsigned int 
  4011 ;;  Y1              2   23[BANK0 ] unsigned int 
  4012 ;;  X2              2   25[BANK0 ] unsigned int 
  4013 ;;  Y2              2   27[BANK0 ] unsigned int 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  Dy              2   49[BANK0 ] int 
  4016 ;;  Dx              2   47[BANK0 ] int 
  4017 ;;  CurrentY        2   45[BANK0 ] int 
  4018 ;;  CurrentX        2   43[BANK0 ] int 
  4019 ;;  TwoDy           2   41[BANK0 ] int 
  4020 ;;  TwoDx           2   39[BANK0 ] int 
  4021 ;;  Yinc            2   37[BANK0 ] int 
  4022 ;;  Xinc            2   35[BANK0 ] int 
  4023 ;;  TwoDyAccumul    2   33[BANK0 ] int 
  4024 ;;  TwoDxAccumul    2   31[BANK0 ] int 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4034 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4035 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4036 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4037 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4038 ;;Total ram usage:       30 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:   14
  4041 ;; This function calls:
  4042 ;;		_GLCD_SetPixel
  4043 ;; This function is called by:
  4044 ;;		_Initialize_Menus
  4045 ;;		_Draw_runTime_Menu
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text25
  4050  0000B8                     __ptext25:
  4051                           	opt stack 0
  4052  0000B8                     _GLCD_Line:
  4053                           	opt stack 15
  4054                           
  4055                           ;graphic.c: 54: int CurrentX, CurrentY, Xinc, Yinc,
  4056                           ;graphic.c: 55: Dx, Dy, TwoDx, TwoDy,
  4057                           ;graphic.c: 56: TwoDxAccumulatedError, TwoDyAccumulatedError;
  4058                           ;graphic.c: 58: Dx = (X2-X1);
  4059                           
  4060                           ;incstack = 0
  4061  0000B8  C075  F07D         	movff	GLCD_Line@X1,??_GLCD_Line
  4062  0000BC  C076  F07E         	movff	GLCD_Line@X1+1,??_GLCD_Line+1
  4063  0000C0  0100               	movlb	0	; () banked
  4064  0000C2  1F7D               	comf	??_GLCD_Line& (0+255),f,b
  4065  0000C4  1F7E               	comf	(??_GLCD_Line+1)& (0+255),f,b
  4066  0000C6  4B7D               	infsnz	??_GLCD_Line& (0+255),f,b
  4067  0000C8  2B7E               	incf	(??_GLCD_Line+1)& (0+255),f,b
  4068  0000CA  5179               	movf	GLCD_Line@X2& (0+255),w,b
  4069  0000CC  257D               	addwf	??_GLCD_Line& (0+255),w,b
  4070  0000CE  6F8F               	movwf	GLCD_Line@Dx& (0+255),b
  4071  0000D0  517A               	movf	(GLCD_Line@X2+1)& (0+255),w,b
  4072  0000D2  217E               	addwfc	(??_GLCD_Line+1)& (0+255),w,b
  4073  0000D4  6F90               	movwf	(GLCD_Line@Dx+1)& (0+255),b
  4074                           
  4075                           ;graphic.c: 59: Dy = (Y2-Y1);
  4076  0000D6  C077  F07D         	movff	GLCD_Line@Y1,??_GLCD_Line
  4077  0000DA  C078  F07E         	movff	GLCD_Line@Y1+1,??_GLCD_Line+1
  4078  0000DE  1F7D               	comf	??_GLCD_Line& (0+255),f,b
  4079  0000E0  1F7E               	comf	(??_GLCD_Line+1)& (0+255),f,b
  4080  0000E2  4B7D               	infsnz	??_GLCD_Line& (0+255),f,b
  4081  0000E4  2B7E               	incf	(??_GLCD_Line+1)& (0+255),f,b
  4082  0000E6  517B               	movf	GLCD_Line@Y2& (0+255),w,b
  4083  0000E8  257D               	addwf	??_GLCD_Line& (0+255),w,b
  4084  0000EA  6F91               	movwf	GLCD_Line@Dy& (0+255),b
  4085  0000EC  517C               	movf	(GLCD_Line@Y2+1)& (0+255),w,b
  4086  0000EE  217E               	addwfc	(??_GLCD_Line+1)& (0+255),w,b
  4087  0000F0  6F92               	movwf	(GLCD_Line@Dy+1)& (0+255),b
  4088                           
  4089                           ;graphic.c: 61: TwoDx = Dx + Dx;
  4090  0000F2  90D8               	bcf	status,0,c
  4091  0000F4  358F               	rlcf	GLCD_Line@Dx& (0+255),w,b
  4092  0000F6  6F87               	movwf	GLCD_Line@TwoDx& (0+255),b
  4093  0000F8  3590               	rlcf	(GLCD_Line@Dx+1)& (0+255),w,b
  4094  0000FA  6F88               	movwf	(GLCD_Line@TwoDx+1)& (0+255),b
  4095                           
  4096                           ;graphic.c: 62: TwoDy = Dy + Dy;
  4097  0000FC  90D8               	bcf	status,0,c
  4098  0000FE  3591               	rlcf	GLCD_Line@Dy& (0+255),w,b
  4099  000100  6F89               	movwf	GLCD_Line@TwoDy& (0+255),b
  4100  000102  3592               	rlcf	(GLCD_Line@Dy+1)& (0+255),w,b
  4101  000104  6F8A               	movwf	(GLCD_Line@TwoDy+1)& (0+255),b
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;graphic.c: 64: CurrentX = X1;
  4105  000106  C075  F08B         	movff	GLCD_Line@X1,GLCD_Line@CurrentX
  4106  00010A  C076  F08C         	movff	GLCD_Line@X1+1,GLCD_Line@CurrentX+1
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;graphic.c: 65: CurrentY = Y1;
  4110  00010E  C077  F08D         	movff	GLCD_Line@Y1,GLCD_Line@CurrentY
  4111  000112  C078  F08E         	movff	GLCD_Line@Y1+1,GLCD_Line@CurrentY+1
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;graphic.c: 67: Xinc = 1;
  4115  000116  0E00               	movlw	0
  4116  000118  6F84               	movwf	(GLCD_Line@Xinc+1)& (0+255),b
  4117  00011A  0E01               	movlw	1
  4118  00011C  6F83               	movwf	GLCD_Line@Xinc& (0+255),b
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;graphic.c: 68: Yinc = 1;
  4122  00011E  0E00               	movlw	0
  4123  000120  6F86               	movwf	(GLCD_Line@Yinc+1)& (0+255),b
  4124  000122  0E01               	movlw	1
  4125  000124  6F85               	movwf	GLCD_Line@Yinc& (0+255),b
  4126                           
  4127                           ;graphic.c: 70: if(Dx < 0)
  4128  000126  AF90               	btfss	(GLCD_Line@Dx+1)& (0+255),7,b
  4129  000128  D00A               	goto	l468
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;graphic.c: 71: {
  4133                           ;graphic.c: 72: Xinc = -1;
  4134  00012A  6983               	setf	GLCD_Line@Xinc& (0+255),b
  4135  00012C  6984               	setf	(GLCD_Line@Xinc+1)& (0+255),b
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;graphic.c: 73: Dx = -Dx;
  4139  00012E  6D8F               	negf	GLCD_Line@Dx& (0+255),b
  4140  000130  1F90               	comf	(GLCD_Line@Dx+1)& (0+255),f,b
  4141  000132  B0D8               	btfsc	status,0,c
  4142  000134  2B90               	incf	(GLCD_Line@Dx+1)& (0+255),f,b
  4143                           
  4144                           ;graphic.c: 74: TwoDx = -TwoDx;
  4145  000136  6D87               	negf	GLCD_Line@TwoDx& (0+255),b
  4146  000138  1F88               	comf	(GLCD_Line@TwoDx+1)& (0+255),f,b
  4147  00013A  B0D8               	btfsc	status,0,c
  4148  00013C  2B88               	incf	(GLCD_Line@TwoDx+1)& (0+255),f,b
  4149  00013E                     l468:
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;graphic.c: 75: }
  4153                           ;graphic.c: 77: if (Dy < 0)
  4154                           
  4155                           ; BSR set to: 0
  4156  00013E  AF92               	btfss	(GLCD_Line@Dy+1)& (0+255),7,b
  4157  000140  D00A               	goto	l469
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;graphic.c: 78: {
  4161                           ;graphic.c: 79: Yinc = -1;
  4162  000142  6985               	setf	GLCD_Line@Yinc& (0+255),b
  4163  000144  6986               	setf	(GLCD_Line@Yinc+1)& (0+255),b
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;graphic.c: 80: Dy = -Dy;
  4167  000146  6D91               	negf	GLCD_Line@Dy& (0+255),b
  4168  000148  1F92               	comf	(GLCD_Line@Dy+1)& (0+255),f,b
  4169  00014A  B0D8               	btfsc	status,0,c
  4170  00014C  2B92               	incf	(GLCD_Line@Dy+1)& (0+255),f,b
  4171                           
  4172                           ;graphic.c: 81: TwoDy = -TwoDy;
  4173  00014E  6D89               	negf	GLCD_Line@TwoDy& (0+255),b
  4174  000150  1F8A               	comf	(GLCD_Line@TwoDy+1)& (0+255),f,b
  4175  000152  B0D8               	btfsc	status,0,c
  4176  000154  2B8A               	incf	(GLCD_Line@TwoDy+1)& (0+255),f,b
  4177  000156                     l469:
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;graphic.c: 82: }
  4181                           ;graphic.c: 84: GLCD_SetPixel(X1,Y1, color);
  4182                           
  4183                           ; BSR set to: 0
  4184  000156  C077  F06E         	movff	GLCD_Line@Y1,GLCD_SetPixel@y
  4185  00015A  0E81               	movlw	low _color
  4186  00015C  6EF6               	movwf	tblptrl,c
  4187  00015E                     	if	1	;There is more than 1 active tblptr byte
  4188  00015E  0EFF               	movlw	high _color
  4189  000160  6EF7               	movwf	tblptrh,c
  4190  000162                     	endif
  4191  000162                     	if	1	;There are 3 active tblptr bytes
  4192  000162  0E00               	movlw	low (_color shr (0+16))
  4193  000164  6EF8               	movwf	tblptru,c
  4194  000166                     	endif
  4195  000166  0008               	tblrd		*
  4196  000168  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  4197  00016C  5175               	movf	GLCD_Line@X1& (0+255),w,b
  4198  00016E  EC2B  F003         	call	_GLCD_SetPixel
  4199                           
  4200                           ;graphic.c: 86: if ((Dx != 0) || (Dy != 0))
  4201  000172  0100               	movlb	0	; () banked
  4202  000174  518F               	movf	GLCD_Line@Dx& (0+255),w,b
  4203  000176  1190               	iorwf	(GLCD_Line@Dx+1)& (0+255),w,b
  4204  000178  A4D8               	btfss	status,2,c
  4205  00017A  D004               	goto	u1870
  4206                           
  4207                           ; BSR set to: 0
  4208  00017C  5191               	movf	GLCD_Line@Dy& (0+255),w,b
  4209  00017E  1192               	iorwf	(GLCD_Line@Dy+1)& (0+255),w,b
  4210  000180  B4D8               	btfsc	status,2,c
  4211  000182  0012               	return	
  4212  000184                     u1870:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;graphic.c: 87: {
  4216                           ;graphic.c: 89: if (Dy <= Dx)
  4217                           
  4218                           ; BSR set to: 0
  4219  000184  5191               	movf	GLCD_Line@Dy& (0+255),w,b
  4220  000186  5D8F               	subwf	GLCD_Line@Dx& (0+255),w,b
  4221  000188  5190               	movf	(GLCD_Line@Dx+1)& (0+255),w,b
  4222  00018A  0A80               	xorlw	128
  4223  00018C  6F7D               	movwf	??_GLCD_Line& (0+255),b
  4224  00018E  5192               	movf	(GLCD_Line@Dy+1)& (0+255),w,b
  4225  000190  0A80               	xorlw	128
  4226  000192  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  4227  000194  A0D8               	btfss	status,0,c
  4228  000196  D035               	goto	l473
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;graphic.c: 90: {
  4232                           ;graphic.c: 91: TwoDxAccumulatedError = 0;
  4233  000198  0E00               	movlw	0
  4234  00019A  6F80               	movwf	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),b
  4235  00019C  0E00               	movlw	0
  4236  00019E  6F7F               	movwf	GLCD_Line@TwoDxAccumulatedError& (0+255),b
  4237  0001A0                     l3328:
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;graphic.c: 93: {
  4241                           ;graphic.c: 94: CurrentX += Xinc;
  4242  0001A0  5183               	movf	GLCD_Line@Xinc& (0+255),w,b
  4243  0001A2  278B               	addwf	GLCD_Line@CurrentX& (0+255),f,b
  4244  0001A4  5184               	movf	(GLCD_Line@Xinc+1)& (0+255),w,b
  4245  0001A6  238C               	addwfc	(GLCD_Line@CurrentX+1)& (0+255),f,b
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;graphic.c: 95: TwoDxAccumulatedError += TwoDy;
  4249  0001A8  5189               	movf	GLCD_Line@TwoDy& (0+255),w,b
  4250  0001AA  277F               	addwf	GLCD_Line@TwoDxAccumulatedError& (0+255),f,b
  4251  0001AC  518A               	movf	(GLCD_Line@TwoDy+1)& (0+255),w,b
  4252  0001AE  2380               	addwfc	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),f,b
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;graphic.c: 96: if(TwoDxAccumulatedError > Dx)
  4256  0001B0  517F               	movf	GLCD_Line@TwoDxAccumulatedError& (0+255),w,b
  4257  0001B2  5D8F               	subwf	GLCD_Line@Dx& (0+255),w,b
  4258  0001B4  5190               	movf	(GLCD_Line@Dx+1)& (0+255),w,b
  4259  0001B6  0A80               	xorlw	128
  4260  0001B8  6F7D               	movwf	??_GLCD_Line& (0+255),b
  4261  0001BA  5180               	movf	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),w,b
  4262  0001BC  0A80               	xorlw	128
  4263  0001BE  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  4264  0001C0  B0D8               	btfsc	status,0,c
  4265  0001C2  D008               	goto	l475
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;graphic.c: 97: {
  4269                           ;graphic.c: 98: CurrentY += Yinc;
  4270  0001C4  5185               	movf	GLCD_Line@Yinc& (0+255),w,b
  4271  0001C6  278D               	addwf	GLCD_Line@CurrentY& (0+255),f,b
  4272  0001C8  5186               	movf	(GLCD_Line@Yinc+1)& (0+255),w,b
  4273  0001CA  238E               	addwfc	(GLCD_Line@CurrentY+1)& (0+255),f,b
  4274                           
  4275                           ;graphic.c: 99: TwoDxAccumulatedError -= TwoDx;
  4276  0001CC  5187               	movf	GLCD_Line@TwoDx& (0+255),w,b
  4277  0001CE  5F7F               	subwf	GLCD_Line@TwoDxAccumulatedError& (0+255),f,b
  4278  0001D0  5188               	movf	(GLCD_Line@TwoDx+1)& (0+255),w,b
  4279  0001D2  5B80               	subwfb	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),f,b
  4280  0001D4                     l475:
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;graphic.c: 100: }
  4284                           ;graphic.c: 101: GLCD_SetPixel(CurrentX,CurrentY, color);
  4285                           
  4286                           ; BSR set to: 0
  4287  0001D4  C08D  F06E         	movff	GLCD_Line@CurrentY,GLCD_SetPixel@y
  4288  0001D8  0E81               	movlw	low _color
  4289  0001DA  6EF6               	movwf	tblptrl,c
  4290  0001DC                     	if	1	;There is more than 1 active tblptr byte
  4291  0001DC  0EFF               	movlw	high _color
  4292  0001DE  6EF7               	movwf	tblptrh,c
  4293  0001E0                     	endif
  4294  0001E0                     	if	1	;There are 3 active tblptr bytes
  4295  0001E0  0E00               	movlw	low (_color shr (0+16))
  4296  0001E2  6EF8               	movwf	tblptru,c
  4297  0001E4                     	endif
  4298  0001E4  0008               	tblrd		*
  4299  0001E6  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  4300  0001EA  518B               	movf	GLCD_Line@CurrentX& (0+255),w,b
  4301  0001EC  EC2B  F003         	call	_GLCD_SetPixel
  4302                           
  4303                           ;graphic.c: 102: }while (CurrentX != X2);
  4304  0001F0  0100               	movlb	0	; () banked
  4305  0001F2  5179               	movf	GLCD_Line@X2& (0+255),w,b
  4306  0001F4  198B               	xorwf	GLCD_Line@CurrentX& (0+255),w,b
  4307  0001F6  E1D4               	bnz	l3328
  4308  0001F8  517A               	movf	(GLCD_Line@X2+1)& (0+255),w,b
  4309  0001FA  198C               	xorwf	(GLCD_Line@CurrentX+1)& (0+255),w,b
  4310  0001FC  B4D8               	btfsc	status,2,c
  4311  0001FE  0012               	return	
  4312  000200  D7CF               	goto	l474
  4313  000202                     l473:
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;graphic.c: 104: else
  4317                           ;graphic.c: 105: {
  4318                           ;graphic.c: 106: TwoDyAccumulatedError = 0;
  4319                           
  4320                           ; BSR set to: 0
  4321  000202  0E00               	movlw	0
  4322  000204  6F82               	movwf	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),b
  4323  000206  0E00               	movlw	0
  4324  000208  6F81               	movwf	GLCD_Line@TwoDyAccumulatedError& (0+255),b
  4325  00020A                     l3342:
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;graphic.c: 108: {
  4329                           ;graphic.c: 109: CurrentY += Yinc;
  4330  00020A  5185               	movf	GLCD_Line@Yinc& (0+255),w,b
  4331  00020C  278D               	addwf	GLCD_Line@CurrentY& (0+255),f,b
  4332  00020E  5186               	movf	(GLCD_Line@Yinc+1)& (0+255),w,b
  4333  000210  238E               	addwfc	(GLCD_Line@CurrentY+1)& (0+255),f,b
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;graphic.c: 110: TwoDyAccumulatedError += TwoDx;
  4337  000212  5187               	movf	GLCD_Line@TwoDx& (0+255),w,b
  4338  000214  2781               	addwf	GLCD_Line@TwoDyAccumulatedError& (0+255),f,b
  4339  000216  5188               	movf	(GLCD_Line@TwoDx+1)& (0+255),w,b
  4340  000218  2382               	addwfc	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),f,b
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;graphic.c: 111: if(TwoDyAccumulatedError>Dy)
  4344  00021A  5181               	movf	GLCD_Line@TwoDyAccumulatedError& (0+255),w,b
  4345  00021C  5D91               	subwf	GLCD_Line@Dy& (0+255),w,b
  4346  00021E  5192               	movf	(GLCD_Line@Dy+1)& (0+255),w,b
  4347  000220  0A80               	xorlw	128
  4348  000222  6F7D               	movwf	??_GLCD_Line& (0+255),b
  4349  000224  5182               	movf	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),w,b
  4350  000226  0A80               	xorlw	128
  4351  000228  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  4352  00022A  B0D8               	btfsc	status,0,c
  4353  00022C  D008               	goto	l479
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;graphic.c: 112: {
  4357                           ;graphic.c: 113: CurrentX += Xinc;
  4358  00022E  5183               	movf	GLCD_Line@Xinc& (0+255),w,b
  4359  000230  278B               	addwf	GLCD_Line@CurrentX& (0+255),f,b
  4360  000232  5184               	movf	(GLCD_Line@Xinc+1)& (0+255),w,b
  4361  000234  238C               	addwfc	(GLCD_Line@CurrentX+1)& (0+255),f,b
  4362                           
  4363                           ;graphic.c: 114: TwoDyAccumulatedError -= TwoDy;
  4364  000236  5189               	movf	GLCD_Line@TwoDy& (0+255),w,b
  4365  000238  5F81               	subwf	GLCD_Line@TwoDyAccumulatedError& (0+255),f,b
  4366  00023A  518A               	movf	(GLCD_Line@TwoDy+1)& (0+255),w,b
  4367  00023C  5B82               	subwfb	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),f,b
  4368  00023E                     l479:
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;graphic.c: 115: }
  4372                           ;graphic.c: 116: GLCD_SetPixel(CurrentX,CurrentY, color);
  4373                           
  4374                           ; BSR set to: 0
  4375  00023E  C08D  F06E         	movff	GLCD_Line@CurrentY,GLCD_SetPixel@y
  4376  000242  0E81               	movlw	low _color
  4377  000244  6EF6               	movwf	tblptrl,c
  4378  000246                     	if	1	;There is more than 1 active tblptr byte
  4379  000246  0EFF               	movlw	high _color
  4380  000248  6EF7               	movwf	tblptrh,c
  4381  00024A                     	endif
  4382  00024A                     	if	1	;There are 3 active tblptr bytes
  4383  00024A  0E00               	movlw	low (_color shr (0+16))
  4384  00024C  6EF8               	movwf	tblptru,c
  4385  00024E                     	endif
  4386  00024E  0008               	tblrd		*
  4387  000250  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  4388  000254  518B               	movf	GLCD_Line@CurrentX& (0+255),w,b
  4389  000256  EC2B  F003         	call	_GLCD_SetPixel
  4390                           
  4391                           ;graphic.c: 117: }while (CurrentY != Y2);
  4392  00025A  0100               	movlb	0	; () banked
  4393  00025C  517B               	movf	GLCD_Line@Y2& (0+255),w,b
  4394  00025E  198D               	xorwf	GLCD_Line@CurrentY& (0+255),w,b
  4395  000260  E1D4               	bnz	l3342
  4396  000262  517C               	movf	(GLCD_Line@Y2+1)& (0+255),w,b
  4397  000264  198E               	xorwf	(GLCD_Line@CurrentY+1)& (0+255),w,b
  4398  000266  B4D8               	btfsc	status,2,c
  4399  000268  0012               	return	
  4400  00026A  D7CF               	goto	l478
  4401  00026C                     __end_of_GLCD_Line:
  4402                           	opt stack 0
  4403                           tblptru	equ	0xFF8
  4404                           tblptrh	equ	0xFF7
  4405                           tblptrl	equ	0xFF6
  4406                           tablat	equ	0xFF5
  4407                           prodh	equ	0xFF4
  4408                           prodl	equ	0xFF3
  4409                           intcon	equ	0xFF2
  4410                           indf0	equ	0xFEF
  4411                           postinc0	equ	0xFEE
  4412                           fsr0h	equ	0xFEA
  4413                           fsr0l	equ	0xFE9
  4414                           wreg	equ	0xFE8
  4415                           indf2	equ	0xFDF
  4416                           fsr2h	equ	0xFDA
  4417                           fsr2l	equ	0xFD9
  4418                           status	equ	0xFD8
  4419                           
  4420 ;; *************** function _GLCD_SetPixel *****************
  4421 ;; Defined at:
  4422 ;;		line 78 in file "ks0108lib/KS0108.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;  x               1    wreg     unsigned char 
  4425 ;;  y               1   14[BANK0 ] unsigned char 
  4426 ;;  color           1   15[BANK0 ] unsigned char 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  x               1   19[BANK0 ] unsigned char 
  4429 ;;  tmp             1   18[BANK0 ] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      void 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4439 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4440 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4441 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4442 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4443 ;;Total ram usage:        7 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:   13
  4446 ;; This function calls:
  4447 ;;		_GLCD_GoTo
  4448 ;;		_GLCD_ReadData
  4449 ;;		_GLCD_WriteData
  4450 ;;		___awdiv
  4451 ;; This function is called by:
  4452 ;;		_GLCD_Line
  4453 ;;		_GLCD_Rectangle
  4454 ;;		_GLCD_Circle
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text26
  4459  000656                     __ptext26:
  4460                           	opt stack 0
  4461  000656                     _GLCD_SetPixel:
  4462                           	opt stack 15
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;incstack = 0
  4466                           ;GLCD_SetPixel@x stored from wreg
  4467  000656  0100               	movlb	0	; () banked
  4468  000658  6F73               	movwf	GLCD_SetPixel@x& (0+255),b
  4469                           
  4470                           ;KS0108.c: 80: unsigned char tmp;
  4471                           ;KS0108.c: 81: GLCD_GoTo(x, (y / 8));
  4472  00065A  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  4473  00065E  0100               	movlb	0	; () banked
  4474  000660  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4475  000662  0E00               	movlw	0
  4476  000664  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4477  000666  0E08               	movlw	8
  4478  000668  6F62               	movwf	___awdiv@divisor& (0+255),b
  4479  00066A  ECA3  F004         	call	___awdiv	;wreg free
  4480  00066E  0100               	movlb	0	; () banked
  4481  000670  5160               	movf	?___awdiv& (0+255),w,b
  4482  000672  6F74               	movwf	_GLCD_SetPixel$1733& (0+255),b
  4483                           
  4484                           ;KS0108.c: 80: unsigned char tmp;
  4485                           ;KS0108.c: 81: GLCD_GoTo(x, (y / 8));
  4486  000674  C074  F06B         	movff	_GLCD_SetPixel$1733,GLCD_GoTo@y
  4487  000678  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  4488  00067A  EC1B  F004         	call	_GLCD_GoTo
  4489                           
  4490                           ;KS0108.c: 82: tmp = GLCD_ReadData();
  4491  00067E  EC1E  F006         	call	_GLCD_ReadData	;wreg free
  4492  000682  0100               	movlb	0	; () banked
  4493  000684  6F72               	movwf	GLCD_SetPixel@tmp& (0+255),b
  4494                           
  4495                           ;KS0108.c: 83: GLCD_GoTo(x, (y / 8));
  4496  000686  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  4497  00068A  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4498  00068C  0E00               	movlw	0
  4499  00068E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4500  000690  0E08               	movlw	8
  4501  000692  6F62               	movwf	___awdiv@divisor& (0+255),b
  4502  000694  ECA3  F004         	call	___awdiv	;wreg free
  4503  000698  0100               	movlb	0	; () banked
  4504  00069A  5160               	movf	?___awdiv& (0+255),w,b
  4505  00069C  6F74               	movwf	_GLCD_SetPixel$1733& (0+255),b
  4506                           
  4507                           ;KS0108.c: 83: GLCD_GoTo(x, (y / 8));
  4508  00069E  C074  F06B         	movff	_GLCD_SetPixel$1733,GLCD_GoTo@y
  4509  0006A2  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  4510  0006A4  EC1B  F004         	call	_GLCD_GoTo
  4511                           
  4512                           ;KS0108.c: 84: tmp = GLCD_ReadData();
  4513  0006A8  EC1E  F006         	call	_GLCD_ReadData	;wreg free
  4514  0006AC  0100               	movlb	0	; () banked
  4515  0006AE  6F72               	movwf	GLCD_SetPixel@tmp& (0+255),b
  4516                           
  4517                           ;KS0108.c: 85: GLCD_GoTo(x, (y / 8));
  4518  0006B0  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  4519  0006B4  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4520  0006B6  0E00               	movlw	0
  4521  0006B8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4522  0006BA  0E08               	movlw	8
  4523  0006BC  6F62               	movwf	___awdiv@divisor& (0+255),b
  4524  0006BE  ECA3  F004         	call	___awdiv	;wreg free
  4525  0006C2  0100               	movlb	0	; () banked
  4526  0006C4  5160               	movf	?___awdiv& (0+255),w,b
  4527  0006C6  6F74               	movwf	_GLCD_SetPixel$1733& (0+255),b
  4528                           
  4529                           ;KS0108.c: 85: GLCD_GoTo(x, (y / 8));
  4530  0006C8  C074  F06B         	movff	_GLCD_SetPixel$1733,GLCD_GoTo@y
  4531  0006CC  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  4532  0006CE  EC1B  F004         	call	_GLCD_GoTo
  4533                           
  4534                           ;KS0108.c: 86: tmp |= (1 << (y % 8));
  4535  0006D2  C06E  F070         	movff	GLCD_SetPixel@y,??_GLCD_SetPixel
  4536  0006D6  0E07               	movlw	7
  4537  0006D8  0100               	movlb	0	; () banked
  4538  0006DA  1770               	andwf	??_GLCD_SetPixel& (0+255),f,b
  4539  0006DC  0E01               	movlw	1
  4540  0006DE  6F71               	movwf	(??_GLCD_SetPixel+1)& (0+255),b
  4541  0006E0  2B70               	incf	??_GLCD_SetPixel& (0+255),f,b
  4542  0006E2  D002               	goto	u1594
  4543  0006E4                     u1595:
  4544  0006E4  90D8               	bcf	status,0,c
  4545  0006E6  3771               	rlcf	(??_GLCD_SetPixel+1)& (0+255),f,b
  4546  0006E8                     u1594:
  4547  0006E8  2F70               	decfsz	??_GLCD_SetPixel& (0+255),f,b
  4548  0006EA  D7FC               	goto	u1595
  4549  0006EC  0100               	movlb	0	; () banked
  4550  0006EE  5171               	movf	(??_GLCD_SetPixel+1)& (0+255),w,b
  4551  0006F0  1372               	iorwf	GLCD_SetPixel@tmp& (0+255),f,b
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;KS0108.c: 87: GLCD_WriteData(tmp);
  4555  0006F2  5172               	movf	GLCD_SetPixel@tmp& (0+255),w,b
  4556  0006F4  ECE2  F005         	call	_GLCD_WriteData
  4557  0006F8  0012               	return		;funcret
  4558  0006FA                     __end_of_GLCD_SetPixel:
  4559                           	opt stack 0
  4560                           tblptru	equ	0xFF8
  4561                           tblptrh	equ	0xFF7
  4562                           tblptrl	equ	0xFF6
  4563                           tablat	equ	0xFF5
  4564                           prodh	equ	0xFF4
  4565                           prodl	equ	0xFF3
  4566                           intcon	equ	0xFF2
  4567                           indf0	equ	0xFEF
  4568                           postinc0	equ	0xFEE
  4569                           fsr0h	equ	0xFEA
  4570                           fsr0l	equ	0xFE9
  4571                           wreg	equ	0xFE8
  4572                           indf2	equ	0xFDF
  4573                           fsr2h	equ	0xFDA
  4574                           fsr2l	equ	0xFD9
  4575                           status	equ	0xFD8
  4576                           
  4577 ;; *************** function _GLCD_ReadData *****************
  4578 ;; Defined at:
  4579 ;;		line 94 in file "ks0108lib/KS0108-PIC18.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  data            1    9[BANK0 ] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      unsigned char 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4595 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4596 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4597 ;;Total ram usage:        2 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:   11
  4600 ;; This function calls:
  4601 ;;		_GLCD_Delay
  4602 ;;		_GLCD_DisableController
  4603 ;;		_GLCD_EnableController
  4604 ;;		_GLCD_ReadStatus
  4605 ;;		___awdiv
  4606 ;; This function is called by:
  4607 ;;		_GLCD_SetPixel
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text27
  4612  000C3C                     __ptext27:
  4613                           	opt stack 0
  4614  000C3C                     _GLCD_ReadData:
  4615                           	opt stack 16
  4616                           
  4617                           ;KS0108-PIC18.c: 96: unsigned char data;
  4618                           ;KS0108-PIC18.c: 97: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  4619                           
  4620                           ;incstack = 0
  4621  000C3C  C0A8  F060         	movff	_screen_x,___awdiv@dividend
  4622  000C40  0100               	movlb	0	; () banked
  4623  000C42  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4624  000C44  0E00               	movlw	0
  4625  000C46  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4626  000C48  0E40               	movlw	64
  4627  000C4A  6F62               	movwf	___awdiv@divisor& (0+255),b
  4628  000C4C  ECA3  F004         	call	___awdiv	;wreg free
  4629  000C50  0100               	movlb	0	; () banked
  4630  000C52  5160               	movf	?___awdiv& (0+255),w,b
  4631  000C54  EC1D  F00A         	call	_GLCD_ReadStatus
  4632  000C58  0100               	movlb	0	; () banked
  4633  000C5A  6F68               	movwf	??_GLCD_ReadData& (0+255),b
  4634  000C5C  BF68               	btfsc	??_GLCD_ReadData& (0+255),7,b
  4635  000C5E  D7EE               	goto	_GLCD_ReadData
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;KS0108-PIC18.c: 98: TRISC = 0xFF;
  4639  000C60  6894               	setf	3988,c	;volatile
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;KS0108-PIC18.c: 99: PORTA |= ((1 << 1) | (1 << 2));
  4643  000C62  0E06               	movlw	6
  4644  000C64  1280               	iorwf	3968,f,c	;volatile
  4645                           
  4646                           ; BSR set to: 0
  4647                           ;KS0108-PIC18.c: 100: GLCD_EnableController(screen_x / 64);
  4648  000C66  C0A8  F060         	movff	_screen_x,___awdiv@dividend
  4649  000C6A  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4650  000C6C  0E00               	movlw	0
  4651  000C6E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4652  000C70  0E40               	movlw	64
  4653  000C72  6F62               	movwf	___awdiv@divisor& (0+255),b
  4654  000C74  ECA3  F004         	call	___awdiv	;wreg free
  4655  000C78  0100               	movlb	0	; () banked
  4656  000C7A  5160               	movf	?___awdiv& (0+255),w,b
  4657  000C7C  EC33  F00A         	call	_GLCD_EnableController
  4658                           
  4659                           ;KS0108-PIC18.c: 102: PORTA |= (1 << 3);
  4660  000C80  8680               	bsf	3968,3,c	;volatile
  4661                           
  4662                           ;KS0108-PIC18.c: 103: GLCD_Delay();
  4663  000C82  EC28  F00B         	call	_GLCD_Delay	;wreg free
  4664                           
  4665                           ;KS0108-PIC18.c: 104: data = PORTC;
  4666  000C86  CF82 F069          	movff	3970,GLCD_ReadData@data	;volatile
  4667                           
  4668                           ;KS0108-PIC18.c: 105: PORTA &= ~(1 << 3);
  4669  000C8A  9680               	bcf	3968,3,c	;volatile
  4670                           
  4671                           ;KS0108-PIC18.c: 106: GLCD_DisableController(screen_x / 64);
  4672  000C8C  C0A8  F060         	movff	_screen_x,___awdiv@dividend
  4673  000C90  0100               	movlb	0	; () banked
  4674  000C92  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4675  000C94  0E00               	movlw	0
  4676  000C96  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4677  000C98  0E40               	movlw	64
  4678  000C9A  6F62               	movwf	___awdiv@divisor& (0+255),b
  4679  000C9C  ECA3  F004         	call	___awdiv	;wreg free
  4680  000CA0  0100               	movlb	0	; () banked
  4681  000CA2  5160               	movf	?___awdiv& (0+255),w,b
  4682  000CA4  EC48  F00A         	call	_GLCD_DisableController
  4683                           
  4684                           ;KS0108-PIC18.c: 107: screen_x++;
  4685  000CA8  0100               	movlb	0	; () banked
  4686  000CAA  2BA8               	incf	_screen_x& (0+255),f,b
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;KS0108-PIC18.c: 108: return data;
  4690  000CAC  5169               	movf	GLCD_ReadData@data& (0+255),w,b
  4691  000CAE  0012               	return	
  4692  000CB0                     __end_of_GLCD_ReadData:
  4693                           	opt stack 0
  4694                           tblptru	equ	0xFF8
  4695                           tblptrh	equ	0xFF7
  4696                           tblptrl	equ	0xFF6
  4697                           tablat	equ	0xFF5
  4698                           prodh	equ	0xFF4
  4699                           prodl	equ	0xFF3
  4700                           intcon	equ	0xFF2
  4701                           indf0	equ	0xFEF
  4702                           postinc0	equ	0xFEE
  4703                           fsr0h	equ	0xFEA
  4704                           fsr0l	equ	0xFE9
  4705                           wreg	equ	0xFE8
  4706                           indf2	equ	0xFDF
  4707                           fsr2h	equ	0xFDA
  4708                           fsr2l	equ	0xFD9
  4709                           status	equ	0xFD8
  4710                           
  4711 ;; *************** function _GLCD_ClearScreen *****************
  4712 ;; Defined at:
  4713 ;;		line 43 in file "ks0108lib/KS0108.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;		None
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  j               1   15[BANK0 ] unsigned char 
  4718 ;;  i               1   14[BANK0 ] unsigned char 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      void 
  4721 ;; Registers used:
  4722 ;;		wreg, status,2, status,0, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4729 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4731 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4732 ;;Total ram usage:        2 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:   13
  4735 ;; This function calls:
  4736 ;;		_GLCD_GoTo
  4737 ;;		_GLCD_WriteData
  4738 ;; This function is called by:
  4739 ;;		_main
  4740 ;;		_Initialize_Menus
  4741 ;;		_Draw_runTime_Menu
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text28
  4746  0013A2                     __ptext28:
  4747                           	opt stack 0
  4748  0013A2                     _GLCD_ClearScreen:
  4749                           	opt stack 16
  4750                           
  4751                           ;KS0108.c: 45: unsigned char i, j;
  4752                           ;KS0108.c: 46: for(j = 0; j < 64/8; j++)
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;incstack = 0
  4756  0013A2  0E00               	movlw	0
  4757  0013A4  0100               	movlb	0	; () banked
  4758  0013A6  6F6F               	movwf	GLCD_ClearScreen@j& (0+255),b
  4759  0013A8                     l3276:
  4760                           
  4761                           ; BSR set to: 0
  4762  0013A8  0E07               	movlw	7
  4763  0013AA  656F               	cpfsgt	GLCD_ClearScreen@j& (0+255),b
  4764  0013AC  D001               	goto	l510
  4765  0013AE  0012               	return	
  4766  0013B0                     l510:
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;KS0108.c: 47: {
  4770                           ;KS0108.c: 48: GLCD_GoTo(0,j);
  4771                           
  4772                           ; BSR set to: 0
  4773  0013B0  C06F  F06B         	movff	GLCD_ClearScreen@j,GLCD_GoTo@y
  4774  0013B4  0E00               	movlw	0
  4775  0013B6  EC1B  F004         	call	_GLCD_GoTo
  4776                           
  4777                           ;KS0108.c: 49: for(i = 0; i < 128; i++)
  4778  0013BA  0E00               	movlw	0
  4779  0013BC  0100               	movlb	0	; () banked
  4780  0013BE  6F6E               	movwf	GLCD_ClearScreen@i& (0+255),b
  4781  0013C0                     l3284:
  4782                           
  4783                           ; BSR set to: 0
  4784  0013C0  0E7F               	movlw	127
  4785  0013C2  656E               	cpfsgt	GLCD_ClearScreen@i& (0+255),b
  4786  0013C4  D001               	goto	l512
  4787  0013C6  D006               	goto	u1820
  4788  0013C8                     l512:
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;KS0108.c: 50: GLCD_WriteData(0x00);
  4792                           
  4793                           ; BSR set to: 0
  4794  0013C8  0E00               	movlw	0
  4795  0013CA  ECE2  F005         	call	_GLCD_WriteData
  4796  0013CE  0100               	movlb	0	; () banked
  4797  0013D0  2B6E               	incf	GLCD_ClearScreen@i& (0+255),f,b
  4798  0013D2  D7F6               	goto	l3284
  4799  0013D4                     u1820:
  4800                           
  4801                           ; BSR set to: 0
  4802                           
  4803                           ; BSR set to: 0
  4804  0013D4  2B6F               	incf	GLCD_ClearScreen@j& (0+255),f,b
  4805  0013D6  D7E8               	goto	l3276
  4806  0013D8                     __end_of_GLCD_ClearScreen:
  4807                           	opt stack 0
  4808                           tblptru	equ	0xFF8
  4809                           tblptrh	equ	0xFF7
  4810                           tblptrl	equ	0xFF6
  4811                           tablat	equ	0xFF5
  4812                           prodh	equ	0xFF4
  4813                           prodl	equ	0xFF3
  4814                           intcon	equ	0xFF2
  4815                           indf0	equ	0xFEF
  4816                           postinc0	equ	0xFEE
  4817                           fsr0h	equ	0xFEA
  4818                           fsr0l	equ	0xFE9
  4819                           wreg	equ	0xFE8
  4820                           indf2	equ	0xFDF
  4821                           fsr2h	equ	0xFDA
  4822                           fsr2l	equ	0xFD9
  4823                           status	equ	0xFD8
  4824                           
  4825 ;; *************** function _Draw_Arrow *****************
  4826 ;; Defined at:
  4827 ;;		line 51 in file "screen_controls.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, status,2, status,0, cstack
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4845 ;;Total ram usage:        0 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:   14
  4848 ;; This function calls:
  4849 ;;		_Clear_Arrow_Column
  4850 ;;		_Clear_runTime_Arrows
  4851 ;;		_Draw_runTime_Arrow
  4852 ;;		_GLCD_GoTo
  4853 ;;		_Make_Arrow
  4854 ;; This function is called by:
  4855 ;;		_main
  4856 ;;		_Check_Buttons
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text29
  4861  0011EA                     __ptext29:
  4862                           	opt stack 0
  4863  0011EA                     _Draw_Arrow:
  4864                           	opt stack 16
  4865                           
  4866                           ;screen_controls.c: 55: switch(currentContext)
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;incstack = 0
  4870  0011EA  D019               	goto	l645
  4871  0011EC                     
  4872                           ;screen_controls.c: 58: Clear_Arrow_Column();
  4873  0011EC  ECFD  F006         	call	_Clear_Arrow_Column	;wreg free
  4874                           
  4875                           ;screen_controls.c: 59: GLCD_GoTo(0, mainState);
  4876  0011F0  C041  F06B         	movff	_mainState,GLCD_GoTo@y
  4877  0011F4  0E00               	movlw	0
  4878  0011F6  EC1B  F004         	call	_GLCD_GoTo
  4879                           
  4880                           ;screen_controls.c: 60: Make_Arrow();
  4881  0011FA  ECF1  F00A         	call	_Make_Arrow	;wreg free
  4882                           
  4883                           ;screen_controls.c: 61: break;
  4884  0011FE  0012               	return	
  4885  001200                     
  4886                           ;screen_controls.c: 64: Clear_runTime_Arrows();
  4887  001200  EC28  F005         	call	_Clear_runTime_Arrows	;wreg free
  4888                           
  4889                           ;screen_controls.c: 65: Draw_runTime_Arrow();
  4890  001204  EC58  F006         	call	_Draw_runTime_Arrow	;wreg free
  4891                           
  4892                           ;screen_controls.c: 66: break;
  4893  001208  0012               	return	
  4894  00120A                     
  4895                           ;screen_controls.c: 69: Clear_Arrow_Column();
  4896  00120A  ECFD  F006         	call	_Clear_Arrow_Column	;wreg free
  4897                           
  4898                           ;screen_controls.c: 70: GLCD_GoTo(0, mainState);
  4899  00120E  C041  F06B         	movff	_mainState,GLCD_GoTo@y
  4900  001212  0E00               	movlw	0
  4901  001214  EC1B  F004         	call	_GLCD_GoTo
  4902                           
  4903                           ;screen_controls.c: 71: Make_Arrow();
  4904  001218  ECF1  F00A         	call	_Make_Arrow	;wreg free
  4905                           
  4906                           ;screen_controls.c: 73: }
  4907                           
  4908                           ;screen_controls.c: 72: break;
  4909  00121C  0012               	return	
  4910  00121E                     l645:
  4911  00121E  5040               	movf	_currentContext,w,c
  4912                           
  4913                           ; Switch size 1, requested type "space"
  4914                           ; Number of cases is 2, Range of values is 0 to 1
  4915                           ; switch strategies available:
  4916                           ; Name         Instructions Cycles
  4917                           ; simple_byte            7     4 (average)
  4918                           ;	Chosen strategy is simple_byte
  4919  001220  0A00               	xorlw	0	; case 0
  4920  001222  B4D8               	btfsc	status,2,c
  4921  001224  D7E3               	goto	l646
  4922  001226  0A01               	xorlw	1	; case 1
  4923  001228  B4D8               	btfsc	status,2,c
  4924  00122A  D7EA               	goto	l648
  4925  00122C  D7EE               	goto	l649
  4926  00122E                     __end_of_Draw_Arrow:
  4927                           	opt stack 0
  4928                           tblptru	equ	0xFF8
  4929                           tblptrh	equ	0xFF7
  4930                           tblptrl	equ	0xFF6
  4931                           tablat	equ	0xFF5
  4932                           prodh	equ	0xFF4
  4933                           prodl	equ	0xFF3
  4934                           intcon	equ	0xFF2
  4935                           indf0	equ	0xFEF
  4936                           postinc0	equ	0xFEE
  4937                           fsr0h	equ	0xFEA
  4938                           fsr0l	equ	0xFE9
  4939                           wreg	equ	0xFE8
  4940                           indf2	equ	0xFDF
  4941                           fsr2h	equ	0xFDA
  4942                           fsr2l	equ	0xFD9
  4943                           status	equ	0xFD8
  4944                           
  4945 ;; *************** function _Draw_runTime_Arrow *****************
  4946 ;; Defined at:
  4947 ;;		line 169 in file "screen_controls.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;		None
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;		None
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, status,2, status,0, cstack
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4965 ;;Total ram usage:        0 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:   13
  4968 ;; This function calls:
  4969 ;;		_GLCD_GoTo
  4970 ;;		_Make_Arrow
  4971 ;; This function is called by:
  4972 ;;		_Draw_Arrow
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text30
  4977  000CB0                     __ptext30:
  4978                           	opt stack 0
  4979  000CB0                     _Draw_runTime_Arrow:
  4980                           	opt stack 16
  4981                           
  4982                           ;screen_controls.c: 171: switch(runTimeContext)
  4983                           
  4984                           ;incstack = 0
  4985  000CB0  D02C               	goto	l682
  4986  000CB2                     
  4987                           ;screen_controls.c: 174: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  4988  000CB2  0E02               	movlw	2
  4989  000CB4  0100               	movlb	0	; () banked
  4990  000CB6  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4991  000CB8  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  4992  000CBA  0800               	sublw	0
  4993  000CBC  25AC               	addwf	_runTimeX& (0+255),w,b
  4994  000CBE  EC1B  F004         	call	_GLCD_GoTo
  4995                           
  4996                           ;screen_controls.c: 175: Make_Arrow();
  4997  000CC2  ECF1  F00A         	call	_Make_Arrow	;wreg free
  4998                           
  4999                           ;screen_controls.c: 176: break;
  5000  000CC6  0012               	return	
  5001  000CC8                     
  5002                           ;screen_controls.c: 179: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  5003  000CC8  0E04               	movlw	4
  5004  000CCA  0100               	movlb	0	; () banked
  5005  000CCC  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5006  000CCE  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  5007  000CD0  0800               	sublw	0
  5008  000CD2  25AC               	addwf	_runTimeX& (0+255),w,b
  5009  000CD4  EC1B  F004         	call	_GLCD_GoTo
  5010                           
  5011                           ;screen_controls.c: 180: Make_Arrow();
  5012  000CD8  ECF1  F00A         	call	_Make_Arrow	;wreg free
  5013                           
  5014                           ;screen_controls.c: 181: break;
  5015  000CDC  0012               	return	
  5016  000CDE                     
  5017                           ;screen_controls.c: 184: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  5018  000CDE  0E06               	movlw	6
  5019  000CE0  0100               	movlb	0	; () banked
  5020  000CE2  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5021  000CE4  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  5022  000CE6  0800               	sublw	0
  5023  000CE8  25AC               	addwf	_runTimeX& (0+255),w,b
  5024  000CEA  EC1B  F004         	call	_GLCD_GoTo
  5025                           
  5026                           ;screen_controls.c: 185: Make_Arrow();
  5027  000CEE  ECF1  F00A         	call	_Make_Arrow	;wreg free
  5028                           
  5029                           ;screen_controls.c: 187: break;
  5030                           
  5031                           ;screen_controls.c: 186: break;
  5032  000CF2  0012               	return	
  5033  000CF4                     
  5034                           ;screen_controls.c: 190: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  5035  000CF4  0E02               	movlw	2
  5036  000CF6  0100               	movlb	0	; () banked
  5037  000CF8  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5038  000CFA  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  5039  000CFC  0800               	sublw	0
  5040  000CFE  25AC               	addwf	_runTimeX& (0+255),w,b
  5041  000D00  EC1B  F004         	call	_GLCD_GoTo
  5042                           
  5043                           ;screen_controls.c: 191: Make_Arrow();
  5044  000D04  ECF1  F00A         	call	_Make_Arrow	;wreg free
  5045                           
  5046                           ;screen_controls.c: 195: }
  5047                           
  5048                           ;screen_controls.c: 192: break;
  5049  000D08  0012               	return	
  5050  000D0A                     l682:
  5051  000D0A  503F               	movf	_runTimeContext,w,c
  5052                           
  5053                           ; Switch size 1, requested type "space"
  5054                           ; Number of cases is 3, Range of values is 0 to 2
  5055                           ; switch strategies available:
  5056                           ; Name         Instructions Cycles
  5057                           ; simple_byte           10     6 (average)
  5058                           ;	Chosen strategy is simple_byte
  5059  000D0C  0A00               	xorlw	0	; case 0
  5060  000D0E  B4D8               	btfsc	status,2,c
  5061  000D10  D7D0               	goto	l683
  5062  000D12  0A01               	xorlw	1	; case 1
  5063  000D14  B4D8               	btfsc	status,2,c
  5064  000D16  D7D8               	goto	l685
  5065  000D18  0A03               	xorlw	3	; case 2
  5066  000D1A  B4D8               	btfsc	status,2,c
  5067  000D1C  D7E0               	goto	l686
  5068  000D1E  D7EA               	goto	l687
  5069  000D20                     __end_of_Draw_runTime_Arrow:
  5070                           	opt stack 0
  5071                           tblptru	equ	0xFF8
  5072                           tblptrh	equ	0xFF7
  5073                           tblptrl	equ	0xFF6
  5074                           tablat	equ	0xFF5
  5075                           prodh	equ	0xFF4
  5076                           prodl	equ	0xFF3
  5077                           intcon	equ	0xFF2
  5078                           indf0	equ	0xFEF
  5079                           postinc0	equ	0xFEE
  5080                           fsr0h	equ	0xFEA
  5081                           fsr0l	equ	0xFE9
  5082                           wreg	equ	0xFE8
  5083                           indf2	equ	0xFDF
  5084                           fsr2h	equ	0xFDA
  5085                           fsr2l	equ	0xFD9
  5086                           status	equ	0xFD8
  5087                           
  5088 ;; *************** function _Make_Arrow *****************
  5089 ;; Defined at:
  5090 ;;		line 78 in file "screen_controls.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;		None
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;		None
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  1    wreg      void 
  5097 ;; Registers used:
  5098 ;;		wreg, status,2, status,0, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5108 ;;Total ram usage:        0 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:   12
  5111 ;; This function calls:
  5112 ;;		_GLCD_WriteData
  5113 ;; This function is called by:
  5114 ;;		_Draw_Arrow
  5115 ;;		_Draw_runTime_Arrow
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           	psect	text31
  5120  0015E2                     __ptext31:
  5121                           	opt stack 0
  5122  0015E2                     _Make_Arrow:
  5123                           	opt stack 17
  5124                           
  5125                           ;screen_controls.c: 80: GLCD_WriteData(0x7E);
  5126                           
  5127                           ;incstack = 0
  5128  0015E2  0E7E               	movlw	126
  5129  0015E4  ECE2  F005         	call	_GLCD_WriteData
  5130                           
  5131                           ;screen_controls.c: 81: GLCD_WriteData(0x3C);
  5132  0015E8  0E3C               	movlw	60
  5133  0015EA  ECE2  F005         	call	_GLCD_WriteData
  5134                           
  5135                           ;screen_controls.c: 82: GLCD_WriteData(0x18);
  5136  0015EE  0E18               	movlw	24
  5137  0015F0  ECE2  F005         	call	_GLCD_WriteData
  5138  0015F4  0012               	return		;funcret
  5139  0015F6                     __end_of_Make_Arrow:
  5140                           	opt stack 0
  5141                           tblptru	equ	0xFF8
  5142                           tblptrh	equ	0xFF7
  5143                           tblptrl	equ	0xFF6
  5144                           tablat	equ	0xFF5
  5145                           prodh	equ	0xFF4
  5146                           prodl	equ	0xFF3
  5147                           intcon	equ	0xFF2
  5148                           indf0	equ	0xFEF
  5149                           postinc0	equ	0xFEE
  5150                           fsr0h	equ	0xFEA
  5151                           fsr0l	equ	0xFE9
  5152                           wreg	equ	0xFE8
  5153                           indf2	equ	0xFDF
  5154                           fsr2h	equ	0xFDA
  5155                           fsr2l	equ	0xFD9
  5156                           status	equ	0xFD8
  5157                           
  5158 ;; *************** function _Clear_runTime_Arrows *****************
  5159 ;; Defined at:
  5160 ;;		line 144 in file "screen_controls.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;		None
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  i               1   14[BANK0 ] unsigned char 
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  1    wreg      void 
  5167 ;; Registers used:
  5168 ;;		wreg, status,2, status,0, cstack
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5175 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5177 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5178 ;;Total ram usage:        1 bytes
  5179 ;; Hardware stack levels used:    1
  5180 ;; Hardware stack levels required when called:   13
  5181 ;; This function calls:
  5182 ;;		_GLCD_GoTo
  5183 ;;		_GLCD_WriteData
  5184 ;; This function is called by:
  5185 ;;		_Draw_Arrow
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           	psect	text32
  5190  000A50                     __ptext32:
  5191                           	opt stack 0
  5192  000A50                     _Clear_runTime_Arrows:
  5193                           	opt stack 16
  5194                           
  5195                           ;screen_controls.c: 146: unsigned char i=0;
  5196                           
  5197                           ;incstack = 0
  5198  000A50  0E00               	movlw	0
  5199  000A52  0100               	movlb	0	; () banked
  5200  000A54  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;screen_controls.c: 148: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  5204  000A56  0E02               	movlw	2
  5205  000A58  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5206  000A5A  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  5207  000A5C  0800               	sublw	0
  5208  000A5E  25AC               	addwf	_runTimeX& (0+255),w,b
  5209  000A60  EC1B  F004         	call	_GLCD_GoTo
  5210                           
  5211                           ;screen_controls.c: 150: for(i=0; i<ARROW_SIZE; i++)
  5212  000A64  0E00               	movlw	0
  5213  000A66  0100               	movlb	0	; () banked
  5214  000A68  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  5215  000A6A  D005               	goto	l670
  5216  000A6C                     
  5217                           ; BSR set to: 0
  5218                           ;screen_controls.c: 151: {
  5219                           ;screen_controls.c: 152: GLCD_WriteData(0x00);
  5220                           
  5221                           ; BSR set to: 0
  5222  000A6C  0E00               	movlw	0
  5223  000A6E  ECE2  F005         	call	_GLCD_WriteData
  5224  000A72  0100               	movlb	0	; () banked
  5225  000A74  2B6E               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  5226  000A76                     l670:
  5227                           
  5228                           ; BSR set to: 0
  5229                           
  5230                           ; BSR set to: 0
  5231  000A76  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  5232  000A78  5D6E               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  5233  000A7A  A0D8               	btfss	status,0,c
  5234  000A7C  D7F7               	goto	l671
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;screen_controls.c: 153: }
  5238                           ;screen_controls.c: 155: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  5239                           
  5240                           ; BSR set to: 0
  5241  000A7E  0E04               	movlw	4
  5242  000A80  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5243  000A82  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  5244  000A84  0800               	sublw	0
  5245  000A86  25AC               	addwf	_runTimeX& (0+255),w,b
  5246  000A88  EC1B  F004         	call	_GLCD_GoTo
  5247                           
  5248                           ;screen_controls.c: 156: for(i=0; i<ARROW_SIZE; i++)
  5249  000A8C  0E00               	movlw	0
  5250  000A8E  0100               	movlb	0	; () banked
  5251  000A90  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  5252  000A92  D005               	goto	l673
  5253  000A94                     
  5254                           ; BSR set to: 0
  5255                           ;screen_controls.c: 157: {
  5256                           ;screen_controls.c: 158: GLCD_WriteData(0x00);
  5257                           
  5258                           ; BSR set to: 0
  5259  000A94  0E00               	movlw	0
  5260  000A96  ECE2  F005         	call	_GLCD_WriteData
  5261  000A9A  0100               	movlb	0	; () banked
  5262  000A9C  2B6E               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  5263  000A9E                     l673:
  5264                           
  5265                           ; BSR set to: 0
  5266                           
  5267                           ; BSR set to: 0
  5268  000A9E  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  5269  000AA0  5D6E               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  5270  000AA2  A0D8               	btfss	status,0,c
  5271  000AA4  D7F7               	goto	l674
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;screen_controls.c: 159: }
  5275                           ;screen_controls.c: 161: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  5276                           
  5277                           ; BSR set to: 0
  5278  000AA6  0E06               	movlw	6
  5279  000AA8  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5280  000AAA  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  5281  000AAC  0800               	sublw	0
  5282  000AAE  25AC               	addwf	_runTimeX& (0+255),w,b
  5283  000AB0  EC1B  F004         	call	_GLCD_GoTo
  5284                           
  5285                           ;screen_controls.c: 162: for(i=0; i<ARROW_SIZE; i++)
  5286  000AB4  0E00               	movlw	0
  5287  000AB6  0100               	movlb	0	; () banked
  5288  000AB8  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  5289  000ABA  D005               	goto	l676
  5290  000ABC                     
  5291                           ; BSR set to: 0
  5292                           ;screen_controls.c: 163: {
  5293                           ;screen_controls.c: 164: GLCD_WriteData(0x00);
  5294                           
  5295                           ; BSR set to: 0
  5296  000ABC  0E00               	movlw	0
  5297  000ABE  ECE2  F005         	call	_GLCD_WriteData
  5298  000AC2  0100               	movlb	0	; () banked
  5299  000AC4  2B6E               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  5300  000AC6                     l676:
  5301                           
  5302                           ; BSR set to: 0
  5303                           
  5304                           ; BSR set to: 0
  5305  000AC6  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  5306  000AC8  5D6E               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  5307  000ACA  B0D8               	btfsc	status,0,c
  5308  000ACC  0012               	return	
  5309  000ACE  D7F6               	goto	l677
  5310  000AD0                     __end_of_Clear_runTime_Arrows:
  5311                           	opt stack 0
  5312                           tblptru	equ	0xFF8
  5313                           tblptrh	equ	0xFF7
  5314                           tblptrl	equ	0xFF6
  5315                           tablat	equ	0xFF5
  5316                           prodh	equ	0xFF4
  5317                           prodl	equ	0xFF3
  5318                           intcon	equ	0xFF2
  5319                           indf0	equ	0xFEF
  5320                           postinc0	equ	0xFEE
  5321                           fsr0h	equ	0xFEA
  5322                           fsr0l	equ	0xFE9
  5323                           wreg	equ	0xFE8
  5324                           indf2	equ	0xFDF
  5325                           fsr2h	equ	0xFDA
  5326                           fsr2l	equ	0xFD9
  5327                           status	equ	0xFD8
  5328                           
  5329 ;; *************** function _Clear_Arrow_Column *****************
  5330 ;; Defined at:
  5331 ;;		line 98 in file "screen_controls.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  i               1   22[BANK0 ] unsigned char 
  5336 ;;  j               1   21[BANK0 ] unsigned char 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  1    wreg      void 
  5339 ;; Registers used:
  5340 ;;		wreg, status,2, status,0, cstack
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5347 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5348 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5349 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5350 ;;Total ram usage:        9 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; Hardware stack levels required when called:   13
  5353 ;; This function calls:
  5354 ;;		_GLCD_GoTo
  5355 ;;		_GLCD_WriteData
  5356 ;; This function is called by:
  5357 ;;		_Draw_Arrow
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text33
  5362  000DFA                     __ptext33:
  5363                           	opt stack 0
  5364  000DFA                     _Clear_Arrow_Column:
  5365                           	opt stack 16
  5366                           
  5367                           ;screen_controls.c: 100: unsigned char i, j;
  5368                           ;screen_controls.c: 102: for(i = 0; i < 64/8; i++)
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;incstack = 0
  5372  000DFA  0E00               	movlw	0
  5373  000DFC  0100               	movlb	0	; () banked
  5374  000DFE  6F76               	movwf	Clear_Arrow_Column@i& (0+255),b
  5375  000E00                     l3356:
  5376                           
  5377                           ; BSR set to: 0
  5378  000E00  0E07               	movlw	7
  5379  000E02  6576               	cpfsgt	Clear_Arrow_Column@i& (0+255),b
  5380  000E04  D001               	goto	l659
  5381  000E06  0012               	return	
  5382  000E08                     l659:
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;screen_controls.c: 103: {
  5386                           ;screen_controls.c: 104: GLCD_GoTo(0, i);
  5387                           
  5388                           ; BSR set to: 0
  5389  000E08  C076  F06B         	movff	Clear_Arrow_Column@i,GLCD_GoTo@y
  5390  000E0C  0E00               	movlw	0
  5391  000E0E  EC1B  F004         	call	_GLCD_GoTo
  5392                           
  5393                           ;screen_controls.c: 106: for(j = 0; j < (xMenuStart - 1); j++)
  5394  000E12  0E00               	movlw	0
  5395  000E14  0100               	movlb	0	; () banked
  5396  000E16  6F75               	movwf	Clear_Arrow_Column@j& (0+255),b
  5397  000E18  D005               	goto	l661
  5398  000E1A                     
  5399                           ; BSR set to: 0
  5400                           ;screen_controls.c: 107: {
  5401                           ;screen_controls.c: 108: GLCD_WriteData(0x00);
  5402                           
  5403                           ; BSR set to: 0
  5404  000E1A  0E00               	movlw	0
  5405  000E1C  ECE2  F005         	call	_GLCD_WriteData
  5406  000E20  0100               	movlb	0	; () banked
  5407  000E22  2B75               	incf	Clear_Arrow_Column@j& (0+255),f,b
  5408  000E24                     l661:
  5409                           
  5410                           ; BSR set to: 0
  5411                           
  5412                           ; BSR set to: 0
  5413  000E24  0EFF               	movlw	255
  5414  000E26  6F6E               	movwf	??_Clear_Arrow_Column& (0+255),b
  5415  000E28  0EFF               	movlw	255
  5416  000E2A  6F6F               	movwf	(??_Clear_Arrow_Column+1)& (0+255),b
  5417  000E2C  51AA               	movf	_xMenuStart& (0+255),w,b
  5418  000E2E  6F70               	movwf	(??_Clear_Arrow_Column+2)& (0+255),b
  5419  000E30  6B71               	clrf	(??_Clear_Arrow_Column+3)& (0+255),b
  5420  000E32  516E               	movf	??_Clear_Arrow_Column& (0+255),w,b
  5421  000E34  2770               	addwf	(??_Clear_Arrow_Column+2)& (0+255),f,b
  5422  000E36  516F               	movf	(??_Clear_Arrow_Column+1)& (0+255),w,b
  5423  000E38  2371               	addwfc	(??_Clear_Arrow_Column+3)& (0+255),f,b
  5424  000E3A  5175               	movf	Clear_Arrow_Column@j& (0+255),w,b
  5425  000E3C  6F72               	movwf	(??_Clear_Arrow_Column+4)& (0+255),b
  5426  000E3E  6B73               	clrf	(??_Clear_Arrow_Column+5)& (0+255),b
  5427  000E40  5170               	movf	(??_Clear_Arrow_Column+2)& (0+255),w,b
  5428  000E42  5D72               	subwf	(??_Clear_Arrow_Column+4)& (0+255),w,b
  5429  000E44  5173               	movf	(??_Clear_Arrow_Column+5)& (0+255),w,b
  5430  000E46  0A80               	xorlw	128
  5431  000E48  6F74               	movwf	(??_Clear_Arrow_Column+6)& (0+255),b
  5432  000E4A  5171               	movf	(??_Clear_Arrow_Column+3)& (0+255),w,b
  5433  000E4C  0A80               	xorlw	128
  5434  000E4E  5974               	subwfb	(??_Clear_Arrow_Column+6)& (0+255),w,b
  5435  000E50  A0D8               	btfss	status,0,c
  5436  000E52  D7E3               	goto	l662
  5437                           
  5438                           ; BSR set to: 0
  5439                           
  5440                           ; BSR set to: 0
  5441  000E54  2B76               	incf	Clear_Arrow_Column@i& (0+255),f,b
  5442  000E56  D7D4               	goto	l3356
  5443  000E58                     __end_of_Clear_Arrow_Column:
  5444                           	opt stack 0
  5445                           tblptru	equ	0xFF8
  5446                           tblptrh	equ	0xFF7
  5447                           tblptrl	equ	0xFF6
  5448                           tablat	equ	0xFF5
  5449                           prodh	equ	0xFF4
  5450                           prodl	equ	0xFF3
  5451                           intcon	equ	0xFF2
  5452                           indf0	equ	0xFEF
  5453                           postinc0	equ	0xFEE
  5454                           fsr0h	equ	0xFEA
  5455                           fsr0l	equ	0xFE9
  5456                           wreg	equ	0xFE8
  5457                           indf2	equ	0xFDF
  5458                           fsr2h	equ	0xFDA
  5459                           fsr2l	equ	0xFD9
  5460                           status	equ	0xFD8
  5461                           
  5462 ;; *************** function _GLCD_WriteData *****************
  5463 ;; Defined at:
  5464 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  dataToWrite     1    wreg     unsigned char 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  dataToWrite     1    9[BANK0 ] unsigned char 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  1    wreg      void 
  5471 ;; Registers used:
  5472 ;;		wreg, status,2, status,0, cstack
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5480 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5481 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5482 ;;Total ram usage:        2 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:   11
  5485 ;; This function calls:
  5486 ;;		_GLCD_Delay
  5487 ;;		_GLCD_DisableController
  5488 ;;		_GLCD_EnableController
  5489 ;;		_GLCD_ReadStatus
  5490 ;;		___awdiv
  5491 ;; This function is called by:
  5492 ;;		_GLCD_ClearScreen
  5493 ;;		_GLCD_WriteChar
  5494 ;;		_GLCD_SetPixel
  5495 ;;		_Make_Arrow
  5496 ;;		_Make_Back_Arrow
  5497 ;;		_Clear_Arrow_Column
  5498 ;;		_Clear_runTime_Arrows
  5499 ;;		_GLCD_Bitmap
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text34
  5504  000BC4                     __ptext34:
  5505                           	opt stack 0
  5506  000BC4                     _GLCD_WriteData:
  5507                           	opt stack 16
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;incstack = 0
  5511                           ;GLCD_WriteData@dataToWrite stored from wreg
  5512  000BC4  0100               	movlb	0	; () banked
  5513  000BC6  6F69               	movwf	GLCD_WriteData@dataToWrite& (0+255),b
  5514  000BC8                     
  5515                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  5516  000BC8  C0A8  F060         	movff	_screen_x,___awdiv@dividend
  5517  000BCC  0100               	movlb	0	; () banked
  5518  000BCE  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  5519  000BD0  0E00               	movlw	0
  5520  000BD2  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5521  000BD4  0E40               	movlw	64
  5522  000BD6  6F62               	movwf	___awdiv@divisor& (0+255),b
  5523  000BD8  ECA3  F004         	call	___awdiv	;wreg free
  5524  000BDC  0100               	movlb	0	; () banked
  5525  000BDE  5160               	movf	?___awdiv& (0+255),w,b
  5526  000BE0  EC1D  F00A         	call	_GLCD_ReadStatus
  5527  000BE4  0100               	movlb	0	; () banked
  5528  000BE6  6F68               	movwf	??_GLCD_WriteData& (0+255),b
  5529  000BE8  BF68               	btfsc	??_GLCD_WriteData& (0+255),7,b
  5530  000BEA  D7EE               	goto	l2934
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;KS0108-PIC18.c: 116: TRISC = 0x00;
  5534                           
  5535                           ; BSR set to: 0
  5536  000BEC  0E00               	movlw	0
  5537  000BEE  6E94               	movwf	3988,c	;volatile
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
  5541  000BF0  9280               	bcf	3968,1,c	;volatile
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
  5545  000BF2  8480               	bsf	3968,2,c	;volatile
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;KS0108-PIC18.c: 119: PORTC = dataToWrite;
  5549  000BF4  C069  FF82         	movff	GLCD_WriteData@dataToWrite,3970	;volatile
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
  5553  000BF8  C0A8  F060         	movff	_screen_x,___awdiv@dividend
  5554  000BFC  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  5555  000BFE  0E00               	movlw	0
  5556  000C00  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5557  000C02  0E40               	movlw	64
  5558  000C04  6F62               	movwf	___awdiv@divisor& (0+255),b
  5559  000C06  ECA3  F004         	call	___awdiv	;wreg free
  5560  000C0A  0100               	movlb	0	; () banked
  5561  000C0C  5160               	movf	?___awdiv& (0+255),w,b
  5562  000C0E  EC33  F00A         	call	_GLCD_EnableController
  5563                           
  5564                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
  5565  000C12  8680               	bsf	3968,3,c	;volatile
  5566                           
  5567                           ;KS0108-PIC18.c: 122: GLCD_Delay();
  5568  000C14  EC28  F00B         	call	_GLCD_Delay	;wreg free
  5569                           
  5570                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
  5571  000C18  9680               	bcf	3968,3,c	;volatile
  5572                           
  5573                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
  5574  000C1A  C0A8  F060         	movff	_screen_x,___awdiv@dividend
  5575  000C1E  0100               	movlb	0	; () banked
  5576  000C20  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  5577  000C22  0E00               	movlw	0
  5578  000C24  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5579  000C26  0E40               	movlw	64
  5580  000C28  6F62               	movwf	___awdiv@divisor& (0+255),b
  5581  000C2A  ECA3  F004         	call	___awdiv	;wreg free
  5582  000C2E  0100               	movlb	0	; () banked
  5583  000C30  5160               	movf	?___awdiv& (0+255),w,b
  5584  000C32  EC48  F00A         	call	_GLCD_DisableController
  5585                           
  5586                           ;KS0108-PIC18.c: 125: screen_x++;
  5587  000C36  0100               	movlb	0	; () banked
  5588  000C38  2BA8               	incf	_screen_x& (0+255),f,b
  5589                           
  5590                           ; BSR set to: 0
  5591  000C3A  0012               	return		;funcret
  5592  000C3C                     __end_of_GLCD_WriteData:
  5593                           	opt stack 0
  5594                           tblptru	equ	0xFF8
  5595                           tblptrh	equ	0xFF7
  5596                           tblptrl	equ	0xFF6
  5597                           tablat	equ	0xFF5
  5598                           prodh	equ	0xFF4
  5599                           prodl	equ	0xFF3
  5600                           intcon	equ	0xFF2
  5601                           indf0	equ	0xFEF
  5602                           postinc0	equ	0xFEE
  5603                           fsr0h	equ	0xFEA
  5604                           fsr0l	equ	0xFE9
  5605                           wreg	equ	0xFE8
  5606                           indf2	equ	0xFDF
  5607                           fsr2h	equ	0xFDA
  5608                           fsr2l	equ	0xFD9
  5609                           status	equ	0xFD8
  5610                           
  5611 ;; *************** function _GLCD_GoTo *****************
  5612 ;; Defined at:
  5613 ;;		line 25 in file "ks0108lib/KS0108.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  x               1    wreg     unsigned char 
  5616 ;;  y               1   11[BANK0 ] unsigned char 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  x               1   12[BANK0 ] unsigned char 
  5619 ;;  i               1   13[BANK0 ] unsigned char 
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		wreg, status,2, status,0, cstack
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5629 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5630 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5632 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5633 ;;Total ram usage:        3 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:   12
  5636 ;; This function calls:
  5637 ;;		_GLCD_WriteCommand
  5638 ;;		___awdiv
  5639 ;; This function is called by:
  5640 ;;		_GLCD_ClearScreen
  5641 ;;		_GLCD_SetPixel
  5642 ;;		_Initialize_Menus
  5643 ;;		_Draw_Arrow
  5644 ;;		_Clear_Arrow_Column
  5645 ;;		_Draw_runTime_Menu
  5646 ;;		_Clear_runTime_Arrows
  5647 ;;		_Draw_runTime_Arrow
  5648 ;;		_GLCD_Bitmap
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text35
  5653  000836                     __ptext35:
  5654                           	opt stack 0
  5655  000836                     _GLCD_GoTo:
  5656                           	opt stack 15
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;incstack = 0
  5660                           ;GLCD_GoTo@x stored from wreg
  5661  000836  0100               	movlb	0	; () banked
  5662  000838  6F6C               	movwf	GLCD_GoTo@x& (0+255),b
  5663                           
  5664                           ;KS0108.c: 27: unsigned char i;
  5665                           ;KS0108.c: 28: screen_x = x;
  5666  00083A  C06C  F0A8         	movff	GLCD_GoTo@x,_screen_x
  5667                           
  5668                           ;KS0108.c: 29: screen_y = y;
  5669  00083E  C06B  F0A7         	movff	GLCD_GoTo@y,_screen_y
  5670                           
  5671                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
  5672  000842  0E00               	movlw	0
  5673  000844  0100               	movlb	0	; () banked
  5674  000846  6F6D               	movwf	GLCD_GoTo@i& (0+255),b
  5675  000848                     l2922:
  5676                           
  5677                           ; BSR set to: 0
  5678  000848  0E01               	movlw	1
  5679  00084A  656D               	cpfsgt	GLCD_GoTo@i& (0+255),b
  5680  00084C  D001               	goto	l505
  5681  00084E  D014               	goto	u1420
  5682  000850                     l505:
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;KS0108.c: 32: {
  5686                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
  5687                           
  5688                           ; BSR set to: 0
  5689  000850  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  5690  000854  0E40               	movlw	64
  5691  000856  ECB5  F009         	call	_GLCD_WriteCommand
  5692                           
  5693                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
  5694  00085A  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  5695  00085E  0100               	movlb	0	; () banked
  5696  000860  516B               	movf	GLCD_GoTo@y& (0+255),w,b
  5697  000862  09B8               	iorlw	184
  5698  000864  ECB5  F009         	call	_GLCD_WriteCommand
  5699                           
  5700                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
  5701  000868  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  5702  00086C  0EC0               	movlw	192
  5703  00086E  ECB5  F009         	call	_GLCD_WriteCommand
  5704  000872  0100               	movlb	0	; () banked
  5705  000874  2B6D               	incf	GLCD_GoTo@i& (0+255),f,b
  5706  000876  D7E8               	goto	l2922
  5707  000878                     u1420:
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;KS0108.c: 36: }
  5711                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
  5712                           
  5713                           ; BSR set to: 0
  5714  000878  C06C  F060         	movff	GLCD_GoTo@x,___awdiv@dividend
  5715  00087C  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  5716  00087E  0E00               	movlw	0
  5717  000880  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5718  000882  0E40               	movlw	64
  5719  000884  6F62               	movwf	___awdiv@divisor& (0+255),b
  5720  000886  ECA3  F004         	call	___awdiv	;wreg free
  5721  00088A  0100               	movlb	0	; () banked
  5722  00088C  5160               	movf	?___awdiv& (0+255),w,b
  5723  00088E  6F68               	movwf	GLCD_WriteCommand@controller& (0+255),b
  5724  000890  516C               	movf	GLCD_GoTo@x& (0+255),w,b
  5725  000892  0B3F               	andlw	63
  5726  000894  0940               	iorlw	64
  5727  000896  ECB5  F009         	call	_GLCD_WriteCommand
  5728                           
  5729                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
  5730  00089A  C06C  F060         	movff	GLCD_GoTo@x,___awdiv@dividend
  5731  00089E  0100               	movlb	0	; () banked
  5732  0008A0  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  5733  0008A2  0E00               	movlw	0
  5734  0008A4  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5735  0008A6  0E40               	movlw	64
  5736  0008A8  6F62               	movwf	___awdiv@divisor& (0+255),b
  5737  0008AA  ECA3  F004         	call	___awdiv	;wreg free
  5738  0008AE  0100               	movlb	0	; () banked
  5739  0008B0  5160               	movf	?___awdiv& (0+255),w,b
  5740  0008B2  6F68               	movwf	GLCD_WriteCommand@controller& (0+255),b
  5741  0008B4  516B               	movf	GLCD_GoTo@y& (0+255),w,b
  5742  0008B6  09B8               	iorlw	184
  5743  0008B8  ECB5  F009         	call	_GLCD_WriteCommand
  5744  0008BC  0012               	return		;funcret
  5745  0008BE                     __end_of_GLCD_GoTo:
  5746                           	opt stack 0
  5747                           tblptru	equ	0xFF8
  5748                           tblptrh	equ	0xFF7
  5749                           tblptrl	equ	0xFF6
  5750                           tablat	equ	0xFF5
  5751                           prodh	equ	0xFF4
  5752                           prodl	equ	0xFF3
  5753                           intcon	equ	0xFF2
  5754                           indf0	equ	0xFEF
  5755                           postinc0	equ	0xFEE
  5756                           fsr0h	equ	0xFEA
  5757                           fsr0l	equ	0xFE9
  5758                           wreg	equ	0xFE8
  5759                           indf2	equ	0xFDF
  5760                           fsr2h	equ	0xFDA
  5761                           fsr2l	equ	0xFD9
  5762                           status	equ	0xFD8
  5763                           
  5764 ;; *************** function ___awdiv *****************
  5765 ;; Defined at:
  5766 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  dividend        2    0[BANK0 ] int 
  5769 ;;  divisor         2    2[BANK0 ] int 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;  quotient        2    6[BANK0 ] int 
  5772 ;;  sign            1    5[BANK0 ] unsigned char 
  5773 ;;  counter         1    4[BANK0 ] unsigned char 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  2    0[BANK0 ] int 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5783 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5784 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5786 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5787 ;;Total ram usage:        8 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    9
  5790 ;; This function calls:
  5791 ;;		Nothing
  5792 ;; This function is called by:
  5793 ;;		_GLCD_GoTo
  5794 ;;		_GLCD_SetPixel
  5795 ;;		_GLCD_ReadData
  5796 ;;		_GLCD_WriteData
  5797 ;;		_GLCD_Bitmap
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           	psect	text36
  5802  000946                     __ptext36:
  5803                           	opt stack 0
  5804  000946                     ___awdiv:
  5805                           	opt stack 17
  5806                           
  5807                           ;incstack = 0
  5808  000946  0E00               	movlw	0
  5809  000948  0100               	movlb	0	; () banked
  5810  00094A  6F65               	movwf	___awdiv@sign& (0+255),b
  5811                           
  5812                           ; BSR set to: 0
  5813  00094C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5814  00094E  D006               	goto	l856
  5815                           
  5816                           ; BSR set to: 0
  5817  000950  6D62               	negf	___awdiv@divisor& (0+255),b
  5818  000952  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5819  000954  B0D8               	btfsc	status,0,c
  5820  000956  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5821                           
  5822                           ; BSR set to: 0
  5823  000958  0E01               	movlw	1
  5824  00095A  6F65               	movwf	___awdiv@sign& (0+255),b
  5825  00095C                     l856:
  5826                           
  5827                           ; BSR set to: 0
  5828                           
  5829                           ; BSR set to: 0
  5830  00095C  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5831  00095E  D006               	goto	l857
  5832                           
  5833                           ; BSR set to: 0
  5834  000960  6D60               	negf	___awdiv@dividend& (0+255),b
  5835  000962  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5836  000964  B0D8               	btfsc	status,0,c
  5837  000966  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5838                           
  5839                           ; BSR set to: 0
  5840  000968  0E01               	movlw	1
  5841  00096A  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  5842  00096C                     l857:
  5843                           
  5844                           ; BSR set to: 0
  5845                           
  5846                           ; BSR set to: 0
  5847  00096C  0E00               	movlw	0
  5848  00096E  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  5849  000970  0E00               	movlw	0
  5850  000972  6F66               	movwf	___awdiv@quotient& (0+255),b
  5851                           
  5852                           ; BSR set to: 0
  5853  000974  5162               	movf	___awdiv@divisor& (0+255),w,b
  5854  000976  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5855  000978  B4D8               	btfsc	status,2,c
  5856  00097A  D01C               	goto	l864
  5857                           
  5858                           ; BSR set to: 0
  5859  00097C  0E01               	movlw	1
  5860  00097E  6F64               	movwf	___awdiv@counter& (0+255),b
  5861  000980  D004               	goto	l859
  5862  000982                     
  5863                           ; BSR set to: 0
  5864                           
  5865                           ; BSR set to: 0
  5866  000982  90D8               	bcf	status,0,c
  5867  000984  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  5868  000986  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5869  000988  2B64               	incf	___awdiv@counter& (0+255),f,b
  5870  00098A                     l859:
  5871                           
  5872                           ; BSR set to: 0
  5873                           
  5874                           ; BSR set to: 0
  5875  00098A  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5876  00098C  D7FA               	goto	l860
  5877  00098E                     u1360:
  5878                           
  5879                           ; BSR set to: 0
  5880                           
  5881                           ; BSR set to: 0
  5882                           
  5883                           ; BSR set to: 0
  5884  00098E  90D8               	bcf	status,0,c
  5885  000990  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  5886  000992  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5887                           
  5888                           ; BSR set to: 0
  5889  000994  5162               	movf	___awdiv@divisor& (0+255),w,b
  5890  000996  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  5891  000998  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5892  00099A  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5893  00099C  A0D8               	btfss	status,0,c
  5894  00099E  D005               	goto	l863
  5895                           
  5896                           ; BSR set to: 0
  5897  0009A0  5162               	movf	___awdiv@divisor& (0+255),w,b
  5898  0009A2  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  5899  0009A4  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5900  0009A6  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5901                           
  5902                           ; BSR set to: 0
  5903  0009A8  8166               	bsf	___awdiv@quotient& (0+255),0,b
  5904  0009AA                     l863:
  5905                           
  5906                           ; BSR set to: 0
  5907                           
  5908                           ; BSR set to: 0
  5909  0009AA  90D8               	bcf	status,0,c
  5910  0009AC  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5911  0009AE  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  5912                           
  5913                           ; BSR set to: 0
  5914  0009B0  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  5915  0009B2  D7ED               	goto	u1360
  5916  0009B4                     l864:
  5917                           
  5918                           ; BSR set to: 0
  5919                           
  5920                           ; BSR set to: 0
  5921                           
  5922                           ; BSR set to: 0
  5923  0009B4  5165               	movf	___awdiv@sign& (0+255),w,b
  5924  0009B6  B4D8               	btfsc	status,2,c
  5925  0009B8  D004               	goto	l865
  5926                           
  5927                           ; BSR set to: 0
  5928  0009BA  6D66               	negf	___awdiv@quotient& (0+255),b
  5929  0009BC  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5930  0009BE  B0D8               	btfsc	status,0,c
  5931  0009C0  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5932  0009C2                     l865:
  5933                           
  5934                           ; BSR set to: 0
  5935                           
  5936                           ; BSR set to: 0
  5937  0009C2  C066  F060         	movff	___awdiv@quotient,?___awdiv
  5938  0009C6  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  5939  0009CA  0012               	return	
  5940  0009CC                     __end_of___awdiv:
  5941                           	opt stack 0
  5942                           tblptru	equ	0xFF8
  5943                           tblptrh	equ	0xFF7
  5944                           tblptrl	equ	0xFF6
  5945                           tablat	equ	0xFF5
  5946                           prodh	equ	0xFF4
  5947                           prodl	equ	0xFF3
  5948                           intcon	equ	0xFF2
  5949                           indf0	equ	0xFEF
  5950                           postinc0	equ	0xFEE
  5951                           fsr0h	equ	0xFEA
  5952                           fsr0l	equ	0xFE9
  5953                           wreg	equ	0xFE8
  5954                           indf2	equ	0xFDF
  5955                           fsr2h	equ	0xFDA
  5956                           fsr2l	equ	0xFD9
  5957                           status	equ	0xFD8
  5958                           
  5959 ;; *************** function _GLCD_WriteCommand *****************
  5960 ;; Defined at:
  5961 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  commandToWri    1    wreg     unsigned char 
  5964 ;;  controller      1    8[BANK0 ] unsigned char 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;  commandToWri    1   10[BANK0 ] unsigned char 
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  1    wreg      void 
  5969 ;; Registers used:
  5970 ;;		wreg, status,2, status,0, cstack
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5976 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5978 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5979 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;Total ram usage:        3 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:   11
  5983 ;; This function calls:
  5984 ;;		_GLCD_Delay
  5985 ;;		_GLCD_DisableController
  5986 ;;		_GLCD_EnableController
  5987 ;;		_GLCD_ReadStatus
  5988 ;; This function is called by:
  5989 ;;		_GLCD_Initalize
  5990 ;;		_GLCD_GoTo
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           	psect	text37
  5995  00136A                     __ptext37:
  5996                           	opt stack 0
  5997  00136A                     _GLCD_WriteCommand:
  5998                           	opt stack 15
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;incstack = 0
  6002                           ;GLCD_WriteCommand@commandToWrite stored from wreg
  6003  00136A  0100               	movlb	0	; () banked
  6004  00136C  6F6A               	movwf	GLCD_WriteCommand@commandToWrite& (0+255),b
  6005  00136E                     
  6006                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
  6007  00136E  0100               	movlb	0	; () banked
  6008  001370  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  6009  001372  EC1D  F00A         	call	_GLCD_ReadStatus
  6010  001376  0100               	movlb	0	; () banked
  6011  001378  6F69               	movwf	??_GLCD_WriteCommand& (0+255),b
  6012  00137A  BF69               	btfsc	??_GLCD_WriteCommand& (0+255),7,b
  6013  00137C  D7F8               	goto	l2808
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;KS0108-PIC18.c: 82: TRISC = 0x00;
  6017                           
  6018                           ; BSR set to: 0
  6019  00137E  0E00               	movlw	0
  6020  001380  6E94               	movwf	3988,c	;volatile
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
  6024  001382  0EF9               	movlw	249
  6025  001384  1680               	andwf	3968,f,c	;volatile
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
  6029  001386  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  6030  001388  EC33  F00A         	call	_GLCD_EnableController
  6031                           
  6032                           ;KS0108-PIC18.c: 85: PORTC = commandToWrite;
  6033  00138C  C06A  FF82         	movff	GLCD_WriteCommand@commandToWrite,3970	;volatile
  6034                           
  6035                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
  6036  001390  8680               	bsf	3968,3,c	;volatile
  6037                           
  6038                           ;KS0108-PIC18.c: 87: GLCD_Delay();
  6039  001392  EC28  F00B         	call	_GLCD_Delay	;wreg free
  6040                           
  6041                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
  6042  001396  9680               	bcf	3968,3,c	;volatile
  6043                           
  6044                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
  6045  001398  0100               	movlb	0	; () banked
  6046  00139A  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  6047  00139C  EC48  F00A         	call	_GLCD_DisableController
  6048  0013A0  0012               	return		;funcret
  6049  0013A2                     __end_of_GLCD_WriteCommand:
  6050                           	opt stack 0
  6051                           tblptru	equ	0xFF8
  6052                           tblptrh	equ	0xFF7
  6053                           tblptrl	equ	0xFF6
  6054                           tablat	equ	0xFF5
  6055                           prodh	equ	0xFF4
  6056                           prodl	equ	0xFF3
  6057                           intcon	equ	0xFF2
  6058                           indf0	equ	0xFEF
  6059                           postinc0	equ	0xFEE
  6060                           fsr0h	equ	0xFEA
  6061                           fsr0l	equ	0xFE9
  6062                           wreg	equ	0xFE8
  6063                           indf2	equ	0xFDF
  6064                           fsr2h	equ	0xFDA
  6065                           fsr2l	equ	0xFD9
  6066                           status	equ	0xFD8
  6067                           
  6068 ;; *************** function _GLCD_ReadStatus *****************
  6069 ;; Defined at:
  6070 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  controller      1    wreg     unsigned char 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  controller      1    2[BANK0 ] unsigned char 
  6075 ;;  status          1    1[BANK0 ] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      unsigned char 
  6078 ;; Registers used:
  6079 ;;		wreg, status,2, status,0, cstack
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6086 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6088 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6089 ;;Total ram usage:        2 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:   10
  6092 ;; This function calls:
  6093 ;;		_GLCD_Delay
  6094 ;;		_GLCD_DisableController
  6095 ;;		_GLCD_EnableController
  6096 ;; This function is called by:
  6097 ;;		_GLCD_WriteCommand
  6098 ;;		_GLCD_ReadData
  6099 ;;		_GLCD_WriteData
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text38
  6104  00143A                     __ptext38:
  6105                           	opt stack 0
  6106  00143A                     _GLCD_ReadStatus:
  6107                           	opt stack 16
  6108                           
  6109                           ;incstack = 0
  6110                           ;GLCD_ReadStatus@controller stored from wreg
  6111  00143A  0100               	movlb	0	; () banked
  6112  00143C  6F62               	movwf	GLCD_ReadStatus@controller& (0+255),b
  6113                           
  6114                           ;KS0108-PIC18.c: 64: unsigned char status;
  6115                           ;KS0108-PIC18.c: 65: TRISC = 0xFF;
  6116  00143E  6894               	setf	3988,c	;volatile
  6117                           
  6118                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
  6119  001440  8280               	bsf	3968,1,c	;volatile
  6120                           
  6121                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
  6122  001442  9480               	bcf	3968,2,c	;volatile
  6123                           
  6124                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
  6125  001444  0100               	movlb	0	; () banked
  6126  001446  5162               	movf	GLCD_ReadStatus@controller& (0+255),w,b
  6127  001448  EC33  F00A         	call	_GLCD_EnableController
  6128                           
  6129                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
  6130  00144C  8680               	bsf	3968,3,c	;volatile
  6131                           
  6132                           ;KS0108-PIC18.c: 70: GLCD_Delay();
  6133  00144E  EC28  F00B         	call	_GLCD_Delay	;wreg free
  6134                           
  6135                           ;KS0108-PIC18.c: 71: status = PORTC;
  6136  001452  CF82 F061          	movff	3970,GLCD_ReadStatus@status	;volatile
  6137                           
  6138                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
  6139  001456  9680               	bcf	3968,3,c	;volatile
  6140                           
  6141                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
  6142  001458  0100               	movlb	0	; () banked
  6143  00145A  5162               	movf	GLCD_ReadStatus@controller& (0+255),w,b
  6144  00145C  EC48  F00A         	call	_GLCD_DisableController
  6145                           
  6146                           ;KS0108-PIC18.c: 74: return status;
  6147  001460  0100               	movlb	0	; () banked
  6148  001462  5161               	movf	GLCD_ReadStatus@status& (0+255),w,b
  6149  001464  0012               	return	
  6150  001466                     __end_of_GLCD_ReadStatus:
  6151                           	opt stack 0
  6152                           tblptru	equ	0xFF8
  6153                           tblptrh	equ	0xFF7
  6154                           tblptrl	equ	0xFF6
  6155                           tablat	equ	0xFF5
  6156                           prodh	equ	0xFF4
  6157                           prodl	equ	0xFF3
  6158                           intcon	equ	0xFF2
  6159                           indf0	equ	0xFEF
  6160                           postinc0	equ	0xFEE
  6161                           fsr0h	equ	0xFEA
  6162                           fsr0l	equ	0xFE9
  6163                           wreg	equ	0xFE8
  6164                           indf2	equ	0xFDF
  6165                           fsr2h	equ	0xFDA
  6166                           fsr2l	equ	0xFD9
  6167                           status	equ	0xFD8
  6168                           
  6169 ;; *************** function _GLCD_EnableController *****************
  6170 ;; Defined at:
  6171 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  controller      1    wreg     unsigned char 
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;  controller      1    0[BANK0 ] unsigned char 
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  1    wreg      void 
  6178 ;; Registers used:
  6179 ;;		wreg, status,2, status,0
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6188 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6189 ;;Total ram usage:        1 bytes
  6190 ;; Hardware stack levels used:    1
  6191 ;; Hardware stack levels required when called:    9
  6192 ;; This function calls:
  6193 ;;		Nothing
  6194 ;; This function is called by:
  6195 ;;		_GLCD_ReadStatus
  6196 ;;		_GLCD_WriteCommand
  6197 ;;		_GLCD_ReadData
  6198 ;;		_GLCD_WriteData
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           	psect	text39
  6203  001466                     __ptext39:
  6204                           	opt stack 0
  6205  001466                     _GLCD_EnableController:
  6206                           	opt stack 16
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;incstack = 0
  6210                           ;GLCD_EnableController@controller stored from wreg
  6211  001466  0100               	movlb	0	; () banked
  6212  001468  6F60               	movwf	GLCD_EnableController@controller& (0+255),b
  6213                           
  6214                           ;KS0108-PIC18.c: 41: switch(controller){
  6215  00146A  D006               	goto	l558
  6216  00146C  9A80               	bcf	3968,5,c	;volatile
  6217  00146E  0012               	return	
  6218  001470  9C80               	bcf	3968,6,c	;volatile
  6219  001472  0012               	return	
  6220  001474  9E80               	bcf	3968,7,c	;volatile
  6221                           
  6222                           ;KS0108-PIC18.c: 45: }
  6223  001476  0012               	return	
  6224  001478                     l558:
  6225  001478  0100               	movlb	0	; () banked
  6226  00147A  5160               	movf	GLCD_EnableController@controller& (0+255),w,b
  6227                           
  6228                           ; Switch size 1, requested type "space"
  6229                           ; Number of cases is 3, Range of values is 0 to 2
  6230                           ; switch strategies available:
  6231                           ; Name         Instructions Cycles
  6232                           ; simple_byte           10     6 (average)
  6233                           ;	Chosen strategy is simple_byte
  6234  00147C  0A00               	xorlw	0	; case 0
  6235  00147E  B4D8               	btfsc	status,2,c
  6236  001480  D7F5               	goto	l559
  6237  001482  0A01               	xorlw	1	; case 1
  6238  001484  B4D8               	btfsc	status,2,c
  6239  001486  D7F4               	goto	l561
  6240  001488  0A03               	xorlw	3	; case 2
  6241  00148A  A4D8               	btfss	status,2,c
  6242  00148C  0012               	return	
  6243  00148E  D7F2               	goto	l562
  6244  001490                     __end_of_GLCD_EnableController:
  6245                           	opt stack 0
  6246                           tblptru	equ	0xFF8
  6247                           tblptrh	equ	0xFF7
  6248                           tblptrl	equ	0xFF6
  6249                           tablat	equ	0xFF5
  6250                           prodh	equ	0xFF4
  6251                           prodl	equ	0xFF3
  6252                           intcon	equ	0xFF2
  6253                           indf0	equ	0xFEF
  6254                           postinc0	equ	0xFEE
  6255                           fsr0h	equ	0xFEA
  6256                           fsr0l	equ	0xFE9
  6257                           wreg	equ	0xFE8
  6258                           indf2	equ	0xFDF
  6259                           fsr2h	equ	0xFDA
  6260                           fsr2l	equ	0xFD9
  6261                           status	equ	0xFD8
  6262                           
  6263 ;; *************** function _GLCD_DisableController *****************
  6264 ;; Defined at:
  6265 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;  controller      1    wreg     unsigned char 
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;  controller      1    0[BANK0 ] unsigned char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, status,0
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6282 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6283 ;;Total ram usage:        1 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    9
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_GLCD_ReadStatus
  6290 ;;		_GLCD_WriteCommand
  6291 ;;		_GLCD_ReadData
  6292 ;;		_GLCD_WriteData
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           	psect	text40
  6297  001490                     __ptext40:
  6298                           	opt stack 0
  6299  001490                     _GLCD_DisableController:
  6300                           	opt stack 16
  6301                           
  6302                           ;incstack = 0
  6303                           ;GLCD_DisableController@controller stored from wreg
  6304  001490  0100               	movlb	0	; () banked
  6305  001492  6F60               	movwf	GLCD_DisableController@controller& (0+255),b
  6306                           
  6307                           ;KS0108-PIC18.c: 52: switch(controller)
  6308  001494  D006               	goto	l566
  6309  001496  8A80               	bsf	3968,5,c	;volatile
  6310  001498  0012               	return	
  6311  00149A  8C80               	bsf	3968,6,c	;volatile
  6312  00149C  0012               	return	
  6313  00149E  8E80               	bsf	3968,7,c	;volatile
  6314                           
  6315                           ;KS0108-PIC18.c: 57: }
  6316  0014A0  0012               	return	
  6317  0014A2                     l566:
  6318  0014A2  0100               	movlb	0	; () banked
  6319  0014A4  5160               	movf	GLCD_DisableController@controller& (0+255),w,b
  6320                           
  6321                           ; Switch size 1, requested type "space"
  6322                           ; Number of cases is 3, Range of values is 0 to 2
  6323                           ; switch strategies available:
  6324                           ; Name         Instructions Cycles
  6325                           ; simple_byte           10     6 (average)
  6326                           ;	Chosen strategy is simple_byte
  6327  0014A6  0A00               	xorlw	0	; case 0
  6328  0014A8  B4D8               	btfsc	status,2,c
  6329  0014AA  D7F5               	goto	l567
  6330  0014AC  0A01               	xorlw	1	; case 1
  6331  0014AE  B4D8               	btfsc	status,2,c
  6332  0014B0  D7F4               	goto	l569
  6333  0014B2  0A03               	xorlw	3	; case 2
  6334  0014B4  A4D8               	btfss	status,2,c
  6335  0014B6  0012               	return	
  6336  0014B8  D7F2               	goto	l570
  6337  0014BA                     __end_of_GLCD_DisableController:
  6338                           	opt stack 0
  6339                           tblptru	equ	0xFF8
  6340                           tblptrh	equ	0xFF7
  6341                           tblptrl	equ	0xFF6
  6342                           tablat	equ	0xFF5
  6343                           prodh	equ	0xFF4
  6344                           prodl	equ	0xFF3
  6345                           intcon	equ	0xFF2
  6346                           indf0	equ	0xFEF
  6347                           postinc0	equ	0xFEE
  6348                           fsr0h	equ	0xFEA
  6349                           fsr0l	equ	0xFE9
  6350                           wreg	equ	0xFE8
  6351                           indf2	equ	0xFDF
  6352                           fsr2h	equ	0xFDA
  6353                           fsr2l	equ	0xFD9
  6354                           status	equ	0xFD8
  6355                           
  6356 ;; *************** function _GLCD_Delay *****************
  6357 ;; Defined at:
  6358 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;		None
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;		None
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  1    wreg      void 
  6365 ;; Registers used:
  6366 ;;		None
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6376 ;;Total ram usage:        0 bytes
  6377 ;; Hardware stack levels used:    1
  6378 ;; Hardware stack levels required when called:    9
  6379 ;; This function calls:
  6380 ;;		Nothing
  6381 ;; This function is called by:
  6382 ;;		_GLCD_ReadStatus
  6383 ;;		_GLCD_WriteCommand
  6384 ;;		_GLCD_ReadData
  6385 ;;		_GLCD_WriteData
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           	psect	text41
  6390  001650                     __ptext41:
  6391                           	opt stack 0
  6392  001650                     _GLCD_Delay:
  6393                           	opt stack 16
  6394                           
  6395                           ;KS0108-PIC18.c: 26: __nop();
  6396                           
  6397                           ;incstack = 0
  6398  001650  F000               	nop	
  6399  001652  0012               	return		;funcret
  6400  001654                     __end_of_GLCD_Delay:
  6401                           	opt stack 0
  6402                           tblptru	equ	0xFF8
  6403                           tblptrh	equ	0xFF7
  6404                           tblptrl	equ	0xFF6
  6405                           tablat	equ	0xFF5
  6406                           prodh	equ	0xFF4
  6407                           prodl	equ	0xFF3
  6408                           intcon	equ	0xFF2
  6409                           indf0	equ	0xFEF
  6410                           postinc0	equ	0xFEE
  6411                           fsr0h	equ	0xFEA
  6412                           fsr0l	equ	0xFE9
  6413                           wreg	equ	0xFE8
  6414                           indf2	equ	0xFDF
  6415                           fsr2h	equ	0xFDA
  6416                           fsr2l	equ	0xFD9
  6417                           status	equ	0xFD8
  6418                           
  6419 ;; *************** function _INTERRUPT_InterruptManager *****************
  6420 ;; Defined at:
  6421 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;		None
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;		None
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  1    wreg      void 
  6428 ;; Registers used:
  6429 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6437 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6438 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6439 ;;Total ram usage:       18 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:    8
  6442 ;; This function calls:
  6443 ;;		_PIN_MANAGER_IOC
  6444 ;;		_TMR0_ISR
  6445 ;; This function is called by:
  6446 ;;		Interrupt level 2
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	intcode
  6451  000008                     __pintcode:
  6452                           	opt stack 0
  6453  000008                     _INTERRUPT_InterruptManager:
  6454                           	opt stack 14
  6455                           
  6456                           ;incstack = 0
  6457  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6458  00000A  CFFA F028          	movff	pclath,??_INTERRUPT_InterruptManager
  6459  00000E  CFFB F029          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6460  000012  CFE9 F02A          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  6461  000016  CFEA F02B          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  6462  00001A  CFE1 F02C          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  6463  00001E  CFE2 F02D          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  6464  000022  CFD9 F02E          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  6465  000026  CFDA F02F          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  6466  00002A  CFF3 F030          	movff	prodl,??_INTERRUPT_InterruptManager+8
  6467  00002E  CFF4 F031          	movff	prodh,??_INTERRUPT_InterruptManager+9
  6468  000032  CFF6 F032          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  6469  000036  CFF7 F033          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  6470  00003A  CFF8 F034          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  6471  00003E  CFF5 F035          	movff	tablat,??_INTERRUPT_InterruptManager+13
  6472  000042  C045  F036         	movff	btemp,??_INTERRUPT_InterruptManager+14
  6473  000046  C046  F037         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  6474  00004A  C047  F038         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  6475  00004E  C048  F039         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  6476                           
  6477                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  6478  000052  BAF2               	btfsc	intcon,5,c	;volatile
  6479  000054  A4F2               	btfss	intcon,2,c	;volatile
  6480  000056  D003               	goto	i2l207
  6481                           
  6482                           ;interrupt_manager.c: 61: {
  6483                           ;interrupt_manager.c: 62: TMR0_ISR();
  6484  000058  EC5D  F00A         	call	_TMR0_ISR	;wreg free
  6485                           
  6486                           ;interrupt_manager.c: 63: }
  6487  00005C  D005               	goto	i2l209
  6488  00005E                     i2l207:
  6489                           
  6490                           ;interrupt_manager.c: 64: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  6491  00005E  B6F2               	btfsc	intcon,3,c	;volatile
  6492  000060  A0F2               	btfss	intcon,0,c	;volatile
  6493  000062  D002               	goto	i2l209
  6494                           
  6495                           ;interrupt_manager.c: 65: {
  6496                           ;interrupt_manager.c: 66: PIN_MANAGER_IOC();
  6497  000064  ECCF  F003         	call	_PIN_MANAGER_IOC	;wreg free
  6498  000068                     i2l209:
  6499                           
  6500                           ;interrupt_manager.c: 68: else
  6501                           ;interrupt_manager.c: 69: {
  6502  000068  C039  F048         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  6503  00006C  C038  F047         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  6504  000070  C037  F046         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  6505  000074  C036  F045         	movff	??_INTERRUPT_InterruptManager+14,btemp
  6506  000078  C035  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  6507  00007C  C034  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  6508  000080  C033  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  6509  000084  C032  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  6510  000088  C031  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  6511  00008C  C030  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  6512  000090  C02F  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  6513  000094  C02E  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  6514  000098  C02D  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  6515  00009C  C02C  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  6516  0000A0  C02B  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  6517  0000A4  C02A  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  6518  0000A8  C029  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6519  0000AC  C028  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6520  0000B0  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6521  0000B2  0011               	retfie		f
  6522  0000B4                     __end_of_INTERRUPT_InterruptManager:
  6523                           	opt stack 0
  6524                           pclatu	equ	0xFFB
  6525                           pclath	equ	0xFFA
  6526                           tblptru	equ	0xFF8
  6527                           tblptrh	equ	0xFF7
  6528                           tblptrl	equ	0xFF6
  6529                           tablat	equ	0xFF5
  6530                           prodh	equ	0xFF4
  6531                           prodl	equ	0xFF3
  6532                           intcon	equ	0xFF2
  6533                           indf0	equ	0xFEF
  6534                           postinc0	equ	0xFEE
  6535                           fsr0h	equ	0xFEA
  6536                           fsr0l	equ	0xFE9
  6537                           wreg	equ	0xFE8
  6538                           fsr1h	equ	0xFE2
  6539                           fsr1l	equ	0xFE1
  6540                           indf2	equ	0xFDF
  6541                           fsr2h	equ	0xFDA
  6542                           fsr2l	equ	0xFD9
  6543                           status	equ	0xFD8
  6544                           
  6545 ;; *************** function _TMR0_ISR *****************
  6546 ;; Defined at:
  6547 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;		None
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;		None
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  1    wreg      void 
  6554 ;; Registers used:
  6555 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6565 ;;Total ram usage:        0 bytes
  6566 ;; Hardware stack levels used:    1
  6567 ;; Hardware stack levels required when called:    1
  6568 ;; This function calls:
  6569 ;;		Absolute function
  6570 ;;		_TMR0_DefaultInterruptHandler
  6571 ;; This function is called by:
  6572 ;;		_INTERRUPT_InterruptManager
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text43
  6577  0014BA                     __ptext43:
  6578                           	opt stack 0
  6579  0014BA                     _TMR0_ISR:
  6580                           	opt stack 20
  6581                           
  6582                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
  6583                           
  6584                           ;incstack = 0
  6585  0014BA  94F2               	bcf	intcon,2,c	;volatile
  6586                           
  6587                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
  6588  0014BC  0100               	movlb	0	; () banked
  6589  0014BE  51A0               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
  6590  0014C0  6ED7               	movwf	4055,c	;volatile
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
  6594  0014C2  C09F  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;tmr0.c: 145: if(TMR0_InterruptHandler)
  6598  0014C6  51A1               	movf	_TMR0_InterruptHandler& (0+255),w,b
  6599  0014C8  11A2               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  6600  0014CA  B4D8               	btfsc	status,2,c
  6601  0014CC  0012               	return	
  6602                           
  6603                           ; BSR set to: 0
  6604                           ;tmr0.c: 146: {
  6605                           ;tmr0.c: 147: TMR0_InterruptHandler();
  6606  0014CE  D801               	call	i2u216_48
  6607  0014D0  0012               	return	
  6608  0014D2                     i2u216_48:
  6609  0014D2  0005               	push	
  6610  0014D4  6EFA               	movwf	pclath,c
  6611  0014D6  51A1               	movf	_TMR0_InterruptHandler& (0+255),w,b
  6612  0014D8  6EFD               	movwf	tosl,c
  6613  0014DA  51A2               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  6614  0014DC  6EFE               	movwf	tosh,c
  6615  0014DE  6AFF               	clrf	tosu,c
  6616  0014E0  50FA               	movf	pclath,w,c
  6617  0014E2  0012               	return		;indir
  6618  0014E4                     __end_of_TMR0_ISR:
  6619                           	opt stack 0
  6620                           tosu	equ	0xFFF
  6621                           tosh	equ	0xFFE
  6622                           tosl	equ	0xFFD
  6623                           pclatu	equ	0xFFB
  6624                           pclath	equ	0xFFA
  6625                           tblptru	equ	0xFF8
  6626                           tblptrh	equ	0xFF7
  6627                           tblptrl	equ	0xFF6
  6628                           tablat	equ	0xFF5
  6629                           prodh	equ	0xFF4
  6630                           prodl	equ	0xFF3
  6631                           intcon	equ	0xFF2
  6632                           indf0	equ	0xFEF
  6633                           postinc0	equ	0xFEE
  6634                           fsr0h	equ	0xFEA
  6635                           fsr0l	equ	0xFE9
  6636                           wreg	equ	0xFE8
  6637                           fsr1h	equ	0xFE2
  6638                           fsr1l	equ	0xFE1
  6639                           indf2	equ	0xFDF
  6640                           fsr2h	equ	0xFDA
  6641                           fsr2l	equ	0xFD9
  6642                           status	equ	0xFD8
  6643                           
  6644 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6645 ;; Defined at:
  6646 ;;		line 158 in file "mcc_generated_files/tmr0.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;		None
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;		None
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  1    wreg      void 
  6653 ;; Registers used:
  6654 ;;		None
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6664 ;;Total ram usage:        0 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; This function calls:
  6667 ;;		Nothing
  6668 ;; This function is called by:
  6669 ;;		_TMR0_Initialize
  6670 ;;		_TMR0_ISR
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text44
  6675  00165E                     __ptext44:
  6676                           	opt stack 0
  6677  00165E                     _TMR0_DefaultInterruptHandler:
  6678                           	opt stack 20
  6679                           
  6680                           ;incstack = 0
  6681  00165E  0012               	return		;funcret
  6682  001660                     __end_of_TMR0_DefaultInterruptHandler:
  6683                           	opt stack 0
  6684                           tosu	equ	0xFFF
  6685                           tosh	equ	0xFFE
  6686                           tosl	equ	0xFFD
  6687                           pclatu	equ	0xFFB
  6688                           pclath	equ	0xFFA
  6689                           tblptru	equ	0xFF8
  6690                           tblptrh	equ	0xFF7
  6691                           tblptrl	equ	0xFF6
  6692                           tablat	equ	0xFF5
  6693                           prodh	equ	0xFF4
  6694                           prodl	equ	0xFF3
  6695                           intcon	equ	0xFF2
  6696                           indf0	equ	0xFEF
  6697                           postinc0	equ	0xFEE
  6698                           fsr0h	equ	0xFEA
  6699                           fsr0l	equ	0xFE9
  6700                           wreg	equ	0xFE8
  6701                           fsr1h	equ	0xFE2
  6702                           fsr1l	equ	0xFE1
  6703                           indf2	equ	0xFDF
  6704                           fsr2h	equ	0xFDA
  6705                           fsr2l	equ	0xFD9
  6706                           status	equ	0xFD8
  6707                           
  6708 ;; *************** function _PIN_MANAGER_IOC *****************
  6709 ;; Defined at:
  6710 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;		None
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;  result          1   38[COMRAM] unsigned char 
  6715 ;;  CHA             1   37[COMRAM] unsigned char 
  6716 ;;  CHB             1   36[COMRAM] unsigned char 
  6717 ;;  currentState    1   35[COMRAM] unsigned char 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  1    wreg      void 
  6720 ;; Registers used:
  6721 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6728 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6730 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6731 ;;Total ram usage:        4 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:    7
  6734 ;; This function calls:
  6735 ;;		_Main_Menu_Function
  6736 ;;		_Run_Time_Menu_Function
  6737 ;; This function is called by:
  6738 ;;		_INTERRUPT_InterruptManager
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text45
  6743  00079E                     __ptext45:
  6744                           	opt stack 0
  6745  00079E                     _PIN_MANAGER_IOC:
  6746                           	opt stack 14
  6747                           
  6748                           ;pin_manager.c: 140: static unsigned char previousState;
  6749                           ;pin_manager.c: 141: unsigned char currentState;
  6750                           ;pin_manager.c: 142: char result;
  6751                           ;pin_manager.c: 143: static unsigned char cw_count = 0;
  6752                           ;pin_manager.c: 144: static unsigned char ccw_count = 0;
  6753                           ;pin_manager.c: 145: unsigned char CHA, CHB;
  6754                           ;pin_manager.c: 147: CHA = PORTBbits.RB5;
  6755                           
  6756                           ;incstack = 0
  6757  00079E  0E00               	movlw	0
  6758  0007A0  BA81               	btfsc	3969,5,c	;volatile
  6759  0007A2  0E01               	movlw	1
  6760  0007A4  6E26               	movwf	PIN_MANAGER_IOC@CHA,c
  6761                           
  6762                           ;pin_manager.c: 148: CHB = PORTBbits.RB4;
  6763  0007A6  0E00               	movlw	0
  6764  0007A8  B881               	btfsc	3969,4,c	;volatile
  6765  0007AA  0E01               	movlw	1
  6766  0007AC  6E25               	movwf	PIN_MANAGER_IOC@CHB,c
  6767                           
  6768                           ;pin_manager.c: 150: currentState = (CHA << 1) | CHB;
  6769  0007AE  5026               	movf	PIN_MANAGER_IOC@CHA,w,c
  6770  0007B0  2426               	addwf	PIN_MANAGER_IOC@CHA,w,c
  6771  0007B2  1025               	iorwf	PIN_MANAGER_IOC@CHB,w,c
  6772  0007B4  6E24               	movwf	PIN_MANAGER_IOC@currentState,c
  6773                           
  6774                           ;pin_manager.c: 152: if(previousState == 3)
  6775  0007B6  0E03               	movlw	3
  6776  0007B8  183C               	xorwf	PIN_MANAGER_IOC@previousState,w,c
  6777  0007BA  A4D8               	btfss	status,2,c
  6778  0007BC  D036               	goto	i2l135
  6779                           
  6780                           ;pin_manager.c: 153: {
  6781                           ;pin_manager.c: 156: if(CHA == 0)
  6782  0007BE  5026               	movf	PIN_MANAGER_IOC@CHA,w,c
  6783  0007C0  A4D8               	btfss	status,2,c
  6784  0007C2  D002               	goto	i2l131
  6785                           
  6786                           ;pin_manager.c: 157: {
  6787                           ;pin_manager.c: 158: result = 1;
  6788  0007C4  0E01               	movlw	1
  6789  0007C6  D001               	goto	L5
  6790  0007C8                     i2l131:
  6791                           
  6792                           ;pin_manager.c: 160: else
  6793                           ;pin_manager.c: 161: {
  6794                           ;pin_manager.c: 162: result = 0;
  6795  0007C8  0E00               	movlw	0
  6796  0007CA                     L5:
  6797  0007CA  6E27               	movwf	PIN_MANAGER_IOC@result,c
  6798                           
  6799                           ;pin_manager.c: 163: }
  6800                           ;pin_manager.c: 166: switch(currentContext)
  6801  0007CC  D00C               	goto	i2l133
  6802  0007CE  5027               	movf	PIN_MANAGER_IOC@result,w,c
  6803  0007D0  ECBB  F00A         	call	_Main_Menu_Function
  6804  0007D4  D02A               	goto	i2l135
  6805  0007D6  5027               	movf	PIN_MANAGER_IOC@result,w,c
  6806  0007D8  EC5F  F004         	call	_Run_Time_Menu_Function
  6807                           
  6808                           ;pin_manager.c: 178: case selectStateMenu: break;
  6809                           
  6810                           ;pin_manager.c: 177: case backlightMenu: break;
  6811                           
  6812                           ;pin_manager.c: 176: case endColorGreen: break;
  6813                           
  6814                           ;pin_manager.c: 175: case endColorBlue: break;
  6815                           
  6816                           ;pin_manager.c: 174: case endColorRed: break;
  6817                           
  6818                           ;pin_manager.c: 173: case startColorGreen: break;
  6819                           
  6820                           ;pin_manager.c: 172: case startColorBlue: break;
  6821                           
  6822                           ;pin_manager.c: 171: case startColorRed: break;
  6823                           
  6824                           ;pin_manager.c: 170: case brightnessMenu: break;
  6825  0007DC  D026               	goto	i2l135
  6826  0007DE  5027               	movf	PIN_MANAGER_IOC@result,w,c
  6827  0007E0  ECBB  F00A         	call	_Main_Menu_Function
  6828                           
  6829                           ;pin_manager.c: 182: }
  6830  0007E4  D022               	goto	i2l135
  6831  0007E6                     i2l133:
  6832  0007E6  5040               	movf	_currentContext,w,c
  6833                           
  6834                           ; Switch size 1, requested type "space"
  6835                           ; Number of cases is 11, Range of values is 0 to 10
  6836                           ; switch strategies available:
  6837                           ; Name         Instructions Cycles
  6838                           ; simple_byte           34    18 (average)
  6839                           ;	Chosen strategy is simple_byte
  6840  0007E8  0A00               	xorlw	0	; case 0
  6841  0007EA  B4D8               	btfsc	status,2,c
  6842  0007EC  D7F0               	goto	i2l134
  6843  0007EE  0A01               	xorlw	1	; case 1
  6844  0007F0  B4D8               	btfsc	status,2,c
  6845  0007F2  D7F1               	goto	i2l136
  6846  0007F4  0A03               	xorlw	3	; case 2
  6847  0007F6  B4D8               	btfsc	status,2,c
  6848  0007F8  D018               	goto	i2l135
  6849  0007FA  0A01               	xorlw	1	; case 3
  6850  0007FC  B4D8               	btfsc	status,2,c
  6851  0007FE  D015               	goto	i2l135
  6852  000800  0A07               	xorlw	7	; case 4
  6853  000802  B4D8               	btfsc	status,2,c
  6854  000804  D012               	goto	i2l135
  6855  000806  0A01               	xorlw	1	; case 5
  6856  000808  B4D8               	btfsc	status,2,c
  6857  00080A  D00F               	goto	i2l135
  6858  00080C  0A03               	xorlw	3	; case 6
  6859  00080E  B4D8               	btfsc	status,2,c
  6860  000810  D00C               	goto	i2l135
  6861  000812  0A01               	xorlw	1	; case 7
  6862  000814  B4D8               	btfsc	status,2,c
  6863  000816  D009               	goto	i2l135
  6864  000818  0A0F               	xorlw	15	; case 8
  6865  00081A  B4D8               	btfsc	status,2,c
  6866  00081C  D006               	goto	i2l135
  6867  00081E  0A01               	xorlw	1	; case 9
  6868  000820  B4D8               	btfsc	status,2,c
  6869  000822  D003               	goto	i2l135
  6870  000824  0A03               	xorlw	3	; case 10
  6871  000826  A4D8               	btfss	status,2,c
  6872  000828  D7DA               	goto	i2l146
  6873  00082A                     i2l135:
  6874                           
  6875                           ;pin_manager.c: 183: }
  6876                           ;pin_manager.c: 185: previousState = currentState;
  6877  00082A  C024  F03C         	movff	PIN_MANAGER_IOC@currentState,PIN_MANAGER_IOC@previousState
  6878                           
  6879                           ;pin_manager.c: 189: PORTB = PORTB;
  6880  00082E  CF81 FF81          	movff	3969,3969	;volatile
  6881                           
  6882                           ;pin_manager.c: 191: INTCONbits.RBIF = 0;
  6883  000832  90F2               	bcf	intcon,0,c	;volatile
  6884  000834  0012               	return		;funcret
  6885  000836                     __end_of_PIN_MANAGER_IOC:
  6886                           	opt stack 0
  6887                           tosu	equ	0xFFF
  6888                           tosh	equ	0xFFE
  6889                           tosl	equ	0xFFD
  6890                           pclatu	equ	0xFFB
  6891                           pclath	equ	0xFFA
  6892                           tblptru	equ	0xFF8
  6893                           tblptrh	equ	0xFF7
  6894                           tblptrl	equ	0xFF6
  6895                           tablat	equ	0xFF5
  6896                           prodh	equ	0xFF4
  6897                           prodl	equ	0xFF3
  6898                           intcon	equ	0xFF2
  6899                           indf0	equ	0xFEF
  6900                           postinc0	equ	0xFEE
  6901                           fsr0h	equ	0xFEA
  6902                           fsr0l	equ	0xFE9
  6903                           wreg	equ	0xFE8
  6904                           fsr1h	equ	0xFE2
  6905                           fsr1l	equ	0xFE1
  6906                           indf2	equ	0xFDF
  6907                           fsr2h	equ	0xFDA
  6908                           fsr2l	equ	0xFD9
  6909                           status	equ	0xFD8
  6910                           
  6911 ;; *************** function _Run_Time_Menu_Function *****************
  6912 ;; Defined at:
  6913 ;;		line 213 in file "mcc_generated_files/pin_manager.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;  result          1    wreg     unsigned char 
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;  result          1   34[COMRAM] unsigned char 
  6918 ;;  display        10   24[COMRAM] unsigned char [10]
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  1    wreg      void 
  6921 ;; Registers used:
  6922 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6929 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6931 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6932 ;;Total ram usage:       11 bytes
  6933 ;; Hardware stack levels used:    1
  6934 ;; Hardware stack levels required when called:    6
  6935 ;; This function calls:
  6936 ;;		i2_Draw_Arrow
  6937 ;;		i2_GLCD_GoTo
  6938 ;;		i2_GLCD_WriteString
  6939 ;;		i2_itoa
  6940 ;; This function is called by:
  6941 ;;		_PIN_MANAGER_IOC
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           	psect	text46
  6946  0008BE                     __ptext46:
  6947                           	opt stack 0
  6948  0008BE                     _Run_Time_Menu_Function:
  6949                           	opt stack 14
  6950                           
  6951                           ;incstack = 0
  6952                           ;Run_Time_Menu_Function@result stored from wreg
  6953  0008BE  6E23               	movwf	Run_Time_Menu_Function@result,c
  6954                           
  6955                           ;pin_manager.c: 215: char display[10];
  6956                           ;pin_manager.c: 216: if(adjustValues > 0)
  6957  0008C0  503E               	movf	_adjustValues,w,c
  6958  0008C2  A4D8               	btfss	status,2,c
  6959  0008C4  D02D               	goto	i2l158
  6960  0008C6  D031               	goto	i2l157
  6961  0008C8                     
  6962                           ;pin_manager.c: 221: if(result)
  6963  0008C8  5023               	movf	Run_Time_Menu_Function@result,w,c
  6964  0008CA  B4D8               	btfsc	status,2,c
  6965  0008CC  D005               	goto	i2l160
  6966                           
  6967                           ;pin_manager.c: 222: {
  6968                           ;pin_manager.c: 223: if(runMinutes < 255) runMinutes++;
  6969  0008CE  283D               	incf	_runMinutes,w,c
  6970  0008D0  B4D8               	btfsc	status,2,c
  6971  0008D2  D005               	goto	i2l163
  6972  0008D4  2A3D               	incf	_runMinutes,f,c
  6973                           
  6974                           ;pin_manager.c: 224: }
  6975  0008D6  D003               	goto	i2l163
  6976  0008D8                     i2l160:
  6977                           
  6978                           ;pin_manager.c: 225: else
  6979                           ;pin_manager.c: 226: {
  6980                           ;pin_manager.c: 227: if(runMinutes > 0) runMinutes--;
  6981  0008D8  503D               	movf	_runMinutes,w,c
  6982  0008DA  A4D8               	btfss	status,2,c
  6983  0008DC  063D               	decf	_runMinutes,f,c
  6984  0008DE                     i2l163:
  6985                           
  6986                           ;pin_manager.c: 228: }
  6987                           ;pin_manager.c: 229: GLCD_GoTo(valuesXStart, 2);
  6988  0008DE  0E02               	movlw	2
  6989  0008E0  6E0C               	movwf	i2GLCD_GoTo@y,c
  6990  0008E2  5042               	movf	_valuesXStart,w,c
  6991  0008E4  ECA5  F005         	call	i2_GLCD_GoTo
  6992                           
  6993                           ;pin_manager.c: 230: itoa(display, runMinutes, 10);
  6994  0008E8  0E19               	movlw	low Run_Time_Menu_Function@display
  6995  0008EA  6E11               	movwf	i2itoa@buf,c
  6996  0008EC  0E00               	movlw	high Run_Time_Menu_Function@display
  6997  0008EE  6E12               	movwf	i2itoa@buf+1,c
  6998  0008F0  C03D  F013         	movff	_runMinutes,i2itoa@val
  6999  0008F4  6A14               	clrf	i2itoa@val+1,c
  7000  0008F6  0E00               	movlw	0
  7001  0008F8  6E16               	movwf	i2itoa@base+1,c
  7002  0008FA  0E0A               	movlw	10
  7003  0008FC  6E15               	movwf	i2itoa@base,c
  7004  0008FE  EC39  F009         	call	i2_itoa	;wreg free
  7005                           
  7006                           ;pin_manager.c: 231: GLCD_WriteString(display);
  7007  000902  0E19               	movlw	low Run_Time_Menu_Function@display
  7008  000904  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
  7009  000906  0E00               	movlw	high Run_Time_Menu_Function@display
  7010  000908  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
  7011  00090A  EC0A  F008         	call	i2_GLCD_WriteString	;wreg free
  7012                           
  7013                           ;pin_manager.c: 232: GLCD_WriteString("min   ");
  7014  00090E  0EEF               	movlw	low STR_1
  7015  000910  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
  7016  000912  0EFF               	movlw	high STR_1
  7017  000914  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
  7018  000916  EC0A  F008         	call	i2_GLCD_WriteString	;wreg free
  7019                           
  7020                           ;pin_manager.c: 233: break;
  7021  00091A  0012               	return	
  7022  00091C                     i2l165:
  7023  00091C  F000               	nop	
  7024                           
  7025                           ;pin_manager.c: 238: }
  7026                           
  7027                           ;pin_manager.c: 236: break;
  7028  00091E  0012               	return	
  7029  000920                     i2l158:
  7030  000920  503F               	movf	_runTimeContext,w,c
  7031                           
  7032                           ; Switch size 1, requested type "space"
  7033                           ; Number of cases is 1, Range of values is 0 to 0
  7034                           ; switch strategies available:
  7035                           ; Name         Instructions Cycles
  7036                           ; simple_byte            4     3 (average)
  7037                           ;	Chosen strategy is simple_byte
  7038  000922  0A00               	xorlw	0	; case 0
  7039  000924  B4D8               	btfsc	status,2,c
  7040  000926  D7D0               	goto	i2l159
  7041  000928  D7F9               	goto	i2l165
  7042  00092A                     i2l157:
  7043                           
  7044                           ;pin_manager.c: 240: else
  7045                           ;pin_manager.c: 241: {
  7046                           ;pin_manager.c: 242: if(result)
  7047  00092A  5023               	movf	Run_Time_Menu_Function@result,w,c
  7048  00092C  B4D8               	btfsc	status,2,c
  7049  00092E  D005               	goto	i2l167
  7050                           
  7051                           ;pin_manager.c: 243: {
  7052                           ;pin_manager.c: 244: if(runTimeContext < runTimeBack) runTimeContext++;
  7053  000930  0E02               	movlw	2
  7054  000932  603F               	cpfslt	_runTimeContext,c
  7055  000934  D005               	goto	i2l170
  7056  000936  2A3F               	incf	_runTimeContext,f,c
  7057                           
  7058                           ;pin_manager.c: 245: }
  7059  000938  D003               	goto	i2l170
  7060  00093A                     i2l167:
  7061                           
  7062                           ;pin_manager.c: 246: else
  7063                           ;pin_manager.c: 247: {
  7064                           ;pin_manager.c: 248: if(runTimeContext > runTimeSelection) runTimeContext--;
  7065  00093A  503F               	movf	_runTimeContext,w,c
  7066  00093C  A4D8               	btfss	status,2,c
  7067  00093E  063F               	decf	_runTimeContext,f,c
  7068  000940                     i2l170:
  7069                           
  7070                           ;pin_manager.c: 249: }
  7071                           ;pin_manager.c: 251: Draw_Arrow();
  7072  000940  EC17  F009         	call	i2_Draw_Arrow	;wreg free
  7073  000944  0012               	return	
  7074  000946                     __end_of_Run_Time_Menu_Function:
  7075                           	opt stack 0
  7076                           tosu	equ	0xFFF
  7077                           tosh	equ	0xFFE
  7078                           tosl	equ	0xFFD
  7079                           pclatu	equ	0xFFB
  7080                           pclath	equ	0xFFA
  7081                           tblptru	equ	0xFF8
  7082                           tblptrh	equ	0xFF7
  7083                           tblptrl	equ	0xFF6
  7084                           tablat	equ	0xFF5
  7085                           prodh	equ	0xFF4
  7086                           prodl	equ	0xFF3
  7087                           intcon	equ	0xFF2
  7088                           indf0	equ	0xFEF
  7089                           postinc0	equ	0xFEE
  7090                           fsr0h	equ	0xFEA
  7091                           fsr0l	equ	0xFE9
  7092                           wreg	equ	0xFE8
  7093                           fsr1h	equ	0xFE2
  7094                           fsr1l	equ	0xFE1
  7095                           indf2	equ	0xFDF
  7096                           fsr2h	equ	0xFDA
  7097                           fsr2l	equ	0xFD9
  7098                           status	equ	0xFD8
  7099                           
  7100 ;; *************** function i2_itoa *****************
  7101 ;; Defined at:
  7102 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  buf             2   16[COMRAM] PTR unsigned char 
  7105 ;;		 -> Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Run_Time_Menu_Function@display(10), 
  7106 ;;  val             2   18[COMRAM] int 
  7107 ;;  base            2   20[COMRAM] int 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  itoa            2   22[COMRAM] PTR unsigned char 
  7110 ;;		 -> Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Run_Time_Menu_Function@display(10), 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  2   16[COMRAM] PTR unsigned char 
  7113 ;; Registers used:
  7114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7120 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7121 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7123 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7124 ;;Total ram usage:        8 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; Hardware stack levels required when called:    2
  7127 ;; This function calls:
  7128 ;;		i2_utoa
  7129 ;; This function is called by:
  7130 ;;		_Run_Time_Menu_Function
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           	psect	text47
  7135  001272                     __ptext47:
  7136                           	opt stack 0
  7137  001272                     i2_itoa:
  7138                           	opt stack 17
  7139                           
  7140                           ;incstack = 0
  7141  001272  C011  F017         	movff	i2itoa@buf,i2itoa@cp
  7142  001276  C012  F018         	movff	i2itoa@buf+1,i2itoa@cp+1
  7143  00127A  AE14               	btfss	i2itoa@val+1,7,c
  7144  00127C  D00C               	goto	i2l1019
  7145  00127E  C011  FFD9         	movff	i2itoa@buf,fsr2l
  7146  001282  C012  FFDA         	movff	i2itoa@buf+1,fsr2h
  7147  001286  0E2D               	movlw	45
  7148  001288  6EDF               	movwf	indf2,c
  7149  00128A  4A11               	infsnz	i2itoa@buf,f,c
  7150  00128C  2A12               	incf	i2itoa@buf+1,f,c
  7151  00128E  6C13               	negf	i2itoa@val,c
  7152  001290  1E14               	comf	i2itoa@val+1,f,c
  7153  001292  B0D8               	btfsc	status,0,c
  7154  001294  2A14               	incf	i2itoa@val+1,f,c
  7155  001296                     i2l1019:
  7156  001296  C011  F008         	movff	i2itoa@buf,i2utoa@buf
  7157  00129A  C012  F009         	movff	i2itoa@buf+1,i2utoa@buf+1
  7158  00129E  C013  F00A         	movff	i2itoa@val,i2utoa@val
  7159  0012A2  C014  F00B         	movff	i2itoa@val+1,i2utoa@val+1
  7160  0012A6  C015  F00C         	movff	i2itoa@base,i2utoa@base
  7161  0012AA  C016  F00D         	movff	i2itoa@base+1,i2utoa@base+1
  7162  0012AE  EC7D  F003         	call	i2_utoa	;wreg free
  7163  0012B2  0012               	return	
  7164  0012B4                     __end_ofi2_itoa:
  7165                           	opt stack 0
  7166                           tosu	equ	0xFFF
  7167                           tosh	equ	0xFFE
  7168                           tosl	equ	0xFFD
  7169                           pclatu	equ	0xFFB
  7170                           pclath	equ	0xFFA
  7171                           tblptru	equ	0xFF8
  7172                           tblptrh	equ	0xFF7
  7173                           tblptrl	equ	0xFF6
  7174                           tablat	equ	0xFF5
  7175                           prodh	equ	0xFF4
  7176                           prodl	equ	0xFF3
  7177                           intcon	equ	0xFF2
  7178                           indf0	equ	0xFEF
  7179                           postinc0	equ	0xFEE
  7180                           fsr0h	equ	0xFEA
  7181                           fsr0l	equ	0xFE9
  7182                           wreg	equ	0xFE8
  7183                           fsr1h	equ	0xFE2
  7184                           fsr1l	equ	0xFE1
  7185                           indf2	equ	0xFDF
  7186                           fsr2h	equ	0xFDA
  7187                           fsr2l	equ	0xFD9
  7188                           status	equ	0xFD8
  7189                           
  7190 ;; *************** function i2_utoa *****************
  7191 ;; Defined at:
  7192 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;  buf             2    7[COMRAM] PTR unsigned char 
  7195 ;;		 -> Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Run_Time_Menu_Function@display(10), 
  7196 ;;  val             2    9[COMRAM] unsigned int 
  7197 ;;  base            2   11[COMRAM] int 
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;  utoa            2   13[COMRAM] unsigned int 
  7200 ;;  utoa            1   15[COMRAM] unsigned char 
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  2    7[COMRAM] PTR unsigned char 
  7203 ;; Registers used:
  7204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7210 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7211 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7213 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7214 ;;Total ram usage:        9 bytes
  7215 ;; Hardware stack levels used:    1
  7216 ;; Hardware stack levels required when called:    1
  7217 ;; This function calls:
  7218 ;;		i2___lwdiv
  7219 ;;		i2___lwmod
  7220 ;; This function is called by:
  7221 ;;		i2_itoa
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text48
  7226  0006FA                     __ptext48:
  7227                           	opt stack 0
  7228  0006FA                     i2_utoa:
  7229                           	opt stack 17
  7230                           
  7231                           ;incstack = 0
  7232  0006FA  C00A  F00E         	movff	i2utoa@val,i2utoa@v
  7233  0006FE  C00B  F00F         	movff	i2utoa@val+1,i2utoa@v+1
  7234  000702  C00E  F001         	movff	i2utoa@v,i2___lwdiv@dividend
  7235  000706  C00F  F002         	movff	i2utoa@v+1,i2___lwdiv@dividend+1
  7236  00070A  C00C  F003         	movff	i2utoa@base,i2___lwdiv@divisor
  7237  00070E  C00D  F004         	movff	i2utoa@base+1,i2___lwdiv@divisor+1
  7238  000712  EC5F  F008         	call	i2___lwdiv	;wreg free
  7239  000716  C001  F00E         	movff	?i2___lwdiv,i2utoa@v
  7240  00071A  C002  F00F         	movff	?i2___lwdiv+1,i2utoa@v+1
  7241  00071E  4A08               	infsnz	i2utoa@buf,f,c
  7242  000720  2A09               	incf	i2utoa@buf+1,f,c
  7243  000722  500E               	movf	i2utoa@v,w,c
  7244  000724  100F               	iorwf	i2utoa@v+1,w,c
  7245  000726  A4D8               	btfss	status,2,c
  7246  000728  D7EC               	goto	i2l1023
  7247  00072A  C008  FFD9         	movff	i2utoa@buf,fsr2l
  7248  00072E  C009  FFDA         	movff	i2utoa@buf+1,fsr2h
  7249  000732  0E00               	movlw	0
  7250  000734  6EDF               	movwf	indf2,c
  7251  000736  0608               	decf	i2utoa@buf,f,c
  7252  000738  A0D8               	btfss	status,0,c
  7253  00073A  0609               	decf	i2utoa@buf+1,f,c
  7254  00073C  C00A  F001         	movff	i2utoa@val,i2___lwmod@dividend
  7255  000740  C00B  F002         	movff	i2utoa@val+1,i2___lwmod@dividend+1
  7256  000744  C00C  F003         	movff	i2utoa@base,i2___lwmod@divisor
  7257  000748  C00D  F004         	movff	i2utoa@base+1,i2___lwmod@divisor+1
  7258  00074C  EC5A  F009         	call	i2___lwmod	;wreg free
  7259  000750  5001               	movf	?i2___lwmod,w,c
  7260  000752  6E10               	movwf	i2utoa@c,c
  7261  000754  C00A  F001         	movff	i2utoa@val,i2___lwdiv@dividend
  7262  000758  C00B  F002         	movff	i2utoa@val+1,i2___lwdiv@dividend+1
  7263  00075C  C00C  F003         	movff	i2utoa@base,i2___lwdiv@divisor
  7264  000760  C00D  F004         	movff	i2utoa@base+1,i2___lwdiv@divisor+1
  7265  000764  EC5F  F008         	call	i2___lwdiv	;wreg free
  7266  000768  C001  F00A         	movff	?i2___lwdiv,i2utoa@val
  7267  00076C  C002  F00B         	movff	?i2___lwdiv+1,i2utoa@val+1
  7268  000770  0E09               	movlw	9
  7269  000772  6410               	cpfsgt	i2utoa@c,c
  7270  000774  D002               	goto	i2l1026
  7271  000776  0E07               	movlw	7
  7272  000778  2610               	addwf	i2utoa@c,f,c
  7273  00077A                     i2l1026:
  7274  00077A  0E30               	movlw	48
  7275  00077C  2610               	addwf	i2utoa@c,f,c
  7276  00077E  C008  FFD9         	movff	i2utoa@buf,fsr2l
  7277  000782  C009  FFDA         	movff	i2utoa@buf+1,fsr2h
  7278  000786  C010  FFDF         	movff	i2utoa@c,indf2
  7279  00078A  0608               	decf	i2utoa@buf,f,c
  7280  00078C  A0D8               	btfss	status,0,c
  7281  00078E  0609               	decf	i2utoa@buf+1,f,c
  7282  000790  500A               	movf	i2utoa@val,w,c
  7283  000792  100B               	iorwf	i2utoa@val+1,w,c
  7284  000794  A4D8               	btfss	status,2,c
  7285  000796  D7D2               	goto	i2l1025
  7286                           
  7287                           ;	Return value of i2_utoa is never used
  7288  000798  4A08               	infsnz	i2utoa@buf,f,c
  7289  00079A  2A09               	incf	i2utoa@buf+1,f,c
  7290  00079C  0012               	return	
  7291  00079E                     __end_ofi2_utoa:
  7292                           	opt stack 0
  7293                           tosu	equ	0xFFF
  7294                           tosh	equ	0xFFE
  7295                           tosl	equ	0xFFD
  7296                           pclatu	equ	0xFFB
  7297                           pclath	equ	0xFFA
  7298                           tblptru	equ	0xFF8
  7299                           tblptrh	equ	0xFF7
  7300                           tblptrl	equ	0xFF6
  7301                           tablat	equ	0xFF5
  7302                           prodh	equ	0xFF4
  7303                           prodl	equ	0xFF3
  7304                           intcon	equ	0xFF2
  7305                           indf0	equ	0xFEF
  7306                           postinc0	equ	0xFEE
  7307                           fsr0h	equ	0xFEA
  7308                           fsr0l	equ	0xFE9
  7309                           wreg	equ	0xFE8
  7310                           fsr1h	equ	0xFE2
  7311                           fsr1l	equ	0xFE1
  7312                           indf2	equ	0xFDF
  7313                           fsr2h	equ	0xFDA
  7314                           fsr2l	equ	0xFD9
  7315                           status	equ	0xFD8
  7316                           
  7317 ;; *************** function i2___lwmod *****************
  7318 ;; Defined at:
  7319 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  dividend        2    0[COMRAM] unsigned int 
  7322 ;;  divisor         2    2[COMRAM] unsigned int 
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;  __lwmod         1    4[COMRAM] unsigned char 
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  2    0[COMRAM] unsigned int 
  7327 ;; Registers used:
  7328 ;;		wreg, status,2, status,0
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7337 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7338 ;;Total ram usage:        5 bytes
  7339 ;; Hardware stack levels used:    1
  7340 ;; This function calls:
  7341 ;;		Nothing
  7342 ;; This function is called by:
  7343 ;;		i2_utoa
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           	psect	text49
  7348  0012B4                     __ptext49:
  7349                           	opt stack 0
  7350  0012B4                     i2___lwmod:
  7351                           	opt stack 17
  7352                           
  7353                           ;incstack = 0
  7354  0012B4  5003               	movf	i2___lwmod@divisor,w,c
  7355  0012B6  1004               	iorwf	i2___lwmod@divisor+1,w,c
  7356  0012B8  B4D8               	btfsc	status,2,c
  7357  0012BA  D018               	goto	i2l1121
  7358  0012BC  0E01               	movlw	1
  7359  0012BE  6E05               	movwf	i2___lwmod@counter,c
  7360  0012C0  D004               	goto	i2l1116
  7361  0012C2  90D8               	bcf	status,0,c
  7362  0012C4  3603               	rlcf	i2___lwmod@divisor,f,c
  7363  0012C6  3604               	rlcf	i2___lwmod@divisor+1,f,c
  7364  0012C8  2A05               	incf	i2___lwmod@counter,f,c
  7365  0012CA                     i2l1116:
  7366  0012CA  AE04               	btfss	i2___lwmod@divisor+1,7,c
  7367  0012CC  D7FA               	goto	i2l1117
  7368  0012CE                     i2u157_40:
  7369  0012CE  5003               	movf	i2___lwmod@divisor,w,c
  7370  0012D0  5C01               	subwf	i2___lwmod@dividend,w,c
  7371  0012D2  5004               	movf	i2___lwmod@divisor+1,w,c
  7372  0012D4  5802               	subwfb	i2___lwmod@dividend+1,w,c
  7373  0012D6  A0D8               	btfss	status,0,c
  7374  0012D8  D004               	goto	i2l1120
  7375  0012DA  5003               	movf	i2___lwmod@divisor,w,c
  7376  0012DC  5E01               	subwf	i2___lwmod@dividend,f,c
  7377  0012DE  5004               	movf	i2___lwmod@divisor+1,w,c
  7378  0012E0  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  7379  0012E2                     i2l1120:
  7380  0012E2  90D8               	bcf	status,0,c
  7381  0012E4  3204               	rrcf	i2___lwmod@divisor+1,f,c
  7382  0012E6  3203               	rrcf	i2___lwmod@divisor,f,c
  7383  0012E8  2E05               	decfsz	i2___lwmod@counter,f,c
  7384  0012EA  D7F1               	goto	i2u157_40
  7385  0012EC                     i2l1121:
  7386  0012EC  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  7387  0012F0  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  7388  0012F4  0012               	return		;funcret
  7389  0012F6                     __end_ofi2___lwmod:
  7390                           	opt stack 0
  7391                           tosu	equ	0xFFF
  7392                           tosh	equ	0xFFE
  7393                           tosl	equ	0xFFD
  7394                           pclatu	equ	0xFFB
  7395                           pclath	equ	0xFFA
  7396                           tblptru	equ	0xFF8
  7397                           tblptrh	equ	0xFF7
  7398                           tblptrl	equ	0xFF6
  7399                           tablat	equ	0xFF5
  7400                           prodh	equ	0xFF4
  7401                           prodl	equ	0xFF3
  7402                           intcon	equ	0xFF2
  7403                           indf0	equ	0xFEF
  7404                           postinc0	equ	0xFEE
  7405                           fsr0h	equ	0xFEA
  7406                           fsr0l	equ	0xFE9
  7407                           wreg	equ	0xFE8
  7408                           fsr1h	equ	0xFE2
  7409                           fsr1l	equ	0xFE1
  7410                           indf2	equ	0xFDF
  7411                           fsr2h	equ	0xFDA
  7412                           fsr2l	equ	0xFD9
  7413                           status	equ	0xFD8
  7414                           
  7415 ;; *************** function i2___lwdiv *****************
  7416 ;; Defined at:
  7417 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  7418 ;; Parameters:    Size  Location     Type
  7419 ;;  dividend        2    0[COMRAM] unsigned int 
  7420 ;;  divisor         2    2[COMRAM] unsigned int 
  7421 ;; Auto vars:     Size  Location     Type
  7422 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  7423 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  7424 ;; Return value:  Size  Location     Type
  7425 ;;                  2    0[COMRAM] unsigned int 
  7426 ;; Registers used:
  7427 ;;		wreg, status,2, status,0
  7428 ;; Tracked objects:
  7429 ;;		On entry : 0/0
  7430 ;;		On exit  : 0/0
  7431 ;;		Unchanged: 0/0
  7432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7434 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7436 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7437 ;;Total ram usage:        7 bytes
  7438 ;; Hardware stack levels used:    1
  7439 ;; This function calls:
  7440 ;;		Nothing
  7441 ;; This function is called by:
  7442 ;;		i2_utoa
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text50
  7447  0010BE                     __ptext50:
  7448                           	opt stack 0
  7449  0010BE                     i2___lwdiv:
  7450                           	opt stack 17
  7451                           
  7452                           ;incstack = 0
  7453  0010BE  0E00               	movlw	0
  7454  0010C0  6E06               	movwf	i2___lwdiv@quotient+1,c
  7455  0010C2  0E00               	movlw	0
  7456  0010C4  6E05               	movwf	i2___lwdiv@quotient,c
  7457  0010C6  5003               	movf	i2___lwdiv@divisor,w,c
  7458  0010C8  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  7459  0010CA  B4D8               	btfsc	status,2,c
  7460  0010CC  D01C               	goto	i2l1111
  7461  0010CE  0E01               	movlw	1
  7462  0010D0  6E07               	movwf	i2___lwdiv@counter,c
  7463  0010D2  D004               	goto	i2l1106
  7464  0010D4  90D8               	bcf	status,0,c
  7465  0010D6  3603               	rlcf	i2___lwdiv@divisor,f,c
  7466  0010D8  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  7467  0010DA  2A07               	incf	i2___lwdiv@counter,f,c
  7468  0010DC                     i2l1106:
  7469  0010DC  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  7470  0010DE  D7FA               	goto	i2l1107
  7471  0010E0                     i2u154_40:
  7472  0010E0  90D8               	bcf	status,0,c
  7473  0010E2  3605               	rlcf	i2___lwdiv@quotient,f,c
  7474  0010E4  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  7475  0010E6  5003               	movf	i2___lwdiv@divisor,w,c
  7476  0010E8  5C01               	subwf	i2___lwdiv@dividend,w,c
  7477  0010EA  5004               	movf	i2___lwdiv@divisor+1,w,c
  7478  0010EC  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  7479  0010EE  A0D8               	btfss	status,0,c
  7480  0010F0  D005               	goto	i2l1110
  7481  0010F2  5003               	movf	i2___lwdiv@divisor,w,c
  7482  0010F4  5E01               	subwf	i2___lwdiv@dividend,f,c
  7483  0010F6  5004               	movf	i2___lwdiv@divisor+1,w,c
  7484  0010F8  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  7485  0010FA  8005               	bsf	i2___lwdiv@quotient,0,c
  7486  0010FC                     i2l1110:
  7487  0010FC  90D8               	bcf	status,0,c
  7488  0010FE  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  7489  001100  3203               	rrcf	i2___lwdiv@divisor,f,c
  7490  001102  2E07               	decfsz	i2___lwdiv@counter,f,c
  7491  001104  D7ED               	goto	i2u154_40
  7492  001106                     i2l1111:
  7493  001106  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  7494  00110A  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  7495  00110E  0012               	return		;funcret
  7496  001110                     __end_ofi2___lwdiv:
  7497                           	opt stack 0
  7498                           tosu	equ	0xFFF
  7499                           tosh	equ	0xFFE
  7500                           tosl	equ	0xFFD
  7501                           pclatu	equ	0xFFB
  7502                           pclath	equ	0xFFA
  7503                           tblptru	equ	0xFF8
  7504                           tblptrh	equ	0xFF7
  7505                           tblptrl	equ	0xFF6
  7506                           tablat	equ	0xFF5
  7507                           prodh	equ	0xFF4
  7508                           prodl	equ	0xFF3
  7509                           intcon	equ	0xFF2
  7510                           indf0	equ	0xFEF
  7511                           postinc0	equ	0xFEE
  7512                           fsr0h	equ	0xFEA
  7513                           fsr0l	equ	0xFE9
  7514                           wreg	equ	0xFE8
  7515                           fsr1h	equ	0xFE2
  7516                           fsr1l	equ	0xFE1
  7517                           indf2	equ	0xFDF
  7518                           fsr2h	equ	0xFDA
  7519                           fsr2l	equ	0xFD9
  7520                           status	equ	0xFD8
  7521                           
  7522 ;; *************** function i2_GLCD_WriteString *****************
  7523 ;; Defined at:
  7524 ;;		line 70 in file "ks0108lib/KS0108.c"
  7525 ;; Parameters:    Size  Location     Type
  7526 ;;  stringToWrit    2   13[COMRAM] PTR unsigned char 
  7527 ;;		 -> STR_16(5), STR_15(4), STR_14(13), STR_13(4), 
  7528 ;;		 -> Draw_runTime_Menu@display(10), STR_12(11), STR_11(10), STR_10(9), 
  7529 ;;		 -> STR_9(10), STR_8(9), STR_7(11), STR_6(11), 
  7530 ;;		 -> STR_5(4), Initialize_Menus@display(10), STR_4(8), STR_3(7), 
  7531 ;;		 -> STR_2(10), STR_1(7), Run_Time_Menu_Function@display(10), 
  7532 ;; Auto vars:     Size  Location     Type
  7533 ;;		None
  7534 ;; Return value:  Size  Location     Type
  7535 ;;                  1    wreg      void 
  7536 ;; Registers used:
  7537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7538 ;; Tracked objects:
  7539 ;;		On entry : 0/0
  7540 ;;		On exit  : 0/0
  7541 ;;		Unchanged: 0/0
  7542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7547 ;;Total ram usage:        2 bytes
  7548 ;; Hardware stack levels used:    1
  7549 ;; Hardware stack levels required when called:    4
  7550 ;; This function calls:
  7551 ;;		i2_GLCD_WriteChar
  7552 ;; This function is called by:
  7553 ;;		_Run_Time_Menu_Function
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text51
  7558  001014                     __ptext51:
  7559                           	opt stack 0
  7560  001014                     i2_GLCD_WriteString:
  7561                           	opt stack 15
  7562                           
  7563                           ;KS0108.c: 72: while(*stringToWrite)
  7564                           
  7565                           ;incstack = 0
  7566  001014  D015               	goto	i2l522
  7567  001016                     
  7568                           ;KS0108.c: 73: GLCD_WriteChar(*stringToWrite++);
  7569  001016  C00E  FFF6         	movff	i2GLCD_WriteString@stringToWrite,tblptrl
  7570  00101A  C00F  FFF7         	movff	i2GLCD_WriteString@stringToWrite+1,tblptrh
  7571  00101E  0E00               	movlw	low (__mediumconst shr (0+16))
  7572  001020  6EF8               	movwf	tblptru,c
  7573  001022  0E0E               	movlw	(high __ramtop+-1)
  7574  001024  64F7               	cpfsgt	tblptrh,c
  7575  001026  D003               	bra	i2u199_47
  7576  001028  0008               	tblrd		*
  7577  00102A  50F5               	movf	tablat,w,c
  7578  00102C  D005               	bra	i2u199_40
  7579  00102E                     i2u199_47:
  7580  00102E  CFF6 FFE9          	movff	tblptrl,fsr0l
  7581  001032  CFF7 FFEA          	movff	tblptrh,fsr0h
  7582  001036  50EF               	movf	indf0,w,c
  7583  001038                     i2u199_40:
  7584  001038  EC88  F008         	call	i2_GLCD_WriteChar
  7585  00103C  4A0E               	infsnz	i2GLCD_WriteString@stringToWrite,f,c
  7586  00103E  2A0F               	incf	i2GLCD_WriteString@stringToWrite+1,f,c
  7587  001040                     i2l522:
  7588  001040  C00E  FFF6         	movff	i2GLCD_WriteString@stringToWrite,tblptrl
  7589  001044  C00F  FFF7         	movff	i2GLCD_WriteString@stringToWrite+1,tblptrh
  7590  001048  0E00               	movlw	low (__mediumconst shr (0+16))
  7591  00104A  6EF8               	movwf	tblptru,c
  7592  00104C  0E0E               	movlw	(high __ramtop+-1)
  7593  00104E  64F7               	cpfsgt	tblptrh,c
  7594  001050  D003               	bra	i2u200_47
  7595  001052  0008               	tblrd		*
  7596  001054  50F5               	movf	tablat,w,c
  7597  001056  D005               	bra	i2u200_40
  7598  001058                     i2u200_47:
  7599  001058  CFF6 FFE9          	movff	tblptrl,fsr0l
  7600  00105C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7601  001060  50EF               	movf	indf0,w,c
  7602  001062                     i2u200_40:
  7603  001062  0900               	iorlw	0
  7604  001064  B4D8               	btfsc	status,2,c
  7605  001066  0012               	return	
  7606  001068  D7D6               	goto	i2l523
  7607  00106A                     __end_ofi2_GLCD_WriteString:
  7608                           	opt stack 0
  7609                           tosu	equ	0xFFF
  7610                           tosh	equ	0xFFE
  7611                           tosl	equ	0xFFD
  7612                           pclatu	equ	0xFFB
  7613                           pclath	equ	0xFFA
  7614                           tblptru	equ	0xFF8
  7615                           tblptrh	equ	0xFF7
  7616                           tblptrl	equ	0xFF6
  7617                           tablat	equ	0xFF5
  7618                           prodh	equ	0xFF4
  7619                           prodl	equ	0xFF3
  7620                           intcon	equ	0xFF2
  7621                           indf0	equ	0xFEF
  7622                           postinc0	equ	0xFEE
  7623                           fsr0h	equ	0xFEA
  7624                           fsr0l	equ	0xFE9
  7625                           wreg	equ	0xFE8
  7626                           fsr1h	equ	0xFE2
  7627                           fsr1l	equ	0xFE1
  7628                           indf2	equ	0xFDF
  7629                           fsr2h	equ	0xFDA
  7630                           fsr2l	equ	0xFD9
  7631                           status	equ	0xFD8
  7632                           
  7633 ;; *************** function i2_GLCD_WriteChar *****************
  7634 ;; Defined at:
  7635 ;;		line 56 in file "ks0108lib/KS0108.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;  charToWrite     1    wreg     unsigned char 
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;  charToWrite     1   10[COMRAM] unsigned char 
  7640 ;;  GLCD_WriteCh    2   11[COMRAM] int 
  7641 ;; Return value:  Size  Location     Type
  7642 ;;                  1    wreg      void 
  7643 ;; Registers used:
  7644 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7645 ;; Tracked objects:
  7646 ;;		On entry : 0/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7651 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7653 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7654 ;;Total ram usage:        3 bytes
  7655 ;; Hardware stack levels used:    1
  7656 ;; Hardware stack levels required when called:    3
  7657 ;; This function calls:
  7658 ;;		i2_GLCD_WriteData
  7659 ;; This function is called by:
  7660 ;;		i2_GLCD_WriteString
  7661 ;; This function uses a non-reentrant model
  7662 ;;
  7663                           
  7664                           	psect	text52
  7665  001110                     __ptext52:
  7666                           	opt stack 0
  7667  001110                     i2_GLCD_WriteChar:
  7668                           	opt stack 15
  7669                           
  7670                           ;incstack = 0
  7671                           ;i2GLCD_WriteChar@charToWrite stored from wreg
  7672  001110  6E0B               	movwf	i2GLCD_WriteChar@charToWrite,c
  7673                           
  7674                           ;KS0108.c: 58: int i;
  7675                           ;KS0108.c: 59: charToWrite -= 32;
  7676  001112  0E20               	movlw	32
  7677  001114  5E0B               	subwf	i2GLCD_WriteChar@charToWrite,f,c
  7678                           
  7679                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
  7680  001116  0E00               	movlw	0
  7681  001118  6E0D               	movwf	i2GLCD_WriteChar@i+1,c
  7682  00111A  0E00               	movlw	0
  7683  00111C  6E0C               	movwf	i2GLCD_WriteChar@i,c
  7684  00111E                     i2l3134:
  7685  00111E  BE0D               	btfsc	i2GLCD_WriteChar@i+1,7,c
  7686  001120  D006               	goto	i2l517
  7687  001122  500D               	movf	i2GLCD_WriteChar@i+1,w,c
  7688  001124  E11A               	bnz	i2l3144
  7689  001126  0E05               	movlw	5
  7690  001128  5C0C               	subwf	i2GLCD_WriteChar@i,w,c
  7691  00112A  B0D8               	btfsc	status,0,c
  7692  00112C  D016               	goto	i2u166_40
  7693  00112E                     i2l517:
  7694                           
  7695                           ;KS0108.c: 61: {
  7696                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
  7697  00112E  500B               	movf	i2GLCD_WriteChar@charToWrite,w,c
  7698  001130  0D05               	mullw	5
  7699  001132  500C               	movf	i2GLCD_WriteChar@i,w,c
  7700  001134  26F3               	addwf	prodl,f,c
  7701  001136  500D               	movf	i2GLCD_WriteChar@i+1,w,c
  7702  001138  22F4               	addwfc	prodh,f,c
  7703  00113A  0EA1               	movlw	low _font5x8
  7704  00113C  24F3               	addwf	prodl,w,c
  7705  00113E  6EF6               	movwf	tblptrl,c
  7706  001140  0EFD               	movlw	high _font5x8
  7707  001142  20F4               	addwfc	prodh,w,c
  7708  001144  6EF7               	movwf	tblptrh,c
  7709  001146                     	if	1	;There are 3 active tblptr bytes
  7710  001146  6AF8               	clrf	tblptru,c
  7711  001148  0E00               	movlw	low (__mediumconst shr (0+16))
  7712  00114A  22F8               	addwfc	tblptru,f,c
  7713  00114C                     	endif
  7714  00114C  0008               	tblrd		*
  7715  00114E  50F5               	movf	tablat,w,c
  7716  001150  ECC8  F006         	call	i2_GLCD_WriteData
  7717  001154  4A0C               	infsnz	i2GLCD_WriteChar@i,f,c
  7718  001156  2A0D               	incf	i2GLCD_WriteChar@i+1,f,c
  7719  001158  D7E2               	goto	i2l3134
  7720  00115A                     i2u166_40:
  7721  00115A                     i2l3144:
  7722                           
  7723                           ;KS0108.c: 64: }
  7724                           ;KS0108.c: 65: GLCD_WriteData(0x00);
  7725  00115A  0E00               	movlw	0
  7726  00115C  ECC8  F006         	call	i2_GLCD_WriteData
  7727  001160  0012               	return		;funcret
  7728  001162                     __end_ofi2_GLCD_WriteChar:
  7729                           	opt stack 0
  7730                           tosu	equ	0xFFF
  7731                           tosh	equ	0xFFE
  7732                           tosl	equ	0xFFD
  7733                           pclatu	equ	0xFFB
  7734                           pclath	equ	0xFFA
  7735                           tblptru	equ	0xFF8
  7736                           tblptrh	equ	0xFF7
  7737                           tblptrl	equ	0xFF6
  7738                           tablat	equ	0xFF5
  7739                           prodh	equ	0xFF4
  7740                           prodl	equ	0xFF3
  7741                           intcon	equ	0xFF2
  7742                           indf0	equ	0xFEF
  7743                           postinc0	equ	0xFEE
  7744                           fsr0h	equ	0xFEA
  7745                           fsr0l	equ	0xFE9
  7746                           wreg	equ	0xFE8
  7747                           fsr1h	equ	0xFE2
  7748                           fsr1l	equ	0xFE1
  7749                           indf2	equ	0xFDF
  7750                           fsr2h	equ	0xFDA
  7751                           fsr2l	equ	0xFD9
  7752                           status	equ	0xFD8
  7753                           
  7754 ;; *************** function _Main_Menu_Function *****************
  7755 ;; Defined at:
  7756 ;;		line 196 in file "mcc_generated_files/pin_manager.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;  result          1    wreg     unsigned char 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;  result          1   23[COMRAM] unsigned char 
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  1    wreg      void 
  7763 ;; Registers used:
  7764 ;;		wreg, status,2, status,0, cstack
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/0
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7774 ;;Total ram usage:        1 bytes
  7775 ;; Hardware stack levels used:    1
  7776 ;; Hardware stack levels required when called:    6
  7777 ;; This function calls:
  7778 ;;		i2_Draw_Arrow
  7779 ;; This function is called by:
  7780 ;;		_PIN_MANAGER_IOC
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784                           	psect	text53
  7785  001576                     __ptext53:
  7786                           	opt stack 0
  7787  001576                     _Main_Menu_Function:
  7788                           	opt stack 14
  7789                           
  7790                           ;incstack = 0
  7791                           ;Main_Menu_Function@result stored from wreg
  7792  001576  6E18               	movwf	Main_Menu_Function@result,c
  7793                           
  7794                           ;pin_manager.c: 199: if(result)
  7795  001578  5018               	movf	Main_Menu_Function@result,w,c
  7796  00157A  B4D8               	btfsc	status,2,c
  7797  00157C  D005               	goto	i2l150
  7798                           
  7799                           ;pin_manager.c: 200: {
  7800                           ;pin_manager.c: 201: if(mainState < selectState) mainState = mainState + 1;
  7801  00157E  0E07               	movlw	7
  7802  001580  6041               	cpfslt	_mainState,c
  7803  001582  D007               	goto	i2l153
  7804  001584  2841               	incf	_mainState,w,c
  7805  001586  D004               	goto	L6
  7806  001588                     i2l150:
  7807                           
  7808                           ;pin_manager.c: 203: else
  7809                           ;pin_manager.c: 204: {
  7810                           ;pin_manager.c: 205: if(mainState > setRunTime) mainState = mainState - 1;
  7811  001588  0E02               	movlw	2
  7812  00158A  6441               	cpfsgt	_mainState,c
  7813  00158C  D002               	goto	i2l153
  7814  00158E  0441               	decf	_mainState,w,c
  7815  001590                     L6:
  7816  001590  6E41               	movwf	_mainState,c
  7817  001592                     i2l153:
  7818                           
  7819                           ;pin_manager.c: 206: }
  7820                           ;pin_manager.c: 209: Draw_Arrow();
  7821  001592  EC17  F009         	call	i2_Draw_Arrow	;wreg free
  7822  001596  0012               	return		;funcret
  7823  001598                     __end_of_Main_Menu_Function:
  7824                           	opt stack 0
  7825                           tosu	equ	0xFFF
  7826                           tosh	equ	0xFFE
  7827                           tosl	equ	0xFFD
  7828                           pclatu	equ	0xFFB
  7829                           pclath	equ	0xFFA
  7830                           tblptru	equ	0xFF8
  7831                           tblptrh	equ	0xFF7
  7832                           tblptrl	equ	0xFF6
  7833                           tablat	equ	0xFF5
  7834                           prodh	equ	0xFF4
  7835                           prodl	equ	0xFF3
  7836                           intcon	equ	0xFF2
  7837                           indf0	equ	0xFEF
  7838                           postinc0	equ	0xFEE
  7839                           fsr0h	equ	0xFEA
  7840                           fsr0l	equ	0xFE9
  7841                           wreg	equ	0xFE8
  7842                           fsr1h	equ	0xFE2
  7843                           fsr1l	equ	0xFE1
  7844                           indf2	equ	0xFDF
  7845                           fsr2h	equ	0xFDA
  7846                           fsr2l	equ	0xFD9
  7847                           status	equ	0xFD8
  7848                           
  7849 ;; *************** function i2_Draw_Arrow *****************
  7850 ;; Defined at:
  7851 ;;		line 51 in file "screen_controls.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;		None
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;		None
  7856 ;; Return value:  Size  Location     Type
  7857 ;;                  1    wreg      void 
  7858 ;; Registers used:
  7859 ;;		wreg, status,2, status,0, cstack
  7860 ;; Tracked objects:
  7861 ;;		On entry : 0/0
  7862 ;;		On exit  : 0/0
  7863 ;;		Unchanged: 0/0
  7864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7869 ;;Total ram usage:        0 bytes
  7870 ;; Hardware stack levels used:    1
  7871 ;; Hardware stack levels required when called:    5
  7872 ;; This function calls:
  7873 ;;		i2_Clear_Arrow_Column
  7874 ;;		i2_Clear_runTime_Arrows
  7875 ;;		i2_Draw_runTime_Arrow
  7876 ;;		i2_GLCD_GoTo
  7877 ;;		i2_Make_Arrow
  7878 ;; This function is called by:
  7879 ;;		_Main_Menu_Function
  7880 ;;		_Run_Time_Menu_Function
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text54
  7885  00122E                     __ptext54:
  7886                           	opt stack 0
  7887  00122E                     i2_Draw_Arrow:
  7888                           	opt stack 14
  7889                           
  7890                           ;screen_controls.c: 55: switch(currentContext)
  7891                           
  7892                           ;incstack = 0
  7893  00122E  D019               	goto	i2l645
  7894  001230                     
  7895                           ;screen_controls.c: 58: Clear_Arrow_Column();
  7896  001230  EC59  F007         	call	i2_Clear_Arrow_Column	;wreg free
  7897                           
  7898                           ;screen_controls.c: 59: GLCD_GoTo(0, mainState);
  7899  001234  C041  F00C         	movff	_mainState,i2GLCD_GoTo@y
  7900  001238  0E00               	movlw	0
  7901  00123A  ECA5  F005         	call	i2_GLCD_GoTo
  7902                           
  7903                           ;screen_controls.c: 60: Make_Arrow();
  7904  00123E  ECFB  F00A         	call	i2_Make_Arrow	;wreg free
  7905                           
  7906                           ;screen_controls.c: 61: break;
  7907  001242  0012               	return	
  7908  001244                     
  7909                           ;screen_controls.c: 64: Clear_runTime_Arrows();
  7910  001244  EC68  F005         	call	i2_Clear_runTime_Arrows	;wreg free
  7911                           
  7912                           ;screen_controls.c: 65: Draw_runTime_Arrow();
  7913  001248  EC90  F006         	call	i2_Draw_runTime_Arrow	;wreg free
  7914                           
  7915                           ;screen_controls.c: 66: break;
  7916  00124C  0012               	return	
  7917  00124E                     
  7918                           ;screen_controls.c: 69: Clear_Arrow_Column();
  7919  00124E  EC59  F007         	call	i2_Clear_Arrow_Column	;wreg free
  7920                           
  7921                           ;screen_controls.c: 70: GLCD_GoTo(0, mainState);
  7922  001252  C041  F00C         	movff	_mainState,i2GLCD_GoTo@y
  7923  001256  0E00               	movlw	0
  7924  001258  ECA5  F005         	call	i2_GLCD_GoTo
  7925                           
  7926                           ;screen_controls.c: 71: Make_Arrow();
  7927  00125C  ECFB  F00A         	call	i2_Make_Arrow	;wreg free
  7928                           
  7929                           ;screen_controls.c: 73: }
  7930                           
  7931                           ;screen_controls.c: 72: break;
  7932  001260  0012               	return	
  7933  001262                     i2l645:
  7934  001262  5040               	movf	_currentContext,w,c
  7935                           
  7936                           ; Switch size 1, requested type "space"
  7937                           ; Number of cases is 2, Range of values is 0 to 1
  7938                           ; switch strategies available:
  7939                           ; Name         Instructions Cycles
  7940                           ; simple_byte            7     4 (average)
  7941                           ;	Chosen strategy is simple_byte
  7942  001264  0A00               	xorlw	0	; case 0
  7943  001266  B4D8               	btfsc	status,2,c
  7944  001268  D7E3               	goto	i2l646
  7945  00126A  0A01               	xorlw	1	; case 1
  7946  00126C  B4D8               	btfsc	status,2,c
  7947  00126E  D7EA               	goto	i2l648
  7948  001270  D7EE               	goto	i2l649
  7949  001272                     __end_ofi2_Draw_Arrow:
  7950                           	opt stack 0
  7951                           tosu	equ	0xFFF
  7952                           tosh	equ	0xFFE
  7953                           tosl	equ	0xFFD
  7954                           pclatu	equ	0xFFB
  7955                           pclath	equ	0xFFA
  7956                           tblptru	equ	0xFF8
  7957                           tblptrh	equ	0xFF7
  7958                           tblptrl	equ	0xFF6
  7959                           tablat	equ	0xFF5
  7960                           prodh	equ	0xFF4
  7961                           prodl	equ	0xFF3
  7962                           intcon	equ	0xFF2
  7963                           indf0	equ	0xFEF
  7964                           postinc0	equ	0xFEE
  7965                           fsr0h	equ	0xFEA
  7966                           fsr0l	equ	0xFE9
  7967                           wreg	equ	0xFE8
  7968                           fsr1h	equ	0xFE2
  7969                           fsr1l	equ	0xFE1
  7970                           indf2	equ	0xFDF
  7971                           fsr2h	equ	0xFDA
  7972                           fsr2l	equ	0xFD9
  7973                           status	equ	0xFD8
  7974                           
  7975 ;; *************** function i2_Draw_runTime_Arrow *****************
  7976 ;; Defined at:
  7977 ;;		line 169 in file "screen_controls.c"
  7978 ;; Parameters:    Size  Location     Type
  7979 ;;		None
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;		None
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      void 
  7984 ;; Registers used:
  7985 ;;		wreg, status,2, status,0, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7995 ;;Total ram usage:        0 bytes
  7996 ;; Hardware stack levels used:    1
  7997 ;; Hardware stack levels required when called:    4
  7998 ;; This function calls:
  7999 ;;		i2_GLCD_GoTo
  8000 ;;		i2_Make_Arrow
  8001 ;; This function is called by:
  8002 ;;		i2_Draw_Arrow
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006                           	psect	text55
  8007  000D20                     __ptext55:
  8008                           	opt stack 0
  8009  000D20                     i2_Draw_runTime_Arrow:
  8010                           	opt stack 14
  8011                           
  8012                           ;screen_controls.c: 171: switch(runTimeContext)
  8013                           
  8014                           ;incstack = 0
  8015  000D20  D02C               	goto	i2l682
  8016  000D22                     
  8017                           ;screen_controls.c: 174: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  8018  000D22  0E02               	movlw	2
  8019  000D24  6E0C               	movwf	i2GLCD_GoTo@y,c
  8020  000D26  0100               	movlb	0	; () banked
  8021  000D28  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  8022  000D2A  0800               	sublw	0
  8023  000D2C  25AC               	addwf	_runTimeX& (0+255),w,b
  8024  000D2E  ECA5  F005         	call	i2_GLCD_GoTo
  8025                           
  8026                           ;screen_controls.c: 175: Make_Arrow();
  8027  000D32  ECFB  F00A         	call	i2_Make_Arrow	;wreg free
  8028                           
  8029                           ;screen_controls.c: 176: break;
  8030  000D36  0012               	return	
  8031  000D38                     
  8032                           ;screen_controls.c: 179: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  8033  000D38  0E04               	movlw	4
  8034  000D3A  6E0C               	movwf	i2GLCD_GoTo@y,c
  8035  000D3C  0100               	movlb	0	; () banked
  8036  000D3E  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  8037  000D40  0800               	sublw	0
  8038  000D42  25AC               	addwf	_runTimeX& (0+255),w,b
  8039  000D44  ECA5  F005         	call	i2_GLCD_GoTo
  8040                           
  8041                           ;screen_controls.c: 180: Make_Arrow();
  8042  000D48  ECFB  F00A         	call	i2_Make_Arrow	;wreg free
  8043                           
  8044                           ;screen_controls.c: 181: break;
  8045  000D4C  0012               	return	
  8046  000D4E                     
  8047                           ;screen_controls.c: 184: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  8048  000D4E  0E06               	movlw	6
  8049  000D50  6E0C               	movwf	i2GLCD_GoTo@y,c
  8050  000D52  0100               	movlb	0	; () banked
  8051  000D54  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  8052  000D56  0800               	sublw	0
  8053  000D58  25AC               	addwf	_runTimeX& (0+255),w,b
  8054  000D5A  ECA5  F005         	call	i2_GLCD_GoTo
  8055                           
  8056                           ;screen_controls.c: 185: Make_Arrow();
  8057  000D5E  ECFB  F00A         	call	i2_Make_Arrow	;wreg free
  8058                           
  8059                           ;screen_controls.c: 187: break;
  8060                           
  8061                           ;screen_controls.c: 186: break;
  8062  000D62  0012               	return	
  8063  000D64                     
  8064                           ;screen_controls.c: 190: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  8065  000D64  0E02               	movlw	2
  8066  000D66  6E0C               	movwf	i2GLCD_GoTo@y,c
  8067  000D68  0100               	movlb	0	; () banked
  8068  000D6A  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  8069  000D6C  0800               	sublw	0
  8070  000D6E  25AC               	addwf	_runTimeX& (0+255),w,b
  8071  000D70  ECA5  F005         	call	i2_GLCD_GoTo
  8072                           
  8073                           ;screen_controls.c: 191: Make_Arrow();
  8074  000D74  ECFB  F00A         	call	i2_Make_Arrow	;wreg free
  8075                           
  8076                           ;screen_controls.c: 195: }
  8077                           
  8078                           ;screen_controls.c: 192: break;
  8079  000D78  0012               	return	
  8080  000D7A                     i2l682:
  8081  000D7A  503F               	movf	_runTimeContext,w,c
  8082                           
  8083                           ; Switch size 1, requested type "space"
  8084                           ; Number of cases is 3, Range of values is 0 to 2
  8085                           ; switch strategies available:
  8086                           ; Name         Instructions Cycles
  8087                           ; simple_byte           10     6 (average)
  8088                           ;	Chosen strategy is simple_byte
  8089  000D7C  0A00               	xorlw	0	; case 0
  8090  000D7E  B4D8               	btfsc	status,2,c
  8091  000D80  D7D0               	goto	i2l683
  8092  000D82  0A01               	xorlw	1	; case 1
  8093  000D84  B4D8               	btfsc	status,2,c
  8094  000D86  D7D8               	goto	i2l685
  8095  000D88  0A03               	xorlw	3	; case 2
  8096  000D8A  B4D8               	btfsc	status,2,c
  8097  000D8C  D7E0               	goto	i2l686
  8098  000D8E  D7EA               	goto	i2l687
  8099  000D90                     __end_ofi2_Draw_runTime_Arrow:
  8100                           	opt stack 0
  8101                           tosu	equ	0xFFF
  8102                           tosh	equ	0xFFE
  8103                           tosl	equ	0xFFD
  8104                           pclatu	equ	0xFFB
  8105                           pclath	equ	0xFFA
  8106                           tblptru	equ	0xFF8
  8107                           tblptrh	equ	0xFF7
  8108                           tblptrl	equ	0xFF6
  8109                           tablat	equ	0xFF5
  8110                           prodh	equ	0xFF4
  8111                           prodl	equ	0xFF3
  8112                           intcon	equ	0xFF2
  8113                           indf0	equ	0xFEF
  8114                           postinc0	equ	0xFEE
  8115                           fsr0h	equ	0xFEA
  8116                           fsr0l	equ	0xFE9
  8117                           wreg	equ	0xFE8
  8118                           fsr1h	equ	0xFE2
  8119                           fsr1l	equ	0xFE1
  8120                           indf2	equ	0xFDF
  8121                           fsr2h	equ	0xFDA
  8122                           fsr2l	equ	0xFD9
  8123                           status	equ	0xFD8
  8124                           
  8125 ;; *************** function i2_Make_Arrow *****************
  8126 ;; Defined at:
  8127 ;;		line 78 in file "screen_controls.c"
  8128 ;; Parameters:    Size  Location     Type
  8129 ;;		None
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;		None
  8132 ;; Return value:  Size  Location     Type
  8133 ;;                  1    wreg      void 
  8134 ;; Registers used:
  8135 ;;		wreg, status,2, status,0, cstack
  8136 ;; Tracked objects:
  8137 ;;		On entry : 0/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8145 ;;Total ram usage:        0 bytes
  8146 ;; Hardware stack levels used:    1
  8147 ;; Hardware stack levels required when called:    3
  8148 ;; This function calls:
  8149 ;;		i2_GLCD_WriteData
  8150 ;; This function is called by:
  8151 ;;		i2_Draw_Arrow
  8152 ;;		i2_Draw_runTime_Arrow
  8153 ;; This function uses a non-reentrant model
  8154 ;;
  8155                           
  8156                           	psect	text56
  8157  0015F6                     __ptext56:
  8158                           	opt stack 0
  8159  0015F6                     i2_Make_Arrow:
  8160                           	opt stack 15
  8161                           
  8162                           ;screen_controls.c: 80: GLCD_WriteData(0x7E);
  8163                           
  8164                           ;incstack = 0
  8165  0015F6  0E7E               	movlw	126
  8166  0015F8  ECC8  F006         	call	i2_GLCD_WriteData
  8167                           
  8168                           ;screen_controls.c: 81: GLCD_WriteData(0x3C);
  8169  0015FC  0E3C               	movlw	60
  8170  0015FE  ECC8  F006         	call	i2_GLCD_WriteData
  8171                           
  8172                           ;screen_controls.c: 82: GLCD_WriteData(0x18);
  8173  001602  0E18               	movlw	24
  8174  001604  ECC8  F006         	call	i2_GLCD_WriteData
  8175  001608  0012               	return		;funcret
  8176  00160A                     __end_ofi2_Make_Arrow:
  8177                           	opt stack 0
  8178                           tosu	equ	0xFFF
  8179                           tosh	equ	0xFFE
  8180                           tosl	equ	0xFFD
  8181                           pclatu	equ	0xFFB
  8182                           pclath	equ	0xFFA
  8183                           tblptru	equ	0xFF8
  8184                           tblptrh	equ	0xFF7
  8185                           tblptrl	equ	0xFF6
  8186                           tablat	equ	0xFF5
  8187                           prodh	equ	0xFF4
  8188                           prodl	equ	0xFF3
  8189                           intcon	equ	0xFF2
  8190                           indf0	equ	0xFEF
  8191                           postinc0	equ	0xFEE
  8192                           fsr0h	equ	0xFEA
  8193                           fsr0l	equ	0xFE9
  8194                           wreg	equ	0xFE8
  8195                           fsr1h	equ	0xFE2
  8196                           fsr1l	equ	0xFE1
  8197                           indf2	equ	0xFDF
  8198                           fsr2h	equ	0xFDA
  8199                           fsr2l	equ	0xFD9
  8200                           status	equ	0xFD8
  8201                           
  8202 ;; *************** function i2_Clear_runTime_Arrows *****************
  8203 ;; Defined at:
  8204 ;;		line 144 in file "screen_controls.c"
  8205 ;; Parameters:    Size  Location     Type
  8206 ;;		None
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;  Clear_runTim    1   14[COMRAM] unsigned char 
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  1    wreg      void 
  8211 ;; Registers used:
  8212 ;;		wreg, status,2, status,0, cstack
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8222 ;;Total ram usage:        1 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:    4
  8225 ;; This function calls:
  8226 ;;		i2_GLCD_GoTo
  8227 ;;		i2_GLCD_WriteData
  8228 ;; This function is called by:
  8229 ;;		i2_Draw_Arrow
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           	psect	text57
  8234  000AD0                     __ptext57:
  8235                           	opt stack 0
  8236  000AD0                     i2_Clear_runTime_Arrows:
  8237                           	opt stack 14
  8238                           
  8239                           ;screen_controls.c: 146: unsigned char i=0;
  8240                           
  8241                           ;incstack = 0
  8242  000AD0  0E00               	movlw	0
  8243  000AD2  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
  8244                           
  8245                           ;screen_controls.c: 148: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  8246  000AD4  0E02               	movlw	2
  8247  000AD6  6E0C               	movwf	i2GLCD_GoTo@y,c
  8248  000AD8  0100               	movlb	0	; () banked
  8249  000ADA  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  8250  000ADC  0800               	sublw	0
  8251  000ADE  25AC               	addwf	_runTimeX& (0+255),w,b
  8252  000AE0  ECA5  F005         	call	i2_GLCD_GoTo
  8253                           
  8254                           ;screen_controls.c: 150: for(i=0; i<ARROW_SIZE; i++)
  8255  000AE4  0E00               	movlw	0
  8256  000AE6  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
  8257  000AE8  D004               	goto	i2l670
  8258  000AEA                     
  8259                           ;screen_controls.c: 151: {
  8260                           ;screen_controls.c: 152: GLCD_WriteData(0x00);
  8261  000AEA  0E00               	movlw	0
  8262  000AEC  ECC8  F006         	call	i2_GLCD_WriteData
  8263  000AF0  2A0F               	incf	i2Clear_runTime_Arrows@i,f,c
  8264  000AF2                     i2l670:
  8265  000AF2  0100               	movlb	0	; () banked
  8266  000AF4  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  8267  000AF6  5C0F               	subwf	i2Clear_runTime_Arrows@i,w,c
  8268  000AF8  A0D8               	btfss	status,0,c
  8269  000AFA  D7F7               	goto	i2l671
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;screen_controls.c: 153: }
  8273                           ;screen_controls.c: 155: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  8274                           
  8275                           ; BSR set to: 0
  8276  000AFC  0E04               	movlw	4
  8277  000AFE  6E0C               	movwf	i2GLCD_GoTo@y,c
  8278  000B00  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  8279  000B02  0800               	sublw	0
  8280  000B04  25AC               	addwf	_runTimeX& (0+255),w,b
  8281  000B06  ECA5  F005         	call	i2_GLCD_GoTo
  8282                           
  8283                           ;screen_controls.c: 156: for(i=0; i<ARROW_SIZE; i++)
  8284  000B0A  0E00               	movlw	0
  8285  000B0C  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
  8286  000B0E  D004               	goto	i2l673
  8287  000B10                     
  8288                           ;screen_controls.c: 157: {
  8289                           ;screen_controls.c: 158: GLCD_WriteData(0x00);
  8290  000B10  0E00               	movlw	0
  8291  000B12  ECC8  F006         	call	i2_GLCD_WriteData
  8292  000B16  2A0F               	incf	i2Clear_runTime_Arrows@i,f,c
  8293  000B18                     i2l673:
  8294  000B18  0100               	movlb	0	; () banked
  8295  000B1A  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  8296  000B1C  5C0F               	subwf	i2Clear_runTime_Arrows@i,w,c
  8297  000B1E  A0D8               	btfss	status,0,c
  8298  000B20  D7F7               	goto	i2l674
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;screen_controls.c: 159: }
  8302                           ;screen_controls.c: 161: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  8303                           
  8304                           ; BSR set to: 0
  8305  000B22  0E06               	movlw	6
  8306  000B24  6E0C               	movwf	i2GLCD_GoTo@y,c
  8307  000B26  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  8308  000B28  0800               	sublw	0
  8309  000B2A  25AC               	addwf	_runTimeX& (0+255),w,b
  8310  000B2C  ECA5  F005         	call	i2_GLCD_GoTo
  8311                           
  8312                           ;screen_controls.c: 162: for(i=0; i<ARROW_SIZE; i++)
  8313  000B30  0E00               	movlw	0
  8314  000B32  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
  8315  000B34  D004               	goto	i2l676
  8316  000B36                     
  8317                           ;screen_controls.c: 163: {
  8318                           ;screen_controls.c: 164: GLCD_WriteData(0x00);
  8319  000B36  0E00               	movlw	0
  8320  000B38  ECC8  F006         	call	i2_GLCD_WriteData
  8321  000B3C  2A0F               	incf	i2Clear_runTime_Arrows@i,f,c
  8322  000B3E                     i2l676:
  8323  000B3E  0100               	movlb	0	; () banked
  8324  000B40  51AB               	movf	_ARROW_SIZE& (0+255),w,b
  8325  000B42  5C0F               	subwf	i2Clear_runTime_Arrows@i,w,c
  8326  000B44  B0D8               	btfsc	status,0,c
  8327  000B46  0012               	return	
  8328  000B48  D7F6               	goto	i2l677
  8329  000B4A                     __end_ofi2_Clear_runTime_Arrows:
  8330                           	opt stack 0
  8331                           tosu	equ	0xFFF
  8332                           tosh	equ	0xFFE
  8333                           tosl	equ	0xFFD
  8334                           pclatu	equ	0xFFB
  8335                           pclath	equ	0xFFA
  8336                           tblptru	equ	0xFF8
  8337                           tblptrh	equ	0xFF7
  8338                           tblptrl	equ	0xFF6
  8339                           tablat	equ	0xFF5
  8340                           prodh	equ	0xFF4
  8341                           prodl	equ	0xFF3
  8342                           intcon	equ	0xFF2
  8343                           indf0	equ	0xFEF
  8344                           postinc0	equ	0xFEE
  8345                           fsr0h	equ	0xFEA
  8346                           fsr0l	equ	0xFE9
  8347                           wreg	equ	0xFE8
  8348                           fsr1h	equ	0xFE2
  8349                           fsr1l	equ	0xFE1
  8350                           indf2	equ	0xFDF
  8351                           fsr2h	equ	0xFDA
  8352                           fsr2l	equ	0xFD9
  8353                           status	equ	0xFD8
  8354                           
  8355 ;; *************** function i2_Clear_Arrow_Column *****************
  8356 ;; Defined at:
  8357 ;;		line 98 in file "screen_controls.c"
  8358 ;; Parameters:    Size  Location     Type
  8359 ;;		None
  8360 ;; Auto vars:     Size  Location     Type
  8361 ;;  Clear_Arrow_    1   22[COMRAM] unsigned char 
  8362 ;;  Clear_Arrow_    1   21[COMRAM] unsigned char 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  1    wreg      void 
  8365 ;; Registers used:
  8366 ;;		wreg, status,2, status,0, cstack
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8373 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8374 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8375 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8376 ;;Total ram usage:        9 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:    4
  8379 ;; This function calls:
  8380 ;;		i2_GLCD_GoTo
  8381 ;;		i2_GLCD_WriteData
  8382 ;; This function is called by:
  8383 ;;		i2_Draw_Arrow
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           
  8387                           	psect	text58
  8388  000EB2                     __ptext58:
  8389                           	opt stack 0
  8390  000EB2                     i2_Clear_Arrow_Column:
  8391                           	opt stack 14
  8392                           
  8393                           ;screen_controls.c: 100: unsigned char i, j;
  8394                           ;screen_controls.c: 102: for(i = 0; i < 64/8; i++)
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;incstack = 0
  8398  000EB2  0E00               	movlw	0
  8399  000EB4  6E17               	movwf	i2Clear_Arrow_Column@i,c
  8400  000EB6                     i2l3148:
  8401  000EB6  0E07               	movlw	7
  8402  000EB8  6417               	cpfsgt	i2Clear_Arrow_Column@i,c
  8403  000EBA  D001               	goto	i2l659
  8404  000EBC  0012               	return	
  8405  000EBE                     i2l659:
  8406                           
  8407                           ;screen_controls.c: 103: {
  8408                           ;screen_controls.c: 104: GLCD_GoTo(0, i);
  8409  000EBE  C017  F00C         	movff	i2Clear_Arrow_Column@i,i2GLCD_GoTo@y
  8410  000EC2  0E00               	movlw	0
  8411  000EC4  ECA5  F005         	call	i2_GLCD_GoTo
  8412                           
  8413                           ;screen_controls.c: 106: for(j = 0; j < (xMenuStart - 1); j++)
  8414  000EC8  0E00               	movlw	0
  8415  000ECA  6E16               	movwf	i2Clear_Arrow_Column@j,c
  8416  000ECC  D004               	goto	i2l661
  8417  000ECE                     
  8418                           ;screen_controls.c: 107: {
  8419                           ;screen_controls.c: 108: GLCD_WriteData(0x00);
  8420  000ECE  0E00               	movlw	0
  8421  000ED0  ECC8  F006         	call	i2_GLCD_WriteData
  8422  000ED4  2A16               	incf	i2Clear_Arrow_Column@j,f,c
  8423  000ED6                     i2l661:
  8424  000ED6  0EFF               	movlw	255
  8425  000ED8  6E0F               	movwf	??i2_Clear_Arrow_Column& (0+255),c
  8426  000EDA  0EFF               	movlw	255
  8427  000EDC  6E10               	movwf	(??i2_Clear_Arrow_Column+1)& (0+255),c
  8428  000EDE  0100               	movlb	0	; () banked
  8429  000EE0  51AA               	movf	_xMenuStart& (0+255),w,b
  8430  000EE2  6E11               	movwf	(??i2_Clear_Arrow_Column+2)& (0+255),c
  8431  000EE4  6A12               	clrf	(??i2_Clear_Arrow_Column+3)& (0+255),c
  8432  000EE6  500F               	movf	??i2_Clear_Arrow_Column,w,c
  8433  000EE8  2611               	addwf	??i2_Clear_Arrow_Column+2,f,c
  8434  000EEA  5010               	movf	??i2_Clear_Arrow_Column+1,w,c
  8435  000EEC  2212               	addwfc	??i2_Clear_Arrow_Column+3,f,c
  8436  000EEE  5016               	movf	i2Clear_Arrow_Column@j,w,c
  8437  000EF0  6E13               	movwf	(??i2_Clear_Arrow_Column+4)& (0+255),c
  8438  000EF2  6A14               	clrf	(??i2_Clear_Arrow_Column+5)& (0+255),c
  8439  000EF4  5011               	movf	??i2_Clear_Arrow_Column+2,w,c
  8440  000EF6  5C13               	subwf	??i2_Clear_Arrow_Column+4,w,c
  8441  000EF8  5014               	movf	??i2_Clear_Arrow_Column+5,w,c
  8442  000EFA  0A80               	xorlw	128
  8443  000EFC  6E15               	movwf	(??i2_Clear_Arrow_Column+6)& (0+255),c
  8444  000EFE  5012               	movf	??i2_Clear_Arrow_Column+3,w,c
  8445  000F00  0A80               	xorlw	128
  8446  000F02  5815               	subwfb	(??i2_Clear_Arrow_Column+6)& (0+255),w,c
  8447  000F04  A0D8               	btfss	status,0,c
  8448  000F06  D7E3               	goto	i2l662
  8449                           
  8450                           ; BSR set to: 0
  8451                           
  8452                           ; BSR set to: 0
  8453  000F08  2A17               	incf	i2Clear_Arrow_Column@i,f,c
  8454  000F0A  D7D5               	goto	i2l3148
  8455  000F0C                     __end_ofi2_Clear_Arrow_Column:
  8456                           	opt stack 0
  8457                           tosu	equ	0xFFF
  8458                           tosh	equ	0xFFE
  8459                           tosl	equ	0xFFD
  8460                           pclatu	equ	0xFFB
  8461                           pclath	equ	0xFFA
  8462                           tblptru	equ	0xFF8
  8463                           tblptrh	equ	0xFF7
  8464                           tblptrl	equ	0xFF6
  8465                           tablat	equ	0xFF5
  8466                           prodh	equ	0xFF4
  8467                           prodl	equ	0xFF3
  8468                           intcon	equ	0xFF2
  8469                           indf0	equ	0xFEF
  8470                           postinc0	equ	0xFEE
  8471                           fsr0h	equ	0xFEA
  8472                           fsr0l	equ	0xFE9
  8473                           wreg	equ	0xFE8
  8474                           fsr1h	equ	0xFE2
  8475                           fsr1l	equ	0xFE1
  8476                           indf2	equ	0xFDF
  8477                           fsr2h	equ	0xFDA
  8478                           fsr2l	equ	0xFD9
  8479                           status	equ	0xFD8
  8480                           
  8481 ;; *************** function i2_GLCD_WriteData *****************
  8482 ;; Defined at:
  8483 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;  dataToWrite     1    wreg     unsigned char 
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;  dataToWrite     1    9[COMRAM] unsigned char 
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  1    wreg      void 
  8490 ;; Registers used:
  8491 ;;		wreg, status,2, status,0, cstack
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8499 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8501 ;;Total ram usage:        2 bytes
  8502 ;; Hardware stack levels used:    1
  8503 ;; Hardware stack levels required when called:    2
  8504 ;; This function calls:
  8505 ;;		i2_GLCD_Delay
  8506 ;;		i2_GLCD_DisableController
  8507 ;;		i2_GLCD_EnableController
  8508 ;;		i2_GLCD_ReadStatus
  8509 ;;		i2___awdiv
  8510 ;; This function is called by:
  8511 ;;		i2_GLCD_WriteChar
  8512 ;;		i2_Make_Arrow
  8513 ;;		i2_Clear_Arrow_Column
  8514 ;;		i2_Clear_runTime_Arrows
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           	psect	text59
  8519  000D90                     __ptext59:
  8520                           	opt stack 0
  8521  000D90                     i2_GLCD_WriteData:
  8522                           	opt stack 15
  8523                           
  8524                           ;incstack = 0
  8525                           ;i2GLCD_WriteData@dataToWrite stored from wreg
  8526  000D90  6E0A               	movwf	i2GLCD_WriteData@dataToWrite,c
  8527  000D92                     
  8528                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  8529  000D92  C0A8  F001         	movff	_screen_x,i2___awdiv@dividend
  8530  000D96  6A02               	clrf	i2___awdiv@dividend+1,c
  8531  000D98  0E00               	movlw	0
  8532  000D9A  6E04               	movwf	i2___awdiv@divisor+1,c
  8533  000D9C  0E40               	movlw	64
  8534  000D9E  6E03               	movwf	i2___awdiv@divisor,c
  8535  000DA0  ECE6  F004         	call	i2___awdiv	;wreg free
  8536  000DA4  5001               	movf	?i2___awdiv,w,c
  8537  000DA6  EC98  F00A         	call	i2_GLCD_ReadStatus
  8538  000DAA  6E09               	movwf	??i2_GLCD_WriteData& (0+255),c
  8539  000DAC  BE09               	btfsc	??i2_GLCD_WriteData,7,c
  8540  000DAE  D7F1               	goto	i2l2892
  8541                           
  8542                           ;KS0108-PIC18.c: 116: TRISC = 0x00;
  8543  000DB0  0E00               	movlw	0
  8544  000DB2  6E94               	movwf	3988,c	;volatile
  8545                           
  8546                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
  8547  000DB4  9280               	bcf	3968,1,c	;volatile
  8548                           
  8549                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
  8550  000DB6  8480               	bsf	3968,2,c	;volatile
  8551                           
  8552                           ;KS0108-PIC18.c: 119: PORTC = dataToWrite;
  8553  000DB8  C00A  FF82         	movff	i2GLCD_WriteData@dataToWrite,3970	;volatile
  8554                           
  8555                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
  8556  000DBC  C0A8  F001         	movff	_screen_x,i2___awdiv@dividend
  8557  000DC0  6A02               	clrf	i2___awdiv@dividend+1,c
  8558  000DC2  0E00               	movlw	0
  8559  000DC4  6E04               	movwf	i2___awdiv@divisor+1,c
  8560  000DC6  0E40               	movlw	64
  8561  000DC8  6E03               	movwf	i2___awdiv@divisor,c
  8562  000DCA  ECE6  F004         	call	i2___awdiv	;wreg free
  8563  000DCE  5001               	movf	?i2___awdiv,w,c
  8564  000DD0  EC72  F00A         	call	i2_GLCD_EnableController
  8565                           
  8566                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
  8567  000DD4  8680               	bsf	3968,3,c	;volatile
  8568                           
  8569                           ;KS0108-PIC18.c: 122: GLCD_Delay();
  8570  000DD6  EC2A  F00B         	call	i2_GLCD_Delay	;wreg free
  8571                           
  8572                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
  8573  000DDA  9680               	bcf	3968,3,c	;volatile
  8574                           
  8575                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
  8576  000DDC  C0A8  F001         	movff	_screen_x,i2___awdiv@dividend
  8577  000DE0  6A02               	clrf	i2___awdiv@dividend+1,c
  8578  000DE2  0E00               	movlw	0
  8579  000DE4  6E04               	movwf	i2___awdiv@divisor+1,c
  8580  000DE6  0E40               	movlw	64
  8581  000DE8  6E03               	movwf	i2___awdiv@divisor,c
  8582  000DEA  ECE6  F004         	call	i2___awdiv	;wreg free
  8583  000DEE  5001               	movf	?i2___awdiv,w,c
  8584  000DF0  EC85  F00A         	call	i2_GLCD_DisableController
  8585                           
  8586                           ;KS0108-PIC18.c: 125: screen_x++;
  8587  000DF4  0100               	movlb	0	; () banked
  8588  000DF6  2BA8               	incf	_screen_x& (0+255),f,b
  8589                           
  8590                           ; BSR set to: 0
  8591  000DF8  0012               	return		;funcret
  8592  000DFA                     __end_ofi2_GLCD_WriteData:
  8593                           	opt stack 0
  8594                           tosu	equ	0xFFF
  8595                           tosh	equ	0xFFE
  8596                           tosl	equ	0xFFD
  8597                           pclatu	equ	0xFFB
  8598                           pclath	equ	0xFFA
  8599                           tblptru	equ	0xFF8
  8600                           tblptrh	equ	0xFF7
  8601                           tblptrl	equ	0xFF6
  8602                           tablat	equ	0xFF5
  8603                           prodh	equ	0xFF4
  8604                           prodl	equ	0xFF3
  8605                           intcon	equ	0xFF2
  8606                           indf0	equ	0xFEF
  8607                           postinc0	equ	0xFEE
  8608                           fsr0h	equ	0xFEA
  8609                           fsr0l	equ	0xFE9
  8610                           wreg	equ	0xFE8
  8611                           fsr1h	equ	0xFE2
  8612                           fsr1l	equ	0xFE1
  8613                           indf2	equ	0xFDF
  8614                           fsr2h	equ	0xFDA
  8615                           fsr2l	equ	0xFD9
  8616                           status	equ	0xFD8
  8617                           
  8618 ;; *************** function i2_GLCD_GoTo *****************
  8619 ;; Defined at:
  8620 ;;		line 25 in file "ks0108lib/KS0108.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;  x               1    wreg     unsigned char 
  8623 ;;  y               1   11[COMRAM] unsigned char 
  8624 ;; Auto vars:     Size  Location     Type
  8625 ;;  x               1   12[COMRAM] unsigned char 
  8626 ;;  GLCD_GoTo       1   13[COMRAM] unsigned char 
  8627 ;; Return value:  Size  Location     Type
  8628 ;;                  1    wreg      void 
  8629 ;; Registers used:
  8630 ;;		wreg, status,2, status,0, cstack
  8631 ;; Tracked objects:
  8632 ;;		On entry : 0/0
  8633 ;;		On exit  : 0/0
  8634 ;;		Unchanged: 0/0
  8635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8636 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8639 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8640 ;;Total ram usage:        3 bytes
  8641 ;; Hardware stack levels used:    1
  8642 ;; Hardware stack levels required when called:    3
  8643 ;; This function calls:
  8644 ;;		i2_GLCD_WriteCommand
  8645 ;;		i2___awdiv
  8646 ;; This function is called by:
  8647 ;;		_Run_Time_Menu_Function
  8648 ;;		i2_Draw_Arrow
  8649 ;;		i2_Clear_Arrow_Column
  8650 ;;		i2_Clear_runTime_Arrows
  8651 ;;		i2_Draw_runTime_Arrow
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text60
  8656  000B4A                     __ptext60:
  8657                           	opt stack 0
  8658  000B4A                     i2_GLCD_GoTo:
  8659                           	opt stack 16
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;incstack = 0
  8663                           ;i2GLCD_GoTo@x stored from wreg
  8664  000B4A  6E0D               	movwf	i2GLCD_GoTo@x,c
  8665                           
  8666                           ;KS0108.c: 27: unsigned char i;
  8667                           ;KS0108.c: 28: screen_x = x;
  8668  000B4C  C00D  F0A8         	movff	i2GLCD_GoTo@x,_screen_x
  8669                           
  8670                           ;KS0108.c: 29: screen_y = y;
  8671  000B50  C00C  F0A7         	movff	i2GLCD_GoTo@y,_screen_y
  8672                           
  8673                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
  8674  000B54  0E00               	movlw	0
  8675  000B56  6E0E               	movwf	i2GLCD_GoTo@i,c
  8676  000B58                     i2l3024:
  8677  000B58  0E01               	movlw	1
  8678  000B5A  640E               	cpfsgt	i2GLCD_GoTo@i,c
  8679  000B5C  D001               	goto	i2l505
  8680  000B5E  D012               	goto	i2u152_40
  8681  000B60                     i2l505:
  8682                           
  8683                           ;KS0108.c: 32: {
  8684                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
  8685  000B60  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  8686  000B64  0E40               	movlw	64
  8687  000B66  EC05  F00A         	call	i2_GLCD_WriteCommand
  8688                           
  8689                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
  8690  000B6A  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  8691  000B6E  500C               	movf	i2GLCD_GoTo@y,w,c
  8692  000B70  09B8               	iorlw	184
  8693  000B72  EC05  F00A         	call	i2_GLCD_WriteCommand
  8694                           
  8695                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
  8696  000B76  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  8697  000B7A  0EC0               	movlw	192
  8698  000B7C  EC05  F00A         	call	i2_GLCD_WriteCommand
  8699  000B80  2A0E               	incf	i2GLCD_GoTo@i,f,c
  8700  000B82  D7EA               	goto	i2l3024
  8701  000B84                     i2u152_40:
  8702                           
  8703                           ;KS0108.c: 36: }
  8704                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
  8705  000B84  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
  8706  000B88  6A02               	clrf	i2___awdiv@dividend+1,c
  8707  000B8A  0E00               	movlw	0
  8708  000B8C  6E04               	movwf	i2___awdiv@divisor+1,c
  8709  000B8E  0E40               	movlw	64
  8710  000B90  6E03               	movwf	i2___awdiv@divisor,c
  8711  000B92  ECE6  F004         	call	i2___awdiv	;wreg free
  8712  000B96  5001               	movf	?i2___awdiv,w,c
  8713  000B98  6E09               	movwf	i2GLCD_WriteCommand@controller,c
  8714  000B9A  500D               	movf	i2GLCD_GoTo@x,w,c
  8715  000B9C  0B3F               	andlw	63
  8716  000B9E  0940               	iorlw	64
  8717  000BA0  EC05  F00A         	call	i2_GLCD_WriteCommand
  8718                           
  8719                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
  8720  000BA4  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
  8721  000BA8  6A02               	clrf	i2___awdiv@dividend+1,c
  8722  000BAA  0E00               	movlw	0
  8723  000BAC  6E04               	movwf	i2___awdiv@divisor+1,c
  8724  000BAE  0E40               	movlw	64
  8725  000BB0  6E03               	movwf	i2___awdiv@divisor,c
  8726  000BB2  ECE6  F004         	call	i2___awdiv	;wreg free
  8727  000BB6  5001               	movf	?i2___awdiv,w,c
  8728  000BB8  6E09               	movwf	i2GLCD_WriteCommand@controller,c
  8729  000BBA  500C               	movf	i2GLCD_GoTo@y,w,c
  8730  000BBC  09B8               	iorlw	184
  8731  000BBE  EC05  F00A         	call	i2_GLCD_WriteCommand
  8732  000BC2  0012               	return		;funcret
  8733  000BC4                     __end_ofi2_GLCD_GoTo:
  8734                           	opt stack 0
  8735                           tosu	equ	0xFFF
  8736                           tosh	equ	0xFFE
  8737                           tosl	equ	0xFFD
  8738                           pclatu	equ	0xFFB
  8739                           pclath	equ	0xFFA
  8740                           tblptru	equ	0xFF8
  8741                           tblptrh	equ	0xFF7
  8742                           tblptrl	equ	0xFF6
  8743                           tablat	equ	0xFF5
  8744                           prodh	equ	0xFF4
  8745                           prodl	equ	0xFF3
  8746                           intcon	equ	0xFF2
  8747                           indf0	equ	0xFEF
  8748                           postinc0	equ	0xFEE
  8749                           fsr0h	equ	0xFEA
  8750                           fsr0l	equ	0xFE9
  8751                           wreg	equ	0xFE8
  8752                           fsr1h	equ	0xFE2
  8753                           fsr1l	equ	0xFE1
  8754                           indf2	equ	0xFDF
  8755                           fsr2h	equ	0xFDA
  8756                           fsr2l	equ	0xFD9
  8757                           status	equ	0xFD8
  8758                           
  8759 ;; *************** function i2___awdiv *****************
  8760 ;; Defined at:
  8761 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;  dividend        2    0[COMRAM] int 
  8764 ;;  divisor         2    2[COMRAM] int 
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;  __awdiv         2    6[COMRAM] int 
  8767 ;;  __awdiv         1    5[COMRAM] unsigned char 
  8768 ;;  __awdiv         1    4[COMRAM] unsigned char 
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  2    0[COMRAM] int 
  8771 ;; Registers used:
  8772 ;;		wreg, status,2, status,0
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8779 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8781 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8782 ;;Total ram usage:        8 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; This function calls:
  8785 ;;		Nothing
  8786 ;; This function is called by:
  8787 ;;		i2_GLCD_GoTo
  8788 ;;		i2_GLCD_WriteData
  8789 ;; This function uses a non-reentrant model
  8790 ;;
  8791                           
  8792                           	psect	text61
  8793  0009CC                     __ptext61:
  8794                           	opt stack 0
  8795  0009CC                     i2___awdiv:
  8796                           	opt stack 16
  8797                           
  8798                           ;incstack = 0
  8799  0009CC  0E00               	movlw	0
  8800  0009CE  6E06               	movwf	i2___awdiv@sign,c
  8801  0009D0  AE04               	btfss	i2___awdiv@divisor+1,7,c
  8802  0009D2  D006               	goto	i2l856
  8803  0009D4  6C03               	negf	i2___awdiv@divisor,c
  8804  0009D6  1E04               	comf	i2___awdiv@divisor+1,f,c
  8805  0009D8  B0D8               	btfsc	status,0,c
  8806  0009DA  2A04               	incf	i2___awdiv@divisor+1,f,c
  8807  0009DC  0E01               	movlw	1
  8808  0009DE  6E06               	movwf	i2___awdiv@sign,c
  8809  0009E0                     i2l856:
  8810  0009E0  AE02               	btfss	i2___awdiv@dividend+1,7,c
  8811  0009E2  D006               	goto	i2l857
  8812  0009E4  6C01               	negf	i2___awdiv@dividend,c
  8813  0009E6  1E02               	comf	i2___awdiv@dividend+1,f,c
  8814  0009E8  B0D8               	btfsc	status,0,c
  8815  0009EA  2A02               	incf	i2___awdiv@dividend+1,f,c
  8816  0009EC  0E01               	movlw	1
  8817  0009EE  1A06               	xorwf	i2___awdiv@sign,f,c
  8818  0009F0                     i2l857:
  8819  0009F0  0E00               	movlw	0
  8820  0009F2  6E08               	movwf	i2___awdiv@quotient+1,c
  8821  0009F4  0E00               	movlw	0
  8822  0009F6  6E07               	movwf	i2___awdiv@quotient,c
  8823  0009F8  5003               	movf	i2___awdiv@divisor,w,c
  8824  0009FA  1004               	iorwf	i2___awdiv@divisor+1,w,c
  8825  0009FC  B4D8               	btfsc	status,2,c
  8826  0009FE  D01C               	goto	i2l864
  8827  000A00  0E01               	movlw	1
  8828  000A02  6E05               	movwf	i2___awdiv@counter,c
  8829  000A04  D004               	goto	i2l859
  8830  000A06  90D8               	bcf	status,0,c
  8831  000A08  3603               	rlcf	i2___awdiv@divisor,f,c
  8832  000A0A  3604               	rlcf	i2___awdiv@divisor+1,f,c
  8833  000A0C  2A05               	incf	i2___awdiv@counter,f,c
  8834  000A0E                     i2l859:
  8835  000A0E  AE04               	btfss	i2___awdiv@divisor+1,7,c
  8836  000A10  D7FA               	goto	i2l860
  8837  000A12                     i2u129_40:
  8838  000A12  90D8               	bcf	status,0,c
  8839  000A14  3607               	rlcf	i2___awdiv@quotient,f,c
  8840  000A16  3608               	rlcf	i2___awdiv@quotient+1,f,c
  8841  000A18  5003               	movf	i2___awdiv@divisor,w,c
  8842  000A1A  5C01               	subwf	i2___awdiv@dividend,w,c
  8843  000A1C  5004               	movf	i2___awdiv@divisor+1,w,c
  8844  000A1E  5802               	subwfb	i2___awdiv@dividend+1,w,c
  8845  000A20  A0D8               	btfss	status,0,c
  8846  000A22  D005               	goto	i2l863
  8847  000A24  5003               	movf	i2___awdiv@divisor,w,c
  8848  000A26  5E01               	subwf	i2___awdiv@dividend,f,c
  8849  000A28  5004               	movf	i2___awdiv@divisor+1,w,c
  8850  000A2A  5A02               	subwfb	i2___awdiv@dividend+1,f,c
  8851  000A2C  8007               	bsf	i2___awdiv@quotient,0,c
  8852  000A2E                     i2l863:
  8853  000A2E  90D8               	bcf	status,0,c
  8854  000A30  3204               	rrcf	i2___awdiv@divisor+1,f,c
  8855  000A32  3203               	rrcf	i2___awdiv@divisor,f,c
  8856  000A34  2E05               	decfsz	i2___awdiv@counter,f,c
  8857  000A36  D7ED               	goto	i2u129_40
  8858  000A38                     i2l864:
  8859  000A38  5006               	movf	i2___awdiv@sign,w,c
  8860  000A3A  B4D8               	btfsc	status,2,c
  8861  000A3C  D004               	goto	i2l865
  8862  000A3E  6C07               	negf	i2___awdiv@quotient,c
  8863  000A40  1E08               	comf	i2___awdiv@quotient+1,f,c
  8864  000A42  B0D8               	btfsc	status,0,c
  8865  000A44  2A08               	incf	i2___awdiv@quotient+1,f,c
  8866  000A46                     i2l865:
  8867  000A46  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  8868  000A4A  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  8869  000A4E  0012               	return	
  8870  000A50                     __end_ofi2___awdiv:
  8871                           	opt stack 0
  8872                           tosu	equ	0xFFF
  8873                           tosh	equ	0xFFE
  8874                           tosl	equ	0xFFD
  8875                           pclatu	equ	0xFFB
  8876                           pclath	equ	0xFFA
  8877                           tblptru	equ	0xFF8
  8878                           tblptrh	equ	0xFF7
  8879                           tblptrl	equ	0xFF6
  8880                           tablat	equ	0xFF5
  8881                           prodh	equ	0xFF4
  8882                           prodl	equ	0xFF3
  8883                           intcon	equ	0xFF2
  8884                           indf0	equ	0xFEF
  8885                           postinc0	equ	0xFEE
  8886                           fsr0h	equ	0xFEA
  8887                           fsr0l	equ	0xFE9
  8888                           wreg	equ	0xFE8
  8889                           fsr1h	equ	0xFE2
  8890                           fsr1l	equ	0xFE1
  8891                           indf2	equ	0xFDF
  8892                           fsr2h	equ	0xFDA
  8893                           fsr2l	equ	0xFD9
  8894                           status	equ	0xFD8
  8895                           
  8896 ;; *************** function i2_GLCD_WriteCommand *****************
  8897 ;; Defined at:
  8898 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;  commandToWri    1    wreg     unsigned char 
  8901 ;;  controller      1    8[COMRAM] unsigned char 
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;  commandToWri    1   10[COMRAM] unsigned char 
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      void 
  8906 ;; Registers used:
  8907 ;;		wreg, status,2, status,0, cstack
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8913 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8915 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8916 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8917 ;;Total ram usage:        3 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:    2
  8920 ;; This function calls:
  8921 ;;		i2_GLCD_Delay
  8922 ;;		i2_GLCD_DisableController
  8923 ;;		i2_GLCD_EnableController
  8924 ;;		i2_GLCD_ReadStatus
  8925 ;; This function is called by:
  8926 ;;		i2_GLCD_GoTo
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           	psect	text62
  8931  00140A                     __ptext62:
  8932                           	opt stack 0
  8933  00140A                     i2_GLCD_WriteCommand:
  8934                           	opt stack 16
  8935                           
  8936                           ;incstack = 0
  8937                           ;i2GLCD_WriteCommand@commandToWrite stored from wreg
  8938  00140A  6E0B               	movwf	i2GLCD_WriteCommand@commandToWrite,c
  8939  00140C                     
  8940                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
  8941  00140C  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  8942  00140E  EC98  F00A         	call	i2_GLCD_ReadStatus
  8943  001412  6E0A               	movwf	??i2_GLCD_WriteCommand& (0+255),c
  8944  001414  BE0A               	btfsc	??i2_GLCD_WriteCommand,7,c
  8945  001416  D7FA               	goto	i2l2872
  8946                           
  8947                           ;KS0108-PIC18.c: 82: TRISC = 0x00;
  8948  001418  0E00               	movlw	0
  8949  00141A  6E94               	movwf	3988,c	;volatile
  8950                           
  8951                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
  8952  00141C  0EF9               	movlw	249
  8953  00141E  1680               	andwf	3968,f,c	;volatile
  8954                           
  8955                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
  8956  001420  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  8957  001422  EC72  F00A         	call	i2_GLCD_EnableController
  8958                           
  8959                           ;KS0108-PIC18.c: 85: PORTC = commandToWrite;
  8960  001426  C00B  FF82         	movff	i2GLCD_WriteCommand@commandToWrite,3970	;volatile
  8961                           
  8962                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
  8963  00142A  8680               	bsf	3968,3,c	;volatile
  8964                           
  8965                           ;KS0108-PIC18.c: 87: GLCD_Delay();
  8966  00142C  EC2A  F00B         	call	i2_GLCD_Delay	;wreg free
  8967                           
  8968                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
  8969  001430  9680               	bcf	3968,3,c	;volatile
  8970                           
  8971                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
  8972  001432  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  8973  001434  EC85  F00A         	call	i2_GLCD_DisableController
  8974  001438  0012               	return		;funcret
  8975  00143A                     __end_ofi2_GLCD_WriteCommand:
  8976                           	opt stack 0
  8977                           tosu	equ	0xFFF
  8978                           tosh	equ	0xFFE
  8979                           tosl	equ	0xFFD
  8980                           pclatu	equ	0xFFB
  8981                           pclath	equ	0xFFA
  8982                           tblptru	equ	0xFF8
  8983                           tblptrh	equ	0xFF7
  8984                           tblptrl	equ	0xFF6
  8985                           tablat	equ	0xFF5
  8986                           prodh	equ	0xFF4
  8987                           prodl	equ	0xFF3
  8988                           intcon	equ	0xFF2
  8989                           indf0	equ	0xFEF
  8990                           postinc0	equ	0xFEE
  8991                           fsr0h	equ	0xFEA
  8992                           fsr0l	equ	0xFE9
  8993                           wreg	equ	0xFE8
  8994                           fsr1h	equ	0xFE2
  8995                           fsr1l	equ	0xFE1
  8996                           indf2	equ	0xFDF
  8997                           fsr2h	equ	0xFDA
  8998                           fsr2l	equ	0xFD9
  8999                           status	equ	0xFD8
  9000                           
  9001 ;; *************** function i2_GLCD_ReadStatus *****************
  9002 ;; Defined at:
  9003 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;  controller      1    wreg     unsigned char 
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;  controller      1    2[COMRAM] unsigned char 
  9008 ;;  GLCD_ReadSta    1    1[COMRAM] unsigned char 
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  1    wreg      unsigned char 
  9011 ;; Registers used:
  9012 ;;		wreg, status,2, status,0, cstack
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9022 ;;Total ram usage:        2 bytes
  9023 ;; Hardware stack levels used:    1
  9024 ;; Hardware stack levels required when called:    1
  9025 ;; This function calls:
  9026 ;;		i2_GLCD_Delay
  9027 ;;		i2_GLCD_DisableController
  9028 ;;		i2_GLCD_EnableController
  9029 ;; This function is called by:
  9030 ;;		i2_GLCD_WriteCommand
  9031 ;;		i2_GLCD_WriteData
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035                           	psect	text63
  9036  001530                     __ptext63:
  9037                           	opt stack 0
  9038  001530                     i2_GLCD_ReadStatus:
  9039                           	opt stack 15
  9040                           
  9041                           ;incstack = 0
  9042                           ;i2GLCD_ReadStatus@controller stored from wreg
  9043  001530  6E03               	movwf	i2GLCD_ReadStatus@controller,c
  9044                           
  9045                           ;KS0108-PIC18.c: 64: unsigned char status;
  9046                           ;KS0108-PIC18.c: 65: TRISC = 0xFF;
  9047  001532  6894               	setf	3988,c	;volatile
  9048                           
  9049                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
  9050  001534  8280               	bsf	3968,1,c	;volatile
  9051                           
  9052                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
  9053  001536  9480               	bcf	3968,2,c	;volatile
  9054                           
  9055                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
  9056  001538  5003               	movf	i2GLCD_ReadStatus@controller,w,c
  9057  00153A  EC72  F00A         	call	i2_GLCD_EnableController
  9058                           
  9059                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
  9060  00153E  8680               	bsf	3968,3,c	;volatile
  9061                           
  9062                           ;KS0108-PIC18.c: 70: GLCD_Delay();
  9063  001540  EC2A  F00B         	call	i2_GLCD_Delay	;wreg free
  9064                           
  9065                           ;KS0108-PIC18.c: 71: status = PORTC;
  9066  001544  CF82 F002          	movff	3970,i2GLCD_ReadStatus@status	;volatile
  9067                           
  9068                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
  9069  001548  9680               	bcf	3968,3,c	;volatile
  9070                           
  9071                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
  9072  00154A  5003               	movf	i2GLCD_ReadStatus@controller,w,c
  9073  00154C  EC85  F00A         	call	i2_GLCD_DisableController
  9074                           
  9075                           ;KS0108-PIC18.c: 74: return status;
  9076  001550  5002               	movf	i2GLCD_ReadStatus@status,w,c
  9077  001552  0012               	return	
  9078  001554                     __end_ofi2_GLCD_ReadStatus:
  9079                           	opt stack 0
  9080                           tosu	equ	0xFFF
  9081                           tosh	equ	0xFFE
  9082                           tosl	equ	0xFFD
  9083                           pclatu	equ	0xFFB
  9084                           pclath	equ	0xFFA
  9085                           tblptru	equ	0xFF8
  9086                           tblptrh	equ	0xFF7
  9087                           tblptrl	equ	0xFF6
  9088                           tablat	equ	0xFF5
  9089                           prodh	equ	0xFF4
  9090                           prodl	equ	0xFF3
  9091                           intcon	equ	0xFF2
  9092                           indf0	equ	0xFEF
  9093                           postinc0	equ	0xFEE
  9094                           fsr0h	equ	0xFEA
  9095                           fsr0l	equ	0xFE9
  9096                           wreg	equ	0xFE8
  9097                           fsr1h	equ	0xFE2
  9098                           fsr1l	equ	0xFE1
  9099                           indf2	equ	0xFDF
  9100                           fsr2h	equ	0xFDA
  9101                           fsr2l	equ	0xFD9
  9102                           status	equ	0xFD8
  9103                           
  9104 ;; *************** function i2_GLCD_EnableController *****************
  9105 ;; Defined at:
  9106 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;  controller      1    wreg     unsigned char 
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;  controller      1    0[COMRAM] unsigned char 
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  1    wreg      void 
  9113 ;; Registers used:
  9114 ;;		wreg, status,2, status,0
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/0
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9123 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9124 ;;Total ram usage:        1 bytes
  9125 ;; Hardware stack levels used:    1
  9126 ;; This function calls:
  9127 ;;		Nothing
  9128 ;; This function is called by:
  9129 ;;		i2_GLCD_ReadStatus
  9130 ;;		i2_GLCD_WriteCommand
  9131 ;;		i2_GLCD_WriteData
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           	psect	text64
  9136  0014E4                     __ptext64:
  9137                           	opt stack 0
  9138  0014E4                     i2_GLCD_EnableController:
  9139                           	opt stack 15
  9140                           
  9141                           ;incstack = 0
  9142                           ;i2GLCD_EnableController@controller stored from wreg
  9143  0014E4  6E01               	movwf	i2GLCD_EnableController@controller,c
  9144                           
  9145                           ;KS0108-PIC18.c: 41: switch(controller){
  9146  0014E6  D006               	goto	i2l558
  9147  0014E8  9A80               	bcf	3968,5,c	;volatile
  9148  0014EA  0012               	return	
  9149  0014EC  9C80               	bcf	3968,6,c	;volatile
  9150  0014EE  0012               	return	
  9151  0014F0  9E80               	bcf	3968,7,c	;volatile
  9152                           
  9153                           ;KS0108-PIC18.c: 45: }
  9154  0014F2  0012               	return	
  9155  0014F4                     i2l558:
  9156  0014F4  5001               	movf	i2GLCD_EnableController@controller,w,c
  9157                           
  9158                           ; Switch size 1, requested type "space"
  9159                           ; Number of cases is 3, Range of values is 0 to 2
  9160                           ; switch strategies available:
  9161                           ; Name         Instructions Cycles
  9162                           ; simple_byte           10     6 (average)
  9163                           ;	Chosen strategy is simple_byte
  9164  0014F6  0A00               	xorlw	0	; case 0
  9165  0014F8  B4D8               	btfsc	status,2,c
  9166  0014FA  D7F6               	goto	i2l559
  9167  0014FC  0A01               	xorlw	1	; case 1
  9168  0014FE  B4D8               	btfsc	status,2,c
  9169  001500  D7F5               	goto	i2l561
  9170  001502  0A03               	xorlw	3	; case 2
  9171  001504  A4D8               	btfss	status,2,c
  9172  001506  0012               	return	
  9173  001508  D7F3               	goto	i2l562
  9174  00150A                     __end_ofi2_GLCD_EnableController:
  9175                           	opt stack 0
  9176                           tosu	equ	0xFFF
  9177                           tosh	equ	0xFFE
  9178                           tosl	equ	0xFFD
  9179                           pclatu	equ	0xFFB
  9180                           pclath	equ	0xFFA
  9181                           tblptru	equ	0xFF8
  9182                           tblptrh	equ	0xFF7
  9183                           tblptrl	equ	0xFF6
  9184                           tablat	equ	0xFF5
  9185                           prodh	equ	0xFF4
  9186                           prodl	equ	0xFF3
  9187                           intcon	equ	0xFF2
  9188                           indf0	equ	0xFEF
  9189                           postinc0	equ	0xFEE
  9190                           fsr0h	equ	0xFEA
  9191                           fsr0l	equ	0xFE9
  9192                           wreg	equ	0xFE8
  9193                           fsr1h	equ	0xFE2
  9194                           fsr1l	equ	0xFE1
  9195                           indf2	equ	0xFDF
  9196                           fsr2h	equ	0xFDA
  9197                           fsr2l	equ	0xFD9
  9198                           status	equ	0xFD8
  9199                           
  9200 ;; *************** function i2_GLCD_DisableController *****************
  9201 ;; Defined at:
  9202 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
  9203 ;; Parameters:    Size  Location     Type
  9204 ;;  controller      1    wreg     unsigned char 
  9205 ;; Auto vars:     Size  Location     Type
  9206 ;;  controller      1    0[COMRAM] unsigned char 
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  1    wreg      void 
  9209 ;; Registers used:
  9210 ;;		wreg, status,2, status,0
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9220 ;;Total ram usage:        1 bytes
  9221 ;; Hardware stack levels used:    1
  9222 ;; This function calls:
  9223 ;;		Nothing
  9224 ;; This function is called by:
  9225 ;;		i2_GLCD_ReadStatus
  9226 ;;		i2_GLCD_WriteCommand
  9227 ;;		i2_GLCD_WriteData
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           	psect	text65
  9232  00150A                     __ptext65:
  9233                           	opt stack 0
  9234  00150A                     i2_GLCD_DisableController:
  9235                           	opt stack 15
  9236                           
  9237                           ;incstack = 0
  9238                           ;i2GLCD_DisableController@controller stored from wreg
  9239  00150A  6E01               	movwf	i2GLCD_DisableController@controller,c
  9240                           
  9241                           ;KS0108-PIC18.c: 52: switch(controller)
  9242  00150C  D006               	goto	i2l566
  9243  00150E  8A80               	bsf	3968,5,c	;volatile
  9244  001510  0012               	return	
  9245  001512  8C80               	bsf	3968,6,c	;volatile
  9246  001514  0012               	return	
  9247  001516  8E80               	bsf	3968,7,c	;volatile
  9248                           
  9249                           ;KS0108-PIC18.c: 57: }
  9250  001518  0012               	return	
  9251  00151A                     i2l566:
  9252  00151A  5001               	movf	i2GLCD_DisableController@controller,w,c
  9253                           
  9254                           ; Switch size 1, requested type "space"
  9255                           ; Number of cases is 3, Range of values is 0 to 2
  9256                           ; switch strategies available:
  9257                           ; Name         Instructions Cycles
  9258                           ; simple_byte           10     6 (average)
  9259                           ;	Chosen strategy is simple_byte
  9260  00151C  0A00               	xorlw	0	; case 0
  9261  00151E  B4D8               	btfsc	status,2,c
  9262  001520  D7F6               	goto	i2l567
  9263  001522  0A01               	xorlw	1	; case 1
  9264  001524  B4D8               	btfsc	status,2,c
  9265  001526  D7F5               	goto	i2l569
  9266  001528  0A03               	xorlw	3	; case 2
  9267  00152A  A4D8               	btfss	status,2,c
  9268  00152C  0012               	return	
  9269  00152E  D7F3               	goto	i2l570
  9270  001530                     __end_ofi2_GLCD_DisableController:
  9271                           	opt stack 0
  9272                           tosu	equ	0xFFF
  9273                           tosh	equ	0xFFE
  9274                           tosl	equ	0xFFD
  9275                           pclatu	equ	0xFFB
  9276                           pclath	equ	0xFFA
  9277                           tblptru	equ	0xFF8
  9278                           tblptrh	equ	0xFF7
  9279                           tblptrl	equ	0xFF6
  9280                           tablat	equ	0xFF5
  9281                           prodh	equ	0xFF4
  9282                           prodl	equ	0xFF3
  9283                           intcon	equ	0xFF2
  9284                           indf0	equ	0xFEF
  9285                           postinc0	equ	0xFEE
  9286                           fsr0h	equ	0xFEA
  9287                           fsr0l	equ	0xFE9
  9288                           wreg	equ	0xFE8
  9289                           fsr1h	equ	0xFE2
  9290                           fsr1l	equ	0xFE1
  9291                           indf2	equ	0xFDF
  9292                           fsr2h	equ	0xFDA
  9293                           fsr2l	equ	0xFD9
  9294                           status	equ	0xFD8
  9295                           
  9296 ;; *************** function i2_GLCD_Delay *****************
  9297 ;; Defined at:
  9298 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;		None
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;		None
  9303 ;; Return value:  Size  Location     Type
  9304 ;;                  1    wreg      void 
  9305 ;; Registers used:
  9306 ;;		None
  9307 ;; Tracked objects:
  9308 ;;		On entry : 0/0
  9309 ;;		On exit  : 0/0
  9310 ;;		Unchanged: 0/0
  9311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9316 ;;Total ram usage:        0 bytes
  9317 ;; Hardware stack levels used:    1
  9318 ;; This function calls:
  9319 ;;		Nothing
  9320 ;; This function is called by:
  9321 ;;		i2_GLCD_ReadStatus
  9322 ;;		i2_GLCD_WriteCommand
  9323 ;;		i2_GLCD_WriteData
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           	psect	text66
  9328  001654                     __ptext66:
  9329                           	opt stack 0
  9330  001654                     i2_GLCD_Delay:
  9331                           	opt stack 15
  9332                           
  9333                           ;KS0108-PIC18.c: 26: __nop();
  9334                           
  9335                           ;incstack = 0
  9336  001654  F000               	nop	
  9337  001656  0012               	return		;funcret
  9338  001658                     __end_ofi2_GLCD_Delay:
  9339                           	opt stack 0
  9340                           tosu	equ	0xFFF
  9341                           tosh	equ	0xFFE
  9342                           tosl	equ	0xFFD
  9343                           pclatu	equ	0xFFB
  9344                           pclath	equ	0xFFA
  9345                           tblptru	equ	0xFF8
  9346                           tblptrh	equ	0xFF7
  9347                           tblptrl	equ	0xFF6
  9348                           tablat	equ	0xFF5
  9349                           prodh	equ	0xFF4
  9350                           prodl	equ	0xFF3
  9351                           intcon	equ	0xFF2
  9352                           indf0	equ	0xFEF
  9353                           postinc0	equ	0xFEE
  9354                           fsr0h	equ	0xFEA
  9355                           fsr0l	equ	0xFE9
  9356                           wreg	equ	0xFE8
  9357                           fsr1h	equ	0xFE2
  9358                           fsr1l	equ	0xFE1
  9359                           indf2	equ	0xFDF
  9360                           fsr2h	equ	0xFDA
  9361                           fsr2l	equ	0xFD9
  9362                           status	equ	0xFD8
  9363                           tosu	equ	0xFFF
  9364                           tosh	equ	0xFFE
  9365                           tosl	equ	0xFFD
  9366                           pclatu	equ	0xFFB
  9367                           pclath	equ	0xFFA
  9368                           tblptru	equ	0xFF8
  9369                           tblptrh	equ	0xFF7
  9370                           tblptrl	equ	0xFF6
  9371                           tablat	equ	0xFF5
  9372                           prodh	equ	0xFF4
  9373                           prodl	equ	0xFF3
  9374                           intcon	equ	0xFF2
  9375                           indf0	equ	0xFEF
  9376                           postinc0	equ	0xFEE
  9377                           fsr0h	equ	0xFEA
  9378                           fsr0l	equ	0xFE9
  9379                           wreg	equ	0xFE8
  9380                           fsr1h	equ	0xFE2
  9381                           fsr1l	equ	0xFE1
  9382                           indf2	equ	0xFDF
  9383                           fsr2h	equ	0xFDA
  9384                           fsr2l	equ	0xFD9
  9385                           status	equ	0xFD8
  9386                           
  9387                           	psect	text67
  9388  000000                     __ptext67:
  9389                           	opt stack 0
  9390                           tosu	equ	0xFFF
  9391                           tosh	equ	0xFFE
  9392                           tosl	equ	0xFFD
  9393                           pclatu	equ	0xFFB
  9394                           pclath	equ	0xFFA
  9395                           tblptru	equ	0xFF8
  9396                           tblptrh	equ	0xFF7
  9397                           tblptrl	equ	0xFF6
  9398                           tablat	equ	0xFF5
  9399                           prodh	equ	0xFF4
  9400                           prodl	equ	0xFF3
  9401                           intcon	equ	0xFF2
  9402                           indf0	equ	0xFEF
  9403                           postinc0	equ	0xFEE
  9404                           fsr0h	equ	0xFEA
  9405                           fsr0l	equ	0xFE9
  9406                           wreg	equ	0xFE8
  9407                           fsr1h	equ	0xFE2
  9408                           fsr1l	equ	0xFE1
  9409                           indf2	equ	0xFDF
  9410                           fsr2h	equ	0xFDA
  9411                           fsr2l	equ	0xFD9
  9412                           status	equ	0xFD8
  9413                           
  9414                           	psect	rparam
  9415  0000                     tosu	equ	0xFFF
  9416                           tosh	equ	0xFFE
  9417                           tosl	equ	0xFFD
  9418                           pclatu	equ	0xFFB
  9419                           pclath	equ	0xFFA
  9420                           tblptru	equ	0xFF8
  9421                           tblptrh	equ	0xFF7
  9422                           tblptrl	equ	0xFF6
  9423                           tablat	equ	0xFF5
  9424                           prodh	equ	0xFF4
  9425                           prodl	equ	0xFF3
  9426                           intcon	equ	0xFF2
  9427                           indf0	equ	0xFEF
  9428                           postinc0	equ	0xFEE
  9429                           fsr0h	equ	0xFEA
  9430                           fsr0l	equ	0xFE9
  9431                           wreg	equ	0xFE8
  9432                           fsr1h	equ	0xFE2
  9433                           fsr1l	equ	0xFE1
  9434                           indf2	equ	0xFDF
  9435                           fsr2h	equ	0xFDA
  9436                           fsr2l	equ	0xFD9
  9437                           status	equ	0xFD8
  9438                           
  9439                           	psect	temp
  9440  000045                     btemp:
  9441                           	opt stack 0
  9442  000045                     	ds	1
  9443  0000                     int$flags	set	btemp
  9444  0000                     wtemp6	set	btemp+1
  9445                           tosu	equ	0xFFF
  9446                           tosh	equ	0xFFE
  9447                           tosl	equ	0xFFD
  9448                           pclatu	equ	0xFFB
  9449                           pclath	equ	0xFFA
  9450                           tblptru	equ	0xFF8
  9451                           tblptrh	equ	0xFF7
  9452                           tblptrl	equ	0xFF6
  9453                           tablat	equ	0xFF5
  9454                           prodh	equ	0xFF4
  9455                           prodl	equ	0xFF3
  9456                           intcon	equ	0xFF2
  9457                           indf0	equ	0xFEF
  9458                           postinc0	equ	0xFEE
  9459                           fsr0h	equ	0xFEA
  9460                           fsr0l	equ	0xFE9
  9461                           wreg	equ	0xFE8
  9462                           fsr1h	equ	0xFE2
  9463                           fsr1l	equ	0xFE1
  9464                           indf2	equ	0xFDF
  9465                           fsr2h	equ	0xFDA
  9466                           fsr2l	equ	0xFD9
  9467                           status	equ	0xFD8


Data Sizes:
    Strings     125
    Constant    481
    Data        6
    BSS         11
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      68
    BANK0           160     63      77
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Run_Time_Menu_Function@display(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Run_Time_Menu_Function@display(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Run_Time_Menu_Function@display(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Run_Time_Menu_Function@display(COMRAM[10]), 

    GLCD_WriteString@stringToWrite	PTR unsigned char  size(2) Largest target is 13
		 -> STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[13]), STR_13(CODE[4]), 
		 -> Draw_runTime_Menu@display(BANK0[10]), STR_12(CODE[11]), STR_11(CODE[10]), STR_10(CODE[9]), 
		 -> STR_9(CODE[10]), STR_8(CODE[9]), STR_7(CODE[11]), STR_6(CODE[11]), 
		 -> STR_5(CODE[4]), Initialize_Menus@display(BANK0[10]), STR_4(CODE[8]), STR_3(CODE[7]), 
		 -> STR_2(CODE[10]), STR_1(CODE[7]), Run_Time_Menu_Function@display(COMRAM[10]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCB5_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCB5_DefaultInterruptHandler(), 

    IOCB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCB5_DefaultInterruptHandler(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCB4_DefaultInterruptHandler(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Run_Time_Menu_Function@display(COMRAM[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_PIN_MANAGER_IOC
    _PIN_MANAGER_IOC->_Run_Time_Menu_Function
    _Run_Time_Menu_Function->i2_itoa
    i2_itoa->i2_utoa
    i2_utoa->i2___lwdiv
    i2_GLCD_WriteString->i2_GLCD_WriteChar
    i2_GLCD_WriteChar->i2_GLCD_WriteData
    i2_Draw_Arrow->i2_Clear_Arrow_Column
    i2_Draw_runTime_Arrow->i2_GLCD_GoTo
    i2_Make_Arrow->i2_GLCD_WriteData
    i2_Clear_runTime_Arrows->i2_GLCD_GoTo
    i2_Clear_Arrow_Column->i2_GLCD_GoTo
    i2_GLCD_WriteData->i2___awdiv
    i2_GLCD_GoTo->i2_GLCD_WriteCommand
    i2_GLCD_WriteCommand->i2___awdiv
    i2_GLCD_ReadStatus->i2_GLCD_DisableController
    i2_GLCD_ReadStatus->i2_GLCD_EnableController

Critical Paths under _main in BANK0

    _main->_Check_Buttons
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB5_SetInterruptHandler
    _GLCD_Initalize->_GLCD_WriteCommand
    _Check_Buttons->_Draw_runTime_Menu
    _Check_Buttons->_Initialize_Menus
    _Initialize_Menus->_GLCD_Line
    _Draw_runTime_Menu->_GLCD_Line
    _itoa->_utoa
    _utoa->___lwdiv
    _Make_Back_Arrow->_GLCD_WriteData
    _GLCD_WriteString->_GLCD_WriteChar
    _GLCD_WriteChar->_GLCD_WriteData
    _GLCD_Line->_GLCD_SetPixel
    _GLCD_SetPixel->_GLCD_GoTo
    _GLCD_ReadData->___awdiv
    _GLCD_ClearScreen->_GLCD_GoTo
    _Draw_Arrow->_Clear_Arrow_Column
    _Draw_runTime_Arrow->_GLCD_GoTo
    _Make_Arrow->_GLCD_WriteData
    _Clear_runTime_Arrows->_GLCD_GoTo
    _Clear_Arrow_Column->_GLCD_GoTo
    _GLCD_WriteData->___awdiv
    _GLCD_GoTo->_GLCD_WriteCommand
    _GLCD_WriteCommand->___awdiv
    _GLCD_ReadStatus->_GLCD_DisableController
    _GLCD_ReadStatus->_GLCD_EnableController

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  181366
                                             62 BANK0      1     1      0
                      _Check_Buttons
                         _Draw_Arrow
                   _GLCD_ClearScreen
                     _GLCD_Initalize
                   _Initialize_Menus
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                   _EPWM1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              2 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     196
          _IOCB4_SetInterruptHandler
          _IOCB5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB5_SetInterruptHandler                            2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCD_Initalize                                       1     1      0     767
                                             11 BANK0      1     1      0
               _GLCD_InitializePorts
                  _GLCD_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _GLCD_InitializePorts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        1     1      0  105414
                                             61 BANK0      1     1      0
                         _Draw_Arrow
                  _Draw_runTime_Menu
                   _Initialize_Menus
 ---------------------------------------------------------------------------------
 (1) _Initialize_Menus                                    10    10      0   36012
                                             51 BANK0     10    10      0
                   _GLCD_ClearScreen
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _Draw_runTime_Menu                                   10    10      0   38357
                                             51 BANK0     10    10      0
                   _GLCD_ClearScreen
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
                    _Make_Back_Arrow
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    2304
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1307
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _Make_Back_Arrow                                      0     0      0    2301
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _GLCD_WriteString                                     2     0      2    3905
                                             13 BANK0      2     0      2
                     _GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (3) _GLCD_WriteChar                                       3     3      0    2392
                                             10 BANK0      3     3      0
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _GLCD_Line                                           30    22      8   16490
                                             21 BANK0     30    22      8
                      _GLCD_SetPixel
 ---------------------------------------------------------------------------------
 (3) _GLCD_SetPixel                                        7     5      2   14674
                                             14 BANK0      7     5      2
                          _GLCD_GoTo
                      _GLCD_ReadData
                     _GLCD_WriteData
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GLCD_ReadData                                        2     2      0    2302
                                              8 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _GLCD_ClearScreen                                     2     2      0    7834
                                             14 BANK0      2     2      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _Draw_Arrow                                           0     0      0   31045
                 _Clear_Arrow_Column
               _Clear_runTime_Arrows
                 _Draw_runTime_Arrow
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Draw_runTime_Arrow                                   0     0      0    7720
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Make_Arrow                                           0     0      0    2301
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_runTime_Arrows                                 1     1      0    7793
                                             14 BANK0      1     1      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_Arrow_Column                                   9     9      0    7812
                                             14 BANK0      9     9      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _GLCD_WriteData                                       2     2      0    2301
                                              8 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GLCD_GoTo                                            3     2      1    5419
                                             11 BANK0      3     2      1
                  _GLCD_WriteCommand
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2124
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _GLCD_WriteCommand                                    3     2      1     699
                                              8 BANK0      3     2      1
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _GLCD_ReadStatus                                      2     2      0     111
                                              1 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
 ---------------------------------------------------------------------------------
 (6) _GLCD_EnableController                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_DisableController                               1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_Delay                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                          18    18      0   21899
                                             39 COMRAM    18    18      0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     4     4      0   21899
                                             35 COMRAM     4     4      0
                 _Main_Menu_Function
             _Run_Time_Menu_Function
 ---------------------------------------------------------------------------------
 (11) _Run_Time_Menu_Function                             11    11      0   12665
                                             24 COMRAM    11    11      0
                       i2_Draw_Arrow
                        i2_GLCD_GoTo
                 i2_GLCD_WriteString
                             i2_itoa
 ---------------------------------------------------------------------------------
 (12) i2_itoa                                              8     2      6    1098
                                             16 COMRAM     8     2      6
                             i2_utoa
 ---------------------------------------------------------------------------------
 (13) i2_utoa                                              9     3      6     857
                                              7 COMRAM     9     3      6
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (14) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (14) i2___lwdiv                                           7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2_GLCD_WriteString                                  2     0      2     925
                                             13 COMRAM     2     0      2
                   i2_GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_WriteChar                                    3     3      0     828
                                             10 COMRAM     3     3      0
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (11) _Main_Menu_Function                                  1     1      0    9075
                                             23 COMRAM     1     1      0
                       i2_Draw_Arrow
 ---------------------------------------------------------------------------------
 (12) i2_Draw_Arrow                                        0     0      0    9053
               i2_Clear_Arrow_Column
             i2_Clear_runTime_Arrows
               i2_Draw_runTime_Arrow
                        i2_GLCD_GoTo
                       i2_Make_Arrow
 ---------------------------------------------------------------------------------
 (13) i2_Draw_runTime_Arrow                                0     0      0    2222
                        i2_GLCD_GoTo
                       i2_Make_Arrow
 ---------------------------------------------------------------------------------
 (13) i2_Make_Arrow                                        0     0      0     737
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (13) i2_Clear_runTime_Arrows                              1     1      0    2295
                                             14 COMRAM     1     1      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (13) i2_Clear_Arrow_Column                                9     9      0    2314
                                             14 COMRAM     9     9      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (14) i2_GLCD_WriteData                                    2     2      0     737
                                              8 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (12) i2_GLCD_GoTo                                         3     2      1    1485
                                             11 COMRAM     3     2      1
                i2_GLCD_WriteCommand
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (15) i2___awdiv                                           8     4      4     560
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_WriteCommand                                 3     2      1     373
                                              8 COMRAM     3     2      1
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2_GLCD_ReadStatus                                   2     2      0     111
                                              1 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
 ---------------------------------------------------------------------------------
 (16) i2_GLCD_EnableController                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_GLCD_DisableController                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_GLCD_Delay                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Draw_Arrow
       _Clear_Arrow_Column
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Clear_runTime_Arrows
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Draw_runTime_Arrow
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _Make_Arrow
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _Draw_runTime_Menu
       _GLCD_ClearScreen
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _Make_Back_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _Initialize_Menus
       _GLCD_ClearScreen
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
   _Draw_Arrow
     _Clear_Arrow_Column
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Clear_runTime_Arrows
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Draw_runTime_Arrow
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _Make_Arrow
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
   _GLCD_ClearScreen
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_WriteData
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv
   _GLCD_Initalize
     _GLCD_InitializePorts
     _GLCD_WriteCommand
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv (ARG)
   _Initialize_Menus
     _GLCD_ClearScreen
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_Line
       _GLCD_SetPixel
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_ReadData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
         ___awdiv
     _GLCD_WriteString
       _GLCD_WriteChar
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
       _IOCB5_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR4_Initialize
       _TMR4_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _Main_Menu_Function
       i2_Draw_Arrow
         i2_Clear_Arrow_Column
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_runTime_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Draw_runTime_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_GLCD_GoTo
           i2_GLCD_WriteCommand
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv (ARG)
           i2___awdiv
         i2_Make_Arrow
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
     _Run_Time_Menu_Function
       i2_Draw_Arrow
         i2_Clear_Arrow_Column
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_runTime_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Draw_runTime_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_GLCD_GoTo
           i2_GLCD_WriteCommand
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv (ARG)
           i2___awdiv
         i2_Make_Arrow
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
       i2_GLCD_GoTo
         i2_GLCD_WriteCommand
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
           i2_GLCD_ReadStatus
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
           i2___awdiv (ARG)
         i2___awdiv
       i2_GLCD_WriteString
         i2_GLCD_WriteChar
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
       i2_itoa
         i2_utoa
           i2___lwdiv
           i2___lwmod
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3F      4D       5       48.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      44       1       72.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      91       6        0.0%
DATA                 0      0      91       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jul 23 23:20:47 2020

              GLCD_WriteCommand@controller 0068                     _Run_Time_Menu_Function 08BE  
                GLCD_WriteData@dataToWrite 0069                            GLCD_Initalize@i 006B  
                             ___awdiv@sign 0065         __size_of_IOCB4_SetInterruptHandler 000A  
                       i2___lwdiv@dividend 0001                                __CFG_BORV$3 000000  
       i2GLCD_DisableController@controller 0001           GLCD_DisableController@controller 0060  
                          _timer0ReloadVal 009F                 ?_IOCB4_SetInterruptHandler 0060  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l500 1566                                        l420 132A  
                                      l510 13B0                                        l430 054A  
                                      l431 051C                                        l512 13C8  
                                      l440 059A                                        l505 0850  
                                      l441 058A                                        l433 052A  
                                      l522 0F92                                        l434 052E  
                                      l523 0F66                                        l443 05A2  
                                      l435 0532                                        l436 0536  
                                      l428 0514                                        l517 0FDE  
                                      l429 0572                                        l437 053A  
                                      l438 0540                                        l561 1470  
                                      l473 0202                                        l570 149E  
                                      l562 1474                                        l474 01A0  
                                      l475 01D4                                        l468 013E  
                                      l661 0E24                                        l645 121E  
                                      l469 0156                                        l566 14A2  
                                      l558 1478                                        l662 0E1A  
                                      l670 0A76                                        l646 11EC  
                                      l478 020A                                        l567 1496  
                                      l559 146C                                        l671 0A6C  
                                      l479 023E                                        l648 1200  
                                      l569 149A                                        l673 0A9E  
                                      l649 120A                                        l674 0A94  
                                      l682 0D0A                                        l659 0E08  
                                      l683 0CB2                                        l860 0982  
                                      l676 0AC6                                        l677 0ABC  
                                      l685 0CC8                                        l686 0CDE  
                                      l863 09AA                                        l687 0CF4  
                                      l864 09B4                                        l856 095C  
                                      l865 09C2                                        l857 096C  
                                      l859 098A                               __CFG_CPB$OFF 000000  
                                      _PR4 000FA9                               __CFG_CPD$OFF 000000  
                                      tosl 000FFD                                        wreg 000FE8  
              PIN_MANAGER_IOC@currentState 0024                         __size_of_GLCD_GoTo 0088  
                       __size_of_GLCD_Line 01B4                                       l1110 10AA  
                                     l1111 10B4                                       l1023 05B4  
                                     l1120 11D6                                       l1121 11E0  
                                     l1025 05F0                                       l1106 108A  
                                     l1026 0632                                       l1107 1082  
                                     l1019 1188                                       l1116 11BE  
                                     l1117 11B6                                       l3342 020A  
                                     l3086 0FCE                                       l3328 01A0  
                                     l3096 100C                                       l3356 0E00  
                                     l3284 13C0                                       l3276 13A8  
                                     l2808 136E                                       l2922 0848  
                                     l2934 0BC8                                       l3684 155E  
                                     STR_1 FFEF                                       STR_2 FFC4  
                                     STR_3 FFE8                                       STR_4 FFE0  
                                     STR_5 FFFB                                       STR_6 FFA5  
                                     STR_7 FF9A                                       STR_8 FFD7  
                                     STR_9 FFBA                                       u1420 0878  
                                     _LATA 000F89                                       u2230 0594  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     u1360 098E                                       u2240 0596  
                                     _LATD 000F8C                                       _LATE 000F8D  
                                     u1610 100C                                       u1460 108E  
                                     u2407 1308                                       u2417 0508  
                                     u1490 11C2                                       u1820 13D4  
                                     u1594 06E8                                       u1770 0F88  
                                     u1595 06E4                                       u1780 0FB4  
                                     u1870 0184                                       u1777 0F7E  
                                     u1787 0FAA                                       _TMR4 000F87  
                                     _WPUB 000F5B                                       _main 12F6  
                                     _itoa 1162                            _TMR0_StartTimer 1648  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                       i2___lwdiv@quotient 0005                                       indf0 000FEF  
                                     fsr2h 000FDA                                       fsr0l 000FE9  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     fsr2l 000FD9                                       btemp 0045  
                                     _utoa 05AC                                       prodh 000FF4  
          __end_ofi2_GLCD_EnableController 150A                                       prodl 000FF3  
                                     start 00B4                              __CFG_IESO$OFF 000000  
                            __CFG_MCLRE$ON 000000                        i2_GLCD_WriteCommand 140A  
                             ___param_bank 000000            __size_of_GLCD_DisableController 002A  
                      __size_of_GLCD_Delay 0004                    __end_of_TMR0_Initialize 136A  
           ??_TMR0_DefaultInterruptHandler 0001                    __end_of_GLCD_ReadStatus 1466  
           __size_of_OSCILLATOR_Initialize 0012              __end_of_OSCILLATOR_Initialize 161C  
                     _Clear_runTime_Arrows 0A50                                      ?_main 0001  
                                    ?_itoa 0070                            __end_of___awdiv 09CC  
                                    _EEADR 000F74                               ?i2_GLCD_GoTo 000C  
                                    STR_10 FFCE                                      STR_11 FFB0  
                                    STR_12 FF8F                                      STR_13 FFFB  
                                    STR_14 FF82                                      STR_15 FFFB  
                                    STR_16 FFF6          __end_of_IOCB4_SetInterruptHandler 163A  
                                    ?_utoa 0067                                      _T0CON 000FD5  
                          ___awdiv@divisor 0062                                      _T4CON 000F88  
                          __end_of___lwdiv 10BE                            __end_of___lwmod 11EA  
                                    i2l131 07C8                                      i2l133 07E6  
                                    i2l150 1588                                      i2l134 07CE  
                                    i2l135 082A                                      i2l207 005E  
                                    i2l160 08D8                                      i2l136 07D6  
                                    i2l153 1592                                      i2l209 0068  
                                    i2l170 0940                                      i2l146 07DE  
                                    i2l163 08DE                                      i2l157 092A  
                                    i2l165 091C                                      i2l158 0920  
                                    i2l167 093A                                      i2l159 08C8  
                                    i2l505 0B60                                      i2l522 1040  
                                    i2l523 1016                                      i2l517 112E  
                                    i2l561 14EC                                      i2l570 1516  
                                    i2l562 14F0                                      i2l661 0ED6  
                                    i2l645 1262                                      i2l566 151A  
                                    i2l558 14F4                                      i2l662 0ECE  
                                    i2l670 0AF2                                      i2l646 1230  
                                    i2l567 150E                                      i2l559 14E8  
                                    i2l671 0AEA                                      i2l648 1244  
                                    i2l569 1512                                      i2l673 0B18  
                                    i2l649 124E                                      i2l674 0B10  
                                    i2l682 0D7A                                      i2l659 0EBE  
                                    i2l683 0D22                                      i2l860 0A06  
                                    i2l676 0B3E                                      i2l677 0B36  
                                    i2l685 0D38                                      i2l686 0D4E  
                                    i2l863 0A2E                                      i2l687 0D64  
                                    i2l864 0A38                                      i2l856 09E0  
                                    i2l865 0A46                                      i2l857 09F0  
                                    i2l859 0A0E                            ___awdiv@counter 0064  
                                    _TMR0H 000FD7                                      _TMR0L 000FD6  
                                    _PORTA 000F80                                      _PORTB 000F81  
                                    _PORTC 000F82                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                               _Draw_Arrow 11EA          __size_of_TMR0_SetInterruptHandler 000A  
                            __CFG_WRT0$OFF 000000                            _TMR4_Initialize 15CE  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                ?_TMR0_SetInterruptHandler 0060                              __CFG_WRT3$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                __size_of_Clear_Arrow_Column 005E  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                     ?i2_GLCD_WriteCommand 0009                           __end_of_TMR0_ISR 14E4  
                               _Make_Arrow 15E2                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                          __end_of_font5x8 FF81                                 i2itoa@base 0015  
                           __CFG_EBTRB$OFF 000000                    __end_of_PIN_MANAGER_IOC 0836  
                                    _color FF81                            _Make_Back_Arrow 13D8  
                                    pclath 000FFA                                      tablat 000FF5  
                     i2_Clear_Arrow_Column 0EB2                     ??_GLCD_InitializePorts 0060  
               __end_of_Main_Menu_Function 1598                                      utoa@c 006F  
                                    utoa@v 006D                                      status 000FD8  
                                    wtemp6 0046                         __size_ofi2___awdiv 0084  
                       __size_ofi2___lwdiv 0052                         __size_ofi2___lwmod 0042  
                          __initialization 0E58                               __end_of_main 1330  
                             __end_of_itoa 11A6                               __end_of_utoa 0656  
                        __end_of_GLCD_GoTo 08BE                          __end_of_GLCD_Line 026C  
              ?_INTERRUPT_InterruptManager 0001                  __size_of_Initialize_Menus 0170  
                    ?_Clear_runTime_Arrows 0001                        Clear_Arrow_Column@i 0076  
                      Clear_Arrow_Column@j 0075                                     ??_main 009E  
                               i2utoa@base 000C                                     ??_itoa 0076  
                                   ??_utoa 006D                              __activetblptr 000003  
                  PIN_MANAGER_IOC@cw_count 003B                             __CFG_RETEN$OFF 000000  
                    ??i2_GLCD_WriteCommand 000A                           GLCD_SetPixel@tmp 0072  
                  __end_of_TMR0_StartTimer 164C          __size_ofi2_GLCD_DisableController 0026  
                            ?i2_GLCD_Delay 0001                                     _EEADRH 000F75  
                                   _EEDATA 000F73                                     _CCPR1H 000FBD  
                                   _CCPR1L 000FBC                                     _EECON2 000F7E  
                                   _ANCON0 000F5D                                     _ANCON1 000F5C  
                ?i2_GLCD_DisableController 0001                     _GLCD_DisableController 1490  
                         ___awdiv@dividend 0060                      ?i2_Clear_Arrow_Column 0001  
                                   i2l1110 10FC                                     i2l1111 1106  
                                   i2l1023 0702                                     i2l1120 12E2  
                                   i2l1121 12EC                                     i2l1025 073C  
                                   i2l1106 10DC                                     i2l1026 077A  
                                   i2l1107 10D4                                     i2l1019 1296  
                                   i2l1116 12CA                                     i2l1117 12C2  
                          __CFG_BBSIZ$BB2K 000000                                     i2l3024 0B58  
                                   i2l3134 111E                                     i2l3144 115A  
                                   i2l3148 0EB6                             __CFG_WDTEN$OFF 000000  
                                   i2l2872 140C                                     i2l2892 0D92  
                                   _TABLAT 000FF5                                     _OSCCON 000FD3  
                __size_ofi2_GLCD_WriteChar 0052                  __size_ofi2_GLCD_WriteData 006A  
                          _TMR4_StartTimer 1644                                     i2_itoa 1272  
                                   i2_utoa 06FA                           _GLCD_WriteString 0F64  
                           __CFG_XINST$OFF 000000                                  ??___awdiv 0064  
                           __CFG_STVREN$ON 000000                                  ??___lwdiv 0064  
                                ??___lwmod 0064                           ?_TMR0_Initialize 0001  
                  __end_of_TMR4_Initialize 15E2                                     clear_0 0EA2  
                         ___awdiv@quotient 0066                           ?_GLCD_ReadStatus 0001  
                   __size_of_Check_Buttons 00B0                             i2___awdiv@sign 0006  
            __size_ofi2_Draw_runTime_Arrow 0070                                     itoa@cp 0076  
                             __pdataCOMRAM 0042                                ?_Draw_Arrow 0001  
                        __end_ofi2___awdiv 0A50                    __end_of_Make_Back_Arrow 140A  
                        __end_ofi2___lwdiv 1110                               __mediumconst FDA0  
                        __end_ofi2___lwmod 12F6                                     tblptrh 000FF7  
                                   tblptrl 000FF6           __size_ofi2_GLCD_EnableController 0026  
                                   tblptru 000FF8                      _GLCD_EnableController 1466  
                              ?_Make_Arrow 0001                             ??i2_GLCD_Delay 0001  
                             ??_GLCD_Delay 0060   TMR0_SetInterruptHandler@InterruptHandler 0060  
IOCB5_SetInterruptHandler@InterruptHandler 0060  IOCB4_SetInterruptHandler@InterruptHandler 0060  
                         ?_PIN_MANAGER_IOC 0001              __size_of_INTERRUPT_Initialize 0004  
                        _SYSTEM_Initialize 15B4                                 __accesstop 0060  
                  __end_of__initialization 0EA8                 __end_ofi2_GLCD_WriteString 106A  
          i2GLCD_WriteString@stringToWrite 000E              GLCD_WriteString@stringToWrite 006D  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                  ?_Run_Time_Menu_Function 0001                            GLCD_WriteChar@i 006B  
                        ?_GLCD_ClearScreen 0001                               i2GLCD_GoTo@i 000E  
                             i2GLCD_GoTo@x 000D                               i2GLCD_GoTo@y 000C  
                    __end_of_GLCD_ReadData 0CB0                          ?_EPWM1_Initialize 0001  
                             _adjustValues 003E                         i2___lwmod@dividend 0001  
                           __pcstackCOMRAM 0001                         ??_GLCD_ClearScreen 006E  
                             __pidataBANK0 165B                        ??_SYSTEM_Initialize 0064  
                                ?_TMR0_ISR 0001                         ??_EPWM1_Initialize 0060  
                            __end_of_color FF82                     ??_Clear_runTime_Arrows 006E  
             PIN_MANAGER_IOC@previousState 003C              _IOCB4_DefaultInterruptHandler 000000  
                    __end_of_GLCD_SetPixel 06FA                         __end_of_GLCD_Delay 1654  
                  __size_of_GLCD_Initalize 0022                ??_IOCB4_SetInterruptHandler 0062  
                             _afterMinutes 00A9                         _Draw_runTime_Arrow 0CB0  
                 PIN_MANAGER_IOC@ccw_count 003A                       __size_ofi2_GLCD_GoTo 007A  
                         ?_TMR0_StartTimer 0001                        ?_Draw_runTime_Arrow 0001  
                  __end_of_TMR4_StartTimer 1648                     ??i2_Clear_Arrow_Column 000F  
                __end_of_SYSTEM_Initialize 15CE                                 __pbssBANK0 00A7  
                          __CFG_PLLCFG$OFF 000000                              _Check_Buttons 04FC  
           __end_of_Run_Time_Menu_Function 0946                                    ?i2_itoa 0011  
                                  ?i2_utoa 0008                        __size_of_Draw_Arrow 0044  
         __end_of_TMR0_SetInterruptHandler 1626                       ??_Draw_runTime_Arrow 006E  
                      __size_of_Make_Arrow 0014                                 ??_TMR0_ISR 0001  
                                  _CCP1CON 000FBB                                    _ECCP1AS 000FBF  
                         _Initialize_Menus 026C                    __size_of_GLCD_WriteChar 0058  
                  __size_of_GLCD_WriteData 0078                          GLCD_ClearScreen@i 006E  
                        GLCD_ClearScreen@j 006F         __size_of_IOCB5_SetInterruptHandler 000A  
                         ?_TMR4_Initialize 0001                 ?_IOCB5_SetInterruptHandler 0060  
                         __CFG_CANMX$PORTB 000000                     ?_GLCD_EnableController 0001  
                                  _REFOCON 000F9A                           ?_Make_Back_Arrow 0001  
                GLCD_ReadStatus@controller 0062                                    _OSCCON2 000FD2  
                                  _TBLPTRH 000FF7                                    _TBLPTRL 000FF6  
                                  _TBLPTRU 000FF8                          _GLCD_WriteCommand 136A  
                                  _OSCTUNE 000F9B                   Draw_runTime_Menu@display 0093  
                       ?_GLCD_WriteCommand 0068                             ?_Check_Buttons 0001  
                         i2_GLCD_WriteChar 1110                           i2_GLCD_WriteData 0D90  
           GLCD_Line@TwoDxAccumulatedError 007F                  _IOCB4_SetInterruptHandler 1630  
                      ??_GLCD_WriteCommand 0069                                 _xMenuStart 00AA  
                          __size_ofi2_itoa 0042                                    i2utoa@c 0010  
                          __CFG_PWRTEN$OFF 000000                                    i2utoa@v 000E  
                          __size_ofi2_utoa 00A4                                    __Hparam 0000  
              i2GLCD_WriteChar@charToWrite 000B              Run_Time_Menu_Function@display 0019  
                                  __Lparam 0000                                    ___awdiv 0946  
                     __end_ofi2_GLCD_Delay 1658                                    ___lwdiv 106A  
                                  ___lwmod 11A6                         _Main_Menu_Function 1576  
         __end_ofi2_GLCD_DisableController 1530                                    __pcinit 0E58  
                                  __ramtop 0F00                                    __ptext0 12F6  
                                  __ptext1 15B4                                    __ptext2 15CE  
                                  __ptext3 1644                                    __ptext4 1330  
                                  __ptext5 1648                                    __ptext6 161C  
                                  __ptext7 0F0C                                    __ptext8 1626  
                                  __ptext9 1630                                  _GLCD_GoTo 0836  
                                _GLCD_Line 00B8                                  _T0CONbits 000FD5  
        __end_of_IOCB5_SetInterruptHandler 1630                                    _font5x8 FDA1  
               __end_of_Clear_Arrow_Column 0E58                      _OSCILLATOR_Initialize 160A  
                      ?_Main_Menu_Function 0001                  __end_of_GLCD_WriteCommand 13A2  
                  i2_GLCD_EnableController 14E4                              ?i2_Draw_Arrow 0001  
                 __end_of_GLCD_WriteString 0FBC                                  _T4CONbits 000F88  
                  ?_GLCD_DisableController 0001                   ??_PIN_MANAGER_Initialize 0062  
                        __CFG_MSSPMSK$MSK7 000000                      GLCD_ReadStatus@status 0061  
                            ?i2_Make_Arrow 0001                         PIN_MANAGER_IOC@CHA 0026  
                       PIN_MANAGER_IOC@CHB 0025                 __size_of_SYSTEM_Initialize 001A  
                         ?_TMR4_StartTimer 0001                       end_of_initialization 0EA8  
                 ??i2_Clear_runTime_Arrows 000F                    Initialize_Menus@display 0093  
                                  itoa@buf 0070                                    itoa@val 0072  
            __size_of_GLCD_InitializePorts 000A                       ??_Main_Menu_Function 0018  
                               GLCD_GoTo@i 006D                                 GLCD_GoTo@x 006C  
                               GLCD_GoTo@y 006B             GLCD_Line@TwoDyAccumulatedError 0081  
              i2GLCD_WriteData@dataToWrite 000A                                    postinc0 000FEE  
                                  utoa@buf 0067                                    utoa@val 0069  
                    Clear_runTime_Arrows@i 006E                             GLCD_Line@TwoDx 0087  
                           GLCD_Line@TwoDy 0089                __end_ofi2_GLCD_WriteCommand 143A  
                           _GLCD_Initalize 1554                   _TMR0_SetInterruptHandler 161C  
                                _PORTBbits 000F81                                 ?_GLCD_GoTo 006B  
                               ?_GLCD_Line 0075             __end_of_GLCD_DisableController 14BA  
                           ??i2_Draw_Arrow 0018                               ??_Draw_Arrow 0077  
                         __CFG_FOSC$INTIO2 000000                                 _runMinutes 003D  
                           ??i2_Make_Arrow 000B                               ??_Make_Arrow 006A  
                          ??_Check_Buttons 009D                                  i2___awdiv 09CC  
                        i2___lwdiv@divisor 0003                                  i2___lwdiv 10BE  
                                i2___lwmod 12B4                          i2___lwdiv@counter 0007  
             __end_ofi2_Draw_runTime_Arrow 0D90                         i2___awdiv@dividend 0001  
                           __end_ofi2_itoa 12B4                             __end_ofi2_utoa 079E  
                       __end_of_Draw_Arrow 122E               __end_of_INTERRUPT_Initialize 1650  
                   __end_of_GLCD_Initalize 1576                         __end_of_Make_Arrow 15F6  
                           GLCD_SetPixel@x 0073                             GLCD_SetPixel@y 006E  
                       i2_GLCD_WriteString 1014                             _GLCD_WriteChar 0FBC  
                           _GLCD_WriteData 0BC4                      PIN_MANAGER_IOC@result 0027  
                            __pidataCOMRAM 1658                          __size_of_TMR0_ISR 002A  
                ??i2_GLCD_EnableController 0001                                  i2itoa@buf 0011  
                                i2itoa@val 0013                     ?_OSCILLATOR_Initialize 0001  
                         _timeAfterFinishX 0043                  __size_of_GLCD_ClearScreen 0036  
               __size_of_GLCD_WriteCommand 0038                        ?i2_GLCD_WriteString 000E  
                 i2_GLCD_DisableController 150A                        start_initialization 0E58  
                __size_of_EPWM1_Initialize 001C                         i2___awdiv@quotient 0007  
                 __size_of_TMR0_Initialize 003A            __size_of_PIN_MANAGER_Initialize 0058  
                 __size_of_GLCD_ReadStatus 002C                                 ?i2___awdiv 0001  
                               ?i2___lwdiv 0001                                 ?i2___lwmod 0001  
                                i2utoa@buf 0008                                  i2utoa@val 000A  
                 __end_of_Initialize_Menus 03DC            __size_ofi2_Clear_runTime_Arrows 007A  
                                 ??i2_itoa 0017                       ??i2_GLCD_WriteString 0010  
                                 ??i2_utoa 000E                      __size_ofi2_GLCD_Delay 0004  
                 __size_of_PIN_MANAGER_IOC 0098                             _currentContext 0040  
                   __end_of_GLCD_WriteChar 1014                     __end_of_GLCD_WriteData 0C3C  
                              _CCPTMRSbits 000F99                            ?_GLCD_Initalize 0001  
                              __pdataBANK0 00AA                   __end_ofi2_GLCD_WriteChar 1162  
                 __end_ofi2_GLCD_WriteData 0DFA                    ??_GLCD_EnableController 0060  
            __size_of_Clear_runTime_Arrows 0080                              ??i2_GLCD_GoTo 000D  
                              ??_GLCD_GoTo 006C              _IOCB5_DefaultInterruptHandler 000000  
              ??_IOCB5_SetInterruptHandler 0062                                ??_GLCD_Line 007D  
                  i2GLCD_ReadStatus@status 0002                                __pbssCOMRAM 003A  
                            __pcstackBANK0 0060                          i2___lwmod@divisor 0003  
                        i2___lwmod@counter 0005                          i2_GLCD_ReadStatus 1530  
                   __size_of_GLCD_ReadData 0074                               i2_GLCD_Delay 1654  
                        _Draw_runTime_Menu 03DC                         ?i2_GLCD_ReadStatus 0001  
            __size_ofi2_Clear_Arrow_Column 005A                     __size_of_GLCD_SetPixel 00A4  
                 Main_Menu_Function@result 0018                         ?_Draw_runTime_Menu 0001  
                    _TMR0_InterruptHandler 00A1                                  __pnvBANK0 009F  
                 __size_of_TMR0_StartTimer 0004                       __end_ofi2_Draw_Arrow 1272  
                      ??i2_GLCD_ReadStatus 0002                           ___lwdiv@dividend 0060  
                   _PIN_MANAGER_Initialize 0F0C                       __end_ofi2_Make_Arrow 160A  
                      ??_Draw_runTime_Menu 0093                                  __pintcode 0008  
                       GLCD_SetPixel@color 006F                            ?_GLCD_WriteChar 0001  
                          ?_GLCD_WriteData 0001                              __pmediumconst FDA0  
                  i2Clear_runTime_Arrows@i 000F                                   ?___awdiv 0060  
              __size_of_Draw_runTime_Arrow 0070                                   ?___lwdiv 0060  
                                 ?___lwmod 0060                     i2_Clear_runTime_Arrows 0AD0  
             ??_INTERRUPT_InterruptManager 0028                       i2_Draw_runTime_Arrow 0D20  
                                _mainState 0041                                   _ECCP1DEL 000FBE  
                __end_ofi2_GLCD_ReadStatus 1554                          ?_GLCD_WriteString 006D  
                 __size_of_TMR4_Initialize 0014                        __end_ofi2_GLCD_GoTo 0BC4  
                __end_of_Draw_runTime_Menu 04FC                           ___lwdiv@quotient 0064  
                              ??i2___awdiv 0005                         ??_GLCD_WriteString 006F  
                              ??i2___lwdiv 0005                                ??i2___lwmod 0005  
                     _INTERRUPT_Initialize 164C                         _Clear_Arrow_Column 0DFA  
                _IOCB5_SetInterruptHandler 1626                   __size_of_Make_Back_Arrow 0032  
                        ??_TMR0_Initialize 0062                          ??_GLCD_ReadStatus 0061  
                                 _IOCBbits 000F5A                                   _LATEbits 000F8D  
        i2GLCD_EnableController@controller 0001            GLCD_EnableController@controller 0060  
                                 i2u200_40 1062                                   i2u200_47 1058  
      __size_of_INTERRUPT_InterruptManager 00AC                                   i2u152_40 0B84  
                                 i2u129_40 0A12                                   i2u216_48 14D2  
                                 i2u154_40 10E0                                   i2u157_40 12CE  
               ??_TMR0_SetInterruptHandler 0062                                   i2u166_40 115A  
                      ?_Clear_Arrow_Column 0001                                   i2u199_40 1038  
                                 _PIR4bits 000FB7                                   i2u199_47 102E  
                                 _RCONbits 000FD0                              _GLCD_ReadData 0C3C  
                            GLCD_Line@Xinc 0083                              GLCD_Line@Yinc 0085  
                                 _TMR0_ISR 14BA                                   _PSTR1CON 000F9C  
                        ??_PIN_MANAGER_IOC 0024                              _GLCD_SetPixel 0656  
             __end_of_GLCD_InitializePorts 1644                      ?i2_Draw_runTime_Arrow 0001  
                         __CFG_SOSCSEL$DIG 000000                           _GLCD_ClearScreen 13A2  
                         _EPWM1_Initialize 1598                          i2___awdiv@divisor 0003  
                     ??_Clear_Arrow_Column 006E                          i2___awdiv@counter 0005  
                 ??_Run_Time_Menu_Function 0019                                   i2itoa@cp 0017  
                    ?_INTERRUPT_Initialize 0001                                 _EECON1bits 000F7F  
              __size_of_Main_Menu_Function 0022                   __size_of_TMR4_StartTimer 0004  
                                 __Hrparam 0000                                   __Lrparam 0000  
                           ?_GLCD_ReadData 0001                         __CFG_BOREN$SBORDIS 000000  
                  ??_OSCILLATOR_Initialize 0060                 ??i2_GLCD_DisableController 0001  
                        ??_TMR0_StartTimer 0060                           __size_of___awdiv 0086  
                           ?_GLCD_SetPixel 006E                           __size_of___lwdiv 0054  
                         __size_of___lwmod 0044                          GLCD_Line@CurrentX 008B  
                        GLCD_Line@CurrentY 008D                     _IOCB4_InterruptHandler 00A5  
                              i2_GLCD_GoTo 0B4A                i2GLCD_ReadStatus@controller 0003  
               __size_ofi2_GLCD_ReadStatus 0024                            ___lwdiv@divisor 0062  
             __size_ofi2_GLCD_WriteCommand 0030                            ___lwdiv@counter 0066  
                                 __ptext10 160A                                   __ptext11 164C  
                                 __ptext20 11A6                                   __ptext12 1598  
                                 __ptext21 106A                                   __ptext13 1554  
                                 __ptext30 0CB0                                   __ptext22 13D8  
                                 __ptext14 163A                                   __ptext31 15E2  
                                 __ptext23 0F64                                   __ptext15 04FC  
                                 __ptext40 1490                                   __ptext32 0A50  
                                 __ptext24 0FBC                                   __ptext16 026C  
                                 __ptext41 1650                                   __ptext33 0DFA  
                                 __ptext25 00B8                                   __ptext17 03DC  
                                 __ptext50 10BE                                   __ptext34 0BC4  
                                 __ptext26 0656                                   __ptext18 1162  
                                 __ptext51 1014                                   __ptext43 14BA  
                                 __ptext35 0836                                   __ptext27 0C3C  
                                 __ptext19 05AC                                   __ptext60 0B4A  
                                 __ptext52 1110                                   __ptext44 165E  
                                 __ptext36 0946                                   __ptext28 13A2  
               __size_of_Draw_runTime_Menu 0120                                   __ptext61 09CC  
                                 __ptext53 1576                                   __ptext45 079E  
                                 __ptext37 136A                                   __ptext29 11EA  
                                 __ptext62 140A                                   __ptext54 122E  
                                 __ptext46 08BE                                   __ptext38 143A  
                                 __ptext63 1530                                   __ptext55 0D20  
                                 __ptext47 1272                                   __ptext39 1466  
                                 __ptext64 14E4                                   __ptext56 15F6  
                                 __ptext48 06FA                                   __ptext65 150A  
                                 __ptext57 0AD0                                   __ptext49 12B4  
                                 __ptext66 1654                                   __ptext58 0EB2  
                                 __ptext67 0000                                   __ptext59 0D90  
                               _GLCD_Delay 1650                      __end_of_Check_Buttons 05AC  
                    __size_ofi2_Draw_Arrow 0044                          ?_Initialize_Menus 0001  
                        ??_TMR4_Initialize 0060                              __size_of_main 003A  
                    __size_ofi2_Make_Arrow 0014              i2GLCD_WriteCommand@controller 0009  
                            __size_of_itoa 0044                                 _ARROW_SIZE 00AB  
                            __size_of_utoa 00AA       __end_of_TMR0_DefaultInterruptHandler 1660  
    __size_of_TMR0_DefaultInterruptHandler 0002               _TMR0_DefaultInterruptHandler 165E  
                       ??_Initialize_Menus 0093                           ??_GLCD_Initalize 006B  
                                 _screen_x 00A8                                   _screen_y 00A7  
                        ??_Make_Back_Arrow 006A                                   _subMenuY 0044  
                                 int$flags 0045                                   _runTimeX 00AC  
       __end_of_INTERRUPT_InterruptManager 00B4                 _INTERRUPT_InterruptManager 0008  
                   ??i2_Draw_runTime_Arrow 000F                        __CFG_INTOSCSEL$HIGH 000000  
                        ?i2_GLCD_WriteChar 0001                          ?i2_GLCD_WriteData 0001  
           __size_of_GLCD_EnableController 002A              __end_of_GLCD_EnableController 1490  
                               _INTCONbits 000FF2                         ??i2_GLCD_WriteChar 000B  
                       ??i2_GLCD_WriteData 0009                               i2_Draw_Arrow 122E  
                                 itoa@base 0074                               i2_Make_Arrow 15F6  
                   ??_INTERRUPT_Initialize 0060            __size_of_Run_Time_Menu_Function 0088  
             Run_Time_Menu_Function@result 0023                               _valuesXStart 0042  
                                 intlevel2 0000               __end_of_Clear_runTime_Arrows 0AD0  
                         ___lwmod@dividend 0060                          GLCD_ReadData@data 0069  
                  ?_PIN_MANAGER_Initialize 0001                           ??_GLCD_WriteChar 006A  
                         ??_GLCD_WriteData 0068                       _GLCD_InitializePorts 163A  
                          ??_GLCD_ReadData 0068                __size_ofi2_GLCD_WriteString 0056  
            ?_TMR0_DefaultInterruptHandler 0001                  GLCD_WriteChar@charToWrite 006A  
                              GLCD_Line@X1 0075                                GLCD_Line@X2 0079  
                              GLCD_Line@Y1 0077                                GLCD_Line@Y2 007B  
                              GLCD_Line@Dx 008F                                GLCD_Line@Dy 0091  
                        i2GLCD_WriteChar@i 000C                    ?i2_Clear_runTime_Arrows 0001  
                 ?i2_GLCD_EnableController 0001                            ??_GLCD_SetPixel 0070  
                 ??_GLCD_DisableController 0060                         __CFG_WDTPS$1048576 000000  
             __end_ofi2_Clear_Arrow_Column 0F0C                          ??_TMR4_StartTimer 0060  
                    i2Clear_Arrow_Column@i 0017                      i2Clear_Arrow_Column@j 0016  
                                 utoa@base 006B                            ___lwmod@divisor 0062  
                          _TMR0_Initialize 1330                            ___lwmod@counter 0064  
                          _GLCD_ReadStatus 143A                                ?_GLCD_Delay 0001  
           __end_of_PIN_MANAGER_Initialize 0F64                        __CFG_BORPWR$ZPBORMV 000000  
                   _IOCB5_InterruptHandler 00A3                            _PIN_MANAGER_IOC 079E  
                    ?_GLCD_InitializePorts 0001                             _runTimeContext 003F  
                 __end_of_GLCD_ClearScreen 13D8                         _GLCD_SetPixel$1733 0074  
                __size_of_GLCD_WriteString 0058             __end_ofi2_Clear_runTime_Arrows 0B4A  
        i2GLCD_WriteCommand@commandToWrite 000B            GLCD_WriteCommand@commandToWrite 006A  
                 __end_of_EPWM1_Initialize 15B4                 __end_of_Draw_runTime_Arrow 0D20  
