

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jul 20 15:35:33 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           ; Version 1.45
    66                           ; Generated 16/11/2017 GMT
    67                           ; 
    68                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F46K80 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100 ;; Function _IOCB4_DefaultInterruptHandler is unused but had its address taken
   101  0000                     
   102 ;; Function _IOCB5_DefaultInterruptHandler is unused but had its address taken
   103  0000                     
   104                           	psect	idataCOMRAM
   105  000A28                     __pidataCOMRAM:
   106                           	opt stack 0
   107                           
   108                           ;initializer for _valuesXStart
   109  000A28  41                 	db	65
   110                           
   111                           ;initializer for _xMenuStart
   112  000A29  04                 	db	4
   113                           
   114                           ;initializer for _ARROW_SIZE
   115  000A2A  04                 	db	4
   116                           
   117                           ;initializer for _timeAfterFinishX
   118  000A2B  41                 	db	65
   119                           
   120                           ;initializer for _runTimeX
   121  000A2C  0A                 	db	10
   122                           
   123                           ;initializer for _subMenuY
   124  000A2D  03                 	db	3
   125                           
   126                           	psect	mediumconst
   127  00FDCA                     __pmediumconst:
   128                           	opt stack 0
   129  00FDCA  00                 	db	0
   130  00FDCB                     _font5x8:
   131                           	opt stack 0
   132  00FDCB  00                 	db	0
   133  00FDCC  00                 	db	0
   134  00FDCD  00                 	db	0
   135  00FDCE  00                 	db	0
   136  00FDCF  00                 	db	0
   137  00FDD0  00                 	db	0
   138  00FDD1  00                 	db	0
   139  00FDD2  5F                 	db	95
   140  00FDD3  00                 	db	0
   141  00FDD4  00                 	db	0
   142  00FDD5  00                 	db	0
   143  00FDD6  07                 	db	7
   144  00FDD7  00                 	db	0
   145  00FDD8  07                 	db	7
   146  00FDD9  00                 	db	0
   147  00FDDA  14                 	db	20
   148  00FDDB  7F                 	db	127
   149  00FDDC  14                 	db	20
   150  00FDDD  7F                 	db	127
   151  00FDDE  14                 	db	20
   152  00FDDF  24                 	db	36
   153  00FDE0  2A                 	db	42
   154  00FDE1  7F                 	db	127
   155  00FDE2  2A                 	db	42
   156  00FDE3  12                 	db	18
   157  00FDE4  23                 	db	35
   158  00FDE5  13                 	db	19
   159  00FDE6  08                 	db	8
   160  00FDE7  64                 	db	100
   161  00FDE8  62                 	db	98
   162  00FDE9  36                 	db	54
   163  00FDEA  49                 	db	73
   164  00FDEB  55                 	db	85
   165  00FDEC  22                 	db	34
   166  00FDED  50                 	db	80
   167  00FDEE  00                 	db	0
   168  00FDEF  05                 	db	5
   169  00FDF0  03                 	db	3
   170  00FDF1  00                 	db	0
   171  00FDF2  00                 	db	0
   172  00FDF3  00                 	db	0
   173  00FDF4  1C                 	db	28
   174  00FDF5  22                 	db	34
   175  00FDF6  41                 	db	65
   176  00FDF7  00                 	db	0
   177  00FDF8  00                 	db	0
   178  00FDF9  41                 	db	65
   179  00FDFA  22                 	db	34
   180  00FDFB  1C                 	db	28
   181  00FDFC  00                 	db	0
   182  00FDFD  08                 	db	8
   183  00FDFE  2A                 	db	42
   184  00FDFF  1C                 	db	28
   185  00FE00  2A                 	db	42
   186  00FE01  08                 	db	8
   187  00FE02  08                 	db	8
   188  00FE03  08                 	db	8
   189  00FE04  3E                 	db	62
   190  00FE05  08                 	db	8
   191  00FE06  08                 	db	8
   192  00FE07  00                 	db	0
   193  00FE08  50                 	db	80
   194  00FE09  30                 	db	48
   195  00FE0A  00                 	db	0
   196  00FE0B  00                 	db	0
   197  00FE0C  08                 	db	8
   198  00FE0D  08                 	db	8
   199  00FE0E  08                 	db	8
   200  00FE0F  08                 	db	8
   201  00FE10  08                 	db	8
   202  00FE11  00                 	db	0
   203  00FE12  30                 	db	48
   204  00FE13  30                 	db	48
   205  00FE14  00                 	db	0
   206  00FE15  00                 	db	0
   207  00FE16  20                 	db	32
   208  00FE17  10                 	db	16
   209  00FE18  08                 	db	8
   210  00FE19  04                 	db	4
   211  00FE1A  02                 	db	2
   212  00FE1B  3E                 	db	62
   213  00FE1C  51                 	db	81
   214  00FE1D  49                 	db	73
   215  00FE1E  45                 	db	69
   216  00FE1F  3E                 	db	62
   217  00FE20  00                 	db	0
   218  00FE21  42                 	db	66
   219  00FE22  7F                 	db	127
   220  00FE23  40                 	db	64
   221  00FE24  00                 	db	0
   222  00FE25  42                 	db	66
   223  00FE26  61                 	db	97
   224  00FE27  51                 	db	81
   225  00FE28  49                 	db	73
   226  00FE29  46                 	db	70
   227  00FE2A  21                 	db	33
   228  00FE2B  41                 	db	65
   229  00FE2C  45                 	db	69
   230  00FE2D  4B                 	db	75
   231  00FE2E  31                 	db	49
   232  00FE2F  18                 	db	24
   233  00FE30  14                 	db	20
   234  00FE31  12                 	db	18
   235  00FE32  7F                 	db	127
   236  00FE33  10                 	db	16
   237  00FE34  27                 	db	39
   238  00FE35  45                 	db	69
   239  00FE36  45                 	db	69
   240  00FE37  45                 	db	69
   241  00FE38  39                 	db	57
   242  00FE39  3C                 	db	60
   243  00FE3A  4A                 	db	74
   244  00FE3B  49                 	db	73
   245  00FE3C  49                 	db	73
   246  00FE3D  30                 	db	48
   247  00FE3E  01                 	db	1
   248  00FE3F  71                 	db	113
   249  00FE40  09                 	db	9
   250  00FE41  05                 	db	5
   251  00FE42  03                 	db	3
   252  00FE43  36                 	db	54
   253  00FE44  49                 	db	73
   254  00FE45  49                 	db	73
   255  00FE46  49                 	db	73
   256  00FE47  36                 	db	54
   257  00FE48  06                 	db	6
   258  00FE49  49                 	db	73
   259  00FE4A  49                 	db	73
   260  00FE4B  29                 	db	41
   261  00FE4C  1E                 	db	30
   262  00FE4D  00                 	db	0
   263  00FE4E  36                 	db	54
   264  00FE4F  36                 	db	54
   265  00FE50  00                 	db	0
   266  00FE51  00                 	db	0
   267  00FE52  00                 	db	0
   268  00FE53  56                 	db	86
   269  00FE54  36                 	db	54
   270  00FE55  00                 	db	0
   271  00FE56  00                 	db	0
   272  00FE57  00                 	db	0
   273  00FE58  08                 	db	8
   274  00FE59  14                 	db	20
   275  00FE5A  22                 	db	34
   276  00FE5B  41                 	db	65
   277  00FE5C  14                 	db	20
   278  00FE5D  14                 	db	20
   279  00FE5E  14                 	db	20
   280  00FE5F  14                 	db	20
   281  00FE60  14                 	db	20
   282  00FE61  41                 	db	65
   283  00FE62  22                 	db	34
   284  00FE63  14                 	db	20
   285  00FE64  08                 	db	8
   286  00FE65  00                 	db	0
   287  00FE66  02                 	db	2
   288  00FE67  01                 	db	1
   289  00FE68  51                 	db	81
   290  00FE69  09                 	db	9
   291  00FE6A  06                 	db	6
   292  00FE6B  32                 	db	50
   293  00FE6C  49                 	db	73
   294  00FE6D  79                 	db	121
   295  00FE6E  41                 	db	65
   296  00FE6F  3E                 	db	62
   297  00FE70  7E                 	db	126
   298  00FE71  11                 	db	17
   299  00FE72  11                 	db	17
   300  00FE73  11                 	db	17
   301  00FE74  7E                 	db	126
   302  00FE75  7F                 	db	127
   303  00FE76  49                 	db	73
   304  00FE77  49                 	db	73
   305  00FE78  49                 	db	73
   306  00FE79  36                 	db	54
   307  00FE7A  3E                 	db	62
   308  00FE7B  41                 	db	65
   309  00FE7C  41                 	db	65
   310  00FE7D  41                 	db	65
   311  00FE7E  22                 	db	34
   312  00FE7F  7F                 	db	127
   313  00FE80  41                 	db	65
   314  00FE81  41                 	db	65
   315  00FE82  22                 	db	34
   316  00FE83  1C                 	db	28
   317  00FE84  7F                 	db	127
   318  00FE85  49                 	db	73
   319  00FE86  49                 	db	73
   320  00FE87  49                 	db	73
   321  00FE88  41                 	db	65
   322  00FE89  7F                 	db	127
   323  00FE8A  09                 	db	9
   324  00FE8B  09                 	db	9
   325  00FE8C  01                 	db	1
   326  00FE8D  01                 	db	1
   327  00FE8E  3E                 	db	62
   328  00FE8F  41                 	db	65
   329  00FE90  41                 	db	65
   330  00FE91  51                 	db	81
   331  00FE92  32                 	db	50
   332  00FE93  7F                 	db	127
   333  00FE94  08                 	db	8
   334  00FE95  08                 	db	8
   335  00FE96  08                 	db	8
   336  00FE97  7F                 	db	127
   337  00FE98  00                 	db	0
   338  00FE99  41                 	db	65
   339  00FE9A  7F                 	db	127
   340  00FE9B  41                 	db	65
   341  00FE9C  00                 	db	0
   342  00FE9D  20                 	db	32
   343  00FE9E  40                 	db	64
   344  00FE9F  41                 	db	65
   345  00FEA0  3F                 	db	63
   346  00FEA1  01                 	db	1
   347  00FEA2  7F                 	db	127
   348  00FEA3  08                 	db	8
   349  00FEA4  14                 	db	20
   350  00FEA5  22                 	db	34
   351  00FEA6  41                 	db	65
   352  00FEA7  7F                 	db	127
   353  00FEA8  40                 	db	64
   354  00FEA9  40                 	db	64
   355  00FEAA  40                 	db	64
   356  00FEAB  40                 	db	64
   357  00FEAC  7F                 	db	127
   358  00FEAD  02                 	db	2
   359  00FEAE  04                 	db	4
   360  00FEAF  02                 	db	2
   361  00FEB0  7F                 	db	127
   362  00FEB1  7F                 	db	127
   363  00FEB2  04                 	db	4
   364  00FEB3  08                 	db	8
   365  00FEB4  10                 	db	16
   366  00FEB5  7F                 	db	127
   367  00FEB6  3E                 	db	62
   368  00FEB7  41                 	db	65
   369  00FEB8  41                 	db	65
   370  00FEB9  41                 	db	65
   371  00FEBA  3E                 	db	62
   372  00FEBB  7F                 	db	127
   373  00FEBC  09                 	db	9
   374  00FEBD  09                 	db	9
   375  00FEBE  09                 	db	9
   376  00FEBF  06                 	db	6
   377  00FEC0  3E                 	db	62
   378  00FEC1  41                 	db	65
   379  00FEC2  51                 	db	81
   380  00FEC3  21                 	db	33
   381  00FEC4  5E                 	db	94
   382  00FEC5  7F                 	db	127
   383  00FEC6  09                 	db	9
   384  00FEC7  19                 	db	25
   385  00FEC8  29                 	db	41
   386  00FEC9  46                 	db	70
   387  00FECA  46                 	db	70
   388  00FECB  49                 	db	73
   389  00FECC  49                 	db	73
   390  00FECD  49                 	db	73
   391  00FECE  31                 	db	49
   392  00FECF  01                 	db	1
   393  00FED0  01                 	db	1
   394  00FED1  7F                 	db	127
   395  00FED2  01                 	db	1
   396  00FED3  01                 	db	1
   397  00FED4  3F                 	db	63
   398  00FED5  40                 	db	64
   399  00FED6  40                 	db	64
   400  00FED7  40                 	db	64
   401  00FED8  3F                 	db	63
   402  00FED9  1F                 	db	31
   403  00FEDA  20                 	db	32
   404  00FEDB  40                 	db	64
   405  00FEDC  20                 	db	32
   406  00FEDD  1F                 	db	31
   407  00FEDE  7F                 	db	127
   408  00FEDF  20                 	db	32
   409  00FEE0  18                 	db	24
   410  00FEE1  20                 	db	32
   411  00FEE2  7F                 	db	127
   412  00FEE3  63                 	db	99
   413  00FEE4  14                 	db	20
   414  00FEE5  08                 	db	8
   415  00FEE6  14                 	db	20
   416  00FEE7  63                 	db	99
   417  00FEE8  03                 	db	3
   418  00FEE9  04                 	db	4
   419  00FEEA  78                 	db	120
   420  00FEEB  04                 	db	4
   421  00FEEC  03                 	db	3
   422  00FEED  61                 	db	97
   423  00FEEE  51                 	db	81
   424  00FEEF  49                 	db	73
   425  00FEF0  45                 	db	69
   426  00FEF1  43                 	db	67
   427  00FEF2  00                 	db	0
   428  00FEF3  00                 	db	0
   429  00FEF4  7F                 	db	127
   430  00FEF5  41                 	db	65
   431  00FEF6  41                 	db	65
   432  00FEF7  02                 	db	2
   433  00FEF8  04                 	db	4
   434  00FEF9  08                 	db	8
   435  00FEFA  10                 	db	16
   436  00FEFB  20                 	db	32
   437  00FEFC  41                 	db	65
   438  00FEFD  41                 	db	65
   439  00FEFE  7F                 	db	127
   440  00FEFF  00                 	db	0
   441  00FF00  00                 	db	0
   442  00FF01  04                 	db	4
   443  00FF02  02                 	db	2
   444  00FF03  01                 	db	1
   445  00FF04  02                 	db	2
   446  00FF05  04                 	db	4
   447  00FF06  40                 	db	64
   448  00FF07  40                 	db	64
   449  00FF08  40                 	db	64
   450  00FF09  40                 	db	64
   451  00FF0A  40                 	db	64
   452  00FF0B  00                 	db	0
   453  00FF0C  01                 	db	1
   454  00FF0D  02                 	db	2
   455  00FF0E  04                 	db	4
   456  00FF0F  00                 	db	0
   457  00FF10  20                 	db	32
   458  00FF11  54                 	db	84
   459  00FF12  54                 	db	84
   460  00FF13  54                 	db	84
   461  00FF14  78                 	db	120
   462  00FF15  7F                 	db	127
   463  00FF16  48                 	db	72
   464  00FF17  44                 	db	68
   465  00FF18  44                 	db	68
   466  00FF19  38                 	db	56
   467  00FF1A  38                 	db	56
   468  00FF1B  44                 	db	68
   469  00FF1C  44                 	db	68
   470  00FF1D  44                 	db	68
   471  00FF1E  20                 	db	32
   472  00FF1F  38                 	db	56
   473  00FF20  44                 	db	68
   474  00FF21  44                 	db	68
   475  00FF22  48                 	db	72
   476  00FF23  7F                 	db	127
   477  00FF24  38                 	db	56
   478  00FF25  54                 	db	84
   479  00FF26  54                 	db	84
   480  00FF27  54                 	db	84
   481  00FF28  18                 	db	24
   482  00FF29  08                 	db	8
   483  00FF2A  7E                 	db	126
   484  00FF2B  09                 	db	9
   485  00FF2C  01                 	db	1
   486  00FF2D  02                 	db	2
   487  00FF2E  08                 	db	8
   488  00FF2F  14                 	db	20
   489  00FF30  54                 	db	84
   490  00FF31  54                 	db	84
   491  00FF32  3C                 	db	60
   492  00FF33  7F                 	db	127
   493  00FF34  08                 	db	8
   494  00FF35  04                 	db	4
   495  00FF36  04                 	db	4
   496  00FF37  78                 	db	120
   497  00FF38  00                 	db	0
   498  00FF39  44                 	db	68
   499  00FF3A  7D                 	db	125
   500  00FF3B  40                 	db	64
   501  00FF3C  00                 	db	0
   502  00FF3D  20                 	db	32
   503  00FF3E  40                 	db	64
   504  00FF3F  44                 	db	68
   505  00FF40  3D                 	db	61
   506  00FF41  00                 	db	0
   507  00FF42  00                 	db	0
   508  00FF43  7F                 	db	127
   509  00FF44  10                 	db	16
   510  00FF45  28                 	db	40
   511  00FF46  44                 	db	68
   512  00FF47  00                 	db	0
   513  00FF48  41                 	db	65
   514  00FF49  7F                 	db	127
   515  00FF4A  40                 	db	64
   516  00FF4B  00                 	db	0
   517  00FF4C  7C                 	db	124
   518  00FF4D  04                 	db	4
   519  00FF4E  18                 	db	24
   520  00FF4F  04                 	db	4
   521  00FF50  78                 	db	120
   522  00FF51  7C                 	db	124
   523  00FF52  08                 	db	8
   524  00FF53  04                 	db	4
   525  00FF54  04                 	db	4
   526  00FF55  78                 	db	120
   527  00FF56  38                 	db	56
   528  00FF57  44                 	db	68
   529  00FF58  44                 	db	68
   530  00FF59  44                 	db	68
   531  00FF5A  38                 	db	56
   532  00FF5B  7C                 	db	124
   533  00FF5C  14                 	db	20
   534  00FF5D  14                 	db	20
   535  00FF5E  14                 	db	20
   536  00FF5F  08                 	db	8
   537  00FF60  08                 	db	8
   538  00FF61  14                 	db	20
   539  00FF62  14                 	db	20
   540  00FF63  18                 	db	24
   541  00FF64  7C                 	db	124
   542  00FF65  7C                 	db	124
   543  00FF66  08                 	db	8
   544  00FF67  04                 	db	4
   545  00FF68  04                 	db	4
   546  00FF69  08                 	db	8
   547  00FF6A  48                 	db	72
   548  00FF6B  54                 	db	84
   549  00FF6C  54                 	db	84
   550  00FF6D  54                 	db	84
   551  00FF6E  20                 	db	32
   552  00FF6F  04                 	db	4
   553  00FF70  3F                 	db	63
   554  00FF71  44                 	db	68
   555  00FF72  40                 	db	64
   556  00FF73  20                 	db	32
   557  00FF74  3C                 	db	60
   558  00FF75  40                 	db	64
   559  00FF76  40                 	db	64
   560  00FF77  20                 	db	32
   561  00FF78  7C                 	db	124
   562  00FF79  1C                 	db	28
   563  00FF7A  20                 	db	32
   564  00FF7B  40                 	db	64
   565  00FF7C  20                 	db	32
   566  00FF7D  1C                 	db	28
   567  00FF7E  3C                 	db	60
   568  00FF7F  40                 	db	64
   569  00FF80  30                 	db	48
   570  00FF81  40                 	db	64
   571  00FF82  3C                 	db	60
   572  00FF83  44                 	db	68
   573  00FF84  28                 	db	40
   574  00FF85  10                 	db	16
   575  00FF86  28                 	db	40
   576  00FF87  44                 	db	68
   577  00FF88  0C                 	db	12
   578  00FF89  50                 	db	80
   579  00FF8A  50                 	db	80
   580  00FF8B  50                 	db	80
   581  00FF8C  3C                 	db	60
   582  00FF8D  44                 	db	68
   583  00FF8E  64                 	db	100
   584  00FF8F  54                 	db	84
   585  00FF90  4C                 	db	76
   586  00FF91  44                 	db	68
   587  00FF92  00                 	db	0
   588  00FF93  08                 	db	8
   589  00FF94  36                 	db	54
   590  00FF95  41                 	db	65
   591  00FF96  00                 	db	0
   592  00FF97  00                 	db	0
   593  00FF98  00                 	db	0
   594  00FF99  7F                 	db	127
   595  00FF9A  00                 	db	0
   596  00FF9B  00                 	db	0
   597  00FF9C  00                 	db	0
   598  00FF9D  41                 	db	65
   599  00FF9E  36                 	db	54
   600  00FF9F  08                 	db	8
   601  00FFA0  00                 	db	0
   602  00FFA1  08                 	db	8
   603  00FFA2  08                 	db	8
   604  00FFA3  2A                 	db	42
   605  00FFA4  1C                 	db	28
   606  00FFA5  08                 	db	8
   607  00FFA6  08                 	db	8
   608  00FFA7  1C                 	db	28
   609  00FFA8  2A                 	db	42
   610  00FFA9  08                 	db	8
   611  00FFAA  08                 	db	8
   612  00FFAB                     __end_of_font5x8:
   613                           	opt stack 0
   614  00FFAB                     _color:
   615                           	opt stack 0
   616  00FFAB  01                 	db	1
   617  00FFAC                     __end_of_color:
   618                           	opt stack 0
   619  00FFAC                     STR_8:
   620  00FFAC  54                 	db	84	;'T'
   621  00FFAD  69                 	db	105	;'i'
   622  00FFAE  6D                 	db	109	;'m'
   623  00FFAF  65                 	db	101	;'e'
   624  00FFB0  20                 	db	32
   625  00FFB1  41                 	db	65	;'A'
   626  00FFB2  66                 	db	102	;'f'
   627  00FFB3  74                 	db	116	;'t'
   628  00FFB4  65                 	db	101	;'e'
   629  00FFB5  72                 	db	114	;'r'
   630  00FFB6  3A                 	db	58	;':'
   631  00FFB7  20                 	db	32
   632  00FFB8  00                 	db	0
   633  00FFB9                     STR_7:
   634  00FFB9  52                 	db	82	;'R'
   635  00FFBA  75                 	db	117	;'u'
   636  00FFBB  6E                 	db	110	;'n'
   637  00FFBC  20                 	db	32
   638  00FFBD  54                 	db	84	;'T'
   639  00FFBE  69                 	db	105	;'i'
   640  00FFBF  6D                 	db	109	;'m'
   641  00FFC0  65                 	db	101	;'e'
   642  00FFC1  3A                 	db	58	;':'
   643  00FFC2  20                 	db	32
   644  00FFC3  00                 	db	0
   645  00FFC4                     STR_3:
   646  00FFC4  53                 	db	83	;'S'
   647  00FFC5  74                 	db	116	;'t'
   648  00FFC6  61                 	db	97	;'a'
   649  00FFC7  72                 	db	114	;'r'
   650  00FFC8  74                 	db	116	;'t'
   651  00FFC9  43                 	db	67	;'C'
   652  00FFCA  6F                 	db	111	;'o'
   653  00FFCB  6C                 	db	108	;'l'
   654  00FFCC  6F                 	db	111	;'o'
   655  00FFCD  72                 	db	114	;'r'
   656  00FFCE  00                 	db	0
   657  00FFCF                     STR_2:
   658  00FFCF  42                 	db	66	;'B'
   659  00FFD0  72                 	db	114	;'r'
   660  00FFD1  69                 	db	105	;'i'
   661  00FFD2  67                 	db	103	;'g'
   662  00FFD3  68                 	db	104	;'h'
   663  00FFD4  74                 	db	116	;'t'
   664  00FFD5  6E                 	db	110	;'n'
   665  00FFD6  65                 	db	101	;'e'
   666  00FFD7  73                 	db	115	;'s'
   667  00FFD8  73                 	db	115	;'s'
   668  00FFD9  00                 	db	0
   669  00FFDA                     STR_5:
   670  00FFDA  42                 	db	66	;'B'
   671  00FFDB  61                 	db	97	;'a'
   672  00FFDC  63                 	db	99	;'c'
   673  00FFDD  6B                 	db	107	;'k'
   674  00FFDE  6C                 	db	108	;'l'
   675  00FFDF  69                 	db	105	;'i'
   676  00FFE0  67                 	db	103	;'g'
   677  00FFE1  68                 	db	104	;'h'
   678  00FFE2  74                 	db	116	;'t'
   679  00FFE3  00                 	db	0
   680  00FFE4                     STR_6:
   681  00FFE4  53                 	db	83	;'S'
   682  00FFE5  65                 	db	101	;'e'
   683  00FFE6  6C                 	db	108	;'l'
   684  00FFE7  53                 	db	83	;'S'
   685  00FFE8  74                 	db	116	;'t'
   686  00FFE9  61                 	db	97	;'a'
   687  00FFEA  74                 	db	116	;'t'
   688  00FFEB  65                 	db	101	;'e'
   689  00FFEC  00                 	db	0
   690  00FFED                     STR_4:
   691  00FFED  45                 	db	69	;'E'
   692  00FFEE  6E                 	db	110	;'n'
   693  00FFEF  64                 	db	100	;'d'
   694  00FFF0  43                 	db	67	;'C'
   695  00FFF1  6F                 	db	111	;'o'
   696  00FFF2  6C                 	db	108	;'l'
   697  00FFF3  6F                 	db	111	;'o'
   698  00FFF4  72                 	db	114	;'r'
   699  00FFF5  00                 	db	0
   700  00FFF6                     STR_1:
   701  00FFF6  52                 	db	82	;'R'
   702  00FFF7  75                 	db	117	;'u'
   703  00FFF8  6E                 	db	110	;'n'
   704  00FFF9  54                 	db	84	;'T'
   705  00FFFA  69                 	db	105	;'i'
   706  00FFFB  6D                 	db	109	;'m'
   707  00FFFC  65                 	db	101	;'e'
   708  00FFFD  00                 	db	0
   709                           
   710                           ; #config settings
   711  00FFFE  00                 	db	0	; dummy byte at the end
   712  0000                     
   713                           	psect	nvCOMRAM
   714  000027                     __pnvCOMRAM:
   715                           	opt stack 0
   716  000027                     _timer0ReloadVal:
   717                           	opt stack 0
   718  000027                     	ds	2
   719  000029                     _TMR0_InterruptHandler:
   720                           	opt stack 0
   721  000029                     	ds	2
   722  00002B                     _IOCB5_InterruptHandler:
   723                           	opt stack 0
   724  00002B                     	ds	2
   725  00002D                     _IOCB4_InterruptHandler:
   726                           	opt stack 0
   727  00002D                     	ds	2
   728  0000                     _IOCBbits	set	3930
   729  0000                     _WPUB	set	3931
   730  0000                     _ANCON1	set	3932
   731  0000                     _ANCON0	set	3933
   732  0000                     _PORTC	set	3970
   733  0000                     _PORTA	set	3968
   734  0000                     _LATEbits	set	3981
   735  0000                     _T0CONbits	set	4053
   736  0000                     _TMR0L	set	4054
   737  0000                     _TMR0H	set	4055
   738  0000                     _T0CON	set	4053
   739  0000                     _EEDATA	set	3955
   740  0000                     _EEADR	set	3956
   741  0000                     _EEADRH	set	3957
   742  0000                     _EECON2	set	3966
   743  0000                     _EECON1bits	set	3967
   744  0000                     _TABLAT	set	4085
   745  0000                     _TBLPTRL	set	4086
   746  0000                     _TBLPTRH	set	4087
   747  0000                     _TBLPTRU	set	4088
   748  0000                     _CCPTMRSbits	set	3993
   749  0000                     _CCPR1H	set	4029
   750  0000                     _CCPR1L	set	4028
   751  0000                     _ECCP1DEL	set	4030
   752  0000                     _PSTR1CON	set	3996
   753  0000                     _ECCP1AS	set	4031
   754  0000                     _CCP1CON	set	4027
   755  0000                     _REFOCON	set	3994
   756  0000                     _OSCTUNE	set	3995
   757  0000                     _OSCCON2	set	4050
   758  0000                     _OSCCON	set	4051
   759  0000                     _RCONbits	set	4048
   760  0000                     _PORTB	set	3969
   761  0000                     _PORTBbits	set	3969
   762  0000                     _INTCONbits	set	4082
   763  0000                     _TRISD	set	3989
   764  0000                     _TRISC	set	3988
   765  0000                     _TRISB	set	3987
   766  0000                     _TRISA	set	3986
   767  0000                     _TRISE	set	3990
   768  0000                     _LATC	set	3979
   769  0000                     _LATB	set	3978
   770  0000                     _LATA	set	3977
   771  0000                     _LATD	set	3980
   772  0000                     _LATE	set	3981
   773  0000                     _T4CONbits	set	3976
   774  0000                     _PIR4bits	set	4023
   775  0000                     _TMR4	set	3975
   776  0000                     _PR4	set	4009
   777  0000                     _T4CON	set	3976
   778                           
   779                           	psect	cinit
   780  0006E2                     __pcinit:
   781                           	opt stack 0
   782  0006E2                     start_initialization:
   783                           	opt stack 0
   784  0006E2                     __initialization:
   785                           	opt stack 0
   786                           
   787                           ; Initialize objects allocated to COMRAM (6 bytes)
   788                           ; load TBLPTR registers with __pidataCOMRAM
   789  0006E2  0E28               	movlw	low __pidataCOMRAM
   790  0006E4  6EF6               	movwf	tblptrl,c
   791  0006E6  0E0A               	movlw	high __pidataCOMRAM
   792  0006E8  6EF7               	movwf	tblptrh,c
   793  0006EA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   794  0006EC  6EF8               	movwf	tblptru,c
   795  0006EE  EE00  F035         	lfsr	0,__pdataCOMRAM
   796  0006F2  EE10 F006          	lfsr	1,6
   797  0006F6                     copy_data0:
   798  0006F6  0009               	tblrd		*+
   799  0006F8  CFF5 FFEE          	movff	tablat,postinc0
   800  0006FC  50E5               	movf	postdec1,w,c
   801  0006FE  50E1               	movf	fsr1l,w,c
   802  000700  E1FA               	bnz	copy_data0
   803                           
   804                           ; Clear objects allocated to COMRAM (6 bytes)
   805  000702  6A34               	clrf	(__pbssCOMRAM+5)& (0+255),c
   806  000704  6A33               	clrf	(__pbssCOMRAM+4)& (0+255),c
   807  000706  6A32               	clrf	(__pbssCOMRAM+3)& (0+255),c
   808  000708  6A31               	clrf	(__pbssCOMRAM+2)& (0+255),c
   809  00070A  6A30               	clrf	(__pbssCOMRAM+1)& (0+255),c
   810  00070C  6A2F               	clrf	__pbssCOMRAM& (0+255),c
   811  00070E                     end_of_initialization:
   812                           	opt stack 0
   813  00070E                     __end_of__initialization:
   814                           	opt stack 0
   815  00070E  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   816  000710  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   817  000712  0100               	movlb	0
   818  000714  EF37  F003         	goto	_main	;jump to C main() function
   819                           tblptru	equ	0xFF8
   820                           tblptrh	equ	0xFF7
   821                           tblptrl	equ	0xFF6
   822                           tablat	equ	0xFF5
   823                           postinc0	equ	0xFEE
   824                           postdec1	equ	0xFE5
   825                           fsr1l	equ	0xFE1
   826                           
   827                           	psect	bssCOMRAM
   828  00002F                     __pbssCOMRAM:
   829                           	opt stack 0
   830  00002F                     _screen_y:
   831                           	opt stack 0
   832  00002F                     	ds	1
   833  000030                     _screen_x:
   834                           	opt stack 0
   835  000030                     	ds	1
   836  000031                     PIN_MANAGER_IOC@previousState:
   837                           	opt stack 0
   838  000031                     	ds	1
   839  000032                     _runTimeContext:
   840                           	opt stack 0
   841  000032                     	ds	1
   842  000033                     _currentContext:
   843                           	opt stack 0
   844  000033                     	ds	1
   845  000034                     _mainState:
   846                           	opt stack 0
   847  000034                     	ds	1
   848                           tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           postinc0	equ	0xFEE
   853                           postdec1	equ	0xFE5
   854                           fsr1l	equ	0xFE1
   855                           
   856                           	psect	dataCOMRAM
   857  000035                     __pdataCOMRAM:
   858                           	opt stack 0
   859  000035                     _valuesXStart:
   860                           	opt stack 0
   861  000035                     	ds	1
   862  000036                     _xMenuStart:
   863                           	opt stack 0
   864  000036                     	ds	1
   865  000037                     _ARROW_SIZE:
   866                           	opt stack 0
   867  000037                     	ds	1
   868  000038                     _timeAfterFinishX:
   869                           	opt stack 0
   870  000038                     	ds	1
   871  000039                     _runTimeX:
   872                           	opt stack 0
   873  000039                     	ds	1
   874  00003A                     _subMenuY:
   875                           	opt stack 0
   876  00003A                     	ds	1
   877                           tblptru	equ	0xFF8
   878                           tblptrh	equ	0xFF7
   879                           tblptrl	equ	0xFF6
   880                           tablat	equ	0xFF5
   881                           postinc0	equ	0xFEE
   882                           postdec1	equ	0xFE5
   883                           fsr1l	equ	0xFE1
   884                           
   885                           	psect	cstackBANK0
   886  000060                     __pcstackBANK0:
   887                           	opt stack 0
   888  000060                     ??_TMR0_Initialize:
   889  000060                     ?___awdiv:
   890                           	opt stack 0
   891  000060                     GLCD_ReadStatus@status:
   892                           	opt stack 0
   893  000060                     ___awdiv@dividend:
   894                           	opt stack 0
   895                           
   896                           ; 2 bytes @ 0x0
   897  000060                     	ds	1
   898  000061                     GLCD_ReadStatus@controller:
   899                           	opt stack 0
   900                           
   901                           ; 1 bytes @ 0x1
   902  000061                     	ds	1
   903  000062                     ___awdiv@divisor:
   904                           	opt stack 0
   905                           
   906                           ; 2 bytes @ 0x2
   907  000062                     	ds	2
   908  000064                     ___awdiv@counter:
   909                           	opt stack 0
   910                           
   911                           ; 1 bytes @ 0x4
   912  000064                     	ds	1
   913  000065                     ___awdiv@sign:
   914                           	opt stack 0
   915                           
   916                           ; 1 bytes @ 0x5
   917  000065                     	ds	1
   918  000066                     ___awdiv@quotient:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0x6
   922  000066                     	ds	2
   923  000068                     ??_GLCD_WriteCommand:
   924  000068                     GLCD_WriteData@dataToWrite:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x8
   928  000068                     	ds	1
   929  000069                     GLCD_WriteChar@charToWrite:
   930                           	opt stack 0
   931  000069                     GLCD_WriteCommand@commandToWrite:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x9
   935  000069                     	ds	1
   936  00006A                     GLCD_Initalize@i:
   937                           	opt stack 0
   938  00006A                     GLCD_GoTo@y:
   939                           	opt stack 0
   940  00006A                     GLCD_WriteChar@i:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0xA
   944  00006A                     	ds	1
   945  00006B                     GLCD_GoTo@x:
   946                           	opt stack 0
   947                           
   948                           ; 1 bytes @ 0xB
   949  00006B                     	ds	1
   950  00006C                     GLCD_GoTo@i:
   951                           	opt stack 0
   952  00006C                     GLCD_WriteString@stringToWrite:
   953                           	opt stack 0
   954                           
   955                           ; 2 bytes @ 0xC
   956  00006C                     	ds	1
   957  00006D                     ??_Clear_Arrow_Column:
   958  00006D                     GLCD_ClearScreen@i:
   959                           	opt stack 0
   960  00006D                     Clear_runTime_Arrows@i:
   961                           	opt stack 0
   962                           
   963                           ; 1 bytes @ 0xD
   964  00006D                     	ds	1
   965  00006E                     GLCD_ClearScreen@j:
   966                           	opt stack 0
   967                           
   968                           ; 1 bytes @ 0xE
   969  00006E                     	ds	6
   970  000074                     Clear_Arrow_Column@j:
   971                           	opt stack 0
   972                           
   973                           ; 1 bytes @ 0x14
   974  000074                     	ds	1
   975  000075                     Clear_Arrow_Column@i:
   976                           	opt stack 0
   977                           
   978                           ; 1 bytes @ 0x15
   979  000075                     	ds	1
   980  000076                     ??_main:
   981                           
   982                           ; 1 bytes @ 0x16
   983  000076                     	ds	1
   984                           tblptru	equ	0xFF8
   985                           tblptrh	equ	0xFF7
   986                           tblptrl	equ	0xFF6
   987                           tablat	equ	0xFF5
   988                           postinc0	equ	0xFEE
   989                           postdec1	equ	0xFE5
   990                           fsr1l	equ	0xFE1
   991                           
   992                           	psect	cstackCOMRAM
   993  000001                     __pcstackCOMRAM:
   994                           	opt stack 0
   995  000001                     ?i2___awdiv:
   996                           	opt stack 0
   997  000001                     i2GLCD_EnableController@controller:
   998                           	opt stack 0
   999  000001                     i2GLCD_DisableController@controller:
  1000                           	opt stack 0
  1001  000001                     i2___awdiv@dividend:
  1002                           	opt stack 0
  1003                           
  1004                           ; 2 bytes @ 0x0
  1005  000001                     	ds	1
  1006  000002                     i2GLCD_ReadStatus@status:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x1
  1010  000002                     	ds	1
  1011  000003                     i2GLCD_ReadStatus@controller:
  1012                           	opt stack 0
  1013  000003                     i2___awdiv@divisor:
  1014                           	opt stack 0
  1015                           
  1016                           ; 2 bytes @ 0x2
  1017  000003                     	ds	2
  1018  000005                     i2___awdiv@counter:
  1019                           	opt stack 0
  1020                           
  1021                           ; 1 bytes @ 0x4
  1022  000005                     	ds	1
  1023  000006                     i2___awdiv@sign:
  1024                           	opt stack 0
  1025                           
  1026                           ; 1 bytes @ 0x5
  1027  000006                     	ds	1
  1028  000007                     i2___awdiv@quotient:
  1029                           	opt stack 0
  1030                           
  1031                           ; 2 bytes @ 0x6
  1032  000007                     	ds	2
  1033  000009                     ??i2_GLCD_WriteData:
  1034  000009                     i2GLCD_WriteCommand@controller:
  1035                           	opt stack 0
  1036                           
  1037                           ; 1 bytes @ 0x8
  1038  000009                     	ds	1
  1039  00000A                     ??i2_GLCD_WriteCommand:
  1040  00000A                     i2GLCD_WriteData@dataToWrite:
  1041                           	opt stack 0
  1042                           
  1043                           ; 1 bytes @ 0x9
  1044  00000A                     	ds	1
  1045  00000B                     i2GLCD_WriteChar@charToWrite:
  1046                           	opt stack 0
  1047  00000B                     i2GLCD_WriteCommand@commandToWrite:
  1048                           	opt stack 0
  1049                           
  1050                           ; 1 bytes @ 0xA
  1051  00000B                     	ds	1
  1052  00000C                     i2GLCD_GoTo@y:
  1053                           	opt stack 0
  1054  00000C                     i2GLCD_WriteChar@i:
  1055                           	opt stack 0
  1056                           
  1057                           ; 2 bytes @ 0xB
  1058  00000C                     	ds	1
  1059  00000D                     i2GLCD_GoTo@x:
  1060                           	opt stack 0
  1061                           
  1062                           ; 1 bytes @ 0xC
  1063  00000D                     	ds	1
  1064  00000E                     i2GLCD_GoTo@i:
  1065                           	opt stack 0
  1066                           
  1067                           ; 1 bytes @ 0xD
  1068  00000E                     	ds	1
  1069  00000F                     ??_PIN_MANAGER_IOC:
  1070                           
  1071                           ; 1 bytes @ 0xE
  1072  00000F                     	ds	2
  1073  000011                     PIN_MANAGER_IOC@result:
  1074                           	opt stack 0
  1075                           
  1076                           ; 1 bytes @ 0x10
  1077  000011                     	ds	1
  1078  000012                     PIN_MANAGER_IOC@currentState:
  1079                           	opt stack 0
  1080                           
  1081                           ; 1 bytes @ 0x11
  1082  000012                     	ds	1
  1083  000013                     ??_INTERRUPT_InterruptManager:
  1084                           
  1085                           ; 1 bytes @ 0x12
  1086  000013                     	ds	18
  1087  000025                     GLCD_EnableController@controller:
  1088                           	opt stack 0
  1089  000025                     GLCD_DisableController@controller:
  1090                           	opt stack 0
  1091  000025                     IOCB4_SetInterruptHandler@InterruptHandler:
  1092                           	opt stack 0
  1093  000025                     IOCB5_SetInterruptHandler@InterruptHandler:
  1094                           	opt stack 0
  1095  000025                     TMR0_SetInterruptHandler@InterruptHandler:
  1096                           	opt stack 0
  1097                           
  1098                           ; 2 bytes @ 0x24
  1099  000025                     	ds	1
  1100  000026                     ??_GLCD_WriteData:
  1101  000026                     GLCD_WriteCommand@controller:
  1102                           	opt stack 0
  1103                           
  1104                           ; 1 bytes @ 0x25
  1105  000026                     	ds	1
  1106  000027                     tblptru	equ	0xFF8
  1107                           tblptrh	equ	0xFF7
  1108                           tblptrl	equ	0xFF6
  1109                           tablat	equ	0xFF5
  1110                           postinc0	equ	0xFEE
  1111                           postdec1	equ	0xFE5
  1112                           fsr1l	equ	0xFE1
  1113                           
  1114                           ; 1 bytes @ 0x26
  1115 ;;
  1116 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1117 ;;
  1118 ;; *************** function _main *****************
  1119 ;; Defined at:
  1120 ;;		line 58 in file "main.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1136 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1137 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1138 ;;Total ram usage:        1 bytes
  1139 ;; Hardware stack levels required when called:   13
  1140 ;; This function calls:
  1141 ;;		_Check_Buttons
  1142 ;;		_Draw_Arrow
  1143 ;;		_GLCD_ClearScreen
  1144 ;;		_GLCD_Initalize
  1145 ;;		_Initialize_Menus
  1146 ;;		_SYSTEM_Initialize
  1147 ;; This function is called by:
  1148 ;;		Startup code after reset
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text0
  1153  00066E                     __ptext0:
  1154                           	opt stack 0
  1155  00066E                     _main:
  1156                           	opt stack 18
  1157                           
  1158                           ;main.c: 61: SYSTEM_Initialize();
  1159                           
  1160                           ;incstack = 0
  1161  00066E  ECC2  F004         	call	_SYSTEM_Initialize	;wreg free
  1162                           
  1163                           ;main.c: 80: (INTCONbits.GIE = 1);
  1164  000672  8EF2               	bsf	intcon,7,c	;volatile
  1165                           
  1166                           ;main.c: 86: (INTCONbits.PEIE = 1);
  1167  000674  8CF2               	bsf	intcon,6,c	;volatile
  1168                           
  1169                           ;main.c: 94: do { LATEbits.LATE1 = 1; } while(0);
  1170  000676  828D               	bsf	3981,1,c	;volatile
  1171                           
  1172                           ;main.c: 95: _delay((unsigned long)((10)*(8000000/4000.0)));
  1173  000678  0E1A               	movlw	26
  1174  00067A  0100               	movlb	0	; () banked
  1175  00067C  6F76               	movwf	??_main& (0+255),b
  1176  00067E  0EF8               	movlw	248
  1177  000680                     u1967:
  1178  000680  2EE8               	decfsz	wreg,f,c
  1179  000682  D7FE               	bra	u1967
  1180  000684  2F76               	decfsz	??_main& (0+255),f,b
  1181  000686  D7FC               	bra	u1967
  1182  000688  F000               	nop	
  1183                           
  1184                           ;main.c: 96: GLCD_Initalize();
  1185  00068A  EC92  F004         	call	_GLCD_Initalize	;wreg free
  1186                           
  1187                           ;main.c: 97: GLCD_ClearScreen();
  1188  00068E  EC8C  F003         	call	_GLCD_ClearScreen	;wreg free
  1189                           
  1190                           ;main.c: 100: Initialize_Menus();
  1191  000692  EC5C  F000         	call	_Initialize_Menus	;wreg free
  1192                           
  1193                           ;main.c: 102: currentContext = mainMenu;
  1194  000696  0E00               	movlw	0
  1195  000698  6E33               	movwf	_currentContext,c
  1196                           
  1197                           ;main.c: 103: mainState = setRunTime;
  1198  00069A  0E02               	movlw	2
  1199  00069C  6E34               	movwf	_mainState,c
  1200                           
  1201                           ;main.c: 104: Draw_Arrow();
  1202  00069E  ECD9  F004         	call	_Draw_Arrow	;wreg free
  1203  0006A2                     
  1204                           ;main.c: 107: {
  1205                           ;main.c: 109: Check_Buttons();
  1206  0006A2  ECA3  F004         	call	_Check_Buttons	;wreg free
  1207  0006A6  D7FD               	goto	l364
  1208  0006A8                     __end_of_main:
  1209                           	opt stack 0
  1210                           tblptru	equ	0xFF8
  1211                           tblptrh	equ	0xFF7
  1212                           tblptrl	equ	0xFF6
  1213                           tablat	equ	0xFF5
  1214                           intcon	equ	0xFF2
  1215                           postinc0	equ	0xFEE
  1216                           wreg	equ	0xFE8
  1217                           postdec1	equ	0xFE5
  1218                           fsr1l	equ	0xFE1
  1219                           
  1220 ;; *************** function _SYSTEM_Initialize *****************
  1221 ;; Defined at:
  1222 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;		None
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;		None
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, status,2, status,0, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1240 ;;Total ram usage:        0 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    8
  1243 ;; This function calls:
  1244 ;;		_EPWM1_Initialize
  1245 ;;		_INTERRUPT_Initialize
  1246 ;;		_OSCILLATOR_Initialize
  1247 ;;		_PIN_MANAGER_Initialize
  1248 ;;		_TMR0_Initialize
  1249 ;;		_TMR4_Initialize
  1250 ;; This function is called by:
  1251 ;;		_main
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text1
  1256  000984                     __ptext1:
  1257                           	opt stack 0
  1258  000984                     _SYSTEM_Initialize:
  1259                           	opt stack 22
  1260                           
  1261                           ;mcc.c: 114: INTERRUPT_Initialize();
  1262                           
  1263                           ;incstack = 0
  1264  000984  EC1B  F005         	call	_INTERRUPT_Initialize	;wreg free
  1265                           
  1266                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1267  000988  ECE4  F002         	call	_PIN_MANAGER_Initialize	;wreg free
  1268                           
  1269                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1270  00098C  ECF7  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1271                           
  1272                           ;mcc.c: 117: EPWM1_Initialize();
  1273  000990  ECB4  F004         	call	_EPWM1_Initialize	;wreg free
  1274                           
  1275                           ;mcc.c: 118: TMR4_Initialize();
  1276  000994  ECCF  F004         	call	_TMR4_Initialize	;wreg free
  1277                           
  1278                           ;mcc.c: 119: TMR0_Initialize();
  1279  000998  EC54  F003         	call	_TMR0_Initialize	;wreg free
  1280  00099C  0012               	return		;funcret
  1281  00099E                     __end_of_SYSTEM_Initialize:
  1282                           	opt stack 0
  1283                           tblptru	equ	0xFF8
  1284                           tblptrh	equ	0xFF7
  1285                           tblptrl	equ	0xFF6
  1286                           tablat	equ	0xFF5
  1287                           intcon	equ	0xFF2
  1288                           postinc0	equ	0xFEE
  1289                           wreg	equ	0xFE8
  1290                           postdec1	equ	0xFE5
  1291                           fsr1l	equ	0xFE1
  1292                           
  1293 ;; *************** function _TMR4_Initialize *****************
  1294 ;; Defined at:
  1295 ;;		line 61 in file "mcc_generated_files/tmr4.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1313 ;;Total ram usage:        0 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    7
  1316 ;; This function calls:
  1317 ;;		_TMR4_StartTimer
  1318 ;; This function is called by:
  1319 ;;		_SYSTEM_Initialize
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text2
  1324  00099E                     __ptext2:
  1325                           	opt stack 0
  1326  00099E                     _TMR4_Initialize:
  1327                           	opt stack 22
  1328                           
  1329                           ;tmr4.c: 66: T4CON = 0x02;
  1330                           
  1331                           ;incstack = 0
  1332  00099E  0E02               	movlw	2
  1333  0009A0  6E88               	movwf	3976,c	;volatile
  1334                           
  1335                           ;tmr4.c: 69: PR4 = 0xF9;
  1336  0009A2  0EF9               	movlw	249
  1337  0009A4  6EA9               	movwf	4009,c	;volatile
  1338                           
  1339                           ;tmr4.c: 72: TMR4 = 0x00;
  1340  0009A6  0E00               	movlw	0
  1341  0009A8  6E87               	movwf	3975,c	;volatile
  1342                           
  1343                           ;tmr4.c: 75: PIR4bits.TMR4IF = 0;
  1344  0009AA  9EB7               	bcf	4023,7,c	;volatile
  1345                           
  1346                           ;tmr4.c: 78: TMR4_StartTimer();
  1347  0009AC  EC17  F005         	call	_TMR4_StartTimer	;wreg free
  1348  0009B0  0012               	return		;funcret
  1349  0009B2                     __end_of_TMR4_Initialize:
  1350                           	opt stack 0
  1351                           tblptru	equ	0xFF8
  1352                           tblptrh	equ	0xFF7
  1353                           tblptrl	equ	0xFF6
  1354                           tablat	equ	0xFF5
  1355                           intcon	equ	0xFF2
  1356                           postinc0	equ	0xFEE
  1357                           wreg	equ	0xFE8
  1358                           postdec1	equ	0xFE5
  1359                           fsr1l	equ	0xFE1
  1360                           
  1361 ;; *************** function _TMR4_StartTimer *****************
  1362 ;; Defined at:
  1363 ;;		line 81 in file "mcc_generated_files/tmr4.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		None
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1381 ;;Total ram usage:        0 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:    6
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		_TMR4_Initialize
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text3
  1392  000A2E                     __ptext3:
  1393                           	opt stack 0
  1394  000A2E                     _TMR4_StartTimer:
  1395                           	opt stack 22
  1396                           
  1397                           ;tmr4.c: 84: T4CONbits.TMR4ON = 1;
  1398                           
  1399                           ;incstack = 0
  1400  000A2E  8488               	bsf	3976,2,c	;volatile
  1401  000A30  0012               	return		;funcret
  1402  000A32                     __end_of_TMR4_StartTimer:
  1403                           	opt stack 0
  1404                           tblptru	equ	0xFF8
  1405                           tblptrh	equ	0xFF7
  1406                           tblptrl	equ	0xFF6
  1407                           tablat	equ	0xFF5
  1408                           intcon	equ	0xFF2
  1409                           postinc0	equ	0xFEE
  1410                           wreg	equ	0xFE8
  1411                           postdec1	equ	0xFE5
  1412                           fsr1l	equ	0xFE1
  1413                           
  1414 ;; *************** function _TMR0_Initialize *****************
  1415 ;; Defined at:
  1416 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1432 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1433 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1434 ;;Total ram usage:        2 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    7
  1437 ;; This function calls:
  1438 ;;		_TMR0_SetInterruptHandler
  1439 ;;		_TMR0_StartTimer
  1440 ;; This function is called by:
  1441 ;;		_SYSTEM_Initialize
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text4
  1446  0006A8                     __ptext4:
  1447                           	opt stack 0
  1448  0006A8                     _TMR0_Initialize:
  1449                           	opt stack 22
  1450                           
  1451                           ;tmr0.c: 71: T0CON = 0x14;
  1452                           
  1453                           ;incstack = 0
  1454  0006A8  0E14               	movlw	20
  1455  0006AA  6ED5               	movwf	4053,c	;volatile
  1456                           
  1457                           ;tmr0.c: 74: TMR0H = 0x0B;
  1458  0006AC  0E0B               	movlw	11
  1459  0006AE  6ED7               	movwf	4055,c	;volatile
  1460                           
  1461                           ;tmr0.c: 77: TMR0L = 0xDB;
  1462  0006B0  0EDB               	movlw	219
  1463  0006B2  6ED6               	movwf	4054,c	;volatile
  1464                           
  1465                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  1466  0006B4  50D6               	movf	4054,w,c	;volatile
  1467  0006B6  CFD7 F060          	movff	4055,??_TMR0_Initialize	;volatile
  1468  0006BA  0100               	movlb	0	; () banked
  1469  0006BC  6B61               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  1470  0006BE  C060  F061         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1471  0006C2  6B60               	clrf	??_TMR0_Initialize& (0+255),b
  1472  0006C4  1160               	iorwf	??_TMR0_Initialize& (0+255),w,b
  1473  0006C6  6E27               	movwf	_timer0ReloadVal,c	;volatile
  1474  0006C8  5161               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  1475  0006CA  6E28               	movwf	_timer0ReloadVal+1,c	;volatile
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  1479  0006CC  94F2               	bcf	intcon,2,c	;volatile
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  1483  0006CE  8AF2               	bsf	intcon,5,c	;volatile
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1487  0006D0  0E42               	movlw	low _TMR0_DefaultInterruptHandler
  1488  0006D2  6E25               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1489  0006D4  0E0A               	movlw	high _TMR0_DefaultInterruptHandler
  1490  0006D6  6E26               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1491  0006D8  EC00  F005         	call	_TMR0_SetInterruptHandler	;wreg free
  1492                           
  1493                           ;tmr0.c: 92: TMR0_StartTimer();
  1494  0006DC  EC19  F005         	call	_TMR0_StartTimer	;wreg free
  1495  0006E0  0012               	return		;funcret
  1496  0006E2                     __end_of_TMR0_Initialize:
  1497                           	opt stack 0
  1498                           tblptru	equ	0xFF8
  1499                           tblptrh	equ	0xFF7
  1500                           tblptrl	equ	0xFF6
  1501                           tablat	equ	0xFF5
  1502                           intcon	equ	0xFF2
  1503                           postinc0	equ	0xFEE
  1504                           wreg	equ	0xFE8
  1505                           postdec1	equ	0xFE5
  1506                           fsr1l	equ	0xFE1
  1507                           
  1508 ;; *************** function _TMR0_StartTimer *****************
  1509 ;; Defined at:
  1510 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		None
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    6
  1531 ;; This function calls:
  1532 ;;		Nothing
  1533 ;; This function is called by:
  1534 ;;		_TMR0_Initialize
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text5
  1539  000A32                     __ptext5:
  1540                           	opt stack 0
  1541  000A32                     _TMR0_StartTimer:
  1542                           	opt stack 22
  1543                           
  1544                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
  1545                           
  1546                           ;incstack = 0
  1547  000A32  8ED5               	bsf	4053,7,c	;volatile
  1548  000A34  0012               	return		;funcret
  1549  000A36                     __end_of_TMR0_StartTimer:
  1550                           	opt stack 0
  1551                           tblptru	equ	0xFF8
  1552                           tblptrh	equ	0xFF7
  1553                           tblptrl	equ	0xFF6
  1554                           tablat	equ	0xFF5
  1555                           intcon	equ	0xFF2
  1556                           postinc0	equ	0xFEE
  1557                           wreg	equ	0xFE8
  1558                           postdec1	equ	0xFE5
  1559                           fsr1l	equ	0xFE1
  1560                           
  1561 ;; *************** function _TMR0_SetInterruptHandler *****************
  1562 ;; Defined at:
  1563 ;;		line 154 in file "mcc_generated_files/tmr0.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  InterruptHan    2   36[COMRAM] PTR FTN()void 
  1566 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1582 ;;Total ram usage:        2 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    6
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_TMR0_Initialize
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text6
  1593  000A00                     __ptext6:
  1594                           	opt stack 0
  1595  000A00                     _TMR0_SetInterruptHandler:
  1596                           	opt stack 22
  1597                           
  1598                           ;tmr0.c: 155: TMR0_InterruptHandler = InterruptHandler;
  1599                           
  1600                           ;incstack = 0
  1601  000A00  C025  F029         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1602  000A04  C026  F02A         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1603  000A08  0012               	return		;funcret
  1604  000A0A                     __end_of_TMR0_SetInterruptHandler:
  1605                           	opt stack 0
  1606                           tblptru	equ	0xFF8
  1607                           tblptrh	equ	0xFF7
  1608                           tblptrl	equ	0xFF6
  1609                           tablat	equ	0xFF5
  1610                           intcon	equ	0xFF2
  1611                           postinc0	equ	0xFEE
  1612                           wreg	equ	0xFE8
  1613                           postdec1	equ	0xFE5
  1614                           fsr1l	equ	0xFE1
  1615                           
  1616 ;; *************** function _PIN_MANAGER_Initialize *****************
  1617 ;; Defined at:
  1618 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;		None
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1636 ;;Total ram usage:        0 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    7
  1639 ;; This function calls:
  1640 ;;		_IOCB4_SetInterruptHandler
  1641 ;;		_IOCB5_SetInterruptHandler
  1642 ;; This function is called by:
  1643 ;;		_SYSTEM_Initialize
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text7
  1648  0005C8                     __ptext7:
  1649                           	opt stack 0
  1650  0005C8                     _PIN_MANAGER_Initialize:
  1651                           	opt stack 22
  1652                           
  1653                           ;pin_manager.c: 64: LATE = 0x00;
  1654                           
  1655                           ;incstack = 0
  1656  0005C8  0E00               	movlw	0
  1657  0005CA  6E8D               	movwf	3981,c	;volatile
  1658                           
  1659                           ;pin_manager.c: 65: LATD = 0x00;
  1660  0005CC  0E00               	movlw	0
  1661  0005CE  6E8C               	movwf	3980,c	;volatile
  1662                           
  1663                           ;pin_manager.c: 66: LATA = 0x00;
  1664  0005D0  0E00               	movlw	0
  1665  0005D2  6E89               	movwf	3977,c	;volatile
  1666                           
  1667                           ;pin_manager.c: 67: LATB = 0x00;
  1668  0005D4  0E00               	movlw	0
  1669  0005D6  6E8A               	movwf	3978,c	;volatile
  1670                           
  1671                           ;pin_manager.c: 68: LATC = 0x00;
  1672  0005D8  0E00               	movlw	0
  1673  0005DA  6E8B               	movwf	3979,c	;volatile
  1674                           
  1675                           ;pin_manager.c: 73: TRISE = 0x05;
  1676  0005DC  0E05               	movlw	5
  1677  0005DE  6E96               	movwf	3990,c	;volatile
  1678                           
  1679                           ;pin_manager.c: 74: TRISA = 0x01;
  1680  0005E0  0E01               	movlw	1
  1681  0005E2  6E92               	movwf	3986,c	;volatile
  1682                           
  1683                           ;pin_manager.c: 75: TRISB = 0xFF;
  1684  0005E4  6893               	setf	3987,c	;volatile
  1685                           
  1686                           ;pin_manager.c: 76: TRISC = 0x00;
  1687  0005E6  0E00               	movlw	0
  1688  0005E8  6E94               	movwf	3988,c	;volatile
  1689                           
  1690                           ;pin_manager.c: 77: TRISD = 0x0F;
  1691  0005EA  0E0F               	movlw	15
  1692  0005EC  6E95               	movwf	3989,c	;volatile
  1693                           
  1694                           ;pin_manager.c: 82: ANCON0 = 0x00;
  1695  0005EE  0E00               	movlw	0
  1696  0005F0  010F               	movlb	15	; () banked
  1697  0005F2  6F5D               	movwf	93,b	;volatile
  1698                           
  1699                           ;pin_manager.c: 83: ANCON1 = 0x00;
  1700  0005F4  0E00               	movlw	0
  1701  0005F6  6F5C               	movwf	92,b	;volatile
  1702                           
  1703                           ;pin_manager.c: 89: WPUB = 0x00;
  1704  0005F8  0E00               	movlw	0
  1705  0005FA  6F5B               	movwf	91,b	;volatile
  1706                           
  1707                           ; BSR set to: 15
  1708                           ;pin_manager.c: 97: IOCBbits.IOCB4 = 1;
  1709  0005FC  895A               	bsf	90,4,b	;volatile
  1710                           
  1711                           ; BSR set to: 15
  1712                           ;pin_manager.c: 98: IOCBbits.IOCB5 = 1;
  1713  0005FE  8B5A               	bsf	90,5,b	;volatile
  1714                           
  1715                           ; BSR set to: 15
  1716                           ;pin_manager.c: 101: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  1717  000600  0E00               	movlw	0
  1718  000602  6E25               	movwf	IOCB4_SetInterruptHandler@InterruptHandler,c
  1719  000604  0E00               	movlw	0
  1720  000606  6E26               	movwf	IOCB4_SetInterruptHandler@InterruptHandler+1,c
  1721  000608  EC0A  F005         	call	_IOCB4_SetInterruptHandler	;wreg free
  1722                           
  1723                           ;pin_manager.c: 102: IOCB5_SetInterruptHandler(IOCB5_DefaultInterruptHandler);
  1724  00060C  0E00               	movlw	0
  1725  00060E  6E25               	movwf	IOCB5_SetInterruptHandler@InterruptHandler,c
  1726  000610  0E00               	movlw	0
  1727  000612  6E26               	movwf	IOCB5_SetInterruptHandler@InterruptHandler+1,c
  1728  000614  EC05  F005         	call	_IOCB5_SetInterruptHandler	;wreg free
  1729                           
  1730                           ;pin_manager.c: 105: INTCONbits.RBIE = 1;
  1731  000618  86F2               	bsf	intcon,3,c	;volatile
  1732  00061A  0012               	return		;funcret
  1733  00061C                     __end_of_PIN_MANAGER_Initialize:
  1734                           	opt stack 0
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           intcon	equ	0xFF2
  1740                           postinc0	equ	0xFEE
  1741                           wreg	equ	0xFE8
  1742                           postdec1	equ	0xFE5
  1743                           fsr1l	equ	0xFE1
  1744                           
  1745 ;; *************** function _IOCB5_SetInterruptHandler *****************
  1746 ;; Defined at:
  1747 ;;		line 248 in file "mcc_generated_files/pin_manager.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  InterruptHan    2   36[COMRAM] PTR void 
  1750 ;;		 -> IOCB5_DefaultInterruptHandler(1), 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1766 ;;Total ram usage:        2 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    6
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_PIN_MANAGER_Initialize
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text8
  1777  000A0A                     __ptext8:
  1778                           	opt stack 0
  1779  000A0A                     _IOCB5_SetInterruptHandler:
  1780                           	opt stack 22
  1781                           
  1782                           ;pin_manager.c: 249: IOCB5_InterruptHandler = InterruptHandler;
  1783                           
  1784                           ;incstack = 0
  1785  000A0A  C025  F02B         	movff	IOCB5_SetInterruptHandler@InterruptHandler,_IOCB5_InterruptHandler
  1786  000A0E  C026  F02C         	movff	IOCB5_SetInterruptHandler@InterruptHandler+1,_IOCB5_InterruptHandler+1
  1787  000A12  0012               	return		;funcret
  1788  000A14                     __end_of_IOCB5_SetInterruptHandler:
  1789                           	opt stack 0
  1790                           tblptru	equ	0xFF8
  1791                           tblptrh	equ	0xFF7
  1792                           tblptrl	equ	0xFF6
  1793                           tablat	equ	0xFF5
  1794                           intcon	equ	0xFF2
  1795                           postinc0	equ	0xFEE
  1796                           wreg	equ	0xFE8
  1797                           postdec1	equ	0xFE5
  1798                           fsr1l	equ	0xFE1
  1799                           
  1800 ;; *************** function _IOCB4_SetInterruptHandler *****************
  1801 ;; Defined at:
  1802 ;;		line 219 in file "mcc_generated_files/pin_manager.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  InterruptHan    2   36[COMRAM] PTR void 
  1805 ;;		 -> IOCB4_DefaultInterruptHandler(1), 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;Total ram usage:        2 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; Hardware stack levels required when called:    6
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_PIN_MANAGER_Initialize
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text9
  1832  000A14                     __ptext9:
  1833                           	opt stack 0
  1834  000A14                     _IOCB4_SetInterruptHandler:
  1835                           	opt stack 22
  1836                           
  1837                           ;pin_manager.c: 220: IOCB4_InterruptHandler = InterruptHandler;
  1838                           
  1839                           ;incstack = 0
  1840  000A14  C025  F02D         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  1841  000A18  C026  F02E         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  1842  000A1C  0012               	return		;funcret
  1843  000A1E                     __end_of_IOCB4_SetInterruptHandler:
  1844                           	opt stack 0
  1845                           tblptru	equ	0xFF8
  1846                           tblptrh	equ	0xFF7
  1847                           tblptrl	equ	0xFF6
  1848                           tablat	equ	0xFF5
  1849                           intcon	equ	0xFF2
  1850                           postinc0	equ	0xFEE
  1851                           wreg	equ	0xFE8
  1852                           postdec1	equ	0xFE5
  1853                           fsr1l	equ	0xFE1
  1854                           
  1855 ;; *************** function _OSCILLATOR_Initialize *****************
  1856 ;; Defined at:
  1857 ;;		line 122 in file "mcc_generated_files/mcc.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		wreg, status,2
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1875 ;;Total ram usage:        0 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; Hardware stack levels required when called:    6
  1878 ;; This function calls:
  1879 ;;		Nothing
  1880 ;; This function is called by:
  1881 ;;		_SYSTEM_Initialize
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text10
  1886  0009EE                     __ptext10:
  1887                           	opt stack 0
  1888  0009EE                     _OSCILLATOR_Initialize:
  1889                           	opt stack 23
  1890                           
  1891                           ;mcc.c: 125: OSCCON = 0x60;
  1892                           
  1893                           ;incstack = 0
  1894  0009EE  0E60               	movlw	96
  1895  0009F0  6ED3               	movwf	4051,c	;volatile
  1896                           
  1897                           ;mcc.c: 127: OSCCON2 = 0x00;
  1898  0009F2  0E00               	movlw	0
  1899  0009F4  6ED2               	movwf	4050,c	;volatile
  1900                           
  1901                           ;mcc.c: 129: OSCTUNE = 0x00;
  1902  0009F6  0E00               	movlw	0
  1903  0009F8  6E9B               	movwf	3995,c	;volatile
  1904                           
  1905                           ;mcc.c: 131: REFOCON = 0x00;
  1906  0009FA  0E00               	movlw	0
  1907  0009FC  6E9A               	movwf	3994,c	;volatile
  1908  0009FE  0012               	return		;funcret
  1909  000A00                     __end_of_OSCILLATOR_Initialize:
  1910                           	opt stack 0
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           intcon	equ	0xFF2
  1916                           postinc0	equ	0xFEE
  1917                           wreg	equ	0xFE8
  1918                           postdec1	equ	0xFE5
  1919                           fsr1l	equ	0xFE1
  1920                           
  1921 ;; *************** function _INTERRUPT_Initialize *****************
  1922 ;; Defined at:
  1923 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		None
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1941 ;;Total ram usage:        0 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    6
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_SYSTEM_Initialize
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text11
  1952  000A36                     __ptext11:
  1953                           	opt stack 0
  1954  000A36                     _INTERRUPT_Initialize:
  1955                           	opt stack 23
  1956                           
  1957                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1958                           
  1959                           ;incstack = 0
  1960  000A36  9ED0               	bcf	4048,7,c	;volatile
  1961  000A38  0012               	return		;funcret
  1962  000A3A                     __end_of_INTERRUPT_Initialize:
  1963                           	opt stack 0
  1964                           tblptru	equ	0xFF8
  1965                           tblptrh	equ	0xFF7
  1966                           tblptrl	equ	0xFF6
  1967                           tablat	equ	0xFF5
  1968                           intcon	equ	0xFF2
  1969                           postinc0	equ	0xFEE
  1970                           wreg	equ	0xFE8
  1971                           postdec1	equ	0xFE5
  1972                           fsr1l	equ	0xFE1
  1973                           
  1974 ;; *************** function _EPWM1_Initialize *****************
  1975 ;; Defined at:
  1976 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		wreg, status,2
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1994 ;;Total ram usage:        0 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    6
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_SYSTEM_Initialize
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text12
  2005  000968                     __ptext12:
  2006                           	opt stack 0
  2007  000968                     _EPWM1_Initialize:
  2008                           	opt stack 23
  2009                           
  2010                           ;epwm1.c: 68: CCP1CON = 0x3C;
  2011                           
  2012                           ;incstack = 0
  2013  000968  0E3C               	movlw	60
  2014  00096A  6EBB               	movwf	4027,c	;volatile
  2015                           
  2016                           ;epwm1.c: 71: ECCP1AS = 0x00;
  2017  00096C  0E00               	movlw	0
  2018  00096E  6EBF               	movwf	4031,c	;volatile
  2019                           
  2020                           ;epwm1.c: 74: PSTR1CON = 0x0F;
  2021  000970  0E0F               	movlw	15
  2022  000972  6E9C               	movwf	3996,c	;volatile
  2023                           
  2024                           ;epwm1.c: 77: ECCP1DEL = 0x80;
  2025  000974  0E80               	movlw	128
  2026  000976  6EBE               	movwf	4030,c	;volatile
  2027                           
  2028                           ;epwm1.c: 80: CCPR1L = 0x18;
  2029  000978  0E18               	movlw	24
  2030  00097A  6EBC               	movwf	4028,c	;volatile
  2031                           
  2032                           ;epwm1.c: 83: CCPR1H = 0x00;
  2033  00097C  0E00               	movlw	0
  2034  00097E  6EBD               	movwf	4029,c	;volatile
  2035                           
  2036                           ;epwm1.c: 87: CCPTMRSbits.C1TSEL = 0x1;
  2037  000980  8099               	bsf	3993,0,c	;volatile
  2038  000982  0012               	return		;funcret
  2039  000984                     __end_of_EPWM1_Initialize:
  2040                           	opt stack 0
  2041                           tblptru	equ	0xFF8
  2042                           tblptrh	equ	0xFF7
  2043                           tblptrl	equ	0xFF6
  2044                           tablat	equ	0xFF5
  2045                           intcon	equ	0xFF2
  2046                           postinc0	equ	0xFEE
  2047                           wreg	equ	0xFE8
  2048                           postdec1	equ	0xFE5
  2049                           fsr1l	equ	0xFE1
  2050                           
  2051 ;; *************** function _GLCD_Initalize *****************
  2052 ;; Defined at:
  2053 ;;		line 15 in file "ks0108lib/KS0108.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  i               1   10[BANK0 ] unsigned char 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2068 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2071 ;;Total ram usage:        1 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:    9
  2074 ;; This function calls:
  2075 ;;		_GLCD_InitializePorts
  2076 ;;		_GLCD_WriteCommand
  2077 ;; This function is called by:
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text13
  2083  000924                     __ptext13:
  2084                           	opt stack 0
  2085  000924                     _GLCD_Initalize:
  2086                           	opt stack 21
  2087                           
  2088                           ;KS0108.c: 17: unsigned char i;
  2089                           ;KS0108.c: 18: GLCD_InitializePorts();
  2090                           
  2091                           ;incstack = 0
  2092  000924  EC0F  F005         	call	_GLCD_InitializePorts	;wreg free
  2093                           
  2094                           ;KS0108.c: 19: for(i = 0; i < 3; i++)
  2095  000928  0E00               	movlw	0
  2096  00092A  0100               	movlb	0	; () banked
  2097  00092C  6F6A               	movwf	GLCD_Initalize@i& (0+255),b
  2098  00092E                     l3238:
  2099                           
  2100                           ; BSR set to: 0
  2101  00092E  0E02               	movlw	2
  2102  000930  656A               	cpfsgt	GLCD_Initalize@i& (0+255),b
  2103  000932  D001               	goto	l437
  2104  000934  0012               	return	
  2105  000936                     l437:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;KS0108.c: 20: GLCD_WriteCommand((0x3E | 0x01), i);
  2109                           
  2110                           ; BSR set to: 0
  2111  000936  C06A  F026         	movff	GLCD_Initalize@i,GLCD_WriteCommand@controller
  2112  00093A  0E3F               	movlw	63
  2113  00093C  ECA7  F003         	call	_GLCD_WriteCommand
  2114  000940  0100               	movlb	0	; () banked
  2115  000942  2B6A               	incf	GLCD_Initalize@i& (0+255),f,b
  2116  000944  D7F4               	goto	l3238
  2117  000946                     __end_of_GLCD_Initalize:
  2118                           	opt stack 0
  2119                           tblptru	equ	0xFF8
  2120                           tblptrh	equ	0xFF7
  2121                           tblptrl	equ	0xFF6
  2122                           tablat	equ	0xFF5
  2123                           intcon	equ	0xFF2
  2124                           postinc0	equ	0xFEE
  2125                           wreg	equ	0xFE8
  2126                           postdec1	equ	0xFE5
  2127                           fsr1l	equ	0xFE1
  2128                           
  2129 ;; *************** function _GLCD_InitializePorts *****************
  2130 ;; Defined at:
  2131 ;;		line 31 in file "ks0108lib/KS0108-PIC18.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg, status,2, status,0
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2149 ;;Total ram usage:        0 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    6
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_GLCD_Initalize
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text14
  2160  000A1E                     __ptext14:
  2161                           	opt stack 0
  2162  000A1E                     _GLCD_InitializePorts:
  2163                           	opt stack 23
  2164                           
  2165                           ;KS0108-PIC18.c: 33: PORTA |= ((1 << 5) | (1 << 6) | (1 << 7));
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;incstack = 0
  2169  000A1E  0EE0               	movlw	224
  2170  000A20  1280               	iorwf	3968,f,c	;volatile
  2171                           
  2172                           ;KS0108-PIC18.c: 34: TRISA &= ~((1 << 5) | (1 << 6) | (1 << 7) | (1 << 2) | (1 << 1) | (
      +                          1 << 3));
  2173  000A22  0E11               	movlw	17
  2174  000A24  1692               	andwf	3986,f,c	;volatile
  2175  000A26  0012               	return		;funcret
  2176  000A28                     __end_of_GLCD_InitializePorts:
  2177                           	opt stack 0
  2178                           tblptru	equ	0xFF8
  2179                           tblptrh	equ	0xFF7
  2180                           tblptrl	equ	0xFF6
  2181                           tablat	equ	0xFF5
  2182                           intcon	equ	0xFF2
  2183                           postinc0	equ	0xFEE
  2184                           wreg	equ	0xFE8
  2185                           postdec1	equ	0xFE5
  2186                           fsr1l	equ	0xFE1
  2187                           
  2188 ;; *************** function _Check_Buttons *****************
  2189 ;; Defined at:
  2190 ;;		line 126 in file "main.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2208 ;;Total ram usage:        0 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:   12
  2211 ;; This function calls:
  2212 ;;		_Draw_Arrow
  2213 ;;		_Draw_runTime_Menu
  2214 ;;		_GLCD_ClearScreen
  2215 ;;		_Initialize_Menus
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text15
  2222  000946                     __ptext15:
  2223                           	opt stack 0
  2224  000946                     _Check_Buttons:
  2225                           	opt stack 18
  2226                           
  2227                           ;main.c: 132: if(!PORTBbits.RB2)
  2228                           
  2229                           ;incstack = 0
  2230  000946  B481               	btfsc	3969,2,c	;volatile
  2231  000948  0012               	return	
  2232                           
  2233                           ;main.c: 133: {
  2234                           ;main.c: 134: GLCD_ClearScreen();
  2235  00094A  EC8C  F003         	call	_GLCD_ClearScreen	;wreg free
  2236                           
  2237                           ;main.c: 135: if(currentContext == mainMenu)
  2238  00094E  5033               	movf	_currentContext,w,c
  2239  000950  A4D8               	btfss	status,2,c
  2240  000952  D005               	goto	l371
  2241                           
  2242                           ;main.c: 154: currentContext = mainMenu;
  2243                           
  2244                           ;main.c: 153: default:
  2245                           
  2246                           ;main.c: 152: currentContext = selectStateMenu;
  2247                           
  2248                           ;main.c: 151: selectState:
  2249                           
  2250                           ;main.c: 150: currentContext = backlightMenu;
  2251                           
  2252                           ;main.c: 149: setBacklightBrightness:
  2253                           
  2254                           ;main.c: 148: currentContext = endColorRed;
  2255                           
  2256                           ;main.c: 147: setFinishedColors:
  2257                           
  2258                           ;main.c: 146: currentContext = startColorRed;
  2259                           
  2260                           ;main.c: 145: setStartColors:
  2261                           
  2262                           ;main.c: 144: currentContext = brightnessMenu;
  2263                           
  2264                           ;main.c: 143: setBrightness:
  2265                           
  2266                           ;main.c: 142: Draw_runTime_Menu();
  2267                           
  2268                           ;main.c: 141: runTimeContext = runTimeSelection;
  2269                           
  2270                           ;main.c: 140: currentContext = runTime;
  2271                           
  2272                           ;main.c: 138: {
  2273                           ;main.c: 139: setRunTime:
  2274                           
  2275                           ;main.c: 136: {
  2276                           ;main.c: 137: switch(mainState)
  2277  000954  0E00               	movlw	0
  2278  000956  6E33               	movwf	_currentContext,c
  2279                           
  2280                           ;main.c: 155: Initialize_Menus();
  2281  000958  EC5C  F000         	call	_Initialize_Menus	;wreg free
  2282                           
  2283                           ;main.c: 156: }
  2284  00095C  D002               	goto	l381
  2285  00095E                     l371:
  2286                           
  2287                           ;main.c: 160: else
  2288                           ;main.c: 161: {
  2289                           ;main.c: 162: currentContext = mainMenu;
  2290  00095E  0E00               	movlw	0
  2291  000960  6E33               	movwf	_currentContext,c
  2292  000962                     l381:
  2293                           
  2294                           ;main.c: 163: }
  2295                           ;main.c: 165: Draw_Arrow();
  2296  000962  ECD9  F004         	call	_Draw_Arrow	;wreg free
  2297  000966  0012               	return	
  2298  000968                     __end_of_Check_Buttons:
  2299                           	opt stack 0
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           intcon	equ	0xFF2
  2305                           postinc0	equ	0xFEE
  2306                           wreg	equ	0xFE8
  2307                           postdec1	equ	0xFE5
  2308                           fsr1l	equ	0xFE1
  2309                           status	equ	0xFD8
  2310                           
  2311 ;; *************** function _Initialize_Menus *****************
  2312 ;; Defined at:
  2313 ;;		line 9 in file "screen_controls.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2331 ;;Total ram usage:        0 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:   11
  2334 ;; This function calls:
  2335 ;;		_GLCD_GoTo
  2336 ;;		_GLCD_WriteString
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;;		_Check_Buttons
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text16
  2344  0000B8                     __ptext16:
  2345                           	opt stack 0
  2346  0000B8                     _Initialize_Menus:
  2347                           	opt stack 19
  2348                           
  2349                           ;screen_controls.c: 13: GLCD_GoTo(xMenuStart, setRunTime);
  2350                           
  2351                           ;incstack = 0
  2352  0000B8  0E02               	movlw	2
  2353  0000BA  0100               	movlb	0	; () banked
  2354  0000BC  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2355  0000BE  5036               	movf	_xMenuStart,w,c
  2356  0000C0  ECAB  F000         	call	_GLCD_GoTo
  2357                           
  2358                           ;screen_controls.c: 14: GLCD_WriteString("RunTime");
  2359  0000C4  0EF6               	movlw	low STR_1
  2360  0000C6  0100               	movlb	0	; () banked
  2361  0000C8  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2362  0000CA  0EFF               	movlw	high STR_1
  2363  0000CC  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2364  0000CE  ECDA  F003         	call	_GLCD_WriteString	;wreg free
  2365                           
  2366                           ;screen_controls.c: 16: GLCD_GoTo(xMenuStart, setBrightness);
  2367  0000D2  0E03               	movlw	3
  2368  0000D4  0100               	movlb	0	; () banked
  2369  0000D6  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2370  0000D8  5036               	movf	_xMenuStart,w,c
  2371  0000DA  ECAB  F000         	call	_GLCD_GoTo
  2372                           
  2373                           ;screen_controls.c: 17: GLCD_WriteString("Brightness");
  2374  0000DE  0ECF               	movlw	low STR_2
  2375  0000E0  0100               	movlb	0	; () banked
  2376  0000E2  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2377  0000E4  0EFF               	movlw	high STR_2
  2378  0000E6  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2379  0000E8  ECDA  F003         	call	_GLCD_WriteString	;wreg free
  2380                           
  2381                           ;screen_controls.c: 19: GLCD_GoTo(xMenuStart, setStartColors);
  2382  0000EC  0E04               	movlw	4
  2383  0000EE  0100               	movlb	0	; () banked
  2384  0000F0  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2385  0000F2  5036               	movf	_xMenuStart,w,c
  2386  0000F4  ECAB  F000         	call	_GLCD_GoTo
  2387                           
  2388                           ;screen_controls.c: 20: GLCD_WriteString("StartColor");
  2389  0000F8  0EC4               	movlw	low STR_3
  2390  0000FA  0100               	movlb	0	; () banked
  2391  0000FC  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2392  0000FE  0EFF               	movlw	high STR_3
  2393  000100  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2394  000102  ECDA  F003         	call	_GLCD_WriteString	;wreg free
  2395                           
  2396                           ;screen_controls.c: 22: GLCD_GoTo(xMenuStart, setFinishedColors);
  2397  000106  0E05               	movlw	5
  2398  000108  0100               	movlb	0	; () banked
  2399  00010A  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2400  00010C  5036               	movf	_xMenuStart,w,c
  2401  00010E  ECAB  F000         	call	_GLCD_GoTo
  2402                           
  2403                           ;screen_controls.c: 23: GLCD_WriteString("EndColor");
  2404  000112  0EED               	movlw	low STR_4
  2405  000114  0100               	movlb	0	; () banked
  2406  000116  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2407  000118  0EFF               	movlw	high STR_4
  2408  00011A  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2409  00011C  ECDA  F003         	call	_GLCD_WriteString	;wreg free
  2410                           
  2411                           ;screen_controls.c: 25: GLCD_GoTo(xMenuStart, setBacklightBrightness);
  2412  000120  0E06               	movlw	6
  2413  000122  0100               	movlb	0	; () banked
  2414  000124  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2415  000126  5036               	movf	_xMenuStart,w,c
  2416  000128  ECAB  F000         	call	_GLCD_GoTo
  2417                           
  2418                           ;screen_controls.c: 26: GLCD_WriteString("Backlight");
  2419  00012C  0EDA               	movlw	low STR_5
  2420  00012E  0100               	movlb	0	; () banked
  2421  000130  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2422  000132  0EFF               	movlw	high STR_5
  2423  000134  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2424  000136  ECDA  F003         	call	_GLCD_WriteString	;wreg free
  2425                           
  2426                           ;screen_controls.c: 28: GLCD_GoTo(xMenuStart, selectState);
  2427  00013A  0E07               	movlw	7
  2428  00013C  0100               	movlb	0	; () banked
  2429  00013E  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2430  000140  5036               	movf	_xMenuStart,w,c
  2431  000142  ECAB  F000         	call	_GLCD_GoTo
  2432                           
  2433                           ;screen_controls.c: 29: GLCD_WriteString("SelState");
  2434  000146  0EE4               	movlw	low STR_6
  2435  000148  0100               	movlb	0	; () banked
  2436  00014A  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2437  00014C  0EFF               	movlw	high STR_6
  2438  00014E  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2439  000150  ECDA  F003         	call	_GLCD_WriteString	;wreg free
  2440  000154  0012               	return		;funcret
  2441  000156                     __end_of_Initialize_Menus:
  2442                           	opt stack 0
  2443                           tblptru	equ	0xFF8
  2444                           tblptrh	equ	0xFF7
  2445                           tblptrl	equ	0xFF6
  2446                           tablat	equ	0xFF5
  2447                           intcon	equ	0xFF2
  2448                           postinc0	equ	0xFEE
  2449                           wreg	equ	0xFE8
  2450                           postdec1	equ	0xFE5
  2451                           fsr1l	equ	0xFE1
  2452                           status	equ	0xFD8
  2453                           
  2454 ;; *************** function _GLCD_ClearScreen *****************
  2455 ;; Defined at:
  2456 ;;		line 43 in file "ks0108lib/KS0108.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  j               1   14[BANK0 ] unsigned char 
  2461 ;;  i               1   13[BANK0 ] unsigned char 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2472 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2474 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2475 ;;Total ram usage:        2 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:   10
  2478 ;; This function calls:
  2479 ;;		_GLCD_GoTo
  2480 ;;		_GLCD_WriteData
  2481 ;; This function is called by:
  2482 ;;		_main
  2483 ;;		_Check_Buttons
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text17
  2488  000718                     __ptext17:
  2489                           	opt stack 0
  2490  000718                     _GLCD_ClearScreen:
  2491                           	opt stack 20
  2492                           
  2493                           ;KS0108.c: 45: unsigned char i, j;
  2494                           ;KS0108.c: 46: for(j = 0; j < 64/8; j++)
  2495                           
  2496                           ;incstack = 0
  2497  000718  0E00               	movlw	0
  2498  00071A  0100               	movlb	0	; () banked
  2499  00071C  6F6E               	movwf	GLCD_ClearScreen@j& (0+255),b
  2500  00071E                     l3174:
  2501                           
  2502                           ; BSR set to: 0
  2503  00071E  0E07               	movlw	7
  2504  000720  656E               	cpfsgt	GLCD_ClearScreen@j& (0+255),b
  2505  000722  D001               	goto	l447
  2506  000724  0012               	return	
  2507  000726                     l447:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;KS0108.c: 47: {
  2511                           ;KS0108.c: 48: GLCD_GoTo(0,j);
  2512                           
  2513                           ; BSR set to: 0
  2514  000726  C06E  F06A         	movff	GLCD_ClearScreen@j,GLCD_GoTo@y
  2515  00072A  0E00               	movlw	0
  2516  00072C  ECAB  F000         	call	_GLCD_GoTo
  2517                           
  2518                           ;KS0108.c: 49: for(i = 0; i < 128; i++)
  2519  000730  0E00               	movlw	0
  2520  000732  0100               	movlb	0	; () banked
  2521  000734  6F6D               	movwf	GLCD_ClearScreen@i& (0+255),b
  2522  000736                     l3182:
  2523                           
  2524                           ; BSR set to: 0
  2525  000736  0E7F               	movlw	127
  2526  000738  656D               	cpfsgt	GLCD_ClearScreen@i& (0+255),b
  2527  00073A  D001               	goto	l449
  2528  00073C  D006               	goto	u1700
  2529  00073E                     l449:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;KS0108.c: 50: GLCD_WriteData(0x00);
  2533                           
  2534                           ; BSR set to: 0
  2535  00073E  0E00               	movlw	0
  2536  000740  ECEE  F001         	call	_GLCD_WriteData
  2537  000744  0100               	movlb	0	; () banked
  2538  000746  2B6D               	incf	GLCD_ClearScreen@i& (0+255),f,b
  2539  000748  D7F6               	goto	l3182
  2540  00074A                     u1700:
  2541                           
  2542                           ; BSR set to: 0
  2543                           
  2544                           ; BSR set to: 0
  2545  00074A  2B6E               	incf	GLCD_ClearScreen@j& (0+255),f,b
  2546  00074C  D7E8               	goto	l3174
  2547  00074E                     __end_of_GLCD_ClearScreen:
  2548                           	opt stack 0
  2549                           tblptru	equ	0xFF8
  2550                           tblptrh	equ	0xFF7
  2551                           tblptrl	equ	0xFF6
  2552                           tablat	equ	0xFF5
  2553                           intcon	equ	0xFF2
  2554                           postinc0	equ	0xFEE
  2555                           wreg	equ	0xFE8
  2556                           postdec1	equ	0xFE5
  2557                           fsr1l	equ	0xFE1
  2558                           status	equ	0xFD8
  2559                           
  2560 ;; *************** function _Draw_runTime_Menu *****************
  2561 ;; Defined at:
  2562 ;;		line 81 in file "screen_controls.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:   11
  2583 ;; This function calls:
  2584 ;;		_GLCD_GoTo
  2585 ;;		_GLCD_WriteString
  2586 ;; This function is called by:
  2587 ;;		_Check_Buttons
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text18
  2592  000782                     __ptext18:
  2593                           	opt stack 0
  2594  000782                     _Draw_runTime_Menu:
  2595                           	opt stack 18
  2596                           
  2597                           ;screen_controls.c: 83: GLCD_GoTo(runTimeX, subMenuY);
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;incstack = 0
  2601  000782  C03A  F06A         	movff	_subMenuY,GLCD_GoTo@y
  2602  000786  5039               	movf	_runTimeX,w,c
  2603  000788  ECAB  F000         	call	_GLCD_GoTo
  2604                           
  2605                           ;screen_controls.c: 84: GLCD_WriteString("Run Time: ");
  2606  00078C  0EB9               	movlw	low STR_7
  2607  00078E  0100               	movlb	0	; () banked
  2608  000790  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2609  000792  0EFF               	movlw	high STR_7
  2610  000794  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2611  000796  ECDA  F003         	call	_GLCD_WriteString	;wreg free
  2612                           
  2613                           ;screen_controls.c: 86: GLCD_GoTo(timeAfterFinishX, subMenuY);
  2614  00079A  C03A  F06A         	movff	_subMenuY,GLCD_GoTo@y
  2615  00079E  5038               	movf	_timeAfterFinishX,w,c
  2616  0007A0  ECAB  F000         	call	_GLCD_GoTo
  2617                           
  2618                           ;screen_controls.c: 87: GLCD_WriteString("Time After: ");
  2619  0007A4  0EAC               	movlw	low STR_8
  2620  0007A6  0100               	movlb	0	; () banked
  2621  0007A8  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2622  0007AA  0EFF               	movlw	high STR_8
  2623  0007AC  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2624  0007AE  ECDA  F003         	call	_GLCD_WriteString	;wreg free
  2625  0007B2  0012               	return		;funcret
  2626  0007B4                     __end_of_Draw_runTime_Menu:
  2627                           	opt stack 0
  2628                           tblptru	equ	0xFF8
  2629                           tblptrh	equ	0xFF7
  2630                           tblptrl	equ	0xFF6
  2631                           tablat	equ	0xFF5
  2632                           intcon	equ	0xFF2
  2633                           postinc0	equ	0xFEE
  2634                           wreg	equ	0xFE8
  2635                           postdec1	equ	0xFE5
  2636                           fsr1l	equ	0xFE1
  2637                           status	equ	0xFD8
  2638                           
  2639 ;; *************** function _GLCD_WriteString *****************
  2640 ;; Defined at:
  2641 ;;		line 70 in file "ks0108lib/KS0108.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  stringToWrit    2   12[BANK0 ] PTR unsigned char 
  2644 ;;		 -> STR_8(13), STR_7(11), STR_6(9), STR_5(10), 
  2645 ;;		 -> STR_4(9), STR_3(11), STR_2(11), STR_1(8), 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;		None
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2657 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2660 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2661 ;;Total ram usage:        2 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; Hardware stack levels required when called:   10
  2664 ;; This function calls:
  2665 ;;		_GLCD_WriteChar
  2666 ;; This function is called by:
  2667 ;;		_Initialize_Menus
  2668 ;;		_Draw_runTime_Menu
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text19
  2673  0007B4                     __ptext19:
  2674                           	opt stack 0
  2675  0007B4                     _GLCD_WriteString:
  2676                           	opt stack 19
  2677                           
  2678                           ;KS0108.c: 72: while(*stringToWrite)
  2679                           
  2680                           ;incstack = 0
  2681  0007B4  D00C               	goto	l459
  2682  0007B6                     
  2683                           ;KS0108.c: 73: GLCD_WriteChar(*stringToWrite++);
  2684  0007B6  C06C  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  2685  0007BA  C06D  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  2686  0007BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2687  0007BE  6AF8               	clrf	tblptru,c
  2688  0007C0                     	endif
  2689  0007C0                     	if	0	;tblptru may be non-zero
  2690  0007C0                     	endif
  2691  0007C0  0008               	tblrd		*
  2692  0007C2  50F5               	movf	tablat,w,c
  2693  0007C4  EC8C  F002         	call	_GLCD_WriteChar
  2694  0007C8  0100               	movlb	0	; () banked
  2695  0007CA  4B6C               	infsnz	GLCD_WriteString@stringToWrite& (0+255),f,b
  2696  0007CC  2B6D               	incf	(GLCD_WriteString@stringToWrite+1)& (0+255),f,b
  2697  0007CE                     l459:
  2698                           
  2699                           ; BSR set to: 0
  2700  0007CE  C06C  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  2701  0007D2  C06D  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  2702  0007D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2703  0007D6  6AF8               	clrf	tblptru,c
  2704  0007D8                     	endif
  2705  0007D8                     	if	0	;tblptru may be non-zero
  2706  0007D8                     	endif
  2707  0007D8  0008               	tblrd		*
  2708  0007DA  50F5               	movf	tablat,w,c
  2709  0007DC  0900               	iorlw	0
  2710  0007DE  B4D8               	btfsc	status,2,c
  2711  0007E0  0012               	return	
  2712  0007E2  D7E9               	goto	l460
  2713  0007E4                     __end_of_GLCD_WriteString:
  2714                           	opt stack 0
  2715                           tblptru	equ	0xFF8
  2716                           tblptrh	equ	0xFF7
  2717                           tblptrl	equ	0xFF6
  2718                           tablat	equ	0xFF5
  2719                           intcon	equ	0xFF2
  2720                           postinc0	equ	0xFEE
  2721                           wreg	equ	0xFE8
  2722                           postdec1	equ	0xFE5
  2723                           fsr1l	equ	0xFE1
  2724                           status	equ	0xFD8
  2725                           
  2726 ;; *************** function _GLCD_WriteChar *****************
  2727 ;; Defined at:
  2728 ;;		line 56 in file "ks0108lib/KS0108.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  charToWrite     1    wreg     unsigned char 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  charToWrite     1    9[BANK0 ] unsigned char 
  2733 ;;  i               2   10[BANK0 ] int 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2744 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2746 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2747 ;;Total ram usage:        3 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    9
  2750 ;; This function calls:
  2751 ;;		_GLCD_WriteData
  2752 ;; This function is called by:
  2753 ;;		_GLCD_WriteString
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text20
  2758  000518                     __ptext20:
  2759                           	opt stack 0
  2760  000518                     _GLCD_WriteChar:
  2761                           	opt stack 19
  2762                           
  2763                           ;incstack = 0
  2764                           ;GLCD_WriteChar@charToWrite stored from wreg
  2765  000518  0100               	movlb	0	; () banked
  2766  00051A  6F69               	movwf	GLCD_WriteChar@charToWrite& (0+255),b
  2767                           
  2768                           ;KS0108.c: 58: int i;
  2769                           ;KS0108.c: 59: charToWrite -= 32;
  2770  00051C  0E20               	movlw	32
  2771  00051E  0100               	movlb	0	; () banked
  2772  000520  5F69               	subwf	GLCD_WriteChar@charToWrite& (0+255),f,b
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
  2776  000522  0E00               	movlw	0
  2777  000524  6F6B               	movwf	(GLCD_WriteChar@i+1)& (0+255),b
  2778  000526  0E00               	movlw	0
  2779  000528  6F6A               	movwf	GLCD_WriteChar@i& (0+255),b
  2780  00052A                     l3088:
  2781                           
  2782                           ; BSR set to: 0
  2783  00052A  BF6B               	btfsc	(GLCD_WriteChar@i+1)& (0+255),7,b
  2784  00052C  D006               	goto	l454
  2785  00052E  516B               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  2786  000530  E11B               	bnz	l3098
  2787  000532  0E05               	movlw	5
  2788  000534  5D6A               	subwf	GLCD_WriteChar@i& (0+255),w,b
  2789  000536  B0D8               	btfsc	status,0,c
  2790  000538  D017               	goto	u1610
  2791  00053A                     l454:
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;KS0108.c: 61: {
  2795                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
  2796                           
  2797                           ; BSR set to: 0
  2798  00053A  5169               	movf	GLCD_WriteChar@charToWrite& (0+255),w,b
  2799  00053C  0D05               	mullw	5
  2800  00053E  516A               	movf	GLCD_WriteChar@i& (0+255),w,b
  2801  000540  26F3               	addwf	prodl,f,c
  2802  000542  516B               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  2803  000544  22F4               	addwfc	prodh,f,c
  2804  000546  0ECB               	movlw	low _font5x8
  2805  000548  24F3               	addwf	prodl,w,c
  2806  00054A  6EF6               	movwf	tblptrl,c
  2807  00054C  0EFD               	movlw	high _font5x8
  2808  00054E  20F4               	addwfc	prodh,w,c
  2809  000550  6EF7               	movwf	tblptrh,c
  2810  000552                     	if	1	;There are 3 active tblptr bytes
  2811  000552  6AF8               	clrf	tblptru,c
  2812  000554  0E00               	movlw	low (__mediumconst shr (0+16))
  2813  000556  22F8               	addwfc	tblptru,f,c
  2814  000558                     	endif
  2815  000558  0008               	tblrd		*
  2816  00055A  50F5               	movf	tablat,w,c
  2817  00055C  ECEE  F001         	call	_GLCD_WriteData
  2818  000560  0100               	movlb	0	; () banked
  2819  000562  4B6A               	infsnz	GLCD_WriteChar@i& (0+255),f,b
  2820  000564  2B6B               	incf	(GLCD_WriteChar@i+1)& (0+255),f,b
  2821  000566  D7E1               	goto	l3088
  2822  000568                     u1610:
  2823  000568                     l3098:
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;KS0108.c: 64: }
  2827                           ;KS0108.c: 65: GLCD_WriteData(0x00);
  2828  000568  0E00               	movlw	0
  2829  00056A  ECEE  F001         	call	_GLCD_WriteData
  2830  00056E  0012               	return		;funcret
  2831  000570                     __end_of_GLCD_WriteChar:
  2832                           	opt stack 0
  2833                           tblptru	equ	0xFF8
  2834                           tblptrh	equ	0xFF7
  2835                           tblptrl	equ	0xFF6
  2836                           tablat	equ	0xFF5
  2837                           prodh	equ	0xFF4
  2838                           prodl	equ	0xFF3
  2839                           intcon	equ	0xFF2
  2840                           postinc0	equ	0xFEE
  2841                           wreg	equ	0xFE8
  2842                           postdec1	equ	0xFE5
  2843                           fsr1l	equ	0xFE1
  2844                           status	equ	0xFD8
  2845                           
  2846 ;; *************** function _Draw_Arrow *****************
  2847 ;; Defined at:
  2848 ;;		line 34 in file "screen_controls.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, status,0, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2866 ;;Total ram usage:        0 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:   11
  2869 ;; This function calls:
  2870 ;;		_Clear_Arrow_Column
  2871 ;;		_Clear_runTime_Arrows
  2872 ;;		_Draw_runTime_Arrow
  2873 ;;		_GLCD_GoTo
  2874 ;;		_Make_Arrow
  2875 ;; This function is called by:
  2876 ;;		_main
  2877 ;;		_Check_Buttons
  2878 ;;		_Main_Menu_Function
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text21
  2883  0009B2                     __ptext21:
  2884                           	opt stack 0
  2885  0009B2                     _Draw_Arrow:
  2886                           	opt stack 19
  2887                           
  2888                           ;screen_controls.c: 50: Clear_Arrow_Column();
  2889                           
  2890                           ;screen_controls.c: 49: default:
  2891                           
  2892                           ;screen_controls.c: 47: Draw_runTime_Arrow();
  2893                           
  2894                           ;screen_controls.c: 46: Clear_runTime_Arrows();
  2895                           
  2896                           ;screen_controls.c: 45: runTime:
  2897                           
  2898                           ;screen_controls.c: 43: Make_Arrow();
  2899                           
  2900                           ;screen_controls.c: 42: GLCD_GoTo(0, mainState);
  2901                           
  2902                           ;screen_controls.c: 41: Clear_Arrow_Column();
  2903                           
  2904                           ;screen_controls.c: 39: {
  2905                           ;screen_controls.c: 40: mainMenu:
  2906                           
  2907                           ;screen_controls.c: 38: switch(currentContext)
  2908                           
  2909                           ;incstack = 0
  2910  0009B2  EC5D  F002         	call	_Clear_Arrow_Column	;wreg free
  2911                           
  2912                           ;screen_controls.c: 51: GLCD_GoTo(0, mainState);
  2913  0009B6  C034  F06A         	movff	_mainState,GLCD_GoTo@y
  2914  0009BA  0E00               	movlw	0
  2915  0009BC  ECAB  F000         	call	_GLCD_GoTo
  2916                           
  2917                           ;screen_controls.c: 52: Make_Arrow();
  2918  0009C0  ECED  F004         	call	_Make_Arrow	;wreg free
  2919                           
  2920                           ;screen_controls.c: 53: }
  2921  0009C4  0012               	return	
  2922  0009C6                     __end_of_Draw_Arrow:
  2923                           	opt stack 0
  2924                           tblptru	equ	0xFF8
  2925                           tblptrh	equ	0xFF7
  2926                           tblptrl	equ	0xFF6
  2927                           tablat	equ	0xFF5
  2928                           prodh	equ	0xFF4
  2929                           prodl	equ	0xFF3
  2930                           intcon	equ	0xFF2
  2931                           postinc0	equ	0xFEE
  2932                           wreg	equ	0xFE8
  2933                           postdec1	equ	0xFE5
  2934                           fsr1l	equ	0xFE1
  2935                           status	equ	0xFD8
  2936                           
  2937 ;; *************** function _Draw_runTime_Arrow *****************
  2938 ;; Defined at:
  2939 ;;		line 109 in file "screen_controls.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2957 ;;Total ram usage:        0 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:   10
  2960 ;; This function calls:
  2961 ;;		_GLCD_GoTo
  2962 ;;		_Make_Arrow
  2963 ;; This function is called by:
  2964 ;;		_Draw_Arrow
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text22
  2969  0009C6                     __ptext22:
  2970                           	opt stack 0
  2971  0009C6                     _Draw_runTime_Arrow:
  2972                           	opt stack 19
  2973                           
  2974                           ;screen_controls.c: 122: GLCD_GoTo((runTimeX - ARROW_SIZE), subMenuY);
  2975                           
  2976                           ;screen_controls.c: 121: default:
  2977                           
  2978                           ;screen_controls.c: 119: Make_Arrow();
  2979                           
  2980                           ;screen_controls.c: 118: GLCD_GoTo((timeAfterFinishX - ARROW_SIZE), subMenuY);
  2981                           
  2982                           ;screen_controls.c: 117: timeAfterFinish:
  2983                           
  2984                           ;screen_controls.c: 115: Make_Arrow();
  2985                           
  2986                           ;screen_controls.c: 114: GLCD_GoTo((runTimeX - ARROW_SIZE), subMenuY);
  2987                           
  2988                           ;screen_controls.c: 112: {
  2989                           ;screen_controls.c: 113: runTime:
  2990                           
  2991                           ;screen_controls.c: 111: switch(runTimeContext)
  2992                           
  2993                           ;incstack = 0
  2994  0009C6  C03A  F06A         	movff	_subMenuY,GLCD_GoTo@y
  2995  0009CA  5037               	movf	_ARROW_SIZE,w,c
  2996  0009CC  0800               	sublw	0
  2997  0009CE  2439               	addwf	_runTimeX,w,c
  2998  0009D0  ECAB  F000         	call	_GLCD_GoTo
  2999                           
  3000                           ;screen_controls.c: 123: Make_Arrow();
  3001  0009D4  ECED  F004         	call	_Make_Arrow	;wreg free
  3002                           
  3003                           ;screen_controls.c: 126: }
  3004  0009D8  0012               	return	
  3005  0009DA                     __end_of_Draw_runTime_Arrow:
  3006                           	opt stack 0
  3007                           tblptru	equ	0xFF8
  3008                           tblptrh	equ	0xFF7
  3009                           tblptrl	equ	0xFF6
  3010                           tablat	equ	0xFF5
  3011                           prodh	equ	0xFF4
  3012                           prodl	equ	0xFF3
  3013                           intcon	equ	0xFF2
  3014                           postinc0	equ	0xFEE
  3015                           wreg	equ	0xFE8
  3016                           postdec1	equ	0xFE5
  3017                           fsr1l	equ	0xFE1
  3018                           status	equ	0xFD8
  3019                           
  3020 ;; *************** function _Make_Arrow *****************
  3021 ;; Defined at:
  3022 ;;		line 58 in file "screen_controls.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3040 ;;Total ram usage:        0 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    9
  3043 ;; This function calls:
  3044 ;;		_GLCD_WriteData
  3045 ;; This function is called by:
  3046 ;;		_Draw_Arrow
  3047 ;;		_Draw_runTime_Arrow
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text23
  3052  0009DA                     __ptext23:
  3053                           	opt stack 0
  3054  0009DA                     _Make_Arrow:
  3055                           	opt stack 20
  3056                           
  3057                           ;screen_controls.c: 60: GLCD_WriteData(0x7E);
  3058                           
  3059                           ;incstack = 0
  3060  0009DA  0E7E               	movlw	126
  3061  0009DC  ECEE  F001         	call	_GLCD_WriteData
  3062                           
  3063                           ;screen_controls.c: 61: GLCD_WriteData(0x3C);
  3064  0009E0  0E3C               	movlw	60
  3065  0009E2  ECEE  F001         	call	_GLCD_WriteData
  3066                           
  3067                           ;screen_controls.c: 62: GLCD_WriteData(0x18);
  3068  0009E6  0E18               	movlw	24
  3069  0009E8  ECEE  F001         	call	_GLCD_WriteData
  3070  0009EC  0012               	return		;funcret
  3071  0009EE                     __end_of_Make_Arrow:
  3072                           	opt stack 0
  3073                           tblptru	equ	0xFF8
  3074                           tblptrh	equ	0xFF7
  3075                           tblptrl	equ	0xFF6
  3076                           tablat	equ	0xFF5
  3077                           prodh	equ	0xFF4
  3078                           prodl	equ	0xFF3
  3079                           intcon	equ	0xFF2
  3080                           postinc0	equ	0xFEE
  3081                           wreg	equ	0xFE8
  3082                           postdec1	equ	0xFE5
  3083                           fsr1l	equ	0xFE1
  3084                           status	equ	0xFD8
  3085                           
  3086 ;; *************** function _Clear_runTime_Arrows *****************
  3087 ;; Defined at:
  3088 ;;		line 90 in file "screen_controls.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  i               1   13[BANK0 ] unsigned char 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3105 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3106 ;;Total ram usage:        1 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:   10
  3109 ;; This function calls:
  3110 ;;		_GLCD_GoTo
  3111 ;;		_GLCD_WriteData
  3112 ;; This function is called by:
  3113 ;;		_Draw_Arrow
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text24
  3118  000570                     __ptext24:
  3119                           	opt stack 0
  3120  000570                     _Clear_runTime_Arrows:
  3121                           	opt stack 19
  3122                           
  3123                           ;screen_controls.c: 92: unsigned char i=0;
  3124                           
  3125                           ;incstack = 0
  3126  000570  0E00               	movlw	0
  3127  000572  0100               	movlb	0	; () banked
  3128  000574  6F6D               	movwf	Clear_runTime_Arrows@i& (0+255),b
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;screen_controls.c: 94: GLCD_GoTo((runTimeX - ARROW_SIZE), subMenuY);
  3132  000576  C03A  F06A         	movff	_subMenuY,GLCD_GoTo@y
  3133  00057A  5037               	movf	_ARROW_SIZE,w,c
  3134  00057C  0800               	sublw	0
  3135  00057E  2439               	addwf	_runTimeX,w,c
  3136  000580  ECAB  F000         	call	_GLCD_GoTo
  3137                           
  3138                           ;screen_controls.c: 96: for(i=0; i<ARROW_SIZE; i++)
  3139  000584  0E00               	movlw	0
  3140  000586  0100               	movlb	0	; () banked
  3141  000588  6F6D               	movwf	Clear_runTime_Arrows@i& (0+255),b
  3142  00058A  D005               	goto	l592
  3143  00058C                     
  3144                           ; BSR set to: 0
  3145                           ;screen_controls.c: 97: {
  3146                           ;screen_controls.c: 98: GLCD_WriteData(0x00);
  3147                           
  3148                           ; BSR set to: 0
  3149  00058C  0E00               	movlw	0
  3150  00058E  ECEE  F001         	call	_GLCD_WriteData
  3151  000592  0100               	movlb	0	; () banked
  3152  000594  2B6D               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  3153  000596                     l592:
  3154                           
  3155                           ; BSR set to: 0
  3156                           
  3157                           ; BSR set to: 0
  3158  000596  5037               	movf	_ARROW_SIZE,w,c
  3159  000598  5D6D               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  3160  00059A  A0D8               	btfss	status,0,c
  3161  00059C  D7F7               	goto	l593
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;screen_controls.c: 99: }
  3165                           ;screen_controls.c: 101: GLCD_GoTo((timeAfterFinishX - ARROW_SIZE), subMenuY);
  3166                           
  3167                           ; BSR set to: 0
  3168  00059E  C03A  F06A         	movff	_subMenuY,GLCD_GoTo@y
  3169  0005A2  5037               	movf	_ARROW_SIZE,w,c
  3170  0005A4  0800               	sublw	0
  3171  0005A6  2438               	addwf	_timeAfterFinishX,w,c
  3172  0005A8  ECAB  F000         	call	_GLCD_GoTo
  3173                           
  3174                           ;screen_controls.c: 102: for(i=0; i<ARROW_SIZE; i++)
  3175  0005AC  0E00               	movlw	0
  3176  0005AE  0100               	movlb	0	; () banked
  3177  0005B0  6F6D               	movwf	Clear_runTime_Arrows@i& (0+255),b
  3178  0005B2  D005               	goto	l595
  3179  0005B4                     
  3180                           ; BSR set to: 0
  3181                           ;screen_controls.c: 103: {
  3182                           ;screen_controls.c: 104: GLCD_WriteData(0x00);
  3183                           
  3184                           ; BSR set to: 0
  3185  0005B4  0E00               	movlw	0
  3186  0005B6  ECEE  F001         	call	_GLCD_WriteData
  3187  0005BA  0100               	movlb	0	; () banked
  3188  0005BC  2B6D               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  3189  0005BE                     l595:
  3190                           
  3191                           ; BSR set to: 0
  3192                           
  3193                           ; BSR set to: 0
  3194  0005BE  5037               	movf	_ARROW_SIZE,w,c
  3195  0005C0  5D6D               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  3196  0005C2  B0D8               	btfsc	status,0,c
  3197  0005C4  0012               	return	
  3198  0005C6  D7F6               	goto	l596
  3199  0005C8                     __end_of_Clear_runTime_Arrows:
  3200                           	opt stack 0
  3201                           tblptru	equ	0xFF8
  3202                           tblptrh	equ	0xFF7
  3203                           tblptrl	equ	0xFF6
  3204                           tablat	equ	0xFF5
  3205                           prodh	equ	0xFF4
  3206                           prodl	equ	0xFF3
  3207                           intcon	equ	0xFF2
  3208                           postinc0	equ	0xFEE
  3209                           wreg	equ	0xFE8
  3210                           postdec1	equ	0xFE5
  3211                           fsr1l	equ	0xFE1
  3212                           status	equ	0xFD8
  3213                           
  3214 ;; *************** function _Clear_Arrow_Column *****************
  3215 ;; Defined at:
  3216 ;;		line 65 in file "screen_controls.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  i               1   21[BANK0 ] unsigned char 
  3221 ;;  j               1   20[BANK0 ] unsigned char 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2, status,0, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3232 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3233 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3234 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3235 ;;Total ram usage:        9 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:   10
  3238 ;; This function calls:
  3239 ;;		_GLCD_GoTo
  3240 ;;		_GLCD_WriteData
  3241 ;; This function is called by:
  3242 ;;		_Draw_Arrow
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text25
  3247  0004BA                     __ptext25:
  3248                           	opt stack 0
  3249  0004BA                     _Clear_Arrow_Column:
  3250                           	opt stack 19
  3251                           
  3252                           ;screen_controls.c: 67: unsigned char i, j;
  3253                           ;screen_controls.c: 69: for(i = 0; i < 64/8; i++)
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;incstack = 0
  3257  0004BA  0E00               	movlw	0
  3258  0004BC  0100               	movlb	0	; () banked
  3259  0004BE  6F75               	movwf	Clear_Arrow_Column@i& (0+255),b
  3260  0004C0                     l3112:
  3261                           
  3262                           ; BSR set to: 0
  3263  0004C0  0E07               	movlw	7
  3264  0004C2  6575               	cpfsgt	Clear_Arrow_Column@i& (0+255),b
  3265  0004C4  D001               	goto	l581
  3266  0004C6  0012               	return	
  3267  0004C8                     l581:
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;screen_controls.c: 70: {
  3271                           ;screen_controls.c: 71: GLCD_GoTo(0, i);
  3272                           
  3273                           ; BSR set to: 0
  3274  0004C8  C075  F06A         	movff	Clear_Arrow_Column@i,GLCD_GoTo@y
  3275  0004CC  0E00               	movlw	0
  3276  0004CE  ECAB  F000         	call	_GLCD_GoTo
  3277                           
  3278                           ;screen_controls.c: 73: for(j = 0; j < (xMenuStart - 1); j++)
  3279  0004D2  0E00               	movlw	0
  3280  0004D4  0100               	movlb	0	; () banked
  3281  0004D6  6F74               	movwf	Clear_Arrow_Column@j& (0+255),b
  3282  0004D8  D005               	goto	l583
  3283  0004DA                     
  3284                           ; BSR set to: 0
  3285                           ;screen_controls.c: 74: {
  3286                           ;screen_controls.c: 75: GLCD_WriteData(0x00);
  3287                           
  3288                           ; BSR set to: 0
  3289  0004DA  0E00               	movlw	0
  3290  0004DC  ECEE  F001         	call	_GLCD_WriteData
  3291  0004E0  0100               	movlb	0	; () banked
  3292  0004E2  2B74               	incf	Clear_Arrow_Column@j& (0+255),f,b
  3293  0004E4                     l583:
  3294                           
  3295                           ; BSR set to: 0
  3296                           
  3297                           ; BSR set to: 0
  3298  0004E4  0EFF               	movlw	255
  3299  0004E6  6F6D               	movwf	??_Clear_Arrow_Column& (0+255),b
  3300  0004E8  0EFF               	movlw	255
  3301  0004EA  6F6E               	movwf	(??_Clear_Arrow_Column+1)& (0+255),b
  3302  0004EC  5036               	movf	_xMenuStart,w,c
  3303  0004EE  6F6F               	movwf	(??_Clear_Arrow_Column+2)& (0+255),b
  3304  0004F0  6B70               	clrf	(??_Clear_Arrow_Column+3)& (0+255),b
  3305  0004F2  516D               	movf	??_Clear_Arrow_Column& (0+255),w,b
  3306  0004F4  276F               	addwf	(??_Clear_Arrow_Column+2)& (0+255),f,b
  3307  0004F6  516E               	movf	(??_Clear_Arrow_Column+1)& (0+255),w,b
  3308  0004F8  2370               	addwfc	(??_Clear_Arrow_Column+3)& (0+255),f,b
  3309  0004FA  5174               	movf	Clear_Arrow_Column@j& (0+255),w,b
  3310  0004FC  6F71               	movwf	(??_Clear_Arrow_Column+4)& (0+255),b
  3311  0004FE  6B72               	clrf	(??_Clear_Arrow_Column+5)& (0+255),b
  3312  000500  516F               	movf	(??_Clear_Arrow_Column+2)& (0+255),w,b
  3313  000502  5D71               	subwf	(??_Clear_Arrow_Column+4)& (0+255),w,b
  3314  000504  5172               	movf	(??_Clear_Arrow_Column+5)& (0+255),w,b
  3315  000506  0A80               	xorlw	128
  3316  000508  6F73               	movwf	(??_Clear_Arrow_Column+6)& (0+255),b
  3317  00050A  5170               	movf	(??_Clear_Arrow_Column+3)& (0+255),w,b
  3318  00050C  0A80               	xorlw	128
  3319  00050E  5973               	subwfb	(??_Clear_Arrow_Column+6)& (0+255),w,b
  3320  000510  A0D8               	btfss	status,0,c
  3321  000512  D7E3               	goto	l584
  3322                           
  3323                           ; BSR set to: 0
  3324                           
  3325                           ; BSR set to: 0
  3326  000514  2B75               	incf	Clear_Arrow_Column@i& (0+255),f,b
  3327  000516  D7D4               	goto	l3112
  3328  000518                     __end_of_Clear_Arrow_Column:
  3329                           	opt stack 0
  3330                           tblptru	equ	0xFF8
  3331                           tblptrh	equ	0xFF7
  3332                           tblptrl	equ	0xFF6
  3333                           tablat	equ	0xFF5
  3334                           prodh	equ	0xFF4
  3335                           prodl	equ	0xFF3
  3336                           intcon	equ	0xFF2
  3337                           postinc0	equ	0xFEE
  3338                           wreg	equ	0xFE8
  3339                           postdec1	equ	0xFE5
  3340                           fsr1l	equ	0xFE1
  3341                           status	equ	0xFD8
  3342                           
  3343 ;; *************** function _GLCD_WriteData *****************
  3344 ;; Defined at:
  3345 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  dataToWrite     1    wreg     unsigned char 
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;  dataToWrite     1    8[BANK0 ] unsigned char 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2, status,0, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3360 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3362 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3363 ;;Total ram usage:        2 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    8
  3366 ;; This function calls:
  3367 ;;		_GLCD_Delay
  3368 ;;		_GLCD_DisableController
  3369 ;;		_GLCD_EnableController
  3370 ;;		_GLCD_ReadStatus
  3371 ;;		___awdiv
  3372 ;; This function is called by:
  3373 ;;		_GLCD_ClearScreen
  3374 ;;		_GLCD_WriteChar
  3375 ;;		_Make_Arrow
  3376 ;;		_Clear_Arrow_Column
  3377 ;;		_Clear_runTime_Arrows
  3378 ;;		_GLCD_SetPixel
  3379 ;;		_GLCD_Bitmap
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text26
  3384  0003DC                     __ptext26:
  3385                           	opt stack 0
  3386  0003DC                     _GLCD_WriteData:
  3387                           	opt stack 19
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;incstack = 0
  3391                           ;GLCD_WriteData@dataToWrite stored from wreg
  3392  0003DC  0100               	movlb	0	; () banked
  3393  0003DE  6F68               	movwf	GLCD_WriteData@dataToWrite& (0+255),b
  3394  0003E0                     
  3395                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  3396  0003E0  C030  F060         	movff	_screen_x,___awdiv@dividend
  3397  0003E4  0100               	movlb	0	; () banked
  3398  0003E6  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3399  0003E8  0E00               	movlw	0
  3400  0003EA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3401  0003EC  0E40               	movlw	64
  3402  0003EE  6F62               	movwf	___awdiv@divisor& (0+255),b
  3403  0003F0  ECEF  F000         	call	___awdiv	;wreg free
  3404  0003F4  0100               	movlb	0	; () banked
  3405  0003F6  5160               	movf	?___awdiv& (0+255),w,b
  3406  0003F8  EC0A  F004         	call	_GLCD_ReadStatus
  3407  0003FC  6E26               	movwf	??_GLCD_WriteData& (0+255),c
  3408  0003FE  BE26               	btfsc	??_GLCD_WriteData,7,c
  3409  000400  D7EF               	goto	l3042
  3410                           
  3411                           ;KS0108-PIC18.c: 116: TRISC = 0x00;
  3412  000402  0E00               	movlw	0
  3413  000404  6E94               	movwf	3988,c	;volatile
  3414                           
  3415                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
  3416  000406  9280               	bcf	3968,1,c	;volatile
  3417                           
  3418                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
  3419  000408  8480               	bsf	3968,2,c	;volatile
  3420                           
  3421                           ;KS0108-PIC18.c: 119: PORTC = dataToWrite;
  3422  00040A  C068  FF82         	movff	GLCD_WriteData@dataToWrite,3970	;volatile
  3423                           
  3424                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
  3425  00040E  C030  F060         	movff	_screen_x,___awdiv@dividend
  3426  000412  0100               	movlb	0	; () banked
  3427  000414  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3428  000416  0E00               	movlw	0
  3429  000418  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3430  00041A  0E40               	movlw	64
  3431  00041C  6F62               	movwf	___awdiv@divisor& (0+255),b
  3432  00041E  ECEF  F000         	call	___awdiv	;wreg free
  3433  000422  0100               	movlb	0	; () banked
  3434  000424  5160               	movf	?___awdiv& (0+255),w,b
  3435  000426  EC34  F004         	call	_GLCD_EnableController
  3436                           
  3437                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
  3438  00042A  8680               	bsf	3968,3,c	;volatile
  3439                           
  3440                           ;KS0108-PIC18.c: 122: GLCD_Delay();
  3441  00042C  EC1D  F005         	call	_GLCD_Delay	;wreg free
  3442                           
  3443                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
  3444  000430  9680               	bcf	3968,3,c	;volatile
  3445                           
  3446                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
  3447  000432  C030  F060         	movff	_screen_x,___awdiv@dividend
  3448  000436  0100               	movlb	0	; () banked
  3449  000438  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3450  00043A  0E00               	movlw	0
  3451  00043C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3452  00043E  0E40               	movlw	64
  3453  000440  6F62               	movwf	___awdiv@divisor& (0+255),b
  3454  000442  ECEF  F000         	call	___awdiv	;wreg free
  3455  000446  0100               	movlb	0	; () banked
  3456  000448  5160               	movf	?___awdiv& (0+255),w,b
  3457  00044A  EC47  F004         	call	_GLCD_DisableController
  3458                           
  3459                           ;KS0108-PIC18.c: 125: screen_x++;
  3460  00044E  2A30               	incf	_screen_x,f,c
  3461  000450  0012               	return		;funcret
  3462  000452                     __end_of_GLCD_WriteData:
  3463                           	opt stack 0
  3464                           tblptru	equ	0xFF8
  3465                           tblptrh	equ	0xFF7
  3466                           tblptrl	equ	0xFF6
  3467                           tablat	equ	0xFF5
  3468                           prodh	equ	0xFF4
  3469                           prodl	equ	0xFF3
  3470                           intcon	equ	0xFF2
  3471                           postinc0	equ	0xFEE
  3472                           wreg	equ	0xFE8
  3473                           postdec1	equ	0xFE5
  3474                           fsr1l	equ	0xFE1
  3475                           status	equ	0xFD8
  3476                           
  3477 ;; *************** function _GLCD_GoTo *****************
  3478 ;; Defined at:
  3479 ;;		line 25 in file "ks0108lib/KS0108.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  x               1    wreg     unsigned char 
  3482 ;;  y               1   10[BANK0 ] unsigned char 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  x               1   11[BANK0 ] unsigned char 
  3485 ;;  i               1   12[BANK0 ] unsigned char 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      void 
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3495 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3496 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3498 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3499 ;;Total ram usage:        3 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    9
  3502 ;; This function calls:
  3503 ;;		_GLCD_WriteCommand
  3504 ;;		___awdiv
  3505 ;; This function is called by:
  3506 ;;		_GLCD_ClearScreen
  3507 ;;		_Initialize_Menus
  3508 ;;		_Draw_Arrow
  3509 ;;		_Clear_Arrow_Column
  3510 ;;		_Draw_runTime_Menu
  3511 ;;		_Clear_runTime_Arrows
  3512 ;;		_Draw_runTime_Arrow
  3513 ;;		_GLCD_SetPixel
  3514 ;;		_GLCD_Bitmap
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text27
  3519  000156                     __ptext27:
  3520                           	opt stack 0
  3521  000156                     _GLCD_GoTo:
  3522                           	opt stack 20
  3523                           
  3524                           ;incstack = 0
  3525                           ;GLCD_GoTo@x stored from wreg
  3526  000156  0100               	movlb	0	; () banked
  3527  000158  6F6B               	movwf	GLCD_GoTo@x& (0+255),b
  3528                           
  3529                           ;KS0108.c: 27: unsigned char i;
  3530                           ;KS0108.c: 28: screen_x = x;
  3531  00015A  C06B  F030         	movff	GLCD_GoTo@x,_screen_x
  3532                           
  3533                           ;KS0108.c: 29: screen_y = y;
  3534  00015E  C06A  F02F         	movff	GLCD_GoTo@y,_screen_y
  3535                           
  3536                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
  3537  000162  0E00               	movlw	0
  3538  000164  0100               	movlb	0	; () banked
  3539  000166  6F6C               	movwf	GLCD_GoTo@i& (0+255),b
  3540  000168                     l3072:
  3541                           
  3542                           ; BSR set to: 0
  3543  000168  0E01               	movlw	1
  3544  00016A  656C               	cpfsgt	GLCD_GoTo@i& (0+255),b
  3545  00016C  D001               	goto	l442
  3546  00016E  D014               	goto	u1590
  3547  000170                     l442:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;KS0108.c: 32: {
  3551                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
  3552                           
  3553                           ; BSR set to: 0
  3554  000170  C06C  F026         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  3555  000174  0E40               	movlw	64
  3556  000176  ECA7  F003         	call	_GLCD_WriteCommand
  3557                           
  3558                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
  3559  00017A  C06C  F026         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  3560  00017E  0100               	movlb	0	; () banked
  3561  000180  516A               	movf	GLCD_GoTo@y& (0+255),w,b
  3562  000182  09B8               	iorlw	184
  3563  000184  ECA7  F003         	call	_GLCD_WriteCommand
  3564                           
  3565                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
  3566  000188  C06C  F026         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  3567  00018C  0EC0               	movlw	192
  3568  00018E  ECA7  F003         	call	_GLCD_WriteCommand
  3569  000192  0100               	movlb	0	; () banked
  3570  000194  2B6C               	incf	GLCD_GoTo@i& (0+255),f,b
  3571  000196  D7E8               	goto	l3072
  3572  000198                     u1590:
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;KS0108.c: 36: }
  3576                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
  3577                           
  3578                           ; BSR set to: 0
  3579  000198  C06B  F060         	movff	GLCD_GoTo@x,___awdiv@dividend
  3580  00019C  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3581  00019E  0E00               	movlw	0
  3582  0001A0  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3583  0001A2  0E40               	movlw	64
  3584  0001A4  6F62               	movwf	___awdiv@divisor& (0+255),b
  3585  0001A6  ECEF  F000         	call	___awdiv	;wreg free
  3586  0001AA  0100               	movlb	0	; () banked
  3587  0001AC  5160               	movf	?___awdiv& (0+255),w,b
  3588  0001AE  6E26               	movwf	GLCD_WriteCommand@controller,c
  3589  0001B0  516B               	movf	GLCD_GoTo@x& (0+255),w,b
  3590  0001B2  0B3F               	andlw	63
  3591  0001B4  0940               	iorlw	64
  3592  0001B6  ECA7  F003         	call	_GLCD_WriteCommand
  3593                           
  3594                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
  3595  0001BA  C06B  F060         	movff	GLCD_GoTo@x,___awdiv@dividend
  3596  0001BE  0100               	movlb	0	; () banked
  3597  0001C0  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3598  0001C2  0E00               	movlw	0
  3599  0001C4  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3600  0001C6  0E40               	movlw	64
  3601  0001C8  6F62               	movwf	___awdiv@divisor& (0+255),b
  3602  0001CA  ECEF  F000         	call	___awdiv	;wreg free
  3603  0001CE  0100               	movlb	0	; () banked
  3604  0001D0  5160               	movf	?___awdiv& (0+255),w,b
  3605  0001D2  6E26               	movwf	GLCD_WriteCommand@controller,c
  3606  0001D4  516A               	movf	GLCD_GoTo@y& (0+255),w,b
  3607  0001D6  09B8               	iorlw	184
  3608  0001D8  ECA7  F003         	call	_GLCD_WriteCommand
  3609  0001DC  0012               	return		;funcret
  3610  0001DE                     __end_of_GLCD_GoTo:
  3611                           	opt stack 0
  3612                           tblptru	equ	0xFF8
  3613                           tblptrh	equ	0xFF7
  3614                           tblptrl	equ	0xFF6
  3615                           tablat	equ	0xFF5
  3616                           prodh	equ	0xFF4
  3617                           prodl	equ	0xFF3
  3618                           intcon	equ	0xFF2
  3619                           postinc0	equ	0xFEE
  3620                           wreg	equ	0xFE8
  3621                           postdec1	equ	0xFE5
  3622                           fsr1l	equ	0xFE1
  3623                           status	equ	0xFD8
  3624                           
  3625 ;; *************** function ___awdiv *****************
  3626 ;; Defined at:
  3627 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  dividend        2    0[BANK0 ] int 
  3630 ;;  divisor         2    2[BANK0 ] int 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  quotient        2    6[BANK0 ] int 
  3633 ;;  sign            1    5[BANK0 ] unsigned char 
  3634 ;;  counter         1    4[BANK0 ] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  2    0[BANK0 ] int 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3644 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3645 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3647 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3648 ;;Total ram usage:        8 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    6
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_GLCD_GoTo
  3655 ;;		_GLCD_WriteData
  3656 ;;		_GLCD_SetPixel
  3657 ;;		_GLCD_Bitmap
  3658 ;;		_GLCD_ReadData
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text28
  3663  0001DE                     __ptext28:
  3664                           	opt stack 0
  3665  0001DE                     ___awdiv:
  3666                           	opt stack 20
  3667                           
  3668                           ;incstack = 0
  3669  0001DE  0E00               	movlw	0
  3670  0001E0  0100               	movlb	0	; () banked
  3671  0001E2  6F65               	movwf	___awdiv@sign& (0+255),b
  3672                           
  3673                           ; BSR set to: 0
  3674  0001E4  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3675  0001E6  D006               	goto	l774
  3676                           
  3677                           ; BSR set to: 0
  3678  0001E8  6D62               	negf	___awdiv@divisor& (0+255),b
  3679  0001EA  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3680  0001EC  B0D8               	btfsc	status,0,c
  3681  0001EE  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3682                           
  3683                           ; BSR set to: 0
  3684  0001F0  0E01               	movlw	1
  3685  0001F2  6F65               	movwf	___awdiv@sign& (0+255),b
  3686  0001F4                     l774:
  3687                           
  3688                           ; BSR set to: 0
  3689                           
  3690                           ; BSR set to: 0
  3691  0001F4  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  3692  0001F6  D006               	goto	l775
  3693                           
  3694                           ; BSR set to: 0
  3695  0001F8  6D60               	negf	___awdiv@dividend& (0+255),b
  3696  0001FA  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3697  0001FC  B0D8               	btfsc	status,0,c
  3698  0001FE  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3699                           
  3700                           ; BSR set to: 0
  3701  000200  0E01               	movlw	1
  3702  000202  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  3703  000204                     l775:
  3704                           
  3705                           ; BSR set to: 0
  3706                           
  3707                           ; BSR set to: 0
  3708  000204  0E00               	movlw	0
  3709  000206  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  3710  000208  0E00               	movlw	0
  3711  00020A  6F66               	movwf	___awdiv@quotient& (0+255),b
  3712                           
  3713                           ; BSR set to: 0
  3714  00020C  5162               	movf	___awdiv@divisor& (0+255),w,b
  3715  00020E  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3716  000210  B4D8               	btfsc	status,2,c
  3717  000212  D01C               	goto	l782
  3718                           
  3719                           ; BSR set to: 0
  3720  000214  0E01               	movlw	1
  3721  000216  6F64               	movwf	___awdiv@counter& (0+255),b
  3722  000218  D004               	goto	l777
  3723  00021A                     
  3724                           ; BSR set to: 0
  3725                           
  3726                           ; BSR set to: 0
  3727  00021A  90D8               	bcf	status,0,c
  3728  00021C  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  3729  00021E  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3730  000220  2B64               	incf	___awdiv@counter& (0+255),f,b
  3731  000222                     l777:
  3732                           
  3733                           ; BSR set to: 0
  3734                           
  3735                           ; BSR set to: 0
  3736  000222  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3737  000224  D7FA               	goto	l778
  3738  000226                     u1530:
  3739                           
  3740                           ; BSR set to: 0
  3741                           
  3742                           ; BSR set to: 0
  3743                           
  3744                           ; BSR set to: 0
  3745  000226  90D8               	bcf	status,0,c
  3746  000228  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  3747  00022A  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3748                           
  3749                           ; BSR set to: 0
  3750  00022C  5162               	movf	___awdiv@divisor& (0+255),w,b
  3751  00022E  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  3752  000230  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3753  000232  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3754  000234  A0D8               	btfss	status,0,c
  3755  000236  D005               	goto	l781
  3756                           
  3757                           ; BSR set to: 0
  3758  000238  5162               	movf	___awdiv@divisor& (0+255),w,b
  3759  00023A  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  3760  00023C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3761  00023E  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3762                           
  3763                           ; BSR set to: 0
  3764  000240  8166               	bsf	___awdiv@quotient& (0+255),0,b
  3765  000242                     l781:
  3766                           
  3767                           ; BSR set to: 0
  3768                           
  3769                           ; BSR set to: 0
  3770  000242  90D8               	bcf	status,0,c
  3771  000244  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3772  000246  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  3773                           
  3774                           ; BSR set to: 0
  3775  000248  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  3776  00024A  D7ED               	goto	u1530
  3777  00024C                     l782:
  3778                           
  3779                           ; BSR set to: 0
  3780                           
  3781                           ; BSR set to: 0
  3782                           
  3783                           ; BSR set to: 0
  3784  00024C  5165               	movf	___awdiv@sign& (0+255),w,b
  3785  00024E  B4D8               	btfsc	status,2,c
  3786  000250  D004               	goto	l783
  3787                           
  3788                           ; BSR set to: 0
  3789  000252  6D66               	negf	___awdiv@quotient& (0+255),b
  3790  000254  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3791  000256  B0D8               	btfsc	status,0,c
  3792  000258  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3793  00025A                     l783:
  3794                           
  3795                           ; BSR set to: 0
  3796                           
  3797                           ; BSR set to: 0
  3798  00025A  C066  F060         	movff	___awdiv@quotient,?___awdiv
  3799  00025E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  3800  000262  0012               	return	
  3801  000264                     __end_of___awdiv:
  3802                           	opt stack 0
  3803                           tblptru	equ	0xFF8
  3804                           tblptrh	equ	0xFF7
  3805                           tblptrl	equ	0xFF6
  3806                           tablat	equ	0xFF5
  3807                           prodh	equ	0xFF4
  3808                           prodl	equ	0xFF3
  3809                           intcon	equ	0xFF2
  3810                           postinc0	equ	0xFEE
  3811                           wreg	equ	0xFE8
  3812                           postdec1	equ	0xFE5
  3813                           fsr1l	equ	0xFE1
  3814                           status	equ	0xFD8
  3815                           
  3816 ;; *************** function _GLCD_WriteCommand *****************
  3817 ;; Defined at:
  3818 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  commandToWri    1    wreg     unsigned char 
  3821 ;;  controller      1   37[COMRAM] unsigned char 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  commandToWri    1    9[BANK0 ] unsigned char 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, status,2, status,0, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3833 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3835 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3836 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3837 ;;Total ram usage:        3 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    8
  3840 ;; This function calls:
  3841 ;;		_GLCD_Delay
  3842 ;;		_GLCD_DisableController
  3843 ;;		_GLCD_EnableController
  3844 ;;		_GLCD_ReadStatus
  3845 ;; This function is called by:
  3846 ;;		_GLCD_Initalize
  3847 ;;		_GLCD_GoTo
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text29
  3852  00074E                     __ptext29:
  3853                           	opt stack 0
  3854  00074E                     _GLCD_WriteCommand:
  3855                           	opt stack 20
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;incstack = 0
  3859                           ;GLCD_WriteCommand@commandToWrite stored from wreg
  3860  00074E  0100               	movlb	0	; () banked
  3861  000750  6F69               	movwf	GLCD_WriteCommand@commandToWrite& (0+255),b
  3862  000752                     
  3863                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
  3864  000752  5026               	movf	GLCD_WriteCommand@controller,w,c
  3865  000754  EC0A  F004         	call	_GLCD_ReadStatus
  3866  000758  0100               	movlb	0	; () banked
  3867  00075A  6F68               	movwf	??_GLCD_WriteCommand& (0+255),b
  3868  00075C  BF68               	btfsc	??_GLCD_WriteCommand& (0+255),7,b
  3869  00075E  D7F9               	goto	l3022
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;KS0108-PIC18.c: 82: TRISC = 0x00;
  3873                           
  3874                           ; BSR set to: 0
  3875  000760  0E00               	movlw	0
  3876  000762  6E94               	movwf	3988,c	;volatile
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
  3880  000764  0EF9               	movlw	249
  3881  000766  1680               	andwf	3968,f,c	;volatile
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
  3885  000768  5026               	movf	GLCD_WriteCommand@controller,w,c
  3886  00076A  EC34  F004         	call	_GLCD_EnableController
  3887                           
  3888                           ;KS0108-PIC18.c: 85: PORTC = commandToWrite;
  3889  00076E  C069  FF82         	movff	GLCD_WriteCommand@commandToWrite,3970	;volatile
  3890                           
  3891                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
  3892  000772  8680               	bsf	3968,3,c	;volatile
  3893                           
  3894                           ;KS0108-PIC18.c: 87: GLCD_Delay();
  3895  000774  EC1D  F005         	call	_GLCD_Delay	;wreg free
  3896                           
  3897                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
  3898  000778  9680               	bcf	3968,3,c	;volatile
  3899                           
  3900                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
  3901  00077A  5026               	movf	GLCD_WriteCommand@controller,w,c
  3902  00077C  EC47  F004         	call	_GLCD_DisableController
  3903  000780  0012               	return		;funcret
  3904  000782                     __end_of_GLCD_WriteCommand:
  3905                           	opt stack 0
  3906                           tblptru	equ	0xFF8
  3907                           tblptrh	equ	0xFF7
  3908                           tblptrl	equ	0xFF6
  3909                           tablat	equ	0xFF5
  3910                           prodh	equ	0xFF4
  3911                           prodl	equ	0xFF3
  3912                           intcon	equ	0xFF2
  3913                           postinc0	equ	0xFEE
  3914                           wreg	equ	0xFE8
  3915                           postdec1	equ	0xFE5
  3916                           fsr1l	equ	0xFE1
  3917                           status	equ	0xFD8
  3918                           
  3919 ;; *************** function _GLCD_ReadStatus *****************
  3920 ;; Defined at:
  3921 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  controller      1    wreg     unsigned char 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  controller      1    1[BANK0 ] unsigned char 
  3926 ;;  status          1    0[BANK0 ] unsigned char 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  1    wreg      unsigned char 
  3929 ;; Registers used:
  3930 ;;		wreg, status,2, status,0, cstack
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3939 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3940 ;;Total ram usage:        2 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    7
  3943 ;; This function calls:
  3944 ;;		_GLCD_Delay
  3945 ;;		_GLCD_DisableController
  3946 ;;		_GLCD_EnableController
  3947 ;; This function is called by:
  3948 ;;		_GLCD_WriteCommand
  3949 ;;		_GLCD_WriteData
  3950 ;;		_GLCD_ReadData
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text30
  3955  000814                     __ptext30:
  3956                           	opt stack 0
  3957  000814                     _GLCD_ReadStatus:
  3958                           	opt stack 19
  3959                           
  3960                           ;incstack = 0
  3961                           ;GLCD_ReadStatus@controller stored from wreg
  3962  000814  0100               	movlb	0	; () banked
  3963  000816  6F61               	movwf	GLCD_ReadStatus@controller& (0+255),b
  3964                           
  3965                           ;KS0108-PIC18.c: 64: unsigned char status;
  3966                           ;KS0108-PIC18.c: 65: TRISC = 0xFF;
  3967  000818  6894               	setf	3988,c	;volatile
  3968                           
  3969                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
  3970  00081A  8280               	bsf	3968,1,c	;volatile
  3971                           
  3972                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
  3973  00081C  9480               	bcf	3968,2,c	;volatile
  3974                           
  3975                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
  3976  00081E  0100               	movlb	0	; () banked
  3977  000820  5161               	movf	GLCD_ReadStatus@controller& (0+255),w,b
  3978  000822  EC34  F004         	call	_GLCD_EnableController
  3979                           
  3980                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
  3981  000826  8680               	bsf	3968,3,c	;volatile
  3982                           
  3983                           ;KS0108-PIC18.c: 70: GLCD_Delay();
  3984  000828  EC1D  F005         	call	_GLCD_Delay	;wreg free
  3985                           
  3986                           ;KS0108-PIC18.c: 71: status = PORTC;
  3987  00082C  CF82 F060          	movff	3970,GLCD_ReadStatus@status	;volatile
  3988                           
  3989                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
  3990  000830  9680               	bcf	3968,3,c	;volatile
  3991                           
  3992                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
  3993  000832  0100               	movlb	0	; () banked
  3994  000834  5161               	movf	GLCD_ReadStatus@controller& (0+255),w,b
  3995  000836  EC47  F004         	call	_GLCD_DisableController
  3996                           
  3997                           ;KS0108-PIC18.c: 74: return status;
  3998  00083A  0100               	movlb	0	; () banked
  3999  00083C  5160               	movf	GLCD_ReadStatus@status& (0+255),w,b
  4000  00083E  0012               	return	
  4001  000840                     __end_of_GLCD_ReadStatus:
  4002                           	opt stack 0
  4003                           tblptru	equ	0xFF8
  4004                           tblptrh	equ	0xFF7
  4005                           tblptrl	equ	0xFF6
  4006                           tablat	equ	0xFF5
  4007                           prodh	equ	0xFF4
  4008                           prodl	equ	0xFF3
  4009                           intcon	equ	0xFF2
  4010                           postinc0	equ	0xFEE
  4011                           wreg	equ	0xFE8
  4012                           postdec1	equ	0xFE5
  4013                           fsr1l	equ	0xFE1
  4014                           status	equ	0xFD8
  4015                           
  4016 ;; *************** function _GLCD_EnableController *****************
  4017 ;; Defined at:
  4018 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  controller      1    wreg     unsigned char 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  controller      1   36[COMRAM] unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4036 ;;Total ram usage:        1 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    6
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_GLCD_ReadStatus
  4043 ;;		_GLCD_WriteCommand
  4044 ;;		_GLCD_WriteData
  4045 ;;		_GLCD_ReadData
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text31
  4050  000868                     __ptext31:
  4051                           	opt stack 0
  4052  000868                     _GLCD_EnableController:
  4053                           	opt stack 19
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;incstack = 0
  4057                           ;GLCD_EnableController@controller stored from wreg
  4058  000868  6E25               	movwf	GLCD_EnableController@controller,c
  4059                           
  4060                           ;KS0108-PIC18.c: 41: switch(controller){
  4061  00086A  D006               	goto	l495
  4062  00086C  9A80               	bcf	3968,5,c	;volatile
  4063  00086E  0012               	return	
  4064  000870  9C80               	bcf	3968,6,c	;volatile
  4065  000872  0012               	return	
  4066  000874  9E80               	bcf	3968,7,c	;volatile
  4067                           
  4068                           ;KS0108-PIC18.c: 45: }
  4069  000876  0012               	return	
  4070  000878                     l495:
  4071  000878  5025               	movf	GLCD_EnableController@controller,w,c
  4072                           
  4073                           ; Switch size 1, requested type "space"
  4074                           ; Number of cases is 3, Range of values is 0 to 2
  4075                           ; switch strategies available:
  4076                           ; Name         Instructions Cycles
  4077                           ; simple_byte           10     6 (average)
  4078                           ;	Chosen strategy is simple_byte
  4079  00087A  0A00               	xorlw	0	; case 0
  4080  00087C  B4D8               	btfsc	status,2,c
  4081  00087E  D7F6               	goto	l496
  4082  000880  0A01               	xorlw	1	; case 1
  4083  000882  B4D8               	btfsc	status,2,c
  4084  000884  D7F5               	goto	l498
  4085  000886  0A03               	xorlw	3	; case 2
  4086  000888  A4D8               	btfss	status,2,c
  4087  00088A  0012               	return	
  4088  00088C  D7F3               	goto	l499
  4089  00088E                     __end_of_GLCD_EnableController:
  4090                           	opt stack 0
  4091                           tblptru	equ	0xFF8
  4092                           tblptrh	equ	0xFF7
  4093                           tblptrl	equ	0xFF6
  4094                           tablat	equ	0xFF5
  4095                           prodh	equ	0xFF4
  4096                           prodl	equ	0xFF3
  4097                           intcon	equ	0xFF2
  4098                           postinc0	equ	0xFEE
  4099                           wreg	equ	0xFE8
  4100                           postdec1	equ	0xFE5
  4101                           fsr1l	equ	0xFE1
  4102                           status	equ	0xFD8
  4103                           
  4104 ;; *************** function _GLCD_DisableController *****************
  4105 ;; Defined at:
  4106 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;  controller      1    wreg     unsigned char 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  controller      1   36[COMRAM] unsigned char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      void 
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4123 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4124 ;;Total ram usage:        1 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:    6
  4127 ;; This function calls:
  4128 ;;		Nothing
  4129 ;; This function is called by:
  4130 ;;		_GLCD_ReadStatus
  4131 ;;		_GLCD_WriteCommand
  4132 ;;		_GLCD_WriteData
  4133 ;;		_GLCD_ReadData
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text32
  4138  00088E                     __ptext32:
  4139                           	opt stack 0
  4140  00088E                     _GLCD_DisableController:
  4141                           	opt stack 19
  4142                           
  4143                           ;incstack = 0
  4144                           ;GLCD_DisableController@controller stored from wreg
  4145  00088E  6E25               	movwf	GLCD_DisableController@controller,c
  4146                           
  4147                           ;KS0108-PIC18.c: 52: switch(controller)
  4148  000890  D006               	goto	l503
  4149  000892  8A80               	bsf	3968,5,c	;volatile
  4150  000894  0012               	return	
  4151  000896  8C80               	bsf	3968,6,c	;volatile
  4152  000898  0012               	return	
  4153  00089A  8E80               	bsf	3968,7,c	;volatile
  4154                           
  4155                           ;KS0108-PIC18.c: 57: }
  4156  00089C  0012               	return	
  4157  00089E                     l503:
  4158  00089E  5025               	movf	GLCD_DisableController@controller,w,c
  4159                           
  4160                           ; Switch size 1, requested type "space"
  4161                           ; Number of cases is 3, Range of values is 0 to 2
  4162                           ; switch strategies available:
  4163                           ; Name         Instructions Cycles
  4164                           ; simple_byte           10     6 (average)
  4165                           ;	Chosen strategy is simple_byte
  4166  0008A0  0A00               	xorlw	0	; case 0
  4167  0008A2  B4D8               	btfsc	status,2,c
  4168  0008A4  D7F6               	goto	l504
  4169  0008A6  0A01               	xorlw	1	; case 1
  4170  0008A8  B4D8               	btfsc	status,2,c
  4171  0008AA  D7F5               	goto	l506
  4172  0008AC  0A03               	xorlw	3	; case 2
  4173  0008AE  A4D8               	btfss	status,2,c
  4174  0008B0  0012               	return	
  4175  0008B2  D7F3               	goto	l507
  4176  0008B4                     __end_of_GLCD_DisableController:
  4177                           	opt stack 0
  4178                           tblptru	equ	0xFF8
  4179                           tblptrh	equ	0xFF7
  4180                           tblptrl	equ	0xFF6
  4181                           tablat	equ	0xFF5
  4182                           prodh	equ	0xFF4
  4183                           prodl	equ	0xFF3
  4184                           intcon	equ	0xFF2
  4185                           postinc0	equ	0xFEE
  4186                           wreg	equ	0xFE8
  4187                           postdec1	equ	0xFE5
  4188                           fsr1l	equ	0xFE1
  4189                           status	equ	0xFD8
  4190                           
  4191 ;; *************** function _GLCD_Delay *****************
  4192 ;; Defined at:
  4193 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		None
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4211 ;;Total ram usage:        0 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    6
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_GLCD_ReadStatus
  4218 ;;		_GLCD_WriteCommand
  4219 ;;		_GLCD_WriteData
  4220 ;;		_GLCD_ReadData
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text33
  4225  000A3A                     __ptext33:
  4226                           	opt stack 0
  4227  000A3A                     _GLCD_Delay:
  4228                           	opt stack 19
  4229                           
  4230                           ;KS0108-PIC18.c: 26: __nop();
  4231                           
  4232                           ;incstack = 0
  4233  000A3A  F000               	nop	
  4234  000A3C  0012               	return		;funcret
  4235  000A3E                     __end_of_GLCD_Delay:
  4236                           	opt stack 0
  4237                           tblptru	equ	0xFF8
  4238                           tblptrh	equ	0xFF7
  4239                           tblptrl	equ	0xFF6
  4240                           tablat	equ	0xFF5
  4241                           prodh	equ	0xFF4
  4242                           prodl	equ	0xFF3
  4243                           intcon	equ	0xFF2
  4244                           postinc0	equ	0xFEE
  4245                           wreg	equ	0xFE8
  4246                           postdec1	equ	0xFE5
  4247                           fsr1l	equ	0xFE1
  4248                           status	equ	0xFD8
  4249                           
  4250 ;; *************** function _INTERRUPT_InterruptManager *****************
  4251 ;; Defined at:
  4252 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4268 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4269 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4270 ;;Total ram usage:       18 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    5
  4273 ;; This function calls:
  4274 ;;		_PIN_MANAGER_IOC
  4275 ;;		_TMR0_ISR
  4276 ;; This function is called by:
  4277 ;;		Interrupt level 2
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	intcode
  4282  000008                     __pintcode:
  4283                           	opt stack 0
  4284  000008                     _INTERRUPT_InterruptManager:
  4285                           	opt stack 18
  4286                           
  4287                           ;incstack = 0
  4288  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4289  00000A  CFFA F013          	movff	pclath,??_INTERRUPT_InterruptManager
  4290  00000E  CFFB F014          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4291  000012  CFE9 F015          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4292  000016  CFEA F016          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4293  00001A  CFE1 F017          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4294  00001E  CFE2 F018          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4295  000022  CFD9 F019          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4296  000026  CFDA F01A          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4297  00002A  CFF3 F01B          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4298  00002E  CFF4 F01C          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4299  000032  CFF6 F01D          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4300  000036  CFF7 F01E          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4301  00003A  CFF8 F01F          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4302  00003E  CFF5 F020          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4303  000042  C03B  F021         	movff	btemp,??_INTERRUPT_InterruptManager+14
  4304  000046  C03C  F022         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  4305  00004A  C03D  F023         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  4306  00004E  C03E  F024         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  4307                           
  4308                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  4309  000052  BAF2               	btfsc	intcon,5,c	;volatile
  4310  000054  A4F2               	btfss	intcon,2,c	;volatile
  4311  000056  D003               	goto	i2l157
  4312                           
  4313                           ;interrupt_manager.c: 61: {
  4314                           ;interrupt_manager.c: 62: TMR0_ISR();
  4315  000058  EC20  F004         	call	_TMR0_ISR	;wreg free
  4316                           
  4317                           ;interrupt_manager.c: 63: }
  4318  00005C  D005               	goto	i2l159
  4319  00005E                     i2l157:
  4320                           
  4321                           ;interrupt_manager.c: 64: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  4322  00005E  B6F2               	btfsc	intcon,3,c	;volatile
  4323  000060  A0F2               	btfss	intcon,0,c	;volatile
  4324  000062  D002               	goto	i2l159
  4325                           
  4326                           ;interrupt_manager.c: 65: {
  4327                           ;interrupt_manager.c: 66: PIN_MANAGER_IOC();
  4328  000064  EC74  F001         	call	_PIN_MANAGER_IOC	;wreg free
  4329  000068                     i2l159:
  4330                           
  4331                           ;interrupt_manager.c: 68: else
  4332                           ;interrupt_manager.c: 69: {
  4333  000068  C024  F03E         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  4334  00006C  C023  F03D         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  4335  000070  C022  F03C         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  4336  000074  C021  F03B         	movff	??_INTERRUPT_InterruptManager+14,btemp
  4337  000078  C020  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4338  00007C  C01F  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4339  000080  C01E  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4340  000084  C01D  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4341  000088  C01C  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4342  00008C  C01B  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4343  000090  C01A  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4344  000094  C019  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4345  000098  C018  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4346  00009C  C017  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4347  0000A0  C016  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4348  0000A4  C015  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4349  0000A8  C014  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4350  0000AC  C013  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4351  0000B0  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4352  0000B2  0011               	retfie		f
  4353  0000B4                     __end_of_INTERRUPT_InterruptManager:
  4354                           	opt stack 0
  4355                           pclatu	equ	0xFFB
  4356                           pclath	equ	0xFFA
  4357                           tblptru	equ	0xFF8
  4358                           tblptrh	equ	0xFF7
  4359                           tblptrl	equ	0xFF6
  4360                           tablat	equ	0xFF5
  4361                           prodh	equ	0xFF4
  4362                           prodl	equ	0xFF3
  4363                           intcon	equ	0xFF2
  4364                           postinc0	equ	0xFEE
  4365                           fsr0h	equ	0xFEA
  4366                           fsr0l	equ	0xFE9
  4367                           wreg	equ	0xFE8
  4368                           postdec1	equ	0xFE5
  4369                           fsr1h	equ	0xFE2
  4370                           fsr1l	equ	0xFE1
  4371                           fsr2h	equ	0xFDA
  4372                           fsr2l	equ	0xFD9
  4373                           status	equ	0xFD8
  4374                           
  4375 ;; *************** function _TMR0_ISR *****************
  4376 ;; Defined at:
  4377 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;		None
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;		None
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  1    wreg      void 
  4384 ;; Registers used:
  4385 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4395 ;;Total ram usage:        0 bytes
  4396 ;; Hardware stack levels used:    1
  4397 ;; Hardware stack levels required when called:    1
  4398 ;; This function calls:
  4399 ;;		Absolute function
  4400 ;;		_TMR0_DefaultInterruptHandler
  4401 ;; This function is called by:
  4402 ;;		_INTERRUPT_InterruptManager
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           	psect	text35
  4407  000840                     __ptext35:
  4408                           	opt stack 0
  4409  000840                     _TMR0_ISR:
  4410                           	opt stack 21
  4411                           
  4412                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
  4413                           
  4414                           ;incstack = 0
  4415  000840  94F2               	bcf	intcon,2,c	;volatile
  4416                           
  4417                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
  4418  000842  5028               	movf	_timer0ReloadVal+1,w,c	;volatile
  4419  000844  6ED7               	movwf	4055,c	;volatile
  4420                           
  4421                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
  4422  000846  C027  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4423                           
  4424                           ;tmr0.c: 145: if(TMR0_InterruptHandler)
  4425  00084A  5029               	movf	_TMR0_InterruptHandler,w,c
  4426  00084C  102A               	iorwf	_TMR0_InterruptHandler+1,w,c
  4427  00084E  B4D8               	btfsc	status,2,c
  4428  000850  0012               	return	
  4429                           
  4430                           ;tmr0.c: 146: {
  4431                           ;tmr0.c: 147: TMR0_InterruptHandler();
  4432  000852  D801               	call	i2u40_48
  4433  000854  0012               	return	
  4434  000856                     i2u40_48:
  4435  000856  0005               	push	
  4436  000858  6EFA               	movwf	pclath,c
  4437  00085A  5029               	movf	_TMR0_InterruptHandler,w,c
  4438  00085C  6EFD               	movwf	tosl,c
  4439  00085E  502A               	movf	_TMR0_InterruptHandler+1,w,c
  4440  000860  6EFE               	movwf	tosh,c
  4441  000862  6AFF               	clrf	tosu,c
  4442  000864  50FA               	movf	pclath,w,c
  4443  000866  0012               	return		;indir
  4444  000868                     __end_of_TMR0_ISR:
  4445                           	opt stack 0
  4446                           tosu	equ	0xFFF
  4447                           tosh	equ	0xFFE
  4448                           tosl	equ	0xFFD
  4449                           pclatu	equ	0xFFB
  4450                           pclath	equ	0xFFA
  4451                           tblptru	equ	0xFF8
  4452                           tblptrh	equ	0xFF7
  4453                           tblptrl	equ	0xFF6
  4454                           tablat	equ	0xFF5
  4455                           prodh	equ	0xFF4
  4456                           prodl	equ	0xFF3
  4457                           intcon	equ	0xFF2
  4458                           postinc0	equ	0xFEE
  4459                           fsr0h	equ	0xFEA
  4460                           fsr0l	equ	0xFE9
  4461                           wreg	equ	0xFE8
  4462                           postdec1	equ	0xFE5
  4463                           fsr1h	equ	0xFE2
  4464                           fsr1l	equ	0xFE1
  4465                           fsr2h	equ	0xFDA
  4466                           fsr2l	equ	0xFD9
  4467                           status	equ	0xFD8
  4468                           
  4469 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4470 ;; Defined at:
  4471 ;;		line 158 in file "mcc_generated_files/tmr0.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		None
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4489 ;;Total ram usage:        0 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_TMR0_Initialize
  4495 ;;		_TMR0_ISR
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text36
  4500  000A42                     __ptext36:
  4501                           	opt stack 0
  4502  000A42                     _TMR0_DefaultInterruptHandler:
  4503                           	opt stack 21
  4504                           
  4505                           ;incstack = 0
  4506  000A42  0012               	return		;funcret
  4507  000A44                     __end_of_TMR0_DefaultInterruptHandler:
  4508                           	opt stack 0
  4509                           tosu	equ	0xFFF
  4510                           tosh	equ	0xFFE
  4511                           tosl	equ	0xFFD
  4512                           pclatu	equ	0xFFB
  4513                           pclath	equ	0xFFA
  4514                           tblptru	equ	0xFF8
  4515                           tblptrh	equ	0xFF7
  4516                           tblptrl	equ	0xFF6
  4517                           tablat	equ	0xFF5
  4518                           prodh	equ	0xFF4
  4519                           prodl	equ	0xFF3
  4520                           intcon	equ	0xFF2
  4521                           postinc0	equ	0xFEE
  4522                           fsr0h	equ	0xFEA
  4523                           fsr0l	equ	0xFE9
  4524                           wreg	equ	0xFE8
  4525                           postdec1	equ	0xFE5
  4526                           fsr1h	equ	0xFE2
  4527                           fsr1l	equ	0xFE1
  4528                           fsr2h	equ	0xFDA
  4529                           fsr2l	equ	0xFD9
  4530                           status	equ	0xFD8
  4531                           
  4532 ;; *************** function _PIN_MANAGER_IOC *****************
  4533 ;; Defined at:
  4534 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  currentState    1   17[COMRAM] unsigned char 
  4539 ;;  result          1   16[COMRAM] unsigned char 
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      void 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4552 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4553 ;;Total ram usage:        4 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:    4
  4556 ;; This function calls:
  4557 ;;		i2_GLCD_GoTo
  4558 ;;		i2_GLCD_WriteChar
  4559 ;; This function is called by:
  4560 ;;		_INTERRUPT_InterruptManager
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text37
  4565  0002E8                     __ptext37:
  4566                           	opt stack 0
  4567  0002E8                     _PIN_MANAGER_IOC:
  4568                           	opt stack 18
  4569                           
  4570                           ;pin_manager.c: 138: static unsigned char previousState;
  4571                           ;pin_manager.c: 139: unsigned char currentState;
  4572                           ;pin_manager.c: 140: unsigned char result;
  4573                           ;pin_manager.c: 142: _delay((unsigned long)((2)*(8000000/4000.0)));
  4574                           
  4575                           ;incstack = 0
  4576  0002E8  0E06               	movlw	6
  4577  0002EA  6E0F               	movwf	??_PIN_MANAGER_IOC& (0+255),c
  4578  0002EC  0E30               	movlw	48
  4579  0002EE                     i2u197_47:
  4580  0002EE  2EE8               	decfsz	wreg,f,c
  4581  0002F0  D7FE               	bra	i2u197_47
  4582  0002F2  2E0F               	decfsz	??_PIN_MANAGER_IOC& (0+255),f,c
  4583  0002F4  D7FC               	bra	i2u197_47
  4584  0002F6  D000               	nop2	
  4585                           
  4586                           ;pin_manager.c: 144: currentState = (PORTBbits.RB5 << 1) | PORTBbits.RB4;
  4587  0002F8  A881               	btfss	3969,4,c	;volatile
  4588  0002FA  D003               	goto	i2u118_40
  4589  0002FC  6A0F               	clrf	??_PIN_MANAGER_IOC& (0+255),c
  4590  0002FE  2A0F               	incf	??_PIN_MANAGER_IOC& (0+255),f,c
  4591  000300  D001               	goto	i2u118_48
  4592  000302                     i2u118_40:
  4593  000302  6A0F               	clrf	??_PIN_MANAGER_IOC& (0+255),c
  4594  000304                     i2u118_48:
  4595  000304  AA81               	btfss	3969,5,c	;volatile
  4596  000306  D003               	goto	i2u119_40
  4597  000308  6A10               	clrf	(??_PIN_MANAGER_IOC+1)& (0+255),c
  4598  00030A  2A10               	incf	(??_PIN_MANAGER_IOC+1)& (0+255),f,c
  4599  00030C  D001               	goto	i2u119_48
  4600  00030E                     i2u119_40:
  4601  00030E  6A10               	clrf	(??_PIN_MANAGER_IOC+1)& (0+255),c
  4602  000310                     i2u119_48:
  4603  000310  90D8               	bcf	status,0,c
  4604  000312  3410               	rlcf	??_PIN_MANAGER_IOC+1,w,c
  4605  000314  100F               	iorwf	??_PIN_MANAGER_IOC,w,c
  4606  000316  6E12               	movwf	PIN_MANAGER_IOC@currentState,c
  4607                           
  4608                           ;pin_manager.c: 146: GLCD_GoTo(65,3);
  4609  000318  0E03               	movlw	3
  4610  00031A  6E0C               	movwf	i2GLCD_GoTo@y,c
  4611  00031C  0E41               	movlw	65
  4612  00031E  ECB1  F001         	call	i2_GLCD_GoTo
  4613                           
  4614                           ;pin_manager.c: 148: GLCD_WriteChar((PORTBbits.RB5 + 48));
  4615  000322  AA81               	btfss	3969,5,c	;volatile
  4616  000324  D002               	goto	i2u120_40
  4617  000326  0E01               	movlw	1
  4618  000328  D001               	goto	i2u120_46
  4619  00032A                     i2u120_40:
  4620  00032A  0E00               	movlw	0
  4621  00032C                     i2u120_46:
  4622  00032C  0F30               	addlw	48
  4623  00032E  EC0E  F003         	call	i2_GLCD_WriteChar
  4624                           
  4625                           ;pin_manager.c: 149: GLCD_WriteChar((PORTBbits.RB4 + 48));
  4626  000332  A881               	btfss	3969,4,c	;volatile
  4627  000334  D002               	goto	i2u121_40
  4628  000336  0E01               	movlw	1
  4629  000338  D001               	goto	i2u121_46
  4630  00033A                     i2u121_40:
  4631  00033A  0E00               	movlw	0
  4632  00033C                     i2u121_46:
  4633  00033C  0F30               	addlw	48
  4634  00033E  EC0E  F003         	call	i2_GLCD_WriteChar
  4635                           
  4636                           ;pin_manager.c: 153: result = (previousState & 0x01) ^ ((currentState >> 1) & 0x01);
  4637  000342  C012  F00F         	movff	PIN_MANAGER_IOC@currentState,??_PIN_MANAGER_IOC
  4638  000346  90D8               	bcf	status,0,c
  4639  000348  320F               	rrcf	??_PIN_MANAGER_IOC,f,c
  4640  00034A  0E01               	movlw	1
  4641  00034C  160F               	andwf	??_PIN_MANAGER_IOC,f,c
  4642  00034E  5031               	movf	PIN_MANAGER_IOC@previousState,w,c
  4643  000350  0B01               	andlw	1
  4644  000352  180F               	xorwf	??_PIN_MANAGER_IOC,w,c
  4645  000354  6E11               	movwf	PIN_MANAGER_IOC@result,c
  4646                           
  4647                           ;pin_manager.c: 175: previousState = currentState;
  4648  000356  C012  F031         	movff	PIN_MANAGER_IOC@currentState,PIN_MANAGER_IOC@previousState
  4649                           
  4650                           ;pin_manager.c: 179: PORTB = PORTB;
  4651  00035A  CF81 FF81          	movff	3969,3969	;volatile
  4652                           
  4653                           ;pin_manager.c: 181: INTCONbits.RBIF = 0;
  4654  00035E  90F2               	bcf	intcon,0,c	;volatile
  4655  000360  0012               	return		;funcret
  4656  000362                     __end_of_PIN_MANAGER_IOC:
  4657                           	opt stack 0
  4658                           tosu	equ	0xFFF
  4659                           tosh	equ	0xFFE
  4660                           tosl	equ	0xFFD
  4661                           pclatu	equ	0xFFB
  4662                           pclath	equ	0xFFA
  4663                           tblptru	equ	0xFF8
  4664                           tblptrh	equ	0xFF7
  4665                           tblptrl	equ	0xFF6
  4666                           tablat	equ	0xFF5
  4667                           prodh	equ	0xFF4
  4668                           prodl	equ	0xFF3
  4669                           intcon	equ	0xFF2
  4670                           postinc0	equ	0xFEE
  4671                           fsr0h	equ	0xFEA
  4672                           fsr0l	equ	0xFE9
  4673                           wreg	equ	0xFE8
  4674                           postdec1	equ	0xFE5
  4675                           fsr1h	equ	0xFE2
  4676                           fsr1l	equ	0xFE1
  4677                           fsr2h	equ	0xFDA
  4678                           fsr2l	equ	0xFD9
  4679                           status	equ	0xFD8
  4680                           
  4681 ;; *************** function i2_GLCD_WriteChar *****************
  4682 ;; Defined at:
  4683 ;;		line 56 in file "ks0108lib/KS0108.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  charToWrite     1    wreg     unsigned char 
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;  charToWrite     1   10[COMRAM] unsigned char 
  4688 ;;  GLCD_WriteCh    2   11[COMRAM] int 
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4699 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4701 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4702 ;;Total ram usage:        3 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; Hardware stack levels required when called:    3
  4705 ;; This function calls:
  4706 ;;		i2_GLCD_WriteData
  4707 ;; This function is called by:
  4708 ;;		_PIN_MANAGER_IOC
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text38
  4713  00061C                     __ptext38:
  4714                           	opt stack 0
  4715  00061C                     i2_GLCD_WriteChar:
  4716                           	opt stack 18
  4717                           
  4718                           ;incstack = 0
  4719                           ;i2GLCD_WriteChar@charToWrite stored from wreg
  4720  00061C  6E0B               	movwf	i2GLCD_WriteChar@charToWrite,c
  4721                           
  4722                           ;KS0108.c: 58: int i;
  4723                           ;KS0108.c: 59: charToWrite -= 32;
  4724  00061E  0E20               	movlw	32
  4725  000620  5E0B               	subwf	i2GLCD_WriteChar@charToWrite,f,c
  4726                           
  4727                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
  4728  000622  0E00               	movlw	0
  4729  000624  6E0D               	movwf	i2GLCD_WriteChar@i+1,c
  4730  000626  0E00               	movlw	0
  4731  000628  6E0C               	movwf	i2GLCD_WriteChar@i,c
  4732  00062A                     i2l2654:
  4733  00062A  BE0D               	btfsc	i2GLCD_WriteChar@i+1,7,c
  4734  00062C  D006               	goto	i2l454
  4735  00062E  500D               	movf	i2GLCD_WriteChar@i+1,w,c
  4736  000630  E11A               	bnz	i2l2664
  4737  000632  0E05               	movlw	5
  4738  000634  5C0C               	subwf	i2GLCD_WriteChar@i,w,c
  4739  000636  B0D8               	btfsc	status,0,c
  4740  000638  D016               	goto	i2u117_40
  4741  00063A                     i2l454:
  4742                           
  4743                           ;KS0108.c: 61: {
  4744                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
  4745  00063A  500B               	movf	i2GLCD_WriteChar@charToWrite,w,c
  4746  00063C  0D05               	mullw	5
  4747  00063E  500C               	movf	i2GLCD_WriteChar@i,w,c
  4748  000640  26F3               	addwf	prodl,f,c
  4749  000642  500D               	movf	i2GLCD_WriteChar@i+1,w,c
  4750  000644  22F4               	addwfc	prodh,f,c
  4751  000646  0ECB               	movlw	low _font5x8
  4752  000648  24F3               	addwf	prodl,w,c
  4753  00064A  6EF6               	movwf	tblptrl,c
  4754  00064C  0EFD               	movlw	high _font5x8
  4755  00064E  20F4               	addwfc	prodh,w,c
  4756  000650  6EF7               	movwf	tblptrh,c
  4757  000652                     	if	1	;There are 3 active tblptr bytes
  4758  000652  6AF8               	clrf	tblptru,c
  4759  000654  0E00               	movlw	low (__mediumconst shr (0+16))
  4760  000656  22F8               	addwfc	tblptru,f,c
  4761  000658                     	endif
  4762  000658  0008               	tblrd		*
  4763  00065A  50F5               	movf	tablat,w,c
  4764  00065C  EC29  F002         	call	i2_GLCD_WriteData
  4765  000660  4A0C               	infsnz	i2GLCD_WriteChar@i,f,c
  4766  000662  2A0D               	incf	i2GLCD_WriteChar@i+1,f,c
  4767  000664  D7E2               	goto	i2l2654
  4768  000666                     i2u117_40:
  4769  000666                     i2l2664:
  4770                           
  4771                           ;KS0108.c: 64: }
  4772                           ;KS0108.c: 65: GLCD_WriteData(0x00);
  4773  000666  0E00               	movlw	0
  4774  000668  EC29  F002         	call	i2_GLCD_WriteData
  4775  00066C  0012               	return		;funcret
  4776  00066E                     __end_ofi2_GLCD_WriteChar:
  4777                           	opt stack 0
  4778                           tosu	equ	0xFFF
  4779                           tosh	equ	0xFFE
  4780                           tosl	equ	0xFFD
  4781                           pclatu	equ	0xFFB
  4782                           pclath	equ	0xFFA
  4783                           tblptru	equ	0xFF8
  4784                           tblptrh	equ	0xFF7
  4785                           tblptrl	equ	0xFF6
  4786                           tablat	equ	0xFF5
  4787                           prodh	equ	0xFF4
  4788                           prodl	equ	0xFF3
  4789                           intcon	equ	0xFF2
  4790                           postinc0	equ	0xFEE
  4791                           fsr0h	equ	0xFEA
  4792                           fsr0l	equ	0xFE9
  4793                           wreg	equ	0xFE8
  4794                           postdec1	equ	0xFE5
  4795                           fsr1h	equ	0xFE2
  4796                           fsr1l	equ	0xFE1
  4797                           fsr2h	equ	0xFDA
  4798                           fsr2l	equ	0xFD9
  4799                           status	equ	0xFD8
  4800                           
  4801 ;; *************** function i2_GLCD_WriteData *****************
  4802 ;; Defined at:
  4803 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  dataToWrite     1    wreg     unsigned char 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  dataToWrite     1    9[COMRAM] unsigned char 
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4819 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4821 ;;Total ram usage:        2 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    2
  4824 ;; This function calls:
  4825 ;;		i2_GLCD_Delay
  4826 ;;		i2_GLCD_DisableController
  4827 ;;		i2_GLCD_EnableController
  4828 ;;		i2_GLCD_ReadStatus
  4829 ;;		i2___awdiv
  4830 ;; This function is called by:
  4831 ;;		i2_GLCD_WriteChar
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text39
  4836  000452                     __ptext39:
  4837                           	opt stack 0
  4838  000452                     i2_GLCD_WriteData:
  4839                           	opt stack 18
  4840                           
  4841                           ;incstack = 0
  4842                           ;i2GLCD_WriteData@dataToWrite stored from wreg
  4843  000452  6E0A               	movwf	i2GLCD_WriteData@dataToWrite,c
  4844  000454                     
  4845                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  4846  000454  C030  F001         	movff	_screen_x,i2___awdiv@dividend
  4847  000458  6A02               	clrf	i2___awdiv@dividend+1,c
  4848  00045A  0E00               	movlw	0
  4849  00045C  6E04               	movwf	i2___awdiv@divisor+1,c
  4850  00045E  0E40               	movlw	64
  4851  000460  6E03               	movwf	i2___awdiv@divisor,c
  4852  000462  EC32  F001         	call	i2___awdiv	;wreg free
  4853  000466  5001               	movf	?i2___awdiv,w,c
  4854  000468  EC80  F004         	call	i2_GLCD_ReadStatus
  4855  00046C  6E09               	movwf	??i2_GLCD_WriteData& (0+255),c
  4856  00046E  BE09               	btfsc	??i2_GLCD_WriteData,7,c
  4857  000470  D7F1               	goto	i2l2530
  4858                           
  4859                           ;KS0108-PIC18.c: 116: TRISC = 0x00;
  4860  000472  0E00               	movlw	0
  4861  000474  6E94               	movwf	3988,c	;volatile
  4862                           
  4863                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
  4864  000476  9280               	bcf	3968,1,c	;volatile
  4865                           
  4866                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
  4867  000478  8480               	bsf	3968,2,c	;volatile
  4868                           
  4869                           ;KS0108-PIC18.c: 119: PORTC = dataToWrite;
  4870  00047A  C00A  FF82         	movff	i2GLCD_WriteData@dataToWrite,3970	;volatile
  4871                           
  4872                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
  4873  00047E  C030  F001         	movff	_screen_x,i2___awdiv@dividend
  4874  000482  6A02               	clrf	i2___awdiv@dividend+1,c
  4875  000484  0E00               	movlw	0
  4876  000486  6E04               	movwf	i2___awdiv@divisor+1,c
  4877  000488  0E40               	movlw	64
  4878  00048A  6E03               	movwf	i2___awdiv@divisor,c
  4879  00048C  EC32  F001         	call	i2___awdiv	;wreg free
  4880  000490  5001               	movf	?i2___awdiv,w,c
  4881  000492  EC5A  F004         	call	i2_GLCD_EnableController
  4882                           
  4883                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
  4884  000496  8680               	bsf	3968,3,c	;volatile
  4885                           
  4886                           ;KS0108-PIC18.c: 122: GLCD_Delay();
  4887  000498  EC1F  F005         	call	i2_GLCD_Delay	;wreg free
  4888                           
  4889                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
  4890  00049C  9680               	bcf	3968,3,c	;volatile
  4891                           
  4892                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
  4893  00049E  C030  F001         	movff	_screen_x,i2___awdiv@dividend
  4894  0004A2  6A02               	clrf	i2___awdiv@dividend+1,c
  4895  0004A4  0E00               	movlw	0
  4896  0004A6  6E04               	movwf	i2___awdiv@divisor+1,c
  4897  0004A8  0E40               	movlw	64
  4898  0004AA  6E03               	movwf	i2___awdiv@divisor,c
  4899  0004AC  EC32  F001         	call	i2___awdiv	;wreg free
  4900  0004B0  5001               	movf	?i2___awdiv,w,c
  4901  0004B2  EC6D  F004         	call	i2_GLCD_DisableController
  4902                           
  4903                           ;KS0108-PIC18.c: 125: screen_x++;
  4904  0004B6  2A30               	incf	_screen_x,f,c
  4905  0004B8  0012               	return		;funcret
  4906  0004BA                     __end_ofi2_GLCD_WriteData:
  4907                           	opt stack 0
  4908                           tosu	equ	0xFFF
  4909                           tosh	equ	0xFFE
  4910                           tosl	equ	0xFFD
  4911                           pclatu	equ	0xFFB
  4912                           pclath	equ	0xFFA
  4913                           tblptru	equ	0xFF8
  4914                           tblptrh	equ	0xFF7
  4915                           tblptrl	equ	0xFF6
  4916                           tablat	equ	0xFF5
  4917                           prodh	equ	0xFF4
  4918                           prodl	equ	0xFF3
  4919                           intcon	equ	0xFF2
  4920                           postinc0	equ	0xFEE
  4921                           fsr0h	equ	0xFEA
  4922                           fsr0l	equ	0xFE9
  4923                           wreg	equ	0xFE8
  4924                           postdec1	equ	0xFE5
  4925                           fsr1h	equ	0xFE2
  4926                           fsr1l	equ	0xFE1
  4927                           fsr2h	equ	0xFDA
  4928                           fsr2l	equ	0xFD9
  4929                           status	equ	0xFD8
  4930                           
  4931 ;; *************** function i2_GLCD_GoTo *****************
  4932 ;; Defined at:
  4933 ;;		line 25 in file "ks0108lib/KS0108.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  x               1    wreg     unsigned char 
  4936 ;;  y               1   11[COMRAM] unsigned char 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  x               1   12[COMRAM] unsigned char 
  4939 ;;  GLCD_GoTo       1   13[COMRAM] unsigned char 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		wreg, status,2, status,0, cstack
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4949 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4952 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4953 ;;Total ram usage:        3 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    3
  4956 ;; This function calls:
  4957 ;;		i2_GLCD_WriteCommand
  4958 ;;		i2___awdiv
  4959 ;; This function is called by:
  4960 ;;		_PIN_MANAGER_IOC
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text40
  4965  000362                     __ptext40:
  4966                           	opt stack 0
  4967  000362                     i2_GLCD_GoTo:
  4968                           	opt stack 18
  4969                           
  4970                           ;incstack = 0
  4971                           ;i2GLCD_GoTo@x stored from wreg
  4972  000362  6E0D               	movwf	i2GLCD_GoTo@x,c
  4973                           
  4974                           ;KS0108.c: 27: unsigned char i;
  4975                           ;KS0108.c: 28: screen_x = x;
  4976  000364  C00D  F030         	movff	i2GLCD_GoTo@x,_screen_x
  4977                           
  4978                           ;KS0108.c: 29: screen_y = y;
  4979  000368  C00C  F02F         	movff	i2GLCD_GoTo@y,_screen_y
  4980                           
  4981                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
  4982  00036C  0E00               	movlw	0
  4983  00036E  6E0E               	movwf	i2GLCD_GoTo@i,c
  4984  000370                     i2l2638:
  4985  000370  0E01               	movlw	1
  4986  000372  640E               	cpfsgt	i2GLCD_GoTo@i,c
  4987  000374  D001               	goto	i2l442
  4988  000376  D012               	goto	i2u115_40
  4989  000378                     i2l442:
  4990                           
  4991                           ;KS0108.c: 32: {
  4992                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
  4993  000378  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  4994  00037C  0E40               	movlw	64
  4995  00037E  ECF2  F003         	call	i2_GLCD_WriteCommand
  4996                           
  4997                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
  4998  000382  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  4999  000386  500C               	movf	i2GLCD_GoTo@y,w,c
  5000  000388  09B8               	iorlw	184
  5001  00038A  ECF2  F003         	call	i2_GLCD_WriteCommand
  5002                           
  5003                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
  5004  00038E  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  5005  000392  0EC0               	movlw	192
  5006  000394  ECF2  F003         	call	i2_GLCD_WriteCommand
  5007  000398  2A0E               	incf	i2GLCD_GoTo@i,f,c
  5008  00039A  D7EA               	goto	i2l2638
  5009  00039C                     i2u115_40:
  5010                           
  5011                           ;KS0108.c: 36: }
  5012                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
  5013  00039C  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
  5014  0003A0  6A02               	clrf	i2___awdiv@dividend+1,c
  5015  0003A2  0E00               	movlw	0
  5016  0003A4  6E04               	movwf	i2___awdiv@divisor+1,c
  5017  0003A6  0E40               	movlw	64
  5018  0003A8  6E03               	movwf	i2___awdiv@divisor,c
  5019  0003AA  EC32  F001         	call	i2___awdiv	;wreg free
  5020  0003AE  5001               	movf	?i2___awdiv,w,c
  5021  0003B0  6E09               	movwf	i2GLCD_WriteCommand@controller,c
  5022  0003B2  500D               	movf	i2GLCD_GoTo@x,w,c
  5023  0003B4  0B3F               	andlw	63
  5024  0003B6  0940               	iorlw	64
  5025  0003B8  ECF2  F003         	call	i2_GLCD_WriteCommand
  5026                           
  5027                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
  5028  0003BC  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
  5029  0003C0  6A02               	clrf	i2___awdiv@dividend+1,c
  5030  0003C2  0E00               	movlw	0
  5031  0003C4  6E04               	movwf	i2___awdiv@divisor+1,c
  5032  0003C6  0E40               	movlw	64
  5033  0003C8  6E03               	movwf	i2___awdiv@divisor,c
  5034  0003CA  EC32  F001         	call	i2___awdiv	;wreg free
  5035  0003CE  5001               	movf	?i2___awdiv,w,c
  5036  0003D0  6E09               	movwf	i2GLCD_WriteCommand@controller,c
  5037  0003D2  500C               	movf	i2GLCD_GoTo@y,w,c
  5038  0003D4  09B8               	iorlw	184
  5039  0003D6  ECF2  F003         	call	i2_GLCD_WriteCommand
  5040  0003DA  0012               	return		;funcret
  5041  0003DC                     __end_ofi2_GLCD_GoTo:
  5042                           	opt stack 0
  5043                           tosu	equ	0xFFF
  5044                           tosh	equ	0xFFE
  5045                           tosl	equ	0xFFD
  5046                           pclatu	equ	0xFFB
  5047                           pclath	equ	0xFFA
  5048                           tblptru	equ	0xFF8
  5049                           tblptrh	equ	0xFF7
  5050                           tblptrl	equ	0xFF6
  5051                           tablat	equ	0xFF5
  5052                           prodh	equ	0xFF4
  5053                           prodl	equ	0xFF3
  5054                           intcon	equ	0xFF2
  5055                           postinc0	equ	0xFEE
  5056                           fsr0h	equ	0xFEA
  5057                           fsr0l	equ	0xFE9
  5058                           wreg	equ	0xFE8
  5059                           postdec1	equ	0xFE5
  5060                           fsr1h	equ	0xFE2
  5061                           fsr1l	equ	0xFE1
  5062                           fsr2h	equ	0xFDA
  5063                           fsr2l	equ	0xFD9
  5064                           status	equ	0xFD8
  5065                           
  5066 ;; *************** function i2___awdiv *****************
  5067 ;; Defined at:
  5068 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  dividend        2    0[COMRAM] int 
  5071 ;;  divisor         2    2[COMRAM] int 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  __awdiv         2    6[COMRAM] int 
  5074 ;;  __awdiv         1    5[COMRAM] unsigned char 
  5075 ;;  __awdiv         1    4[COMRAM] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  2    0[COMRAM] int 
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5086 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5088 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5089 ;;Total ram usage:        8 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; This function calls:
  5092 ;;		Nothing
  5093 ;; This function is called by:
  5094 ;;		i2_GLCD_GoTo
  5095 ;;		i2_GLCD_WriteData
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text41
  5100  000264                     __ptext41:
  5101                           	opt stack 0
  5102  000264                     i2___awdiv:
  5103                           	opt stack 19
  5104                           
  5105                           ;incstack = 0
  5106  000264  0E00               	movlw	0
  5107  000266  6E06               	movwf	i2___awdiv@sign,c
  5108  000268  AE04               	btfss	i2___awdiv@divisor+1,7,c
  5109  00026A  D006               	goto	i2l774
  5110  00026C  6C03               	negf	i2___awdiv@divisor,c
  5111  00026E  1E04               	comf	i2___awdiv@divisor+1,f,c
  5112  000270  B0D8               	btfsc	status,0,c
  5113  000272  2A04               	incf	i2___awdiv@divisor+1,f,c
  5114  000274  0E01               	movlw	1
  5115  000276  6E06               	movwf	i2___awdiv@sign,c
  5116  000278                     i2l774:
  5117  000278  AE02               	btfss	i2___awdiv@dividend+1,7,c
  5118  00027A  D006               	goto	i2l775
  5119  00027C  6C01               	negf	i2___awdiv@dividend,c
  5120  00027E  1E02               	comf	i2___awdiv@dividend+1,f,c
  5121  000280  B0D8               	btfsc	status,0,c
  5122  000282  2A02               	incf	i2___awdiv@dividend+1,f,c
  5123  000284  0E01               	movlw	1
  5124  000286  1A06               	xorwf	i2___awdiv@sign,f,c
  5125  000288                     i2l775:
  5126  000288  0E00               	movlw	0
  5127  00028A  6E08               	movwf	i2___awdiv@quotient+1,c
  5128  00028C  0E00               	movlw	0
  5129  00028E  6E07               	movwf	i2___awdiv@quotient,c
  5130  000290  5003               	movf	i2___awdiv@divisor,w,c
  5131  000292  1004               	iorwf	i2___awdiv@divisor+1,w,c
  5132  000294  B4D8               	btfsc	status,2,c
  5133  000296  D01C               	goto	i2l782
  5134  000298  0E01               	movlw	1
  5135  00029A  6E05               	movwf	i2___awdiv@counter,c
  5136  00029C  D004               	goto	i2l777
  5137  00029E  90D8               	bcf	status,0,c
  5138  0002A0  3603               	rlcf	i2___awdiv@divisor,f,c
  5139  0002A2  3604               	rlcf	i2___awdiv@divisor+1,f,c
  5140  0002A4  2A05               	incf	i2___awdiv@counter,f,c
  5141  0002A6                     i2l777:
  5142  0002A6  AE04               	btfss	i2___awdiv@divisor+1,7,c
  5143  0002A8  D7FA               	goto	i2l778
  5144  0002AA                     i2u99_40:
  5145  0002AA  90D8               	bcf	status,0,c
  5146  0002AC  3607               	rlcf	i2___awdiv@quotient,f,c
  5147  0002AE  3608               	rlcf	i2___awdiv@quotient+1,f,c
  5148  0002B0  5003               	movf	i2___awdiv@divisor,w,c
  5149  0002B2  5C01               	subwf	i2___awdiv@dividend,w,c
  5150  0002B4  5004               	movf	i2___awdiv@divisor+1,w,c
  5151  0002B6  5802               	subwfb	i2___awdiv@dividend+1,w,c
  5152  0002B8  A0D8               	btfss	status,0,c
  5153  0002BA  D005               	goto	i2l781
  5154  0002BC  5003               	movf	i2___awdiv@divisor,w,c
  5155  0002BE  5E01               	subwf	i2___awdiv@dividend,f,c
  5156  0002C0  5004               	movf	i2___awdiv@divisor+1,w,c
  5157  0002C2  5A02               	subwfb	i2___awdiv@dividend+1,f,c
  5158  0002C4  8007               	bsf	i2___awdiv@quotient,0,c
  5159  0002C6                     i2l781:
  5160  0002C6  90D8               	bcf	status,0,c
  5161  0002C8  3204               	rrcf	i2___awdiv@divisor+1,f,c
  5162  0002CA  3203               	rrcf	i2___awdiv@divisor,f,c
  5163  0002CC  2E05               	decfsz	i2___awdiv@counter,f,c
  5164  0002CE  D7ED               	goto	i2u99_40
  5165  0002D0                     i2l782:
  5166  0002D0  5006               	movf	i2___awdiv@sign,w,c
  5167  0002D2  B4D8               	btfsc	status,2,c
  5168  0002D4  D004               	goto	i2l783
  5169  0002D6  6C07               	negf	i2___awdiv@quotient,c
  5170  0002D8  1E08               	comf	i2___awdiv@quotient+1,f,c
  5171  0002DA  B0D8               	btfsc	status,0,c
  5172  0002DC  2A08               	incf	i2___awdiv@quotient+1,f,c
  5173  0002DE                     i2l783:
  5174  0002DE  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  5175  0002E2  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  5176  0002E6  0012               	return	
  5177  0002E8                     __end_ofi2___awdiv:
  5178                           	opt stack 0
  5179                           tosu	equ	0xFFF
  5180                           tosh	equ	0xFFE
  5181                           tosl	equ	0xFFD
  5182                           pclatu	equ	0xFFB
  5183                           pclath	equ	0xFFA
  5184                           tblptru	equ	0xFF8
  5185                           tblptrh	equ	0xFF7
  5186                           tblptrl	equ	0xFF6
  5187                           tablat	equ	0xFF5
  5188                           prodh	equ	0xFF4
  5189                           prodl	equ	0xFF3
  5190                           intcon	equ	0xFF2
  5191                           postinc0	equ	0xFEE
  5192                           fsr0h	equ	0xFEA
  5193                           fsr0l	equ	0xFE9
  5194                           wreg	equ	0xFE8
  5195                           postdec1	equ	0xFE5
  5196                           fsr1h	equ	0xFE2
  5197                           fsr1l	equ	0xFE1
  5198                           fsr2h	equ	0xFDA
  5199                           fsr2l	equ	0xFD9
  5200                           status	equ	0xFD8
  5201                           
  5202 ;; *************** function i2_GLCD_WriteCommand *****************
  5203 ;; Defined at:
  5204 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;  commandToWri    1    wreg     unsigned char 
  5207 ;;  controller      1    8[COMRAM] unsigned char 
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;  commandToWri    1   10[COMRAM] unsigned char 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      void 
  5212 ;; Registers used:
  5213 ;;		wreg, status,2, status,0, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5219 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5222 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5223 ;;Total ram usage:        3 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    2
  5226 ;; This function calls:
  5227 ;;		i2_GLCD_Delay
  5228 ;;		i2_GLCD_DisableController
  5229 ;;		i2_GLCD_EnableController
  5230 ;;		i2_GLCD_ReadStatus
  5231 ;; This function is called by:
  5232 ;;		i2_GLCD_GoTo
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text42
  5237  0007E4                     __ptext42:
  5238                           	opt stack 0
  5239  0007E4                     i2_GLCD_WriteCommand:
  5240                           	opt stack 18
  5241                           
  5242                           ;incstack = 0
  5243                           ;i2GLCD_WriteCommand@commandToWrite stored from wreg
  5244  0007E4  6E0B               	movwf	i2GLCD_WriteCommand@commandToWrite,c
  5245  0007E6                     
  5246                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
  5247  0007E6  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  5248  0007E8  EC80  F004         	call	i2_GLCD_ReadStatus
  5249  0007EC  6E0A               	movwf	??i2_GLCD_WriteCommand& (0+255),c
  5250  0007EE  BE0A               	btfsc	??i2_GLCD_WriteCommand,7,c
  5251  0007F0  D7FA               	goto	i2l2510
  5252                           
  5253                           ;KS0108-PIC18.c: 82: TRISC = 0x00;
  5254  0007F2  0E00               	movlw	0
  5255  0007F4  6E94               	movwf	3988,c	;volatile
  5256                           
  5257                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
  5258  0007F6  0EF9               	movlw	249
  5259  0007F8  1680               	andwf	3968,f,c	;volatile
  5260                           
  5261                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
  5262  0007FA  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  5263  0007FC  EC5A  F004         	call	i2_GLCD_EnableController
  5264                           
  5265                           ;KS0108-PIC18.c: 85: PORTC = commandToWrite;
  5266  000800  C00B  FF82         	movff	i2GLCD_WriteCommand@commandToWrite,3970	;volatile
  5267                           
  5268                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
  5269  000804  8680               	bsf	3968,3,c	;volatile
  5270                           
  5271                           ;KS0108-PIC18.c: 87: GLCD_Delay();
  5272  000806  EC1F  F005         	call	i2_GLCD_Delay	;wreg free
  5273                           
  5274                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
  5275  00080A  9680               	bcf	3968,3,c	;volatile
  5276                           
  5277                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
  5278  00080C  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  5279  00080E  EC6D  F004         	call	i2_GLCD_DisableController
  5280  000812  0012               	return		;funcret
  5281  000814                     __end_ofi2_GLCD_WriteCommand:
  5282                           	opt stack 0
  5283                           tosu	equ	0xFFF
  5284                           tosh	equ	0xFFE
  5285                           tosl	equ	0xFFD
  5286                           pclatu	equ	0xFFB
  5287                           pclath	equ	0xFFA
  5288                           tblptru	equ	0xFF8
  5289                           tblptrh	equ	0xFF7
  5290                           tblptrl	equ	0xFF6
  5291                           tablat	equ	0xFF5
  5292                           prodh	equ	0xFF4
  5293                           prodl	equ	0xFF3
  5294                           intcon	equ	0xFF2
  5295                           postinc0	equ	0xFEE
  5296                           fsr0h	equ	0xFEA
  5297                           fsr0l	equ	0xFE9
  5298                           wreg	equ	0xFE8
  5299                           postdec1	equ	0xFE5
  5300                           fsr1h	equ	0xFE2
  5301                           fsr1l	equ	0xFE1
  5302                           fsr2h	equ	0xFDA
  5303                           fsr2l	equ	0xFD9
  5304                           status	equ	0xFD8
  5305                           
  5306 ;; *************** function i2_GLCD_ReadStatus *****************
  5307 ;; Defined at:
  5308 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  controller      1    wreg     unsigned char 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  controller      1    2[COMRAM] unsigned char 
  5313 ;;  GLCD_ReadSta    1    1[COMRAM] unsigned char 
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  1    wreg      unsigned char 
  5316 ;; Registers used:
  5317 ;;		wreg, status,2, status,0, cstack
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5327 ;;Total ram usage:        2 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; Hardware stack levels required when called:    1
  5330 ;; This function calls:
  5331 ;;		i2_GLCD_Delay
  5332 ;;		i2_GLCD_DisableController
  5333 ;;		i2_GLCD_EnableController
  5334 ;; This function is called by:
  5335 ;;		i2_GLCD_WriteCommand
  5336 ;;		i2_GLCD_WriteData
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           	psect	text43
  5341  000900                     __ptext43:
  5342                           	opt stack 0
  5343  000900                     i2_GLCD_ReadStatus:
  5344                           	opt stack 18
  5345                           
  5346                           ;incstack = 0
  5347                           ;i2GLCD_ReadStatus@controller stored from wreg
  5348  000900  6E03               	movwf	i2GLCD_ReadStatus@controller,c
  5349                           
  5350                           ;KS0108-PIC18.c: 64: unsigned char status;
  5351                           ;KS0108-PIC18.c: 65: TRISC = 0xFF;
  5352  000902  6894               	setf	3988,c	;volatile
  5353                           
  5354                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
  5355  000904  8280               	bsf	3968,1,c	;volatile
  5356                           
  5357                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
  5358  000906  9480               	bcf	3968,2,c	;volatile
  5359                           
  5360                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
  5361  000908  5003               	movf	i2GLCD_ReadStatus@controller,w,c
  5362  00090A  EC5A  F004         	call	i2_GLCD_EnableController
  5363                           
  5364                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
  5365  00090E  8680               	bsf	3968,3,c	;volatile
  5366                           
  5367                           ;KS0108-PIC18.c: 70: GLCD_Delay();
  5368  000910  EC1F  F005         	call	i2_GLCD_Delay	;wreg free
  5369                           
  5370                           ;KS0108-PIC18.c: 71: status = PORTC;
  5371  000914  CF82 F002          	movff	3970,i2GLCD_ReadStatus@status	;volatile
  5372                           
  5373                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
  5374  000918  9680               	bcf	3968,3,c	;volatile
  5375                           
  5376                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
  5377  00091A  5003               	movf	i2GLCD_ReadStatus@controller,w,c
  5378  00091C  EC6D  F004         	call	i2_GLCD_DisableController
  5379                           
  5380                           ;KS0108-PIC18.c: 74: return status;
  5381  000920  5002               	movf	i2GLCD_ReadStatus@status,w,c
  5382  000922  0012               	return	
  5383  000924                     __end_ofi2_GLCD_ReadStatus:
  5384                           	opt stack 0
  5385                           tosu	equ	0xFFF
  5386                           tosh	equ	0xFFE
  5387                           tosl	equ	0xFFD
  5388                           pclatu	equ	0xFFB
  5389                           pclath	equ	0xFFA
  5390                           tblptru	equ	0xFF8
  5391                           tblptrh	equ	0xFF7
  5392                           tblptrl	equ	0xFF6
  5393                           tablat	equ	0xFF5
  5394                           prodh	equ	0xFF4
  5395                           prodl	equ	0xFF3
  5396                           intcon	equ	0xFF2
  5397                           postinc0	equ	0xFEE
  5398                           fsr0h	equ	0xFEA
  5399                           fsr0l	equ	0xFE9
  5400                           wreg	equ	0xFE8
  5401                           postdec1	equ	0xFE5
  5402                           fsr1h	equ	0xFE2
  5403                           fsr1l	equ	0xFE1
  5404                           fsr2h	equ	0xFDA
  5405                           fsr2l	equ	0xFD9
  5406                           status	equ	0xFD8
  5407                           
  5408 ;; *************** function i2_GLCD_EnableController *****************
  5409 ;; Defined at:
  5410 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;  controller      1    wreg     unsigned char 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;  controller      1    0[COMRAM] unsigned char 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      void 
  5417 ;; Registers used:
  5418 ;;		wreg, status,2, status,0
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5428 ;;Total ram usage:        1 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; This function calls:
  5431 ;;		Nothing
  5432 ;; This function is called by:
  5433 ;;		i2_GLCD_ReadStatus
  5434 ;;		i2_GLCD_WriteCommand
  5435 ;;		i2_GLCD_WriteData
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text44
  5440  0008B4                     __ptext44:
  5441                           	opt stack 0
  5442  0008B4                     i2_GLCD_EnableController:
  5443                           	opt stack 18
  5444                           
  5445                           ;incstack = 0
  5446                           ;i2GLCD_EnableController@controller stored from wreg
  5447  0008B4  6E01               	movwf	i2GLCD_EnableController@controller,c
  5448                           
  5449                           ;KS0108-PIC18.c: 41: switch(controller){
  5450  0008B6  D006               	goto	i2l495
  5451  0008B8  9A80               	bcf	3968,5,c	;volatile
  5452  0008BA  0012               	return	
  5453  0008BC  9C80               	bcf	3968,6,c	;volatile
  5454  0008BE  0012               	return	
  5455  0008C0  9E80               	bcf	3968,7,c	;volatile
  5456                           
  5457                           ;KS0108-PIC18.c: 45: }
  5458  0008C2  0012               	return	
  5459  0008C4                     i2l495:
  5460  0008C4  5001               	movf	i2GLCD_EnableController@controller,w,c
  5461                           
  5462                           ; Switch size 1, requested type "space"
  5463                           ; Number of cases is 3, Range of values is 0 to 2
  5464                           ; switch strategies available:
  5465                           ; Name         Instructions Cycles
  5466                           ; simple_byte           10     6 (average)
  5467                           ;	Chosen strategy is simple_byte
  5468  0008C6  0A00               	xorlw	0	; case 0
  5469  0008C8  B4D8               	btfsc	status,2,c
  5470  0008CA  D7F6               	goto	i2l496
  5471  0008CC  0A01               	xorlw	1	; case 1
  5472  0008CE  B4D8               	btfsc	status,2,c
  5473  0008D0  D7F5               	goto	i2l498
  5474  0008D2  0A03               	xorlw	3	; case 2
  5475  0008D4  A4D8               	btfss	status,2,c
  5476  0008D6  0012               	return	
  5477  0008D8  D7F3               	goto	i2l499
  5478  0008DA                     __end_ofi2_GLCD_EnableController:
  5479                           	opt stack 0
  5480                           tosu	equ	0xFFF
  5481                           tosh	equ	0xFFE
  5482                           tosl	equ	0xFFD
  5483                           pclatu	equ	0xFFB
  5484                           pclath	equ	0xFFA
  5485                           tblptru	equ	0xFF8
  5486                           tblptrh	equ	0xFF7
  5487                           tblptrl	equ	0xFF6
  5488                           tablat	equ	0xFF5
  5489                           prodh	equ	0xFF4
  5490                           prodl	equ	0xFF3
  5491                           intcon	equ	0xFF2
  5492                           postinc0	equ	0xFEE
  5493                           fsr0h	equ	0xFEA
  5494                           fsr0l	equ	0xFE9
  5495                           wreg	equ	0xFE8
  5496                           postdec1	equ	0xFE5
  5497                           fsr1h	equ	0xFE2
  5498                           fsr1l	equ	0xFE1
  5499                           fsr2h	equ	0xFDA
  5500                           fsr2l	equ	0xFD9
  5501                           status	equ	0xFD8
  5502                           
  5503 ;; *************** function i2_GLCD_DisableController *****************
  5504 ;; Defined at:
  5505 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  controller      1    wreg     unsigned char 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;  controller      1    0[COMRAM] unsigned char 
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  1    wreg      void 
  5512 ;; Registers used:
  5513 ;;		wreg, status,2, status,0
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5523 ;;Total ram usage:        1 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; This function calls:
  5526 ;;		Nothing
  5527 ;; This function is called by:
  5528 ;;		i2_GLCD_ReadStatus
  5529 ;;		i2_GLCD_WriteCommand
  5530 ;;		i2_GLCD_WriteData
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text45
  5535  0008DA                     __ptext45:
  5536                           	opt stack 0
  5537  0008DA                     i2_GLCD_DisableController:
  5538                           	opt stack 18
  5539                           
  5540                           ;incstack = 0
  5541                           ;i2GLCD_DisableController@controller stored from wreg
  5542  0008DA  6E01               	movwf	i2GLCD_DisableController@controller,c
  5543                           
  5544                           ;KS0108-PIC18.c: 52: switch(controller)
  5545  0008DC  D006               	goto	i2l503
  5546  0008DE  8A80               	bsf	3968,5,c	;volatile
  5547  0008E0  0012               	return	
  5548  0008E2  8C80               	bsf	3968,6,c	;volatile
  5549  0008E4  0012               	return	
  5550  0008E6  8E80               	bsf	3968,7,c	;volatile
  5551                           
  5552                           ;KS0108-PIC18.c: 57: }
  5553  0008E8  0012               	return	
  5554  0008EA                     i2l503:
  5555  0008EA  5001               	movf	i2GLCD_DisableController@controller,w,c
  5556                           
  5557                           ; Switch size 1, requested type "space"
  5558                           ; Number of cases is 3, Range of values is 0 to 2
  5559                           ; switch strategies available:
  5560                           ; Name         Instructions Cycles
  5561                           ; simple_byte           10     6 (average)
  5562                           ;	Chosen strategy is simple_byte
  5563  0008EC  0A00               	xorlw	0	; case 0
  5564  0008EE  B4D8               	btfsc	status,2,c
  5565  0008F0  D7F6               	goto	i2l504
  5566  0008F2  0A01               	xorlw	1	; case 1
  5567  0008F4  B4D8               	btfsc	status,2,c
  5568  0008F6  D7F5               	goto	i2l506
  5569  0008F8  0A03               	xorlw	3	; case 2
  5570  0008FA  A4D8               	btfss	status,2,c
  5571  0008FC  0012               	return	
  5572  0008FE  D7F3               	goto	i2l507
  5573  000900                     __end_ofi2_GLCD_DisableController:
  5574                           	opt stack 0
  5575                           tosu	equ	0xFFF
  5576                           tosh	equ	0xFFE
  5577                           tosl	equ	0xFFD
  5578                           pclatu	equ	0xFFB
  5579                           pclath	equ	0xFFA
  5580                           tblptru	equ	0xFF8
  5581                           tblptrh	equ	0xFF7
  5582                           tblptrl	equ	0xFF6
  5583                           tablat	equ	0xFF5
  5584                           prodh	equ	0xFF4
  5585                           prodl	equ	0xFF3
  5586                           intcon	equ	0xFF2
  5587                           postinc0	equ	0xFEE
  5588                           fsr0h	equ	0xFEA
  5589                           fsr0l	equ	0xFE9
  5590                           wreg	equ	0xFE8
  5591                           postdec1	equ	0xFE5
  5592                           fsr1h	equ	0xFE2
  5593                           fsr1l	equ	0xFE1
  5594                           fsr2h	equ	0xFDA
  5595                           fsr2l	equ	0xFD9
  5596                           status	equ	0xFD8
  5597                           
  5598 ;; *************** function i2_GLCD_Delay *****************
  5599 ;; Defined at:
  5600 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;		None
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;		None
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  1    wreg      void 
  5607 ;; Registers used:
  5608 ;;		None
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5618 ;;Total ram usage:        0 bytes
  5619 ;; Hardware stack levels used:    1
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		i2_GLCD_ReadStatus
  5624 ;;		i2_GLCD_WriteCommand
  5625 ;;		i2_GLCD_WriteData
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text46
  5630  000A3E                     __ptext46:
  5631                           	opt stack 0
  5632  000A3E                     i2_GLCD_Delay:
  5633                           	opt stack 18
  5634                           
  5635                           ;KS0108-PIC18.c: 26: __nop();
  5636                           
  5637                           ;incstack = 0
  5638  000A3E  F000               	nop	
  5639  000A40  0012               	return		;funcret
  5640  000A42                     __end_ofi2_GLCD_Delay:
  5641                           	opt stack 0
  5642                           tosu	equ	0xFFF
  5643                           tosh	equ	0xFFE
  5644                           tosl	equ	0xFFD
  5645                           pclatu	equ	0xFFB
  5646                           pclath	equ	0xFFA
  5647                           tblptru	equ	0xFF8
  5648                           tblptrh	equ	0xFF7
  5649                           tblptrl	equ	0xFF6
  5650                           tablat	equ	0xFF5
  5651                           prodh	equ	0xFF4
  5652                           prodl	equ	0xFF3
  5653                           intcon	equ	0xFF2
  5654                           postinc0	equ	0xFEE
  5655                           fsr0h	equ	0xFEA
  5656                           fsr0l	equ	0xFE9
  5657                           wreg	equ	0xFE8
  5658                           postdec1	equ	0xFE5
  5659                           fsr1h	equ	0xFE2
  5660                           fsr1l	equ	0xFE1
  5661                           fsr2h	equ	0xFDA
  5662                           fsr2l	equ	0xFD9
  5663                           status	equ	0xFD8
  5664                           tosu	equ	0xFFF
  5665                           tosh	equ	0xFFE
  5666                           tosl	equ	0xFFD
  5667                           pclatu	equ	0xFFB
  5668                           pclath	equ	0xFFA
  5669                           tblptru	equ	0xFF8
  5670                           tblptrh	equ	0xFF7
  5671                           tblptrl	equ	0xFF6
  5672                           tablat	equ	0xFF5
  5673                           prodh	equ	0xFF4
  5674                           prodl	equ	0xFF3
  5675                           intcon	equ	0xFF2
  5676                           postinc0	equ	0xFEE
  5677                           fsr0h	equ	0xFEA
  5678                           fsr0l	equ	0xFE9
  5679                           wreg	equ	0xFE8
  5680                           postdec1	equ	0xFE5
  5681                           fsr1h	equ	0xFE2
  5682                           fsr1l	equ	0xFE1
  5683                           fsr2h	equ	0xFDA
  5684                           fsr2l	equ	0xFD9
  5685                           status	equ	0xFD8
  5686                           
  5687                           	psect	text47
  5688  000000                     __ptext47:
  5689                           	opt stack 0
  5690                           tosu	equ	0xFFF
  5691                           tosh	equ	0xFFE
  5692                           tosl	equ	0xFFD
  5693                           pclatu	equ	0xFFB
  5694                           pclath	equ	0xFFA
  5695                           tblptru	equ	0xFF8
  5696                           tblptrh	equ	0xFF7
  5697                           tblptrl	equ	0xFF6
  5698                           tablat	equ	0xFF5
  5699                           prodh	equ	0xFF4
  5700                           prodl	equ	0xFF3
  5701                           intcon	equ	0xFF2
  5702                           postinc0	equ	0xFEE
  5703                           fsr0h	equ	0xFEA
  5704                           fsr0l	equ	0xFE9
  5705                           wreg	equ	0xFE8
  5706                           postdec1	equ	0xFE5
  5707                           fsr1h	equ	0xFE2
  5708                           fsr1l	equ	0xFE1
  5709                           fsr2h	equ	0xFDA
  5710                           fsr2l	equ	0xFD9
  5711                           status	equ	0xFD8
  5712                           
  5713                           	psect	rparam
  5714  0000                     tosu	equ	0xFFF
  5715                           tosh	equ	0xFFE
  5716                           tosl	equ	0xFFD
  5717                           pclatu	equ	0xFFB
  5718                           pclath	equ	0xFFA
  5719                           tblptru	equ	0xFF8
  5720                           tblptrh	equ	0xFF7
  5721                           tblptrl	equ	0xFF6
  5722                           tablat	equ	0xFF5
  5723                           prodh	equ	0xFF4
  5724                           prodl	equ	0xFF3
  5725                           intcon	equ	0xFF2
  5726                           postinc0	equ	0xFEE
  5727                           fsr0h	equ	0xFEA
  5728                           fsr0l	equ	0xFE9
  5729                           wreg	equ	0xFE8
  5730                           postdec1	equ	0xFE5
  5731                           fsr1h	equ	0xFE2
  5732                           fsr1l	equ	0xFE1
  5733                           fsr2h	equ	0xFDA
  5734                           fsr2l	equ	0xFD9
  5735                           status	equ	0xFD8
  5736                           
  5737                           	psect	temp
  5738  00003B                     btemp:
  5739                           	opt stack 0
  5740  00003B                     	ds	1
  5741  0000                     int$flags	set	btemp
  5742  0000                     wtemp6	set	btemp+1
  5743                           tosu	equ	0xFFF
  5744                           tosh	equ	0xFFE
  5745                           tosl	equ	0xFFD
  5746                           pclatu	equ	0xFFB
  5747                           pclath	equ	0xFFA
  5748                           tblptru	equ	0xFF8
  5749                           tblptrh	equ	0xFF7
  5750                           tblptrl	equ	0xFF6
  5751                           tablat	equ	0xFF5
  5752                           prodh	equ	0xFF4
  5753                           prodl	equ	0xFF3
  5754                           intcon	equ	0xFF2
  5755                           postinc0	equ	0xFEE
  5756                           fsr0h	equ	0xFEA
  5757                           fsr0l	equ	0xFE9
  5758                           wreg	equ	0xFE8
  5759                           postdec1	equ	0xFE5
  5760                           fsr1h	equ	0xFE2
  5761                           fsr1l	equ	0xFE1
  5762                           fsr2h	equ	0xFDA
  5763                           fsr2l	equ	0xFD9
  5764                           status	equ	0xFD8


Data Sizes:
    Strings     82
    Constant    481
    Data        6
    BSS         6
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      58
    BANK0           160     23      23
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    GLCD_WriteString@stringToWrite	PTR unsigned char  size(2) Largest target is 13
		 -> STR_8(CODE[13]), STR_7(CODE[11]), STR_6(CODE[9]), STR_5(CODE[10]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCB5_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCB5_DefaultInterruptHandler(), 

    IOCB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCB5_DefaultInterruptHandler(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB5_SetInterruptHandler
    _GLCD_Initalize->_GLCD_WriteCommand
    _GLCD_ClearScreen->_GLCD_WriteData
    _GLCD_WriteChar->_GLCD_WriteData
    _Make_Arrow->_GLCD_WriteData
    _Clear_runTime_Arrows->_GLCD_WriteData
    _Clear_Arrow_Column->_GLCD_WriteData
    _GLCD_WriteData->_GLCD_DisableController
    _GLCD_WriteData->_GLCD_EnableController
    _GLCD_GoTo->_GLCD_WriteCommand
    _GLCD_WriteCommand->_GLCD_DisableController
    _GLCD_WriteCommand->_GLCD_EnableController
    _GLCD_ReadStatus->_GLCD_DisableController
    _GLCD_ReadStatus->_GLCD_EnableController

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_PIN_MANAGER_IOC
    _PIN_MANAGER_IOC->i2_GLCD_GoTo
    i2_GLCD_WriteChar->i2_GLCD_WriteData
    i2_GLCD_WriteData->i2___awdiv
    i2_GLCD_GoTo->i2_GLCD_WriteCommand
    i2_GLCD_WriteCommand->i2___awdiv
    i2_GLCD_ReadStatus->i2_GLCD_DisableController
    i2_GLCD_ReadStatus->i2_GLCD_EnableController

Critical Paths under _main in BANK0

    _SYSTEM_Initialize->_TMR0_Initialize
    _GLCD_Initalize->_GLCD_WriteCommand
    _Initialize_Menus->_GLCD_WriteString
    _GLCD_ClearScreen->_GLCD_GoTo
    _Draw_runTime_Menu->_GLCD_WriteString
    _GLCD_WriteString->_GLCD_WriteChar
    _GLCD_WriteChar->_GLCD_WriteData
    _Draw_Arrow->_Clear_Arrow_Column
    _Draw_runTime_Arrow->_GLCD_GoTo
    _Make_Arrow->_GLCD_WriteData
    _Clear_runTime_Arrows->_GLCD_GoTo
    _Clear_Arrow_Column->_GLCD_GoTo
    _GLCD_WriteData->___awdiv
    _GLCD_GoTo->_GLCD_WriteCommand
    _GLCD_WriteCommand->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  117475
                                             22 BANK0      1     1      0
                      _Check_Buttons
                         _Draw_Arrow
                   _GLCD_ClearScreen
                     _GLCD_Initalize
                   _Initialize_Menus
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                   _EPWM1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              0 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             36 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     196
          _IOCB4_SetInterruptHandler
          _IOCB5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB5_SetInterruptHandler                            2     0      2      98
                                             36 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2      98
                                             36 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCD_Initalize                                       1     1      0     983
                                             10 BANK0      1     1      0
               _GLCD_InitializePorts
                  _GLCD_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _GLCD_InitializePorts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        0     0      0   62892
                         _Draw_Arrow
                  _Draw_runTime_Menu
                   _GLCD_ClearScreen
                   _Initialize_Menus
 ---------------------------------------------------------------------------------
 (1) _Initialize_Menus                                     0     0      0    9586
                          _GLCD_GoTo
                   _GLCD_WriteString
 ---------------------------------------------------------------------------------
 (1) _GLCD_ClearScreen                                     2     2      0    8835
                                             13 BANK0      2     2      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Draw_runTime_Menu                                    0     0      0    9586
                          _GLCD_GoTo
                   _GLCD_WriteString
 ---------------------------------------------------------------------------------
 (2) _GLCD_WriteString                                     2     0      2    3774
                                             12 BANK0      2     0      2
                     _GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (3) _GLCD_WriteChar                                       3     3      0    2989
                                              9 BANK0      3     3      0
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _Draw_Arrow                                           0     0      0   34885
                 _Clear_Arrow_Column
               _Clear_runTime_Arrows
                 _Draw_runTime_Arrow
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Draw_runTime_Arrow                                   0     0      0    8668
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Make_Arrow                                           0     0      0    2856
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_runTime_Arrows                                 1     1      0    8745
                                             13 BANK0      1     1      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_Arrow_Column                                   9     9      0    8804
                                             13 BANK0      9     9      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _GLCD_WriteData                                       2     2      0    2856
                                             37 COMRAM     1     1      0
                                              8 BANK0      1     1      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _GLCD_GoTo                                            3     2      1    5812
                                             10 BANK0      3     2      1
                  _GLCD_WriteCommand
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2605
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _GLCD_WriteCommand                                    3     2      1     884
                                             37 COMRAM     1     0      1
                                              8 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _GLCD_ReadStatus                                      2     2      0     158
                                              0 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
 ---------------------------------------------------------------------------------
 (6) _GLCD_EnableController                                1     1      0      31
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_DisableController                               1     1      0      31
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_Delay                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                          18    18      0    2099
                                             18 COMRAM    18    18      0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      4     4      0    2099
                                             14 COMRAM     4     4      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (10) i2_GLCD_WriteChar                                    3     3      0     828
                                             10 COMRAM     3     3      0
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (11) i2_GLCD_WriteData                                    2     2      0     737
                                              8 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (10) i2_GLCD_GoTo                                         3     2      1    1225
                                             11 COMRAM     3     2      1
                i2_GLCD_WriteCommand
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     560
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (11) i2_GLCD_WriteCommand                                 3     2      1     373
                                              8 COMRAM     3     2      1
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (12) i2_GLCD_ReadStatus                                   2     2      0     111
                                              1 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_EnableController                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_DisableController                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_Delay                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Draw_Arrow
       _Clear_Arrow_Column
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Clear_runTime_Arrows
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Draw_runTime_Arrow
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _Make_Arrow
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _Draw_runTime_Menu
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
     _GLCD_ClearScreen
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Initialize_Menus
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
   _Draw_Arrow
     _Clear_Arrow_Column
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Clear_runTime_Arrows
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Draw_runTime_Arrow
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _Make_Arrow
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
   _GLCD_ClearScreen
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_WriteData
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv
   _GLCD_Initalize
     _GLCD_InitializePorts
     _GLCD_WriteCommand
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv (ARG)
   _Initialize_Menus
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_WriteString
       _GLCD_WriteChar
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
       _IOCB5_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR4_Initialize
       _TMR4_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     i2_GLCD_GoTo
       i2_GLCD_WriteCommand
         i2_GLCD_Delay
         i2_GLCD_DisableController
         i2_GLCD_EnableController
         i2_GLCD_ReadStatus
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
         i2___awdiv (ARG)
       i2___awdiv
     i2_GLCD_WriteChar
       i2_GLCD_WriteData
         i2_GLCD_Delay
         i2_GLCD_DisableController
         i2_GLCD_EnableController
         i2_GLCD_ReadStatus
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
         i2___awdiv
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     17      17       5       14.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      3A       1       61.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      51       6        0.0%
DATA                 0      0      51       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jul 20 15:35:33 2020

              GLCD_WriteCommand@controller 0026                  GLCD_WriteData@dataToWrite 0068  
                          GLCD_Initalize@i 006A                               ___awdiv@sign 0065  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
         GLCD_DisableController@controller 0025         i2GLCD_DisableController@controller 0001  
                          _timer0ReloadVal 0027                 ?_IOCB4_SetInterruptHandler 0025  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l503 089E                                        l504 0892  
                                      l506 0896                                        l442 0170  
                                      l507 089A                                        l371 095E  
                                      l460 07B6                                        l364 06A2  
                                      l381 0962                                        l437 0936  
                                      l454 053A                                        l447 0726  
                                      l449 073E                                        l459 07CE  
                                      l581 04C8                                        l495 0878  
                                      l583 04E4                                        l496 086C  
                                      l584 04DA                                        l592 0596  
                                      l593 058C                                        l498 0870  
                                      l499 0874                                        l595 05BE  
                                      l596 05B4                                        l781 0242  
                                      l782 024C                                        l774 01F4  
                                      l783 025A                                        l775 0204  
                                      l777 0222                                        l778 021A  
                             __CFG_CPB$OFF 000000                                        _PR4 000FA9  
                             __CFG_CPD$OFF 000000                                        tosl 000FFD  
                                      wreg 000FE8                PIN_MANAGER_IOC@currentState 0012  
                       __size_of_GLCD_GoTo 0088                                       l3022 0752  
                                     l3112 04C0                                       l3042 03E0  
                                     l3072 0168                                       l3182 0736  
                                     l3174 071E                                       l3238 092E  
                                     l3088 052A                                       l3098 0568  
                                     STR_1 FFF6                                       STR_2 FFCF  
                                     STR_3 FFC4                                       STR_4 FFED  
                                     STR_5 FFDA                                       STR_6 FFE4  
                                     STR_7 FFB9                                       STR_8 FFAC  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u1530 0226  
                                     u1610 0568                                       u1700 074A  
                                     u1590 0198                                       u1967 0680  
                                     _TMR4 000F87                                       _WPUB 000F5B  
                                     _main 066E                            _TMR0_StartTimer 0A32  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       fsr0l 000FE9  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 003B                                       prodh 000FF4  
          __end_ofi2_GLCD_EnableController 08DA                                       prodl 000FF3  
                                     start 00B4                              __CFG_IESO$OFF 000000  
                            __CFG_MCLRE$ON 000000                        i2_GLCD_WriteCommand 07E4  
                             ___param_bank 000000            __size_of_GLCD_DisableController 0026  
                      __size_of_GLCD_Delay 0004                    __end_of_TMR0_Initialize 06E2  
           ??_TMR0_DefaultInterruptHandler 0001                    __end_of_GLCD_ReadStatus 0840  
           __size_of_OSCILLATOR_Initialize 0012              __end_of_OSCILLATOR_Initialize 0A00  
                     _Clear_runTime_Arrows 0570                                      ?_main 0001  
                          __end_of___awdiv 0264                                      _EEADR 000F74  
                             ?i2_GLCD_GoTo 000C          __end_of_IOCB4_SetInterruptHandler 0A1E  
                                    _T0CON 000FD5                            ___awdiv@divisor 0062  
                                    _T4CON 000F88                                      i2l157 005E  
                                    i2l503 08EA                                      i2l159 0068  
                                    i2l504 08DE                                      i2l506 08E2  
                                    i2l442 0378                                      i2l507 08E6  
                                    i2l454 063A                                      i2l495 08C4  
                                    i2l496 08B8                                      i2l498 08BC  
                                    i2l499 08C0                                      i2l781 02C6  
                                    i2l782 02D0                                      i2l774 0278  
                                    i2l783 02DE                                      i2l775 0288  
                                    i2l777 02A6                                      i2l778 029E  
                          ___awdiv@counter 0064                                      _TMR0H 000FD7  
                                    _TMR0L 000FD6                                      _PORTA 000F80  
                                    _PORTB 000F81                                      _PORTC 000F82  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                                 _Draw_Arrow 09B2  
        __size_of_TMR0_SetInterruptHandler 000A                              __CFG_WRT0$OFF 000000  
                          _TMR4_Initialize 099E                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                  ?_TMR0_SetInterruptHandler 0025  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
              __size_of_Clear_Arrow_Column 005E                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                       ?i2_GLCD_WriteCommand 0009  
                         __end_of_TMR0_ISR 0868                                 _Make_Arrow 09DA  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                            __end_of_font5x8 FFAB  
                           __CFG_EBTRB$OFF 000000                    __end_of_PIN_MANAGER_IOC 0362  
                                    _color FFAB                                      pclath 000FFA  
                                    tablat 000FF5                     ??_GLCD_InitializePorts 0025  
                                    status 000FD8                                      wtemp6 003C  
                       __size_ofi2___awdiv 0084                            __initialization 06E2  
                             __end_of_main 06A8                          __end_of_GLCD_GoTo 01DE  
              ?_INTERRUPT_InterruptManager 0001                  __size_of_Initialize_Menus 009E  
                    ?_Clear_runTime_Arrows 0001                        Clear_Arrow_Column@i 0075  
                      Clear_Arrow_Column@j 0074                                     ??_main 0076  
                            __activetblptr 000003                             __CFG_RETEN$OFF 000000  
                    ??i2_GLCD_WriteCommand 000A                    __end_of_TMR0_StartTimer 0A36  
        __size_ofi2_GLCD_DisableController 0026                              ?i2_GLCD_Delay 0001  
                                   _EEADRH 000F75                                     _EEDATA 000F73  
                                   _CCPR1H 000FBD                                     _CCPR1L 000FBC  
                                   _EECON2 000F7E                                     _ANCON0 000F5D  
                                   _ANCON1 000F5C                  ?i2_GLCD_DisableController 0001  
                   _GLCD_DisableController 088E                           ___awdiv@dividend 0060  
                          __CFG_BBSIZ$BB2K 000000                                     i2l2510 07E6  
                                   i2l2530 0454                             __CFG_WDTEN$OFF 000000  
                                   i2l2638 0370                                     i2l2654 062A  
                                   i2l2664 0666                                     _TABLAT 000FF5  
                                   _OSCCON 000FD3                  __size_ofi2_GLCD_WriteChar 0052  
                __size_ofi2_GLCD_WriteData 0068                            _TMR4_StartTimer 0A2E  
                         _GLCD_WriteString 07B4                             __CFG_XINST$OFF 000000  
                                ??___awdiv 0025                             __CFG_STVREN$ON 000000  
                         ?_TMR0_Initialize 0001                    __end_of_TMR4_Initialize 09B2  
                         ___awdiv@quotient 0066                           ?_GLCD_ReadStatus 0001  
                   __size_of_Check_Buttons 0022                             i2___awdiv@sign 0006  
                             __pdataCOMRAM 0035                                ?_Draw_Arrow 0001  
                        __end_ofi2___awdiv 02E8                               __mediumconst FDCA  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
         __size_ofi2_GLCD_EnableController 0026                                     tblptru 000FF8  
                    _GLCD_EnableController 0868                                ?_Make_Arrow 0001  
                           ??i2_GLCD_Delay 0001                               ??_GLCD_Delay 0025  
 TMR0_SetInterruptHandler@InterruptHandler 0025  IOCB5_SetInterruptHandler@InterruptHandler 0025  
IOCB4_SetInterruptHandler@InterruptHandler 0025                           ?_PIN_MANAGER_IOC 0001  
            __size_of_INTERRUPT_Initialize 0004                          _SYSTEM_Initialize 0984  
                               __accesstop 0060                    __end_of__initialization 070E  
            GLCD_WriteString@stringToWrite 006C                         ?_SYSTEM_Initialize 0001  
                            ___rparam_used 000001                            GLCD_WriteChar@i 006A  
                        ?_GLCD_ClearScreen 0001                               i2GLCD_GoTo@i 000E  
                             i2GLCD_GoTo@x 000D                               i2GLCD_GoTo@y 000C  
                        ?_EPWM1_Initialize 0001                             __pcstackCOMRAM 0001  
                       ??_GLCD_ClearScreen 0027                        ??_SYSTEM_Initialize 0027  
                                ?_TMR0_ISR 0001                         ??_EPWM1_Initialize 0025  
                            __end_of_color FFAC                     ??_Clear_runTime_Arrows 0027  
             PIN_MANAGER_IOC@previousState 0031              _IOCB4_DefaultInterruptHandler 000000  
                       __end_of_GLCD_Delay 0A3E                    __size_of_GLCD_Initalize 0022  
              ??_IOCB4_SetInterruptHandler 0027                         _Draw_runTime_Arrow 09C6  
                     __size_ofi2_GLCD_GoTo 007A                           ?_TMR0_StartTimer 0001  
                      ?_Draw_runTime_Arrow 0001                    __end_of_TMR4_StartTimer 0A32  
                __end_of_SYSTEM_Initialize 099E                            __CFG_PLLCFG$OFF 000000  
                            _Check_Buttons 0946                                 __pnvCOMRAM 0027  
                      __size_of_Draw_Arrow 0014           __end_of_TMR0_SetInterruptHandler 0A0A  
                     ??_Draw_runTime_Arrow 0027                        __size_of_Make_Arrow 0014  
                               ??_TMR0_ISR 0001                                    _CCP1CON 000FBB  
                                  _ECCP1AS 000FBF                           _Initialize_Menus 00B8  
                  __size_of_GLCD_WriteChar 0058                    __size_of_GLCD_WriteData 0076  
                        GLCD_ClearScreen@i 006D                          GLCD_ClearScreen@j 006E  
       __size_of_IOCB5_SetInterruptHandler 000A                           ?_TMR4_Initialize 0001  
               ?_IOCB5_SetInterruptHandler 0025                           __CFG_CANMX$PORTB 000000  
                   ?_GLCD_EnableController 0001                                    _REFOCON 000F9A  
                GLCD_ReadStatus@controller 0061                                    _OSCCON2 000FD2  
                                  _TBLPTRH 000FF7                                    _TBLPTRL 000FF6  
                                  _TBLPTRU 000FF8                                    i2u40_48 0856  
                        _GLCD_WriteCommand 074E                                    _OSCTUNE 000F9B  
                                  i2u99_40 02AA                         ?_GLCD_WriteCommand 0026  
                           ?_Check_Buttons 0001                           i2_GLCD_WriteChar 061C  
                         i2_GLCD_WriteData 0452                  _IOCB4_SetInterruptHandler 0A14  
                      ??_GLCD_WriteCommand 0068                                 _xMenuStart 0036  
                          __CFG_PWRTEN$OFF 000000                                    __Hparam 0000  
              i2GLCD_WriteChar@charToWrite 000B                                    __Lparam 0000  
                                  ___awdiv 01DE                       __end_ofi2_GLCD_Delay 0A42  
         __end_ofi2_GLCD_DisableController 0900                                    __pcinit 06E2  
                                  __ramtop 0F00                                    __ptext0 066E  
                                  __ptext1 0984                                    __ptext2 099E  
                                  __ptext3 0A2E                                    __ptext4 06A8  
                                  __ptext5 0A32                                    __ptext6 0A00  
                                  __ptext7 05C8                                    __ptext8 0A0A  
                                  __ptext9 0A14                                  _GLCD_GoTo 0156  
                                _T0CONbits 000FD5          __end_of_IOCB5_SetInterruptHandler 0A14  
                                  _font5x8 FDCB                 __end_of_Clear_Arrow_Column 0518  
                    _OSCILLATOR_Initialize 09EE                  __end_of_GLCD_WriteCommand 0782  
                  i2_GLCD_EnableController 08B4                   __end_of_GLCD_WriteString 07E4  
                                _T4CONbits 000F88                    ?_GLCD_DisableController 0001  
                 ??_PIN_MANAGER_Initialize 0027                          __CFG_MSSPMSK$MSK7 000000  
                    GLCD_ReadStatus@status 0060                 __size_of_SYSTEM_Initialize 001A  
                         ?_TMR4_StartTimer 0001                       end_of_initialization 070E  
            __size_of_GLCD_InitializePorts 000A                                 GLCD_GoTo@i 006C  
                               GLCD_GoTo@x 006B                                 GLCD_GoTo@y 006A  
              i2GLCD_WriteData@dataToWrite 000A                                    postdec1 000FE5  
                                  postinc0 000FEE                      Clear_runTime_Arrows@i 006D  
              __end_ofi2_GLCD_WriteCommand 0814                             _GLCD_Initalize 0924  
                 _TMR0_SetInterruptHandler 0A00                                  _PORTBbits 000F81  
                               ?_GLCD_GoTo 006A             __end_of_GLCD_DisableController 08B4  
                             ??_Draw_Arrow 0027                           __CFG_FOSC$INTIO2 000000  
                             ??_Make_Arrow 0027                            ??_Check_Buttons 0027  
                                i2___awdiv 0264                         i2___awdiv@dividend 0001  
                       __end_of_Draw_Arrow 09C6               __end_of_INTERRUPT_Initialize 0A3A  
                   __end_of_GLCD_Initalize 0946                         __end_of_Make_Arrow 09EE  
                           _GLCD_WriteChar 0518                             _GLCD_WriteData 03DC  
                    PIN_MANAGER_IOC@result 0011                              __pidataCOMRAM 0A28  
                        __size_of_TMR0_ISR 0028                  ??i2_GLCD_EnableController 0001  
                   ?_OSCILLATOR_Initialize 0001                           _timeAfterFinishX 0038  
                __size_of_GLCD_ClearScreen 0036                 __size_of_GLCD_WriteCommand 0034  
                 i2_GLCD_DisableController 08DA                        start_initialization 06E2  
                __size_of_EPWM1_Initialize 001C                         i2___awdiv@quotient 0007  
                 __size_of_TMR0_Initialize 003A            __size_of_PIN_MANAGER_Initialize 0054  
                 __size_of_GLCD_ReadStatus 002C                                 ?i2___awdiv 0001  
                 __end_of_Initialize_Menus 0156                      __size_ofi2_GLCD_Delay 0004  
                 __size_of_PIN_MANAGER_IOC 007A                             _currentContext 0033  
                   __end_of_GLCD_WriteChar 0570                     __end_of_GLCD_WriteData 0452  
                              _CCPTMRSbits 000F99                            ?_GLCD_Initalize 0001  
                 __end_ofi2_GLCD_WriteChar 066E                   __end_ofi2_GLCD_WriteData 04BA  
                  ??_GLCD_EnableController 0025              __size_of_Clear_runTime_Arrows 0058  
                            ??i2_GLCD_GoTo 000D                                ??_GLCD_GoTo 0027  
            _IOCB5_DefaultInterruptHandler 000000                ??_IOCB5_SetInterruptHandler 0027  
                  i2GLCD_ReadStatus@status 0002                                __pbssCOMRAM 002F  
                            __pcstackBANK0 0060                          i2_GLCD_ReadStatus 0900  
                             i2_GLCD_Delay 0A3E                          _Draw_runTime_Menu 0782  
                       ?i2_GLCD_ReadStatus 0001                         ?_Draw_runTime_Menu 0001  
                    _TMR0_InterruptHandler 0029                   __size_of_TMR0_StartTimer 0004  
                      ??i2_GLCD_ReadStatus 0002                     _PIN_MANAGER_Initialize 05C8  
                      ??_Draw_runTime_Menu 0027                                  __pintcode 0008  
                          ?_GLCD_WriteChar 0001                            ?_GLCD_WriteData 0001  
                            __pmediumconst FDCA                                   ?___awdiv 0060  
              __size_of_Draw_runTime_Arrow 0014               ??_INTERRUPT_InterruptManager 0013  
                                _mainState 0034                                   _ECCP1DEL 000FBE  
                __end_ofi2_GLCD_ReadStatus 0924                          ?_GLCD_WriteString 006C  
                 __size_of_TMR4_Initialize 0014                        __end_ofi2_GLCD_GoTo 03DC  
                __end_of_Draw_runTime_Menu 07B4                                ??i2___awdiv 0005  
                       ??_GLCD_WriteString 0027                       _INTERRUPT_Initialize 0A36  
                       _Clear_Arrow_Column 04BA                  _IOCB5_SetInterruptHandler 0A0A  
                        ??_TMR0_Initialize 0060                          ??_GLCD_ReadStatus 0026  
                                 _IOCBbits 000F5A                                   _LATEbits 000F8D  
          GLCD_EnableController@controller 0025          i2GLCD_EnableController@controller 0001  
                                 i2u120_40 032A                                   i2u120_46 032C  
                                 i2u121_40 033A                                   i2u121_46 033C  
                                 i2u115_40 039C                                   i2u117_40 0666  
                                 i2u118_40 0302                                   i2u119_40 030E  
                                 i2u118_48 0304        __size_of_INTERRUPT_InterruptManager 00AC  
                                 i2u119_48 0310                 ??_TMR0_SetInterruptHandler 0027  
                      ?_Clear_Arrow_Column 0001                                   i2u197_47 02EE  
                                 _PIR4bits 000FB7                                   _RCONbits 000FD0  
                                 _TMR0_ISR 0840                                   _PSTR1CON 000F9C  
                        ??_PIN_MANAGER_IOC 000F               __end_of_GLCD_InitializePorts 0A28  
                         __CFG_SOSCSEL$DIG 000000                           _GLCD_ClearScreen 0718  
                         _EPWM1_Initialize 0968                          i2___awdiv@divisor 0003  
                     ??_Clear_Arrow_Column 006D                          i2___awdiv@counter 0005  
                                copy_data0 06F6                      ?_INTERRUPT_Initialize 0001  
                               _EECON1bits 000F7F                   __size_of_TMR4_StartTimer 0004  
                                 __Hrparam 0000                                   __Lrparam 0000  
                       __CFG_BOREN$SBORDIS 000000                    ??_OSCILLATOR_Initialize 0025  
               ??i2_GLCD_DisableController 0001                          ??_TMR0_StartTimer 0025  
                         __size_of___awdiv 0086                     _IOCB4_InterruptHandler 002D  
                              i2_GLCD_GoTo 0362                i2GLCD_ReadStatus@controller 0003  
               __size_ofi2_GLCD_ReadStatus 0024               __size_ofi2_GLCD_WriteCommand 0030  
                                 __ptext10 09EE                                   __ptext11 0A36  
                                 __ptext20 0518                                   __ptext12 0968  
                                 __ptext21 09B2                                   __ptext13 0924  
                                 __ptext30 0814                                   __ptext22 09C6  
                                 __ptext14 0A1E                                   __ptext31 0868  
                                 __ptext23 09DA                                   __ptext15 0946  
                                 __ptext40 0362                                   __ptext32 088E  
                                 __ptext24 0570                                   __ptext16 00B8  
                                 __ptext41 0264                                   __ptext33 0A3A  
                                 __ptext25 04BA                                   __ptext17 0718  
                                 __ptext42 07E4                                   __ptext26 03DC  
                                 __ptext18 0782                                   __ptext43 0900  
                                 __ptext35 0840                                   __ptext27 0156  
                                 __ptext19 07B4                                   __ptext44 08B4  
                                 __ptext36 0A42                                   __ptext28 01DE  
               __size_of_Draw_runTime_Menu 0032                                   __ptext45 08DA  
                                 __ptext37 02E8                                   __ptext29 074E  
                                 __ptext46 0A3E                                   __ptext38 061C  
                                 __ptext47 0000                                   __ptext39 0452  
                               _GLCD_Delay 0A3A                      __end_of_Check_Buttons 0968  
                        ?_Initialize_Menus 0001                          ??_TMR4_Initialize 0025  
                            __size_of_main 003A              i2GLCD_WriteCommand@controller 0009  
                               _ARROW_SIZE 0037       __end_of_TMR0_DefaultInterruptHandler 0A44  
    __size_of_TMR0_DefaultInterruptHandler 0002               _TMR0_DefaultInterruptHandler 0A42  
                       ??_Initialize_Menus 0027                           ??_GLCD_Initalize 0027  
                                 _screen_x 0030                                   _screen_y 002F  
                                 _subMenuY 003A                                   int$flags 003B  
                                 _runTimeX 0039         __end_of_INTERRUPT_InterruptManager 00B4  
               _INTERRUPT_InterruptManager 0008                        __CFG_INTOSCSEL$HIGH 000000  
                        ?i2_GLCD_WriteChar 0001                          ?i2_GLCD_WriteData 0001  
           __size_of_GLCD_EnableController 0026              __end_of_GLCD_EnableController 088E  
                               _INTCONbits 000FF2                         ??i2_GLCD_WriteChar 000B  
                       ??i2_GLCD_WriteData 0009                     ??_INTERRUPT_Initialize 0025  
                             _valuesXStart 0035                                   intlevel2 0000  
             __end_of_Clear_runTime_Arrows 05C8                    ?_PIN_MANAGER_Initialize 0001  
                         ??_GLCD_WriteChar 0027                           ??_GLCD_WriteData 0026  
                     _GLCD_InitializePorts 0A1E              ?_TMR0_DefaultInterruptHandler 0001  
                GLCD_WriteChar@charToWrite 0069                          i2GLCD_WriteChar@i 000C  
                 ?i2_GLCD_EnableController 0001                   ??_GLCD_DisableController 0025  
                       __CFG_WDTPS$1048576 000000                          ??_TMR4_StartTimer 0025  
                          _TMR0_Initialize 06A8                            _GLCD_ReadStatus 0814  
                              ?_GLCD_Delay 0001             __end_of_PIN_MANAGER_Initialize 061C  
                      __CFG_BORPWR$ZPBORMV 000000                     _IOCB5_InterruptHandler 002B  
                          _PIN_MANAGER_IOC 02E8                      ?_GLCD_InitializePorts 0001  
                           _runTimeContext 0032                   __end_of_GLCD_ClearScreen 074E  
                __size_of_GLCD_WriteString 0030          i2GLCD_WriteCommand@commandToWrite 000B  
          GLCD_WriteCommand@commandToWrite 0069                   __end_of_EPWM1_Initialize 0984  
               __end_of_Draw_runTime_Arrow 09DA  
