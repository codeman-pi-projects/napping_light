

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jul 29 22:11:03 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   107                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   108  0000                     
   109                           ; Version 1.45
   110                           ; Generated 16/11/2017 GMT
   111                           ; 
   112                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   113                           ; All rights reserved.
   114                           ; 
   115                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   116                           ; 
   117                           ; Redistribution and use in source and binary forms, with or without modification, are
   118                           ; permitted provided that the following conditions are met:
   119                           ; 
   120                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   121                           ;        conditions and the following disclaimer.
   122                           ; 
   123                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   124                           ;        of conditions and the following disclaimer in the documentation and/or other
   125                           ;        materials provided with the distribution.
   126                           ; 
   127                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   128                           ;        software without specific prior written permission.
   129                           ; 
   130                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   131                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   132                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   133                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   134                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   135                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   136                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   137                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   138                           ; 
   139                           ; 
   140                           ; Code-generator required, PIC18F46K80 Definitions
   141                           ; 
   142                           ; SFR Addresses
   143  0000                     
   144                           	psect	idataCOMRAM
   145  002512                     __pidataCOMRAM:
   146                           	opt stack 0
   147                           
   148                           ;initializer for _appliedBrightness
   149  002512  00                 	db	0
   150  002513  00                 	db	0
   151  002514  44                 	db	68
   152                           
   153                           ;initializer for _brightnessPercent
   154  002515  00                 	db	0
   155  002516  04                 	db	4
   156  002517  42                 	db	66
   157                           
   158                           ;initializer for _maxBrightness
   159  002518  03FF               	dw	1023
   160                           
   161                           ;initializer for _valuesXStart
   162  00251A  50                 	db	80
   163                           
   164                           ;initializer for _timeAfterFinishX
   165  00251B  41                 	db	65
   166                           
   167                           ;initializer for _subMenuY
   168  00251C  03                 	db	3
   169                           
   170                           	psect	idataBANK0
   171  002546                     __pidataBANK0:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _xMenuStart
   175  002546  04                 	db	4
   176                           
   177                           ;initializer for _ARROW_SIZE
   178  002547  04                 	db	4
   179                           
   180                           ;initializer for _runTimeX
   181  002548  0A                 	db	10
   182                           
   183                           	psect	mediumconst
   184  00FD84                     __pmediumconst:
   185                           	opt stack 0
   186  00FD84  00                 	db	0
   187  00FD85                     _font5x8:
   188                           	opt stack 0
   189  00FD85  00                 	db	0
   190  00FD86  00                 	db	0
   191  00FD87  00                 	db	0
   192  00FD88  00                 	db	0
   193  00FD89  00                 	db	0
   194  00FD8A  00                 	db	0
   195  00FD8B  00                 	db	0
   196  00FD8C  5F                 	db	95
   197  00FD8D  00                 	db	0
   198  00FD8E  00                 	db	0
   199  00FD8F  00                 	db	0
   200  00FD90  07                 	db	7
   201  00FD91  00                 	db	0
   202  00FD92  07                 	db	7
   203  00FD93  00                 	db	0
   204  00FD94  14                 	db	20
   205  00FD95  7F                 	db	127
   206  00FD96  14                 	db	20
   207  00FD97  7F                 	db	127
   208  00FD98  14                 	db	20
   209  00FD99  24                 	db	36
   210  00FD9A  2A                 	db	42
   211  00FD9B  7F                 	db	127
   212  00FD9C  2A                 	db	42
   213  00FD9D  12                 	db	18
   214  00FD9E  23                 	db	35
   215  00FD9F  13                 	db	19
   216  00FDA0  08                 	db	8
   217  00FDA1  64                 	db	100
   218  00FDA2  62                 	db	98
   219  00FDA3  36                 	db	54
   220  00FDA4  49                 	db	73
   221  00FDA5  55                 	db	85
   222  00FDA6  22                 	db	34
   223  00FDA7  50                 	db	80
   224  00FDA8  00                 	db	0
   225  00FDA9  05                 	db	5
   226  00FDAA  03                 	db	3
   227  00FDAB  00                 	db	0
   228  00FDAC  00                 	db	0
   229  00FDAD  00                 	db	0
   230  00FDAE  1C                 	db	28
   231  00FDAF  22                 	db	34
   232  00FDB0  41                 	db	65
   233  00FDB1  00                 	db	0
   234  00FDB2  00                 	db	0
   235  00FDB3  41                 	db	65
   236  00FDB4  22                 	db	34
   237  00FDB5  1C                 	db	28
   238  00FDB6  00                 	db	0
   239  00FDB7  08                 	db	8
   240  00FDB8  2A                 	db	42
   241  00FDB9  1C                 	db	28
   242  00FDBA  2A                 	db	42
   243  00FDBB  08                 	db	8
   244  00FDBC  08                 	db	8
   245  00FDBD  08                 	db	8
   246  00FDBE  3E                 	db	62
   247  00FDBF  08                 	db	8
   248  00FDC0  08                 	db	8
   249  00FDC1  00                 	db	0
   250  00FDC2  50                 	db	80
   251  00FDC3  30                 	db	48
   252  00FDC4  00                 	db	0
   253  00FDC5  00                 	db	0
   254  00FDC6  08                 	db	8
   255  00FDC7  08                 	db	8
   256  00FDC8  08                 	db	8
   257  00FDC9  08                 	db	8
   258  00FDCA  08                 	db	8
   259  00FDCB  00                 	db	0
   260  00FDCC  30                 	db	48
   261  00FDCD  30                 	db	48
   262  00FDCE  00                 	db	0
   263  00FDCF  00                 	db	0
   264  00FDD0  20                 	db	32
   265  00FDD1  10                 	db	16
   266  00FDD2  08                 	db	8
   267  00FDD3  04                 	db	4
   268  00FDD4  02                 	db	2
   269  00FDD5  3E                 	db	62
   270  00FDD6  51                 	db	81
   271  00FDD7  49                 	db	73
   272  00FDD8  45                 	db	69
   273  00FDD9  3E                 	db	62
   274  00FDDA  00                 	db	0
   275  00FDDB  42                 	db	66
   276  00FDDC  7F                 	db	127
   277  00FDDD  40                 	db	64
   278  00FDDE  00                 	db	0
   279  00FDDF  42                 	db	66
   280  00FDE0  61                 	db	97
   281  00FDE1  51                 	db	81
   282  00FDE2  49                 	db	73
   283  00FDE3  46                 	db	70
   284  00FDE4  21                 	db	33
   285  00FDE5  41                 	db	65
   286  00FDE6  45                 	db	69
   287  00FDE7  4B                 	db	75
   288  00FDE8  31                 	db	49
   289  00FDE9  18                 	db	24
   290  00FDEA  14                 	db	20
   291  00FDEB  12                 	db	18
   292  00FDEC  7F                 	db	127
   293  00FDED  10                 	db	16
   294  00FDEE  27                 	db	39
   295  00FDEF  45                 	db	69
   296  00FDF0  45                 	db	69
   297  00FDF1  45                 	db	69
   298  00FDF2  39                 	db	57
   299  00FDF3  3C                 	db	60
   300  00FDF4  4A                 	db	74
   301  00FDF5  49                 	db	73
   302  00FDF6  49                 	db	73
   303  00FDF7  30                 	db	48
   304  00FDF8  01                 	db	1
   305  00FDF9  71                 	db	113
   306  00FDFA  09                 	db	9
   307  00FDFB  05                 	db	5
   308  00FDFC  03                 	db	3
   309  00FDFD  36                 	db	54
   310  00FDFE  49                 	db	73
   311  00FDFF  49                 	db	73
   312  00FE00  49                 	db	73
   313  00FE01  36                 	db	54
   314  00FE02  06                 	db	6
   315  00FE03  49                 	db	73
   316  00FE04  49                 	db	73
   317  00FE05  29                 	db	41
   318  00FE06  1E                 	db	30
   319  00FE07  00                 	db	0
   320  00FE08  36                 	db	54
   321  00FE09  36                 	db	54
   322  00FE0A  00                 	db	0
   323  00FE0B  00                 	db	0
   324  00FE0C  00                 	db	0
   325  00FE0D  56                 	db	86
   326  00FE0E  36                 	db	54
   327  00FE0F  00                 	db	0
   328  00FE10  00                 	db	0
   329  00FE11  00                 	db	0
   330  00FE12  08                 	db	8
   331  00FE13  14                 	db	20
   332  00FE14  22                 	db	34
   333  00FE15  41                 	db	65
   334  00FE16  14                 	db	20
   335  00FE17  14                 	db	20
   336  00FE18  14                 	db	20
   337  00FE19  14                 	db	20
   338  00FE1A  14                 	db	20
   339  00FE1B  41                 	db	65
   340  00FE1C  22                 	db	34
   341  00FE1D  14                 	db	20
   342  00FE1E  08                 	db	8
   343  00FE1F  00                 	db	0
   344  00FE20  02                 	db	2
   345  00FE21  01                 	db	1
   346  00FE22  51                 	db	81
   347  00FE23  09                 	db	9
   348  00FE24  06                 	db	6
   349  00FE25  32                 	db	50
   350  00FE26  49                 	db	73
   351  00FE27  79                 	db	121
   352  00FE28  41                 	db	65
   353  00FE29  3E                 	db	62
   354  00FE2A  7E                 	db	126
   355  00FE2B  11                 	db	17
   356  00FE2C  11                 	db	17
   357  00FE2D  11                 	db	17
   358  00FE2E  7E                 	db	126
   359  00FE2F  7F                 	db	127
   360  00FE30  49                 	db	73
   361  00FE31  49                 	db	73
   362  00FE32  49                 	db	73
   363  00FE33  36                 	db	54
   364  00FE34  3E                 	db	62
   365  00FE35  41                 	db	65
   366  00FE36  41                 	db	65
   367  00FE37  41                 	db	65
   368  00FE38  22                 	db	34
   369  00FE39  7F                 	db	127
   370  00FE3A  41                 	db	65
   371  00FE3B  41                 	db	65
   372  00FE3C  22                 	db	34
   373  00FE3D  1C                 	db	28
   374  00FE3E  7F                 	db	127
   375  00FE3F  49                 	db	73
   376  00FE40  49                 	db	73
   377  00FE41  49                 	db	73
   378  00FE42  41                 	db	65
   379  00FE43  7F                 	db	127
   380  00FE44  09                 	db	9
   381  00FE45  09                 	db	9
   382  00FE46  01                 	db	1
   383  00FE47  01                 	db	1
   384  00FE48  3E                 	db	62
   385  00FE49  41                 	db	65
   386  00FE4A  41                 	db	65
   387  00FE4B  51                 	db	81
   388  00FE4C  32                 	db	50
   389  00FE4D  7F                 	db	127
   390  00FE4E  08                 	db	8
   391  00FE4F  08                 	db	8
   392  00FE50  08                 	db	8
   393  00FE51  7F                 	db	127
   394  00FE52  00                 	db	0
   395  00FE53  41                 	db	65
   396  00FE54  7F                 	db	127
   397  00FE55  41                 	db	65
   398  00FE56  00                 	db	0
   399  00FE57  20                 	db	32
   400  00FE58  40                 	db	64
   401  00FE59  41                 	db	65
   402  00FE5A  3F                 	db	63
   403  00FE5B  01                 	db	1
   404  00FE5C  7F                 	db	127
   405  00FE5D  08                 	db	8
   406  00FE5E  14                 	db	20
   407  00FE5F  22                 	db	34
   408  00FE60  41                 	db	65
   409  00FE61  7F                 	db	127
   410  00FE62  40                 	db	64
   411  00FE63  40                 	db	64
   412  00FE64  40                 	db	64
   413  00FE65  40                 	db	64
   414  00FE66  7F                 	db	127
   415  00FE67  02                 	db	2
   416  00FE68  04                 	db	4
   417  00FE69  02                 	db	2
   418  00FE6A  7F                 	db	127
   419  00FE6B  7F                 	db	127
   420  00FE6C  04                 	db	4
   421  00FE6D  08                 	db	8
   422  00FE6E  10                 	db	16
   423  00FE6F  7F                 	db	127
   424  00FE70  3E                 	db	62
   425  00FE71  41                 	db	65
   426  00FE72  41                 	db	65
   427  00FE73  41                 	db	65
   428  00FE74  3E                 	db	62
   429  00FE75  7F                 	db	127
   430  00FE76  09                 	db	9
   431  00FE77  09                 	db	9
   432  00FE78  09                 	db	9
   433  00FE79  06                 	db	6
   434  00FE7A  3E                 	db	62
   435  00FE7B  41                 	db	65
   436  00FE7C  51                 	db	81
   437  00FE7D  21                 	db	33
   438  00FE7E  5E                 	db	94
   439  00FE7F  7F                 	db	127
   440  00FE80  09                 	db	9
   441  00FE81  19                 	db	25
   442  00FE82  29                 	db	41
   443  00FE83  46                 	db	70
   444  00FE84  46                 	db	70
   445  00FE85  49                 	db	73
   446  00FE86  49                 	db	73
   447  00FE87  49                 	db	73
   448  00FE88  31                 	db	49
   449  00FE89  01                 	db	1
   450  00FE8A  01                 	db	1
   451  00FE8B  7F                 	db	127
   452  00FE8C  01                 	db	1
   453  00FE8D  01                 	db	1
   454  00FE8E  3F                 	db	63
   455  00FE8F  40                 	db	64
   456  00FE90  40                 	db	64
   457  00FE91  40                 	db	64
   458  00FE92  3F                 	db	63
   459  00FE93  1F                 	db	31
   460  00FE94  20                 	db	32
   461  00FE95  40                 	db	64
   462  00FE96  20                 	db	32
   463  00FE97  1F                 	db	31
   464  00FE98  7F                 	db	127
   465  00FE99  20                 	db	32
   466  00FE9A  18                 	db	24
   467  00FE9B  20                 	db	32
   468  00FE9C  7F                 	db	127
   469  00FE9D  63                 	db	99
   470  00FE9E  14                 	db	20
   471  00FE9F  08                 	db	8
   472  00FEA0  14                 	db	20
   473  00FEA1  63                 	db	99
   474  00FEA2  03                 	db	3
   475  00FEA3  04                 	db	4
   476  00FEA4  78                 	db	120
   477  00FEA5  04                 	db	4
   478  00FEA6  03                 	db	3
   479  00FEA7  61                 	db	97
   480  00FEA8  51                 	db	81
   481  00FEA9  49                 	db	73
   482  00FEAA  45                 	db	69
   483  00FEAB  43                 	db	67
   484  00FEAC  00                 	db	0
   485  00FEAD  00                 	db	0
   486  00FEAE  7F                 	db	127
   487  00FEAF  41                 	db	65
   488  00FEB0  41                 	db	65
   489  00FEB1  02                 	db	2
   490  00FEB2  04                 	db	4
   491  00FEB3  08                 	db	8
   492  00FEB4  10                 	db	16
   493  00FEB5  20                 	db	32
   494  00FEB6  41                 	db	65
   495  00FEB7  41                 	db	65
   496  00FEB8  7F                 	db	127
   497  00FEB9  00                 	db	0
   498  00FEBA  00                 	db	0
   499  00FEBB  04                 	db	4
   500  00FEBC  02                 	db	2
   501  00FEBD  01                 	db	1
   502  00FEBE  02                 	db	2
   503  00FEBF  04                 	db	4
   504  00FEC0  40                 	db	64
   505  00FEC1  40                 	db	64
   506  00FEC2  40                 	db	64
   507  00FEC3  40                 	db	64
   508  00FEC4  40                 	db	64
   509  00FEC5  00                 	db	0
   510  00FEC6  01                 	db	1
   511  00FEC7  02                 	db	2
   512  00FEC8  04                 	db	4
   513  00FEC9  00                 	db	0
   514  00FECA  20                 	db	32
   515  00FECB  54                 	db	84
   516  00FECC  54                 	db	84
   517  00FECD  54                 	db	84
   518  00FECE  78                 	db	120
   519  00FECF  7F                 	db	127
   520  00FED0  48                 	db	72
   521  00FED1  44                 	db	68
   522  00FED2  44                 	db	68
   523  00FED3  38                 	db	56
   524  00FED4  38                 	db	56
   525  00FED5  44                 	db	68
   526  00FED6  44                 	db	68
   527  00FED7  44                 	db	68
   528  00FED8  20                 	db	32
   529  00FED9  38                 	db	56
   530  00FEDA  44                 	db	68
   531  00FEDB  44                 	db	68
   532  00FEDC  48                 	db	72
   533  00FEDD  7F                 	db	127
   534  00FEDE  38                 	db	56
   535  00FEDF  54                 	db	84
   536  00FEE0  54                 	db	84
   537  00FEE1  54                 	db	84
   538  00FEE2  18                 	db	24
   539  00FEE3  08                 	db	8
   540  00FEE4  7E                 	db	126
   541  00FEE5  09                 	db	9
   542  00FEE6  01                 	db	1
   543  00FEE7  02                 	db	2
   544  00FEE8  08                 	db	8
   545  00FEE9  14                 	db	20
   546  00FEEA  54                 	db	84
   547  00FEEB  54                 	db	84
   548  00FEEC  3C                 	db	60
   549  00FEED  7F                 	db	127
   550  00FEEE  08                 	db	8
   551  00FEEF  04                 	db	4
   552  00FEF0  04                 	db	4
   553  00FEF1  78                 	db	120
   554  00FEF2  00                 	db	0
   555  00FEF3  44                 	db	68
   556  00FEF4  7D                 	db	125
   557  00FEF5  40                 	db	64
   558  00FEF6  00                 	db	0
   559  00FEF7  20                 	db	32
   560  00FEF8  40                 	db	64
   561  00FEF9  44                 	db	68
   562  00FEFA  3D                 	db	61
   563  00FEFB  00                 	db	0
   564  00FEFC  00                 	db	0
   565  00FEFD  7F                 	db	127
   566  00FEFE  10                 	db	16
   567  00FEFF  28                 	db	40
   568  00FF00  44                 	db	68
   569  00FF01  00                 	db	0
   570  00FF02  41                 	db	65
   571  00FF03  7F                 	db	127
   572  00FF04  40                 	db	64
   573  00FF05  00                 	db	0
   574  00FF06  7C                 	db	124
   575  00FF07  04                 	db	4
   576  00FF08  18                 	db	24
   577  00FF09  04                 	db	4
   578  00FF0A  78                 	db	120
   579  00FF0B  7C                 	db	124
   580  00FF0C  08                 	db	8
   581  00FF0D  04                 	db	4
   582  00FF0E  04                 	db	4
   583  00FF0F  78                 	db	120
   584  00FF10  38                 	db	56
   585  00FF11  44                 	db	68
   586  00FF12  44                 	db	68
   587  00FF13  44                 	db	68
   588  00FF14  38                 	db	56
   589  00FF15  7C                 	db	124
   590  00FF16  14                 	db	20
   591  00FF17  14                 	db	20
   592  00FF18  14                 	db	20
   593  00FF19  08                 	db	8
   594  00FF1A  08                 	db	8
   595  00FF1B  14                 	db	20
   596  00FF1C  14                 	db	20
   597  00FF1D  18                 	db	24
   598  00FF1E  7C                 	db	124
   599  00FF1F  7C                 	db	124
   600  00FF20  08                 	db	8
   601  00FF21  04                 	db	4
   602  00FF22  04                 	db	4
   603  00FF23  08                 	db	8
   604  00FF24  48                 	db	72
   605  00FF25  54                 	db	84
   606  00FF26  54                 	db	84
   607  00FF27  54                 	db	84
   608  00FF28  20                 	db	32
   609  00FF29  04                 	db	4
   610  00FF2A  3F                 	db	63
   611  00FF2B  44                 	db	68
   612  00FF2C  40                 	db	64
   613  00FF2D  20                 	db	32
   614  00FF2E  3C                 	db	60
   615  00FF2F  40                 	db	64
   616  00FF30  40                 	db	64
   617  00FF31  20                 	db	32
   618  00FF32  7C                 	db	124
   619  00FF33  1C                 	db	28
   620  00FF34  20                 	db	32
   621  00FF35  40                 	db	64
   622  00FF36  20                 	db	32
   623  00FF37  1C                 	db	28
   624  00FF38  3C                 	db	60
   625  00FF39  40                 	db	64
   626  00FF3A  30                 	db	48
   627  00FF3B  40                 	db	64
   628  00FF3C  3C                 	db	60
   629  00FF3D  44                 	db	68
   630  00FF3E  28                 	db	40
   631  00FF3F  10                 	db	16
   632  00FF40  28                 	db	40
   633  00FF41  44                 	db	68
   634  00FF42  0C                 	db	12
   635  00FF43  50                 	db	80
   636  00FF44  50                 	db	80
   637  00FF45  50                 	db	80
   638  00FF46  3C                 	db	60
   639  00FF47  44                 	db	68
   640  00FF48  64                 	db	100
   641  00FF49  54                 	db	84
   642  00FF4A  4C                 	db	76
   643  00FF4B  44                 	db	68
   644  00FF4C  00                 	db	0
   645  00FF4D  08                 	db	8
   646  00FF4E  36                 	db	54
   647  00FF4F  41                 	db	65
   648  00FF50  00                 	db	0
   649  00FF51  00                 	db	0
   650  00FF52  00                 	db	0
   651  00FF53  7F                 	db	127
   652  00FF54  00                 	db	0
   653  00FF55  00                 	db	0
   654  00FF56  00                 	db	0
   655  00FF57  41                 	db	65
   656  00FF58  36                 	db	54
   657  00FF59  08                 	db	8
   658  00FF5A  00                 	db	0
   659  00FF5B  08                 	db	8
   660  00FF5C  08                 	db	8
   661  00FF5D  2A                 	db	42
   662  00FF5E  1C                 	db	28
   663  00FF5F  08                 	db	8
   664  00FF60  08                 	db	8
   665  00FF61  1C                 	db	28
   666  00FF62  2A                 	db	42
   667  00FF63  08                 	db	8
   668  00FF64  08                 	db	8
   669  00FF65                     __end_of_font5x8:
   670                           	opt stack 0
   671  00FF65                     _color:
   672                           	opt stack 0
   673  00FF65  01                 	db	1
   674  00FF66                     __end_of_color:
   675                           	opt stack 0
   676  00FF66                     STR_18:
   677  00FF66  4C                 	db	76	;'L'
   678  00FF67  69                 	db	105	;'i'
   679  00FF68  67                 	db	103	;'g'
   680  00FF69  68                 	db	104	;'h'
   681  00FF6A  74                 	db	116	;'t'
   682  00FF6B  20                 	db	32
   683  00FF6C  42                 	db	66	;'B'
   684  00FF6D  72                 	db	114	;'r'
   685  00FF6E  69                 	db	105	;'i'
   686  00FF6F  67                 	db	103	;'g'
   687  00FF70  68                 	db	104	;'h'
   688  00FF71  74                 	db	116	;'t'
   689  00FF72  6E                 	db	110	;'n'
   690  00FF73  65                 	db	101	;'e'
   691  00FF74  73                 	db	115	;'s'
   692  00FF75  73                 	db	115	;'s'
   693  00FF76  00                 	db	0
   694  00FF77                     STR_15:
   695  00FF77  54                 	db	84	;'T'
   696  00FF78  69                 	db	105	;'i'
   697  00FF79  6D                 	db	109	;'m'
   698  00FF7A  65                 	db	101	;'e'
   699  00FF7B  20                 	db	32
   700  00FF7C  41                 	db	65	;'A'
   701  00FF7D  66                 	db	102	;'f'
   702  00FF7E  74                 	db	116	;'t'
   703  00FF7F  65                 	db	101	;'e'
   704  00FF80  72                 	db	114	;'r'
   705  00FF81  3A                 	db	58	;':'
   706  00FF82  20                 	db	32
   707  00FF83  00                 	db	0
   708  00FF84                     STR_19:
   709  00FF84  42                 	db	66	;'B'
   710  00FF85  72                 	db	114	;'r'
   711  00FF86  69                 	db	105	;'i'
   712  00FF87  67                 	db	103	;'g'
   713  00FF88  68                 	db	104	;'h'
   714  00FF89  74                 	db	116	;'t'
   715  00FF8A  6E                 	db	110	;'n'
   716  00FF8B  65                 	db	101	;'e'
   717  00FF8C  73                 	db	115	;'s'
   718  00FF8D  73                 	db	115	;'s'
   719  00FF8E  3A                 	db	58	;':'
   720  00FF8F  20                 	db	32
   721  00FF90  00                 	db	0
   722  00FF91                     STR_13:
   723  00FF91  52                 	db	82	;'R'
   724  00FF92  75                 	db	117	;'u'
   725  00FF93  6E                 	db	110	;'n'
   726  00FF94  20                 	db	32
   727  00FF95  54                 	db	84	;'T'
   728  00FF96  69                 	db	105	;'i'
   729  00FF97  6D                 	db	109	;'m'
   730  00FF98  65                 	db	101	;'e'
   731  00FF99  3A                 	db	58	;':'
   732  00FF9A  20                 	db	32
   733  00FF9B  00                 	db	0
   734  00FF9C                     STR_8:
   735  00FF9C  53                 	db	83	;'S'
   736  00FF9D  74                 	db	116	;'t'
   737  00FF9E  61                 	db	97	;'a'
   738  00FF9F  72                 	db	114	;'r'
   739  00FFA0  74                 	db	116	;'t'
   740  00FFA1  43                 	db	67	;'C'
   741  00FFA2  6F                 	db	111	;'o'
   742  00FFA3  6C                 	db	108	;'l'
   743  00FFA4  6F                 	db	111	;'o'
   744  00FFA5  72                 	db	114	;'r'
   745  00FFA6  00                 	db	0
   746  00FFA7                     STR_12:
   747  00FFA7  52                 	db	82	;'R'
   748  00FFA8  75                 	db	117	;'u'
   749  00FFA9  6E                 	db	110	;'n'
   750  00FFAA  20                 	db	32
   751  00FFAB  54                 	db	84	;'T'
   752  00FFAC  69                 	db	105	;'i'
   753  00FFAD  6D                 	db	109	;'m'
   754  00FFAE  65                 	db	101	;'e'
   755  00FFAF  73                 	db	115	;'s'
   756  00FFB0  00                 	db	0
   757  00FFB1                     STR_10:
   758  00FFB1  42                 	db	66	;'B'
   759  00FFB2  61                 	db	97	;'a'
   760  00FFB3  63                 	db	99	;'c'
   761  00FFB4  6B                 	db	107	;'k'
   762  00FFB5  6C                 	db	108	;'l'
   763  00FFB6  69                 	db	105	;'i'
   764  00FFB7  67                 	db	103	;'g'
   765  00FFB8  68                 	db	104	;'h'
   766  00FFB9  74                 	db	116	;'t'
   767  00FFBA  00                 	db	0
   768  00FFBB                     STR_3:
   769  00FFBB  4D                 	db	77	;'M'
   770  00FFBC  61                 	db	97	;'a'
   771  00FFBD  69                 	db	105	;'i'
   772  00FFBE  6E                 	db	110	;'n'
   773  00FFBF  20                 	db	32
   774  00FFC0  4D                 	db	77	;'M'
   775  00FFC1  65                 	db	101	;'e'
   776  00FFC2  6E                 	db	110	;'n'
   777  00FFC3  75                 	db	117	;'u'
   778  00FFC4  00                 	db	0
   779  00FFC5                     STR_11:
   780  00FFC5  53                 	db	83	;'S'
   781  00FFC6  65                 	db	101	;'e'
   782  00FFC7  6C                 	db	108	;'l'
   783  00FFC8  53                 	db	83	;'S'
   784  00FFC9  74                 	db	116	;'t'
   785  00FFCA  61                 	db	97	;'a'
   786  00FFCB  74                 	db	116	;'t'
   787  00FFCC  65                 	db	101	;'e'
   788  00FFCD  00                 	db	0
   789  00FFCE                     STR_9:
   790  00FFCE  45                 	db	69	;'E'
   791  00FFCF  6E                 	db	110	;'n'
   792  00FFD0  64                 	db	100	;'d'
   793  00FFD1  43                 	db	67	;'C'
   794  00FFD2  6F                 	db	111	;'o'
   795  00FFD3  6C                 	db	108	;'l'
   796  00FFD4  6F                 	db	111	;'o'
   797  00FFD5  72                 	db	114	;'r'
   798  00FFD6  00                 	db	0
   799  00FFD7                     STR_5:
   800  00FFD7  52                 	db	82	;'R'
   801  00FFD8  75                 	db	117	;'u'
   802  00FFD9  6E                 	db	110	;'n'
   803  00FFDA  54                 	db	84	;'T'
   804  00FFDB  69                 	db	105	;'i'
   805  00FFDC  6D                 	db	109	;'m'
   806  00FFDD  65                 	db	101	;'e'
   807  00FFDE  00                 	db	0
   808  00FFDF                     STR_4:
   809  00FFDF  56                 	db	86	;'V'
   810  00FFE0  61                 	db	97	;'a'
   811  00FFE1  6C                 	db	108	;'l'
   812  00FFE2  75                 	db	117	;'u'
   813  00FFE3  65                 	db	101	;'e'
   814  00FFE4  73                 	db	115	;'s'
   815  00FFE5  00                 	db	0
   816  00FFE6                     STR_1:
   817  00FFE6  6D                 	db	109	;'m'
   818  00FFE7  69                 	db	105	;'i'
   819  00FFE8  6E                 	db	110	;'n'
   820  00FFE9  20                 	db	32
   821  00FFEA  20                 	db	32
   822  00FFEB  20                 	db	32
   823  00FFEC  00                 	db	0
   824  00FFED                     STR_17:
   825  00FFED  42                 	db	66	;'B'
   826  00FFEE  61                 	db	97	;'a'
   827  00FFEF  63                 	db	99	;'c'
   828  00FFF0  6B                 	db	107	;'k'
   829  00FFF1  00                 	db	0
   830  00FFF2                     STR_2:
   831  00FFF2  25                 	db	37
   832  00FFF3  20                 	db	32
   833  00FFF4  20                 	db	32
   834  00FFF5  20                 	db	32
   835  00FFF6  00                 	db	0
   836  00FFF7                     STR_20:
   837  00FFF7  25                 	db	37
   838  00FFF8  20                 	db	32
   839  00FFF9  20                 	db	32
   840  00FFFA  00                 	db	0
   841  00FFFB                     STR_6:
   842  00FFFB  6D                 	db	109	;'m'
   843  00FFFC  69                 	db	105	;'i'
   844  00FFFD  6E                 	db	110	;'n'
   845  00FFFE  00                 	db	0
   846  0000                     
   847                           ; #config settings
   848  00FFFF  00                 	db	0	; dummy byte at the end
   849  0000                     
   850                           	psect	nvBANK0
   851  00009F                     __pnvBANK0:
   852                           	opt stack 0
   853  00009F                     _timer0ReloadVal:
   854                           	opt stack 0
   855  00009F                     	ds	2
   856  0000A1                     _TMR0_InterruptHandler:
   857                           	opt stack 0
   858  0000A1                     	ds	2
   859  0000                     _CCPR4H	set	3916
   860  0000                     _CCPR4L	set	3915
   861  0000                     _CCP4CON	set	3914
   862  0000                     _CCPR3H	set	3919
   863  0000                     _CCPR3L	set	3918
   864  0000                     _CCP3CON	set	3917
   865  0000                     _CCPR2H	set	3922
   866  0000                     _CCPR2L	set	3921
   867  0000                     _CCP2CON	set	3920
   868  0000                     _IOCBbits	set	3930
   869  0000                     _WPUB	set	3931
   870  0000                     _ANCON1	set	3932
   871  0000                     _ANCON0	set	3933
   872  0000                     _CCPTMRSbits	set	3993
   873  0000                     _PORTD	set	3971
   874  0000                     _PORTA	set	3968
   875  0000                     _LATEbits	set	3981
   876  0000                     _T0CONbits	set	4053
   877  0000                     _TMR0L	set	4054
   878  0000                     _TMR0H	set	4055
   879  0000                     _T0CON	set	4053
   880  0000                     _EEDATA	set	3955
   881  0000                     _EEADR	set	3956
   882  0000                     _EEADRH	set	3957
   883  0000                     _EECON2	set	3966
   884  0000                     _EECON1bits	set	3967
   885  0000                     _TABLAT	set	4085
   886  0000                     _TBLPTRL	set	4086
   887  0000                     _TBLPTRH	set	4087
   888  0000                     _TBLPTRU	set	4088
   889  0000                     _REFOCON	set	3994
   890  0000                     _OSCTUNE	set	3995
   891  0000                     _OSCCON2	set	4050
   892  0000                     _OSCCON	set	4051
   893  0000                     _RCONbits	set	4048
   894  0000                     _PORTB	set	3969
   895  0000                     _PORTBbits	set	3969
   896  0000                     _INTCONbits	set	4082
   897  0000                     _TRISD	set	3989
   898  0000                     _TRISC	set	3988
   899  0000                     _TRISB	set	3987
   900  0000                     _TRISA	set	3986
   901  0000                     _TRISE	set	3990
   902  0000                     _LATC	set	3979
   903  0000                     _LATB	set	3978
   904  0000                     _LATA	set	3977
   905  0000                     _LATD	set	3980
   906  0000                     _LATE	set	3981
   907  0000                     _T4CONbits	set	3976
   908  0000                     _PIR4bits	set	4023
   909  0000                     _TMR4	set	3975
   910  0000                     _PR4	set	4009
   911  0000                     _T4CON	set	3976
   912                           
   913                           	psect	cinit
   914  001AA0                     __pcinit:
   915                           	opt stack 0
   916  001AA0                     start_initialization:
   917                           	opt stack 0
   918  001AA0                     __initialization:
   919                           	opt stack 0
   920                           
   921                           ; Initialize objects allocated to BANK0 (3 bytes)
   922                           ; load TBLPTR registers with __pidataBANK0
   923  001AA0  0E46               	movlw	low __pidataBANK0
   924  001AA2  6EF6               	movwf	tblptrl,c
   925  001AA4  0E25               	movlw	high __pidataBANK0
   926  001AA6  6EF7               	movwf	tblptrh,c
   927  001AA8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   928  001AAA  6EF8               	movwf	tblptru,c
   929  001AAC  0009               	tblrd		*+	;fetch initializer
   930  001AAE  CFF5 F0A6          	movff	tablat,__pdataBANK0
   931  001AB2  0009               	tblrd		*+	;fetch initializer
   932  001AB4  CFF5 F0A7          	movff	tablat,__pdataBANK0+1
   933  001AB8  0009               	tblrd		*+	;fetch initializer
   934  001ABA  CFF5 F0A8          	movff	tablat,__pdataBANK0+2
   935                           
   936                           ; Initialize objects allocated to COMRAM (11 bytes)
   937                           ; load TBLPTR registers with __pidataCOMRAM
   938  001ABE  0E12               	movlw	low __pidataCOMRAM
   939  001AC0  6EF6               	movwf	tblptrl,c
   940  001AC2  0E25               	movlw	high __pidataCOMRAM
   941  001AC4  6EF7               	movwf	tblptrh,c
   942  001AC6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   943  001AC8  6EF8               	movwf	tblptru,c
   944  001ACA  EE00  F053         	lfsr	0,__pdataCOMRAM
   945  001ACE  EE10 F00B          	lfsr	1,11
   946  001AD2                     copy_data0:
   947  001AD2  0009               	tblrd		*+
   948  001AD4  CFF5 FFEE          	movff	tablat,postinc0
   949  001AD8  50E5               	movf	postdec1,w,c
   950  001ADA  50E1               	movf	fsr1l,w,c
   951  001ADC  E1FA               	bnz	copy_data0
   952                           
   953                           ; Clear objects allocated to BANK0 (3 bytes)
   954  001ADE  0100               	movlb	0
   955  001AE0  6BA5               	clrf	(__pbssBANK0+2)& (0+255),b
   956  001AE2  6BA4               	clrf	(__pbssBANK0+1)& (0+255),b
   957  001AE4  6BA3               	clrf	__pbssBANK0& (0+255),b
   958                           
   959                           ; Clear objects allocated to COMRAM (11 bytes)
   960  001AE6  EE00  F048         	lfsr	0,__pbssCOMRAM
   961  001AEA  0E0B               	movlw	11
   962  001AEC                     clear_0:
   963  001AEC  6AEE               	clrf	postinc0,c
   964  001AEE  06E8               	decf	wreg,f,c
   965  001AF0  E1FD               	bnz	clear_0
   966  001AF2                     end_of_initialization:
   967                           	opt stack 0
   968  001AF2                     __end_of__initialization:
   969                           	opt stack 0
   970  001AF2  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   971  001AF4  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   972  001AF6  0100               	movlb	0
   973  001AF8  EFA8  F00F         	goto	_main	;jump to C main() function
   974                           tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           tblptrl	equ	0xFF6
   977                           tablat	equ	0xFF5
   978                           postinc0	equ	0xFEE
   979                           wreg	equ	0xFE8
   980                           postdec1	equ	0xFE5
   981                           fsr1l	equ	0xFE1
   982                           
   983                           	psect	bssCOMRAM
   984  000048                     __pbssCOMRAM:
   985                           	opt stack 0
   986  000048                     _IOCB5_InterruptHandler:
   987                           	opt stack 0
   988  000048                     	ds	2
   989  00004A                     _IOCB4_InterruptHandler:
   990                           	opt stack 0
   991  00004A                     	ds	2
   992  00004C                     PIN_MANAGER_IOC@previousState:
   993                           	opt stack 0
   994  00004C                     	ds	1
   995  00004D                     _runMinutes:
   996                           	opt stack 0
   997  00004D                     	ds	1
   998  00004E                     _adjustValues:
   999                           	opt stack 0
  1000  00004E                     	ds	1
  1001  00004F                     _brightnessContext:
  1002                           	opt stack 0
  1003  00004F                     	ds	1
  1004  000050                     _runTimeContext:
  1005                           	opt stack 0
  1006  000050                     	ds	1
  1007  000051                     _currentContext:
  1008                           	opt stack 0
  1009  000051                     	ds	1
  1010  000052                     _mainState:
  1011                           	opt stack 0
  1012  000052                     	ds	1
  1013                           tblptru	equ	0xFF8
  1014                           tblptrh	equ	0xFF7
  1015                           tblptrl	equ	0xFF6
  1016                           tablat	equ	0xFF5
  1017                           postinc0	equ	0xFEE
  1018                           wreg	equ	0xFE8
  1019                           postdec1	equ	0xFE5
  1020                           fsr1l	equ	0xFE1
  1021                           
  1022                           	psect	dataCOMRAM
  1023  000053                     __pdataCOMRAM:
  1024                           	opt stack 0
  1025  000053                     _appliedBrightness:
  1026                           	opt stack 0
  1027  000053                     	ds	3
  1028  000056                     _brightnessPercent:
  1029                           	opt stack 0
  1030  000056                     	ds	3
  1031  000059                     _maxBrightness:
  1032                           	opt stack 0
  1033  000059                     	ds	2
  1034  00005B                     _valuesXStart:
  1035                           	opt stack 0
  1036  00005B                     	ds	1
  1037  00005C                     _timeAfterFinishX:
  1038                           	opt stack 0
  1039  00005C                     	ds	1
  1040  00005D                     _subMenuY:
  1041                           	opt stack 0
  1042  00005D                     	ds	1
  1043                           tblptru	equ	0xFF8
  1044                           tblptrh	equ	0xFF7
  1045                           tblptrl	equ	0xFF6
  1046                           tablat	equ	0xFF5
  1047                           postinc0	equ	0xFEE
  1048                           wreg	equ	0xFE8
  1049                           postdec1	equ	0xFE5
  1050                           fsr1l	equ	0xFE1
  1051                           
  1052                           	psect	bssBANK0
  1053  0000A3                     __pbssBANK0:
  1054                           	opt stack 0
  1055  0000A3                     _screen_y:
  1056                           	opt stack 0
  1057  0000A3                     	ds	1
  1058  0000A4                     _screen_x:
  1059                           	opt stack 0
  1060  0000A4                     	ds	1
  1061  0000A5                     _afterMinutes:
  1062                           	opt stack 0
  1063  0000A5                     	ds	1
  1064                           tblptru	equ	0xFF8
  1065                           tblptrh	equ	0xFF7
  1066                           tblptrl	equ	0xFF6
  1067                           tablat	equ	0xFF5
  1068                           postinc0	equ	0xFEE
  1069                           wreg	equ	0xFE8
  1070                           postdec1	equ	0xFE5
  1071                           fsr1l	equ	0xFE1
  1072                           
  1073                           	psect	dataBANK0
  1074  0000A6                     __pdataBANK0:
  1075                           	opt stack 0
  1076  0000A6                     _xMenuStart:
  1077                           	opt stack 0
  1078  0000A6                     	ds	1
  1079  0000A7                     _ARROW_SIZE:
  1080                           	opt stack 0
  1081  0000A7                     	ds	1
  1082  0000A8                     _runTimeX:
  1083                           	opt stack 0
  1084  0000A8                     	ds	1
  1085                           tblptru	equ	0xFF8
  1086                           tblptrh	equ	0xFF7
  1087                           tblptrl	equ	0xFF6
  1088                           tablat	equ	0xFF5
  1089                           postinc0	equ	0xFEE
  1090                           wreg	equ	0xFE8
  1091                           postdec1	equ	0xFE5
  1092                           fsr1l	equ	0xFE1
  1093                           
  1094                           	psect	cstackBANK0
  1095  000060                     __pcstackBANK0:
  1096                           	opt stack 0
  1097  000060                     ?___awdiv:
  1098                           	opt stack 0
  1099  000060                     ?___lwdiv:
  1100                           	opt stack 0
  1101  000060                     ?___lwmod:
  1102                           	opt stack 0
  1103  000060                     ?___ftpack:
  1104                           	opt stack 0
  1105  000060                     ?___fttol:
  1106                           	opt stack 0
  1107  000060                     GLCD_EnableController@controller:
  1108                           	opt stack 0
  1109  000060                     GLCD_DisableController@controller:
  1110                           	opt stack 0
  1111  000060                     TMR0_SetInterruptHandler@InterruptHandler:
  1112                           	opt stack 0
  1113  000060                     ___awdiv@dividend:
  1114                           	opt stack 0
  1115  000060                     ___lwdiv@dividend:
  1116                           	opt stack 0
  1117  000060                     ___lwmod@dividend:
  1118                           	opt stack 0
  1119  000060                     ___ftpack@arg:
  1120                           	opt stack 0
  1121  000060                     ___fttol@f1:
  1122                           	opt stack 0
  1123                           
  1124                           ; 3 bytes @ 0x0
  1125  000060                     	ds	1
  1126  000061                     GLCD_ReadStatus@status:
  1127                           	opt stack 0
  1128                           
  1129                           ; 1 bytes @ 0x1
  1130  000061                     	ds	1
  1131  000062                     ??_TMR0_Initialize:
  1132  000062                     GLCD_ReadStatus@controller:
  1133                           	opt stack 0
  1134  000062                     ___awdiv@divisor:
  1135                           	opt stack 0
  1136  000062                     ___lwdiv@divisor:
  1137                           	opt stack 0
  1138  000062                     ___lwmod@divisor:
  1139                           	opt stack 0
  1140                           
  1141                           ; 2 bytes @ 0x2
  1142  000062                     	ds	1
  1143  000063                     ___ftpack@exp:
  1144                           	opt stack 0
  1145                           
  1146                           ; 1 bytes @ 0x3
  1147  000063                     	ds	1
  1148  000064                     ??___fttol:
  1149  000064                     ___awdiv@counter:
  1150                           	opt stack 0
  1151  000064                     ___ftpack@sign:
  1152                           	opt stack 0
  1153  000064                     ___lwmod@counter:
  1154                           	opt stack 0
  1155  000064                     ___lwdiv@quotient:
  1156                           	opt stack 0
  1157                           
  1158                           ; 2 bytes @ 0x4
  1159  000064                     	ds	1
  1160  000065                     ??___ftpack:
  1161  000065                     ___awdiv@sign:
  1162                           	opt stack 0
  1163                           
  1164                           ; 1 bytes @ 0x5
  1165  000065                     	ds	1
  1166  000066                     ___lwdiv@counter:
  1167                           	opt stack 0
  1168  000066                     ___awdiv@quotient:
  1169                           	opt stack 0
  1170                           
  1171                           ; 2 bytes @ 0x6
  1172  000066                     	ds	1
  1173  000067                     utoa@buf:
  1174                           	opt stack 0
  1175                           
  1176                           ; 2 bytes @ 0x7
  1177  000067                     	ds	1
  1178  000068                     ??_GLCD_WriteData:
  1179  000068                     ??_GLCD_ReadData:
  1180  000068                     ?___ftdiv:
  1181                           	opt stack 0
  1182  000068                     ?___awtoft:
  1183                           	opt stack 0
  1184  000068                     GLCD_WriteCommand@controller:
  1185                           	opt stack 0
  1186  000068                     ___awtoft@c:
  1187                           	opt stack 0
  1188  000068                     ___ftdiv@f1:
  1189                           	opt stack 0
  1190                           
  1191                           ; 3 bytes @ 0x8
  1192  000068                     	ds	1
  1193  000069                     ??_GLCD_WriteCommand:
  1194  000069                     GLCD_ReadData@data:
  1195                           	opt stack 0
  1196  000069                     GLCD_WriteData@dataToWrite:
  1197                           	opt stack 0
  1198  000069                     ___fttol@sign1:
  1199                           	opt stack 0
  1200  000069                     utoa@val:
  1201                           	opt stack 0
  1202                           
  1203                           ; 2 bytes @ 0x9
  1204  000069                     	ds	1
  1205  00006A                     GLCD_WriteChar@charToWrite:
  1206                           	opt stack 0
  1207  00006A                     GLCD_WriteCommand@commandToWrite:
  1208                           	opt stack 0
  1209  00006A                     ___fttol@lval:
  1210                           	opt stack 0
  1211                           
  1212                           ; 4 bytes @ 0xA
  1213  00006A                     	ds	1
  1214  00006B                     GLCD_Initalize@i:
  1215                           	opt stack 0
  1216  00006B                     GLCD_GoTo@y:
  1217                           	opt stack 0
  1218  00006B                     ___awtoft@sign:
  1219                           	opt stack 0
  1220  00006B                     GLCD_WriteChar@i:
  1221                           	opt stack 0
  1222  00006B                     utoa@base:
  1223                           	opt stack 0
  1224  00006B                     ___ftdiv@f2:
  1225                           	opt stack 0
  1226                           
  1227                           ; 3 bytes @ 0xB
  1228  00006B                     	ds	1
  1229  00006C                     GLCD_GoTo@x:
  1230                           	opt stack 0
  1231                           
  1232                           ; 1 bytes @ 0xC
  1233  00006C                     	ds	1
  1234  00006D                     GLCD_GoTo@i:
  1235                           	opt stack 0
  1236  00006D                     GLCD_WriteString@stringToWrite:
  1237                           	opt stack 0
  1238  00006D                     utoa@v:
  1239                           	opt stack 0
  1240                           
  1241                           ; 2 bytes @ 0xD
  1242  00006D                     	ds	1
  1243  00006E                     ??_Clear_Arrow_Column:
  1244  00006E                     ??___ftdiv:
  1245  00006E                     GLCD_ClearScreen@i:
  1246                           	opt stack 0
  1247  00006E                     GLCD_SetPixel@y:
  1248                           	opt stack 0
  1249  00006E                     Clear_runTime_Arrows@i:
  1250                           	opt stack 0
  1251  00006E                     Clear_Brightness_Arrows@i:
  1252                           	opt stack 0
  1253  00006E                     ___fttol@exp1:
  1254                           	opt stack 0
  1255                           
  1256                           ; 1 bytes @ 0xE
  1257  00006E                     	ds	1
  1258  00006F                     GLCD_ClearScreen@j:
  1259                           	opt stack 0
  1260  00006F                     GLCD_SetPixel@color:
  1261                           	opt stack 0
  1262  00006F                     utoa@c:
  1263                           	opt stack 0
  1264  00006F                     PWM2_LoadDutyValue@dutyValue:
  1265                           	opt stack 0
  1266                           
  1267                           ; 2 bytes @ 0xF
  1268  00006F                     	ds	1
  1269  000070                     ??_GLCD_SetPixel:
  1270  000070                     itoa@buf:
  1271                           	opt stack 0
  1272                           
  1273                           ; 2 bytes @ 0x10
  1274  000070                     	ds	1
  1275  000071                     ??_PWM2_LoadDutyValue:
  1276  000071                     ___ftdiv@cntr:
  1277                           	opt stack 0
  1278                           
  1279                           ; 1 bytes @ 0x11
  1280  000071                     	ds	1
  1281  000072                     GLCD_SetPixel@tmp:
  1282                           	opt stack 0
  1283  000072                     itoa@val:
  1284                           	opt stack 0
  1285  000072                     ___ftdiv@f3:
  1286                           	opt stack 0
  1287                           
  1288                           ; 3 bytes @ 0x12
  1289  000072                     	ds	1
  1290  000073                     GLCD_SetPixel@x:
  1291                           	opt stack 0
  1292                           
  1293                           ; 1 bytes @ 0x13
  1294  000073                     	ds	1
  1295  000074                     _GLCD_SetPixel$1810:
  1296                           	opt stack 0
  1297  000074                     itoa@base:
  1298                           	opt stack 0
  1299                           
  1300                           ; 2 bytes @ 0x14
  1301  000074                     	ds	1
  1302  000075                     Clear_Arrow_Column@j:
  1303                           	opt stack 0
  1304  000075                     ___ftdiv@exp:
  1305                           	opt stack 0
  1306  000075                     GLCD_Line@X1:
  1307                           	opt stack 0
  1308                           
  1309                           ; 2 bytes @ 0x15
  1310  000075                     	ds	1
  1311  000076                     Clear_Arrow_Column@i:
  1312                           	opt stack 0
  1313  000076                     ___ftdiv@sign:
  1314                           	opt stack 0
  1315  000076                     itoa@cp:
  1316                           	opt stack 0
  1317                           
  1318                           ; 2 bytes @ 0x16
  1319  000076                     	ds	1
  1320  000077                     ?___ftmul:
  1321                           	opt stack 0
  1322  000077                     GLCD_Line@Y1:
  1323                           	opt stack 0
  1324  000077                     ___ftmul@f1:
  1325                           	opt stack 0
  1326                           
  1327                           ; 3 bytes @ 0x17
  1328  000077                     	ds	2
  1329  000079                     GLCD_Line@X2:
  1330                           	opt stack 0
  1331                           
  1332                           ; 2 bytes @ 0x19
  1333  000079                     	ds	1
  1334  00007A                     ___ftmul@f2:
  1335                           	opt stack 0
  1336                           
  1337                           ; 3 bytes @ 0x1A
  1338  00007A                     	ds	1
  1339  00007B                     GLCD_Line@Y2:
  1340                           	opt stack 0
  1341                           
  1342                           ; 2 bytes @ 0x1B
  1343  00007B                     	ds	2
  1344  00007D                     ??___ftmul:
  1345  00007D                     ??_GLCD_Line:
  1346                           
  1347                           ; 1 bytes @ 0x1D
  1348  00007D                     	ds	2
  1349  00007F                     GLCD_Line@TwoDxAccumulatedError:
  1350                           	opt stack 0
  1351                           
  1352                           ; 2 bytes @ 0x1F
  1353  00007F                     	ds	1
  1354  000080                     ___ftmul@exp:
  1355                           	opt stack 0
  1356                           
  1357                           ; 1 bytes @ 0x20
  1358  000080                     	ds	1
  1359  000081                     GLCD_Line@TwoDyAccumulatedError:
  1360                           	opt stack 0
  1361  000081                     ___ftmul@f3_as_product:
  1362                           	opt stack 0
  1363                           
  1364                           ; 3 bytes @ 0x21
  1365  000081                     	ds	2
  1366  000083                     GLCD_Line@Xinc:
  1367                           	opt stack 0
  1368                           
  1369                           ; 2 bytes @ 0x23
  1370  000083                     	ds	1
  1371  000084                     ___ftmul@cntr:
  1372                           	opt stack 0
  1373                           
  1374                           ; 1 bytes @ 0x24
  1375  000084                     	ds	1
  1376  000085                     ___ftmul@sign:
  1377                           	opt stack 0
  1378  000085                     GLCD_Line@Yinc:
  1379                           	opt stack 0
  1380                           
  1381                           ; 2 bytes @ 0x25
  1382  000085                     	ds	2
  1383  000087                     GLCD_Line@TwoDx:
  1384                           	opt stack 0
  1385                           
  1386                           ; 2 bytes @ 0x27
  1387  000087                     	ds	2
  1388  000089                     GLCD_Line@TwoDy:
  1389                           	opt stack 0
  1390                           
  1391                           ; 2 bytes @ 0x29
  1392  000089                     	ds	2
  1393  00008B                     GLCD_Line@CurrentX:
  1394                           	opt stack 0
  1395                           
  1396                           ; 2 bytes @ 0x2B
  1397  00008B                     	ds	2
  1398  00008D                     GLCD_Line@CurrentY:
  1399                           	opt stack 0
  1400                           
  1401                           ; 2 bytes @ 0x2D
  1402  00008D                     	ds	2
  1403  00008F                     GLCD_Line@Dx:
  1404                           	opt stack 0
  1405                           
  1406                           ; 2 bytes @ 0x2F
  1407  00008F                     	ds	2
  1408  000091                     GLCD_Line@Dy:
  1409                           	opt stack 0
  1410                           
  1411                           ; 2 bytes @ 0x31
  1412  000091                     	ds	2
  1413  000093                     Initialize_Menus@display:
  1414                           	opt stack 0
  1415  000093                     Draw_runTime_Menu@display:
  1416                           	opt stack 0
  1417  000093                     Draw_Brightness_Menu@display:
  1418                           	opt stack 0
  1419                           
  1420                           ; 10 bytes @ 0x33
  1421  000093                     	ds	10
  1422  00009D                     ??_Check_Buttons:
  1423                           
  1424                           ; 1 bytes @ 0x3D
  1425  00009D                     	ds	1
  1426  00009E                     ??_main:
  1427                           
  1428                           ; 1 bytes @ 0x3E
  1429  00009E                     	ds	1
  1430                           tblptru	equ	0xFF8
  1431                           tblptrh	equ	0xFF7
  1432                           tblptrl	equ	0xFF6
  1433                           tablat	equ	0xFF5
  1434                           postinc0	equ	0xFEE
  1435                           wreg	equ	0xFE8
  1436                           postdec1	equ	0xFE5
  1437                           fsr1l	equ	0xFE1
  1438                           
  1439                           	psect	cstackCOMRAM
  1440  000001                     __pcstackCOMRAM:
  1441                           	opt stack 0
  1442  000001                     ?i2___awdiv:
  1443                           	opt stack 0
  1444  000001                     ?i2___lwdiv:
  1445                           	opt stack 0
  1446  000001                     ?i2___lwmod:
  1447                           	opt stack 0
  1448  000001                     ?i2___ftpack:
  1449                           	opt stack 0
  1450  000001                     ?i2___fttol:
  1451                           	opt stack 0
  1452  000001                     i2GLCD_EnableController@controller:
  1453                           	opt stack 0
  1454  000001                     i2GLCD_DisableController@controller:
  1455                           	opt stack 0
  1456  000001                     i2___awdiv@dividend:
  1457                           	opt stack 0
  1458  000001                     i2___lwdiv@dividend:
  1459                           	opt stack 0
  1460  000001                     i2___lwmod@dividend:
  1461                           	opt stack 0
  1462  000001                     ___ftge@ff1:
  1463                           	opt stack 0
  1464  000001                     i2___ftpack@arg:
  1465                           	opt stack 0
  1466  000001                     i2___fttol@f1:
  1467                           	opt stack 0
  1468                           
  1469                           ; 3 bytes @ 0x0
  1470  000001                     	ds	1
  1471  000002                     i2GLCD_ReadStatus@status:
  1472                           	opt stack 0
  1473                           
  1474                           ; 1 bytes @ 0x1
  1475  000002                     	ds	1
  1476  000003                     i2GLCD_ReadStatus@controller:
  1477                           	opt stack 0
  1478  000003                     i2___awdiv@divisor:
  1479                           	opt stack 0
  1480  000003                     i2___lwdiv@divisor:
  1481                           	opt stack 0
  1482  000003                     i2___lwmod@divisor:
  1483                           	opt stack 0
  1484                           
  1485                           ; 2 bytes @ 0x2
  1486  000003                     	ds	1
  1487  000004                     i2___ftpack@exp:
  1488                           	opt stack 0
  1489  000004                     ___ftge@ff2:
  1490                           	opt stack 0
  1491                           
  1492                           ; 3 bytes @ 0x3
  1493  000004                     	ds	1
  1494  000005                     ??i2___fttol:
  1495  000005                     i2___awdiv@counter:
  1496                           	opt stack 0
  1497  000005                     i2___ftpack@sign:
  1498                           	opt stack 0
  1499  000005                     i2___lwmod@counter:
  1500                           	opt stack 0
  1501  000005                     i2___lwdiv@quotient:
  1502                           	opt stack 0
  1503                           
  1504                           ; 2 bytes @ 0x4
  1505  000005                     	ds	1
  1506  000006                     ??i2___ftpack:
  1507  000006                     i2___awdiv@sign:
  1508                           	opt stack 0
  1509                           
  1510                           ; 1 bytes @ 0x5
  1511  000006                     	ds	1
  1512  000007                     ??___ftge:
  1513  000007                     i2___lwdiv@counter:
  1514                           	opt stack 0
  1515  000007                     i2___awdiv@quotient:
  1516                           	opt stack 0
  1517                           
  1518                           ; 2 bytes @ 0x6
  1519  000007                     	ds	1
  1520  000008                     i2utoa@buf:
  1521                           	opt stack 0
  1522                           
  1523                           ; 2 bytes @ 0x7
  1524  000008                     	ds	1
  1525  000009                     ??i2_GLCD_WriteData:
  1526  000009                     ?___ftadd:
  1527                           	opt stack 0
  1528  000009                     ?i2___awtoft:
  1529                           	opt stack 0
  1530  000009                     ?i2___ftdiv:
  1531                           	opt stack 0
  1532  000009                     i2GLCD_WriteCommand@controller:
  1533                           	opt stack 0
  1534  000009                     i2___awtoft@c:
  1535                           	opt stack 0
  1536  000009                     ___ftadd@f1:
  1537                           	opt stack 0
  1538  000009                     i2___ftdiv@f1:
  1539                           	opt stack 0
  1540                           
  1541                           ; 3 bytes @ 0x8
  1542  000009                     	ds	1
  1543  00000A                     ??i2_GLCD_WriteCommand:
  1544  00000A                     i2GLCD_WriteData@dataToWrite:
  1545                           	opt stack 0
  1546  00000A                     i2___fttol@sign1:
  1547                           	opt stack 0
  1548  00000A                     i2utoa@val:
  1549                           	opt stack 0
  1550                           
  1551                           ; 2 bytes @ 0x9
  1552  00000A                     	ds	1
  1553  00000B                     i2GLCD_WriteChar@charToWrite:
  1554                           	opt stack 0
  1555  00000B                     i2GLCD_WriteCommand@commandToWrite:
  1556                           	opt stack 0
  1557  00000B                     i2___fttol@lval:
  1558                           	opt stack 0
  1559                           
  1560                           ; 4 bytes @ 0xA
  1561  00000B                     	ds	1
  1562  00000C                     i2GLCD_GoTo@y:
  1563                           	opt stack 0
  1564  00000C                     i2___awtoft@sign:
  1565                           	opt stack 0
  1566  00000C                     i2GLCD_WriteChar@i:
  1567                           	opt stack 0
  1568  00000C                     i2utoa@base:
  1569                           	opt stack 0
  1570  00000C                     ___ftadd@f2:
  1571                           	opt stack 0
  1572  00000C                     i2___ftdiv@f2:
  1573                           	opt stack 0
  1574                           
  1575                           ; 3 bytes @ 0xB
  1576  00000C                     	ds	1
  1577  00000D                     i2GLCD_GoTo@x:
  1578                           	opt stack 0
  1579                           
  1580                           ; 1 bytes @ 0xC
  1581  00000D                     	ds	1
  1582  00000E                     i2GLCD_GoTo@i:
  1583                           	opt stack 0
  1584  00000E                     i2GLCD_WriteString@stringToWrite:
  1585                           	opt stack 0
  1586  00000E                     i2utoa@v:
  1587                           	opt stack 0
  1588                           
  1589                           ; 2 bytes @ 0xD
  1590  00000E                     	ds	1
  1591  00000F                     ??___ftadd:
  1592  00000F                     ??i2_Clear_Arrow_Column:
  1593  00000F                     ??i2___ftdiv:
  1594  00000F                     i2Clear_runTime_Arrows@i:
  1595                           	opt stack 0
  1596  00000F                     i2Clear_Brightness_Arrows@i:
  1597                           	opt stack 0
  1598  00000F                     i2___fttol@exp1:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0xE
  1602  00000F                     	ds	1
  1603  000010                     i2utoa@c:
  1604                           	opt stack 0
  1605  000010                     i2PWM2_LoadDutyValue@dutyValue:
  1606                           	opt stack 0
  1607                           
  1608                           ; 2 bytes @ 0xF
  1609  000010                     	ds	1
  1610  000011                     i2itoa@buf:
  1611                           	opt stack 0
  1612                           
  1613                           ; 2 bytes @ 0x10
  1614  000011                     	ds	1
  1615  000012                     ??i2_PWM2_LoadDutyValue:
  1616  000012                     ___ftadd@sign:
  1617                           	opt stack 0
  1618  000012                     i2___ftdiv@cntr:
  1619                           	opt stack 0
  1620                           
  1621                           ; 1 bytes @ 0x11
  1622  000012                     	ds	1
  1623  000013                     ___ftadd@exp2:
  1624                           	opt stack 0
  1625  000013                     i2itoa@val:
  1626                           	opt stack 0
  1627  000013                     i2___ftdiv@f3:
  1628                           	opt stack 0
  1629                           
  1630                           ; 3 bytes @ 0x12
  1631  000013                     	ds	1
  1632  000014                     ___ftadd@exp1:
  1633                           	opt stack 0
  1634                           
  1635                           ; 1 bytes @ 0x13
  1636  000014                     	ds	1
  1637  000015                     ?___ftsub:
  1638                           	opt stack 0
  1639  000015                     i2itoa@base:
  1640                           	opt stack 0
  1641  000015                     ___ftsub@f1:
  1642                           	opt stack 0
  1643                           
  1644                           ; 3 bytes @ 0x14
  1645  000015                     	ds	1
  1646  000016                     i2Clear_Arrow_Column@j:
  1647                           	opt stack 0
  1648  000016                     i2___ftdiv@exp:
  1649                           	opt stack 0
  1650                           
  1651                           ; 1 bytes @ 0x15
  1652  000016                     	ds	1
  1653  000017                     i2Clear_Arrow_Column@i:
  1654                           	opt stack 0
  1655  000017                     i2___ftdiv@sign:
  1656                           	opt stack 0
  1657  000017                     i2itoa@cp:
  1658                           	opt stack 0
  1659                           
  1660                           ; 2 bytes @ 0x16
  1661  000017                     	ds	1
  1662  000018                     ?i2___ftmul:
  1663                           	opt stack 0
  1664  000018                     Main_Menu_Function@result:
  1665                           	opt stack 0
  1666  000018                     ___ftsub@f2:
  1667                           	opt stack 0
  1668  000018                     i2___ftmul@f1:
  1669                           	opt stack 0
  1670                           
  1671                           ; 3 bytes @ 0x17
  1672  000018                     	ds	1
  1673  000019                     Run_Time_Menu_Function@display:
  1674                           	opt stack 0
  1675                           
  1676                           ; 10 bytes @ 0x18
  1677  000019                     	ds	2
  1678  00001B                     i2___ftmul@f2:
  1679                           	opt stack 0
  1680                           
  1681                           ; 3 bytes @ 0x1A
  1682  00001B                     	ds	3
  1683  00001E                     ??i2___ftmul:
  1684                           
  1685                           ; 1 bytes @ 0x1D
  1686  00001E                     	ds	3
  1687  000021                     i2___ftmul@exp:
  1688                           	opt stack 0
  1689                           
  1690                           ; 1 bytes @ 0x20
  1691  000021                     	ds	1
  1692  000022                     i2___ftmul@f3_as_product:
  1693                           	opt stack 0
  1694                           
  1695                           ; 3 bytes @ 0x21
  1696  000022                     	ds	1
  1697  000023                     Run_Time_Menu_Function@result:
  1698                           	opt stack 0
  1699                           
  1700                           ; 1 bytes @ 0x22
  1701  000023                     	ds	2
  1702  000025                     i2___ftmul@cntr:
  1703                           	opt stack 0
  1704                           
  1705                           ; 1 bytes @ 0x24
  1706  000025                     	ds	1
  1707  000026                     i2___ftmul@sign:
  1708                           	opt stack 0
  1709                           
  1710                           ; 1 bytes @ 0x25
  1711  000026                     	ds	1
  1712  000027                     Brightness_Menu_Function@display:
  1713                           	opt stack 0
  1714                           
  1715                           ; 10 bytes @ 0x26
  1716  000027                     	ds	10
  1717  000031                     Brightness_Menu_Function@result:
  1718                           	opt stack 0
  1719                           
  1720                           ; 1 bytes @ 0x30
  1721  000031                     	ds	1
  1722  000032                     PIN_MANAGER_IOC@currentState:
  1723                           	opt stack 0
  1724                           
  1725                           ; 1 bytes @ 0x31
  1726  000032                     	ds	1
  1727  000033                     PIN_MANAGER_IOC@CHB:
  1728                           	opt stack 0
  1729                           
  1730                           ; 1 bytes @ 0x32
  1731  000033                     	ds	1
  1732  000034                     PIN_MANAGER_IOC@CHA:
  1733                           	opt stack 0
  1734                           
  1735                           ; 1 bytes @ 0x33
  1736  000034                     	ds	1
  1737  000035                     PIN_MANAGER_IOC@result:
  1738                           	opt stack 0
  1739                           
  1740                           ; 1 bytes @ 0x34
  1741  000035                     	ds	1
  1742  000036                     ??_INTERRUPT_InterruptManager:
  1743                           
  1744                           ; 1 bytes @ 0x35
  1745  000036                     	ds	18
  1746                           tblptru	equ	0xFF8
  1747                           tblptrh	equ	0xFF7
  1748                           tblptrl	equ	0xFF6
  1749                           tablat	equ	0xFF5
  1750                           postinc0	equ	0xFEE
  1751                           wreg	equ	0xFE8
  1752                           postdec1	equ	0xFE5
  1753                           fsr1l	equ	0xFE1
  1754                           
  1755 ;;
  1756 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1757 ;;
  1758 ;; *************** function _main *****************
  1759 ;; Defined at:
  1760 ;;		line 61 in file "main.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;		None
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1776 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1777 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1778 ;;Total ram usage:        1 bytes
  1779 ;; Hardware stack levels required when called:   17
  1780 ;; This function calls:
  1781 ;;		_Check_Buttons
  1782 ;;		_Draw_Arrow
  1783 ;;		_GLCD_ClearScreen
  1784 ;;		_GLCD_Initalize
  1785 ;;		_Initialize_Menus
  1786 ;;		_PWM2_LoadDutyValue
  1787 ;;		_SYSTEM_Initialize
  1788 ;; This function is called by:
  1789 ;;		Startup code after reset
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text0
  1794  001F50                     __ptext0:
  1795                           	opt stack 0
  1796  001F50                     _main:
  1797                           	opt stack 14
  1798                           
  1799                           ;main.c: 64: SYSTEM_Initialize();
  1800                           
  1801                           ;incstack = 0
  1802  001F50  EC14  F012         	call	_SYSTEM_Initialize	;wreg free
  1803                           
  1804                           ;main.c: 83: (INTCONbits.GIE = 1);
  1805  001F54  8EF2               	bsf	intcon,7,c	;volatile
  1806                           
  1807                           ;main.c: 89: (INTCONbits.PEIE = 1);
  1808  001F56  8CF2               	bsf	intcon,6,c	;volatile
  1809                           
  1810                           ;main.c: 96: PWM2_LoadDutyValue(0);
  1811  001F58  0E00               	movlw	0
  1812  001F5A  0100               	movlb	0	; () banked
  1813  001F5C  6F70               	movwf	(PWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  1814  001F5E  0E00               	movlw	0
  1815  001F60  6F6F               	movwf	PWM2_LoadDutyValue@dutyValue& (0+255),b
  1816  001F62  EC92  F010         	call	_PWM2_LoadDutyValue	;wreg free
  1817                           
  1818                           ;main.c: 97: do { LATEbits.LATE1 = 1; } while(0);
  1819  001F66  828D               	bsf	3981,1,c	;volatile
  1820                           
  1821                           ;main.c: 98: _delay((unsigned long)((10)*(8000000/4000.0)));
  1822  001F68  0E1A               	movlw	26
  1823  001F6A  0100               	movlb	0	; () banked
  1824  001F6C  6F9E               	movwf	??_main& (0+255),b
  1825  001F6E  0EF8               	movlw	248
  1826  001F70                     u4267:
  1827  001F70  2EE8               	decfsz	wreg,f,c
  1828  001F72  D7FE               	bra	u4267
  1829  001F74  2F9E               	decfsz	??_main& (0+255),f,b
  1830  001F76  D7FC               	bra	u4267
  1831  001F78  F000               	nop	
  1832                           
  1833                           ;main.c: 99: GLCD_Initalize();
  1834  001F7A  EC25  F012         	call	_GLCD_Initalize	;wreg free
  1835                           
  1836                           ;main.c: 100: GLCD_ClearScreen();
  1837  001F7E  EC22  F011         	call	_GLCD_ClearScreen	;wreg free
  1838                           
  1839                           ;main.c: 103: Initialize_Menus();
  1840  001F82  ECD0  F002         	call	_Initialize_Menus	;wreg free
  1841                           
  1842                           ;main.c: 105: currentContext = mainMenu;
  1843  001F86  0E00               	movlw	0
  1844  001F88  6E51               	movwf	_currentContext,c
  1845                           
  1846                           ;main.c: 106: mainState = setRunTime;
  1847  001F8A  0E02               	movlw	2
  1848  001F8C  6E52               	movwf	_mainState,c
  1849                           
  1850                           ;main.c: 107: Draw_Arrow();
  1851  001F8E  EC84  F00E         	call	_Draw_Arrow	;wreg free
  1852  001F92                     
  1853                           ;main.c: 110: {
  1854                           ;main.c: 111: (INTCONbits.GIE = 0);
  1855  001F92  9EF2               	bcf	intcon,7,c	;volatile
  1856                           
  1857                           ;main.c: 112: Check_Buttons();
  1858  001F94  EC88  F003         	call	_Check_Buttons	;wreg free
  1859                           
  1860                           ;main.c: 113: (INTCONbits.GIE = 1);
  1861  001F98  8EF2               	bsf	intcon,7,c	;volatile
  1862  001F9A  D7FB               	goto	l426
  1863  001F9C                     __end_of_main:
  1864                           	opt stack 0
  1865                           tblptru	equ	0xFF8
  1866                           tblptrh	equ	0xFF7
  1867                           tblptrl	equ	0xFF6
  1868                           tablat	equ	0xFF5
  1869                           intcon	equ	0xFF2
  1870                           postinc0	equ	0xFEE
  1871                           wreg	equ	0xFE8
  1872                           postdec1	equ	0xFE5
  1873                           fsr1l	equ	0xFE1
  1874                           
  1875 ;; *************** function _SYSTEM_Initialize *****************
  1876 ;; Defined at:
  1877 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2, status,0, cstack
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1895 ;;Total ram usage:        0 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:   11
  1898 ;; This function calls:
  1899 ;;		_INTERRUPT_Initialize
  1900 ;;		_OSCILLATOR_Initialize
  1901 ;;		_PIN_MANAGER_Initialize
  1902 ;;		_PWM2_Initialize
  1903 ;;		_PWM3_Initialize
  1904 ;;		_PWM4_Initialize
  1905 ;;		_TMR0_Initialize
  1906 ;;		_TMR4_Initialize
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text1
  1913  002428                     __ptext1:
  1914                           	opt stack 0
  1915  002428                     _SYSTEM_Initialize:
  1916                           	opt stack 19
  1917                           
  1918                           ;mcc.c: 114: INTERRUPT_Initialize();
  1919                           
  1920                           ;incstack = 0
  1921  002428  EC9D  F012         	call	_INTERRUPT_Initialize	;wreg free
  1922                           
  1923                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1924  00242C  EC74  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  1925                           
  1926                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1927  002430  EC80  F012         	call	_OSCILLATOR_Initialize	;wreg free
  1928                           
  1929                           ;mcc.c: 117: PWM2_Initialize();
  1930  002434  EC77  F012         	call	_PWM2_Initialize	;wreg free
  1931                           
  1932                           ;mcc.c: 118: PWM4_Initialize();
  1933  002438  EC65  F012         	call	_PWM4_Initialize	;wreg free
  1934                           
  1935                           ;mcc.c: 119: TMR4_Initialize();
  1936  00243C  EC47  F012         	call	_TMR4_Initialize	;wreg free
  1937                           
  1938                           ;mcc.c: 120: PWM3_Initialize();
  1939  002440  EC6E  F012         	call	_PWM3_Initialize	;wreg free
  1940                           
  1941                           ;mcc.c: 121: TMR0_Initialize();
  1942  002444  ECB0  F010         	call	_TMR0_Initialize	;wreg free
  1943  002448  0012               	return		;funcret
  1944  00244A                     __end_of_SYSTEM_Initialize:
  1945                           	opt stack 0
  1946                           tblptru	equ	0xFF8
  1947                           tblptrh	equ	0xFF7
  1948                           tblptrl	equ	0xFF6
  1949                           tablat	equ	0xFF5
  1950                           intcon	equ	0xFF2
  1951                           postinc0	equ	0xFEE
  1952                           wreg	equ	0xFE8
  1953                           postdec1	equ	0xFE5
  1954                           fsr1l	equ	0xFE1
  1955                           
  1956 ;; *************** function _TMR4_Initialize *****************
  1957 ;; Defined at:
  1958 ;;		line 61 in file "mcc_generated_files/tmr4.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:   10
  1979 ;; This function calls:
  1980 ;;		_TMR4_StartTimer
  1981 ;; This function is called by:
  1982 ;;		_SYSTEM_Initialize
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text2
  1987  00248E                     __ptext2:
  1988                           	opt stack 0
  1989  00248E                     _TMR4_Initialize:
  1990                           	opt stack 19
  1991                           
  1992                           ;tmr4.c: 66: T4CON = 0x02;
  1993                           
  1994                           ;incstack = 0
  1995  00248E  0E02               	movlw	2
  1996  002490  6E88               	movwf	3976,c	;volatile
  1997                           
  1998                           ;tmr4.c: 69: PR4 = 0xF9;
  1999  002492  0EF9               	movlw	249
  2000  002494  6EA9               	movwf	4009,c	;volatile
  2001                           
  2002                           ;tmr4.c: 72: TMR4 = 0x00;
  2003  002496  0E00               	movlw	0
  2004  002498  6E87               	movwf	3975,c	;volatile
  2005                           
  2006                           ;tmr4.c: 75: PIR4bits.TMR4IF = 0;
  2007  00249A  9EB7               	bcf	4023,7,c	;volatile
  2008                           
  2009                           ;tmr4.c: 78: TMR4_StartTimer();
  2010  00249C  EC99  F012         	call	_TMR4_StartTimer	;wreg free
  2011  0024A0  0012               	return		;funcret
  2012  0024A2                     __end_of_TMR4_Initialize:
  2013                           	opt stack 0
  2014                           tblptru	equ	0xFF8
  2015                           tblptrh	equ	0xFF7
  2016                           tblptrl	equ	0xFF6
  2017                           tablat	equ	0xFF5
  2018                           intcon	equ	0xFF2
  2019                           postinc0	equ	0xFEE
  2020                           wreg	equ	0xFE8
  2021                           postdec1	equ	0xFE5
  2022                           fsr1l	equ	0xFE1
  2023                           
  2024 ;; *************** function _TMR4_StartTimer *****************
  2025 ;; Defined at:
  2026 ;;		line 81 in file "mcc_generated_files/tmr4.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;		None
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		None
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2044 ;;Total ram usage:        0 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:    9
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_TMR4_Initialize
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text3
  2055  002532                     __ptext3:
  2056                           	opt stack 0
  2057  002532                     _TMR4_StartTimer:
  2058                           	opt stack 19
  2059                           
  2060                           ;tmr4.c: 84: T4CONbits.TMR4ON = 1;
  2061                           
  2062                           ;incstack = 0
  2063  002532  8488               	bsf	3976,2,c	;volatile
  2064  002534  0012               	return		;funcret
  2065  002536                     __end_of_TMR4_StartTimer:
  2066                           	opt stack 0
  2067                           tblptru	equ	0xFF8
  2068                           tblptrh	equ	0xFF7
  2069                           tblptrl	equ	0xFF6
  2070                           tablat	equ	0xFF5
  2071                           intcon	equ	0xFF2
  2072                           postinc0	equ	0xFEE
  2073                           wreg	equ	0xFE8
  2074                           postdec1	equ	0xFE5
  2075                           fsr1l	equ	0xFE1
  2076                           
  2077 ;; *************** function _TMR0_Initialize *****************
  2078 ;; Defined at:
  2079 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2095 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2096 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2097 ;;Total ram usage:        2 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:   10
  2100 ;; This function calls:
  2101 ;;		_TMR0_SetInterruptHandler
  2102 ;;		_TMR0_StartTimer
  2103 ;; This function is called by:
  2104 ;;		_SYSTEM_Initialize
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text4
  2109  002160                     __ptext4:
  2110                           	opt stack 0
  2111  002160                     _TMR0_Initialize:
  2112                           	opt stack 19
  2113                           
  2114                           ;tmr0.c: 71: T0CON = 0x14;
  2115                           
  2116                           ;incstack = 0
  2117  002160  0E14               	movlw	20
  2118  002162  6ED5               	movwf	4053,c	;volatile
  2119                           
  2120                           ;tmr0.c: 74: TMR0H = 0x0B;
  2121  002164  0E0B               	movlw	11
  2122  002166  6ED7               	movwf	4055,c	;volatile
  2123                           
  2124                           ;tmr0.c: 77: TMR0L = 0xDB;
  2125  002168  0EDB               	movlw	219
  2126  00216A  6ED6               	movwf	4054,c	;volatile
  2127                           
  2128                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  2129  00216C  50D6               	movf	4054,w,c	;volatile
  2130  00216E  CFD7 F062          	movff	4055,??_TMR0_Initialize	;volatile
  2131  002172  0100               	movlb	0	; () banked
  2132  002174  6B63               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  2133  002176  C062  F063         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  2134  00217A  6B62               	clrf	??_TMR0_Initialize& (0+255),b
  2135  00217C  1162               	iorwf	??_TMR0_Initialize& (0+255),w,b
  2136  00217E  6F9F               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  2137  002180  5163               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  2138  002182  6FA0               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  2142  002184  94F2               	bcf	intcon,2,c	;volatile
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  2146  002186  8AF2               	bsf	intcon,5,c	;volatile
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2150  002188  0E4A               	movlw	low _TMR0_DefaultInterruptHandler
  2151  00218A  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  2152  00218C  0E25               	movlw	high _TMR0_DefaultInterruptHandler
  2153  00218E  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2154  002190  EC8F  F012         	call	_TMR0_SetInterruptHandler	;wreg free
  2155                           
  2156                           ;tmr0.c: 92: TMR0_StartTimer();
  2157  002194  EC9B  F012         	call	_TMR0_StartTimer	;wreg free
  2158  002198  0012               	return		;funcret
  2159  00219A                     __end_of_TMR0_Initialize:
  2160                           	opt stack 0
  2161                           tblptru	equ	0xFF8
  2162                           tblptrh	equ	0xFF7
  2163                           tblptrl	equ	0xFF6
  2164                           tablat	equ	0xFF5
  2165                           intcon	equ	0xFF2
  2166                           postinc0	equ	0xFEE
  2167                           wreg	equ	0xFE8
  2168                           postdec1	equ	0xFE5
  2169                           fsr1l	equ	0xFE1
  2170                           
  2171 ;; *************** function _TMR0_StartTimer *****************
  2172 ;; Defined at:
  2173 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		None
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    9
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_TMR0_Initialize
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text5
  2202  002536                     __ptext5:
  2203                           	opt stack 0
  2204  002536                     _TMR0_StartTimer:
  2205                           	opt stack 19
  2206                           
  2207                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
  2208                           
  2209                           ;incstack = 0
  2210  002536  8ED5               	bsf	4053,7,c	;volatile
  2211  002538  0012               	return		;funcret
  2212  00253A                     __end_of_TMR0_StartTimer:
  2213                           	opt stack 0
  2214                           tblptru	equ	0xFF8
  2215                           tblptrh	equ	0xFF7
  2216                           tblptrl	equ	0xFF6
  2217                           tablat	equ	0xFF5
  2218                           intcon	equ	0xFF2
  2219                           postinc0	equ	0xFEE
  2220                           wreg	equ	0xFE8
  2221                           postdec1	equ	0xFE5
  2222                           fsr1l	equ	0xFE1
  2223                           
  2224 ;; *************** function _TMR0_SetInterruptHandler *****************
  2225 ;; Defined at:
  2226 ;;		line 154 in file "mcc_generated_files/tmr0.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2229 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2241 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2244 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2245 ;;Total ram usage:        2 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    9
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_TMR0_Initialize
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text6
  2256  00251E                     __ptext6:
  2257                           	opt stack 0
  2258  00251E                     _TMR0_SetInterruptHandler:
  2259                           	opt stack 19
  2260                           
  2261                           ;tmr0.c: 155: TMR0_InterruptHandler = InterruptHandler;
  2262                           
  2263                           ;incstack = 0
  2264  00251E  C060  F0A1         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  2265  002522  C061  F0A2         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  2266  002526  0012               	return		;funcret
  2267  002528                     __end_of_TMR0_SetInterruptHandler:
  2268                           	opt stack 0
  2269                           tblptru	equ	0xFF8
  2270                           tblptrh	equ	0xFF7
  2271                           tblptrl	equ	0xFF6
  2272                           tablat	equ	0xFF5
  2273                           intcon	equ	0xFF2
  2274                           postinc0	equ	0xFEE
  2275                           wreg	equ	0xFE8
  2276                           postdec1	equ	0xFE5
  2277                           fsr1l	equ	0xFE1
  2278                           
  2279 ;; *************** function _PWM4_Initialize *****************
  2280 ;; Defined at:
  2281 ;;		line 63 in file "mcc_generated_files/pwm4.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2299 ;;Total ram usage:        0 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    9
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_SYSTEM_Initialize
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text7
  2310  0024CA                     __ptext7:
  2311                           	opt stack 0
  2312  0024CA                     _PWM4_Initialize:
  2313                           	opt stack 20
  2314                           
  2315                           ;pwm4.c: 68: CCP4CON = 0x3C;
  2316                           
  2317                           ;incstack = 0
  2318  0024CA  0E3C               	movlw	60
  2319  0024CC  010F               	movlb	15	; () banked
  2320  0024CE  6F4A               	movwf	74,b	;volatile
  2321                           
  2322                           ;pwm4.c: 71: CCPR4L = 0x7C;
  2323  0024D0  0E7C               	movlw	124
  2324  0024D2  6F4B               	movwf	75,b	;volatile
  2325                           
  2326                           ;pwm4.c: 74: CCPR4H = 0x00;
  2327  0024D4  0E00               	movlw	0
  2328  0024D6  6F4C               	movwf	76,b	;volatile
  2329                           
  2330                           ; BSR set to: 15
  2331                           ;pwm4.c: 77: CCPTMRSbits.C4TSEL = 0x1;
  2332  0024D8  8699               	bsf	3993,3,c	;volatile
  2333                           
  2334                           ; BSR set to: 15
  2335  0024DA  0012               	return		;funcret
  2336  0024DC                     __end_of_PWM4_Initialize:
  2337                           	opt stack 0
  2338                           tblptru	equ	0xFF8
  2339                           tblptrh	equ	0xFF7
  2340                           tblptrl	equ	0xFF6
  2341                           tablat	equ	0xFF5
  2342                           intcon	equ	0xFF2
  2343                           postinc0	equ	0xFEE
  2344                           wreg	equ	0xFE8
  2345                           postdec1	equ	0xFE5
  2346                           fsr1l	equ	0xFE1
  2347                           
  2348 ;; *************** function _PWM3_Initialize *****************
  2349 ;; Defined at:
  2350 ;;		line 63 in file "mcc_generated_files/pwm3.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;		None
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      void 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2368 ;;Total ram usage:        0 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    9
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_SYSTEM_Initialize
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text8
  2379  0024DC                     __ptext8:
  2380                           	opt stack 0
  2381  0024DC                     _PWM3_Initialize:
  2382                           	opt stack 20
  2383                           
  2384                           ;pwm3.c: 68: CCP3CON = 0x3C;
  2385                           
  2386                           ; BSR set to: 15
  2387                           ;incstack = 0
  2388  0024DC  0E3C               	movlw	60
  2389  0024DE  010F               	movlb	15	; () banked
  2390  0024E0  6F4D               	movwf	77,b	;volatile
  2391                           
  2392                           ;pwm3.c: 71: CCPR3L = 0x7C;
  2393  0024E2  0E7C               	movlw	124
  2394  0024E4  6F4E               	movwf	78,b	;volatile
  2395                           
  2396                           ;pwm3.c: 74: CCPR3H = 0x00;
  2397  0024E6  0E00               	movlw	0
  2398  0024E8  6F4F               	movwf	79,b	;volatile
  2399                           
  2400                           ; BSR set to: 15
  2401                           ;pwm3.c: 77: CCPTMRSbits.C3TSEL = 0x1;
  2402  0024EA  8499               	bsf	3993,2,c	;volatile
  2403                           
  2404                           ; BSR set to: 15
  2405  0024EC  0012               	return		;funcret
  2406  0024EE                     __end_of_PWM3_Initialize:
  2407                           	opt stack 0
  2408                           tblptru	equ	0xFF8
  2409                           tblptrh	equ	0xFF7
  2410                           tblptrl	equ	0xFF6
  2411                           tablat	equ	0xFF5
  2412                           intcon	equ	0xFF2
  2413                           postinc0	equ	0xFEE
  2414                           wreg	equ	0xFE8
  2415                           postdec1	equ	0xFE5
  2416                           fsr1l	equ	0xFE1
  2417                           
  2418 ;; *************** function _PWM2_Initialize *****************
  2419 ;; Defined at:
  2420 ;;		line 63 in file "mcc_generated_files/pwm2.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2438 ;;Total ram usage:        0 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    9
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_SYSTEM_Initialize
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text9
  2449  0024EE                     __ptext9:
  2450                           	opt stack 0
  2451  0024EE                     _PWM2_Initialize:
  2452                           	opt stack 20
  2453                           
  2454                           ;pwm2.c: 68: CCP2CON = 0x3C;
  2455                           
  2456                           ; BSR set to: 15
  2457                           ;incstack = 0
  2458  0024EE  0E3C               	movlw	60
  2459  0024F0  010F               	movlb	15	; () banked
  2460  0024F2  6F50               	movwf	80,b	;volatile
  2461                           
  2462                           ;pwm2.c: 71: CCPR2L = 0x7C;
  2463  0024F4  0E7C               	movlw	124
  2464  0024F6  6F51               	movwf	81,b	;volatile
  2465                           
  2466                           ;pwm2.c: 74: CCPR2H = 0x00;
  2467  0024F8  0E00               	movlw	0
  2468  0024FA  6F52               	movwf	82,b	;volatile
  2469                           
  2470                           ; BSR set to: 15
  2471                           ;pwm2.c: 77: CCPTMRSbits.C2TSEL = 0x1;
  2472  0024FC  8299               	bsf	3993,1,c	;volatile
  2473                           
  2474                           ; BSR set to: 15
  2475  0024FE  0012               	return		;funcret
  2476  002500                     __end_of_PWM2_Initialize:
  2477                           	opt stack 0
  2478                           tblptru	equ	0xFF8
  2479                           tblptrh	equ	0xFF7
  2480                           tblptrl	equ	0xFF6
  2481                           tablat	equ	0xFF5
  2482                           intcon	equ	0xFF2
  2483                           postinc0	equ	0xFEE
  2484                           wreg	equ	0xFE8
  2485                           postdec1	equ	0xFE5
  2486                           fsr1l	equ	0xFE1
  2487                           
  2488 ;; *************** function _PIN_MANAGER_Initialize *****************
  2489 ;; Defined at:
  2490 ;;		line 64 in file "mcc_generated_files/pin_manager.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2508 ;;Total ram usage:        0 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    9
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_SYSTEM_Initialize
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text10
  2519  0020E8                     __ptext10:
  2520                           	opt stack 0
  2521  0020E8                     _PIN_MANAGER_Initialize:
  2522                           	opt stack 20
  2523                           
  2524                           ;pin_manager.c: 69: LATE = 0x00;
  2525                           
  2526                           ; BSR set to: 15
  2527                           ;incstack = 0
  2528  0020E8  0E00               	movlw	0
  2529  0020EA  6E8D               	movwf	3981,c	;volatile
  2530                           
  2531                           ;pin_manager.c: 70: LATD = 0x00;
  2532  0020EC  0E00               	movlw	0
  2533  0020EE  6E8C               	movwf	3980,c	;volatile
  2534                           
  2535                           ;pin_manager.c: 71: LATA = 0x00;
  2536  0020F0  0E00               	movlw	0
  2537  0020F2  6E89               	movwf	3977,c	;volatile
  2538                           
  2539                           ;pin_manager.c: 72: LATB = 0x00;
  2540  0020F4  0E00               	movlw	0
  2541  0020F6  6E8A               	movwf	3978,c	;volatile
  2542                           
  2543                           ;pin_manager.c: 73: LATC = 0x00;
  2544  0020F8  0E00               	movlw	0
  2545  0020FA  6E8B               	movwf	3979,c	;volatile
  2546                           
  2547                           ;pin_manager.c: 78: TRISE = 0x05;
  2548  0020FC  0E05               	movlw	5
  2549  0020FE  6E96               	movwf	3990,c	;volatile
  2550                           
  2551                           ;pin_manager.c: 79: TRISA = 0x01;
  2552  002100  0E01               	movlw	1
  2553  002102  6E92               	movwf	3986,c	;volatile
  2554                           
  2555                           ;pin_manager.c: 80: TRISB = 0xFF;
  2556  002104  6893               	setf	3987,c	;volatile
  2557                           
  2558                           ;pin_manager.c: 81: TRISC = 0x00;
  2559  002106  0E00               	movlw	0
  2560  002108  6E94               	movwf	3988,c	;volatile
  2561                           
  2562                           ;pin_manager.c: 82: TRISD = 0x00;
  2563  00210A  0E00               	movlw	0
  2564  00210C  6E95               	movwf	3989,c	;volatile
  2565                           
  2566                           ;pin_manager.c: 87: ANCON0 = 0x00;
  2567  00210E  0E00               	movlw	0
  2568  002110  010F               	movlb	15	; () banked
  2569  002112  6F5D               	movwf	93,b	;volatile
  2570                           
  2571                           ;pin_manager.c: 88: ANCON1 = 0x00;
  2572  002114  0E00               	movlw	0
  2573  002116  6F5C               	movwf	92,b	;volatile
  2574                           
  2575                           ;pin_manager.c: 94: WPUB = 0x00;
  2576  002118  0E00               	movlw	0
  2577  00211A  6F5B               	movwf	91,b	;volatile
  2578                           
  2579                           ; BSR set to: 15
  2580                           ;pin_manager.c: 102: IOCBbits.IOCB4 = 1;
  2581  00211C  895A               	bsf	90,4,b	;volatile
  2582                           
  2583                           ; BSR set to: 15
  2584                           ;pin_manager.c: 103: IOCBbits.IOCB5 = 1;
  2585  00211E  8B5A               	bsf	90,5,b	;volatile
  2586                           
  2587                           ; BSR set to: 15
  2588                           ;pin_manager.c: 109: INTCONbits.RBIE = 1;
  2589  002120  86F2               	bsf	intcon,3,c	;volatile
  2590                           
  2591                           ; BSR set to: 15
  2592  002122  0012               	return		;funcret
  2593  002124                     __end_of_PIN_MANAGER_Initialize:
  2594                           	opt stack 0
  2595                           tblptru	equ	0xFF8
  2596                           tblptrh	equ	0xFF7
  2597                           tblptrl	equ	0xFF6
  2598                           tablat	equ	0xFF5
  2599                           intcon	equ	0xFF2
  2600                           postinc0	equ	0xFEE
  2601                           wreg	equ	0xFE8
  2602                           postdec1	equ	0xFE5
  2603                           fsr1l	equ	0xFE1
  2604                           
  2605 ;; *************** function _OSCILLATOR_Initialize *****************
  2606 ;; Defined at:
  2607 ;;		line 124 in file "mcc_generated_files/mcc.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;		None
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2625 ;;Total ram usage:        0 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    9
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_SYSTEM_Initialize
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text11
  2636  002500                     __ptext11:
  2637                           	opt stack 0
  2638  002500                     _OSCILLATOR_Initialize:
  2639                           	opt stack 20
  2640                           
  2641                           ;mcc.c: 127: OSCCON = 0x60;
  2642                           
  2643                           ; BSR set to: 15
  2644                           ;incstack = 0
  2645  002500  0E60               	movlw	96
  2646  002502  6ED3               	movwf	4051,c	;volatile
  2647                           
  2648                           ;mcc.c: 129: OSCCON2 = 0x00;
  2649  002504  0E00               	movlw	0
  2650  002506  6ED2               	movwf	4050,c	;volatile
  2651                           
  2652                           ;mcc.c: 131: OSCTUNE = 0x00;
  2653  002508  0E00               	movlw	0
  2654  00250A  6E9B               	movwf	3995,c	;volatile
  2655                           
  2656                           ;mcc.c: 133: REFOCON = 0x00;
  2657  00250C  0E00               	movlw	0
  2658  00250E  6E9A               	movwf	3994,c	;volatile
  2659  002510  0012               	return		;funcret
  2660  002512                     __end_of_OSCILLATOR_Initialize:
  2661                           	opt stack 0
  2662                           tblptru	equ	0xFF8
  2663                           tblptrh	equ	0xFF7
  2664                           tblptrl	equ	0xFF6
  2665                           tablat	equ	0xFF5
  2666                           intcon	equ	0xFF2
  2667                           postinc0	equ	0xFEE
  2668                           wreg	equ	0xFE8
  2669                           postdec1	equ	0xFE5
  2670                           fsr1l	equ	0xFE1
  2671                           
  2672 ;; *************** function _INTERRUPT_Initialize *****************
  2673 ;; Defined at:
  2674 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		None
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    9
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_SYSTEM_Initialize
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text12
  2703  00253A                     __ptext12:
  2704                           	opt stack 0
  2705  00253A                     _INTERRUPT_Initialize:
  2706                           	opt stack 20
  2707                           
  2708                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2709                           
  2710                           ;incstack = 0
  2711  00253A  9ED0               	bcf	4048,7,c	;volatile
  2712  00253C  0012               	return		;funcret
  2713  00253E                     __end_of_INTERRUPT_Initialize:
  2714                           	opt stack 0
  2715                           tblptru	equ	0xFF8
  2716                           tblptrh	equ	0xFF7
  2717                           tblptrl	equ	0xFF6
  2718                           tablat	equ	0xFF5
  2719                           intcon	equ	0xFF2
  2720                           postinc0	equ	0xFEE
  2721                           wreg	equ	0xFE8
  2722                           postdec1	equ	0xFE5
  2723                           fsr1l	equ	0xFE1
  2724                           
  2725 ;; *************** function _GLCD_Initalize *****************
  2726 ;; Defined at:
  2727 ;;		line 15 in file "ks0108lib/KS0108.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  i               1   11[BANK0 ] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2742 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2744 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2745 ;;Total ram usage:        1 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:   12
  2748 ;; This function calls:
  2749 ;;		_GLCD_InitializePorts
  2750 ;;		_GLCD_WriteCommand
  2751 ;; This function is called by:
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text13
  2757  00244A                     __ptext13:
  2758                           	opt stack 0
  2759  00244A                     _GLCD_Initalize:
  2760                           	opt stack 18
  2761                           
  2762                           ;KS0108.c: 17: unsigned char i;
  2763                           ;KS0108.c: 18: GLCD_InitializePorts();
  2764                           
  2765                           ;incstack = 0
  2766  00244A  EC94  F012         	call	_GLCD_InitializePorts	;wreg free
  2767                           
  2768                           ;KS0108.c: 19: for(i = 0; i < 3; i++)
  2769  00244E  0E00               	movlw	0
  2770  002450  0100               	movlb	0	; () banked
  2771  002452  6F6B               	movwf	GLCD_Initalize@i& (0+255),b
  2772  002454                     l5046:
  2773                           
  2774                           ; BSR set to: 0
  2775  002454  0E02               	movlw	2
  2776  002456  656B               	cpfsgt	GLCD_Initalize@i& (0+255),b
  2777  002458  D001               	goto	l511
  2778  00245A  0012               	return	
  2779  00245C                     l511:
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;KS0108.c: 20: GLCD_WriteCommand((0x3E | 0x01), i);
  2783                           
  2784                           ; BSR set to: 0
  2785  00245C  C06B  F068         	movff	GLCD_Initalize@i,GLCD_WriteCommand@controller
  2786  002460  0E3F               	movlw	63
  2787  002462  ECEA  F010         	call	_GLCD_WriteCommand
  2788  002466  0100               	movlb	0	; () banked
  2789  002468  2B6B               	incf	GLCD_Initalize@i& (0+255),f,b
  2790  00246A  D7F4               	goto	l5046
  2791  00246C                     __end_of_GLCD_Initalize:
  2792                           	opt stack 0
  2793                           tblptru	equ	0xFF8
  2794                           tblptrh	equ	0xFF7
  2795                           tblptrl	equ	0xFF6
  2796                           tablat	equ	0xFF5
  2797                           intcon	equ	0xFF2
  2798                           postinc0	equ	0xFEE
  2799                           wreg	equ	0xFE8
  2800                           postdec1	equ	0xFE5
  2801                           fsr1l	equ	0xFE1
  2802                           
  2803 ;; *************** function _GLCD_InitializePorts *****************
  2804 ;; Defined at:
  2805 ;;		line 31 in file "ks0108lib/KS0108-PIC18.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;		None
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;		None
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2, status,0
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2823 ;;Total ram usage:        0 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; Hardware stack levels required when called:    9
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_GLCD_Initalize
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text14
  2834  002528                     __ptext14:
  2835                           	opt stack 0
  2836  002528                     _GLCD_InitializePorts:
  2837                           	opt stack 20
  2838                           
  2839                           ;KS0108-PIC18.c: 33: PORTA |= ((1 << 5) | (1 << 6) | (1 << 7));
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;incstack = 0
  2843  002528  0EE0               	movlw	224
  2844  00252A  1280               	iorwf	3968,f,c	;volatile
  2845                           
  2846                           ;KS0108-PIC18.c: 34: TRISA &= ~((1 << 5) | (1 << 6) | (1 << 7) | (1 << 2) | (1 << 1) | (
      +                          1 << 3));
  2847  00252C  0E11               	movlw	17
  2848  00252E  1692               	andwf	3986,f,c	;volatile
  2849  002530  0012               	return		;funcret
  2850  002532                     __end_of_GLCD_InitializePorts:
  2851                           	opt stack 0
  2852                           tblptru	equ	0xFF8
  2853                           tblptrh	equ	0xFF7
  2854                           tblptrl	equ	0xFF6
  2855                           tablat	equ	0xFF5
  2856                           intcon	equ	0xFF2
  2857                           postinc0	equ	0xFEE
  2858                           wreg	equ	0xFE8
  2859                           postdec1	equ	0xFE5
  2860                           fsr1l	equ	0xFE1
  2861                           
  2862 ;; *************** function _Check_Buttons *****************
  2863 ;; Defined at:
  2864 ;;		line 122 in file "main.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2881 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2882 ;;Total ram usage:        1 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:   16
  2885 ;; This function calls:
  2886 ;;		_Draw_Arrow
  2887 ;;		_Draw_Brightness_Menu
  2888 ;;		_Draw_runTime_Menu
  2889 ;;		_Initialize_Menus
  2890 ;;		_PWM2_LoadDutyValue
  2891 ;;		___awtoft
  2892 ;;		___ftdiv
  2893 ;;		___ftmul
  2894 ;;		___fttol
  2895 ;; This function is called by:
  2896 ;;		_main
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text15
  2901  000710                     __ptext15:
  2902                           	opt stack 0
  2903  000710                     _Check_Buttons:
  2904                           	opt stack 14
  2905                           
  2906                           ;main.c: 128: if(!PORTBbits.RB2)
  2907                           
  2908                           ;incstack = 0
  2909  000710  B481               	btfsc	3969,2,c	;volatile
  2910  000712  0012               	return	
  2911                           
  2912                           ;main.c: 129: {
  2913                           ;main.c: 130: _delay((unsigned long)((10)*(8000000/4000.0)));
  2914  000714  0E1A               	movlw	26
  2915  000716  0100               	movlb	0	; () banked
  2916  000718  6F9D               	movwf	??_Check_Buttons& (0+255),b
  2917  00071A  0EF8               	movlw	248
  2918  00071C                     u4277:
  2919  00071C  2EE8               	decfsz	wreg,f,c
  2920  00071E  D7FE               	bra	u4277
  2921  000720  2F9D               	decfsz	??_Check_Buttons& (0+255),f,b
  2922  000722  D7FC               	bra	u4277
  2923  000724  F000               	nop	
  2924                           
  2925                           ;main.c: 132: if(!PORTBbits.RB2)
  2926  000726  B481               	btfsc	3969,2,c	;volatile
  2927  000728  0012               	return	
  2928  00072A  D097               	goto	l454
  2929  00072C                     
  2930                           ;main.c: 136: if(currentContext == mainMenu)
  2931  00072C  5051               	movf	_currentContext,w,c
  2932  00072E  B4D8               	btfsc	status,2,c
  2933  000730  D054               	goto	l437
  2934  000732  D067               	goto	l436
  2935  000734                     
  2936                           ;main.c: 141: currentContext = runTime;
  2937  000734  0E01               	movlw	1
  2938  000736  6E51               	movwf	_currentContext,c
  2939                           
  2940                           ;main.c: 142: runTimeContext = runTimeSelection;
  2941  000738  0E00               	movlw	0
  2942  00073A  6E50               	movwf	_runTimeContext,c
  2943                           
  2944                           ;main.c: 143: Draw_runTime_Menu();
  2945  00073C  EC32  F004         	call	_Draw_runTime_Menu	;wreg free
  2946                           
  2947                           ;main.c: 144: break;
  2948  000740  D08C               	goto	l454
  2949  000742                     
  2950                           ;main.c: 146: currentContext = brightnessMenu;
  2951  000742  0E02               	movlw	2
  2952  000744  6E51               	movwf	_currentContext,c
  2953                           
  2954                           ;main.c: 147: brightnessContext = brightness;
  2955  000746  0E00               	movlw	0
  2956  000748  6E4F               	movwf	_brightnessContext,c
  2957                           
  2958                           ;main.c: 148: Draw_Brightness_Menu();
  2959  00074A  EC94  F007         	call	_Draw_Brightness_Menu	;wreg free
  2960                           
  2961                           ;main.c: 149: appliedBrightness = maxBrightness * (brightnessPercent/100);
  2962  00074E  C059  F068         	movff	_maxBrightness,___awtoft@c
  2963  000752  C05A  F069         	movff	_maxBrightness+1,___awtoft@c+1
  2964  000756  ECCD  F010         	call	___awtoft	;wreg free
  2965  00075A  C068  F077         	movff	?___awtoft,___ftmul@f1
  2966  00075E  C069  F078         	movff	?___awtoft+1,___ftmul@f1+1
  2967  000762  C06A  F079         	movff	?___awtoft+2,___ftmul@f1+2
  2968  000766  0E00               	movlw	0
  2969  000768  0100               	movlb	0	; () banked
  2970  00076A  6F6B               	movwf	___ftdiv@f2& (0+255),b
  2971  00076C  0EC8               	movlw	200
  2972  00076E  6F6C               	movwf	(___ftdiv@f2+1)& (0+255),b
  2973  000770  0E42               	movlw	66
  2974  000772  6F6D               	movwf	(___ftdiv@f2+2)& (0+255),b
  2975  000774  C056  F068         	movff	_brightnessPercent,___ftdiv@f1
  2976  000778  C057  F069         	movff	_brightnessPercent+1,___ftdiv@f1+1
  2977  00077C  C058  F06A         	movff	_brightnessPercent+2,___ftdiv@f1+2
  2978  000780  ECAD  F006         	call	___ftdiv	;wreg free
  2979  000784  C068  F07A         	movff	?___ftdiv,___ftmul@f2
  2980  000788  C069  F07B         	movff	?___ftdiv+1,___ftmul@f2+1
  2981  00078C  C06A  F07C         	movff	?___ftdiv+2,___ftmul@f2+2
  2982  000790  EC3E  F005         	call	___ftmul	;wreg free
  2983  000794  C077  F053         	movff	?___ftmul,_appliedBrightness
  2984  000798  C078  F054         	movff	?___ftmul+1,_appliedBrightness+1
  2985  00079C  C079  F055         	movff	?___ftmul+2,_appliedBrightness+2
  2986                           
  2987                           ;main.c: 150: PWM2_LoadDutyValue(appliedBrightness);
  2988  0007A0  C053  F060         	movff	_appliedBrightness,___fttol@f1
  2989  0007A4  C054  F061         	movff	_appliedBrightness+1,___fttol@f1+1
  2990  0007A8  C055  F062         	movff	_appliedBrightness+2,___fttol@f1+2
  2991  0007AC  ECC2  F004         	call	___fttol	;wreg free
  2992  0007B0  C060  F06F         	movff	?___fttol,PWM2_LoadDutyValue@dutyValue
  2993  0007B4  C061  F070         	movff	?___fttol+1,PWM2_LoadDutyValue@dutyValue+1
  2994  0007B8  EC92  F010         	call	_PWM2_LoadDutyValue	;wreg free
  2995                           
  2996                           ;main.c: 151: break;
  2997  0007BC  D04E               	goto	l454
  2998  0007BE                     
  2999                           ;main.c: 153: currentContext = startColorRed;
  3000  0007BE  0E03               	movlw	3
  3001  0007C0  D005               	goto	L3
  3002  0007C2                     
  3003                           ;main.c: 156: currentContext = endColorRed;
  3004  0007C2  0E06               	movlw	6
  3005  0007C4  D003               	goto	L3
  3006  0007C6                     
  3007                           ;main.c: 159: currentContext = backlightMenu;
  3008  0007C6  0E09               	movlw	9
  3009  0007C8  D001               	goto	L3
  3010  0007CA                     
  3011                           ;main.c: 162: currentContext = selectStateMenu;
  3012  0007CA  0E0A               	movlw	10
  3013  0007CC                     L3:
  3014  0007CC  6E51               	movwf	_currentContext,c
  3015                           
  3016                           ;main.c: 163: break;
  3017  0007CE  D045               	goto	l454
  3018  0007D0                     
  3019                           ;main.c: 165: currentContext = mainMenu;
  3020  0007D0  0E00               	movlw	0
  3021  0007D2  6E51               	movwf	_currentContext,c
  3022                           
  3023                           ;main.c: 166: Initialize_Menus();
  3024  0007D4  ECD0  F002         	call	_Initialize_Menus	;wreg free
  3025                           
  3026                           ;main.c: 168: }
  3027                           
  3028                           ;main.c: 167: break;
  3029  0007D8  D040               	goto	l454
  3030  0007DA                     l437:
  3031  0007DA  5052               	movf	_mainState,w,c
  3032                           
  3033                           ; Switch size 1, requested type "space"
  3034                           ; Number of cases is 6, Range of values is 2 to 7
  3035                           ; switch strategies available:
  3036                           ; Name         Instructions Cycles
  3037                           ; simple_byte           19    10 (average)
  3038                           ;	Chosen strategy is simple_byte
  3039  0007DC  0A02               	xorlw	2	; case 2
  3040  0007DE  B4D8               	btfsc	status,2,c
  3041  0007E0  D7A9               	goto	l438
  3042  0007E2  0A01               	xorlw	1	; case 3
  3043  0007E4  B4D8               	btfsc	status,2,c
  3044  0007E6  D7AD               	goto	l440
  3045  0007E8  0A07               	xorlw	7	; case 4
  3046  0007EA  B4D8               	btfsc	status,2,c
  3047  0007EC  D7E8               	goto	l441
  3048  0007EE  0A01               	xorlw	1	; case 5
  3049  0007F0  B4D8               	btfsc	status,2,c
  3050  0007F2  D7E7               	goto	l442
  3051  0007F4  0A03               	xorlw	3	; case 6
  3052  0007F6  B4D8               	btfsc	status,2,c
  3053  0007F8  D7E6               	goto	l443
  3054  0007FA  0A01               	xorlw	1	; case 7
  3055  0007FC  B4D8               	btfsc	status,2,c
  3056  0007FE  D7E5               	goto	l444
  3057  000800  D7E7               	goto	l445
  3058  000802                     l436:
  3059                           
  3060                           ;main.c: 171: else if(currentContext == runTime)
  3061  000802  0451               	decf	_currentContext,w,c
  3062  000804  A4D8               	btfss	status,2,c
  3063  000806  D00B               	goto	l447
  3064                           
  3065                           ;main.c: 172: {
  3066                           ;main.c: 173: if(runTimeContext == runTimeBack)
  3067  000808  0E02               	movlw	2
  3068  00080A  1850               	xorwf	_runTimeContext,w,c
  3069  00080C  A4D8               	btfss	status,2,c
  3070  00080E  D01A               	goto	l452
  3071                           
  3072                           ;main.c: 174: {
  3073                           ;main.c: 176: currentContext = mainMenu;
  3074  000810  0E00               	movlw	0
  3075  000812  6E51               	movwf	_currentContext,c
  3076                           
  3077                           ;main.c: 177: Initialize_Menus();
  3078  000814  ECD0  F002         	call	_Initialize_Menus	;wreg free
  3079                           
  3080                           ;main.c: 178: }
  3081  000818  D020               	goto	l454
  3082  00081A                     u4100:
  3083  00081A  6E4E               	movwf	_adjustValues,c
  3084                           
  3085                           ;main.c: 184: }
  3086                           ;main.c: 185: }
  3087  00081C  D01E               	goto	l454
  3088  00081E                     l447:
  3089                           
  3090                           ;main.c: 187: else if(currentContext == brightnessMenu)
  3091  00081E  0E02               	movlw	2
  3092  000820  1851               	xorwf	_currentContext,w,c
  3093  000822  A4D8               	btfss	status,2,c
  3094  000824  D016               	goto	l451
  3095                           
  3096                           ;main.c: 188: {
  3097                           ;main.c: 189: if(brightnessContext == brightnessBack)
  3098  000826  044F               	decf	_brightnessContext,w,c
  3099  000828  A4D8               	btfss	status,2,c
  3100  00082A  D00C               	goto	l452
  3101                           
  3102                           ;main.c: 190: {
  3103                           ;main.c: 192: currentContext = mainMenu;
  3104  00082C  0E00               	movlw	0
  3105  00082E  6E51               	movwf	_currentContext,c
  3106                           
  3107                           ;main.c: 193: PWM2_LoadDutyValue(0);
  3108  000830  0E00               	movlw	0
  3109  000832  0100               	movlb	0	; () banked
  3110  000834  6F70               	movwf	(PWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  3111  000836  0E00               	movlw	0
  3112  000838  6F6F               	movwf	PWM2_LoadDutyValue@dutyValue& (0+255),b
  3113  00083A  EC92  F010         	call	_PWM2_LoadDutyValue	;wreg free
  3114                           
  3115                           ;main.c: 194: Initialize_Menus();
  3116  00083E  ECD0  F002         	call	_Initialize_Menus	;wreg free
  3117                           
  3118                           ;main.c: 195: }
  3119  000842  D00B               	goto	l454
  3120  000844                     l452:
  3121                           
  3122                           ;main.c: 196: else
  3123                           ;main.c: 197: {
  3124                           ;main.c: 198: adjustValues = !adjustValues;
  3125  000844  504E               	movf	_adjustValues,w,c
  3126  000846  A4D8               	btfss	status,2,c
  3127  000848  D002               	goto	u4130
  3128  00084A  0E01               	movlw	1
  3129  00084C  D7E6               	goto	u4100
  3130  00084E                     u4130:
  3131  00084E  0E00               	movlw	0
  3132  000850  D7E4               	goto	u4100
  3133  000852                     l451:
  3134                           
  3135                           ;main.c: 202: else
  3136                           ;main.c: 203: {
  3137                           ;main.c: 204: currentContext = mainMenu;
  3138  000852  0E00               	movlw	0
  3139  000854  6E51               	movwf	_currentContext,c
  3140                           
  3141                           ;main.c: 205: Initialize_Menus();
  3142  000856  ECD0  F002         	call	_Initialize_Menus	;wreg free
  3143  00085A                     l454:
  3144  00085A  A481               	btfss	3969,2,c	;volatile
  3145  00085C  D767               	goto	l435
  3146                           
  3147                           ;main.c: 206: }
  3148                           ;main.c: 208: Draw_Arrow();
  3149  00085E  EC84  F00E         	call	_Draw_Arrow	;wreg free
  3150  000862  0012               	return	
  3151  000864                     __end_of_Check_Buttons:
  3152                           	opt stack 0
  3153                           tblptru	equ	0xFF8
  3154                           tblptrh	equ	0xFF7
  3155                           tblptrl	equ	0xFF6
  3156                           tablat	equ	0xFF5
  3157                           intcon	equ	0xFF2
  3158                           postinc0	equ	0xFEE
  3159                           wreg	equ	0xFE8
  3160                           postdec1	equ	0xFE5
  3161                           fsr1l	equ	0xFE1
  3162                           status	equ	0xFD8
  3163                           
  3164 ;; *************** function ___ftmul *****************
  3165 ;; Defined at:
  3166 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  f1              3   23[BANK0 ] float 
  3169 ;;  f2              3   26[BANK0 ] float 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  f3_as_produc    3   33[BANK0 ] unsigned um
  3172 ;;  sign            1   37[BANK0 ] unsigned char 
  3173 ;;  cntr            1   36[BANK0 ] unsigned char 
  3174 ;;  exp             1   32[BANK0 ] unsigned char 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  3   23[BANK0 ] float 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3184 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3185 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3186 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3187 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3188 ;;Total ram usage:       15 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:   10
  3191 ;; This function calls:
  3192 ;;		___ftpack
  3193 ;; This function is called by:
  3194 ;;		_Check_Buttons
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text16
  3199  000A7C                     __ptext16:
  3200                           	opt stack 0
  3201  000A7C                     ___ftmul:
  3202                           	opt stack 19
  3203                           
  3204                           ;incstack = 0
  3205  000A7C  C079  F07D         	movff	___ftmul@f1+2,??___ftmul
  3206  000A80  0100               	movlb	0	; () banked
  3207  000A82  6B7E               	clrf	(??___ftmul+1)& (0+255),b
  3208  000A84  6B7F               	clrf	(??___ftmul+2)& (0+255),b
  3209  000A86  3578               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  3210  000A88  377D               	rlcf	??___ftmul& (0+255),f,b
  3211  000A8A  E301               	bnc	u3911
  3212  000A8C  817E               	bsf	(??___ftmul+1)& (0+255),0,b
  3213  000A8E                     u3911:
  3214  000A8E  517D               	movf	??___ftmul& (0+255),w,b
  3215  000A90  6F80               	movwf	___ftmul@exp& (0+255),b
  3216  000A92  5180               	movf	___ftmul@exp& (0+255),w,b
  3217  000A94  A4D8               	btfss	status,2,c
  3218  000A96  D007               	goto	l1068
  3219                           
  3220                           ; BSR set to: 0
  3221  000A98  0E00               	movlw	0
  3222  000A9A  6F77               	movwf	?___ftmul& (0+255),b
  3223  000A9C  0E00               	movlw	0
  3224  000A9E  6F78               	movwf	(?___ftmul+1)& (0+255),b
  3225  000AA0  0E00               	movlw	0
  3226  000AA2  6F79               	movwf	(?___ftmul+2)& (0+255),b
  3227                           
  3228                           ; BSR set to: 0
  3229  000AA4  0012               	return	
  3230  000AA6                     l1068:
  3231                           
  3232                           ; BSR set to: 0
  3233                           
  3234                           ; BSR set to: 0
  3235  000AA6  C07C  F07D         	movff	___ftmul@f2+2,??___ftmul
  3236  000AAA  6B7E               	clrf	(??___ftmul+1)& (0+255),b
  3237  000AAC  6B7F               	clrf	(??___ftmul+2)& (0+255),b
  3238  000AAE  357B               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  3239  000AB0  377D               	rlcf	??___ftmul& (0+255),f,b
  3240  000AB2  E301               	bnc	u3931
  3241  000AB4  817E               	bsf	(??___ftmul+1)& (0+255),0,b
  3242  000AB6                     u3931:
  3243  000AB6  517D               	movf	??___ftmul& (0+255),w,b
  3244  000AB8  6F85               	movwf	___ftmul@sign& (0+255),b
  3245  000ABA  5185               	movf	___ftmul@sign& (0+255),w,b
  3246  000ABC  A4D8               	btfss	status,2,c
  3247  000ABE  D007               	goto	l1070
  3248                           
  3249                           ; BSR set to: 0
  3250  000AC0  0E00               	movlw	0
  3251  000AC2  6F77               	movwf	?___ftmul& (0+255),b
  3252  000AC4  0E00               	movlw	0
  3253  000AC6  6F78               	movwf	(?___ftmul+1)& (0+255),b
  3254  000AC8  0E00               	movlw	0
  3255  000ACA  6F79               	movwf	(?___ftmul+2)& (0+255),b
  3256                           
  3257                           ; BSR set to: 0
  3258  000ACC  0012               	return	
  3259  000ACE                     l1070:
  3260                           
  3261                           ; BSR set to: 0
  3262                           
  3263                           ; BSR set to: 0
  3264  000ACE  5185               	movf	___ftmul@sign& (0+255),w,b
  3265  000AD0  0F7B               	addlw	123
  3266  000AD2  2780               	addwf	___ftmul@exp& (0+255),f,b
  3267                           
  3268                           ; BSR set to: 0
  3269  000AD4  C079  F085         	movff	___ftmul@f1+2,___ftmul@sign
  3270  000AD8  517C               	movf	(___ftmul@f2+2)& (0+255),w,b
  3271  000ADA  1B85               	xorwf	___ftmul@sign& (0+255),f,b
  3272  000ADC  0E80               	movlw	128
  3273  000ADE  1785               	andwf	___ftmul@sign& (0+255),f,b
  3274                           
  3275                           ; BSR set to: 0
  3276  000AE0  8F78               	bsf	(___ftmul@f1+1)& (0+255),7,b
  3277                           
  3278                           ; BSR set to: 0
  3279  000AE2  8F7B               	bsf	(___ftmul@f2+1)& (0+255),7,b
  3280                           
  3281                           ; BSR set to: 0
  3282  000AE4  0EFF               	movlw	255
  3283  000AE6  177A               	andwf	___ftmul@f2& (0+255),f,b
  3284  000AE8  0EFF               	movlw	255
  3285  000AEA  177B               	andwf	(___ftmul@f2+1)& (0+255),f,b
  3286  000AEC  0E00               	movlw	0
  3287  000AEE  177C               	andwf	(___ftmul@f2+2)& (0+255),f,b
  3288                           
  3289                           ; BSR set to: 0
  3290  000AF0  0E00               	movlw	0
  3291  000AF2  6F81               	movwf	___ftmul@f3_as_product& (0+255),b
  3292  000AF4  0E00               	movlw	0
  3293  000AF6  6F82               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  3294  000AF8  0E00               	movlw	0
  3295  000AFA  6F83               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  3296                           
  3297                           ; BSR set to: 0
  3298  000AFC  0E07               	movlw	7
  3299  000AFE  6F84               	movwf	___ftmul@cntr& (0+255),b
  3300  000B00                     
  3301                           ; BSR set to: 0
  3302                           
  3303                           ; BSR set to: 0
  3304  000B00  A177               	btfss	___ftmul@f1& (0+255),0,b
  3305  000B02  D006               	goto	l1072
  3306                           
  3307                           ; BSR set to: 0
  3308  000B04  517A               	movf	___ftmul@f2& (0+255),w,b
  3309  000B06  2781               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3310  000B08  517B               	movf	(___ftmul@f2+1)& (0+255),w,b
  3311  000B0A  2382               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3312  000B0C  517C               	movf	(___ftmul@f2+2)& (0+255),w,b
  3313  000B0E  2383               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3314  000B10                     l1072:
  3315                           
  3316                           ; BSR set to: 0
  3317                           
  3318                           ; BSR set to: 0
  3319  000B10  90D8               	bcf	status,0,c
  3320  000B12  3379               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3321  000B14  3378               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3322  000B16  3377               	rrcf	___ftmul@f1& (0+255),f,b
  3323  000B18  90D8               	bcf	status,0,c
  3324  000B1A  377A               	rlcf	___ftmul@f2& (0+255),f,b
  3325  000B1C  377B               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  3326  000B1E  377C               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  3327                           
  3328                           ; BSR set to: 0
  3329  000B20  2F84               	decfsz	___ftmul@cntr& (0+255),f,b
  3330  000B22  D7EE               	goto	l1071
  3331                           
  3332                           ; BSR set to: 0
  3333                           
  3334                           ; BSR set to: 0
  3335  000B24  0E09               	movlw	9
  3336  000B26  6F84               	movwf	___ftmul@cntr& (0+255),b
  3337  000B28                     
  3338                           ; BSR set to: 0
  3339                           
  3340                           ; BSR set to: 0
  3341  000B28  A177               	btfss	___ftmul@f1& (0+255),0,b
  3342  000B2A  D006               	goto	l1075
  3343                           
  3344                           ; BSR set to: 0
  3345  000B2C  517A               	movf	___ftmul@f2& (0+255),w,b
  3346  000B2E  2781               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3347  000B30  517B               	movf	(___ftmul@f2+1)& (0+255),w,b
  3348  000B32  2382               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3349  000B34  517C               	movf	(___ftmul@f2+2)& (0+255),w,b
  3350  000B36  2383               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3351  000B38                     l1075:
  3352                           
  3353                           ; BSR set to: 0
  3354                           
  3355                           ; BSR set to: 0
  3356  000B38  90D8               	bcf	status,0,c
  3357  000B3A  3379               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3358  000B3C  3378               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3359  000B3E  3377               	rrcf	___ftmul@f1& (0+255),f,b
  3360  000B40  90D8               	bcf	status,0,c
  3361  000B42  3383               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  3362  000B44  3382               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  3363  000B46  3381               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  3364                           
  3365                           ; BSR set to: 0
  3366  000B48  2F84               	decfsz	___ftmul@cntr& (0+255),f,b
  3367  000B4A  D7EE               	goto	l1074
  3368                           
  3369                           ; BSR set to: 0
  3370                           
  3371                           ; BSR set to: 0
  3372  000B4C  C081  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  3373  000B50  C082  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3374  000B54  C083  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3375  000B58  C080  F063         	movff	___ftmul@exp,___ftpack@exp
  3376  000B5C  C085  F064         	movff	___ftmul@sign,___ftpack@sign
  3377  000B60  ECFF  F007         	call	___ftpack	;wreg free
  3378  000B64  C060  F077         	movff	?___ftpack,?___ftmul
  3379  000B68  C061  F078         	movff	?___ftpack+1,?___ftmul+1
  3380  000B6C  C062  F079         	movff	?___ftpack+2,?___ftmul+2
  3381  000B70  0012               	return	
  3382  000B72                     __end_of___ftmul:
  3383                           	opt stack 0
  3384                           tblptru	equ	0xFF8
  3385                           tblptrh	equ	0xFF7
  3386                           tblptrl	equ	0xFF6
  3387                           tablat	equ	0xFF5
  3388                           intcon	equ	0xFF2
  3389                           postinc0	equ	0xFEE
  3390                           wreg	equ	0xFE8
  3391                           postdec1	equ	0xFE5
  3392                           fsr1l	equ	0xFE1
  3393                           status	equ	0xFD8
  3394                           
  3395 ;; *************** function ___ftdiv *****************
  3396 ;; Defined at:
  3397 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  f1              3    8[BANK0 ] float 
  3400 ;;  f2              3   11[BANK0 ] float 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  f3              3   18[BANK0 ] float 
  3403 ;;  sign            1   22[BANK0 ] unsigned char 
  3404 ;;  exp             1   21[BANK0 ] unsigned char 
  3405 ;;  cntr            1   17[BANK0 ] unsigned char 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  3    8[BANK0 ] float 
  3408 ;; Registers used:
  3409 ;;		wreg, status,2, status,0, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3415 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3416 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3417 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3418 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3419 ;;Total ram usage:       15 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:   10
  3422 ;; This function calls:
  3423 ;;		___ftpack
  3424 ;; This function is called by:
  3425 ;;		_Check_Buttons
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text17
  3430  000D5A                     __ptext17:
  3431                           	opt stack 0
  3432  000D5A                     ___ftdiv:
  3433                           	opt stack 19
  3434                           
  3435                           ;incstack = 0
  3436  000D5A  C06A  F06E         	movff	___ftdiv@f1+2,??___ftdiv
  3437  000D5E  0100               	movlb	0	; () banked
  3438  000D60  6B6F               	clrf	(??___ftdiv+1)& (0+255),b
  3439  000D62  6B70               	clrf	(??___ftdiv+2)& (0+255),b
  3440  000D64  3569               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3441  000D66  376E               	rlcf	??___ftdiv& (0+255),f,b
  3442  000D68  E301               	bnc	u3861
  3443  000D6A  816F               	bsf	(??___ftdiv+1)& (0+255),0,b
  3444  000D6C                     u3861:
  3445  000D6C  516E               	movf	??___ftdiv& (0+255),w,b
  3446  000D6E  6F75               	movwf	___ftdiv@exp& (0+255),b
  3447  000D70  5175               	movf	___ftdiv@exp& (0+255),w,b
  3448  000D72  A4D8               	btfss	status,2,c
  3449  000D74  D007               	goto	l1053
  3450                           
  3451                           ; BSR set to: 0
  3452  000D76  0E00               	movlw	0
  3453  000D78  6F68               	movwf	?___ftdiv& (0+255),b
  3454  000D7A  0E00               	movlw	0
  3455  000D7C  6F69               	movwf	(?___ftdiv+1)& (0+255),b
  3456  000D7E  0E00               	movlw	0
  3457  000D80  6F6A               	movwf	(?___ftdiv+2)& (0+255),b
  3458                           
  3459                           ; BSR set to: 0
  3460  000D82  0012               	return	
  3461  000D84                     l1053:
  3462                           
  3463                           ; BSR set to: 0
  3464                           
  3465                           ; BSR set to: 0
  3466  000D84  C06D  F06E         	movff	___ftdiv@f2+2,??___ftdiv
  3467  000D88  6B6F               	clrf	(??___ftdiv+1)& (0+255),b
  3468  000D8A  6B70               	clrf	(??___ftdiv+2)& (0+255),b
  3469  000D8C  356C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3470  000D8E  376E               	rlcf	??___ftdiv& (0+255),f,b
  3471  000D90  E301               	bnc	u3881
  3472  000D92  816F               	bsf	(??___ftdiv+1)& (0+255),0,b
  3473  000D94                     u3881:
  3474  000D94  516E               	movf	??___ftdiv& (0+255),w,b
  3475  000D96  6F76               	movwf	___ftdiv@sign& (0+255),b
  3476  000D98  5176               	movf	___ftdiv@sign& (0+255),w,b
  3477  000D9A  A4D8               	btfss	status,2,c
  3478  000D9C  D007               	goto	l1055
  3479                           
  3480                           ; BSR set to: 0
  3481  000D9E  0E00               	movlw	0
  3482  000DA0  6F68               	movwf	?___ftdiv& (0+255),b
  3483  000DA2  0E00               	movlw	0
  3484  000DA4  6F69               	movwf	(?___ftdiv+1)& (0+255),b
  3485  000DA6  0E00               	movlw	0
  3486  000DA8  6F6A               	movwf	(?___ftdiv+2)& (0+255),b
  3487                           
  3488                           ; BSR set to: 0
  3489  000DAA  0012               	return	
  3490  000DAC                     l1055:
  3491                           
  3492                           ; BSR set to: 0
  3493                           
  3494                           ; BSR set to: 0
  3495  000DAC  0E00               	movlw	0
  3496  000DAE  6F72               	movwf	___ftdiv@f3& (0+255),b
  3497  000DB0  0E00               	movlw	0
  3498  000DB2  6F73               	movwf	(___ftdiv@f3+1)& (0+255),b
  3499  000DB4  0E00               	movlw	0
  3500  000DB6  6F74               	movwf	(___ftdiv@f3+2)& (0+255),b
  3501                           
  3502                           ; BSR set to: 0
  3503  000DB8  5176               	movf	___ftdiv@sign& (0+255),w,b
  3504  000DBA  0F89               	addlw	137
  3505  000DBC  5F75               	subwf	___ftdiv@exp& (0+255),f,b
  3506                           
  3507                           ; BSR set to: 0
  3508  000DBE  C06A  F076         	movff	___ftdiv@f1+2,___ftdiv@sign
  3509                           
  3510                           ; BSR set to: 0
  3511  000DC2  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3512  000DC4  1B76               	xorwf	___ftdiv@sign& (0+255),f,b
  3513                           
  3514                           ; BSR set to: 0
  3515  000DC6  0E80               	movlw	128
  3516  000DC8  1776               	andwf	___ftdiv@sign& (0+255),f,b
  3517                           
  3518                           ; BSR set to: 0
  3519  000DCA  8F69               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3520                           
  3521                           ; BSR set to: 0
  3522  000DCC  0EFF               	movlw	255
  3523  000DCE  1768               	andwf	___ftdiv@f1& (0+255),f,b
  3524  000DD0  0EFF               	movlw	255
  3525  000DD2  1769               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3526  000DD4  0E00               	movlw	0
  3527  000DD6  176A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3528                           
  3529                           ; BSR set to: 0
  3530  000DD8  8F6C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3531                           
  3532                           ; BSR set to: 0
  3533  000DDA  0EFF               	movlw	255
  3534  000DDC  176B               	andwf	___ftdiv@f2& (0+255),f,b
  3535  000DDE  0EFF               	movlw	255
  3536  000DE0  176C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3537  000DE2  0E00               	movlw	0
  3538  000DE4  176D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3539                           
  3540                           ; BSR set to: 0
  3541  000DE6  0E18               	movlw	24
  3542  000DE8  6F71               	movwf	___ftdiv@cntr& (0+255),b
  3543  000DEA                     
  3544                           ; BSR set to: 0
  3545                           
  3546                           ; BSR set to: 0
  3547  000DEA  90D8               	bcf	status,0,c
  3548  000DEC  3772               	rlcf	___ftdiv@f3& (0+255),f,b
  3549  000DEE  3773               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3550  000DF0  3774               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3551                           
  3552                           ; BSR set to: 0
  3553  000DF2  516B               	movf	___ftdiv@f2& (0+255),w,b
  3554  000DF4  5D68               	subwf	___ftdiv@f1& (0+255),w,b
  3555  000DF6  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3556  000DF8  5969               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3557  000DFA  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3558  000DFC  596A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3559  000DFE  A0D8               	btfss	status,0,c
  3560  000E00  D007               	goto	l1057
  3561                           
  3562                           ; BSR set to: 0
  3563  000E02  516B               	movf	___ftdiv@f2& (0+255),w,b
  3564  000E04  5F68               	subwf	___ftdiv@f1& (0+255),f,b
  3565  000E06  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3566  000E08  5B69               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3567  000E0A  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3568  000E0C  5B6A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3569                           
  3570                           ; BSR set to: 0
  3571  000E0E  8172               	bsf	___ftdiv@f3& (0+255),0,b
  3572  000E10                     l1057:
  3573                           
  3574                           ; BSR set to: 0
  3575  000E10  90D8               	bcf	status,0,c
  3576  000E12  3768               	rlcf	___ftdiv@f1& (0+255),f,b
  3577  000E14  3769               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3578  000E16  376A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3579                           
  3580                           ; BSR set to: 0
  3581  000E18  2F71               	decfsz	___ftdiv@cntr& (0+255),f,b
  3582  000E1A  D7E7               	goto	l1056
  3583                           
  3584                           ; BSR set to: 0
  3585                           
  3586                           ; BSR set to: 0
  3587  000E1C  C072  F060         	movff	___ftdiv@f3,___ftpack@arg
  3588  000E20  C073  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3589  000E24  C074  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3590  000E28  C075  F063         	movff	___ftdiv@exp,___ftpack@exp
  3591  000E2C  C076  F064         	movff	___ftdiv@sign,___ftpack@sign
  3592  000E30  ECFF  F007         	call	___ftpack	;wreg free
  3593  000E34  C060  F068         	movff	?___ftpack,?___ftdiv
  3594  000E38  C061  F069         	movff	?___ftpack+1,?___ftdiv+1
  3595  000E3C  C062  F06A         	movff	?___ftpack+2,?___ftdiv+2
  3596  000E40  0012               	return	
  3597  000E42                     __end_of___ftdiv:
  3598                           	opt stack 0
  3599                           tblptru	equ	0xFF8
  3600                           tblptrh	equ	0xFF7
  3601                           tblptrl	equ	0xFF6
  3602                           tablat	equ	0xFF5
  3603                           intcon	equ	0xFF2
  3604                           postinc0	equ	0xFEE
  3605                           wreg	equ	0xFE8
  3606                           postdec1	equ	0xFE5
  3607                           fsr1l	equ	0xFE1
  3608                           status	equ	0xFD8
  3609                           
  3610 ;; *************** function ___awtoft *****************
  3611 ;; Defined at:
  3612 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  c               2    8[BANK0 ] int 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  sign            1   11[BANK0 ] unsigned char 
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  3    8[BANK0 ] float 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3626 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3629 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3630 ;;Total ram usage:        4 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:   10
  3633 ;; This function calls:
  3634 ;;		___ftpack
  3635 ;; This function is called by:
  3636 ;;		_Check_Buttons
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text18
  3641  00219A                     __ptext18:
  3642                           	opt stack 0
  3643  00219A                     ___awtoft:
  3644                           	opt stack 19
  3645                           
  3646                           ;incstack = 0
  3647  00219A  0E00               	movlw	0
  3648  00219C  0100               	movlb	0	; () banked
  3649  00219E  6F6B               	movwf	___awtoft@sign& (0+255),b
  3650                           
  3651                           ; BSR set to: 0
  3652  0021A0  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  3653  0021A2  D006               	goto	l970
  3654                           
  3655                           ; BSR set to: 0
  3656  0021A4  6D68               	negf	___awtoft@c& (0+255),b
  3657  0021A6  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  3658  0021A8  B0D8               	btfsc	status,0,c
  3659  0021AA  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  3660                           
  3661                           ; BSR set to: 0
  3662  0021AC  0E01               	movlw	1
  3663  0021AE  6F6B               	movwf	___awtoft@sign& (0+255),b
  3664  0021B0                     l970:
  3665                           
  3666                           ; BSR set to: 0
  3667                           
  3668                           ; BSR set to: 0
  3669  0021B0  C068  F060         	movff	___awtoft@c,___ftpack@arg
  3670  0021B4  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  3671  0021B8  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  3672  0021BA  0E8E               	movlw	142
  3673  0021BC  6F63               	movwf	___ftpack@exp& (0+255),b
  3674  0021BE  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
  3675  0021C2  ECFF  F007         	call	___ftpack	;wreg free
  3676  0021C6  C060  F068         	movff	?___ftpack,?___awtoft
  3677  0021CA  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  3678  0021CE  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  3679  0021D2  0012               	return	
  3680  0021D4                     __end_of___awtoft:
  3681                           	opt stack 0
  3682                           tblptru	equ	0xFF8
  3683                           tblptrh	equ	0xFF7
  3684                           tblptrl	equ	0xFF6
  3685                           tablat	equ	0xFF5
  3686                           intcon	equ	0xFF2
  3687                           postinc0	equ	0xFEE
  3688                           wreg	equ	0xFE8
  3689                           postdec1	equ	0xFE5
  3690                           fsr1l	equ	0xFE1
  3691                           status	equ	0xFD8
  3692                           
  3693 ;; *************** function ___ftpack *****************
  3694 ;; Defined at:
  3695 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  arg             3    0[BANK0 ] unsigned um
  3698 ;;  exp             1    3[BANK0 ] unsigned char 
  3699 ;;  sign            1    4[BANK0 ] unsigned char 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  3    0[BANK0 ] float 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3711 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3713 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3714 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3715 ;;Total ram usage:        8 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    9
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		___awtoft
  3722 ;;		___ftdiv
  3723 ;;		___ftmul
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text19
  3728  000FFE                     __ptext19:
  3729                           	opt stack 0
  3730  000FFE                     ___ftpack:
  3731                           	opt stack 19
  3732                           
  3733                           ;incstack = 0
  3734  000FFE  0100               	movlb	0	; () banked
  3735  001000  5163               	movf	___ftpack@exp& (0+255),w,b
  3736  001002  B4D8               	btfsc	status,2,c
  3737  001004  D005               	goto	u3260
  3738                           
  3739                           ; BSR set to: 0
  3740  001006  5160               	movf	___ftpack@arg& (0+255),w,b
  3741  001008  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  3742  00100A  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  3743  00100C  A4D8               	btfss	status,2,c
  3744  00100E  D00C               	goto	l989
  3745  001010                     u3260:
  3746                           
  3747                           ; BSR set to: 0
  3748                           
  3749                           ; BSR set to: 0
  3750  001010  0E00               	movlw	0
  3751  001012  6F60               	movwf	?___ftpack& (0+255),b
  3752  001014  0E00               	movlw	0
  3753  001016  6F61               	movwf	(?___ftpack+1)& (0+255),b
  3754  001018  0E00               	movlw	0
  3755  00101A  6F62               	movwf	(?___ftpack+2)& (0+255),b
  3756                           
  3757                           ; BSR set to: 0
  3758  00101C  0012               	return	
  3759  00101E                     
  3760                           ; BSR set to: 0
  3761                           
  3762                           ; BSR set to: 0
  3763  00101E  2B63               	incf	___ftpack@exp& (0+255),f,b
  3764  001020  90D8               	bcf	status,0,c
  3765  001022  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3766  001024  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3767  001026  3360               	rrcf	___ftpack@arg& (0+255),f,b
  3768  001028                     l989:
  3769                           
  3770                           ; BSR set to: 0
  3771                           
  3772                           ; BSR set to: 0
  3773  001028  0E00               	movlw	0
  3774  00102A  1560               	andwf	___ftpack@arg& (0+255),w,b
  3775  00102C  6F65               	movwf	??___ftpack& (0+255),b
  3776  00102E  0E00               	movlw	0
  3777  001030  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3778  001032  6F66               	movwf	(??___ftpack+1)& (0+255),b
  3779  001034  0EFE               	movlw	254
  3780  001036  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3781  001038  6F67               	movwf	(??___ftpack+2)& (0+255),b
  3782  00103A  5165               	movf	??___ftpack& (0+255),w,b
  3783  00103C  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  3784  00103E  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  3785  001040  B4D8               	btfsc	status,2,c
  3786  001042  D00C               	goto	l992
  3787  001044  D7EC               	goto	l990
  3788  001046                     
  3789                           ; BSR set to: 0
  3790                           
  3791                           ; BSR set to: 0
  3792  001046  2B63               	incf	___ftpack@exp& (0+255),f,b
  3793                           
  3794                           ; BSR set to: 0
  3795  001048  0E01               	movlw	1
  3796  00104A  2760               	addwf	___ftpack@arg& (0+255),f,b
  3797  00104C  0E00               	movlw	0
  3798  00104E  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  3799  001050  0E00               	movlw	0
  3800  001052  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  3801  001054  90D8               	bcf	status,0,c
  3802  001056  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3803  001058  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3804  00105A  3360               	rrcf	___ftpack@arg& (0+255),f,b
  3805  00105C                     l992:
  3806                           
  3807                           ; BSR set to: 0
  3808                           
  3809                           ; BSR set to: 0
  3810  00105C  0E00               	movlw	0
  3811  00105E  1560               	andwf	___ftpack@arg& (0+255),w,b
  3812  001060  6F65               	movwf	??___ftpack& (0+255),b
  3813  001062  0E00               	movlw	0
  3814  001064  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3815  001066  6F66               	movwf	(??___ftpack+1)& (0+255),b
  3816  001068  0EFF               	movlw	255
  3817  00106A  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3818  00106C  6F67               	movwf	(??___ftpack+2)& (0+255),b
  3819  00106E  5165               	movf	??___ftpack& (0+255),w,b
  3820  001070  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  3821  001072  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  3822  001074  B4D8               	btfsc	status,2,c
  3823  001076  D006               	goto	l995
  3824  001078  D7E6               	goto	l993
  3825  00107A                     
  3826                           ; BSR set to: 0
  3827                           
  3828                           ; BSR set to: 0
  3829  00107A  0763               	decf	___ftpack@exp& (0+255),f,b
  3830  00107C  90D8               	bcf	status,0,c
  3831  00107E  3760               	rlcf	___ftpack@arg& (0+255),f,b
  3832  001080  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  3833  001082  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  3834  001084                     l995:
  3835                           
  3836                           ; BSR set to: 0
  3837                           
  3838                           ; BSR set to: 0
  3839  001084  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  3840  001086  D003               	goto	u3300
  3841                           
  3842                           ; BSR set to: 0
  3843  001088  0E02               	movlw	2
  3844  00108A  6163               	cpfslt	___ftpack@exp& (0+255),b
  3845  00108C  D7F6               	goto	l996
  3846  00108E                     u3300:
  3847                           
  3848                           ; BSR set to: 0
  3849                           
  3850                           ; BSR set to: 0
  3851  00108E  A163               	btfss	___ftpack@exp& (0+255),0,b
  3852                           
  3853                           ; BSR set to: 0
  3854  001090  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  3855                           
  3856                           ; BSR set to: 0
  3857                           
  3858                           ; BSR set to: 0
  3859  001092  90D8               	bcf	status,0,c
  3860  001094  3363               	rrcf	___ftpack@exp& (0+255),f,b
  3861  001096  5163               	movf	___ftpack@exp& (0+255),w,b
  3862  001098  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  3863                           
  3864                           ; BSR set to: 0
  3865  00109A  5164               	movf	___ftpack@sign& (0+255),w,b
  3866  00109C  A4D8               	btfss	status,2,c
  3867                           
  3868                           ; BSR set to: 0
  3869  00109E  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  3870                           
  3871                           ; BSR set to: 0
  3872                           
  3873                           ; BSR set to: 0
  3874  0010A0  C060  F060         	movff	___ftpack@arg,?___ftpack
  3875  0010A4  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  3876  0010A8  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  3877  0010AC  0012               	return	
  3878  0010AE                     __end_of___ftpack:
  3879                           	opt stack 0
  3880                           tblptru	equ	0xFF8
  3881                           tblptrh	equ	0xFF7
  3882                           tblptrl	equ	0xFF6
  3883                           tablat	equ	0xFF5
  3884                           intcon	equ	0xFF2
  3885                           postinc0	equ	0xFEE
  3886                           wreg	equ	0xFE8
  3887                           postdec1	equ	0xFE5
  3888                           fsr1l	equ	0xFE1
  3889                           status	equ	0xFD8
  3890                           
  3891 ;; *************** function _PWM2_LoadDutyValue *****************
  3892 ;; Defined at:
  3893 ;;		line 80 in file "mcc_generated_files/pwm2.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  dutyValue       2   15[BANK0 ] unsigned int 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3907 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3909 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3910 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3911 ;;Total ram usage:        4 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    9
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_main
  3918 ;;		_Check_Buttons
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text20
  3923  002124                     __ptext20:
  3924                           	opt stack 0
  3925  002124                     _PWM2_LoadDutyValue:
  3926                           	opt stack 21
  3927                           
  3928                           ;pwm2.c: 83: CCPR2L = ((dutyValue & 0x03FC)>>2);
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;incstack = 0
  3932  002124  C06F  F071         	movff	PWM2_LoadDutyValue@dutyValue,??_PWM2_LoadDutyValue
  3933  002128  C070  F072         	movff	PWM2_LoadDutyValue@dutyValue+1,??_PWM2_LoadDutyValue+1
  3934  00212C  0100               	movlb	0	; () banked
  3935  00212E  90D8               	bcf	status,0,c
  3936  002130  3372               	rrcf	(??_PWM2_LoadDutyValue+1)& (0+255),f,b
  3937  002132  3371               	rrcf	??_PWM2_LoadDutyValue& (0+255),f,b
  3938  002134  90D8               	bcf	status,0,c
  3939  002136  3372               	rrcf	(??_PWM2_LoadDutyValue+1)& (0+255),f,b
  3940  002138  3371               	rrcf	??_PWM2_LoadDutyValue& (0+255),f,b
  3941  00213A  5171               	movf	??_PWM2_LoadDutyValue& (0+255),w,b
  3942  00213C  010F               	movlb	15	; () banked
  3943  00213E  6F51               	movwf	81,b	;volatile
  3944                           
  3945                           ;pwm2.c: 86: CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4));
  3946  002140  C06F  F071         	movff	PWM2_LoadDutyValue@dutyValue,??_PWM2_LoadDutyValue
  3947  002144  0E03               	movlw	3
  3948  002146  0100               	movlb	0	; () banked
  3949  002148  1771               	andwf	??_PWM2_LoadDutyValue& (0+255),f,b
  3950  00214A  3B71               	swapf	??_PWM2_LoadDutyValue& (0+255),f,b
  3951  00214C  0EF0               	movlw	240
  3952  00214E  1771               	andwf	??_PWM2_LoadDutyValue& (0+255),f,b
  3953  002150  010F               	movlb	15	; () banked
  3954  002152  5150               	movf	80,w,b	;volatile
  3955  002154  0BCF               	andlw	207
  3956  002156  0100               	movlb	0	; () banked
  3957  002158  1171               	iorwf	??_PWM2_LoadDutyValue& (0+255),w,b
  3958  00215A  010F               	movlb	15	; () banked
  3959  00215C  6F50               	movwf	80,b	;volatile
  3960                           
  3961                           ; BSR set to: 15
  3962  00215E  0012               	return		;funcret
  3963  002160                     __end_of_PWM2_LoadDutyValue:
  3964                           	opt stack 0
  3965                           tblptru	equ	0xFF8
  3966                           tblptrh	equ	0xFF7
  3967                           tblptrl	equ	0xFF6
  3968                           tablat	equ	0xFF5
  3969                           intcon	equ	0xFF2
  3970                           postinc0	equ	0xFEE
  3971                           wreg	equ	0xFE8
  3972                           postdec1	equ	0xFE5
  3973                           fsr1l	equ	0xFE1
  3974                           status	equ	0xFD8
  3975                           
  3976 ;; *************** function _Initialize_Menus *****************
  3977 ;; Defined at:
  3978 ;;		line 12 in file "screen_controls.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;  display        10   51[BANK0 ] unsigned char [10]
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3993 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3995 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3996 ;;Total ram usage:       10 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:   15
  3999 ;; This function calls:
  4000 ;;		_GLCD_ClearScreen
  4001 ;;		_GLCD_GoTo
  4002 ;;		_GLCD_Line
  4003 ;;		_GLCD_WriteString
  4004 ;;		_itoa
  4005 ;; This function is called by:
  4006 ;;		_main
  4007 ;;		_Check_Buttons
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text21
  4012  0005A0                     __ptext21:
  4013                           	opt stack 0
  4014  0005A0                     _Initialize_Menus:
  4015                           	opt stack 15
  4016                           
  4017                           ;screen_controls.c: 14: char display[10];
  4018                           ;screen_controls.c: 16: GLCD_ClearScreen();
  4019                           
  4020                           ; BSR set to: 15
  4021                           ;incstack = 0
  4022  0005A0  EC22  F011         	call	_GLCD_ClearScreen	;wreg free
  4023                           
  4024                           ;screen_controls.c: 18: GLCD_GoTo(xMenuStart,0);
  4025  0005A4  0E00               	movlw	0
  4026  0005A6  0100               	movlb	0	; () banked
  4027  0005A8  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4028  0005AA  51A6               	movf	_xMenuStart& (0+255),w,b
  4029  0005AC  EC3F  F00A         	call	_GLCD_GoTo
  4030                           
  4031                           ;screen_controls.c: 19: GLCD_WriteString("Main Menu");
  4032  0005B0  0EBB               	movlw	low STR_3
  4033  0005B2  0100               	movlb	0	; () banked
  4034  0005B4  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4035  0005B6  0EFF               	movlw	high STR_3
  4036  0005B8  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4037  0005BA  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4038                           
  4039                           ;screen_controls.c: 20: GLCD_GoTo((valuesXStart - 4), 0);
  4040  0005BE  0E00               	movlw	0
  4041  0005C0  0100               	movlb	0	; () banked
  4042  0005C2  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4043  0005C4  505B               	movf	_valuesXStart,w,c
  4044  0005C6  0FFC               	addlw	252
  4045  0005C8  EC3F  F00A         	call	_GLCD_GoTo
  4046                           
  4047                           ;screen_controls.c: 21: GLCD_WriteString("Values");
  4048  0005CC  0EDF               	movlw	low STR_4
  4049  0005CE  0100               	movlb	0	; () banked
  4050  0005D0  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4051  0005D2  0EFF               	movlw	high STR_4
  4052  0005D4  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4053  0005D6  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4054                           
  4055                           ;screen_controls.c: 22: GLCD_Line(0,12,127,12);
  4056  0005DA  0E00               	movlw	0
  4057  0005DC  0100               	movlb	0	; () banked
  4058  0005DE  6F76               	movwf	(GLCD_Line@X1+1)& (0+255),b
  4059  0005E0  0E00               	movlw	0
  4060  0005E2  6F75               	movwf	GLCD_Line@X1& (0+255),b
  4061  0005E4  0E00               	movlw	0
  4062  0005E6  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  4063  0005E8  0E0C               	movlw	12
  4064  0005EA  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  4065  0005EC  0E00               	movlw	0
  4066  0005EE  6F7A               	movwf	(GLCD_Line@X2+1)& (0+255),b
  4067  0005F0  0E7F               	movlw	127
  4068  0005F2  6F79               	movwf	GLCD_Line@X2& (0+255),b
  4069  0005F4  0E00               	movlw	0
  4070  0005F6  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  4071  0005F8  0E0C               	movlw	12
  4072  0005FA  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  4073  0005FC  EC5C  F000         	call	_GLCD_Line	;wreg free
  4074                           
  4075                           ;screen_controls.c: 23: GLCD_Line((valuesXStart - 8),0,(valuesXStart - 8),63);
  4076  000600  0EF8               	movlw	248
  4077  000602  245B               	addwf	_valuesXStart,w,c
  4078  000604  0100               	movlb	0	; () banked
  4079  000606  6F75               	movwf	GLCD_Line@X1& (0+255),b
  4080  000608  6B76               	clrf	(GLCD_Line@X1+1)& (0+255),b
  4081  00060A  0EFF               	movlw	255
  4082  00060C  2376               	addwfc	(GLCD_Line@X1+1)& (0+255),f,b
  4083  00060E  0E00               	movlw	0
  4084  000610  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  4085  000612  0E00               	movlw	0
  4086  000614  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  4087  000616  0EF8               	movlw	248
  4088  000618  245B               	addwf	_valuesXStart,w,c
  4089  00061A  6F79               	movwf	GLCD_Line@X2& (0+255),b
  4090  00061C  6B7A               	clrf	(GLCD_Line@X2+1)& (0+255),b
  4091  00061E  0EFF               	movlw	255
  4092  000620  237A               	addwfc	(GLCD_Line@X2+1)& (0+255),f,b
  4093  000622  0E00               	movlw	0
  4094  000624  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  4095  000626  0E3F               	movlw	63
  4096  000628  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  4097  00062A  EC5C  F000         	call	_GLCD_Line	;wreg free
  4098                           
  4099                           ;screen_controls.c: 26: GLCD_GoTo(xMenuStart, setRunTime);
  4100  00062E  0E02               	movlw	2
  4101  000630  0100               	movlb	0	; () banked
  4102  000632  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4103  000634  51A6               	movf	_xMenuStart& (0+255),w,b
  4104  000636  EC3F  F00A         	call	_GLCD_GoTo
  4105                           
  4106                           ;screen_controls.c: 27: GLCD_WriteString("RunTime");
  4107  00063A  0ED7               	movlw	low STR_5
  4108  00063C  0100               	movlb	0	; () banked
  4109  00063E  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4110  000640  0EFF               	movlw	high STR_5
  4111  000642  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4112  000644  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4113                           
  4114                           ;screen_controls.c: 28: GLCD_GoTo(valuesXStart, setRunTime);
  4115  000648  0E02               	movlw	2
  4116  00064A  0100               	movlb	0	; () banked
  4117  00064C  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4118  00064E  505B               	movf	_valuesXStart,w,c
  4119  000650  EC3F  F00A         	call	_GLCD_GoTo
  4120                           
  4121                           ;screen_controls.c: 29: itoa(display, runMinutes, 10);
  4122  000654  0E93               	movlw	low Initialize_Menus@display
  4123  000656  0100               	movlb	0	; () banked
  4124  000658  6F70               	movwf	itoa@buf& (0+255),b
  4125  00065A  0E00               	movlw	high Initialize_Menus@display
  4126  00065C  6F71               	movwf	(itoa@buf+1)& (0+255),b
  4127  00065E  C04D  F072         	movff	_runMinutes,itoa@val
  4128  000662  6B73               	clrf	(itoa@val+1)& (0+255),b
  4129  000664  0E00               	movlw	0
  4130  000666  6F75               	movwf	(itoa@base+1)& (0+255),b
  4131  000668  0E0A               	movlw	10
  4132  00066A  6F74               	movwf	itoa@base& (0+255),b
  4133  00066C  ECCE  F00F         	call	_itoa	;wreg free
  4134                           
  4135                           ;screen_controls.c: 30: GLCD_WriteString(display);
  4136  000670  0E93               	movlw	low Initialize_Menus@display
  4137  000672  0100               	movlb	0	; () banked
  4138  000674  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4139  000676  0E00               	movlw	high Initialize_Menus@display
  4140  000678  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4141  00067A  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4142                           
  4143                           ;screen_controls.c: 31: GLCD_WriteString("min");
  4144  00067E  0EFB               	movlw	low STR_6
  4145  000680  0100               	movlb	0	; () banked
  4146  000682  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4147  000684  0EFF               	movlw	high STR_6
  4148  000686  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4149  000688  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4150                           
  4151                           ;screen_controls.c: 33: GLCD_GoTo(xMenuStart, setBrightness);
  4152  00068C  0E03               	movlw	3
  4153  00068E  0100               	movlb	0	; () banked
  4154  000690  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4155  000692  51A6               	movf	_xMenuStart& (0+255),w,b
  4156  000694  EC3F  F00A         	call	_GLCD_GoTo
  4157                           
  4158                           ;screen_controls.c: 34: GLCD_WriteString("Brightness");
  4159  000698  0E6C               	movlw	low (STR_18+6)
  4160  00069A  0100               	movlb	0	; () banked
  4161  00069C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4162  00069E  0EFF               	movlw	high (STR_18+6)
  4163  0006A0  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4164  0006A2  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4165                           
  4166                           ;screen_controls.c: 36: GLCD_GoTo(xMenuStart, setStartColors);
  4167  0006A6  0E04               	movlw	4
  4168  0006A8  0100               	movlb	0	; () banked
  4169  0006AA  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4170  0006AC  51A6               	movf	_xMenuStart& (0+255),w,b
  4171  0006AE  EC3F  F00A         	call	_GLCD_GoTo
  4172                           
  4173                           ;screen_controls.c: 37: GLCD_WriteString("StartColor");
  4174  0006B2  0E9C               	movlw	low STR_8
  4175  0006B4  0100               	movlb	0	; () banked
  4176  0006B6  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4177  0006B8  0EFF               	movlw	high STR_8
  4178  0006BA  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4179  0006BC  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4180                           
  4181                           ;screen_controls.c: 39: GLCD_GoTo(xMenuStart, setFinishedColors);
  4182  0006C0  0E05               	movlw	5
  4183  0006C2  0100               	movlb	0	; () banked
  4184  0006C4  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4185  0006C6  51A6               	movf	_xMenuStart& (0+255),w,b
  4186  0006C8  EC3F  F00A         	call	_GLCD_GoTo
  4187                           
  4188                           ;screen_controls.c: 40: GLCD_WriteString("EndColor");
  4189  0006CC  0ECE               	movlw	low STR_9
  4190  0006CE  0100               	movlb	0	; () banked
  4191  0006D0  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4192  0006D2  0EFF               	movlw	high STR_9
  4193  0006D4  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4194  0006D6  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4195                           
  4196                           ;screen_controls.c: 42: GLCD_GoTo(xMenuStart, setBacklightBrightness);
  4197  0006DA  0E06               	movlw	6
  4198  0006DC  0100               	movlb	0	; () banked
  4199  0006DE  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4200  0006E0  51A6               	movf	_xMenuStart& (0+255),w,b
  4201  0006E2  EC3F  F00A         	call	_GLCD_GoTo
  4202                           
  4203                           ;screen_controls.c: 43: GLCD_WriteString("Backlight");
  4204  0006E6  0EB1               	movlw	low STR_10
  4205  0006E8  0100               	movlb	0	; () banked
  4206  0006EA  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4207  0006EC  0EFF               	movlw	high STR_10
  4208  0006EE  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4209  0006F0  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4210                           
  4211                           ;screen_controls.c: 45: GLCD_GoTo(xMenuStart, selectState);
  4212  0006F4  0E07               	movlw	7
  4213  0006F6  0100               	movlb	0	; () banked
  4214  0006F8  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4215  0006FA  51A6               	movf	_xMenuStart& (0+255),w,b
  4216  0006FC  EC3F  F00A         	call	_GLCD_GoTo
  4217                           
  4218                           ;screen_controls.c: 46: GLCD_WriteString("SelState");
  4219  000700  0EC5               	movlw	low STR_11
  4220  000702  0100               	movlb	0	; () banked
  4221  000704  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4222  000706  0EFF               	movlw	high STR_11
  4223  000708  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4224  00070A  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4225  00070E  0012               	return		;funcret
  4226  000710                     __end_of_Initialize_Menus:
  4227                           	opt stack 0
  4228                           tblptru	equ	0xFF8
  4229                           tblptrh	equ	0xFF7
  4230                           tblptrl	equ	0xFF6
  4231                           tablat	equ	0xFF5
  4232                           intcon	equ	0xFF2
  4233                           postinc0	equ	0xFEE
  4234                           wreg	equ	0xFE8
  4235                           postdec1	equ	0xFE5
  4236                           fsr1l	equ	0xFE1
  4237                           status	equ	0xFD8
  4238                           
  4239 ;; *************** function _Draw_runTime_Menu *****************
  4240 ;; Defined at:
  4241 ;;		line 119 in file "screen_controls.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;		None
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  display        10   51[BANK0 ] unsigned char [10]
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4256 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4258 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4259 ;;Total ram usage:       10 bytes
  4260 ;; Hardware stack levels used:    1
  4261 ;; Hardware stack levels required when called:   15
  4262 ;; This function calls:
  4263 ;;		_GLCD_ClearScreen
  4264 ;;		_GLCD_GoTo
  4265 ;;		_GLCD_Line
  4266 ;;		_GLCD_WriteString
  4267 ;;		_Make_Back_Arrow
  4268 ;;		_itoa
  4269 ;; This function is called by:
  4270 ;;		_Check_Buttons
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text22
  4275  000864                     __ptext22:
  4276                           	opt stack 0
  4277  000864                     _Draw_runTime_Menu:
  4278                           	opt stack 14
  4279                           
  4280                           ;screen_controls.c: 121: char display[10];
  4281                           ;screen_controls.c: 123: GLCD_ClearScreen();
  4282                           
  4283                           ;incstack = 0
  4284  000864  EC22  F011         	call	_GLCD_ClearScreen	;wreg free
  4285                           
  4286                           ;screen_controls.c: 125: GLCD_GoTo(0,0);
  4287  000868  0E00               	movlw	0
  4288  00086A  0100               	movlb	0	; () banked
  4289  00086C  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4290  00086E  0E00               	movlw	0
  4291  000870  EC3F  F00A         	call	_GLCD_GoTo
  4292                           
  4293                           ;screen_controls.c: 126: GLCD_WriteString("Run Times");
  4294  000874  0EA7               	movlw	low STR_12
  4295  000876  0100               	movlb	0	; () banked
  4296  000878  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4297  00087A  0EFF               	movlw	high STR_12
  4298  00087C  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4299  00087E  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4300                           
  4301                           ;screen_controls.c: 127: GLCD_Line(0,9,127,9);
  4302  000882  0E00               	movlw	0
  4303  000884  0100               	movlb	0	; () banked
  4304  000886  6F76               	movwf	(GLCD_Line@X1+1)& (0+255),b
  4305  000888  0E00               	movlw	0
  4306  00088A  6F75               	movwf	GLCD_Line@X1& (0+255),b
  4307  00088C  0E00               	movlw	0
  4308  00088E  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  4309  000890  0E09               	movlw	9
  4310  000892  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  4311  000894  0E00               	movlw	0
  4312  000896  6F7A               	movwf	(GLCD_Line@X2+1)& (0+255),b
  4313  000898  0E7F               	movlw	127
  4314  00089A  6F79               	movwf	GLCD_Line@X2& (0+255),b
  4315  00089C  0E00               	movlw	0
  4316  00089E  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  4317  0008A0  0E09               	movlw	9
  4318  0008A2  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  4319  0008A4  EC5C  F000         	call	_GLCD_Line	;wreg free
  4320                           
  4321                           ;screen_controls.c: 129: GLCD_GoTo(runTimeX, 2);
  4322  0008A8  0E02               	movlw	2
  4323  0008AA  0100               	movlb	0	; () banked
  4324  0008AC  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4325  0008AE  51A8               	movf	_runTimeX& (0+255),w,b
  4326  0008B0  EC3F  F00A         	call	_GLCD_GoTo
  4327                           
  4328                           ;screen_controls.c: 130: GLCD_WriteString("Run Time: ");
  4329  0008B4  0E91               	movlw	low STR_13
  4330  0008B6  0100               	movlb	0	; () banked
  4331  0008B8  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4332  0008BA  0EFF               	movlw	high STR_13
  4333  0008BC  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4334  0008BE  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4335                           
  4336                           ;screen_controls.c: 131: GLCD_GoTo(valuesXStart, 2);
  4337  0008C2  0E02               	movlw	2
  4338  0008C4  0100               	movlb	0	; () banked
  4339  0008C6  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4340  0008C8  505B               	movf	_valuesXStart,w,c
  4341  0008CA  EC3F  F00A         	call	_GLCD_GoTo
  4342                           
  4343                           ;screen_controls.c: 132: itoa(display, runMinutes, 10);
  4344  0008CE  0E93               	movlw	low Draw_runTime_Menu@display
  4345  0008D0  0100               	movlb	0	; () banked
  4346  0008D2  6F70               	movwf	itoa@buf& (0+255),b
  4347  0008D4  0E00               	movlw	high Draw_runTime_Menu@display
  4348  0008D6  6F71               	movwf	(itoa@buf+1)& (0+255),b
  4349  0008D8  C04D  F072         	movff	_runMinutes,itoa@val
  4350  0008DC  6B73               	clrf	(itoa@val+1)& (0+255),b
  4351  0008DE  0E00               	movlw	0
  4352  0008E0  6F75               	movwf	(itoa@base+1)& (0+255),b
  4353  0008E2  0E0A               	movlw	10
  4354  0008E4  6F74               	movwf	itoa@base& (0+255),b
  4355  0008E6  ECCE  F00F         	call	_itoa	;wreg free
  4356                           
  4357                           ;screen_controls.c: 133: GLCD_WriteString(display);
  4358  0008EA  0E93               	movlw	low Draw_runTime_Menu@display
  4359  0008EC  0100               	movlb	0	; () banked
  4360  0008EE  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4361  0008F0  0E00               	movlw	high Draw_runTime_Menu@display
  4362  0008F2  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4363  0008F4  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4364                           
  4365                           ;screen_controls.c: 134: GLCD_WriteString("min   ");
  4366  0008F8  0EE6               	movlw	low STR_1
  4367  0008FA  0100               	movlb	0	; () banked
  4368  0008FC  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4369  0008FE  0EFF               	movlw	high STR_1
  4370  000900  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4371  000902  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4372                           
  4373                           ;screen_controls.c: 136: GLCD_GoTo(runTimeX, 4);
  4374  000906  0E04               	movlw	4
  4375  000908  0100               	movlb	0	; () banked
  4376  00090A  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4377  00090C  51A8               	movf	_runTimeX& (0+255),w,b
  4378  00090E  EC3F  F00A         	call	_GLCD_GoTo
  4379                           
  4380                           ;screen_controls.c: 137: GLCD_WriteString("Time After: ");
  4381  000912  0E77               	movlw	low STR_15
  4382  000914  0100               	movlb	0	; () banked
  4383  000916  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4384  000918  0EFF               	movlw	high STR_15
  4385  00091A  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4386  00091C  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4387                           
  4388                           ;screen_controls.c: 138: GLCD_GoTo(valuesXStart, 4);
  4389  000920  0E04               	movlw	4
  4390  000922  0100               	movlb	0	; () banked
  4391  000924  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4392  000926  505B               	movf	_valuesXStart,w,c
  4393  000928  EC3F  F00A         	call	_GLCD_GoTo
  4394                           
  4395                           ;screen_controls.c: 139: itoa(display, afterMinutes, 10);
  4396  00092C  0E93               	movlw	low Draw_runTime_Menu@display
  4397  00092E  0100               	movlb	0	; () banked
  4398  000930  6F70               	movwf	itoa@buf& (0+255),b
  4399  000932  0E00               	movlw	high Draw_runTime_Menu@display
  4400  000934  6F71               	movwf	(itoa@buf+1)& (0+255),b
  4401  000936  C0A5  F072         	movff	_afterMinutes,itoa@val
  4402  00093A  6B73               	clrf	(itoa@val+1)& (0+255),b
  4403  00093C  0E00               	movlw	0
  4404  00093E  6F75               	movwf	(itoa@base+1)& (0+255),b
  4405  000940  0E0A               	movlw	10
  4406  000942  6F74               	movwf	itoa@base& (0+255),b
  4407  000944  ECCE  F00F         	call	_itoa	;wreg free
  4408                           
  4409                           ;screen_controls.c: 140: GLCD_WriteString(display);
  4410  000948  0E93               	movlw	low Draw_runTime_Menu@display
  4411  00094A  0100               	movlb	0	; () banked
  4412  00094C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4413  00094E  0E00               	movlw	high Draw_runTime_Menu@display
  4414  000950  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4415  000952  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4416                           
  4417                           ;screen_controls.c: 141: GLCD_WriteString("min   ");
  4418  000956  0EE6               	movlw	low STR_1
  4419  000958  0100               	movlb	0	; () banked
  4420  00095A  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4421  00095C  0EFF               	movlw	high STR_1
  4422  00095E  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4423  000960  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4424                           
  4425                           ;screen_controls.c: 143: GLCD_GoTo(runTimeX, 6);
  4426  000964  0E06               	movlw	6
  4427  000966  0100               	movlb	0	; () banked
  4428  000968  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4429  00096A  51A8               	movf	_runTimeX& (0+255),w,b
  4430  00096C  EC3F  F00A         	call	_GLCD_GoTo
  4431                           
  4432                           ;screen_controls.c: 144: Make_Back_Arrow();
  4433  000970  EC3D  F011         	call	_Make_Back_Arrow	;wreg free
  4434                           
  4435                           ;screen_controls.c: 146: GLCD_WriteString("Back");
  4436  000974  0EED               	movlw	low STR_17
  4437  000976  0100               	movlb	0	; () banked
  4438  000978  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4439  00097A  0EFF               	movlw	high STR_17
  4440  00097C  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4441  00097E  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4442  000982  0012               	return		;funcret
  4443  000984                     __end_of_Draw_runTime_Menu:
  4444                           	opt stack 0
  4445                           tblptru	equ	0xFF8
  4446                           tblptrh	equ	0xFF7
  4447                           tblptrl	equ	0xFF6
  4448                           tablat	equ	0xFF5
  4449                           intcon	equ	0xFF2
  4450                           postinc0	equ	0xFEE
  4451                           wreg	equ	0xFE8
  4452                           postdec1	equ	0xFE5
  4453                           fsr1l	equ	0xFE1
  4454                           status	equ	0xFD8
  4455                           
  4456 ;; *************** function _Draw_Brightness_Menu *****************
  4457 ;; Defined at:
  4458 ;;		line 149 in file "screen_controls.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;		None
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  display        10   51[BANK0 ] unsigned char [10]
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4473 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4475 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4476 ;;Total ram usage:       10 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:   15
  4479 ;; This function calls:
  4480 ;;		_GLCD_ClearScreen
  4481 ;;		_GLCD_GoTo
  4482 ;;		_GLCD_Line
  4483 ;;		_GLCD_WriteString
  4484 ;;		_Make_Back_Arrow
  4485 ;;		___fttol
  4486 ;;		_itoa
  4487 ;; This function is called by:
  4488 ;;		_Check_Buttons
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text23
  4493  000F28                     __ptext23:
  4494                           	opt stack 0
  4495  000F28                     _Draw_Brightness_Menu:
  4496                           	opt stack 14
  4497                           
  4498                           ;screen_controls.c: 151: char display[10];
  4499                           ;screen_controls.c: 153: GLCD_ClearScreen();
  4500                           
  4501                           ;incstack = 0
  4502  000F28  EC22  F011         	call	_GLCD_ClearScreen	;wreg free
  4503                           
  4504                           ;screen_controls.c: 155: GLCD_GoTo(0,0);
  4505  000F2C  0E00               	movlw	0
  4506  000F2E  0100               	movlb	0	; () banked
  4507  000F30  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4508  000F32  0E00               	movlw	0
  4509  000F34  EC3F  F00A         	call	_GLCD_GoTo
  4510                           
  4511                           ;screen_controls.c: 156: GLCD_WriteString("Light Brightness");
  4512  000F38  0E66               	movlw	low STR_18
  4513  000F3A  0100               	movlb	0	; () banked
  4514  000F3C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4515  000F3E  0EFF               	movlw	high STR_18
  4516  000F40  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4517  000F42  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4518                           
  4519                           ;screen_controls.c: 157: GLCD_Line(0,9,127,9);
  4520  000F46  0E00               	movlw	0
  4521  000F48  0100               	movlb	0	; () banked
  4522  000F4A  6F76               	movwf	(GLCD_Line@X1+1)& (0+255),b
  4523  000F4C  0E00               	movlw	0
  4524  000F4E  6F75               	movwf	GLCD_Line@X1& (0+255),b
  4525  000F50  0E00               	movlw	0
  4526  000F52  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  4527  000F54  0E09               	movlw	9
  4528  000F56  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  4529  000F58  0E00               	movlw	0
  4530  000F5A  6F7A               	movwf	(GLCD_Line@X2+1)& (0+255),b
  4531  000F5C  0E7F               	movlw	127
  4532  000F5E  6F79               	movwf	GLCD_Line@X2& (0+255),b
  4533  000F60  0E00               	movlw	0
  4534  000F62  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  4535  000F64  0E09               	movlw	9
  4536  000F66  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  4537  000F68  EC5C  F000         	call	_GLCD_Line	;wreg free
  4538                           
  4539                           ;screen_controls.c: 159: GLCD_GoTo(runTimeX, 2);
  4540  000F6C  0E02               	movlw	2
  4541  000F6E  0100               	movlb	0	; () banked
  4542  000F70  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4543  000F72  51A8               	movf	_runTimeX& (0+255),w,b
  4544  000F74  EC3F  F00A         	call	_GLCD_GoTo
  4545                           
  4546                           ;screen_controls.c: 160: GLCD_WriteString("Brightness: ");
  4547  000F78  0E84               	movlw	low STR_19
  4548  000F7A  0100               	movlb	0	; () banked
  4549  000F7C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4550  000F7E  0EFF               	movlw	high STR_19
  4551  000F80  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4552  000F82  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4553                           
  4554                           ;screen_controls.c: 161: GLCD_GoTo(valuesXStart, 2);
  4555  000F86  0E02               	movlw	2
  4556  000F88  0100               	movlb	0	; () banked
  4557  000F8A  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4558  000F8C  505B               	movf	_valuesXStart,w,c
  4559  000F8E  EC3F  F00A         	call	_GLCD_GoTo
  4560                           
  4561                           ;screen_controls.c: 162: itoa(display, brightnessPercent, 10);
  4562  000F92  0E93               	movlw	low Draw_Brightness_Menu@display
  4563  000F94  0100               	movlb	0	; () banked
  4564  000F96  6F70               	movwf	itoa@buf& (0+255),b
  4565  000F98  0E00               	movlw	high Draw_Brightness_Menu@display
  4566  000F9A  6F71               	movwf	(itoa@buf+1)& (0+255),b
  4567  000F9C  C056  F060         	movff	_brightnessPercent,___fttol@f1
  4568  000FA0  C057  F061         	movff	_brightnessPercent+1,___fttol@f1+1
  4569  000FA4  C058  F062         	movff	_brightnessPercent+2,___fttol@f1+2
  4570  000FA8  ECC2  F004         	call	___fttol	;wreg free
  4571  000FAC  C060  F072         	movff	?___fttol,itoa@val
  4572  000FB0  C061  F073         	movff	?___fttol+1,itoa@val+1
  4573  000FB4  0E00               	movlw	0
  4574  000FB6  0100               	movlb	0	; () banked
  4575  000FB8  6F75               	movwf	(itoa@base+1)& (0+255),b
  4576  000FBA  0E0A               	movlw	10
  4577  000FBC  6F74               	movwf	itoa@base& (0+255),b
  4578  000FBE  ECCE  F00F         	call	_itoa	;wreg free
  4579                           
  4580                           ;screen_controls.c: 163: GLCD_WriteString(display);
  4581  000FC2  0E93               	movlw	low Draw_Brightness_Menu@display
  4582  000FC4  0100               	movlb	0	; () banked
  4583  000FC6  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4584  000FC8  0E00               	movlw	high Draw_Brightness_Menu@display
  4585  000FCA  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4586  000FCC  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4587                           
  4588                           ;screen_controls.c: 164: GLCD_WriteString("%  ");
  4589  000FD0  0EF7               	movlw	low STR_20
  4590  000FD2  0100               	movlb	0	; () banked
  4591  000FD4  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4592  000FD6  0EFF               	movlw	high STR_20
  4593  000FD8  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4594  000FDA  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4595                           
  4596                           ;screen_controls.c: 166: GLCD_GoTo(runTimeX, 6);
  4597  000FDE  0E06               	movlw	6
  4598  000FE0  0100               	movlb	0	; () banked
  4599  000FE2  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4600  000FE4  51A8               	movf	_runTimeX& (0+255),w,b
  4601  000FE6  EC3F  F00A         	call	_GLCD_GoTo
  4602                           
  4603                           ;screen_controls.c: 167: Make_Back_Arrow();
  4604  000FEA  EC3D  F011         	call	_Make_Back_Arrow	;wreg free
  4605                           
  4606                           ;screen_controls.c: 169: GLCD_WriteString("Back");
  4607  000FEE  0EED               	movlw	low STR_17
  4608  000FF0  0100               	movlb	0	; () banked
  4609  000FF2  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  4610  000FF4  0EFF               	movlw	high STR_17
  4611  000FF6  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  4612  000FF8  ECAB  F00D         	call	_GLCD_WriteString	;wreg free
  4613  000FFC  0012               	return		;funcret
  4614  000FFE                     __end_of_Draw_Brightness_Menu:
  4615                           	opt stack 0
  4616                           tblptru	equ	0xFF8
  4617                           tblptrh	equ	0xFF7
  4618                           tblptrl	equ	0xFF6
  4619                           tablat	equ	0xFF5
  4620                           intcon	equ	0xFF2
  4621                           postinc0	equ	0xFEE
  4622                           wreg	equ	0xFE8
  4623                           postdec1	equ	0xFE5
  4624                           fsr1l	equ	0xFE1
  4625                           status	equ	0xFD8
  4626                           
  4627 ;; *************** function _itoa *****************
  4628 ;; Defined at:
  4629 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  buf             2   16[BANK0 ] PTR unsigned char 
  4632 ;;		 -> Draw_Brightness_Menu@display(10), Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Brightness_Menu_F
      +unction@display(10), 
  4633 ;;		 -> Run_Time_Menu_Function@display(10), 
  4634 ;;  val             2   18[BANK0 ] int 
  4635 ;;  base            2   20[BANK0 ] int 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  cp              2   22[BANK0 ] PTR unsigned char 
  4638 ;;		 -> Draw_Brightness_Menu@display(10), Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Brightness_Menu_F
      +unction@display(10), 
  4639 ;;		 -> Run_Time_Menu_Function@display(10), 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  2   16[BANK0 ] PTR unsigned char 
  4642 ;; Registers used:
  4643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4649 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4650 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4652 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4653 ;;Total ram usage:        8 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:   11
  4656 ;; This function calls:
  4657 ;;		_utoa
  4658 ;; This function is called by:
  4659 ;;		_Initialize_Menus
  4660 ;;		_Draw_runTime_Menu
  4661 ;;		_Draw_Brightness_Menu
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text24
  4666  001F9C                     __ptext24:
  4667                           	opt stack 0
  4668  001F9C                     _itoa:
  4669                           	opt stack 18
  4670                           
  4671                           ;incstack = 0
  4672  001F9C  C070  F076         	movff	itoa@buf,itoa@cp
  4673  001FA0  C071  F077         	movff	itoa@buf+1,itoa@cp+1
  4674  001FA4  0100               	movlb	0	; () banked
  4675  001FA6  AF73               	btfss	(itoa@val+1)& (0+255),7,b
  4676  001FA8  D00C               	goto	l1105
  4677                           
  4678                           ; BSR set to: 0
  4679  001FAA  C070  FFD9         	movff	itoa@buf,fsr2l
  4680  001FAE  C071  FFDA         	movff	itoa@buf+1,fsr2h
  4681  001FB2  0E2D               	movlw	45
  4682  001FB4  6EDF               	movwf	indf2,c
  4683                           
  4684                           ; BSR set to: 0
  4685  001FB6  4B70               	infsnz	itoa@buf& (0+255),f,b
  4686  001FB8  2B71               	incf	(itoa@buf+1)& (0+255),f,b
  4687                           
  4688                           ; BSR set to: 0
  4689  001FBA  6D72               	negf	itoa@val& (0+255),b
  4690  001FBC  1F73               	comf	(itoa@val+1)& (0+255),f,b
  4691  001FBE  B0D8               	btfsc	status,0,c
  4692  001FC0  2B73               	incf	(itoa@val+1)& (0+255),f,b
  4693  001FC2                     l1105:
  4694                           
  4695                           ; BSR set to: 0
  4696                           
  4697                           ; BSR set to: 0
  4698  001FC2  C070  F067         	movff	itoa@buf,utoa@buf
  4699  001FC6  C071  F068         	movff	itoa@buf+1,utoa@buf+1
  4700  001FCA  C072  F069         	movff	itoa@val,utoa@val
  4701  001FCE  C073  F06A         	movff	itoa@val+1,utoa@val+1
  4702  001FD2  C074  F06B         	movff	itoa@base,utoa@base
  4703  001FD6  C075  F06C         	movff	itoa@base+1,utoa@base+1
  4704  001FDA  ECAE  F008         	call	_utoa	;wreg free
  4705  001FDE  0012               	return	
  4706  001FE0                     __end_of_itoa:
  4707                           	opt stack 0
  4708                           tblptru	equ	0xFF8
  4709                           tblptrh	equ	0xFF7
  4710                           tblptrl	equ	0xFF6
  4711                           tablat	equ	0xFF5
  4712                           intcon	equ	0xFF2
  4713                           postinc0	equ	0xFEE
  4714                           wreg	equ	0xFE8
  4715                           postdec1	equ	0xFE5
  4716                           fsr1l	equ	0xFE1
  4717                           indf2	equ	0xFDF
  4718                           fsr2h	equ	0xFDA
  4719                           fsr2l	equ	0xFD9
  4720                           status	equ	0xFD8
  4721                           
  4722 ;; *************** function _utoa *****************
  4723 ;; Defined at:
  4724 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  buf             2    7[BANK0 ] PTR unsigned char 
  4727 ;;		 -> Draw_Brightness_Menu@display(10), Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Brightness_Menu_F
      +unction@display(10), 
  4728 ;;		 -> Run_Time_Menu_Function@display(10), 
  4729 ;;  val             2    9[BANK0 ] unsigned int 
  4730 ;;  base            2   11[BANK0 ] int 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  v               2   13[BANK0 ] unsigned int 
  4733 ;;  c               1   15[BANK0 ] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  2    7[BANK0 ] PTR unsigned char 
  4736 ;; Registers used:
  4737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4743 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4744 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4746 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4747 ;;Total ram usage:        9 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:   10
  4750 ;; This function calls:
  4751 ;;		___lwdiv
  4752 ;;		___lwmod
  4753 ;; This function is called by:
  4754 ;;		_itoa
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text25
  4759  00115C                     __ptext25:
  4760                           	opt stack 0
  4761  00115C                     _utoa:
  4762                           	opt stack 18
  4763                           
  4764                           ;incstack = 0
  4765  00115C  C069  F06D         	movff	utoa@val,utoa@v
  4766  001160  C06A  F06E         	movff	utoa@val+1,utoa@v+1
  4767  001164  C06D  F060         	movff	utoa@v,___lwdiv@dividend
  4768  001168  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
  4769  00116C  C06B  F062         	movff	utoa@base,___lwdiv@divisor
  4770  001170  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
  4771  001174  EC5A  F00E         	call	___lwdiv	;wreg free
  4772  001178  C060  F06D         	movff	?___lwdiv,utoa@v
  4773  00117C  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
  4774  001180  0100               	movlb	0	; () banked
  4775  001182  4B67               	infsnz	utoa@buf& (0+255),f,b
  4776  001184  2B68               	incf	(utoa@buf+1)& (0+255),f,b
  4777                           
  4778                           ; BSR set to: 0
  4779  001186  516D               	movf	utoa@v& (0+255),w,b
  4780  001188  116E               	iorwf	(utoa@v+1)& (0+255),w,b
  4781  00118A  A4D8               	btfss	status,2,c
  4782  00118C  D7EB               	goto	l1109
  4783                           
  4784                           ; BSR set to: 0
  4785                           
  4786                           ; BSR set to: 0
  4787  00118E  C067  FFD9         	movff	utoa@buf,fsr2l
  4788  001192  C068  FFDA         	movff	utoa@buf+1,fsr2h
  4789  001196  0E00               	movlw	0
  4790  001198  6EDF               	movwf	indf2,c
  4791                           
  4792                           ; BSR set to: 0
  4793  00119A  0767               	decf	utoa@buf& (0+255),f,b
  4794  00119C  A0D8               	btfss	status,0,c
  4795  00119E  0768               	decf	(utoa@buf+1)& (0+255),f,b
  4796  0011A0                     
  4797                           ; BSR set to: 0
  4798                           
  4799                           ; BSR set to: 0
  4800  0011A0  C069  F060         	movff	utoa@val,___lwmod@dividend
  4801  0011A4  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
  4802  0011A8  C06B  F062         	movff	utoa@base,___lwmod@divisor
  4803  0011AC  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
  4804  0011B0  ECF0  F00F         	call	___lwmod	;wreg free
  4805  0011B4  0100               	movlb	0	; () banked
  4806  0011B6  5160               	movf	?___lwmod& (0+255),w,b
  4807  0011B8  6F6F               	movwf	utoa@c& (0+255),b
  4808                           
  4809                           ; BSR set to: 0
  4810  0011BA  C069  F060         	movff	utoa@val,___lwdiv@dividend
  4811  0011BE  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
  4812  0011C2  C06B  F062         	movff	utoa@base,___lwdiv@divisor
  4813  0011C6  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
  4814  0011CA  EC5A  F00E         	call	___lwdiv	;wreg free
  4815  0011CE  C060  F069         	movff	?___lwdiv,utoa@val
  4816  0011D2  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
  4817  0011D6  0E09               	movlw	9
  4818  0011D8  0100               	movlb	0	; () banked
  4819  0011DA  656F               	cpfsgt	utoa@c& (0+255),b
  4820  0011DC  D002               	goto	l1112
  4821                           
  4822                           ; BSR set to: 0
  4823  0011DE  0E07               	movlw	7
  4824  0011E0  276F               	addwf	utoa@c& (0+255),f,b
  4825  0011E2                     l1112:
  4826                           
  4827                           ; BSR set to: 0
  4828  0011E2  0E30               	movlw	48
  4829  0011E4  276F               	addwf	utoa@c& (0+255),f,b
  4830                           
  4831                           ; BSR set to: 0
  4832  0011E6  C067  FFD9         	movff	utoa@buf,fsr2l
  4833  0011EA  C068  FFDA         	movff	utoa@buf+1,fsr2h
  4834  0011EE  C06F  FFDF         	movff	utoa@c,indf2
  4835                           
  4836                           ; BSR set to: 0
  4837  0011F2  0767               	decf	utoa@buf& (0+255),f,b
  4838  0011F4  A0D8               	btfss	status,0,c
  4839  0011F6  0768               	decf	(utoa@buf+1)& (0+255),f,b
  4840                           
  4841                           ; BSR set to: 0
  4842  0011F8  5169               	movf	utoa@val& (0+255),w,b
  4843  0011FA  116A               	iorwf	(utoa@val+1)& (0+255),w,b
  4844  0011FC  A4D8               	btfss	status,2,c
  4845  0011FE  D7D0               	goto	l1111
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;	Return value of _utoa is never used
  4849                           
  4850                           ; BSR set to: 0
  4851  001200  4B67               	infsnz	utoa@buf& (0+255),f,b
  4852  001202  2B68               	incf	(utoa@buf+1)& (0+255),f,b
  4853  001204  0012               	return	
  4854  001206                     __end_of_utoa:
  4855                           	opt stack 0
  4856                           tblptru	equ	0xFF8
  4857                           tblptrh	equ	0xFF7
  4858                           tblptrl	equ	0xFF6
  4859                           tablat	equ	0xFF5
  4860                           intcon	equ	0xFF2
  4861                           postinc0	equ	0xFEE
  4862                           wreg	equ	0xFE8
  4863                           postdec1	equ	0xFE5
  4864                           fsr1l	equ	0xFE1
  4865                           indf2	equ	0xFDF
  4866                           fsr2h	equ	0xFDA
  4867                           fsr2l	equ	0xFD9
  4868                           status	equ	0xFD8
  4869                           
  4870 ;; *************** function ___lwmod *****************
  4871 ;; Defined at:
  4872 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  dividend        2    0[BANK0 ] unsigned int 
  4875 ;;  divisor         2    2[BANK0 ] unsigned int 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  counter         1    4[BANK0 ] unsigned char 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  2    0[BANK0 ] unsigned int 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4887 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4888 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4890 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4891 ;;Total ram usage:        5 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    9
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_utoa
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           	psect	text26
  4902  001FE0                     __ptext26:
  4903                           	opt stack 0
  4904  001FE0                     ___lwmod:
  4905                           	opt stack 18
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;incstack = 0
  4909  001FE0  0100               	movlb	0	; () banked
  4910  001FE2  5162               	movf	___lwmod@divisor& (0+255),w,b
  4911  001FE4  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  4912  001FE6  B4D8               	btfsc	status,2,c
  4913  001FE8  D018               	goto	l1207
  4914                           
  4915                           ; BSR set to: 0
  4916  001FEA  0E01               	movlw	1
  4917  001FEC  6F64               	movwf	___lwmod@counter& (0+255),b
  4918  001FEE  D004               	goto	l1202
  4919  001FF0                     
  4920                           ; BSR set to: 0
  4921                           
  4922                           ; BSR set to: 0
  4923  001FF0  90D8               	bcf	status,0,c
  4924  001FF2  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  4925  001FF4  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  4926  001FF6  2B64               	incf	___lwmod@counter& (0+255),f,b
  4927  001FF8                     l1202:
  4928                           
  4929                           ; BSR set to: 0
  4930                           
  4931                           ; BSR set to: 0
  4932  001FF8  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  4933  001FFA  D7FA               	goto	l1203
  4934  001FFC                     u2420:
  4935                           
  4936                           ; BSR set to: 0
  4937                           
  4938                           ; BSR set to: 0
  4939                           
  4940                           ; BSR set to: 0
  4941  001FFC  5162               	movf	___lwmod@divisor& (0+255),w,b
  4942  001FFE  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  4943  002000  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4944  002002  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  4945  002004  A0D8               	btfss	status,0,c
  4946  002006  D004               	goto	l1206
  4947                           
  4948                           ; BSR set to: 0
  4949  002008  5162               	movf	___lwmod@divisor& (0+255),w,b
  4950  00200A  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  4951  00200C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4952  00200E  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  4953  002010                     l1206:
  4954                           
  4955                           ; BSR set to: 0
  4956                           
  4957                           ; BSR set to: 0
  4958  002010  90D8               	bcf	status,0,c
  4959  002012  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  4960  002014  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  4961                           
  4962                           ; BSR set to: 0
  4963  002016  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  4964  002018  D7F1               	goto	u2420
  4965  00201A                     l1207:
  4966                           
  4967                           ; BSR set to: 0
  4968                           
  4969                           ; BSR set to: 0
  4970  00201A  C060  F060         	movff	___lwmod@dividend,?___lwmod
  4971  00201E  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  4972                           
  4973                           ; BSR set to: 0
  4974  002022  0012               	return		;funcret
  4975  002024                     __end_of___lwmod:
  4976                           	opt stack 0
  4977                           tblptru	equ	0xFF8
  4978                           tblptrh	equ	0xFF7
  4979                           tblptrl	equ	0xFF6
  4980                           tablat	equ	0xFF5
  4981                           intcon	equ	0xFF2
  4982                           postinc0	equ	0xFEE
  4983                           wreg	equ	0xFE8
  4984                           postdec1	equ	0xFE5
  4985                           fsr1l	equ	0xFE1
  4986                           indf2	equ	0xFDF
  4987                           fsr2h	equ	0xFDA
  4988                           fsr2l	equ	0xFD9
  4989                           status	equ	0xFD8
  4990                           
  4991 ;; *************** function ___lwdiv *****************
  4992 ;; Defined at:
  4993 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  dividend        2    0[BANK0 ] unsigned int 
  4996 ;;  divisor         2    2[BANK0 ] unsigned int 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  quotient        2    4[BANK0 ] unsigned int 
  4999 ;;  counter         1    6[BANK0 ] unsigned char 
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  2    0[BANK0 ] unsigned int 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5009 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5010 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5012 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5013 ;;Total ram usage:        7 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    9
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_utoa
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text27
  5024  001CB4                     __ptext27:
  5025                           	opt stack 0
  5026  001CB4                     ___lwdiv:
  5027                           	opt stack 18
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;incstack = 0
  5031  001CB4  0E00               	movlw	0
  5032  001CB6  0100               	movlb	0	; () banked
  5033  001CB8  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5034  001CBA  0E00               	movlw	0
  5035  001CBC  6F64               	movwf	___lwdiv@quotient& (0+255),b
  5036                           
  5037                           ; BSR set to: 0
  5038  001CBE  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5039  001CC0  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  5040  001CC2  B4D8               	btfsc	status,2,c
  5041  001CC4  D01C               	goto	l1197
  5042                           
  5043                           ; BSR set to: 0
  5044  001CC6  0E01               	movlw	1
  5045  001CC8  6F66               	movwf	___lwdiv@counter& (0+255),b
  5046  001CCA  D004               	goto	l1192
  5047  001CCC                     
  5048                           ; BSR set to: 0
  5049                           
  5050                           ; BSR set to: 0
  5051  001CCC  90D8               	bcf	status,0,c
  5052  001CCE  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  5053  001CD0  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5054  001CD2  2B66               	incf	___lwdiv@counter& (0+255),f,b
  5055  001CD4                     l1192:
  5056                           
  5057                           ; BSR set to: 0
  5058                           
  5059                           ; BSR set to: 0
  5060  001CD4  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  5061  001CD6  D7FA               	goto	l1193
  5062  001CD8                     u2390:
  5063                           
  5064                           ; BSR set to: 0
  5065                           
  5066                           ; BSR set to: 0
  5067                           
  5068                           ; BSR set to: 0
  5069  001CD8  90D8               	bcf	status,0,c
  5070  001CDA  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
  5071  001CDC  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5072                           
  5073                           ; BSR set to: 0
  5074  001CDE  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5075  001CE0  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  5076  001CE2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5077  001CE4  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5078  001CE6  A0D8               	btfss	status,0,c
  5079  001CE8  D005               	goto	l1196
  5080                           
  5081                           ; BSR set to: 0
  5082  001CEA  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5083  001CEC  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  5084  001CEE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5085  001CF0  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5086                           
  5087                           ; BSR set to: 0
  5088  001CF2  8164               	bsf	___lwdiv@quotient& (0+255),0,b
  5089  001CF4                     l1196:
  5090                           
  5091                           ; BSR set to: 0
  5092                           
  5093                           ; BSR set to: 0
  5094  001CF4  90D8               	bcf	status,0,c
  5095  001CF6  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5096  001CF8  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  5097                           
  5098                           ; BSR set to: 0
  5099  001CFA  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
  5100  001CFC  D7ED               	goto	u2390
  5101  001CFE                     l1197:
  5102                           
  5103                           ; BSR set to: 0
  5104                           
  5105                           ; BSR set to: 0
  5106  001CFE  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
  5107  001D02  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5108                           
  5109                           ; BSR set to: 0
  5110  001D06  0012               	return		;funcret
  5111  001D08                     __end_of___lwdiv:
  5112                           	opt stack 0
  5113                           tblptru	equ	0xFF8
  5114                           tblptrh	equ	0xFF7
  5115                           tblptrl	equ	0xFF6
  5116                           tablat	equ	0xFF5
  5117                           intcon	equ	0xFF2
  5118                           postinc0	equ	0xFEE
  5119                           wreg	equ	0xFE8
  5120                           postdec1	equ	0xFE5
  5121                           fsr1l	equ	0xFE1
  5122                           indf2	equ	0xFDF
  5123                           fsr2h	equ	0xFDA
  5124                           fsr2l	equ	0xFD9
  5125                           status	equ	0xFD8
  5126                           
  5127 ;; *************** function ___fttol *****************
  5128 ;; Defined at:
  5129 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  f1              3    0[BANK0 ] float 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;  lval            4   10[BANK0 ] unsigned long 
  5134 ;;  exp1            1   14[BANK0 ] unsigned char 
  5135 ;;  sign1           1    9[BANK0 ] unsigned char 
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  4    0[BANK0 ] long 
  5138 ;; Registers used:
  5139 ;;		wreg, status,2, status,0
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5145 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5146 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5147 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5148 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5149 ;;Total ram usage:       15 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; Hardware stack levels required when called:    9
  5152 ;; This function calls:
  5153 ;;		Nothing
  5154 ;; This function is called by:
  5155 ;;		_Check_Buttons
  5156 ;;		_Draw_Brightness_Menu
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text28
  5161  000984                     __ptext28:
  5162                           	opt stack 0
  5163  000984                     ___fttol:
  5164                           	opt stack 20
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;incstack = 0
  5168  000984  C062  F064         	movff	___fttol@f1+2,??___fttol
  5169  000988  0100               	movlb	0	; () banked
  5170  00098A  6B65               	clrf	(??___fttol+1)& (0+255),b
  5171  00098C  6B66               	clrf	(??___fttol+2)& (0+255),b
  5172  00098E  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
  5173  000990  3764               	rlcf	??___fttol& (0+255),f,b
  5174  000992  E301               	bnc	u3371
  5175  000994  8165               	bsf	(??___fttol+1)& (0+255),0,b
  5176  000996                     u3371:
  5177  000996  5164               	movf	??___fttol& (0+255),w,b
  5178  000998  6F6E               	movwf	___fttol@exp1& (0+255),b
  5179  00099A  516E               	movf	___fttol@exp1& (0+255),w,b
  5180  00099C  A4D8               	btfss	status,2,c
  5181  00099E  D009               	goto	l1089
  5182                           
  5183                           ; BSR set to: 0
  5184  0009A0  0E00               	movlw	0
  5185  0009A2  6F60               	movwf	?___fttol& (0+255),b
  5186  0009A4  0E00               	movlw	0
  5187  0009A6  6F61               	movwf	(?___fttol+1)& (0+255),b
  5188  0009A8  0E00               	movlw	0
  5189  0009AA  6F62               	movwf	(?___fttol+2)& (0+255),b
  5190  0009AC  0E00               	movlw	0
  5191  0009AE  6F63               	movwf	(?___fttol+3)& (0+255),b
  5192                           
  5193                           ; BSR set to: 0
  5194  0009B0  0012               	return	
  5195  0009B2                     l1089:
  5196                           
  5197                           ; BSR set to: 0
  5198                           
  5199                           ; BSR set to: 0
  5200  0009B2  0E17               	movlw	23
  5201  0009B4  6F64               	movwf	??___fttol& (0+255),b
  5202  0009B6  C060  F065         	movff	___fttol@f1,??___fttol+1
  5203  0009BA  C061  F066         	movff	___fttol@f1+1,??___fttol+2
  5204  0009BE  C062  F067         	movff	___fttol@f1+2,??___fttol+3
  5205  0009C2  2964               	incf	??___fttol& (0+255),w,b
  5206  0009C4  6F68               	movwf	(??___fttol+4)& (0+255),b
  5207  0009C6  D004               	goto	u3390
  5208  0009C8                     u3395:
  5209  0009C8  90D8               	bcf	status,0,c
  5210  0009CA  3367               	rrcf	(??___fttol+3)& (0+255),f,b
  5211  0009CC  3366               	rrcf	(??___fttol+2)& (0+255),f,b
  5212  0009CE  3365               	rrcf	(??___fttol+1)& (0+255),f,b
  5213  0009D0                     u3390:
  5214  0009D0  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
  5215  0009D2  D7FA               	goto	u3395
  5216  0009D4  0100               	movlb	0	; () banked
  5217  0009D6  5165               	movf	(??___fttol+1)& (0+255),w,b
  5218  0009D8  6F69               	movwf	___fttol@sign1& (0+255),b
  5219                           
  5220                           ; BSR set to: 0
  5221  0009DA  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
  5222                           
  5223                           ; BSR set to: 0
  5224  0009DC  0EFF               	movlw	255
  5225  0009DE  1760               	andwf	___fttol@f1& (0+255),f,b
  5226  0009E0  0EFF               	movlw	255
  5227  0009E2  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
  5228  0009E4  0E00               	movlw	0
  5229  0009E6  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
  5230                           
  5231                           ; BSR set to: 0
  5232  0009E8  5160               	movf	___fttol@f1& (0+255),w,b
  5233  0009EA  6F6A               	movwf	___fttol@lval& (0+255),b
  5234  0009EC  5161               	movf	(___fttol@f1+1)& (0+255),w,b
  5235  0009EE  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
  5236  0009F0  5162               	movf	(___fttol@f1+2)& (0+255),w,b
  5237  0009F2  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
  5238  0009F4  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
  5239                           
  5240                           ; BSR set to: 0
  5241  0009F6  0E8E               	movlw	142
  5242  0009F8  5F6E               	subwf	___fttol@exp1& (0+255),f,b
  5243                           
  5244                           ; BSR set to: 0
  5245  0009FA  AF6E               	btfss	___fttol@exp1& (0+255),7,b
  5246  0009FC  D016               	goto	l1091
  5247                           
  5248                           ; BSR set to: 0
  5249  0009FE  516E               	movf	___fttol@exp1& (0+255),w,b
  5250  000A00  0A80               	xorlw	128
  5251  000A02  0F8F               	addlw	143
  5252  000A04  B0D8               	btfsc	status,0,c
  5253  000A06  D009               	goto	l1092
  5254                           
  5255                           ; BSR set to: 0
  5256  000A08  0E00               	movlw	0
  5257  000A0A  6F60               	movwf	?___fttol& (0+255),b
  5258  000A0C  0E00               	movlw	0
  5259  000A0E  6F61               	movwf	(?___fttol+1)& (0+255),b
  5260  000A10  0E00               	movlw	0
  5261  000A12  6F62               	movwf	(?___fttol+2)& (0+255),b
  5262  000A14  0E00               	movlw	0
  5263  000A16  6F63               	movwf	(?___fttol+3)& (0+255),b
  5264                           
  5265                           ; BSR set to: 0
  5266  000A18  0012               	return	
  5267  000A1A                     l1092:
  5268                           
  5269                           ; BSR set to: 0
  5270                           
  5271                           ; BSR set to: 0
  5272                           
  5273                           ; BSR set to: 0
  5274  000A1A  90D8               	bcf	status,0,c
  5275  000A1C  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5276  000A1E  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5277  000A20  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5278  000A22  336A               	rrcf	___fttol@lval& (0+255),f,b
  5279                           
  5280                           ; BSR set to: 0
  5281  000A24  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
  5282  000A26  D7F9               	goto	l1092
  5283                           
  5284                           ; BSR set to: 0
  5285  000A28  D015               	goto	u3430
  5286  000A2A                     l1091:
  5287                           
  5288                           ; BSR set to: 0
  5289                           
  5290                           ; BSR set to: 0
  5291  000A2A  0E17               	movlw	23
  5292  000A2C  656E               	cpfsgt	___fttol@exp1& (0+255),b
  5293  000A2E  D00F               	goto	l1097
  5294                           
  5295                           ; BSR set to: 0
  5296  000A30  0E00               	movlw	0
  5297  000A32  6F60               	movwf	?___fttol& (0+255),b
  5298  000A34  0E00               	movlw	0
  5299  000A36  6F61               	movwf	(?___fttol+1)& (0+255),b
  5300  000A38  0E00               	movlw	0
  5301  000A3A  6F62               	movwf	(?___fttol+2)& (0+255),b
  5302  000A3C  0E00               	movlw	0
  5303  000A3E  6F63               	movwf	(?___fttol+3)& (0+255),b
  5304                           
  5305                           ; BSR set to: 0
  5306  000A40  0012               	return	
  5307  000A42                     
  5308                           ; BSR set to: 0
  5309                           
  5310                           ; BSR set to: 0
  5311  000A42  90D8               	bcf	status,0,c
  5312  000A44  376A               	rlcf	___fttol@lval& (0+255),f,b
  5313  000A46  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5314  000A48  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5315  000A4A  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5316  000A4C  076E               	decf	___fttol@exp1& (0+255),f,b
  5317  000A4E                     l1097:
  5318                           
  5319                           ; BSR set to: 0
  5320                           
  5321                           ; BSR set to: 0
  5322  000A4E  516E               	movf	___fttol@exp1& (0+255),w,b
  5323  000A50  A4D8               	btfss	status,2,c
  5324  000A52  D7F7               	goto	l1098
  5325  000A54                     u3430:
  5326                           
  5327                           ; BSR set to: 0
  5328                           
  5329                           ; BSR set to: 0
  5330                           
  5331                           ; BSR set to: 0
  5332  000A54  5169               	movf	___fttol@sign1& (0+255),w,b
  5333  000A56  B4D8               	btfsc	status,2,c
  5334  000A58  D008               	goto	l1100
  5335                           
  5336                           ; BSR set to: 0
  5337  000A5A  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
  5338  000A5C  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
  5339  000A5E  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
  5340  000A60  6D6A               	negf	___fttol@lval& (0+255),b
  5341  000A62  0E00               	movlw	0
  5342  000A64  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5343  000A66  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5344  000A68  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5345  000A6A                     l1100:
  5346                           
  5347                           ; BSR set to: 0
  5348                           
  5349                           ; BSR set to: 0
  5350  000A6A  C06A  F060         	movff	___fttol@lval,?___fttol
  5351  000A6E  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
  5352  000A72  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
  5353  000A76  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
  5354  000A7A  0012               	return	
  5355  000A7C                     __end_of___fttol:
  5356                           	opt stack 0
  5357                           tblptru	equ	0xFF8
  5358                           tblptrh	equ	0xFF7
  5359                           tblptrl	equ	0xFF6
  5360                           tablat	equ	0xFF5
  5361                           intcon	equ	0xFF2
  5362                           postinc0	equ	0xFEE
  5363                           wreg	equ	0xFE8
  5364                           postdec1	equ	0xFE5
  5365                           fsr1l	equ	0xFE1
  5366                           indf2	equ	0xFDF
  5367                           fsr2h	equ	0xFDA
  5368                           fsr2l	equ	0xFD9
  5369                           status	equ	0xFD8
  5370                           
  5371 ;; *************** function _Make_Back_Arrow *****************
  5372 ;; Defined at:
  5373 ;;		line 90 in file "screen_controls.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;		None
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;		None
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  1    wreg      void 
  5380 ;; Registers used:
  5381 ;;		wreg, status,2, status,0, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5391 ;;Total ram usage:        0 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:   12
  5394 ;; This function calls:
  5395 ;;		_GLCD_WriteData
  5396 ;; This function is called by:
  5397 ;;		_Draw_runTime_Menu
  5398 ;;		_Draw_Brightness_Menu
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text29
  5403  00227A                     __ptext29:
  5404                           	opt stack 0
  5405  00227A                     _Make_Back_Arrow:
  5406                           	opt stack 16
  5407                           
  5408                           ;screen_controls.c: 92: GLCD_WriteData(0x04);
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;incstack = 0
  5412  00227A  0E04               	movlw	4
  5413  00227C  EC06  F00C         	call	_GLCD_WriteData
  5414                           
  5415                           ;screen_controls.c: 93: GLCD_WriteData(0x0E);
  5416  002280  0E0E               	movlw	14
  5417  002282  EC06  F00C         	call	_GLCD_WriteData
  5418                           
  5419                           ;screen_controls.c: 94: GLCD_WriteData(0x95);
  5420  002286  0E95               	movlw	149
  5421  002288  EC06  F00C         	call	_GLCD_WriteData
  5422                           
  5423                           ;screen_controls.c: 95: GLCD_WriteData(0x84);
  5424  00228C  0E84               	movlw	132
  5425  00228E  EC06  F00C         	call	_GLCD_WriteData
  5426                           
  5427                           ;screen_controls.c: 96: GLCD_WriteData(0x84);
  5428  002292  0E84               	movlw	132
  5429  002294  EC06  F00C         	call	_GLCD_WriteData
  5430                           
  5431                           ;screen_controls.c: 97: GLCD_WriteData(0x44);
  5432  002298  0E44               	movlw	68
  5433  00229A  EC06  F00C         	call	_GLCD_WriteData
  5434                           
  5435                           ;screen_controls.c: 98: GLCD_WriteData(0x38);
  5436  00229E  0E38               	movlw	56
  5437  0022A0  EC06  F00C         	call	_GLCD_WriteData
  5438                           
  5439                           ;screen_controls.c: 99: GLCD_WriteData(0x00);
  5440  0022A4  0E00               	movlw	0
  5441  0022A6  EC06  F00C         	call	_GLCD_WriteData
  5442  0022AA  0012               	return		;funcret
  5443  0022AC                     __end_of_Make_Back_Arrow:
  5444                           	opt stack 0
  5445                           tblptru	equ	0xFF8
  5446                           tblptrh	equ	0xFF7
  5447                           tblptrl	equ	0xFF6
  5448                           tablat	equ	0xFF5
  5449                           intcon	equ	0xFF2
  5450                           postinc0	equ	0xFEE
  5451                           wreg	equ	0xFE8
  5452                           postdec1	equ	0xFE5
  5453                           fsr1l	equ	0xFE1
  5454                           indf2	equ	0xFDF
  5455                           fsr2h	equ	0xFDA
  5456                           fsr2l	equ	0xFD9
  5457                           status	equ	0xFD8
  5458                           
  5459 ;; *************** function _GLCD_WriteString *****************
  5460 ;; Defined at:
  5461 ;;		line 70 in file "ks0108lib/KS0108.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  stringToWrit    2   13[BANK0 ] PTR unsigned char 
  5464 ;;		 -> STR_21(5), STR_20(4), Draw_Brightness_Menu@display(10), STR_19(13), 
  5465 ;;		 -> STR_18(17), STR_17(5), STR_16(7), STR_15(13), 
  5466 ;;		 -> STR_14(7), Draw_runTime_Menu@display(10), STR_13(11), STR_12(10), 
  5467 ;;		 -> STR_11(9), STR_10(10), STR_9(9), STR_8(11), 
  5468 ;;		 -> STR_7(11), STR_6(4), Initialize_Menus@display(10), STR_5(8), 
  5469 ;;		 -> STR_4(7), STR_3(10), STR_2(5), Brightness_Menu_Function@display(10), 
  5470 ;;		 -> STR_1(7), Run_Time_Menu_Function@display(10), 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;		None
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      void 
  5475 ;; Registers used:
  5476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5482 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5485 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5486 ;;Total ram usage:        2 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:   13
  5489 ;; This function calls:
  5490 ;;		_GLCD_WriteChar
  5491 ;; This function is called by:
  5492 ;;		_Initialize_Menus
  5493 ;;		_Draw_runTime_Menu
  5494 ;;		_Draw_Brightness_Menu
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text30
  5499  001B56                     __ptext30:
  5500                           	opt stack 0
  5501  001B56                     _GLCD_WriteString:
  5502                           	opt stack 16
  5503                           
  5504                           ;KS0108.c: 72: while(*stringToWrite)
  5505                           
  5506                           ;incstack = 0
  5507  001B56  D016               	goto	l533
  5508  001B58                     
  5509                           ;KS0108.c: 73: GLCD_WriteChar(*stringToWrite++);
  5510  001B58  C06D  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  5511  001B5C  C06E  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  5512  001B60  0E00               	movlw	low (__mediumconst shr (0+16))
  5513  001B62  6EF8               	movwf	tblptru,c
  5514  001B64  0E0E               	movlw	(high __ramtop+-1)
  5515  001B66  64F7               	cpfsgt	tblptrh,c
  5516  001B68  D003               	bra	u3017
  5517  001B6A  0008               	tblrd		*
  5518  001B6C  50F5               	movf	tablat,w,c
  5519  001B6E  D005               	bra	u3010
  5520  001B70                     u3017:
  5521  001B70  CFF6 FFE9          	movff	tblptrl,fsr0l
  5522  001B74  CFF7 FFEA          	movff	tblptrh,fsr0h
  5523  001B78  50EF               	movf	indf0,w,c
  5524  001B7A                     u3010:
  5525  001B7A  ECD7  F00D         	call	_GLCD_WriteChar
  5526  001B7E  0100               	movlb	0	; () banked
  5527  001B80  4B6D               	infsnz	GLCD_WriteString@stringToWrite& (0+255),f,b
  5528  001B82  2B6E               	incf	(GLCD_WriteString@stringToWrite+1)& (0+255),f,b
  5529  001B84                     l533:
  5530                           
  5531                           ; BSR set to: 0
  5532  001B84  C06D  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  5533  001B88  C06E  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  5534  001B8C  0E00               	movlw	low (__mediumconst shr (0+16))
  5535  001B8E  6EF8               	movwf	tblptru,c
  5536  001B90  0E0E               	movlw	(high __ramtop+-1)
  5537  001B92  64F7               	cpfsgt	tblptrh,c
  5538  001B94  D003               	bra	u3027
  5539  001B96  0008               	tblrd		*
  5540  001B98  50F5               	movf	tablat,w,c
  5541  001B9A  D005               	bra	u3020
  5542  001B9C                     u3027:
  5543  001B9C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5544  001BA0  CFF7 FFEA          	movff	tblptrh,fsr0h
  5545  001BA4  50EF               	movf	indf0,w,c
  5546  001BA6                     u3020:
  5547  001BA6  0900               	iorlw	0
  5548  001BA8  B4D8               	btfsc	status,2,c
  5549  001BAA  0012               	return	
  5550  001BAC  D7D5               	goto	l534
  5551  001BAE                     __end_of_GLCD_WriteString:
  5552                           	opt stack 0
  5553                           tblptru	equ	0xFF8
  5554                           tblptrh	equ	0xFF7
  5555                           tblptrl	equ	0xFF6
  5556                           tablat	equ	0xFF5
  5557                           intcon	equ	0xFF2
  5558                           indf0	equ	0xFEF
  5559                           postinc0	equ	0xFEE
  5560                           fsr0h	equ	0xFEA
  5561                           fsr0l	equ	0xFE9
  5562                           wreg	equ	0xFE8
  5563                           postdec1	equ	0xFE5
  5564                           fsr1l	equ	0xFE1
  5565                           indf2	equ	0xFDF
  5566                           fsr2h	equ	0xFDA
  5567                           fsr2l	equ	0xFD9
  5568                           status	equ	0xFD8
  5569                           
  5570 ;; *************** function _GLCD_WriteChar *****************
  5571 ;; Defined at:
  5572 ;;		line 56 in file "ks0108lib/KS0108.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  charToWrite     1    wreg     unsigned char 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  charToWrite     1   10[BANK0 ] unsigned char 
  5577 ;;  i               2   11[BANK0 ] int 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  1    wreg      void 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5588 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5590 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5591 ;;Total ram usage:        3 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:   12
  5594 ;; This function calls:
  5595 ;;		_GLCD_WriteData
  5596 ;; This function is called by:
  5597 ;;		_GLCD_WriteString
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           	psect	text31
  5602  001BAE                     __ptext31:
  5603                           	opt stack 0
  5604  001BAE                     _GLCD_WriteChar:
  5605                           	opt stack 16
  5606                           
  5607                           ;incstack = 0
  5608                           ;GLCD_WriteChar@charToWrite stored from wreg
  5609  001BAE  0100               	movlb	0	; () banked
  5610  001BB0  6F6A               	movwf	GLCD_WriteChar@charToWrite& (0+255),b
  5611                           
  5612                           ;KS0108.c: 58: int i;
  5613                           ;KS0108.c: 59: charToWrite -= 32;
  5614  001BB2  0E20               	movlw	32
  5615  001BB4  0100               	movlb	0	; () banked
  5616  001BB6  5F6A               	subwf	GLCD_WriteChar@charToWrite& (0+255),f,b
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
  5620  001BB8  0E00               	movlw	0
  5621  001BBA  6F6C               	movwf	(GLCD_WriteChar@i+1)& (0+255),b
  5622  001BBC  0E00               	movlw	0
  5623  001BBE  6F6B               	movwf	GLCD_WriteChar@i& (0+255),b
  5624  001BC0                     l3866:
  5625                           
  5626                           ; BSR set to: 0
  5627  001BC0  BF6C               	btfsc	(GLCD_WriteChar@i+1)& (0+255),7,b
  5628  001BC2  D006               	goto	l528
  5629  001BC4  516C               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  5630  001BC6  E11B               	bnz	l3876
  5631  001BC8  0E05               	movlw	5
  5632  001BCA  5D6B               	subwf	GLCD_WriteChar@i& (0+255),w,b
  5633  001BCC  B0D8               	btfsc	status,0,c
  5634  001BCE  D017               	goto	u2620
  5635  001BD0                     l528:
  5636                           
  5637                           ; BSR set to: 0
  5638                           ;KS0108.c: 61: {
  5639                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
  5640                           
  5641                           ; BSR set to: 0
  5642  001BD0  516A               	movf	GLCD_WriteChar@charToWrite& (0+255),w,b
  5643  001BD2  0D05               	mullw	5
  5644  001BD4  516B               	movf	GLCD_WriteChar@i& (0+255),w,b
  5645  001BD6  26F3               	addwf	prodl,f,c
  5646  001BD8  516C               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  5647  001BDA  22F4               	addwfc	prodh,f,c
  5648  001BDC  0E85               	movlw	low _font5x8
  5649  001BDE  24F3               	addwf	prodl,w,c
  5650  001BE0  6EF6               	movwf	tblptrl,c
  5651  001BE2  0EFD               	movlw	high _font5x8
  5652  001BE4  20F4               	addwfc	prodh,w,c
  5653  001BE6  6EF7               	movwf	tblptrh,c
  5654  001BE8                     	if	1	;There are 3 active tblptr bytes
  5655  001BE8  6AF8               	clrf	tblptru,c
  5656  001BEA  0E00               	movlw	low (__mediumconst shr (0+16))
  5657  001BEC  22F8               	addwfc	tblptru,f,c
  5658  001BEE                     	endif
  5659  001BEE  0008               	tblrd		*
  5660  001BF0  50F5               	movf	tablat,w,c
  5661  001BF2  EC06  F00C         	call	_GLCD_WriteData
  5662  001BF6  0100               	movlb	0	; () banked
  5663  001BF8  4B6B               	infsnz	GLCD_WriteChar@i& (0+255),f,b
  5664  001BFA  2B6C               	incf	(GLCD_WriteChar@i+1)& (0+255),f,b
  5665  001BFC  D7E1               	goto	l3866
  5666  001BFE                     u2620:
  5667  001BFE                     l3876:
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;KS0108.c: 64: }
  5671                           ;KS0108.c: 65: GLCD_WriteData(0x00);
  5672  001BFE  0E00               	movlw	0
  5673  001C00  EC06  F00C         	call	_GLCD_WriteData
  5674  001C04  0012               	return		;funcret
  5675  001C06                     __end_of_GLCD_WriteChar:
  5676                           	opt stack 0
  5677                           tblptru	equ	0xFF8
  5678                           tblptrh	equ	0xFF7
  5679                           tblptrl	equ	0xFF6
  5680                           tablat	equ	0xFF5
  5681                           prodh	equ	0xFF4
  5682                           prodl	equ	0xFF3
  5683                           intcon	equ	0xFF2
  5684                           indf0	equ	0xFEF
  5685                           postinc0	equ	0xFEE
  5686                           fsr0h	equ	0xFEA
  5687                           fsr0l	equ	0xFE9
  5688                           wreg	equ	0xFE8
  5689                           postdec1	equ	0xFE5
  5690                           fsr1l	equ	0xFE1
  5691                           indf2	equ	0xFDF
  5692                           fsr2h	equ	0xFDA
  5693                           fsr2l	equ	0xFD9
  5694                           status	equ	0xFD8
  5695                           
  5696 ;; *************** function _GLCD_Line *****************
  5697 ;; Defined at:
  5698 ;;		line 52 in file "ks0108lib/graphic.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  X1              2   21[BANK0 ] unsigned int 
  5701 ;;  Y1              2   23[BANK0 ] unsigned int 
  5702 ;;  X2              2   25[BANK0 ] unsigned int 
  5703 ;;  Y2              2   27[BANK0 ] unsigned int 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  Dy              2   49[BANK0 ] int 
  5706 ;;  Dx              2   47[BANK0 ] int 
  5707 ;;  CurrentY        2   45[BANK0 ] int 
  5708 ;;  CurrentX        2   43[BANK0 ] int 
  5709 ;;  TwoDy           2   41[BANK0 ] int 
  5710 ;;  TwoDx           2   39[BANK0 ] int 
  5711 ;;  Yinc            2   37[BANK0 ] int 
  5712 ;;  Xinc            2   35[BANK0 ] int 
  5713 ;;  TwoDyAccumul    2   33[BANK0 ] int 
  5714 ;;  TwoDxAccumul    2   31[BANK0 ] int 
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1    wreg      void 
  5717 ;; Registers used:
  5718 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 0/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5724 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5725 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5726 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5727 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5728 ;;Total ram usage:       30 bytes
  5729 ;; Hardware stack levels used:    1
  5730 ;; Hardware stack levels required when called:   14
  5731 ;; This function calls:
  5732 ;;		_GLCD_SetPixel
  5733 ;; This function is called by:
  5734 ;;		_Initialize_Menus
  5735 ;;		_Draw_runTime_Menu
  5736 ;;		_Draw_Brightness_Menu
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text32
  5741  0000B8                     __ptext32:
  5742                           	opt stack 0
  5743  0000B8                     _GLCD_Line:
  5744                           	opt stack 15
  5745                           
  5746                           ;graphic.c: 54: int CurrentX, CurrentY, Xinc, Yinc,
  5747                           ;graphic.c: 55: Dx, Dy, TwoDx, TwoDy,
  5748                           ;graphic.c: 56: TwoDxAccumulatedError, TwoDyAccumulatedError;
  5749                           ;graphic.c: 58: Dx = (X2-X1);
  5750                           
  5751                           ;incstack = 0
  5752  0000B8  C075  F07D         	movff	GLCD_Line@X1,??_GLCD_Line
  5753  0000BC  C076  F07E         	movff	GLCD_Line@X1+1,??_GLCD_Line+1
  5754  0000C0  0100               	movlb	0	; () banked
  5755  0000C2  1F7D               	comf	??_GLCD_Line& (0+255),f,b
  5756  0000C4  1F7E               	comf	(??_GLCD_Line+1)& (0+255),f,b
  5757  0000C6  4B7D               	infsnz	??_GLCD_Line& (0+255),f,b
  5758  0000C8  2B7E               	incf	(??_GLCD_Line+1)& (0+255),f,b
  5759  0000CA  5179               	movf	GLCD_Line@X2& (0+255),w,b
  5760  0000CC  257D               	addwf	??_GLCD_Line& (0+255),w,b
  5761  0000CE  6F8F               	movwf	GLCD_Line@Dx& (0+255),b
  5762  0000D0  517A               	movf	(GLCD_Line@X2+1)& (0+255),w,b
  5763  0000D2  217E               	addwfc	(??_GLCD_Line+1)& (0+255),w,b
  5764  0000D4  6F90               	movwf	(GLCD_Line@Dx+1)& (0+255),b
  5765                           
  5766                           ;graphic.c: 59: Dy = (Y2-Y1);
  5767  0000D6  C077  F07D         	movff	GLCD_Line@Y1,??_GLCD_Line
  5768  0000DA  C078  F07E         	movff	GLCD_Line@Y1+1,??_GLCD_Line+1
  5769  0000DE  1F7D               	comf	??_GLCD_Line& (0+255),f,b
  5770  0000E0  1F7E               	comf	(??_GLCD_Line+1)& (0+255),f,b
  5771  0000E2  4B7D               	infsnz	??_GLCD_Line& (0+255),f,b
  5772  0000E4  2B7E               	incf	(??_GLCD_Line+1)& (0+255),f,b
  5773  0000E6  517B               	movf	GLCD_Line@Y2& (0+255),w,b
  5774  0000E8  257D               	addwf	??_GLCD_Line& (0+255),w,b
  5775  0000EA  6F91               	movwf	GLCD_Line@Dy& (0+255),b
  5776  0000EC  517C               	movf	(GLCD_Line@Y2+1)& (0+255),w,b
  5777  0000EE  217E               	addwfc	(??_GLCD_Line+1)& (0+255),w,b
  5778  0000F0  6F92               	movwf	(GLCD_Line@Dy+1)& (0+255),b
  5779                           
  5780                           ;graphic.c: 61: TwoDx = Dx + Dx;
  5781  0000F2  90D8               	bcf	status,0,c
  5782  0000F4  358F               	rlcf	GLCD_Line@Dx& (0+255),w,b
  5783  0000F6  6F87               	movwf	GLCD_Line@TwoDx& (0+255),b
  5784  0000F8  3590               	rlcf	(GLCD_Line@Dx+1)& (0+255),w,b
  5785  0000FA  6F88               	movwf	(GLCD_Line@TwoDx+1)& (0+255),b
  5786                           
  5787                           ;graphic.c: 62: TwoDy = Dy + Dy;
  5788  0000FC  90D8               	bcf	status,0,c
  5789  0000FE  3591               	rlcf	GLCD_Line@Dy& (0+255),w,b
  5790  000100  6F89               	movwf	GLCD_Line@TwoDy& (0+255),b
  5791  000102  3592               	rlcf	(GLCD_Line@Dy+1)& (0+255),w,b
  5792  000104  6F8A               	movwf	(GLCD_Line@TwoDy+1)& (0+255),b
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;graphic.c: 64: CurrentX = X1;
  5796  000106  C075  F08B         	movff	GLCD_Line@X1,GLCD_Line@CurrentX
  5797  00010A  C076  F08C         	movff	GLCD_Line@X1+1,GLCD_Line@CurrentX+1
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;graphic.c: 65: CurrentY = Y1;
  5801  00010E  C077  F08D         	movff	GLCD_Line@Y1,GLCD_Line@CurrentY
  5802  000112  C078  F08E         	movff	GLCD_Line@Y1+1,GLCD_Line@CurrentY+1
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;graphic.c: 67: Xinc = 1;
  5806  000116  0E00               	movlw	0
  5807  000118  6F84               	movwf	(GLCD_Line@Xinc+1)& (0+255),b
  5808  00011A  0E01               	movlw	1
  5809  00011C  6F83               	movwf	GLCD_Line@Xinc& (0+255),b
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;graphic.c: 68: Yinc = 1;
  5813  00011E  0E00               	movlw	0
  5814  000120  6F86               	movwf	(GLCD_Line@Yinc+1)& (0+255),b
  5815  000122  0E01               	movlw	1
  5816  000124  6F85               	movwf	GLCD_Line@Yinc& (0+255),b
  5817                           
  5818                           ;graphic.c: 70: if(Dx < 0)
  5819  000126  AF90               	btfss	(GLCD_Line@Dx+1)& (0+255),7,b
  5820  000128  D00A               	goto	l479
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;graphic.c: 71: {
  5824                           ;graphic.c: 72: Xinc = -1;
  5825  00012A  6983               	setf	GLCD_Line@Xinc& (0+255),b
  5826  00012C  6984               	setf	(GLCD_Line@Xinc+1)& (0+255),b
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;graphic.c: 73: Dx = -Dx;
  5830  00012E  6D8F               	negf	GLCD_Line@Dx& (0+255),b
  5831  000130  1F90               	comf	(GLCD_Line@Dx+1)& (0+255),f,b
  5832  000132  B0D8               	btfsc	status,0,c
  5833  000134  2B90               	incf	(GLCD_Line@Dx+1)& (0+255),f,b
  5834                           
  5835                           ;graphic.c: 74: TwoDx = -TwoDx;
  5836  000136  6D87               	negf	GLCD_Line@TwoDx& (0+255),b
  5837  000138  1F88               	comf	(GLCD_Line@TwoDx+1)& (0+255),f,b
  5838  00013A  B0D8               	btfsc	status,0,c
  5839  00013C  2B88               	incf	(GLCD_Line@TwoDx+1)& (0+255),f,b
  5840  00013E                     l479:
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;graphic.c: 75: }
  5844                           ;graphic.c: 77: if (Dy < 0)
  5845                           
  5846                           ; BSR set to: 0
  5847  00013E  AF92               	btfss	(GLCD_Line@Dy+1)& (0+255),7,b
  5848  000140  D00A               	goto	l480
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;graphic.c: 78: {
  5852                           ;graphic.c: 79: Yinc = -1;
  5853  000142  6985               	setf	GLCD_Line@Yinc& (0+255),b
  5854  000144  6986               	setf	(GLCD_Line@Yinc+1)& (0+255),b
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;graphic.c: 80: Dy = -Dy;
  5858  000146  6D91               	negf	GLCD_Line@Dy& (0+255),b
  5859  000148  1F92               	comf	(GLCD_Line@Dy+1)& (0+255),f,b
  5860  00014A  B0D8               	btfsc	status,0,c
  5861  00014C  2B92               	incf	(GLCD_Line@Dy+1)& (0+255),f,b
  5862                           
  5863                           ;graphic.c: 81: TwoDy = -TwoDy;
  5864  00014E  6D89               	negf	GLCD_Line@TwoDy& (0+255),b
  5865  000150  1F8A               	comf	(GLCD_Line@TwoDy+1)& (0+255),f,b
  5866  000152  B0D8               	btfsc	status,0,c
  5867  000154  2B8A               	incf	(GLCD_Line@TwoDy+1)& (0+255),f,b
  5868  000156                     l480:
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;graphic.c: 82: }
  5872                           ;graphic.c: 84: GLCD_SetPixel(X1,Y1, color);
  5873                           
  5874                           ; BSR set to: 0
  5875  000156  C077  F06E         	movff	GLCD_Line@Y1,GLCD_SetPixel@y
  5876  00015A  0E65               	movlw	low _color
  5877  00015C  6EF6               	movwf	tblptrl,c
  5878  00015E                     	if	1	;There is more than 1 active tblptr byte
  5879  00015E  0EFF               	movlw	high _color
  5880  000160  6EF7               	movwf	tblptrh,c
  5881  000162                     	endif
  5882  000162                     	if	1	;There are 3 active tblptr bytes
  5883  000162  0E00               	movlw	low (_color shr (0+16))
  5884  000164  6EF8               	movwf	tblptru,c
  5885  000166                     	endif
  5886  000166  0008               	tblrd		*
  5887  000168  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  5888  00016C  5175               	movf	GLCD_Line@X1& (0+255),w,b
  5889  00016E  EC03  F009         	call	_GLCD_SetPixel
  5890                           
  5891                           ;graphic.c: 86: if ((Dx != 0) || (Dy != 0))
  5892  000172  0100               	movlb	0	; () banked
  5893  000174  518F               	movf	GLCD_Line@Dx& (0+255),w,b
  5894  000176  1190               	iorwf	(GLCD_Line@Dx+1)& (0+255),w,b
  5895  000178  A4D8               	btfss	status,2,c
  5896  00017A  D004               	goto	u3110
  5897                           
  5898                           ; BSR set to: 0
  5899  00017C  5191               	movf	GLCD_Line@Dy& (0+255),w,b
  5900  00017E  1192               	iorwf	(GLCD_Line@Dy+1)& (0+255),w,b
  5901  000180  B4D8               	btfsc	status,2,c
  5902  000182  0012               	return	
  5903  000184                     u3110:
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;graphic.c: 87: {
  5907                           ;graphic.c: 89: if (Dy <= Dx)
  5908                           
  5909                           ; BSR set to: 0
  5910  000184  5191               	movf	GLCD_Line@Dy& (0+255),w,b
  5911  000186  5D8F               	subwf	GLCD_Line@Dx& (0+255),w,b
  5912  000188  5190               	movf	(GLCD_Line@Dx+1)& (0+255),w,b
  5913  00018A  0A80               	xorlw	128
  5914  00018C  6F7D               	movwf	??_GLCD_Line& (0+255),b
  5915  00018E  5192               	movf	(GLCD_Line@Dy+1)& (0+255),w,b
  5916  000190  0A80               	xorlw	128
  5917  000192  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  5918  000194  A0D8               	btfss	status,0,c
  5919  000196  D035               	goto	l484
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;graphic.c: 90: {
  5923                           ;graphic.c: 91: TwoDxAccumulatedError = 0;
  5924  000198  0E00               	movlw	0
  5925  00019A  6F80               	movwf	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),b
  5926  00019C  0E00               	movlw	0
  5927  00019E  6F7F               	movwf	GLCD_Line@TwoDxAccumulatedError& (0+255),b
  5928  0001A0                     l4210:
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;graphic.c: 93: {
  5932                           ;graphic.c: 94: CurrentX += Xinc;
  5933  0001A0  5183               	movf	GLCD_Line@Xinc& (0+255),w,b
  5934  0001A2  278B               	addwf	GLCD_Line@CurrentX& (0+255),f,b
  5935  0001A4  5184               	movf	(GLCD_Line@Xinc+1)& (0+255),w,b
  5936  0001A6  238C               	addwfc	(GLCD_Line@CurrentX+1)& (0+255),f,b
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;graphic.c: 95: TwoDxAccumulatedError += TwoDy;
  5940  0001A8  5189               	movf	GLCD_Line@TwoDy& (0+255),w,b
  5941  0001AA  277F               	addwf	GLCD_Line@TwoDxAccumulatedError& (0+255),f,b
  5942  0001AC  518A               	movf	(GLCD_Line@TwoDy+1)& (0+255),w,b
  5943  0001AE  2380               	addwfc	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),f,b
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;graphic.c: 96: if(TwoDxAccumulatedError > Dx)
  5947  0001B0  517F               	movf	GLCD_Line@TwoDxAccumulatedError& (0+255),w,b
  5948  0001B2  5D8F               	subwf	GLCD_Line@Dx& (0+255),w,b
  5949  0001B4  5190               	movf	(GLCD_Line@Dx+1)& (0+255),w,b
  5950  0001B6  0A80               	xorlw	128
  5951  0001B8  6F7D               	movwf	??_GLCD_Line& (0+255),b
  5952  0001BA  5180               	movf	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),w,b
  5953  0001BC  0A80               	xorlw	128
  5954  0001BE  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  5955  0001C0  B0D8               	btfsc	status,0,c
  5956  0001C2  D008               	goto	l486
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;graphic.c: 97: {
  5960                           ;graphic.c: 98: CurrentY += Yinc;
  5961  0001C4  5185               	movf	GLCD_Line@Yinc& (0+255),w,b
  5962  0001C6  278D               	addwf	GLCD_Line@CurrentY& (0+255),f,b
  5963  0001C8  5186               	movf	(GLCD_Line@Yinc+1)& (0+255),w,b
  5964  0001CA  238E               	addwfc	(GLCD_Line@CurrentY+1)& (0+255),f,b
  5965                           
  5966                           ;graphic.c: 99: TwoDxAccumulatedError -= TwoDx;
  5967  0001CC  5187               	movf	GLCD_Line@TwoDx& (0+255),w,b
  5968  0001CE  5F7F               	subwf	GLCD_Line@TwoDxAccumulatedError& (0+255),f,b
  5969  0001D0  5188               	movf	(GLCD_Line@TwoDx+1)& (0+255),w,b
  5970  0001D2  5B80               	subwfb	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),f,b
  5971  0001D4                     l486:
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;graphic.c: 100: }
  5975                           ;graphic.c: 101: GLCD_SetPixel(CurrentX,CurrentY, color);
  5976                           
  5977                           ; BSR set to: 0
  5978  0001D4  C08D  F06E         	movff	GLCD_Line@CurrentY,GLCD_SetPixel@y
  5979  0001D8  0E65               	movlw	low _color
  5980  0001DA  6EF6               	movwf	tblptrl,c
  5981  0001DC                     	if	1	;There is more than 1 active tblptr byte
  5982  0001DC  0EFF               	movlw	high _color
  5983  0001DE  6EF7               	movwf	tblptrh,c
  5984  0001E0                     	endif
  5985  0001E0                     	if	1	;There are 3 active tblptr bytes
  5986  0001E0  0E00               	movlw	low (_color shr (0+16))
  5987  0001E2  6EF8               	movwf	tblptru,c
  5988  0001E4                     	endif
  5989  0001E4  0008               	tblrd		*
  5990  0001E6  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  5991  0001EA  518B               	movf	GLCD_Line@CurrentX& (0+255),w,b
  5992  0001EC  EC03  F009         	call	_GLCD_SetPixel
  5993                           
  5994                           ;graphic.c: 102: }while (CurrentX != X2);
  5995  0001F0  0100               	movlb	0	; () banked
  5996  0001F2  5179               	movf	GLCD_Line@X2& (0+255),w,b
  5997  0001F4  198B               	xorwf	GLCD_Line@CurrentX& (0+255),w,b
  5998  0001F6  E1D4               	bnz	l4210
  5999  0001F8  517A               	movf	(GLCD_Line@X2+1)& (0+255),w,b
  6000  0001FA  198C               	xorwf	(GLCD_Line@CurrentX+1)& (0+255),w,b
  6001  0001FC  B4D8               	btfsc	status,2,c
  6002  0001FE  0012               	return	
  6003  000200  D7CF               	goto	l485
  6004  000202                     l484:
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;graphic.c: 104: else
  6008                           ;graphic.c: 105: {
  6009                           ;graphic.c: 106: TwoDyAccumulatedError = 0;
  6010                           
  6011                           ; BSR set to: 0
  6012  000202  0E00               	movlw	0
  6013  000204  6F82               	movwf	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),b
  6014  000206  0E00               	movlw	0
  6015  000208  6F81               	movwf	GLCD_Line@TwoDyAccumulatedError& (0+255),b
  6016  00020A                     l4224:
  6017                           
  6018                           ; BSR set to: 0
  6019                           ;graphic.c: 108: {
  6020                           ;graphic.c: 109: CurrentY += Yinc;
  6021  00020A  5185               	movf	GLCD_Line@Yinc& (0+255),w,b
  6022  00020C  278D               	addwf	GLCD_Line@CurrentY& (0+255),f,b
  6023  00020E  5186               	movf	(GLCD_Line@Yinc+1)& (0+255),w,b
  6024  000210  238E               	addwfc	(GLCD_Line@CurrentY+1)& (0+255),f,b
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;graphic.c: 110: TwoDyAccumulatedError += TwoDx;
  6028  000212  5187               	movf	GLCD_Line@TwoDx& (0+255),w,b
  6029  000214  2781               	addwf	GLCD_Line@TwoDyAccumulatedError& (0+255),f,b
  6030  000216  5188               	movf	(GLCD_Line@TwoDx+1)& (0+255),w,b
  6031  000218  2382               	addwfc	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),f,b
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;graphic.c: 111: if(TwoDyAccumulatedError>Dy)
  6035  00021A  5181               	movf	GLCD_Line@TwoDyAccumulatedError& (0+255),w,b
  6036  00021C  5D91               	subwf	GLCD_Line@Dy& (0+255),w,b
  6037  00021E  5192               	movf	(GLCD_Line@Dy+1)& (0+255),w,b
  6038  000220  0A80               	xorlw	128
  6039  000222  6F7D               	movwf	??_GLCD_Line& (0+255),b
  6040  000224  5182               	movf	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),w,b
  6041  000226  0A80               	xorlw	128
  6042  000228  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  6043  00022A  B0D8               	btfsc	status,0,c
  6044  00022C  D008               	goto	l490
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;graphic.c: 112: {
  6048                           ;graphic.c: 113: CurrentX += Xinc;
  6049  00022E  5183               	movf	GLCD_Line@Xinc& (0+255),w,b
  6050  000230  278B               	addwf	GLCD_Line@CurrentX& (0+255),f,b
  6051  000232  5184               	movf	(GLCD_Line@Xinc+1)& (0+255),w,b
  6052  000234  238C               	addwfc	(GLCD_Line@CurrentX+1)& (0+255),f,b
  6053                           
  6054                           ;graphic.c: 114: TwoDyAccumulatedError -= TwoDy;
  6055  000236  5189               	movf	GLCD_Line@TwoDy& (0+255),w,b
  6056  000238  5F81               	subwf	GLCD_Line@TwoDyAccumulatedError& (0+255),f,b
  6057  00023A  518A               	movf	(GLCD_Line@TwoDy+1)& (0+255),w,b
  6058  00023C  5B82               	subwfb	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),f,b
  6059  00023E                     l490:
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;graphic.c: 115: }
  6063                           ;graphic.c: 116: GLCD_SetPixel(CurrentX,CurrentY, color);
  6064                           
  6065                           ; BSR set to: 0
  6066  00023E  C08D  F06E         	movff	GLCD_Line@CurrentY,GLCD_SetPixel@y
  6067  000242  0E65               	movlw	low _color
  6068  000244  6EF6               	movwf	tblptrl,c
  6069  000246                     	if	1	;There is more than 1 active tblptr byte
  6070  000246  0EFF               	movlw	high _color
  6071  000248  6EF7               	movwf	tblptrh,c
  6072  00024A                     	endif
  6073  00024A                     	if	1	;There are 3 active tblptr bytes
  6074  00024A  0E00               	movlw	low (_color shr (0+16))
  6075  00024C  6EF8               	movwf	tblptru,c
  6076  00024E                     	endif
  6077  00024E  0008               	tblrd		*
  6078  000250  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  6079  000254  518B               	movf	GLCD_Line@CurrentX& (0+255),w,b
  6080  000256  EC03  F009         	call	_GLCD_SetPixel
  6081                           
  6082                           ;graphic.c: 117: }while (CurrentY != Y2);
  6083  00025A  0100               	movlb	0	; () banked
  6084  00025C  517B               	movf	GLCD_Line@Y2& (0+255),w,b
  6085  00025E  198D               	xorwf	GLCD_Line@CurrentY& (0+255),w,b
  6086  000260  E1D4               	bnz	l4224
  6087  000262  517C               	movf	(GLCD_Line@Y2+1)& (0+255),w,b
  6088  000264  198E               	xorwf	(GLCD_Line@CurrentY+1)& (0+255),w,b
  6089  000266  B4D8               	btfsc	status,2,c
  6090  000268  0012               	return	
  6091  00026A  D7CF               	goto	l489
  6092  00026C                     __end_of_GLCD_Line:
  6093                           	opt stack 0
  6094                           tblptru	equ	0xFF8
  6095                           tblptrh	equ	0xFF7
  6096                           tblptrl	equ	0xFF6
  6097                           tablat	equ	0xFF5
  6098                           prodh	equ	0xFF4
  6099                           prodl	equ	0xFF3
  6100                           intcon	equ	0xFF2
  6101                           indf0	equ	0xFEF
  6102                           postinc0	equ	0xFEE
  6103                           fsr0h	equ	0xFEA
  6104                           fsr0l	equ	0xFE9
  6105                           wreg	equ	0xFE8
  6106                           postdec1	equ	0xFE5
  6107                           fsr1l	equ	0xFE1
  6108                           indf2	equ	0xFDF
  6109                           fsr2h	equ	0xFDA
  6110                           fsr2l	equ	0xFD9
  6111                           status	equ	0xFD8
  6112                           
  6113 ;; *************** function _GLCD_SetPixel *****************
  6114 ;; Defined at:
  6115 ;;		line 78 in file "ks0108lib/KS0108.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  x               1    wreg     unsigned char 
  6118 ;;  y               1   14[BANK0 ] unsigned char 
  6119 ;;  color           1   15[BANK0 ] unsigned char 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  x               1   19[BANK0 ] unsigned char 
  6122 ;;  tmp             1   18[BANK0 ] unsigned char 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		wreg, status,2, status,0, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6132 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6133 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6134 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6135 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6136 ;;Total ram usage:        7 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:   13
  6139 ;; This function calls:
  6140 ;;		_GLCD_GoTo
  6141 ;;		_GLCD_ReadData
  6142 ;;		_GLCD_WriteData
  6143 ;;		___awdiv
  6144 ;; This function is called by:
  6145 ;;		_GLCD_Line
  6146 ;;		_GLCD_Rectangle
  6147 ;;		_GLCD_Circle
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text33
  6152  001206                     __ptext33:
  6153                           	opt stack 0
  6154  001206                     _GLCD_SetPixel:
  6155                           	opt stack 15
  6156                           
  6157                           ; BSR set to: 0
  6158                           ;incstack = 0
  6159                           ;GLCD_SetPixel@x stored from wreg
  6160  001206  0100               	movlb	0	; () banked
  6161  001208  6F73               	movwf	GLCD_SetPixel@x& (0+255),b
  6162                           
  6163                           ;KS0108.c: 80: unsigned char tmp;
  6164                           ;KS0108.c: 81: GLCD_GoTo(x, (y / 8));
  6165  00120A  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  6166  00120E  0100               	movlb	0	; () banked
  6167  001210  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  6168  001212  0E00               	movlw	0
  6169  001214  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6170  001216  0E08               	movlw	8
  6171  001218  6F62               	movwf	___awdiv@divisor& (0+255),b
  6172  00121A  ECC7  F00A         	call	___awdiv	;wreg free
  6173  00121E  0100               	movlb	0	; () banked
  6174  001220  5160               	movf	?___awdiv& (0+255),w,b
  6175  001222  6F74               	movwf	_GLCD_SetPixel$1810& (0+255),b
  6176                           
  6177                           ;KS0108.c: 80: unsigned char tmp;
  6178                           ;KS0108.c: 81: GLCD_GoTo(x, (y / 8));
  6179  001224  C074  F06B         	movff	_GLCD_SetPixel$1810,GLCD_GoTo@y
  6180  001228  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  6181  00122A  EC3F  F00A         	call	_GLCD_GoTo
  6182                           
  6183                           ;KS0108.c: 82: tmp = GLCD_ReadData();
  6184  00122E  EC42  F00C         	call	_GLCD_ReadData	;wreg free
  6185  001232  0100               	movlb	0	; () banked
  6186  001234  6F72               	movwf	GLCD_SetPixel@tmp& (0+255),b
  6187                           
  6188                           ;KS0108.c: 83: GLCD_GoTo(x, (y / 8));
  6189  001236  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  6190  00123A  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  6191  00123C  0E00               	movlw	0
  6192  00123E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6193  001240  0E08               	movlw	8
  6194  001242  6F62               	movwf	___awdiv@divisor& (0+255),b
  6195  001244  ECC7  F00A         	call	___awdiv	;wreg free
  6196  001248  0100               	movlb	0	; () banked
  6197  00124A  5160               	movf	?___awdiv& (0+255),w,b
  6198  00124C  6F74               	movwf	_GLCD_SetPixel$1810& (0+255),b
  6199                           
  6200                           ;KS0108.c: 83: GLCD_GoTo(x, (y / 8));
  6201  00124E  C074  F06B         	movff	_GLCD_SetPixel$1810,GLCD_GoTo@y
  6202  001252  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  6203  001254  EC3F  F00A         	call	_GLCD_GoTo
  6204                           
  6205                           ;KS0108.c: 84: tmp = GLCD_ReadData();
  6206  001258  EC42  F00C         	call	_GLCD_ReadData	;wreg free
  6207  00125C  0100               	movlb	0	; () banked
  6208  00125E  6F72               	movwf	GLCD_SetPixel@tmp& (0+255),b
  6209                           
  6210                           ;KS0108.c: 85: GLCD_GoTo(x, (y / 8));
  6211  001260  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  6212  001264  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  6213  001266  0E00               	movlw	0
  6214  001268  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6215  00126A  0E08               	movlw	8
  6216  00126C  6F62               	movwf	___awdiv@divisor& (0+255),b
  6217  00126E  ECC7  F00A         	call	___awdiv	;wreg free
  6218  001272  0100               	movlb	0	; () banked
  6219  001274  5160               	movf	?___awdiv& (0+255),w,b
  6220  001276  6F74               	movwf	_GLCD_SetPixel$1810& (0+255),b
  6221                           
  6222                           ;KS0108.c: 85: GLCD_GoTo(x, (y / 8));
  6223  001278  C074  F06B         	movff	_GLCD_SetPixel$1810,GLCD_GoTo@y
  6224  00127C  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  6225  00127E  EC3F  F00A         	call	_GLCD_GoTo
  6226                           
  6227                           ;KS0108.c: 86: tmp |= (1 << (y % 8));
  6228  001282  C06E  F070         	movff	GLCD_SetPixel@y,??_GLCD_SetPixel
  6229  001286  0E07               	movlw	7
  6230  001288  0100               	movlb	0	; () banked
  6231  00128A  1770               	andwf	??_GLCD_SetPixel& (0+255),f,b
  6232  00128C  0E01               	movlw	1
  6233  00128E  6F71               	movwf	(??_GLCD_SetPixel+1)& (0+255),b
  6234  001290  2B70               	incf	??_GLCD_SetPixel& (0+255),f,b
  6235  001292  D002               	goto	u2604
  6236  001294                     u2605:
  6237  001294  90D8               	bcf	status,0,c
  6238  001296  3771               	rlcf	(??_GLCD_SetPixel+1)& (0+255),f,b
  6239  001298                     u2604:
  6240  001298  2F70               	decfsz	??_GLCD_SetPixel& (0+255),f,b
  6241  00129A  D7FC               	goto	u2605
  6242  00129C  0100               	movlb	0	; () banked
  6243  00129E  5171               	movf	(??_GLCD_SetPixel+1)& (0+255),w,b
  6244  0012A0  1372               	iorwf	GLCD_SetPixel@tmp& (0+255),f,b
  6245                           
  6246                           ; BSR set to: 0
  6247                           ;KS0108.c: 87: GLCD_WriteData(tmp);
  6248  0012A2  5172               	movf	GLCD_SetPixel@tmp& (0+255),w,b
  6249  0012A4  EC06  F00C         	call	_GLCD_WriteData
  6250  0012A8  0012               	return		;funcret
  6251  0012AA                     __end_of_GLCD_SetPixel:
  6252                           	opt stack 0
  6253                           tblptru	equ	0xFF8
  6254                           tblptrh	equ	0xFF7
  6255                           tblptrl	equ	0xFF6
  6256                           tablat	equ	0xFF5
  6257                           prodh	equ	0xFF4
  6258                           prodl	equ	0xFF3
  6259                           intcon	equ	0xFF2
  6260                           indf0	equ	0xFEF
  6261                           postinc0	equ	0xFEE
  6262                           fsr0h	equ	0xFEA
  6263                           fsr0l	equ	0xFE9
  6264                           wreg	equ	0xFE8
  6265                           postdec1	equ	0xFE5
  6266                           fsr1l	equ	0xFE1
  6267                           indf2	equ	0xFDF
  6268                           fsr2h	equ	0xFDA
  6269                           fsr2l	equ	0xFD9
  6270                           status	equ	0xFD8
  6271                           
  6272 ;; *************** function _GLCD_ReadData *****************
  6273 ;; Defined at:
  6274 ;;		line 94 in file "ks0108lib/KS0108-PIC18.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;		None
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  data            1    9[BANK0 ] unsigned char 
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      unsigned char 
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0, cstack
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6289 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6290 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6291 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6292 ;;Total ram usage:        2 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:   11
  6295 ;; This function calls:
  6296 ;;		_GLCD_Delay
  6297 ;;		_GLCD_DisableController
  6298 ;;		_GLCD_EnableController
  6299 ;;		_GLCD_ReadStatus
  6300 ;;		___awdiv
  6301 ;; This function is called by:
  6302 ;;		_GLCD_SetPixel
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text34
  6307  001884                     __ptext34:
  6308                           	opt stack 0
  6309  001884                     _GLCD_ReadData:
  6310                           	opt stack 16
  6311                           
  6312                           ;KS0108-PIC18.c: 96: unsigned char data;
  6313                           ;KS0108-PIC18.c: 97: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  6314                           
  6315                           ;incstack = 0
  6316  001884  C0A4  F060         	movff	_screen_x,___awdiv@dividend
  6317  001888  0100               	movlb	0	; () banked
  6318  00188A  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  6319  00188C  0E00               	movlw	0
  6320  00188E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6321  001890  0E40               	movlw	64
  6322  001892  6F62               	movwf	___awdiv@divisor& (0+255),b
  6323  001894  ECC7  F00A         	call	___awdiv	;wreg free
  6324  001898  0100               	movlb	0	; () banked
  6325  00189A  5160               	movf	?___awdiv& (0+255),w,b
  6326  00189C  EC87  F011         	call	_GLCD_ReadStatus
  6327  0018A0  0100               	movlb	0	; () banked
  6328  0018A2  6F68               	movwf	??_GLCD_ReadData& (0+255),b
  6329  0018A4  BF68               	btfsc	??_GLCD_ReadData& (0+255),7,b
  6330  0018A6  D7EE               	goto	_GLCD_ReadData
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;KS0108-PIC18.c: 98: TRISD = 0xFF;
  6334  0018A8  6895               	setf	3989,c	;volatile
  6335                           
  6336                           ; BSR set to: 0
  6337                           ;KS0108-PIC18.c: 99: PORTA |= ((1 << 1) | (1 << 2));
  6338  0018AA  0E06               	movlw	6
  6339  0018AC  1280               	iorwf	3968,f,c	;volatile
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;KS0108-PIC18.c: 100: GLCD_EnableController(screen_x / 64);
  6343  0018AE  C0A4  F060         	movff	_screen_x,___awdiv@dividend
  6344  0018B2  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  6345  0018B4  0E00               	movlw	0
  6346  0018B6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6347  0018B8  0E40               	movlw	64
  6348  0018BA  6F62               	movwf	___awdiv@divisor& (0+255),b
  6349  0018BC  ECC7  F00A         	call	___awdiv	;wreg free
  6350  0018C0  0100               	movlb	0	; () banked
  6351  0018C2  5160               	movf	?___awdiv& (0+255),w,b
  6352  0018C4  EC9D  F011         	call	_GLCD_EnableController
  6353                           
  6354                           ;KS0108-PIC18.c: 102: PORTA |= (1 << 3);
  6355  0018C8  8680               	bsf	3968,3,c	;volatile
  6356                           
  6357                           ;KS0108-PIC18.c: 103: GLCD_Delay();
  6358  0018CA  EC9F  F012         	call	_GLCD_Delay	;wreg free
  6359                           
  6360                           ;KS0108-PIC18.c: 104: data = PORTD;
  6361  0018CE  CF83 F069          	movff	3971,GLCD_ReadData@data	;volatile
  6362                           
  6363                           ;KS0108-PIC18.c: 105: PORTA &= ~(1 << 3);
  6364  0018D2  9680               	bcf	3968,3,c	;volatile
  6365                           
  6366                           ;KS0108-PIC18.c: 106: GLCD_DisableController(screen_x / 64);
  6367  0018D4  C0A4  F060         	movff	_screen_x,___awdiv@dividend
  6368  0018D8  0100               	movlb	0	; () banked
  6369  0018DA  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  6370  0018DC  0E00               	movlw	0
  6371  0018DE  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6372  0018E0  0E40               	movlw	64
  6373  0018E2  6F62               	movwf	___awdiv@divisor& (0+255),b
  6374  0018E4  ECC7  F00A         	call	___awdiv	;wreg free
  6375  0018E8  0100               	movlb	0	; () banked
  6376  0018EA  5160               	movf	?___awdiv& (0+255),w,b
  6377  0018EC  ECB2  F011         	call	_GLCD_DisableController
  6378                           
  6379                           ;KS0108-PIC18.c: 107: screen_x++;
  6380  0018F0  0100               	movlb	0	; () banked
  6381  0018F2  2BA4               	incf	_screen_x& (0+255),f,b
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;KS0108-PIC18.c: 108: return data;
  6385  0018F4  5169               	movf	GLCD_ReadData@data& (0+255),w,b
  6386  0018F6  0012               	return	
  6387  0018F8                     __end_of_GLCD_ReadData:
  6388                           	opt stack 0
  6389                           tblptru	equ	0xFF8
  6390                           tblptrh	equ	0xFF7
  6391                           tblptrl	equ	0xFF6
  6392                           tablat	equ	0xFF5
  6393                           prodh	equ	0xFF4
  6394                           prodl	equ	0xFF3
  6395                           intcon	equ	0xFF2
  6396                           indf0	equ	0xFEF
  6397                           postinc0	equ	0xFEE
  6398                           fsr0h	equ	0xFEA
  6399                           fsr0l	equ	0xFE9
  6400                           wreg	equ	0xFE8
  6401                           postdec1	equ	0xFE5
  6402                           fsr1l	equ	0xFE1
  6403                           indf2	equ	0xFDF
  6404                           fsr2h	equ	0xFDA
  6405                           fsr2l	equ	0xFD9
  6406                           status	equ	0xFD8
  6407                           
  6408 ;; *************** function _GLCD_ClearScreen *****************
  6409 ;; Defined at:
  6410 ;;		line 43 in file "ks0108lib/KS0108.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;		None
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;  j               1   15[BANK0 ] unsigned char 
  6415 ;;  i               1   14[BANK0 ] unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      void 
  6418 ;; Registers used:
  6419 ;;		wreg, status,2, status,0, cstack
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6426 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6428 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6429 ;;Total ram usage:        2 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:   13
  6432 ;; This function calls:
  6433 ;;		_GLCD_GoTo
  6434 ;;		_GLCD_WriteData
  6435 ;; This function is called by:
  6436 ;;		_main
  6437 ;;		_Initialize_Menus
  6438 ;;		_Draw_runTime_Menu
  6439 ;;		_Draw_Brightness_Menu
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           	psect	text35
  6444  002244                     __ptext35:
  6445                           	opt stack 0
  6446  002244                     _GLCD_ClearScreen:
  6447                           	opt stack 16
  6448                           
  6449                           ;KS0108.c: 45: unsigned char i, j;
  6450                           ;KS0108.c: 46: for(j = 0; j < 64/8; j++)
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;incstack = 0
  6454  002244  0E00               	movlw	0
  6455  002246  0100               	movlb	0	; () banked
  6456  002248  6F6F               	movwf	GLCD_ClearScreen@j& (0+255),b
  6457  00224A                     l4158:
  6458                           
  6459                           ; BSR set to: 0
  6460  00224A  0E07               	movlw	7
  6461  00224C  656F               	cpfsgt	GLCD_ClearScreen@j& (0+255),b
  6462  00224E  D001               	goto	l521
  6463  002250  0012               	return	
  6464  002252                     l521:
  6465                           
  6466                           ; BSR set to: 0
  6467                           ;KS0108.c: 47: {
  6468                           ;KS0108.c: 48: GLCD_GoTo(0,j);
  6469                           
  6470                           ; BSR set to: 0
  6471  002252  C06F  F06B         	movff	GLCD_ClearScreen@j,GLCD_GoTo@y
  6472  002256  0E00               	movlw	0
  6473  002258  EC3F  F00A         	call	_GLCD_GoTo
  6474                           
  6475                           ;KS0108.c: 49: for(i = 0; i < 128; i++)
  6476  00225C  0E00               	movlw	0
  6477  00225E  0100               	movlb	0	; () banked
  6478  002260  6F6E               	movwf	GLCD_ClearScreen@i& (0+255),b
  6479  002262                     l4166:
  6480                           
  6481                           ; BSR set to: 0
  6482  002262  0E7F               	movlw	127
  6483  002264  656E               	cpfsgt	GLCD_ClearScreen@i& (0+255),b
  6484  002266  D001               	goto	l523
  6485  002268  D006               	goto	u3060
  6486  00226A                     l523:
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;KS0108.c: 50: GLCD_WriteData(0x00);
  6490                           
  6491                           ; BSR set to: 0
  6492  00226A  0E00               	movlw	0
  6493  00226C  EC06  F00C         	call	_GLCD_WriteData
  6494  002270  0100               	movlb	0	; () banked
  6495  002272  2B6E               	incf	GLCD_ClearScreen@i& (0+255),f,b
  6496  002274  D7F6               	goto	l4166
  6497  002276                     u3060:
  6498                           
  6499                           ; BSR set to: 0
  6500                           
  6501                           ; BSR set to: 0
  6502  002276  2B6F               	incf	GLCD_ClearScreen@j& (0+255),f,b
  6503  002278  D7E8               	goto	l4158
  6504  00227A                     __end_of_GLCD_ClearScreen:
  6505                           	opt stack 0
  6506                           tblptru	equ	0xFF8
  6507                           tblptrh	equ	0xFF7
  6508                           tblptrl	equ	0xFF6
  6509                           tablat	equ	0xFF5
  6510                           prodh	equ	0xFF4
  6511                           prodl	equ	0xFF3
  6512                           intcon	equ	0xFF2
  6513                           indf0	equ	0xFEF
  6514                           postinc0	equ	0xFEE
  6515                           fsr0h	equ	0xFEA
  6516                           fsr0l	equ	0xFE9
  6517                           wreg	equ	0xFE8
  6518                           postdec1	equ	0xFE5
  6519                           fsr1l	equ	0xFE1
  6520                           indf2	equ	0xFDF
  6521                           fsr2h	equ	0xFDA
  6522                           fsr2l	equ	0xFD9
  6523                           status	equ	0xFD8
  6524                           
  6525 ;; *************** function _Draw_Arrow *****************
  6526 ;; Defined at:
  6527 ;;		line 51 in file "screen_controls.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;		None
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;		None
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      void 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0, cstack
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6545 ;;Total ram usage:        0 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; Hardware stack levels required when called:   14
  6548 ;; This function calls:
  6549 ;;		_Clear_Arrow_Column
  6550 ;;		_Clear_Brightness_Arrows
  6551 ;;		_Clear_runTime_Arrows
  6552 ;;		_Draw_Brightness_Arrow
  6553 ;;		_Draw_runTime_Arrow
  6554 ;;		_GLCD_GoTo
  6555 ;;		_Make_Arrow
  6556 ;; This function is called by:
  6557 ;;		_main
  6558 ;;		_Check_Buttons
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text36
  6563  001D08                     __ptext36:
  6564                           	opt stack 0
  6565  001D08                     _Draw_Arrow:
  6566                           	opt stack 16
  6567                           
  6568                           ;screen_controls.c: 55: switch(currentContext)
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;incstack = 0
  6572  001D08  D01E               	goto	l668
  6573  001D0A                     
  6574                           ;screen_controls.c: 58: Clear_Arrow_Column();
  6575  001D0A  EC21  F00D         	call	_Clear_Arrow_Column	;wreg free
  6576                           
  6577                           ;screen_controls.c: 59: GLCD_GoTo(0, mainState);
  6578  001D0E  C052  F06B         	movff	_mainState,GLCD_GoTo@y
  6579  001D12  0E00               	movlw	0
  6580  001D14  EC3F  F00A         	call	_GLCD_GoTo
  6581                           
  6582                           ;screen_controls.c: 60: Make_Arrow();
  6583  001D18  EC51  F012         	call	_Make_Arrow	;wreg free
  6584                           
  6585                           ;screen_controls.c: 61: break;
  6586  001D1C  0012               	return	
  6587  001D1E                     
  6588                           ;screen_controls.c: 64: Clear_runTime_Arrows();
  6589  001D1E  EC4C  F00B         	call	_Clear_runTime_Arrows	;wreg free
  6590                           
  6591                           ;screen_controls.c: 65: Draw_runTime_Arrow();
  6592  001D22  EC7C  F00C         	call	_Draw_runTime_Arrow	;wreg free
  6593                           
  6594                           ;screen_controls.c: 66: break;
  6595  001D26  0012               	return	
  6596  001D28                     
  6597                           ;screen_controls.c: 69: Clear_Brightness_Arrows();
  6598  001D28  EC03  F00E         	call	_Clear_Brightness_Arrows	;wreg free
  6599                           
  6600                           ;screen_controls.c: 70: Draw_Brightness_Arrow();
  6601  001D2C  ECAE  F00E         	call	_Draw_Brightness_Arrow	;wreg free
  6602                           
  6603                           ;screen_controls.c: 71: break;
  6604  001D30  0012               	return	
  6605  001D32                     
  6606                           ;screen_controls.c: 74: Clear_Arrow_Column();
  6607  001D32  EC21  F00D         	call	_Clear_Arrow_Column	;wreg free
  6608                           
  6609                           ;screen_controls.c: 75: GLCD_GoTo(0, mainState);
  6610  001D36  C052  F06B         	movff	_mainState,GLCD_GoTo@y
  6611  001D3A  0E00               	movlw	0
  6612  001D3C  EC3F  F00A         	call	_GLCD_GoTo
  6613                           
  6614                           ;screen_controls.c: 76: Make_Arrow();
  6615  001D40  EC51  F012         	call	_Make_Arrow	;wreg free
  6616                           
  6617                           ;screen_controls.c: 78: }
  6618                           
  6619                           ;screen_controls.c: 77: break;
  6620  001D44  0012               	return	
  6621  001D46                     l668:
  6622  001D46  5051               	movf	_currentContext,w,c
  6623                           
  6624                           ; Switch size 1, requested type "space"
  6625                           ; Number of cases is 3, Range of values is 0 to 2
  6626                           ; switch strategies available:
  6627                           ; Name         Instructions Cycles
  6628                           ; simple_byte           10     6 (average)
  6629                           ;	Chosen strategy is simple_byte
  6630  001D48  0A00               	xorlw	0	; case 0
  6631  001D4A  B4D8               	btfsc	status,2,c
  6632  001D4C  D7DE               	goto	l669
  6633  001D4E  0A01               	xorlw	1	; case 1
  6634  001D50  B4D8               	btfsc	status,2,c
  6635  001D52  D7E5               	goto	l671
  6636  001D54  0A03               	xorlw	3	; case 2
  6637  001D56  B4D8               	btfsc	status,2,c
  6638  001D58  D7E7               	goto	l672
  6639  001D5A  D7EB               	goto	l673
  6640  001D5C                     __end_of_Draw_Arrow:
  6641                           	opt stack 0
  6642                           tblptru	equ	0xFF8
  6643                           tblptrh	equ	0xFF7
  6644                           tblptrl	equ	0xFF6
  6645                           tablat	equ	0xFF5
  6646                           prodh	equ	0xFF4
  6647                           prodl	equ	0xFF3
  6648                           intcon	equ	0xFF2
  6649                           indf0	equ	0xFEF
  6650                           postinc0	equ	0xFEE
  6651                           fsr0h	equ	0xFEA
  6652                           fsr0l	equ	0xFE9
  6653                           wreg	equ	0xFE8
  6654                           postdec1	equ	0xFE5
  6655                           fsr1l	equ	0xFE1
  6656                           indf2	equ	0xFDF
  6657                           fsr2h	equ	0xFDA
  6658                           fsr2l	equ	0xFD9
  6659                           status	equ	0xFD8
  6660                           
  6661 ;; *************** function _Draw_runTime_Arrow *****************
  6662 ;; Defined at:
  6663 ;;		line 197 in file "screen_controls.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;		None
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      void 
  6670 ;; Registers used:
  6671 ;;		wreg, status,2, status,0, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6681 ;;Total ram usage:        0 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:   13
  6684 ;; This function calls:
  6685 ;;		_GLCD_GoTo
  6686 ;;		_Make_Arrow
  6687 ;; This function is called by:
  6688 ;;		_Draw_Arrow
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text37
  6693  0018F8                     __ptext37:
  6694                           	opt stack 0
  6695  0018F8                     _Draw_runTime_Arrow:
  6696                           	opt stack 16
  6697                           
  6698                           ;screen_controls.c: 199: switch(runTimeContext)
  6699                           
  6700                           ;incstack = 0
  6701  0018F8  D02C               	goto	l709
  6702  0018FA                     
  6703                           ;screen_controls.c: 202: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  6704  0018FA  0E02               	movlw	2
  6705  0018FC  0100               	movlb	0	; () banked
  6706  0018FE  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  6707  001900  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  6708  001902  0800               	sublw	0
  6709  001904  25A8               	addwf	_runTimeX& (0+255),w,b
  6710  001906  EC3F  F00A         	call	_GLCD_GoTo
  6711                           
  6712                           ;screen_controls.c: 203: Make_Arrow();
  6713  00190A  EC51  F012         	call	_Make_Arrow	;wreg free
  6714                           
  6715                           ;screen_controls.c: 204: break;
  6716  00190E  0012               	return	
  6717  001910                     
  6718                           ;screen_controls.c: 207: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  6719  001910  0E04               	movlw	4
  6720  001912  0100               	movlb	0	; () banked
  6721  001914  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  6722  001916  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  6723  001918  0800               	sublw	0
  6724  00191A  25A8               	addwf	_runTimeX& (0+255),w,b
  6725  00191C  EC3F  F00A         	call	_GLCD_GoTo
  6726                           
  6727                           ;screen_controls.c: 208: Make_Arrow();
  6728  001920  EC51  F012         	call	_Make_Arrow	;wreg free
  6729                           
  6730                           ;screen_controls.c: 209: break;
  6731  001924  0012               	return	
  6732  001926                     
  6733                           ;screen_controls.c: 212: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  6734  001926  0E06               	movlw	6
  6735  001928  0100               	movlb	0	; () banked
  6736  00192A  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  6737  00192C  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  6738  00192E  0800               	sublw	0
  6739  001930  25A8               	addwf	_runTimeX& (0+255),w,b
  6740  001932  EC3F  F00A         	call	_GLCD_GoTo
  6741                           
  6742                           ;screen_controls.c: 213: Make_Arrow();
  6743  001936  EC51  F012         	call	_Make_Arrow	;wreg free
  6744                           
  6745                           ;screen_controls.c: 215: break;
  6746                           
  6747                           ;screen_controls.c: 214: break;
  6748  00193A  0012               	return	
  6749  00193C                     
  6750                           ;screen_controls.c: 218: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  6751  00193C  0E02               	movlw	2
  6752  00193E  0100               	movlb	0	; () banked
  6753  001940  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  6754  001942  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  6755  001944  0800               	sublw	0
  6756  001946  25A8               	addwf	_runTimeX& (0+255),w,b
  6757  001948  EC3F  F00A         	call	_GLCD_GoTo
  6758                           
  6759                           ;screen_controls.c: 219: Make_Arrow();
  6760  00194C  EC51  F012         	call	_Make_Arrow	;wreg free
  6761                           
  6762                           ;screen_controls.c: 223: }
  6763                           
  6764                           ;screen_controls.c: 220: break;
  6765  001950  0012               	return	
  6766  001952                     l709:
  6767  001952  5050               	movf	_runTimeContext,w,c
  6768                           
  6769                           ; Switch size 1, requested type "space"
  6770                           ; Number of cases is 3, Range of values is 0 to 2
  6771                           ; switch strategies available:
  6772                           ; Name         Instructions Cycles
  6773                           ; simple_byte           10     6 (average)
  6774                           ;	Chosen strategy is simple_byte
  6775  001954  0A00               	xorlw	0	; case 0
  6776  001956  B4D8               	btfsc	status,2,c
  6777  001958  D7D0               	goto	l710
  6778  00195A  0A01               	xorlw	1	; case 1
  6779  00195C  B4D8               	btfsc	status,2,c
  6780  00195E  D7D8               	goto	l712
  6781  001960  0A03               	xorlw	3	; case 2
  6782  001962  B4D8               	btfsc	status,2,c
  6783  001964  D7E0               	goto	l713
  6784  001966  D7EA               	goto	l714
  6785  001968                     __end_of_Draw_runTime_Arrow:
  6786                           	opt stack 0
  6787                           tblptru	equ	0xFF8
  6788                           tblptrh	equ	0xFF7
  6789                           tblptrl	equ	0xFF6
  6790                           tablat	equ	0xFF5
  6791                           prodh	equ	0xFF4
  6792                           prodl	equ	0xFF3
  6793                           intcon	equ	0xFF2
  6794                           indf0	equ	0xFEF
  6795                           postinc0	equ	0xFEE
  6796                           fsr0h	equ	0xFEA
  6797                           fsr0l	equ	0xFE9
  6798                           wreg	equ	0xFE8
  6799                           postdec1	equ	0xFE5
  6800                           fsr1l	equ	0xFE1
  6801                           indf2	equ	0xFDF
  6802                           fsr2h	equ	0xFDA
  6803                           fsr2l	equ	0xFD9
  6804                           status	equ	0xFD8
  6805                           
  6806 ;; *************** function _Draw_Brightness_Arrow *****************
  6807 ;; Defined at:
  6808 ;;		line 246 in file "screen_controls.c"
  6809 ;; Parameters:    Size  Location     Type
  6810 ;;		None
  6811 ;; Auto vars:     Size  Location     Type
  6812 ;;		None
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  1    wreg      void 
  6815 ;; Registers used:
  6816 ;;		wreg, status,2, status,0, cstack
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6826 ;;Total ram usage:        0 bytes
  6827 ;; Hardware stack levels used:    1
  6828 ;; Hardware stack levels required when called:   13
  6829 ;; This function calls:
  6830 ;;		_GLCD_GoTo
  6831 ;;		_Make_Arrow
  6832 ;; This function is called by:
  6833 ;;		_Draw_Arrow
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text38
  6838  001D5C                     __ptext38:
  6839                           	opt stack 0
  6840  001D5C                     _Draw_Brightness_Arrow:
  6841                           	opt stack 16
  6842                           
  6843                           ;screen_controls.c: 248: switch(brightnessContext)
  6844                           
  6845                           ;incstack = 0
  6846  001D5C  D021               	goto	l727
  6847  001D5E                     
  6848                           ;screen_controls.c: 251: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  6849  001D5E  0E02               	movlw	2
  6850  001D60  0100               	movlb	0	; () banked
  6851  001D62  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  6852  001D64  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  6853  001D66  0800               	sublw	0
  6854  001D68  25A8               	addwf	_runTimeX& (0+255),w,b
  6855  001D6A  EC3F  F00A         	call	_GLCD_GoTo
  6856                           
  6857                           ;screen_controls.c: 252: Make_Arrow();
  6858  001D6E  EC51  F012         	call	_Make_Arrow	;wreg free
  6859                           
  6860                           ;screen_controls.c: 253: break;
  6861  001D72  0012               	return	
  6862  001D74                     
  6863                           ;screen_controls.c: 256: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  6864  001D74  0E06               	movlw	6
  6865  001D76  0100               	movlb	0	; () banked
  6866  001D78  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  6867  001D7A  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  6868  001D7C  0800               	sublw	0
  6869  001D7E  25A8               	addwf	_runTimeX& (0+255),w,b
  6870  001D80  EC3F  F00A         	call	_GLCD_GoTo
  6871                           
  6872                           ;screen_controls.c: 257: Make_Arrow();
  6873  001D84  EC51  F012         	call	_Make_Arrow	;wreg free
  6874                           
  6875                           ;screen_controls.c: 259: break;
  6876                           
  6877                           ;screen_controls.c: 258: break;
  6878  001D88  0012               	return	
  6879  001D8A                     
  6880                           ;screen_controls.c: 262: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  6881  001D8A  0E02               	movlw	2
  6882  001D8C  0100               	movlb	0	; () banked
  6883  001D8E  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  6884  001D90  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  6885  001D92  0800               	sublw	0
  6886  001D94  25A8               	addwf	_runTimeX& (0+255),w,b
  6887  001D96  EC3F  F00A         	call	_GLCD_GoTo
  6888                           
  6889                           ;screen_controls.c: 263: Make_Arrow();
  6890  001D9A  EC51  F012         	call	_Make_Arrow	;wreg free
  6891                           
  6892                           ;screen_controls.c: 267: }
  6893                           
  6894                           ;screen_controls.c: 264: break;
  6895  001D9E  0012               	return	
  6896  001DA0                     l727:
  6897  001DA0  504F               	movf	_brightnessContext,w,c
  6898                           
  6899                           ; Switch size 1, requested type "space"
  6900                           ; Number of cases is 2, Range of values is 0 to 1
  6901                           ; switch strategies available:
  6902                           ; Name         Instructions Cycles
  6903                           ; simple_byte            7     4 (average)
  6904                           ;	Chosen strategy is simple_byte
  6905  001DA2  0A00               	xorlw	0	; case 0
  6906  001DA4  B4D8               	btfsc	status,2,c
  6907  001DA6  D7DB               	goto	l728
  6908  001DA8  0A01               	xorlw	1	; case 1
  6909  001DAA  B4D8               	btfsc	status,2,c
  6910  001DAC  D7E3               	goto	l730
  6911  001DAE  D7ED               	goto	l731
  6912  001DB0                     __end_of_Draw_Brightness_Arrow:
  6913                           	opt stack 0
  6914                           tblptru	equ	0xFF8
  6915                           tblptrh	equ	0xFF7
  6916                           tblptrl	equ	0xFF6
  6917                           tablat	equ	0xFF5
  6918                           prodh	equ	0xFF4
  6919                           prodl	equ	0xFF3
  6920                           intcon	equ	0xFF2
  6921                           indf0	equ	0xFEF
  6922                           postinc0	equ	0xFEE
  6923                           fsr0h	equ	0xFEA
  6924                           fsr0l	equ	0xFE9
  6925                           wreg	equ	0xFE8
  6926                           postdec1	equ	0xFE5
  6927                           fsr1l	equ	0xFE1
  6928                           indf2	equ	0xFDF
  6929                           fsr2h	equ	0xFDA
  6930                           fsr2l	equ	0xFD9
  6931                           status	equ	0xFD8
  6932                           
  6933 ;; *************** function _Make_Arrow *****************
  6934 ;; Defined at:
  6935 ;;		line 83 in file "screen_controls.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;		None
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;		None
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  1    wreg      void 
  6942 ;; Registers used:
  6943 ;;		wreg, status,2, status,0, cstack
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6953 ;;Total ram usage:        0 bytes
  6954 ;; Hardware stack levels used:    1
  6955 ;; Hardware stack levels required when called:   12
  6956 ;; This function calls:
  6957 ;;		_GLCD_WriteData
  6958 ;; This function is called by:
  6959 ;;		_Draw_Arrow
  6960 ;;		_Draw_runTime_Arrow
  6961 ;;		_Draw_Brightness_Arrow
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text39
  6966  0024A2                     __ptext39:
  6967                           	opt stack 0
  6968  0024A2                     _Make_Arrow:
  6969                           	opt stack 17
  6970                           
  6971                           ;screen_controls.c: 85: GLCD_WriteData(0x7E);
  6972                           
  6973                           ;incstack = 0
  6974  0024A2  0E7E               	movlw	126
  6975  0024A4  EC06  F00C         	call	_GLCD_WriteData
  6976                           
  6977                           ;screen_controls.c: 86: GLCD_WriteData(0x3C);
  6978  0024A8  0E3C               	movlw	60
  6979  0024AA  EC06  F00C         	call	_GLCD_WriteData
  6980                           
  6981                           ;screen_controls.c: 87: GLCD_WriteData(0x18);
  6982  0024AE  0E18               	movlw	24
  6983  0024B0  EC06  F00C         	call	_GLCD_WriteData
  6984  0024B4  0012               	return		;funcret
  6985  0024B6                     __end_of_Make_Arrow:
  6986                           	opt stack 0
  6987                           tblptru	equ	0xFF8
  6988                           tblptrh	equ	0xFF7
  6989                           tblptrl	equ	0xFF6
  6990                           tablat	equ	0xFF5
  6991                           prodh	equ	0xFF4
  6992                           prodl	equ	0xFF3
  6993                           intcon	equ	0xFF2
  6994                           indf0	equ	0xFEF
  6995                           postinc0	equ	0xFEE
  6996                           fsr0h	equ	0xFEA
  6997                           fsr0l	equ	0xFE9
  6998                           wreg	equ	0xFE8
  6999                           postdec1	equ	0xFE5
  7000                           fsr1l	equ	0xFE1
  7001                           indf2	equ	0xFDF
  7002                           fsr2h	equ	0xFDA
  7003                           fsr2l	equ	0xFD9
  7004                           status	equ	0xFD8
  7005                           
  7006 ;; *************** function _Clear_runTime_Arrows *****************
  7007 ;; Defined at:
  7008 ;;		line 172 in file "screen_controls.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;		None
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;  i               1   14[BANK0 ] unsigned char 
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  1    wreg      void 
  7015 ;; Registers used:
  7016 ;;		wreg, status,2, status,0, cstack
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7025 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7026 ;;Total ram usage:        1 bytes
  7027 ;; Hardware stack levels used:    1
  7028 ;; Hardware stack levels required when called:   13
  7029 ;; This function calls:
  7030 ;;		_GLCD_GoTo
  7031 ;;		_GLCD_WriteData
  7032 ;; This function is called by:
  7033 ;;		_Draw_Arrow
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           	psect	text40
  7038  001698                     __ptext40:
  7039                           	opt stack 0
  7040  001698                     _Clear_runTime_Arrows:
  7041                           	opt stack 16
  7042                           
  7043                           ;screen_controls.c: 174: unsigned char i=0;
  7044                           
  7045                           ;incstack = 0
  7046  001698  0E00               	movlw	0
  7047  00169A  0100               	movlb	0	; () banked
  7048  00169C  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;screen_controls.c: 176: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  7052  00169E  0E02               	movlw	2
  7053  0016A0  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  7054  0016A2  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  7055  0016A4  0800               	sublw	0
  7056  0016A6  25A8               	addwf	_runTimeX& (0+255),w,b
  7057  0016A8  EC3F  F00A         	call	_GLCD_GoTo
  7058                           
  7059                           ;screen_controls.c: 178: for(i=0; i<ARROW_SIZE; i++)
  7060  0016AC  0E00               	movlw	0
  7061  0016AE  0100               	movlb	0	; () banked
  7062  0016B0  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  7063  0016B2  D005               	goto	l697
  7064  0016B4                     
  7065                           ; BSR set to: 0
  7066                           ;screen_controls.c: 179: {
  7067                           ;screen_controls.c: 180: GLCD_WriteData(0x00);
  7068                           
  7069                           ; BSR set to: 0
  7070  0016B4  0E00               	movlw	0
  7071  0016B6  EC06  F00C         	call	_GLCD_WriteData
  7072  0016BA  0100               	movlb	0	; () banked
  7073  0016BC  2B6E               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  7074  0016BE                     l697:
  7075                           
  7076                           ; BSR set to: 0
  7077                           
  7078                           ; BSR set to: 0
  7079  0016BE  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  7080  0016C0  5D6E               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  7081  0016C2  A0D8               	btfss	status,0,c
  7082  0016C4  D7F7               	goto	l698
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;screen_controls.c: 181: }
  7086                           ;screen_controls.c: 183: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  7087                           
  7088                           ; BSR set to: 0
  7089  0016C6  0E04               	movlw	4
  7090  0016C8  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  7091  0016CA  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  7092  0016CC  0800               	sublw	0
  7093  0016CE  25A8               	addwf	_runTimeX& (0+255),w,b
  7094  0016D0  EC3F  F00A         	call	_GLCD_GoTo
  7095                           
  7096                           ;screen_controls.c: 184: for(i=0; i<ARROW_SIZE; i++)
  7097  0016D4  0E00               	movlw	0
  7098  0016D6  0100               	movlb	0	; () banked
  7099  0016D8  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  7100  0016DA  D005               	goto	l700
  7101  0016DC                     
  7102                           ; BSR set to: 0
  7103                           ;screen_controls.c: 185: {
  7104                           ;screen_controls.c: 186: GLCD_WriteData(0x00);
  7105                           
  7106                           ; BSR set to: 0
  7107  0016DC  0E00               	movlw	0
  7108  0016DE  EC06  F00C         	call	_GLCD_WriteData
  7109  0016E2  0100               	movlb	0	; () banked
  7110  0016E4  2B6E               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  7111  0016E6                     l700:
  7112                           
  7113                           ; BSR set to: 0
  7114                           
  7115                           ; BSR set to: 0
  7116  0016E6  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  7117  0016E8  5D6E               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  7118  0016EA  A0D8               	btfss	status,0,c
  7119  0016EC  D7F7               	goto	l701
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;screen_controls.c: 187: }
  7123                           ;screen_controls.c: 189: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  7124                           
  7125                           ; BSR set to: 0
  7126  0016EE  0E06               	movlw	6
  7127  0016F0  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  7128  0016F2  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  7129  0016F4  0800               	sublw	0
  7130  0016F6  25A8               	addwf	_runTimeX& (0+255),w,b
  7131  0016F8  EC3F  F00A         	call	_GLCD_GoTo
  7132                           
  7133                           ;screen_controls.c: 190: for(i=0; i<ARROW_SIZE; i++)
  7134  0016FC  0E00               	movlw	0
  7135  0016FE  0100               	movlb	0	; () banked
  7136  001700  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  7137  001702  D005               	goto	l703
  7138  001704                     
  7139                           ; BSR set to: 0
  7140                           ;screen_controls.c: 191: {
  7141                           ;screen_controls.c: 192: GLCD_WriteData(0x00);
  7142                           
  7143                           ; BSR set to: 0
  7144  001704  0E00               	movlw	0
  7145  001706  EC06  F00C         	call	_GLCD_WriteData
  7146  00170A  0100               	movlb	0	; () banked
  7147  00170C  2B6E               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  7148  00170E                     l703:
  7149                           
  7150                           ; BSR set to: 0
  7151                           
  7152                           ; BSR set to: 0
  7153  00170E  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  7154  001710  5D6E               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  7155  001712  B0D8               	btfsc	status,0,c
  7156  001714  0012               	return	
  7157  001716  D7F6               	goto	l704
  7158  001718                     __end_of_Clear_runTime_Arrows:
  7159                           	opt stack 0
  7160                           tblptru	equ	0xFF8
  7161                           tblptrh	equ	0xFF7
  7162                           tblptrl	equ	0xFF6
  7163                           tablat	equ	0xFF5
  7164                           prodh	equ	0xFF4
  7165                           prodl	equ	0xFF3
  7166                           intcon	equ	0xFF2
  7167                           indf0	equ	0xFEF
  7168                           postinc0	equ	0xFEE
  7169                           fsr0h	equ	0xFEA
  7170                           fsr0l	equ	0xFE9
  7171                           wreg	equ	0xFE8
  7172                           postdec1	equ	0xFE5
  7173                           fsr1l	equ	0xFE1
  7174                           indf2	equ	0xFDF
  7175                           fsr2h	equ	0xFDA
  7176                           fsr2l	equ	0xFD9
  7177                           status	equ	0xFD8
  7178                           
  7179 ;; *************** function _Clear_Brightness_Arrows *****************
  7180 ;; Defined at:
  7181 ;;		line 227 in file "screen_controls.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;		None
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;  i               1   14[BANK0 ] unsigned char 
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  1    wreg      void 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0, cstack
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7196 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7198 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7199 ;;Total ram usage:        1 bytes
  7200 ;; Hardware stack levels used:    1
  7201 ;; Hardware stack levels required when called:   13
  7202 ;; This function calls:
  7203 ;;		_GLCD_GoTo
  7204 ;;		_GLCD_WriteData
  7205 ;; This function is called by:
  7206 ;;		_Draw_Arrow
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           	psect	text41
  7211  001C06                     __ptext41:
  7212                           	opt stack 0
  7213  001C06                     _Clear_Brightness_Arrows:
  7214                           	opt stack 16
  7215                           
  7216                           ;screen_controls.c: 229: unsigned char i=0;
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;incstack = 0
  7220  001C06  0E00               	movlw	0
  7221  001C08  0100               	movlb	0	; () banked
  7222  001C0A  6F6E               	movwf	Clear_Brightness_Arrows@i& (0+255),b
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;screen_controls.c: 231: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  7226  001C0C  0E02               	movlw	2
  7227  001C0E  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  7228  001C10  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  7229  001C12  0800               	sublw	0
  7230  001C14  25A8               	addwf	_runTimeX& (0+255),w,b
  7231  001C16  EC3F  F00A         	call	_GLCD_GoTo
  7232                           
  7233                           ;screen_controls.c: 233: for(i=0; i<ARROW_SIZE; i++)
  7234  001C1A  0E00               	movlw	0
  7235  001C1C  0100               	movlb	0	; () banked
  7236  001C1E  6F6E               	movwf	Clear_Brightness_Arrows@i& (0+255),b
  7237  001C20  D005               	goto	l718
  7238  001C22                     
  7239                           ; BSR set to: 0
  7240                           ;screen_controls.c: 234: {
  7241                           ;screen_controls.c: 235: GLCD_WriteData(0x00);
  7242                           
  7243                           ; BSR set to: 0
  7244  001C22  0E00               	movlw	0
  7245  001C24  EC06  F00C         	call	_GLCD_WriteData
  7246  001C28  0100               	movlb	0	; () banked
  7247  001C2A  2B6E               	incf	Clear_Brightness_Arrows@i& (0+255),f,b
  7248  001C2C                     l718:
  7249                           
  7250                           ; BSR set to: 0
  7251                           
  7252                           ; BSR set to: 0
  7253  001C2C  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  7254  001C2E  5D6E               	subwf	Clear_Brightness_Arrows@i& (0+255),w,b
  7255  001C30  A0D8               	btfss	status,0,c
  7256  001C32  D7F7               	goto	l719
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;screen_controls.c: 236: }
  7260                           ;screen_controls.c: 238: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  7261                           
  7262                           ; BSR set to: 0
  7263  001C34  0E06               	movlw	6
  7264  001C36  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  7265  001C38  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  7266  001C3A  0800               	sublw	0
  7267  001C3C  25A8               	addwf	_runTimeX& (0+255),w,b
  7268  001C3E  EC3F  F00A         	call	_GLCD_GoTo
  7269                           
  7270                           ;screen_controls.c: 239: for(i=0; i<ARROW_SIZE; i++)
  7271  001C42  0E00               	movlw	0
  7272  001C44  0100               	movlb	0	; () banked
  7273  001C46  6F6E               	movwf	Clear_Brightness_Arrows@i& (0+255),b
  7274  001C48  D005               	goto	l721
  7275  001C4A                     
  7276                           ; BSR set to: 0
  7277                           ;screen_controls.c: 240: {
  7278                           ;screen_controls.c: 241: GLCD_WriteData(0x00);
  7279                           
  7280                           ; BSR set to: 0
  7281  001C4A  0E00               	movlw	0
  7282  001C4C  EC06  F00C         	call	_GLCD_WriteData
  7283  001C50  0100               	movlb	0	; () banked
  7284  001C52  2B6E               	incf	Clear_Brightness_Arrows@i& (0+255),f,b
  7285  001C54                     l721:
  7286                           
  7287                           ; BSR set to: 0
  7288                           
  7289                           ; BSR set to: 0
  7290  001C54  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  7291  001C56  5D6E               	subwf	Clear_Brightness_Arrows@i& (0+255),w,b
  7292  001C58  B0D8               	btfsc	status,0,c
  7293  001C5A  0012               	return	
  7294  001C5C  D7F6               	goto	l722
  7295  001C5E                     __end_of_Clear_Brightness_Arrows:
  7296                           	opt stack 0
  7297                           tblptru	equ	0xFF8
  7298                           tblptrh	equ	0xFF7
  7299                           tblptrl	equ	0xFF6
  7300                           tablat	equ	0xFF5
  7301                           prodh	equ	0xFF4
  7302                           prodl	equ	0xFF3
  7303                           intcon	equ	0xFF2
  7304                           indf0	equ	0xFEF
  7305                           postinc0	equ	0xFEE
  7306                           fsr0h	equ	0xFEA
  7307                           fsr0l	equ	0xFE9
  7308                           wreg	equ	0xFE8
  7309                           postdec1	equ	0xFE5
  7310                           fsr1l	equ	0xFE1
  7311                           indf2	equ	0xFDF
  7312                           fsr2h	equ	0xFDA
  7313                           fsr2l	equ	0xFD9
  7314                           status	equ	0xFD8
  7315                           
  7316 ;; *************** function _Clear_Arrow_Column *****************
  7317 ;; Defined at:
  7318 ;;		line 103 in file "screen_controls.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;		None
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;  i               1   22[BANK0 ] unsigned char 
  7323 ;;  j               1   21[BANK0 ] unsigned char 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, status,2, status,0, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7334 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7335 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7336 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7337 ;;Total ram usage:        9 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:   13
  7340 ;; This function calls:
  7341 ;;		_GLCD_GoTo
  7342 ;;		_GLCD_WriteData
  7343 ;; This function is called by:
  7344 ;;		_Draw_Arrow
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           	psect	text42
  7349  001A42                     __ptext42:
  7350                           	opt stack 0
  7351  001A42                     _Clear_Arrow_Column:
  7352                           	opt stack 16
  7353                           
  7354                           ;screen_controls.c: 105: unsigned char i, j;
  7355                           ;screen_controls.c: 107: for(i = 0; i < 64/8; i++)
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;incstack = 0
  7359  001A42  0E00               	movlw	0
  7360  001A44  0100               	movlb	0	; () banked
  7361  001A46  6F76               	movwf	Clear_Arrow_Column@i& (0+255),b
  7362  001A48                     l4238:
  7363                           
  7364                           ; BSR set to: 0
  7365  001A48  0E07               	movlw	7
  7366  001A4A  6576               	cpfsgt	Clear_Arrow_Column@i& (0+255),b
  7367  001A4C  D001               	goto	l683
  7368  001A4E  0012               	return	
  7369  001A50                     l683:
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;screen_controls.c: 108: {
  7373                           ;screen_controls.c: 109: GLCD_GoTo(0, i);
  7374                           
  7375                           ; BSR set to: 0
  7376  001A50  C076  F06B         	movff	Clear_Arrow_Column@i,GLCD_GoTo@y
  7377  001A54  0E00               	movlw	0
  7378  001A56  EC3F  F00A         	call	_GLCD_GoTo
  7379                           
  7380                           ;screen_controls.c: 111: for(j = 0; j < (xMenuStart - 1); j++)
  7381  001A5A  0E00               	movlw	0
  7382  001A5C  0100               	movlb	0	; () banked
  7383  001A5E  6F75               	movwf	Clear_Arrow_Column@j& (0+255),b
  7384  001A60  D005               	goto	l685
  7385  001A62                     
  7386                           ; BSR set to: 0
  7387                           ;screen_controls.c: 112: {
  7388                           ;screen_controls.c: 113: GLCD_WriteData(0x00);
  7389                           
  7390                           ; BSR set to: 0
  7391  001A62  0E00               	movlw	0
  7392  001A64  EC06  F00C         	call	_GLCD_WriteData
  7393  001A68  0100               	movlb	0	; () banked
  7394  001A6A  2B75               	incf	Clear_Arrow_Column@j& (0+255),f,b
  7395  001A6C                     l685:
  7396                           
  7397                           ; BSR set to: 0
  7398                           
  7399                           ; BSR set to: 0
  7400  001A6C  0EFF               	movlw	255
  7401  001A6E  6F6E               	movwf	??_Clear_Arrow_Column& (0+255),b
  7402  001A70  0EFF               	movlw	255
  7403  001A72  6F6F               	movwf	(??_Clear_Arrow_Column+1)& (0+255),b
  7404  001A74  51A6               	movf	_xMenuStart& (0+255),w,b
  7405  001A76  6F70               	movwf	(??_Clear_Arrow_Column+2)& (0+255),b
  7406  001A78  6B71               	clrf	(??_Clear_Arrow_Column+3)& (0+255),b
  7407  001A7A  516E               	movf	??_Clear_Arrow_Column& (0+255),w,b
  7408  001A7C  2770               	addwf	(??_Clear_Arrow_Column+2)& (0+255),f,b
  7409  001A7E  516F               	movf	(??_Clear_Arrow_Column+1)& (0+255),w,b
  7410  001A80  2371               	addwfc	(??_Clear_Arrow_Column+3)& (0+255),f,b
  7411  001A82  5175               	movf	Clear_Arrow_Column@j& (0+255),w,b
  7412  001A84  6F72               	movwf	(??_Clear_Arrow_Column+4)& (0+255),b
  7413  001A86  6B73               	clrf	(??_Clear_Arrow_Column+5)& (0+255),b
  7414  001A88  5170               	movf	(??_Clear_Arrow_Column+2)& (0+255),w,b
  7415  001A8A  5D72               	subwf	(??_Clear_Arrow_Column+4)& (0+255),w,b
  7416  001A8C  5173               	movf	(??_Clear_Arrow_Column+5)& (0+255),w,b
  7417  001A8E  0A80               	xorlw	128
  7418  001A90  6F74               	movwf	(??_Clear_Arrow_Column+6)& (0+255),b
  7419  001A92  5171               	movf	(??_Clear_Arrow_Column+3)& (0+255),w,b
  7420  001A94  0A80               	xorlw	128
  7421  001A96  5974               	subwfb	(??_Clear_Arrow_Column+6)& (0+255),w,b
  7422  001A98  A0D8               	btfss	status,0,c
  7423  001A9A  D7E3               	goto	l686
  7424                           
  7425                           ; BSR set to: 0
  7426                           
  7427                           ; BSR set to: 0
  7428  001A9C  2B76               	incf	Clear_Arrow_Column@i& (0+255),f,b
  7429  001A9E  D7D4               	goto	l4238
  7430  001AA0                     __end_of_Clear_Arrow_Column:
  7431                           	opt stack 0
  7432                           tblptru	equ	0xFF8
  7433                           tblptrh	equ	0xFF7
  7434                           tblptrl	equ	0xFF6
  7435                           tablat	equ	0xFF5
  7436                           prodh	equ	0xFF4
  7437                           prodl	equ	0xFF3
  7438                           intcon	equ	0xFF2
  7439                           indf0	equ	0xFEF
  7440                           postinc0	equ	0xFEE
  7441                           fsr0h	equ	0xFEA
  7442                           fsr0l	equ	0xFE9
  7443                           wreg	equ	0xFE8
  7444                           postdec1	equ	0xFE5
  7445                           fsr1l	equ	0xFE1
  7446                           indf2	equ	0xFDF
  7447                           fsr2h	equ	0xFDA
  7448                           fsr2l	equ	0xFD9
  7449                           status	equ	0xFD8
  7450                           
  7451 ;; *************** function _GLCD_WriteData *****************
  7452 ;; Defined at:
  7453 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  dataToWrite     1    wreg     unsigned char 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  dataToWrite     1    9[BANK0 ] unsigned char 
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  1    wreg      void 
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, status,0, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7468 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7469 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7470 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7471 ;;Total ram usage:        2 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:   11
  7474 ;; This function calls:
  7475 ;;		_GLCD_Delay
  7476 ;;		_GLCD_DisableController
  7477 ;;		_GLCD_EnableController
  7478 ;;		_GLCD_ReadStatus
  7479 ;;		___awdiv
  7480 ;; This function is called by:
  7481 ;;		_GLCD_ClearScreen
  7482 ;;		_GLCD_WriteChar
  7483 ;;		_GLCD_SetPixel
  7484 ;;		_Make_Arrow
  7485 ;;		_Make_Back_Arrow
  7486 ;;		_Clear_Arrow_Column
  7487 ;;		_Clear_runTime_Arrows
  7488 ;;		_Clear_Brightness_Arrows
  7489 ;;		_GLCD_Bitmap
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	text43
  7494  00180C                     __ptext43:
  7495                           	opt stack 0
  7496  00180C                     _GLCD_WriteData:
  7497                           	opt stack 16
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;incstack = 0
  7501                           ;GLCD_WriteData@dataToWrite stored from wreg
  7502  00180C  0100               	movlb	0	; () banked
  7503  00180E  6F69               	movwf	GLCD_WriteData@dataToWrite& (0+255),b
  7504  001810                     
  7505                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  7506  001810  C0A4  F060         	movff	_screen_x,___awdiv@dividend
  7507  001814  0100               	movlb	0	; () banked
  7508  001816  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  7509  001818  0E00               	movlw	0
  7510  00181A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7511  00181C  0E40               	movlw	64
  7512  00181E  6F62               	movwf	___awdiv@divisor& (0+255),b
  7513  001820  ECC7  F00A         	call	___awdiv	;wreg free
  7514  001824  0100               	movlb	0	; () banked
  7515  001826  5160               	movf	?___awdiv& (0+255),w,b
  7516  001828  EC87  F011         	call	_GLCD_ReadStatus
  7517  00182C  0100               	movlb	0	; () banked
  7518  00182E  6F68               	movwf	??_GLCD_WriteData& (0+255),b
  7519  001830  BF68               	btfsc	??_GLCD_WriteData& (0+255),7,b
  7520  001832  D7EE               	goto	l3678
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;KS0108-PIC18.c: 116: TRISD = 0x00;
  7524                           
  7525                           ; BSR set to: 0
  7526  001834  0E00               	movlw	0
  7527  001836  6E95               	movwf	3989,c	;volatile
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
  7531  001838  9280               	bcf	3968,1,c	;volatile
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
  7535  00183A  8480               	bsf	3968,2,c	;volatile
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;KS0108-PIC18.c: 119: PORTD = dataToWrite;
  7539  00183C  C069  FF83         	movff	GLCD_WriteData@dataToWrite,3971	;volatile
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
  7543  001840  C0A4  F060         	movff	_screen_x,___awdiv@dividend
  7544  001844  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  7545  001846  0E00               	movlw	0
  7546  001848  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7547  00184A  0E40               	movlw	64
  7548  00184C  6F62               	movwf	___awdiv@divisor& (0+255),b
  7549  00184E  ECC7  F00A         	call	___awdiv	;wreg free
  7550  001852  0100               	movlb	0	; () banked
  7551  001854  5160               	movf	?___awdiv& (0+255),w,b
  7552  001856  EC9D  F011         	call	_GLCD_EnableController
  7553                           
  7554                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
  7555  00185A  8680               	bsf	3968,3,c	;volatile
  7556                           
  7557                           ;KS0108-PIC18.c: 122: GLCD_Delay();
  7558  00185C  EC9F  F012         	call	_GLCD_Delay	;wreg free
  7559                           
  7560                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
  7561  001860  9680               	bcf	3968,3,c	;volatile
  7562                           
  7563                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
  7564  001862  C0A4  F060         	movff	_screen_x,___awdiv@dividend
  7565  001866  0100               	movlb	0	; () banked
  7566  001868  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  7567  00186A  0E00               	movlw	0
  7568  00186C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7569  00186E  0E40               	movlw	64
  7570  001870  6F62               	movwf	___awdiv@divisor& (0+255),b
  7571  001872  ECC7  F00A         	call	___awdiv	;wreg free
  7572  001876  0100               	movlb	0	; () banked
  7573  001878  5160               	movf	?___awdiv& (0+255),w,b
  7574  00187A  ECB2  F011         	call	_GLCD_DisableController
  7575                           
  7576                           ;KS0108-PIC18.c: 125: screen_x++;
  7577  00187E  0100               	movlb	0	; () banked
  7578  001880  2BA4               	incf	_screen_x& (0+255),f,b
  7579                           
  7580                           ; BSR set to: 0
  7581  001882  0012               	return		;funcret
  7582  001884                     __end_of_GLCD_WriteData:
  7583                           	opt stack 0
  7584                           tblptru	equ	0xFF8
  7585                           tblptrh	equ	0xFF7
  7586                           tblptrl	equ	0xFF6
  7587                           tablat	equ	0xFF5
  7588                           prodh	equ	0xFF4
  7589                           prodl	equ	0xFF3
  7590                           intcon	equ	0xFF2
  7591                           indf0	equ	0xFEF
  7592                           postinc0	equ	0xFEE
  7593                           fsr0h	equ	0xFEA
  7594                           fsr0l	equ	0xFE9
  7595                           wreg	equ	0xFE8
  7596                           postdec1	equ	0xFE5
  7597                           fsr1l	equ	0xFE1
  7598                           indf2	equ	0xFDF
  7599                           fsr2h	equ	0xFDA
  7600                           fsr2l	equ	0xFD9
  7601                           status	equ	0xFD8
  7602                           
  7603 ;; *************** function _GLCD_GoTo *****************
  7604 ;; Defined at:
  7605 ;;		line 25 in file "ks0108lib/KS0108.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;  x               1    wreg     unsigned char 
  7608 ;;  y               1   11[BANK0 ] unsigned char 
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;  x               1   12[BANK0 ] unsigned char 
  7611 ;;  i               1   13[BANK0 ] unsigned char 
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  1    wreg      void 
  7614 ;; Registers used:
  7615 ;;		wreg, status,2, status,0, cstack
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7621 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7622 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7624 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7625 ;;Total ram usage:        3 bytes
  7626 ;; Hardware stack levels used:    1
  7627 ;; Hardware stack levels required when called:   12
  7628 ;; This function calls:
  7629 ;;		_GLCD_WriteCommand
  7630 ;;		___awdiv
  7631 ;; This function is called by:
  7632 ;;		_GLCD_ClearScreen
  7633 ;;		_GLCD_SetPixel
  7634 ;;		_Initialize_Menus
  7635 ;;		_Draw_Arrow
  7636 ;;		_Clear_Arrow_Column
  7637 ;;		_Draw_runTime_Menu
  7638 ;;		_Draw_Brightness_Menu
  7639 ;;		_Clear_runTime_Arrows
  7640 ;;		_Draw_runTime_Arrow
  7641 ;;		_Clear_Brightness_Arrows
  7642 ;;		_Draw_Brightness_Arrow
  7643 ;;		_GLCD_Bitmap
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           	psect	text44
  7648  00147E                     __ptext44:
  7649                           	opt stack 0
  7650  00147E                     _GLCD_GoTo:
  7651                           	opt stack 15
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;incstack = 0
  7655                           ;GLCD_GoTo@x stored from wreg
  7656  00147E  0100               	movlb	0	; () banked
  7657  001480  6F6C               	movwf	GLCD_GoTo@x& (0+255),b
  7658                           
  7659                           ;KS0108.c: 27: unsigned char i;
  7660                           ;KS0108.c: 28: screen_x = x;
  7661  001482  C06C  F0A4         	movff	GLCD_GoTo@x,_screen_x
  7662                           
  7663                           ;KS0108.c: 29: screen_y = y;
  7664  001486  C06B  F0A3         	movff	GLCD_GoTo@y,_screen_y
  7665                           
  7666                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
  7667  00148A  0E00               	movlw	0
  7668  00148C  0100               	movlb	0	; () banked
  7669  00148E  6F6D               	movwf	GLCD_GoTo@i& (0+255),b
  7670  001490                     l3666:
  7671                           
  7672                           ; BSR set to: 0
  7673  001490  0E01               	movlw	1
  7674  001492  656D               	cpfsgt	GLCD_GoTo@i& (0+255),b
  7675  001494  D001               	goto	l516
  7676  001496  D014               	goto	u2350
  7677  001498                     l516:
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;KS0108.c: 32: {
  7681                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
  7682                           
  7683                           ; BSR set to: 0
  7684  001498  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  7685  00149C  0E40               	movlw	64
  7686  00149E  ECEA  F010         	call	_GLCD_WriteCommand
  7687                           
  7688                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
  7689  0014A2  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  7690  0014A6  0100               	movlb	0	; () banked
  7691  0014A8  516B               	movf	GLCD_GoTo@y& (0+255),w,b
  7692  0014AA  09B8               	iorlw	184
  7693  0014AC  ECEA  F010         	call	_GLCD_WriteCommand
  7694                           
  7695                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
  7696  0014B0  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  7697  0014B4  0EC0               	movlw	192
  7698  0014B6  ECEA  F010         	call	_GLCD_WriteCommand
  7699  0014BA  0100               	movlb	0	; () banked
  7700  0014BC  2B6D               	incf	GLCD_GoTo@i& (0+255),f,b
  7701  0014BE  D7E8               	goto	l3666
  7702  0014C0                     u2350:
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;KS0108.c: 36: }
  7706                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
  7707                           
  7708                           ; BSR set to: 0
  7709  0014C0  C06C  F060         	movff	GLCD_GoTo@x,___awdiv@dividend
  7710  0014C4  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  7711  0014C6  0E00               	movlw	0
  7712  0014C8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7713  0014CA  0E40               	movlw	64
  7714  0014CC  6F62               	movwf	___awdiv@divisor& (0+255),b
  7715  0014CE  ECC7  F00A         	call	___awdiv	;wreg free
  7716  0014D2  0100               	movlb	0	; () banked
  7717  0014D4  5160               	movf	?___awdiv& (0+255),w,b
  7718  0014D6  6F68               	movwf	GLCD_WriteCommand@controller& (0+255),b
  7719  0014D8  516C               	movf	GLCD_GoTo@x& (0+255),w,b
  7720  0014DA  0B3F               	andlw	63
  7721  0014DC  0940               	iorlw	64
  7722  0014DE  ECEA  F010         	call	_GLCD_WriteCommand
  7723                           
  7724                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
  7725  0014E2  C06C  F060         	movff	GLCD_GoTo@x,___awdiv@dividend
  7726  0014E6  0100               	movlb	0	; () banked
  7727  0014E8  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  7728  0014EA  0E00               	movlw	0
  7729  0014EC  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7730  0014EE  0E40               	movlw	64
  7731  0014F0  6F62               	movwf	___awdiv@divisor& (0+255),b
  7732  0014F2  ECC7  F00A         	call	___awdiv	;wreg free
  7733  0014F6  0100               	movlb	0	; () banked
  7734  0014F8  5160               	movf	?___awdiv& (0+255),w,b
  7735  0014FA  6F68               	movwf	GLCD_WriteCommand@controller& (0+255),b
  7736  0014FC  516B               	movf	GLCD_GoTo@y& (0+255),w,b
  7737  0014FE  09B8               	iorlw	184
  7738  001500  ECEA  F010         	call	_GLCD_WriteCommand
  7739  001504  0012               	return		;funcret
  7740  001506                     __end_of_GLCD_GoTo:
  7741                           	opt stack 0
  7742                           tblptru	equ	0xFF8
  7743                           tblptrh	equ	0xFF7
  7744                           tblptrl	equ	0xFF6
  7745                           tablat	equ	0xFF5
  7746                           prodh	equ	0xFF4
  7747                           prodl	equ	0xFF3
  7748                           intcon	equ	0xFF2
  7749                           indf0	equ	0xFEF
  7750                           postinc0	equ	0xFEE
  7751                           fsr0h	equ	0xFEA
  7752                           fsr0l	equ	0xFE9
  7753                           wreg	equ	0xFE8
  7754                           postdec1	equ	0xFE5
  7755                           fsr1l	equ	0xFE1
  7756                           indf2	equ	0xFDF
  7757                           fsr2h	equ	0xFDA
  7758                           fsr2l	equ	0xFD9
  7759                           status	equ	0xFD8
  7760                           
  7761 ;; *************** function ___awdiv *****************
  7762 ;; Defined at:
  7763 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;  dividend        2    0[BANK0 ] int 
  7766 ;;  divisor         2    2[BANK0 ] int 
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;  quotient        2    6[BANK0 ] int 
  7769 ;;  sign            1    5[BANK0 ] unsigned char 
  7770 ;;  counter         1    4[BANK0 ] unsigned char 
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  2    0[BANK0 ] int 
  7773 ;; Registers used:
  7774 ;;		wreg, status,2, status,0
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7780 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7781 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;Total ram usage:        8 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; Hardware stack levels required when called:    9
  7787 ;; This function calls:
  7788 ;;		Nothing
  7789 ;; This function is called by:
  7790 ;;		_GLCD_GoTo
  7791 ;;		_GLCD_SetPixel
  7792 ;;		_GLCD_ReadData
  7793 ;;		_GLCD_WriteData
  7794 ;;		_GLCD_Bitmap
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           	psect	text45
  7799  00158E                     __ptext45:
  7800                           	opt stack 0
  7801  00158E                     ___awdiv:
  7802                           	opt stack 17
  7803                           
  7804                           ;incstack = 0
  7805  00158E  0E00               	movlw	0
  7806  001590  0100               	movlb	0	; () banked
  7807  001592  6F65               	movwf	___awdiv@sign& (0+255),b
  7808                           
  7809                           ; BSR set to: 0
  7810  001594  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7811  001596  D006               	goto	l942
  7812                           
  7813                           ; BSR set to: 0
  7814  001598  6D62               	negf	___awdiv@divisor& (0+255),b
  7815  00159A  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7816  00159C  B0D8               	btfsc	status,0,c
  7817  00159E  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7818                           
  7819                           ; BSR set to: 0
  7820  0015A0  0E01               	movlw	1
  7821  0015A2  6F65               	movwf	___awdiv@sign& (0+255),b
  7822  0015A4                     l942:
  7823                           
  7824                           ; BSR set to: 0
  7825                           
  7826                           ; BSR set to: 0
  7827  0015A4  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7828  0015A6  D006               	goto	l943
  7829                           
  7830                           ; BSR set to: 0
  7831  0015A8  6D60               	negf	___awdiv@dividend& (0+255),b
  7832  0015AA  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7833  0015AC  B0D8               	btfsc	status,0,c
  7834  0015AE  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7835                           
  7836                           ; BSR set to: 0
  7837  0015B0  0E01               	movlw	1
  7838  0015B2  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7839  0015B4                     l943:
  7840                           
  7841                           ; BSR set to: 0
  7842                           
  7843                           ; BSR set to: 0
  7844  0015B4  0E00               	movlw	0
  7845  0015B6  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7846  0015B8  0E00               	movlw	0
  7847  0015BA  6F66               	movwf	___awdiv@quotient& (0+255),b
  7848                           
  7849                           ; BSR set to: 0
  7850  0015BC  5162               	movf	___awdiv@divisor& (0+255),w,b
  7851  0015BE  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7852  0015C0  B4D8               	btfsc	status,2,c
  7853  0015C2  D01C               	goto	l950
  7854                           
  7855                           ; BSR set to: 0
  7856  0015C4  0E01               	movlw	1
  7857  0015C6  6F64               	movwf	___awdiv@counter& (0+255),b
  7858  0015C8  D004               	goto	l945
  7859  0015CA                     
  7860                           ; BSR set to: 0
  7861                           
  7862                           ; BSR set to: 0
  7863  0015CA  90D8               	bcf	status,0,c
  7864  0015CC  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7865  0015CE  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7866  0015D0  2B64               	incf	___awdiv@counter& (0+255),f,b
  7867  0015D2                     l945:
  7868                           
  7869                           ; BSR set to: 0
  7870                           
  7871                           ; BSR set to: 0
  7872  0015D2  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7873  0015D4  D7FA               	goto	l946
  7874  0015D6                     u2290:
  7875                           
  7876                           ; BSR set to: 0
  7877                           
  7878                           ; BSR set to: 0
  7879                           
  7880                           ; BSR set to: 0
  7881  0015D6  90D8               	bcf	status,0,c
  7882  0015D8  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7883  0015DA  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7884                           
  7885                           ; BSR set to: 0
  7886  0015DC  5162               	movf	___awdiv@divisor& (0+255),w,b
  7887  0015DE  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7888  0015E0  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7889  0015E2  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7890  0015E4  A0D8               	btfss	status,0,c
  7891  0015E6  D005               	goto	l949
  7892                           
  7893                           ; BSR set to: 0
  7894  0015E8  5162               	movf	___awdiv@divisor& (0+255),w,b
  7895  0015EA  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7896  0015EC  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7897  0015EE  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7898                           
  7899                           ; BSR set to: 0
  7900  0015F0  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7901  0015F2                     l949:
  7902                           
  7903                           ; BSR set to: 0
  7904                           
  7905                           ; BSR set to: 0
  7906  0015F2  90D8               	bcf	status,0,c
  7907  0015F4  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7908  0015F6  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7909                           
  7910                           ; BSR set to: 0
  7911  0015F8  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7912  0015FA  D7ED               	goto	u2290
  7913  0015FC                     l950:
  7914                           
  7915                           ; BSR set to: 0
  7916                           
  7917                           ; BSR set to: 0
  7918                           
  7919                           ; BSR set to: 0
  7920  0015FC  5165               	movf	___awdiv@sign& (0+255),w,b
  7921  0015FE  B4D8               	btfsc	status,2,c
  7922  001600  D004               	goto	l951
  7923                           
  7924                           ; BSR set to: 0
  7925  001602  6D66               	negf	___awdiv@quotient& (0+255),b
  7926  001604  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7927  001606  B0D8               	btfsc	status,0,c
  7928  001608  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7929  00160A                     l951:
  7930                           
  7931                           ; BSR set to: 0
  7932                           
  7933                           ; BSR set to: 0
  7934  00160A  C066  F060         	movff	___awdiv@quotient,?___awdiv
  7935  00160E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  7936  001612  0012               	return	
  7937  001614                     __end_of___awdiv:
  7938                           	opt stack 0
  7939                           tblptru	equ	0xFF8
  7940                           tblptrh	equ	0xFF7
  7941                           tblptrl	equ	0xFF6
  7942                           tablat	equ	0xFF5
  7943                           prodh	equ	0xFF4
  7944                           prodl	equ	0xFF3
  7945                           intcon	equ	0xFF2
  7946                           indf0	equ	0xFEF
  7947                           postinc0	equ	0xFEE
  7948                           fsr0h	equ	0xFEA
  7949                           fsr0l	equ	0xFE9
  7950                           wreg	equ	0xFE8
  7951                           postdec1	equ	0xFE5
  7952                           fsr1l	equ	0xFE1
  7953                           indf2	equ	0xFDF
  7954                           fsr2h	equ	0xFDA
  7955                           fsr2l	equ	0xFD9
  7956                           status	equ	0xFD8
  7957                           
  7958 ;; *************** function _GLCD_WriteCommand *****************
  7959 ;; Defined at:
  7960 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;  commandToWri    1    wreg     unsigned char 
  7963 ;;  controller      1    8[BANK0 ] unsigned char 
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;  commandToWri    1   10[BANK0 ] unsigned char 
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      void 
  7968 ;; Registers used:
  7969 ;;		wreg, status,2, status,0, cstack
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7975 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7977 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7978 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7979 ;;Total ram usage:        3 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:   11
  7982 ;; This function calls:
  7983 ;;		_GLCD_Delay
  7984 ;;		_GLCD_DisableController
  7985 ;;		_GLCD_EnableController
  7986 ;;		_GLCD_ReadStatus
  7987 ;; This function is called by:
  7988 ;;		_GLCD_Initalize
  7989 ;;		_GLCD_GoTo
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text46
  7994  0021D4                     __ptext46:
  7995                           	opt stack 0
  7996  0021D4                     _GLCD_WriteCommand:
  7997                           	opt stack 15
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;incstack = 0
  8001                           ;GLCD_WriteCommand@commandToWrite stored from wreg
  8002  0021D4  0100               	movlb	0	; () banked
  8003  0021D6  6F6A               	movwf	GLCD_WriteCommand@commandToWrite& (0+255),b
  8004  0021D8                     
  8005                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
  8006  0021D8  0100               	movlb	0	; () banked
  8007  0021DA  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  8008  0021DC  EC87  F011         	call	_GLCD_ReadStatus
  8009  0021E0  0100               	movlb	0	; () banked
  8010  0021E2  6F69               	movwf	??_GLCD_WriteCommand& (0+255),b
  8011  0021E4  BF69               	btfsc	??_GLCD_WriteCommand& (0+255),7,b
  8012  0021E6  D7F8               	goto	l3552
  8013                           
  8014                           ; BSR set to: 0
  8015                           ;KS0108-PIC18.c: 82: TRISD = 0x00;
  8016                           
  8017                           ; BSR set to: 0
  8018  0021E8  0E00               	movlw	0
  8019  0021EA  6E95               	movwf	3989,c	;volatile
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
  8023  0021EC  0EF9               	movlw	249
  8024  0021EE  1680               	andwf	3968,f,c	;volatile
  8025                           
  8026                           ; BSR set to: 0
  8027                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
  8028  0021F0  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  8029  0021F2  EC9D  F011         	call	_GLCD_EnableController
  8030                           
  8031                           ;KS0108-PIC18.c: 85: PORTD = commandToWrite;
  8032  0021F6  C06A  FF83         	movff	GLCD_WriteCommand@commandToWrite,3971	;volatile
  8033                           
  8034                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
  8035  0021FA  8680               	bsf	3968,3,c	;volatile
  8036                           
  8037                           ;KS0108-PIC18.c: 87: GLCD_Delay();
  8038  0021FC  EC9F  F012         	call	_GLCD_Delay	;wreg free
  8039                           
  8040                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
  8041  002200  9680               	bcf	3968,3,c	;volatile
  8042                           
  8043                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
  8044  002202  0100               	movlb	0	; () banked
  8045  002204  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  8046  002206  ECB2  F011         	call	_GLCD_DisableController
  8047  00220A  0012               	return		;funcret
  8048  00220C                     __end_of_GLCD_WriteCommand:
  8049                           	opt stack 0
  8050                           tblptru	equ	0xFF8
  8051                           tblptrh	equ	0xFF7
  8052                           tblptrl	equ	0xFF6
  8053                           tablat	equ	0xFF5
  8054                           prodh	equ	0xFF4
  8055                           prodl	equ	0xFF3
  8056                           intcon	equ	0xFF2
  8057                           indf0	equ	0xFEF
  8058                           postinc0	equ	0xFEE
  8059                           fsr0h	equ	0xFEA
  8060                           fsr0l	equ	0xFE9
  8061                           wreg	equ	0xFE8
  8062                           postdec1	equ	0xFE5
  8063                           fsr1l	equ	0xFE1
  8064                           indf2	equ	0xFDF
  8065                           fsr2h	equ	0xFDA
  8066                           fsr2l	equ	0xFD9
  8067                           status	equ	0xFD8
  8068                           
  8069 ;; *************** function _GLCD_ReadStatus *****************
  8070 ;; Defined at:
  8071 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  controller      1    wreg     unsigned char 
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  controller      1    2[BANK0 ] unsigned char 
  8076 ;;  status          1    1[BANK0 ] unsigned char 
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  1    wreg      unsigned char 
  8079 ;; Registers used:
  8080 ;;		wreg, status,2, status,0, cstack
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 0/0
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8087 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8089 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8090 ;;Total ram usage:        2 bytes
  8091 ;; Hardware stack levels used:    1
  8092 ;; Hardware stack levels required when called:   10
  8093 ;; This function calls:
  8094 ;;		_GLCD_Delay
  8095 ;;		_GLCD_DisableController
  8096 ;;		_GLCD_EnableController
  8097 ;; This function is called by:
  8098 ;;		_GLCD_WriteCommand
  8099 ;;		_GLCD_ReadData
  8100 ;;		_GLCD_WriteData
  8101 ;; This function uses a non-reentrant model
  8102 ;;
  8103                           
  8104                           	psect	text47
  8105  00230E                     __ptext47:
  8106                           	opt stack 0
  8107  00230E                     _GLCD_ReadStatus:
  8108                           	opt stack 16
  8109                           
  8110                           ;incstack = 0
  8111                           ;GLCD_ReadStatus@controller stored from wreg
  8112  00230E  0100               	movlb	0	; () banked
  8113  002310  6F62               	movwf	GLCD_ReadStatus@controller& (0+255),b
  8114                           
  8115                           ;KS0108-PIC18.c: 64: unsigned char status;
  8116                           ;KS0108-PIC18.c: 65: TRISD = 0xFF;
  8117  002312  6895               	setf	3989,c	;volatile
  8118                           
  8119                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
  8120  002314  8280               	bsf	3968,1,c	;volatile
  8121                           
  8122                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
  8123  002316  9480               	bcf	3968,2,c	;volatile
  8124                           
  8125                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
  8126  002318  0100               	movlb	0	; () banked
  8127  00231A  5162               	movf	GLCD_ReadStatus@controller& (0+255),w,b
  8128  00231C  EC9D  F011         	call	_GLCD_EnableController
  8129                           
  8130                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
  8131  002320  8680               	bsf	3968,3,c	;volatile
  8132                           
  8133                           ;KS0108-PIC18.c: 70: GLCD_Delay();
  8134  002322  EC9F  F012         	call	_GLCD_Delay	;wreg free
  8135                           
  8136                           ;KS0108-PIC18.c: 71: status = PORTD;
  8137  002326  CF83 F061          	movff	3971,GLCD_ReadStatus@status	;volatile
  8138                           
  8139                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
  8140  00232A  9680               	bcf	3968,3,c	;volatile
  8141                           
  8142                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
  8143  00232C  0100               	movlb	0	; () banked
  8144  00232E  5162               	movf	GLCD_ReadStatus@controller& (0+255),w,b
  8145  002330  ECB2  F011         	call	_GLCD_DisableController
  8146                           
  8147                           ;KS0108-PIC18.c: 74: return status;
  8148  002334  0100               	movlb	0	; () banked
  8149  002336  5161               	movf	GLCD_ReadStatus@status& (0+255),w,b
  8150  002338  0012               	return	
  8151  00233A                     __end_of_GLCD_ReadStatus:
  8152                           	opt stack 0
  8153                           tblptru	equ	0xFF8
  8154                           tblptrh	equ	0xFF7
  8155                           tblptrl	equ	0xFF6
  8156                           tablat	equ	0xFF5
  8157                           prodh	equ	0xFF4
  8158                           prodl	equ	0xFF3
  8159                           intcon	equ	0xFF2
  8160                           indf0	equ	0xFEF
  8161                           postinc0	equ	0xFEE
  8162                           fsr0h	equ	0xFEA
  8163                           fsr0l	equ	0xFE9
  8164                           wreg	equ	0xFE8
  8165                           postdec1	equ	0xFE5
  8166                           fsr1l	equ	0xFE1
  8167                           indf2	equ	0xFDF
  8168                           fsr2h	equ	0xFDA
  8169                           fsr2l	equ	0xFD9
  8170                           status	equ	0xFD8
  8171                           
  8172 ;; *************** function _GLCD_EnableController *****************
  8173 ;; Defined at:
  8174 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  controller      1    wreg     unsigned char 
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;  controller      1    0[BANK0 ] unsigned char 
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1    wreg      void 
  8181 ;; Registers used:
  8182 ;;		wreg, status,2, status,0
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8189 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8191 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8192 ;;Total ram usage:        1 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:    9
  8195 ;; This function calls:
  8196 ;;		Nothing
  8197 ;; This function is called by:
  8198 ;;		_GLCD_ReadStatus
  8199 ;;		_GLCD_WriteCommand
  8200 ;;		_GLCD_ReadData
  8201 ;;		_GLCD_WriteData
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           	psect	text48
  8206  00233A                     __ptext48:
  8207                           	opt stack 0
  8208  00233A                     _GLCD_EnableController:
  8209                           	opt stack 16
  8210                           
  8211                           ; BSR set to: 0
  8212                           ;incstack = 0
  8213                           ;GLCD_EnableController@controller stored from wreg
  8214  00233A  0100               	movlb	0	; () banked
  8215  00233C  6F60               	movwf	GLCD_EnableController@controller& (0+255),b
  8216                           
  8217                           ;KS0108-PIC18.c: 41: switch(controller){
  8218  00233E  D006               	goto	l569
  8219  002340  9A80               	bcf	3968,5,c	;volatile
  8220  002342  0012               	return	
  8221  002344  9C80               	bcf	3968,6,c	;volatile
  8222  002346  0012               	return	
  8223  002348  9E80               	bcf	3968,7,c	;volatile
  8224                           
  8225                           ;KS0108-PIC18.c: 45: }
  8226  00234A  0012               	return	
  8227  00234C                     l569:
  8228  00234C  0100               	movlb	0	; () banked
  8229  00234E  5160               	movf	GLCD_EnableController@controller& (0+255),w,b
  8230                           
  8231                           ; Switch size 1, requested type "space"
  8232                           ; Number of cases is 3, Range of values is 0 to 2
  8233                           ; switch strategies available:
  8234                           ; Name         Instructions Cycles
  8235                           ; simple_byte           10     6 (average)
  8236                           ;	Chosen strategy is simple_byte
  8237  002350  0A00               	xorlw	0	; case 0
  8238  002352  B4D8               	btfsc	status,2,c
  8239  002354  D7F5               	goto	l570
  8240  002356  0A01               	xorlw	1	; case 1
  8241  002358  B4D8               	btfsc	status,2,c
  8242  00235A  D7F4               	goto	l572
  8243  00235C  0A03               	xorlw	3	; case 2
  8244  00235E  A4D8               	btfss	status,2,c
  8245  002360  0012               	return	
  8246  002362  D7F2               	goto	l573
  8247  002364                     __end_of_GLCD_EnableController:
  8248                           	opt stack 0
  8249                           tblptru	equ	0xFF8
  8250                           tblptrh	equ	0xFF7
  8251                           tblptrl	equ	0xFF6
  8252                           tablat	equ	0xFF5
  8253                           prodh	equ	0xFF4
  8254                           prodl	equ	0xFF3
  8255                           intcon	equ	0xFF2
  8256                           indf0	equ	0xFEF
  8257                           postinc0	equ	0xFEE
  8258                           fsr0h	equ	0xFEA
  8259                           fsr0l	equ	0xFE9
  8260                           wreg	equ	0xFE8
  8261                           postdec1	equ	0xFE5
  8262                           fsr1l	equ	0xFE1
  8263                           indf2	equ	0xFDF
  8264                           fsr2h	equ	0xFDA
  8265                           fsr2l	equ	0xFD9
  8266                           status	equ	0xFD8
  8267                           
  8268 ;; *************** function _GLCD_DisableController *****************
  8269 ;; Defined at:
  8270 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  controller      1    wreg     unsigned char 
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;  controller      1    0[BANK0 ] unsigned char 
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  1    wreg      void 
  8277 ;; Registers used:
  8278 ;;		wreg, status,2, status,0
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8287 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8288 ;;Total ram usage:        1 bytes
  8289 ;; Hardware stack levels used:    1
  8290 ;; Hardware stack levels required when called:    9
  8291 ;; This function calls:
  8292 ;;		Nothing
  8293 ;; This function is called by:
  8294 ;;		_GLCD_ReadStatus
  8295 ;;		_GLCD_WriteCommand
  8296 ;;		_GLCD_ReadData
  8297 ;;		_GLCD_WriteData
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           	psect	text49
  8302  002364                     __ptext49:
  8303                           	opt stack 0
  8304  002364                     _GLCD_DisableController:
  8305                           	opt stack 16
  8306                           
  8307                           ;incstack = 0
  8308                           ;GLCD_DisableController@controller stored from wreg
  8309  002364  0100               	movlb	0	; () banked
  8310  002366  6F60               	movwf	GLCD_DisableController@controller& (0+255),b
  8311                           
  8312                           ;KS0108-PIC18.c: 52: switch(controller)
  8313  002368  D006               	goto	l577
  8314  00236A  8A80               	bsf	3968,5,c	;volatile
  8315  00236C  0012               	return	
  8316  00236E  8C80               	bsf	3968,6,c	;volatile
  8317  002370  0012               	return	
  8318  002372  8E80               	bsf	3968,7,c	;volatile
  8319                           
  8320                           ;KS0108-PIC18.c: 57: }
  8321  002374  0012               	return	
  8322  002376                     l577:
  8323  002376  0100               	movlb	0	; () banked
  8324  002378  5160               	movf	GLCD_DisableController@controller& (0+255),w,b
  8325                           
  8326                           ; Switch size 1, requested type "space"
  8327                           ; Number of cases is 3, Range of values is 0 to 2
  8328                           ; switch strategies available:
  8329                           ; Name         Instructions Cycles
  8330                           ; simple_byte           10     6 (average)
  8331                           ;	Chosen strategy is simple_byte
  8332  00237A  0A00               	xorlw	0	; case 0
  8333  00237C  B4D8               	btfsc	status,2,c
  8334  00237E  D7F5               	goto	l578
  8335  002380  0A01               	xorlw	1	; case 1
  8336  002382  B4D8               	btfsc	status,2,c
  8337  002384  D7F4               	goto	l580
  8338  002386  0A03               	xorlw	3	; case 2
  8339  002388  A4D8               	btfss	status,2,c
  8340  00238A  0012               	return	
  8341  00238C  D7F2               	goto	l581
  8342  00238E                     __end_of_GLCD_DisableController:
  8343                           	opt stack 0
  8344                           tblptru	equ	0xFF8
  8345                           tblptrh	equ	0xFF7
  8346                           tblptrl	equ	0xFF6
  8347                           tablat	equ	0xFF5
  8348                           prodh	equ	0xFF4
  8349                           prodl	equ	0xFF3
  8350                           intcon	equ	0xFF2
  8351                           indf0	equ	0xFEF
  8352                           postinc0	equ	0xFEE
  8353                           fsr0h	equ	0xFEA
  8354                           fsr0l	equ	0xFE9
  8355                           wreg	equ	0xFE8
  8356                           postdec1	equ	0xFE5
  8357                           fsr1l	equ	0xFE1
  8358                           indf2	equ	0xFDF
  8359                           fsr2h	equ	0xFDA
  8360                           fsr2l	equ	0xFD9
  8361                           status	equ	0xFD8
  8362                           
  8363 ;; *************** function _GLCD_Delay *****************
  8364 ;; Defined at:
  8365 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		None
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8383 ;;Total ram usage:        0 bytes
  8384 ;; Hardware stack levels used:    1
  8385 ;; Hardware stack levels required when called:    9
  8386 ;; This function calls:
  8387 ;;		Nothing
  8388 ;; This function is called by:
  8389 ;;		_GLCD_ReadStatus
  8390 ;;		_GLCD_WriteCommand
  8391 ;;		_GLCD_ReadData
  8392 ;;		_GLCD_WriteData
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396                           	psect	text50
  8397  00253E                     __ptext50:
  8398                           	opt stack 0
  8399  00253E                     _GLCD_Delay:
  8400                           	opt stack 16
  8401                           
  8402                           ;KS0108-PIC18.c: 26: __nop();
  8403                           
  8404                           ;incstack = 0
  8405  00253E  F000               	nop	
  8406  002540  0012               	return		;funcret
  8407  002542                     __end_of_GLCD_Delay:
  8408                           	opt stack 0
  8409                           tblptru	equ	0xFF8
  8410                           tblptrh	equ	0xFF7
  8411                           tblptrl	equ	0xFF6
  8412                           tablat	equ	0xFF5
  8413                           prodh	equ	0xFF4
  8414                           prodl	equ	0xFF3
  8415                           intcon	equ	0xFF2
  8416                           indf0	equ	0xFEF
  8417                           postinc0	equ	0xFEE
  8418                           fsr0h	equ	0xFEA
  8419                           fsr0l	equ	0xFE9
  8420                           wreg	equ	0xFE8
  8421                           postdec1	equ	0xFE5
  8422                           fsr1l	equ	0xFE1
  8423                           indf2	equ	0xFDF
  8424                           fsr2h	equ	0xFDA
  8425                           fsr2l	equ	0xFD9
  8426                           status	equ	0xFD8
  8427                           
  8428 ;; *************** function _INTERRUPT_InterruptManager *****************
  8429 ;; Defined at:
  8430 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;		None
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;		None
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  1    wreg      void 
  8437 ;; Registers used:
  8438 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8446 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8447 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8448 ;;Total ram usage:       18 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; Hardware stack levels required when called:    8
  8451 ;; This function calls:
  8452 ;;		_PIN_MANAGER_IOC
  8453 ;;		_TMR0_ISR
  8454 ;; This function is called by:
  8455 ;;		Interrupt level 2
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459                           	psect	intcode
  8460  000008                     __pintcode:
  8461                           	opt stack 0
  8462  000008                     _INTERRUPT_InterruptManager:
  8463                           	opt stack 14
  8464                           
  8465                           ;incstack = 0
  8466  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8467  00000A  CFFA F036          	movff	pclath,??_INTERRUPT_InterruptManager
  8468  00000E  CFFB F037          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8469  000012  CFE9 F038          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  8470  000016  CFEA F039          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  8471  00001A  CFE1 F03A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  8472  00001E  CFE2 F03B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  8473  000022  CFD9 F03C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  8474  000026  CFDA F03D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  8475  00002A  CFF3 F03E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  8476  00002E  CFF4 F03F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  8477  000032  CFF6 F040          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  8478  000036  CFF7 F041          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  8479  00003A  CFF8 F042          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  8480  00003E  CFF5 F043          	movff	tablat,??_INTERRUPT_InterruptManager+13
  8481  000042  C05E  F044         	movff	btemp,??_INTERRUPT_InterruptManager+14
  8482  000046  C05F  F045         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  8483  00004A  C060  F046         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  8484  00004E  C061  F047         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  8485                           
  8486                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  8487  000052  BAF2               	btfsc	intcon,5,c	;volatile
  8488  000054  A4F2               	btfss	intcon,2,c	;volatile
  8489  000056  D003               	goto	i2l217
  8490                           
  8491                           ;interrupt_manager.c: 61: {
  8492                           ;interrupt_manager.c: 62: TMR0_ISR();
  8493  000058  ECC7  F011         	call	_TMR0_ISR	;wreg free
  8494                           
  8495                           ;interrupt_manager.c: 63: }
  8496  00005C  D005               	goto	i2l219
  8497  00005E                     i2l217:
  8498                           
  8499                           ;interrupt_manager.c: 64: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  8500  00005E  B6F2               	btfsc	intcon,3,c	;volatile
  8501  000060  A0F2               	btfss	intcon,0,c	;volatile
  8502  000062  D002               	goto	i2l219
  8503                           
  8504                           ;interrupt_manager.c: 65: {
  8505                           ;interrupt_manager.c: 66: PIN_MANAGER_IOC();
  8506  000064  ECA7  F009         	call	_PIN_MANAGER_IOC	;wreg free
  8507  000068                     i2l219:
  8508                           
  8509                           ;interrupt_manager.c: 68: else
  8510                           ;interrupt_manager.c: 69: {
  8511  000068  C047  F061         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  8512  00006C  C046  F060         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  8513  000070  C045  F05F         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  8514  000074  C044  F05E         	movff	??_INTERRUPT_InterruptManager+14,btemp
  8515  000078  C043  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  8516  00007C  C042  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  8517  000080  C041  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  8518  000084  C040  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  8519  000088  C03F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  8520  00008C  C03E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  8521  000090  C03D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  8522  000094  C03C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  8523  000098  C03B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  8524  00009C  C03A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  8525  0000A0  C039  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  8526  0000A4  C038  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  8527  0000A8  C037  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8528  0000AC  C036  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8529  0000B0  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8530  0000B2  0011               	retfie		f
  8531  0000B4                     __end_of_INTERRUPT_InterruptManager:
  8532                           	opt stack 0
  8533                           pclatu	equ	0xFFB
  8534                           pclath	equ	0xFFA
  8535                           tblptru	equ	0xFF8
  8536                           tblptrh	equ	0xFF7
  8537                           tblptrl	equ	0xFF6
  8538                           tablat	equ	0xFF5
  8539                           prodh	equ	0xFF4
  8540                           prodl	equ	0xFF3
  8541                           intcon	equ	0xFF2
  8542                           indf0	equ	0xFEF
  8543                           postinc0	equ	0xFEE
  8544                           fsr0h	equ	0xFEA
  8545                           fsr0l	equ	0xFE9
  8546                           wreg	equ	0xFE8
  8547                           postdec1	equ	0xFE5
  8548                           fsr1h	equ	0xFE2
  8549                           fsr1l	equ	0xFE1
  8550                           indf2	equ	0xFDF
  8551                           fsr2h	equ	0xFDA
  8552                           fsr2l	equ	0xFD9
  8553                           status	equ	0xFD8
  8554                           
  8555 ;; *************** function _TMR0_ISR *****************
  8556 ;; Defined at:
  8557 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;		None
  8560 ;; Auto vars:     Size  Location     Type
  8561 ;;		None
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  1    wreg      void 
  8564 ;; Registers used:
  8565 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8575 ;;Total ram usage:        0 bytes
  8576 ;; Hardware stack levels used:    1
  8577 ;; Hardware stack levels required when called:    1
  8578 ;; This function calls:
  8579 ;;		Absolute function
  8580 ;;		_TMR0_DefaultInterruptHandler
  8581 ;; This function is called by:
  8582 ;;		_INTERRUPT_InterruptManager
  8583 ;; This function uses a non-reentrant model
  8584 ;;
  8585                           
  8586                           	psect	text52
  8587  00238E                     __ptext52:
  8588                           	opt stack 0
  8589  00238E                     _TMR0_ISR:
  8590                           	opt stack 20
  8591                           
  8592                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
  8593                           
  8594                           ;incstack = 0
  8595  00238E  94F2               	bcf	intcon,2,c	;volatile
  8596                           
  8597                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
  8598  002390  0100               	movlb	0	; () banked
  8599  002392  51A0               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
  8600  002394  6ED7               	movwf	4055,c	;volatile
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
  8604  002396  C09F  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;tmr0.c: 145: if(TMR0_InterruptHandler)
  8608  00239A  51A1               	movf	_TMR0_InterruptHandler& (0+255),w,b
  8609  00239C  11A2               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  8610  00239E  B4D8               	btfsc	status,2,c
  8611  0023A0  0012               	return	
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;tmr0.c: 146: {
  8615                           ;tmr0.c: 147: TMR0_InterruptHandler();
  8616  0023A2  D801               	call	i2u401_48
  8617  0023A4  0012               	return	
  8618  0023A6                     i2u401_48:
  8619  0023A6  0005               	push	
  8620  0023A8  6EFA               	movwf	pclath,c
  8621  0023AA  51A1               	movf	_TMR0_InterruptHandler& (0+255),w,b
  8622  0023AC  6EFD               	movwf	tosl,c
  8623  0023AE  51A2               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  8624  0023B0  6EFE               	movwf	tosh,c
  8625  0023B2  6AFF               	clrf	tosu,c
  8626  0023B4  50FA               	movf	pclath,w,c
  8627  0023B6  0012               	return		;indir
  8628  0023B8                     __end_of_TMR0_ISR:
  8629                           	opt stack 0
  8630                           tosu	equ	0xFFF
  8631                           tosh	equ	0xFFE
  8632                           tosl	equ	0xFFD
  8633                           pclatu	equ	0xFFB
  8634                           pclath	equ	0xFFA
  8635                           tblptru	equ	0xFF8
  8636                           tblptrh	equ	0xFF7
  8637                           tblptrl	equ	0xFF6
  8638                           tablat	equ	0xFF5
  8639                           prodh	equ	0xFF4
  8640                           prodl	equ	0xFF3
  8641                           intcon	equ	0xFF2
  8642                           indf0	equ	0xFEF
  8643                           postinc0	equ	0xFEE
  8644                           fsr0h	equ	0xFEA
  8645                           fsr0l	equ	0xFE9
  8646                           wreg	equ	0xFE8
  8647                           postdec1	equ	0xFE5
  8648                           fsr1h	equ	0xFE2
  8649                           fsr1l	equ	0xFE1
  8650                           indf2	equ	0xFDF
  8651                           fsr2h	equ	0xFDA
  8652                           fsr2l	equ	0xFD9
  8653                           status	equ	0xFD8
  8654                           
  8655 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8656 ;; Defined at:
  8657 ;;		line 158 in file "mcc_generated_files/tmr0.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;		None
  8660 ;; Auto vars:     Size  Location     Type
  8661 ;;		None
  8662 ;; Return value:  Size  Location     Type
  8663 ;;                  1    wreg      void 
  8664 ;; Registers used:
  8665 ;;		None
  8666 ;; Tracked objects:
  8667 ;;		On entry : 0/0
  8668 ;;		On exit  : 0/0
  8669 ;;		Unchanged: 0/0
  8670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8675 ;;Total ram usage:        0 bytes
  8676 ;; Hardware stack levels used:    1
  8677 ;; This function calls:
  8678 ;;		Nothing
  8679 ;; This function is called by:
  8680 ;;		_TMR0_Initialize
  8681 ;;		_TMR0_ISR
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           	psect	text53
  8686  00254A                     __ptext53:
  8687                           	opt stack 0
  8688  00254A                     _TMR0_DefaultInterruptHandler:
  8689                           	opt stack 20
  8690                           
  8691                           ;incstack = 0
  8692  00254A  0012               	return		;funcret
  8693  00254C                     __end_of_TMR0_DefaultInterruptHandler:
  8694                           	opt stack 0
  8695                           tosu	equ	0xFFF
  8696                           tosh	equ	0xFFE
  8697                           tosl	equ	0xFFD
  8698                           pclatu	equ	0xFFB
  8699                           pclath	equ	0xFFA
  8700                           tblptru	equ	0xFF8
  8701                           tblptrh	equ	0xFF7
  8702                           tblptrl	equ	0xFF6
  8703                           tablat	equ	0xFF5
  8704                           prodh	equ	0xFF4
  8705                           prodl	equ	0xFF3
  8706                           intcon	equ	0xFF2
  8707                           indf0	equ	0xFEF
  8708                           postinc0	equ	0xFEE
  8709                           fsr0h	equ	0xFEA
  8710                           fsr0l	equ	0xFE9
  8711                           wreg	equ	0xFE8
  8712                           postdec1	equ	0xFE5
  8713                           fsr1h	equ	0xFE2
  8714                           fsr1l	equ	0xFE1
  8715                           indf2	equ	0xFDF
  8716                           fsr2h	equ	0xFDA
  8717                           fsr2l	equ	0xFD9
  8718                           status	equ	0xFD8
  8719                           
  8720 ;; *************** function _PIN_MANAGER_IOC *****************
  8721 ;; Defined at:
  8722 ;;		line 140 in file "mcc_generated_files/pin_manager.c"
  8723 ;; Parameters:    Size  Location     Type
  8724 ;;		None
  8725 ;; Auto vars:     Size  Location     Type
  8726 ;;  result          1   52[COMRAM] unsigned char 
  8727 ;;  CHA             1   51[COMRAM] unsigned char 
  8728 ;;  CHB             1   50[COMRAM] unsigned char 
  8729 ;;  currentState    1   49[COMRAM] unsigned char 
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  1    wreg      void 
  8732 ;; Registers used:
  8733 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8734 ;; Tracked objects:
  8735 ;;		On entry : 0/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8740 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8742 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8743 ;;Total ram usage:        4 bytes
  8744 ;; Hardware stack levels used:    1
  8745 ;; Hardware stack levels required when called:    7
  8746 ;; This function calls:
  8747 ;;		_Brightness_Menu_Function
  8748 ;;		_Main_Menu_Function
  8749 ;;		_Run_Time_Menu_Function
  8750 ;; This function is called by:
  8751 ;;		_INTERRUPT_InterruptManager
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           	psect	text54
  8756  00134E                     __ptext54:
  8757                           	opt stack 0
  8758  00134E                     _PIN_MANAGER_IOC:
  8759                           	opt stack 14
  8760                           
  8761                           ;pin_manager.c: 142: static unsigned char previousState;
  8762                           ;pin_manager.c: 143: unsigned char currentState;
  8763                           ;pin_manager.c: 144: char result;
  8764                           ;pin_manager.c: 145: unsigned char CHA, CHB;
  8765                           ;pin_manager.c: 147: CHA = PORTBbits.RB5;
  8766                           
  8767                           ;incstack = 0
  8768  00134E  0E00               	movlw	0
  8769  001350  BA81               	btfsc	3969,5,c	;volatile
  8770  001352  0E01               	movlw	1
  8771  001354  6E34               	movwf	PIN_MANAGER_IOC@CHA,c
  8772                           
  8773                           ;pin_manager.c: 148: CHB = PORTBbits.RB4;
  8774  001356  0E00               	movlw	0
  8775  001358  B881               	btfsc	3969,4,c	;volatile
  8776  00135A  0E01               	movlw	1
  8777  00135C  6E33               	movwf	PIN_MANAGER_IOC@CHB,c
  8778                           
  8779                           ;pin_manager.c: 150: currentState = (CHA << 1) | CHB;
  8780  00135E  5034               	movf	PIN_MANAGER_IOC@CHA,w,c
  8781  001360  2434               	addwf	PIN_MANAGER_IOC@CHA,w,c
  8782  001362  1033               	iorwf	PIN_MANAGER_IOC@CHB,w,c
  8783  001364  6E32               	movwf	PIN_MANAGER_IOC@currentState,c
  8784                           
  8785                           ;pin_manager.c: 152: if(previousState == 3)
  8786  001366  0E03               	movlw	3
  8787  001368  184C               	xorwf	PIN_MANAGER_IOC@previousState,w,c
  8788  00136A  A4D8               	btfss	status,2,c
  8789  00136C  D03A               	goto	i2l135
  8790                           
  8791                           ;pin_manager.c: 153: {
  8792                           ;pin_manager.c: 156: if(CHA == 0)
  8793  00136E  5034               	movf	PIN_MANAGER_IOC@CHA,w,c
  8794  001370  A4D8               	btfss	status,2,c
  8795  001372  D002               	goto	i2l131
  8796                           
  8797                           ;pin_manager.c: 157: {
  8798                           ;pin_manager.c: 158: result = 1;
  8799  001374  0E01               	movlw	1
  8800  001376  D001               	goto	L4
  8801  001378                     i2l131:
  8802                           
  8803                           ;pin_manager.c: 160: else
  8804                           ;pin_manager.c: 161: {
  8805                           ;pin_manager.c: 162: result = 0;
  8806  001378  0E00               	movlw	0
  8807  00137A                     L4:
  8808  00137A  6E35               	movwf	PIN_MANAGER_IOC@result,c
  8809                           
  8810                           ;pin_manager.c: 163: }
  8811                           ;pin_manager.c: 166: switch(currentContext)
  8812  00137C  D010               	goto	i2l133
  8813  00137E  5035               	movf	PIN_MANAGER_IOC@result,w,c
  8814  001380  EC36  F012         	call	_Main_Menu_Function
  8815  001384  D02E               	goto	i2l135
  8816  001386  5035               	movf	PIN_MANAGER_IOC@result,w,c
  8817  001388  EC83  F00A         	call	_Run_Time_Menu_Function
  8818  00138C  D02A               	goto	i2l135
  8819  00138E  5035               	movf	PIN_MANAGER_IOC@result,w,c
  8820  001390  EC0C  F002         	call	_Brightness_Menu_Function
  8821                           
  8822                           ;pin_manager.c: 178: case selectStateMenu: break;
  8823                           
  8824                           ;pin_manager.c: 177: case backlightMenu: break;
  8825                           
  8826                           ;pin_manager.c: 176: case endColorGreen: break;
  8827                           
  8828                           ;pin_manager.c: 175: case endColorBlue: break;
  8829                           
  8830                           ;pin_manager.c: 174: case endColorRed: break;
  8831                           
  8832                           ;pin_manager.c: 173: case startColorGreen: break;
  8833                           
  8834                           ;pin_manager.c: 172: case startColorBlue: break;
  8835                           
  8836                           ;pin_manager.c: 171: case startColorRed: break;
  8837  001394  D026               	goto	i2l135
  8838  001396  5035               	movf	PIN_MANAGER_IOC@result,w,c
  8839  001398  EC36  F012         	call	_Main_Menu_Function
  8840                           
  8841                           ;pin_manager.c: 182: }
  8842  00139C  D022               	goto	i2l135
  8843  00139E                     i2l133:
  8844  00139E  5051               	movf	_currentContext,w,c
  8845                           
  8846                           ; Switch size 1, requested type "space"
  8847                           ; Number of cases is 11, Range of values is 0 to 10
  8848                           ; switch strategies available:
  8849                           ; Name         Instructions Cycles
  8850                           ; simple_byte           34    18 (average)
  8851                           ;	Chosen strategy is simple_byte
  8852  0013A0  0A00               	xorlw	0	; case 0
  8853  0013A2  B4D8               	btfsc	status,2,c
  8854  0013A4  D7EC               	goto	i2l134
  8855  0013A6  0A01               	xorlw	1	; case 1
  8856  0013A8  B4D8               	btfsc	status,2,c
  8857  0013AA  D7ED               	goto	i2l136
  8858  0013AC  0A03               	xorlw	3	; case 2
  8859  0013AE  B4D8               	btfsc	status,2,c
  8860  0013B0  D7EE               	goto	i2l137
  8861  0013B2  0A01               	xorlw	1	; case 3
  8862  0013B4  B4D8               	btfsc	status,2,c
  8863  0013B6  D015               	goto	i2l135
  8864  0013B8  0A07               	xorlw	7	; case 4
  8865  0013BA  B4D8               	btfsc	status,2,c
  8866  0013BC  D012               	goto	i2l135
  8867  0013BE  0A01               	xorlw	1	; case 5
  8868  0013C0  B4D8               	btfsc	status,2,c
  8869  0013C2  D00F               	goto	i2l135
  8870  0013C4  0A03               	xorlw	3	; case 6
  8871  0013C6  B4D8               	btfsc	status,2,c
  8872  0013C8  D00C               	goto	i2l135
  8873  0013CA  0A01               	xorlw	1	; case 7
  8874  0013CC  B4D8               	btfsc	status,2,c
  8875  0013CE  D009               	goto	i2l135
  8876  0013D0  0A0F               	xorlw	15	; case 8
  8877  0013D2  B4D8               	btfsc	status,2,c
  8878  0013D4  D006               	goto	i2l135
  8879  0013D6  0A01               	xorlw	1	; case 9
  8880  0013D8  B4D8               	btfsc	status,2,c
  8881  0013DA  D003               	goto	i2l135
  8882  0013DC  0A03               	xorlw	3	; case 10
  8883  0013DE  A4D8               	btfss	status,2,c
  8884  0013E0  D7DA               	goto	i2l146
  8885  0013E2                     i2l135:
  8886                           
  8887                           ;pin_manager.c: 183: }
  8888                           ;pin_manager.c: 185: previousState = currentState;
  8889  0013E2  C032  F04C         	movff	PIN_MANAGER_IOC@currentState,PIN_MANAGER_IOC@previousState
  8890                           
  8891                           ;pin_manager.c: 189: PORTB = PORTB;
  8892  0013E6  CF81 FF81          	movff	3969,3969	;volatile
  8893                           
  8894                           ;pin_manager.c: 191: INTCONbits.RBIF = 0;
  8895  0013EA  90F2               	bcf	intcon,0,c	;volatile
  8896  0013EC  0012               	return		;funcret
  8897  0013EE                     __end_of_PIN_MANAGER_IOC:
  8898                           	opt stack 0
  8899                           tosu	equ	0xFFF
  8900                           tosh	equ	0xFFE
  8901                           tosl	equ	0xFFD
  8902                           pclatu	equ	0xFFB
  8903                           pclath	equ	0xFFA
  8904                           tblptru	equ	0xFF8
  8905                           tblptrh	equ	0xFF7
  8906                           tblptrl	equ	0xFF6
  8907                           tablat	equ	0xFF5
  8908                           prodh	equ	0xFF4
  8909                           prodl	equ	0xFF3
  8910                           intcon	equ	0xFF2
  8911                           indf0	equ	0xFEF
  8912                           postinc0	equ	0xFEE
  8913                           fsr0h	equ	0xFEA
  8914                           fsr0l	equ	0xFE9
  8915                           wreg	equ	0xFE8
  8916                           postdec1	equ	0xFE5
  8917                           fsr1h	equ	0xFE2
  8918                           fsr1l	equ	0xFE1
  8919                           indf2	equ	0xFDF
  8920                           fsr2h	equ	0xFDA
  8921                           fsr2l	equ	0xFD9
  8922                           status	equ	0xFD8
  8923                           
  8924 ;; *************** function _Run_Time_Menu_Function *****************
  8925 ;; Defined at:
  8926 ;;		line 213 in file "mcc_generated_files/pin_manager.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;  result          1    wreg     unsigned char 
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;  result          1   34[COMRAM] unsigned char 
  8931 ;;  display        10   24[COMRAM] unsigned char [10]
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      void 
  8934 ;; Registers used:
  8935 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8942 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8944 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8945 ;;Total ram usage:       11 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:    6
  8948 ;; This function calls:
  8949 ;;		i2_Draw_Arrow
  8950 ;;		i2_GLCD_GoTo
  8951 ;;		i2_GLCD_WriteString
  8952 ;;		i2_itoa
  8953 ;; This function is called by:
  8954 ;;		_PIN_MANAGER_IOC
  8955 ;; This function uses a non-reentrant model
  8956 ;;
  8957                           
  8958                           	psect	text55
  8959  001506                     __ptext55:
  8960                           	opt stack 0
  8961  001506                     _Run_Time_Menu_Function:
  8962                           	opt stack 14
  8963                           
  8964                           ;incstack = 0
  8965                           ;Run_Time_Menu_Function@result stored from wreg
  8966  001506  6E23               	movwf	Run_Time_Menu_Function@result,c
  8967                           
  8968                           ;pin_manager.c: 215: char display[10];
  8969                           ;pin_manager.c: 216: if(adjustValues > 0)
  8970  001508  504E               	movf	_adjustValues,w,c
  8971  00150A  A4D8               	btfss	status,2,c
  8972  00150C  D02D               	goto	i2l158
  8973  00150E  D031               	goto	i2l157
  8974  001510                     
  8975                           ;pin_manager.c: 221: if(result)
  8976  001510  5023               	movf	Run_Time_Menu_Function@result,w,c
  8977  001512  B4D8               	btfsc	status,2,c
  8978  001514  D005               	goto	i2l160
  8979                           
  8980                           ;pin_manager.c: 222: {
  8981                           ;pin_manager.c: 223: if(runMinutes < 255) runMinutes++;
  8982  001516  284D               	incf	_runMinutes,w,c
  8983  001518  B4D8               	btfsc	status,2,c
  8984  00151A  D005               	goto	i2l163
  8985  00151C  2A4D               	incf	_runMinutes,f,c
  8986                           
  8987                           ;pin_manager.c: 224: }
  8988  00151E  D003               	goto	i2l163
  8989  001520                     i2l160:
  8990                           
  8991                           ;pin_manager.c: 225: else
  8992                           ;pin_manager.c: 226: {
  8993                           ;pin_manager.c: 227: if(runMinutes > 0) runMinutes--;
  8994  001520  504D               	movf	_runMinutes,w,c
  8995  001522  A4D8               	btfss	status,2,c
  8996  001524  064D               	decf	_runMinutes,f,c
  8997  001526                     i2l163:
  8998                           
  8999                           ;pin_manager.c: 228: }
  9000                           ;pin_manager.c: 229: GLCD_GoTo(valuesXStart, 2);
  9001  001526  0E02               	movlw	2
  9002  001528  6E0C               	movwf	i2GLCD_GoTo@y,c
  9003  00152A  505B               	movf	_valuesXStart,w,c
  9004  00152C  ECC9  F00B         	call	i2_GLCD_GoTo
  9005                           
  9006                           ;pin_manager.c: 230: itoa(display, runMinutes, 10);
  9007  001530  0E19               	movlw	low Run_Time_Menu_Function@display
  9008  001532  6E11               	movwf	i2itoa@buf,c
  9009  001534  0E00               	movlw	high Run_Time_Menu_Function@display
  9010  001536  6E12               	movwf	i2itoa@buf+1,c
  9011  001538  C04D  F013         	movff	_runMinutes,i2itoa@val
  9012  00153C  6A14               	clrf	i2itoa@val+1,c
  9013  00153E  0E00               	movlw	0
  9014  001540  6E16               	movwf	i2itoa@base+1,c
  9015  001542  0E0A               	movlw	10
  9016  001544  6E15               	movwf	i2itoa@base,c
  9017  001546  EC12  F010         	call	i2_itoa	;wreg free
  9018                           
  9019                           ;pin_manager.c: 231: GLCD_WriteString(display);
  9020  00154A  0E19               	movlw	low Run_Time_Menu_Function@display
  9021  00154C  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
  9022  00154E  0E00               	movlw	high Run_Time_Menu_Function@display
  9023  001550  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
  9024  001552  EC2F  F00E         	call	i2_GLCD_WriteString	;wreg free
  9025                           
  9026                           ;pin_manager.c: 232: GLCD_WriteString("min   ");
  9027  001556  0EE6               	movlw	low STR_1
  9028  001558  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
  9029  00155A  0EFF               	movlw	high STR_1
  9030  00155C  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
  9031  00155E  EC2F  F00E         	call	i2_GLCD_WriteString	;wreg free
  9032                           
  9033                           ;pin_manager.c: 233: break;
  9034  001562  0012               	return	
  9035  001564                     i2l165:
  9036  001564  F000               	nop	
  9037                           
  9038                           ;pin_manager.c: 238: }
  9039                           
  9040                           ;pin_manager.c: 236: break;
  9041  001566  0012               	return	
  9042  001568                     i2l158:
  9043  001568  5050               	movf	_runTimeContext,w,c
  9044                           
  9045                           ; Switch size 1, requested type "space"
  9046                           ; Number of cases is 1, Range of values is 0 to 0
  9047                           ; switch strategies available:
  9048                           ; Name         Instructions Cycles
  9049                           ; simple_byte            4     3 (average)
  9050                           ;	Chosen strategy is simple_byte
  9051  00156A  0A00               	xorlw	0	; case 0
  9052  00156C  B4D8               	btfsc	status,2,c
  9053  00156E  D7D0               	goto	i2l159
  9054  001570  D7F9               	goto	i2l165
  9055  001572                     i2l157:
  9056                           
  9057                           ;pin_manager.c: 240: else
  9058                           ;pin_manager.c: 241: {
  9059                           ;pin_manager.c: 242: if(result)
  9060  001572  5023               	movf	Run_Time_Menu_Function@result,w,c
  9061  001574  B4D8               	btfsc	status,2,c
  9062  001576  D005               	goto	i2l167
  9063                           
  9064                           ;pin_manager.c: 243: {
  9065                           ;pin_manager.c: 244: if(runTimeContext < runTimeBack) runTimeContext++;
  9066  001578  0E02               	movlw	2
  9067  00157A  6050               	cpfslt	_runTimeContext,c
  9068  00157C  D005               	goto	i2l170
  9069  00157E  2A50               	incf	_runTimeContext,f,c
  9070                           
  9071                           ;pin_manager.c: 245: }
  9072  001580  D003               	goto	i2l170
  9073  001582                     i2l167:
  9074                           
  9075                           ;pin_manager.c: 246: else
  9076                           ;pin_manager.c: 247: {
  9077                           ;pin_manager.c: 248: if(runTimeContext > runTimeSelection) runTimeContext--;
  9078  001582  5050               	movf	_runTimeContext,w,c
  9079  001584  A4D8               	btfss	status,2,c
  9080  001586  0650               	decf	_runTimeContext,f,c
  9081  001588                     i2l170:
  9082                           
  9083                           ;pin_manager.c: 249: }
  9084                           ;pin_manager.c: 251: Draw_Arrow();
  9085  001588  ECD8  F00E         	call	i2_Draw_Arrow	;wreg free
  9086  00158C  0012               	return	
  9087  00158E                     __end_of_Run_Time_Menu_Function:
  9088                           	opt stack 0
  9089                           tosu	equ	0xFFF
  9090                           tosh	equ	0xFFE
  9091                           tosl	equ	0xFFD
  9092                           pclatu	equ	0xFFB
  9093                           pclath	equ	0xFFA
  9094                           tblptru	equ	0xFF8
  9095                           tblptrh	equ	0xFF7
  9096                           tblptrl	equ	0xFF6
  9097                           tablat	equ	0xFF5
  9098                           prodh	equ	0xFF4
  9099                           prodl	equ	0xFF3
  9100                           intcon	equ	0xFF2
  9101                           indf0	equ	0xFEF
  9102                           postinc0	equ	0xFEE
  9103                           fsr0h	equ	0xFEA
  9104                           fsr0l	equ	0xFE9
  9105                           wreg	equ	0xFE8
  9106                           postdec1	equ	0xFE5
  9107                           fsr1h	equ	0xFE2
  9108                           fsr1l	equ	0xFE1
  9109                           indf2	equ	0xFDF
  9110                           fsr2h	equ	0xFDA
  9111                           fsr2l	equ	0xFD9
  9112                           status	equ	0xFD8
  9113                           
  9114 ;; *************** function _Main_Menu_Function *****************
  9115 ;; Defined at:
  9116 ;;		line 196 in file "mcc_generated_files/pin_manager.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;  result          1    wreg     unsigned char 
  9119 ;; Auto vars:     Size  Location     Type
  9120 ;;  result          1   23[COMRAM] unsigned char 
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  1    wreg      void 
  9123 ;; Registers used:
  9124 ;;		wreg, status,2, status,0, cstack
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 0/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9134 ;;Total ram usage:        1 bytes
  9135 ;; Hardware stack levels used:    1
  9136 ;; Hardware stack levels required when called:    6
  9137 ;; This function calls:
  9138 ;;		i2_Draw_Arrow
  9139 ;; This function is called by:
  9140 ;;		_PIN_MANAGER_IOC
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           	psect	text56
  9145  00246C                     __ptext56:
  9146                           	opt stack 0
  9147  00246C                     _Main_Menu_Function:
  9148                           	opt stack 14
  9149                           
  9150                           ;incstack = 0
  9151                           ;Main_Menu_Function@result stored from wreg
  9152  00246C  6E18               	movwf	Main_Menu_Function@result,c
  9153                           
  9154                           ;pin_manager.c: 199: if(result)
  9155  00246E  5018               	movf	Main_Menu_Function@result,w,c
  9156  002470  B4D8               	btfsc	status,2,c
  9157  002472  D005               	goto	i2l150
  9158                           
  9159                           ;pin_manager.c: 200: {
  9160                           ;pin_manager.c: 201: if(mainState < selectState) mainState = mainState + 1;
  9161  002474  0E07               	movlw	7
  9162  002476  6052               	cpfslt	_mainState,c
  9163  002478  D007               	goto	i2l153
  9164  00247A  2852               	incf	_mainState,w,c
  9165  00247C  D004               	goto	L5
  9166  00247E                     i2l150:
  9167                           
  9168                           ;pin_manager.c: 203: else
  9169                           ;pin_manager.c: 204: {
  9170                           ;pin_manager.c: 205: if(mainState > setRunTime) mainState = mainState - 1;
  9171  00247E  0E02               	movlw	2
  9172  002480  6452               	cpfsgt	_mainState,c
  9173  002482  D002               	goto	i2l153
  9174  002484  0452               	decf	_mainState,w,c
  9175  002486                     L5:
  9176  002486  6E52               	movwf	_mainState,c
  9177  002488                     i2l153:
  9178                           
  9179                           ;pin_manager.c: 206: }
  9180                           ;pin_manager.c: 209: Draw_Arrow();
  9181  002488  ECD8  F00E         	call	i2_Draw_Arrow	;wreg free
  9182  00248C  0012               	return		;funcret
  9183  00248E                     __end_of_Main_Menu_Function:
  9184                           	opt stack 0
  9185                           tosu	equ	0xFFF
  9186                           tosh	equ	0xFFE
  9187                           tosl	equ	0xFFD
  9188                           pclatu	equ	0xFFB
  9189                           pclath	equ	0xFFA
  9190                           tblptru	equ	0xFF8
  9191                           tblptrh	equ	0xFF7
  9192                           tblptrl	equ	0xFF6
  9193                           tablat	equ	0xFF5
  9194                           prodh	equ	0xFF4
  9195                           prodl	equ	0xFF3
  9196                           intcon	equ	0xFF2
  9197                           indf0	equ	0xFEF
  9198                           postinc0	equ	0xFEE
  9199                           fsr0h	equ	0xFEA
  9200                           fsr0l	equ	0xFE9
  9201                           wreg	equ	0xFE8
  9202                           postdec1	equ	0xFE5
  9203                           fsr1h	equ	0xFE2
  9204                           fsr1l	equ	0xFE1
  9205                           indf2	equ	0xFDF
  9206                           fsr2h	equ	0xFDA
  9207                           fsr2l	equ	0xFD9
  9208                           status	equ	0xFD8
  9209                           
  9210 ;; *************** function _Brightness_Menu_Function *****************
  9211 ;; Defined at:
  9212 ;;		line 258 in file "mcc_generated_files/pin_manager.c"
  9213 ;; Parameters:    Size  Location     Type
  9214 ;;  result          1    wreg     unsigned char 
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;  result          1   48[COMRAM] unsigned char 
  9217 ;;  display        10   38[COMRAM] unsigned char [10]
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  1    wreg      void 
  9220 ;; Registers used:
  9221 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9228 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9230 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9231 ;;Total ram usage:       11 bytes
  9232 ;; Hardware stack levels used:    1
  9233 ;; Hardware stack levels required when called:    6
  9234 ;; This function calls:
  9235 ;;		___ftadd
  9236 ;;		___ftge
  9237 ;;		___ftsub
  9238 ;;		i2_Draw_Arrow
  9239 ;;		i2_GLCD_GoTo
  9240 ;;		i2_GLCD_WriteString
  9241 ;;		i2_PWM2_LoadDutyValue
  9242 ;;		i2___awtoft
  9243 ;;		i2___ftdiv
  9244 ;;		i2___ftmul
  9245 ;;		i2___fttol
  9246 ;;		i2_itoa
  9247 ;; This function is called by:
  9248 ;;		_PIN_MANAGER_IOC
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text57
  9253  000418                     __ptext57:
  9254                           	opt stack 0
  9255  000418                     _Brightness_Menu_Function:
  9256                           	opt stack 14
  9257                           
  9258                           ;incstack = 0
  9259                           ;Brightness_Menu_Function@result stored from wreg
  9260  000418  6E31               	movwf	Brightness_Menu_Function@result,c
  9261                           
  9262                           ;pin_manager.c: 260: char display[10];
  9263                           ;pin_manager.c: 261: if(adjustValues > 0)
  9264  00041A  504E               	movf	_adjustValues,w,c
  9265  00041C  A4D8               	btfss	status,2,c
  9266  00041E  D0AD               	goto	i2l175
  9267  000420  D0B1               	goto	i2l174
  9268  000422                     
  9269                           ;pin_manager.c: 266: if(result)
  9270  000422  5031               	movf	Brightness_Menu_Function@result,w,c
  9271  000424  B4D8               	btfsc	status,2,c
  9272  000426  D025               	goto	i2l177
  9273                           
  9274                           ;pin_manager.c: 267: {
  9275                           ;pin_manager.c: 268: if(brightnessPercent < 100) brightnessPercent++;
  9276  000428  C056  F001         	movff	_brightnessPercent,___ftge@ff1
  9277  00042C  C057  F002         	movff	_brightnessPercent+1,___ftge@ff1+1
  9278  000430  C058  F003         	movff	_brightnessPercent+2,___ftge@ff1+2
  9279  000434  0E00               	movlw	0
  9280  000436  6E04               	movwf	___ftge@ff2,c
  9281  000438  0EC8               	movlw	200
  9282  00043A  6E05               	movwf	___ftge@ff2+1,c
  9283  00043C  0E42               	movlw	66
  9284  00043E  6E06               	movwf	___ftge@ff2+2,c
  9285  000440  ECF7  F009         	call	___ftge	;wreg free
  9286  000444  B0D8               	btfsc	status,0,c
  9287  000446  D039               	goto	i2l180
  9288  000448  C056  F009         	movff	_brightnessPercent,___ftadd@f1
  9289  00044C  C057  F00A         	movff	_brightnessPercent+1,___ftadd@f1+1
  9290  000450  C058  F00B         	movff	_brightnessPercent+2,___ftadd@f1+2
  9291  000454  0E00               	movlw	0
  9292  000456  6E0C               	movwf	___ftadd@f2,c
  9293  000458  0E80               	movlw	128
  9294  00045A  6E0D               	movwf	___ftadd@f2+1,c
  9295  00045C  0E3F               	movlw	63
  9296  00045E  6E0E               	movwf	___ftadd@f2+2,c
  9297  000460  EC36  F001         	call	___ftadd	;wreg free
  9298  000464  C009  F056         	movff	?___ftadd,_brightnessPercent
  9299  000468  C00A  F057         	movff	?___ftadd+1,_brightnessPercent+1
  9300  00046C  C00B  F058         	movff	?___ftadd+2,_brightnessPercent+2
  9301                           
  9302                           ;pin_manager.c: 269: }
  9303  000470  D024               	goto	i2l180
  9304  000472                     i2l177:
  9305                           
  9306                           ;pin_manager.c: 270: else
  9307                           ;pin_manager.c: 271: {
  9308                           ;pin_manager.c: 272: if(brightnessPercent > 0) brightnessPercent--;
  9309  000472  0E00               	movlw	0
  9310  000474  6E01               	movwf	___ftge@ff1,c
  9311  000476  0E00               	movlw	0
  9312  000478  6E02               	movwf	___ftge@ff1+1,c
  9313  00047A  0E00               	movlw	0
  9314  00047C  6E03               	movwf	___ftge@ff1+2,c
  9315  00047E  C056  F004         	movff	_brightnessPercent,___ftge@ff2
  9316  000482  C057  F005         	movff	_brightnessPercent+1,___ftge@ff2+1
  9317  000486  C058  F006         	movff	_brightnessPercent+2,___ftge@ff2+2
  9318  00048A  ECF7  F009         	call	___ftge	;wreg free
  9319  00048E  B0D8               	btfsc	status,0,c
  9320  000490  D014               	goto	i2l180
  9321  000492  C056  F015         	movff	_brightnessPercent,___ftsub@f1
  9322  000496  C057  F016         	movff	_brightnessPercent+1,___ftsub@f1+1
  9323  00049A  C058  F017         	movff	_brightnessPercent+2,___ftsub@f1+2
  9324  00049E  0E00               	movlw	0
  9325  0004A0  6E18               	movwf	___ftsub@f2,c
  9326  0004A2  0E80               	movlw	128
  9327  0004A4  6E19               	movwf	___ftsub@f2+1,c
  9328  0004A6  0E3F               	movlw	63
  9329  0004A8  6E1A               	movwf	___ftsub@f2+2,c
  9330  0004AA  EC54  F010         	call	___ftsub	;wreg free
  9331  0004AE  C015  F056         	movff	?___ftsub,_brightnessPercent
  9332  0004B2  C016  F057         	movff	?___ftsub+1,_brightnessPercent+1
  9333  0004B6  C017  F058         	movff	?___ftsub+2,_brightnessPercent+2
  9334  0004BA                     i2l180:
  9335                           
  9336                           ;pin_manager.c: 273: }
  9337                           ;pin_manager.c: 274: appliedBrightness = maxBrightness * (brightnessPercent/100);
  9338  0004BA  C059  F009         	movff	_maxBrightness,i2___awtoft@c
  9339  0004BE  C05A  F00A         	movff	_maxBrightness+1,i2___awtoft@c+1
  9340  0004C2  EC06  F011         	call	i2___awtoft	;wreg free
  9341  0004C6  C009  F018         	movff	?i2___awtoft,i2___ftmul@f1
  9342  0004CA  C00A  F019         	movff	?i2___awtoft+1,i2___ftmul@f1+1
  9343  0004CE  C00B  F01A         	movff	?i2___awtoft+2,i2___ftmul@f1+2
  9344  0004D2  0E00               	movlw	0
  9345  0004D4  6E0C               	movwf	i2___ftdiv@f2,c
  9346  0004D6  0EC8               	movlw	200
  9347  0004D8  6E0D               	movwf	i2___ftdiv@f2+1,c
  9348  0004DA  0E42               	movlw	66
  9349  0004DC  6E0E               	movwf	i2___ftdiv@f2+2,c
  9350  0004DE  C056  F009         	movff	_brightnessPercent,i2___ftdiv@f1
  9351  0004E2  C057  F00A         	movff	_brightnessPercent+1,i2___ftdiv@f1+1
  9352  0004E6  C058  F00B         	movff	_brightnessPercent+2,i2___ftdiv@f1+2
  9353  0004EA  EC21  F007         	call	i2___ftdiv	;wreg free
  9354  0004EE  C009  F01B         	movff	?i2___ftdiv,i2___ftmul@f2
  9355  0004F2  C00A  F01C         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
  9356  0004F6  C00B  F01D         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
  9357  0004FA  EC33  F006         	call	i2___ftmul	;wreg free
  9358  0004FE  C018  F053         	movff	?i2___ftmul,_appliedBrightness
  9359  000502  C019  F054         	movff	?i2___ftmul+1,_appliedBrightness+1
  9360  000506  C01A  F055         	movff	?i2___ftmul+2,_appliedBrightness+2
  9361                           
  9362                           ;pin_manager.c: 275: PWM2_LoadDutyValue((int)appliedBrightness);
  9363  00050A  C053  F001         	movff	_appliedBrightness,i2___fttol@f1
  9364  00050E  C054  F002         	movff	_appliedBrightness+1,i2___fttol@f1+1
  9365  000512  C055  F003         	movff	_appliedBrightness+2,i2___fttol@f1+2
  9366  000516  ECB9  F005         	call	i2___fttol	;wreg free
  9367  00051A  C001  F010         	movff	?i2___fttol,i2PWM2_LoadDutyValue@dutyValue
  9368  00051E  C002  F011         	movff	?i2___fttol+1,i2PWM2_LoadDutyValue@dutyValue+1
  9369  000522  EC56  F011         	call	i2_PWM2_LoadDutyValue	;wreg free
  9370                           
  9371                           ;pin_manager.c: 276: GLCD_GoTo(valuesXStart, 2);
  9372  000526  0E02               	movlw	2
  9373  000528  6E0C               	movwf	i2GLCD_GoTo@y,c
  9374  00052A  505B               	movf	_valuesXStart,w,c
  9375  00052C  ECC9  F00B         	call	i2_GLCD_GoTo
  9376                           
  9377                           ;pin_manager.c: 277: itoa(display, brightnessPercent, 10);
  9378  000530  0E27               	movlw	low Brightness_Menu_Function@display
  9379  000532  6E11               	movwf	i2itoa@buf,c
  9380  000534  0E00               	movlw	high Brightness_Menu_Function@display
  9381  000536  6E12               	movwf	i2itoa@buf+1,c
  9382  000538  C056  F001         	movff	_brightnessPercent,i2___fttol@f1
  9383  00053C  C057  F002         	movff	_brightnessPercent+1,i2___fttol@f1+1
  9384  000540  C058  F003         	movff	_brightnessPercent+2,i2___fttol@f1+2
  9385  000544  ECB9  F005         	call	i2___fttol	;wreg free
  9386  000548  C001  F013         	movff	?i2___fttol,i2itoa@val
  9387  00054C  C002  F014         	movff	?i2___fttol+1,i2itoa@val+1
  9388  000550  0E00               	movlw	0
  9389  000552  6E16               	movwf	i2itoa@base+1,c
  9390  000554  0E0A               	movlw	10
  9391  000556  6E15               	movwf	i2itoa@base,c
  9392  000558  EC12  F010         	call	i2_itoa	;wreg free
  9393                           
  9394                           ;pin_manager.c: 278: GLCD_WriteString(display);
  9395  00055C  0E27               	movlw	low Brightness_Menu_Function@display
  9396  00055E  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
  9397  000560  0E00               	movlw	high Brightness_Menu_Function@display
  9398  000562  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
  9399  000564  EC2F  F00E         	call	i2_GLCD_WriteString	;wreg free
  9400                           
  9401                           ;pin_manager.c: 279: GLCD_WriteString("%   ");
  9402  000568  0EF2               	movlw	low STR_2
  9403  00056A  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
  9404  00056C  0EFF               	movlw	high STR_2
  9405  00056E  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
  9406  000570  EC2F  F00E         	call	i2_GLCD_WriteString	;wreg free
  9407                           
  9408                           ;pin_manager.c: 280: break;
  9409  000574  0012               	return	
  9410  000576                     i2l182:
  9411  000576  F000               	nop	
  9412                           
  9413                           ;pin_manager.c: 285: }
  9414                           
  9415                           ;pin_manager.c: 283: break;
  9416  000578  0012               	return	
  9417  00057A                     i2l175:
  9418  00057A  504F               	movf	_brightnessContext,w,c
  9419                           
  9420                           ; Switch size 1, requested type "space"
  9421                           ; Number of cases is 1, Range of values is 0 to 0
  9422                           ; switch strategies available:
  9423                           ; Name         Instructions Cycles
  9424                           ; simple_byte            4     3 (average)
  9425                           ;	Chosen strategy is simple_byte
  9426  00057C  0A00               	xorlw	0	; case 0
  9427  00057E  B4D8               	btfsc	status,2,c
  9428  000580  D750               	goto	i2l176
  9429  000582  D7F9               	goto	i2l182
  9430  000584                     i2l174:
  9431                           
  9432                           ;pin_manager.c: 287: else
  9433                           ;pin_manager.c: 288: {
  9434                           ;pin_manager.c: 289: if(result)
  9435  000584  5031               	movf	Brightness_Menu_Function@result,w,c
  9436  000586  B4D8               	btfsc	status,2,c
  9437  000588  D005               	goto	i2l184
  9438                           
  9439                           ;pin_manager.c: 290: {
  9440                           ;pin_manager.c: 291: if(brightnessContext < brightnessBack) brightnessContext++;
  9441  00058A  504F               	movf	_brightnessContext,w,c
  9442  00058C  A4D8               	btfss	status,2,c
  9443  00058E  D005               	goto	i2l187
  9444  000590  2A4F               	incf	_brightnessContext,f,c
  9445                           
  9446                           ;pin_manager.c: 292: }
  9447  000592  D003               	goto	i2l187
  9448  000594                     i2l184:
  9449                           
  9450                           ;pin_manager.c: 293: else
  9451                           ;pin_manager.c: 294: {
  9452                           ;pin_manager.c: 295: if(brightnessContext > brightness) brightnessContext--;
  9453  000594  504F               	movf	_brightnessContext,w,c
  9454  000596  A4D8               	btfss	status,2,c
  9455  000598  064F               	decf	_brightnessContext,f,c
  9456  00059A                     i2l187:
  9457                           
  9458                           ;pin_manager.c: 296: }
  9459                           ;pin_manager.c: 298: Draw_Arrow();
  9460  00059A  ECD8  F00E         	call	i2_Draw_Arrow	;wreg free
  9461  00059E  0012               	return	
  9462  0005A0                     __end_of_Brightness_Menu_Function:
  9463                           	opt stack 0
  9464                           tosu	equ	0xFFF
  9465                           tosh	equ	0xFFE
  9466                           tosl	equ	0xFFD
  9467                           pclatu	equ	0xFFB
  9468                           pclath	equ	0xFFA
  9469                           tblptru	equ	0xFF8
  9470                           tblptrh	equ	0xFF7
  9471                           tblptrl	equ	0xFF6
  9472                           tablat	equ	0xFF5
  9473                           prodh	equ	0xFF4
  9474                           prodl	equ	0xFF3
  9475                           intcon	equ	0xFF2
  9476                           indf0	equ	0xFEF
  9477                           postinc0	equ	0xFEE
  9478                           fsr0h	equ	0xFEA
  9479                           fsr0l	equ	0xFE9
  9480                           wreg	equ	0xFE8
  9481                           postdec1	equ	0xFE5
  9482                           fsr1h	equ	0xFE2
  9483                           fsr1l	equ	0xFE1
  9484                           indf2	equ	0xFDF
  9485                           fsr2h	equ	0xFDA
  9486                           fsr2l	equ	0xFD9
  9487                           status	equ	0xFD8
  9488                           
  9489 ;; *************** function i2_itoa *****************
  9490 ;; Defined at:
  9491 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;  buf             2   16[COMRAM] PTR unsigned char 
  9494 ;;		 -> Draw_Brightness_Menu@display(10), Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Brightness_Menu_F
      +unction@display(10), 
  9495 ;;		 -> Run_Time_Menu_Function@display(10), 
  9496 ;;  val             2   18[COMRAM] int 
  9497 ;;  base            2   20[COMRAM] int 
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;  itoa            2   22[COMRAM] PTR unsigned char 
  9500 ;;		 -> Draw_Brightness_Menu@display(10), Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Brightness_Menu_F
      +unction@display(10), 
  9501 ;;		 -> Run_Time_Menu_Function@display(10), 
  9502 ;; Return value:  Size  Location     Type
  9503 ;;                  2   16[COMRAM] PTR unsigned char 
  9504 ;; Registers used:
  9505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9506 ;; Tracked objects:
  9507 ;;		On entry : 0/0
  9508 ;;		On exit  : 0/0
  9509 ;;		Unchanged: 0/0
  9510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9511 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9512 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9514 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9515 ;;Total ram usage:        8 bytes
  9516 ;; Hardware stack levels used:    1
  9517 ;; Hardware stack levels required when called:    2
  9518 ;; This function calls:
  9519 ;;		i2_utoa
  9520 ;; This function is called by:
  9521 ;;		_Run_Time_Menu_Function
  9522 ;;		_Brightness_Menu_Function
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           	psect	text58
  9527  002024                     __ptext58:
  9528                           	opt stack 0
  9529  002024                     i2_itoa:
  9530                           	opt stack 17
  9531                           
  9532                           ;incstack = 0
  9533  002024  C011  F017         	movff	i2itoa@buf,i2itoa@cp
  9534  002028  C012  F018         	movff	i2itoa@buf+1,i2itoa@cp+1
  9535  00202C  AE14               	btfss	i2itoa@val+1,7,c
  9536  00202E  D00C               	goto	i2l1105
  9537  002030  C011  FFD9         	movff	i2itoa@buf,fsr2l
  9538  002034  C012  FFDA         	movff	i2itoa@buf+1,fsr2h
  9539  002038  0E2D               	movlw	45
  9540  00203A  6EDF               	movwf	indf2,c
  9541  00203C  4A11               	infsnz	i2itoa@buf,f,c
  9542  00203E  2A12               	incf	i2itoa@buf+1,f,c
  9543  002040  6C13               	negf	i2itoa@val,c
  9544  002042  1E14               	comf	i2itoa@val+1,f,c
  9545  002044  B0D8               	btfsc	status,0,c
  9546  002046  2A14               	incf	i2itoa@val+1,f,c
  9547  002048                     i2l1105:
  9548  002048  C011  F008         	movff	i2itoa@buf,i2utoa@buf
  9549  00204C  C012  F009         	movff	i2itoa@buf+1,i2utoa@buf+1
  9550  002050  C013  F00A         	movff	i2itoa@val,i2utoa@val
  9551  002054  C014  F00B         	movff	i2itoa@val+1,i2utoa@val+1
  9552  002058  C015  F00C         	movff	i2itoa@base,i2utoa@base
  9553  00205C  C016  F00D         	movff	i2itoa@base+1,i2utoa@base+1
  9554  002060  EC55  F009         	call	i2_utoa	;wreg free
  9555  002064  0012               	return	
  9556  002066                     __end_ofi2_itoa:
  9557                           	opt stack 0
  9558                           tosu	equ	0xFFF
  9559                           tosh	equ	0xFFE
  9560                           tosl	equ	0xFFD
  9561                           pclatu	equ	0xFFB
  9562                           pclath	equ	0xFFA
  9563                           tblptru	equ	0xFF8
  9564                           tblptrh	equ	0xFF7
  9565                           tblptrl	equ	0xFF6
  9566                           tablat	equ	0xFF5
  9567                           prodh	equ	0xFF4
  9568                           prodl	equ	0xFF3
  9569                           intcon	equ	0xFF2
  9570                           indf0	equ	0xFEF
  9571                           postinc0	equ	0xFEE
  9572                           fsr0h	equ	0xFEA
  9573                           fsr0l	equ	0xFE9
  9574                           wreg	equ	0xFE8
  9575                           postdec1	equ	0xFE5
  9576                           fsr1h	equ	0xFE2
  9577                           fsr1l	equ	0xFE1
  9578                           indf2	equ	0xFDF
  9579                           fsr2h	equ	0xFDA
  9580                           fsr2l	equ	0xFD9
  9581                           status	equ	0xFD8
  9582                           
  9583 ;; *************** function i2_utoa *****************
  9584 ;; Defined at:
  9585 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;  buf             2    7[COMRAM] PTR unsigned char 
  9588 ;;		 -> Draw_Brightness_Menu@display(10), Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Brightness_Menu_F
      +unction@display(10), 
  9589 ;;		 -> Run_Time_Menu_Function@display(10), 
  9590 ;;  val             2    9[COMRAM] unsigned int 
  9591 ;;  base            2   11[COMRAM] int 
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;  utoa            2   13[COMRAM] unsigned int 
  9594 ;;  utoa            1   15[COMRAM] unsigned char 
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  2    7[COMRAM] PTR unsigned char 
  9597 ;; Registers used:
  9598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9604 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9605 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9607 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9608 ;;Total ram usage:        9 bytes
  9609 ;; Hardware stack levels used:    1
  9610 ;; Hardware stack levels required when called:    1
  9611 ;; This function calls:
  9612 ;;		i2___lwdiv
  9613 ;;		i2___lwmod
  9614 ;; This function is called by:
  9615 ;;		i2_itoa
  9616 ;; This function uses a non-reentrant model
  9617 ;;
  9618                           
  9619                           	psect	text59
  9620  0012AA                     __ptext59:
  9621                           	opt stack 0
  9622  0012AA                     i2_utoa:
  9623                           	opt stack 17
  9624                           
  9625                           ;incstack = 0
  9626  0012AA  C00A  F00E         	movff	i2utoa@val,i2utoa@v
  9627  0012AE  C00B  F00F         	movff	i2utoa@val+1,i2utoa@v+1
  9628  0012B2  C00E  F001         	movff	i2utoa@v,i2___lwdiv@dividend
  9629  0012B6  C00F  F002         	movff	i2utoa@v+1,i2___lwdiv@dividend+1
  9630  0012BA  C00C  F003         	movff	i2utoa@base,i2___lwdiv@divisor
  9631  0012BE  C00D  F004         	movff	i2utoa@base+1,i2___lwdiv@divisor+1
  9632  0012C2  EC56  F00F         	call	i2___lwdiv	;wreg free
  9633  0012C6  C001  F00E         	movff	?i2___lwdiv,i2utoa@v
  9634  0012CA  C002  F00F         	movff	?i2___lwdiv+1,i2utoa@v+1
  9635  0012CE  4A08               	infsnz	i2utoa@buf,f,c
  9636  0012D0  2A09               	incf	i2utoa@buf+1,f,c
  9637  0012D2  500E               	movf	i2utoa@v,w,c
  9638  0012D4  100F               	iorwf	i2utoa@v+1,w,c
  9639  0012D6  A4D8               	btfss	status,2,c
  9640  0012D8  D7EC               	goto	i2l1109
  9641  0012DA  C008  FFD9         	movff	i2utoa@buf,fsr2l
  9642  0012DE  C009  FFDA         	movff	i2utoa@buf+1,fsr2h
  9643  0012E2  0E00               	movlw	0
  9644  0012E4  6EDF               	movwf	indf2,c
  9645  0012E6  0608               	decf	i2utoa@buf,f,c
  9646  0012E8  A0D8               	btfss	status,0,c
  9647  0012EA  0609               	decf	i2utoa@buf+1,f,c
  9648  0012EC  C00A  F001         	movff	i2utoa@val,i2___lwmod@dividend
  9649  0012F0  C00B  F002         	movff	i2utoa@val+1,i2___lwmod@dividend+1
  9650  0012F4  C00C  F003         	movff	i2utoa@base,i2___lwmod@divisor
  9651  0012F8  C00D  F004         	movff	i2utoa@base+1,i2___lwmod@divisor+1
  9652  0012FC  EC33  F010         	call	i2___lwmod	;wreg free
  9653  001300  5001               	movf	?i2___lwmod,w,c
  9654  001302  6E10               	movwf	i2utoa@c,c
  9655  001304  C00A  F001         	movff	i2utoa@val,i2___lwdiv@dividend
  9656  001308  C00B  F002         	movff	i2utoa@val+1,i2___lwdiv@dividend+1
  9657  00130C  C00C  F003         	movff	i2utoa@base,i2___lwdiv@divisor
  9658  001310  C00D  F004         	movff	i2utoa@base+1,i2___lwdiv@divisor+1
  9659  001314  EC56  F00F         	call	i2___lwdiv	;wreg free
  9660  001318  C001  F00A         	movff	?i2___lwdiv,i2utoa@val
  9661  00131C  C002  F00B         	movff	?i2___lwdiv+1,i2utoa@val+1
  9662  001320  0E09               	movlw	9
  9663  001322  6410               	cpfsgt	i2utoa@c,c
  9664  001324  D002               	goto	i2l1112
  9665  001326  0E07               	movlw	7
  9666  001328  2610               	addwf	i2utoa@c,f,c
  9667  00132A                     i2l1112:
  9668  00132A  0E30               	movlw	48
  9669  00132C  2610               	addwf	i2utoa@c,f,c
  9670  00132E  C008  FFD9         	movff	i2utoa@buf,fsr2l
  9671  001332  C009  FFDA         	movff	i2utoa@buf+1,fsr2h
  9672  001336  C010  FFDF         	movff	i2utoa@c,indf2
  9673  00133A  0608               	decf	i2utoa@buf,f,c
  9674  00133C  A0D8               	btfss	status,0,c
  9675  00133E  0609               	decf	i2utoa@buf+1,f,c
  9676  001340  500A               	movf	i2utoa@val,w,c
  9677  001342  100B               	iorwf	i2utoa@val+1,w,c
  9678  001344  A4D8               	btfss	status,2,c
  9679  001346  D7D2               	goto	i2l1111
  9680                           
  9681                           ;	Return value of i2_utoa is never used
  9682  001348  4A08               	infsnz	i2utoa@buf,f,c
  9683  00134A  2A09               	incf	i2utoa@buf+1,f,c
  9684  00134C  0012               	return	
  9685  00134E                     __end_ofi2_utoa:
  9686                           	opt stack 0
  9687                           tosu	equ	0xFFF
  9688                           tosh	equ	0xFFE
  9689                           tosl	equ	0xFFD
  9690                           pclatu	equ	0xFFB
  9691                           pclath	equ	0xFFA
  9692                           tblptru	equ	0xFF8
  9693                           tblptrh	equ	0xFF7
  9694                           tblptrl	equ	0xFF6
  9695                           tablat	equ	0xFF5
  9696                           prodh	equ	0xFF4
  9697                           prodl	equ	0xFF3
  9698                           intcon	equ	0xFF2
  9699                           indf0	equ	0xFEF
  9700                           postinc0	equ	0xFEE
  9701                           fsr0h	equ	0xFEA
  9702                           fsr0l	equ	0xFE9
  9703                           wreg	equ	0xFE8
  9704                           postdec1	equ	0xFE5
  9705                           fsr1h	equ	0xFE2
  9706                           fsr1l	equ	0xFE1
  9707                           indf2	equ	0xFDF
  9708                           fsr2h	equ	0xFDA
  9709                           fsr2l	equ	0xFD9
  9710                           status	equ	0xFD8
  9711                           
  9712 ;; *************** function i2___lwmod *****************
  9713 ;; Defined at:
  9714 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  dividend        2    0[COMRAM] unsigned int 
  9717 ;;  divisor         2    2[COMRAM] unsigned int 
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;  __lwmod         1    4[COMRAM] unsigned char 
  9720 ;; Return value:  Size  Location     Type
  9721 ;;                  2    0[COMRAM] unsigned int 
  9722 ;; Registers used:
  9723 ;;		wreg, status,2, status,0
  9724 ;; Tracked objects:
  9725 ;;		On entry : 0/0
  9726 ;;		On exit  : 0/0
  9727 ;;		Unchanged: 0/0
  9728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9729 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9732 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9733 ;;Total ram usage:        5 bytes
  9734 ;; Hardware stack levels used:    1
  9735 ;; This function calls:
  9736 ;;		Nothing
  9737 ;; This function is called by:
  9738 ;;		i2_utoa
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           	psect	text60
  9743  002066                     __ptext60:
  9744                           	opt stack 0
  9745  002066                     i2___lwmod:
  9746                           	opt stack 17
  9747                           
  9748                           ;incstack = 0
  9749  002066  5003               	movf	i2___lwmod@divisor,w,c
  9750  002068  1004               	iorwf	i2___lwmod@divisor+1,w,c
  9751  00206A  B4D8               	btfsc	status,2,c
  9752  00206C  D018               	goto	i2l1207
  9753  00206E  0E01               	movlw	1
  9754  002070  6E05               	movwf	i2___lwmod@counter,c
  9755  002072  D004               	goto	i2l1202
  9756  002074  90D8               	bcf	status,0,c
  9757  002076  3603               	rlcf	i2___lwmod@divisor,f,c
  9758  002078  3604               	rlcf	i2___lwmod@divisor+1,f,c
  9759  00207A  2A05               	incf	i2___lwmod@counter,f,c
  9760  00207C                     i2l1202:
  9761  00207C  AE04               	btfss	i2___lwmod@divisor+1,7,c
  9762  00207E  D7FA               	goto	i2l1203
  9763  002080                     i2u258_40:
  9764  002080  5003               	movf	i2___lwmod@divisor,w,c
  9765  002082  5C01               	subwf	i2___lwmod@dividend,w,c
  9766  002084  5004               	movf	i2___lwmod@divisor+1,w,c
  9767  002086  5802               	subwfb	i2___lwmod@dividend+1,w,c
  9768  002088  A0D8               	btfss	status,0,c
  9769  00208A  D004               	goto	i2l1206
  9770  00208C  5003               	movf	i2___lwmod@divisor,w,c
  9771  00208E  5E01               	subwf	i2___lwmod@dividend,f,c
  9772  002090  5004               	movf	i2___lwmod@divisor+1,w,c
  9773  002092  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  9774  002094                     i2l1206:
  9775  002094  90D8               	bcf	status,0,c
  9776  002096  3204               	rrcf	i2___lwmod@divisor+1,f,c
  9777  002098  3203               	rrcf	i2___lwmod@divisor,f,c
  9778  00209A  2E05               	decfsz	i2___lwmod@counter,f,c
  9779  00209C  D7F1               	goto	i2u258_40
  9780  00209E                     i2l1207:
  9781  00209E  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  9782  0020A2  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  9783  0020A6  0012               	return		;funcret
  9784  0020A8                     __end_ofi2___lwmod:
  9785                           	opt stack 0
  9786                           tosu	equ	0xFFF
  9787                           tosh	equ	0xFFE
  9788                           tosl	equ	0xFFD
  9789                           pclatu	equ	0xFFB
  9790                           pclath	equ	0xFFA
  9791                           tblptru	equ	0xFF8
  9792                           tblptrh	equ	0xFF7
  9793                           tblptrl	equ	0xFF6
  9794                           tablat	equ	0xFF5
  9795                           prodh	equ	0xFF4
  9796                           prodl	equ	0xFF3
  9797                           intcon	equ	0xFF2
  9798                           indf0	equ	0xFEF
  9799                           postinc0	equ	0xFEE
  9800                           fsr0h	equ	0xFEA
  9801                           fsr0l	equ	0xFE9
  9802                           wreg	equ	0xFE8
  9803                           postdec1	equ	0xFE5
  9804                           fsr1h	equ	0xFE2
  9805                           fsr1l	equ	0xFE1
  9806                           indf2	equ	0xFDF
  9807                           fsr2h	equ	0xFDA
  9808                           fsr2l	equ	0xFD9
  9809                           status	equ	0xFD8
  9810                           
  9811 ;; *************** function i2___lwdiv *****************
  9812 ;; Defined at:
  9813 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  9814 ;; Parameters:    Size  Location     Type
  9815 ;;  dividend        2    0[COMRAM] unsigned int 
  9816 ;;  divisor         2    2[COMRAM] unsigned int 
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  9819 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  2    0[COMRAM] unsigned int 
  9822 ;; Registers used:
  9823 ;;		wreg, status,2, status,0
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9829 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9830 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9832 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9833 ;;Total ram usage:        7 bytes
  9834 ;; Hardware stack levels used:    1
  9835 ;; This function calls:
  9836 ;;		Nothing
  9837 ;; This function is called by:
  9838 ;;		i2_utoa
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842                           	psect	text61
  9843  001EAC                     __ptext61:
  9844                           	opt stack 0
  9845  001EAC                     i2___lwdiv:
  9846                           	opt stack 17
  9847                           
  9848                           ;incstack = 0
  9849  001EAC  0E00               	movlw	0
  9850  001EAE  6E06               	movwf	i2___lwdiv@quotient+1,c
  9851  001EB0  0E00               	movlw	0
  9852  001EB2  6E05               	movwf	i2___lwdiv@quotient,c
  9853  001EB4  5003               	movf	i2___lwdiv@divisor,w,c
  9854  001EB6  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  9855  001EB8  B4D8               	btfsc	status,2,c
  9856  001EBA  D01C               	goto	i2l1197
  9857  001EBC  0E01               	movlw	1
  9858  001EBE  6E07               	movwf	i2___lwdiv@counter,c
  9859  001EC0  D004               	goto	i2l1192
  9860  001EC2  90D8               	bcf	status,0,c
  9861  001EC4  3603               	rlcf	i2___lwdiv@divisor,f,c
  9862  001EC6  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  9863  001EC8  2A07               	incf	i2___lwdiv@counter,f,c
  9864  001ECA                     i2l1192:
  9865  001ECA  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  9866  001ECC  D7FA               	goto	i2l1193
  9867  001ECE                     i2u255_40:
  9868  001ECE  90D8               	bcf	status,0,c
  9869  001ED0  3605               	rlcf	i2___lwdiv@quotient,f,c
  9870  001ED2  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  9871  001ED4  5003               	movf	i2___lwdiv@divisor,w,c
  9872  001ED6  5C01               	subwf	i2___lwdiv@dividend,w,c
  9873  001ED8  5004               	movf	i2___lwdiv@divisor+1,w,c
  9874  001EDA  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  9875  001EDC  A0D8               	btfss	status,0,c
  9876  001EDE  D005               	goto	i2l1196
  9877  001EE0  5003               	movf	i2___lwdiv@divisor,w,c
  9878  001EE2  5E01               	subwf	i2___lwdiv@dividend,f,c
  9879  001EE4  5004               	movf	i2___lwdiv@divisor+1,w,c
  9880  001EE6  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  9881  001EE8  8005               	bsf	i2___lwdiv@quotient,0,c
  9882  001EEA                     i2l1196:
  9883  001EEA  90D8               	bcf	status,0,c
  9884  001EEC  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  9885  001EEE  3203               	rrcf	i2___lwdiv@divisor,f,c
  9886  001EF0  2E07               	decfsz	i2___lwdiv@counter,f,c
  9887  001EF2  D7ED               	goto	i2u255_40
  9888  001EF4                     i2l1197:
  9889  001EF4  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  9890  001EF8  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  9891  001EFC  0012               	return		;funcret
  9892  001EFE                     __end_ofi2___lwdiv:
  9893                           	opt stack 0
  9894                           tosu	equ	0xFFF
  9895                           tosh	equ	0xFFE
  9896                           tosl	equ	0xFFD
  9897                           pclatu	equ	0xFFB
  9898                           pclath	equ	0xFFA
  9899                           tblptru	equ	0xFF8
  9900                           tblptrh	equ	0xFF7
  9901                           tblptrl	equ	0xFF6
  9902                           tablat	equ	0xFF5
  9903                           prodh	equ	0xFF4
  9904                           prodl	equ	0xFF3
  9905                           intcon	equ	0xFF2
  9906                           indf0	equ	0xFEF
  9907                           postinc0	equ	0xFEE
  9908                           fsr0h	equ	0xFEA
  9909                           fsr0l	equ	0xFE9
  9910                           wreg	equ	0xFE8
  9911                           postdec1	equ	0xFE5
  9912                           fsr1h	equ	0xFE2
  9913                           fsr1l	equ	0xFE1
  9914                           indf2	equ	0xFDF
  9915                           fsr2h	equ	0xFDA
  9916                           fsr2l	equ	0xFD9
  9917                           status	equ	0xFD8
  9918                           
  9919 ;; *************** function i2___fttol *****************
  9920 ;; Defined at:
  9921 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  9922 ;; Parameters:    Size  Location     Type
  9923 ;;  f1              3    0[COMRAM] float 
  9924 ;; Auto vars:     Size  Location     Type
  9925 ;;  __fttol         4   10[COMRAM] unsigned long 
  9926 ;;  __fttol         1   14[COMRAM] unsigned char 
  9927 ;;  __fttol         1    9[COMRAM] unsigned char 
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  4    0[COMRAM] long 
  9930 ;; Registers used:
  9931 ;;		wreg, status,2, status,0
  9932 ;; Tracked objects:
  9933 ;;		On entry : 0/0
  9934 ;;		On exit  : 0/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9938 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9939 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9940 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9941 ;;Total ram usage:       15 bytes
  9942 ;; Hardware stack levels used:    1
  9943 ;; This function calls:
  9944 ;;		Nothing
  9945 ;; This function is called by:
  9946 ;;		_Brightness_Menu_Function
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950                           	psect	text62
  9951  000B72                     __ptext62:
  9952                           	opt stack 0
  9953  000B72                     i2___fttol:
  9954                           	opt stack 19
  9955                           
  9956                           ;incstack = 0
  9957  000B72  C003  F005         	movff	i2___fttol@f1+2,??i2___fttol
  9958  000B76  6A06               	clrf	(??i2___fttol+1)& (0+255),c
  9959  000B78  6A07               	clrf	(??i2___fttol+2)& (0+255),c
  9960  000B7A  3402               	rlcf	i2___fttol@f1+1,w,c
  9961  000B7C  3605               	rlcf	??i2___fttol& (0+255),f,c
  9962  000B7E  E301               	bnc	u360_41
  9963  000B80  8006               	bsf	(??i2___fttol+1)& (0+255),0,c
  9964  000B82                     u360_41:
  9965  000B82  5005               	movf	??i2___fttol,w,c
  9966  000B84  6E0F               	movwf	i2___fttol@exp1,c
  9967  000B86  500F               	movf	i2___fttol@exp1,w,c
  9968  000B88  A4D8               	btfss	status,2,c
  9969  000B8A  D009               	goto	i2l1089
  9970  000B8C  0E00               	movlw	0
  9971  000B8E  6E01               	movwf	?i2___fttol,c
  9972  000B90  0E00               	movlw	0
  9973  000B92  6E02               	movwf	?i2___fttol+1,c
  9974  000B94  0E00               	movlw	0
  9975  000B96  6E03               	movwf	?i2___fttol+2,c
  9976  000B98  0E00               	movlw	0
  9977  000B9A  6E04               	movwf	?i2___fttol+3,c
  9978  000B9C  0012               	return	
  9979  000B9E                     i2l1089:
  9980  000B9E  0E17               	movlw	23
  9981  000BA0  6E05               	movwf	??i2___fttol& (0+255),c
  9982  000BA2  C001  F006         	movff	i2___fttol@f1,??i2___fttol+1
  9983  000BA6  C002  F007         	movff	i2___fttol@f1+1,??i2___fttol+2
  9984  000BAA  C003  F008         	movff	i2___fttol@f1+2,??i2___fttol+3
  9985  000BAE  2805               	incf	??i2___fttol,w,c
  9986  000BB0  6E09               	movwf	(??i2___fttol+4)& (0+255),c
  9987  000BB2  D004               	goto	i2u362_40
  9988  000BB4                     i2u362_45:
  9989  000BB4  90D8               	bcf	status,0,c
  9990  000BB6  3208               	rrcf	??i2___fttol+3,f,c
  9991  000BB8  3207               	rrcf	??i2___fttol+2,f,c
  9992  000BBA  3206               	rrcf	??i2___fttol+1,f,c
  9993  000BBC                     i2u362_40:
  9994  000BBC  2E09               	decfsz	(??i2___fttol+4)& (0+255),f,c
  9995  000BBE  D7FA               	goto	i2u362_45
  9996  000BC0  5006               	movf	??i2___fttol+1,w,c
  9997  000BC2  6E0A               	movwf	i2___fttol@sign1,c
  9998  000BC4  8E02               	bsf	i2___fttol@f1+1,7,c
  9999  000BC6  0EFF               	movlw	255
 10000  000BC8  1601               	andwf	i2___fttol@f1,f,c
 10001  000BCA  0EFF               	movlw	255
 10002  000BCC  1602               	andwf	i2___fttol@f1+1,f,c
 10003  000BCE  0E00               	movlw	0
 10004  000BD0  1603               	andwf	i2___fttol@f1+2,f,c
 10005  000BD2  5001               	movf	i2___fttol@f1,w,c
 10006  000BD4  6E0B               	movwf	i2___fttol@lval,c
 10007  000BD6  5002               	movf	i2___fttol@f1+1,w,c
 10008  000BD8  6E0C               	movwf	i2___fttol@lval+1,c
 10009  000BDA  5003               	movf	i2___fttol@f1+2,w,c
 10010  000BDC  6E0D               	movwf	i2___fttol@lval+2,c
 10011  000BDE  6A0E               	clrf	i2___fttol@lval+3,c
 10012  000BE0  0E8E               	movlw	142
 10013  000BE2  5E0F               	subwf	i2___fttol@exp1,f,c
 10014  000BE4  AE0F               	btfss	i2___fttol@exp1,7,c
 10015  000BE6  D016               	goto	i2l1091
 10016  000BE8  500F               	movf	i2___fttol@exp1,w,c
 10017  000BEA  0A80               	xorlw	128
 10018  000BEC  0F8F               	addlw	143
 10019  000BEE  B0D8               	btfsc	status,0,c
 10020  000BF0  D009               	goto	i2l1092
 10021  000BF2  0E00               	movlw	0
 10022  000BF4  6E01               	movwf	?i2___fttol,c
 10023  000BF6  0E00               	movlw	0
 10024  000BF8  6E02               	movwf	?i2___fttol+1,c
 10025  000BFA  0E00               	movlw	0
 10026  000BFC  6E03               	movwf	?i2___fttol+2,c
 10027  000BFE  0E00               	movlw	0
 10028  000C00  6E04               	movwf	?i2___fttol+3,c
 10029  000C02  0012               	return	
 10030  000C04                     i2l1092:
 10031  000C04  90D8               	bcf	status,0,c
 10032  000C06  320E               	rrcf	i2___fttol@lval+3,f,c
 10033  000C08  320D               	rrcf	i2___fttol@lval+2,f,c
 10034  000C0A  320C               	rrcf	i2___fttol@lval+1,f,c
 10035  000C0C  320B               	rrcf	i2___fttol@lval,f,c
 10036  000C0E  3E0F               	incfsz	i2___fttol@exp1,f,c
 10037  000C10  D7F9               	goto	i2l1092
 10038  000C12  D015               	goto	i2u366_40
 10039  000C14                     i2l1091:
 10040  000C14  0E17               	movlw	23
 10041  000C16  640F               	cpfsgt	i2___fttol@exp1,c
 10042  000C18  D00F               	goto	i2l1097
 10043  000C1A  0E00               	movlw	0
 10044  000C1C  6E01               	movwf	?i2___fttol,c
 10045  000C1E  0E00               	movlw	0
 10046  000C20  6E02               	movwf	?i2___fttol+1,c
 10047  000C22  0E00               	movlw	0
 10048  000C24  6E03               	movwf	?i2___fttol+2,c
 10049  000C26  0E00               	movlw	0
 10050  000C28  6E04               	movwf	?i2___fttol+3,c
 10051  000C2A  0012               	return	
 10052  000C2C  90D8               	bcf	status,0,c
 10053  000C2E  360B               	rlcf	i2___fttol@lval,f,c
 10054  000C30  360C               	rlcf	i2___fttol@lval+1,f,c
 10055  000C32  360D               	rlcf	i2___fttol@lval+2,f,c
 10056  000C34  360E               	rlcf	i2___fttol@lval+3,f,c
 10057  000C36  060F               	decf	i2___fttol@exp1,f,c
 10058  000C38                     i2l1097:
 10059  000C38  500F               	movf	i2___fttol@exp1,w,c
 10060  000C3A  A4D8               	btfss	status,2,c
 10061  000C3C  D7F7               	goto	i2l1098
 10062  000C3E                     i2u366_40:
 10063  000C3E  500A               	movf	i2___fttol@sign1,w,c
 10064  000C40  B4D8               	btfsc	status,2,c
 10065  000C42  D008               	goto	i2l1100
 10066  000C44  1E0E               	comf	i2___fttol@lval+3,f,c
 10067  000C46  1E0D               	comf	i2___fttol@lval+2,f,c
 10068  000C48  1E0C               	comf	i2___fttol@lval+1,f,c
 10069  000C4A  6C0B               	negf	i2___fttol@lval,c
 10070  000C4C  0E00               	movlw	0
 10071  000C4E  220C               	addwfc	i2___fttol@lval+1,f,c
 10072  000C50  220D               	addwfc	i2___fttol@lval+2,f,c
 10073  000C52  220E               	addwfc	i2___fttol@lval+3,f,c
 10074  000C54                     i2l1100:
 10075  000C54  C00B  F001         	movff	i2___fttol@lval,?i2___fttol
 10076  000C58  C00C  F002         	movff	i2___fttol@lval+1,?i2___fttol+1
 10077  000C5C  C00D  F003         	movff	i2___fttol@lval+2,?i2___fttol+2
 10078  000C60  C00E  F004         	movff	i2___fttol@lval+3,?i2___fttol+3
 10079  000C64  0012               	return	
 10080  000C66                     __end_ofi2___fttol:
 10081                           	opt stack 0
 10082                           tosu	equ	0xFFF
 10083                           tosh	equ	0xFFE
 10084                           tosl	equ	0xFFD
 10085                           pclatu	equ	0xFFB
 10086                           pclath	equ	0xFFA
 10087                           tblptru	equ	0xFF8
 10088                           tblptrh	equ	0xFF7
 10089                           tblptrl	equ	0xFF6
 10090                           tablat	equ	0xFF5
 10091                           prodh	equ	0xFF4
 10092                           prodl	equ	0xFF3
 10093                           intcon	equ	0xFF2
 10094                           indf0	equ	0xFEF
 10095                           postinc0	equ	0xFEE
 10096                           fsr0h	equ	0xFEA
 10097                           fsr0l	equ	0xFE9
 10098                           wreg	equ	0xFE8
 10099                           postdec1	equ	0xFE5
 10100                           fsr1h	equ	0xFE2
 10101                           fsr1l	equ	0xFE1
 10102                           indf2	equ	0xFDF
 10103                           fsr2h	equ	0xFDA
 10104                           fsr2l	equ	0xFD9
 10105                           status	equ	0xFD8
 10106                           
 10107 ;; *************** function i2___ftmul *****************
 10108 ;; Defined at:
 10109 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 10110 ;; Parameters:    Size  Location     Type
 10111 ;;  f1              3   23[COMRAM] float 
 10112 ;;  f2              3   26[COMRAM] float 
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;  __ftmul         3   33[COMRAM] unsigned um
 10115 ;;  __ftmul         1   37[COMRAM] unsigned char 
 10116 ;;  __ftmul         1   36[COMRAM] unsigned char 
 10117 ;;  __ftmul         1   32[COMRAM] unsigned char 
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  3   23[COMRAM] float 
 10120 ;; Registers used:
 10121 ;;		wreg, status,2, status,0, cstack
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10127 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10128 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10129 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10130 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10131 ;;Total ram usage:       15 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:    1
 10134 ;; This function calls:
 10135 ;;		i2___ftpack
 10136 ;; This function is called by:
 10137 ;;		_Brightness_Menu_Function
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           	psect	text63
 10142  000C66                     __ptext63:
 10143                           	opt stack 0
 10144  000C66                     i2___ftmul:
 10145                           	opt stack 18
 10146                           
 10147                           ;incstack = 0
 10148  000C66  C01A  F01E         	movff	i2___ftmul@f1+2,??i2___ftmul
 10149  000C6A  6A1F               	clrf	(??i2___ftmul+1)& (0+255),c
 10150  000C6C  6A20               	clrf	(??i2___ftmul+2)& (0+255),c
 10151  000C6E  3419               	rlcf	i2___ftmul@f1+1,w,c
 10152  000C70  361E               	rlcf	??i2___ftmul& (0+255),f,c
 10153  000C72  E301               	bnc	u354_41
 10154  000C74  801F               	bsf	(??i2___ftmul+1)& (0+255),0,c
 10155  000C76                     u354_41:
 10156  000C76  501E               	movf	??i2___ftmul,w,c
 10157  000C78  6E21               	movwf	i2___ftmul@exp,c
 10158  000C7A  5021               	movf	i2___ftmul@exp,w,c
 10159  000C7C  A4D8               	btfss	status,2,c
 10160  000C7E  D007               	goto	i2l1068
 10161  000C80  0E00               	movlw	0
 10162  000C82  6E18               	movwf	?i2___ftmul,c
 10163  000C84  0E00               	movlw	0
 10164  000C86  6E19               	movwf	?i2___ftmul+1,c
 10165  000C88  0E00               	movlw	0
 10166  000C8A  6E1A               	movwf	?i2___ftmul+2,c
 10167  000C8C  0012               	return	
 10168  000C8E                     i2l1068:
 10169  000C8E  C01D  F01E         	movff	i2___ftmul@f2+2,??i2___ftmul
 10170  000C92  6A1F               	clrf	(??i2___ftmul+1)& (0+255),c
 10171  000C94  6A20               	clrf	(??i2___ftmul+2)& (0+255),c
 10172  000C96  341C               	rlcf	i2___ftmul@f2+1,w,c
 10173  000C98  361E               	rlcf	??i2___ftmul& (0+255),f,c
 10174  000C9A  E301               	bnc	u356_41
 10175  000C9C  801F               	bsf	(??i2___ftmul+1)& (0+255),0,c
 10176  000C9E                     u356_41:
 10177  000C9E  501E               	movf	??i2___ftmul,w,c
 10178  000CA0  6E26               	movwf	i2___ftmul@sign,c
 10179  000CA2  5026               	movf	i2___ftmul@sign,w,c
 10180  000CA4  A4D8               	btfss	status,2,c
 10181  000CA6  D007               	goto	i2l1070
 10182  000CA8  0E00               	movlw	0
 10183  000CAA  6E18               	movwf	?i2___ftmul,c
 10184  000CAC  0E00               	movlw	0
 10185  000CAE  6E19               	movwf	?i2___ftmul+1,c
 10186  000CB0  0E00               	movlw	0
 10187  000CB2  6E1A               	movwf	?i2___ftmul+2,c
 10188  000CB4  0012               	return	
 10189  000CB6                     i2l1070:
 10190  000CB6  5026               	movf	i2___ftmul@sign,w,c
 10191  000CB8  0F7B               	addlw	123
 10192  000CBA  2621               	addwf	i2___ftmul@exp,f,c
 10193  000CBC  C01A  F026         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 10194  000CC0  501D               	movf	i2___ftmul@f2+2,w,c
 10195  000CC2  1A26               	xorwf	i2___ftmul@sign,f,c
 10196  000CC4  0E80               	movlw	128
 10197  000CC6  1626               	andwf	i2___ftmul@sign,f,c
 10198  000CC8  8E19               	bsf	i2___ftmul@f1+1,7,c
 10199  000CCA  8E1C               	bsf	i2___ftmul@f2+1,7,c
 10200  000CCC  0EFF               	movlw	255
 10201  000CCE  161B               	andwf	i2___ftmul@f2,f,c
 10202  000CD0  0EFF               	movlw	255
 10203  000CD2  161C               	andwf	i2___ftmul@f2+1,f,c
 10204  000CD4  0E00               	movlw	0
 10205  000CD6  161D               	andwf	i2___ftmul@f2+2,f,c
 10206  000CD8  0E00               	movlw	0
 10207  000CDA  6E22               	movwf	i2___ftmul@f3_as_product,c
 10208  000CDC  0E00               	movlw	0
 10209  000CDE  6E23               	movwf	i2___ftmul@f3_as_product+1,c
 10210  000CE0  0E00               	movlw	0
 10211  000CE2  6E24               	movwf	i2___ftmul@f3_as_product+2,c
 10212  000CE4  0E07               	movlw	7
 10213  000CE6  6E25               	movwf	i2___ftmul@cntr,c
 10214  000CE8  A018               	btfss	i2___ftmul@f1,0,c
 10215  000CEA  D006               	goto	i2l1072
 10216  000CEC  501B               	movf	i2___ftmul@f2,w,c
 10217  000CEE  2622               	addwf	i2___ftmul@f3_as_product,f,c
 10218  000CF0  501C               	movf	i2___ftmul@f2+1,w,c
 10219  000CF2  2223               	addwfc	i2___ftmul@f3_as_product+1,f,c
 10220  000CF4  501D               	movf	i2___ftmul@f2+2,w,c
 10221  000CF6  2224               	addwfc	i2___ftmul@f3_as_product+2,f,c
 10222  000CF8                     i2l1072:
 10223  000CF8  90D8               	bcf	status,0,c
 10224  000CFA  321A               	rrcf	i2___ftmul@f1+2,f,c
 10225  000CFC  3219               	rrcf	i2___ftmul@f1+1,f,c
 10226  000CFE  3218               	rrcf	i2___ftmul@f1,f,c
 10227  000D00  90D8               	bcf	status,0,c
 10228  000D02  361B               	rlcf	i2___ftmul@f2,f,c
 10229  000D04  361C               	rlcf	i2___ftmul@f2+1,f,c
 10230  000D06  361D               	rlcf	i2___ftmul@f2+2,f,c
 10231  000D08  2E25               	decfsz	i2___ftmul@cntr,f,c
 10232  000D0A  D7EE               	goto	i2l1071
 10233  000D0C  0E09               	movlw	9
 10234  000D0E  6E25               	movwf	i2___ftmul@cntr,c
 10235  000D10  A018               	btfss	i2___ftmul@f1,0,c
 10236  000D12  D006               	goto	i2l1075
 10237  000D14  501B               	movf	i2___ftmul@f2,w,c
 10238  000D16  2622               	addwf	i2___ftmul@f3_as_product,f,c
 10239  000D18  501C               	movf	i2___ftmul@f2+1,w,c
 10240  000D1A  2223               	addwfc	i2___ftmul@f3_as_product+1,f,c
 10241  000D1C  501D               	movf	i2___ftmul@f2+2,w,c
 10242  000D1E  2224               	addwfc	i2___ftmul@f3_as_product+2,f,c
 10243  000D20                     i2l1075:
 10244  000D20  90D8               	bcf	status,0,c
 10245  000D22  321A               	rrcf	i2___ftmul@f1+2,f,c
 10246  000D24  3219               	rrcf	i2___ftmul@f1+1,f,c
 10247  000D26  3218               	rrcf	i2___ftmul@f1,f,c
 10248  000D28  90D8               	bcf	status,0,c
 10249  000D2A  3224               	rrcf	i2___ftmul@f3_as_product+2,f,c
 10250  000D2C  3223               	rrcf	i2___ftmul@f3_as_product+1,f,c
 10251  000D2E  3222               	rrcf	i2___ftmul@f3_as_product,f,c
 10252  000D30  2E25               	decfsz	i2___ftmul@cntr,f,c
 10253  000D32  D7EE               	goto	i2l1074
 10254  000D34  C022  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 10255  000D38  C023  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 10256  000D3C  C024  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 10257  000D40  C021  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 10258  000D44  C026  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 10259  000D48  EC57  F008         	call	i2___ftpack	;wreg free
 10260  000D4C  C001  F018         	movff	?i2___ftpack,?i2___ftmul
 10261  000D50  C002  F019         	movff	?i2___ftpack+1,?i2___ftmul+1
 10262  000D54  C003  F01A         	movff	?i2___ftpack+2,?i2___ftmul+2
 10263  000D58  0012               	return	
 10264  000D5A                     __end_ofi2___ftmul:
 10265                           	opt stack 0
 10266                           tosu	equ	0xFFF
 10267                           tosh	equ	0xFFE
 10268                           tosl	equ	0xFFD
 10269                           pclatu	equ	0xFFB
 10270                           pclath	equ	0xFFA
 10271                           tblptru	equ	0xFF8
 10272                           tblptrh	equ	0xFF7
 10273                           tblptrl	equ	0xFF6
 10274                           tablat	equ	0xFF5
 10275                           prodh	equ	0xFF4
 10276                           prodl	equ	0xFF3
 10277                           intcon	equ	0xFF2
 10278                           indf0	equ	0xFEF
 10279                           postinc0	equ	0xFEE
 10280                           fsr0h	equ	0xFEA
 10281                           fsr0l	equ	0xFE9
 10282                           wreg	equ	0xFE8
 10283                           postdec1	equ	0xFE5
 10284                           fsr1h	equ	0xFE2
 10285                           fsr1l	equ	0xFE1
 10286                           indf2	equ	0xFDF
 10287                           fsr2h	equ	0xFDA
 10288                           fsr2l	equ	0xFD9
 10289                           status	equ	0xFD8
 10290                           
 10291 ;; *************** function i2___ftdiv *****************
 10292 ;; Defined at:
 10293 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 10294 ;; Parameters:    Size  Location     Type
 10295 ;;  f1              3    8[COMRAM] float 
 10296 ;;  f2              3   11[COMRAM] float 
 10297 ;; Auto vars:     Size  Location     Type
 10298 ;;  __ftdiv         3   18[COMRAM] float 
 10299 ;;  __ftdiv         1   22[COMRAM] unsigned char 
 10300 ;;  __ftdiv         1   21[COMRAM] unsigned char 
 10301 ;;  __ftdiv         1   17[COMRAM] unsigned char 
 10302 ;; Return value:  Size  Location     Type
 10303 ;;                  3    8[COMRAM] float 
 10304 ;; Registers used:
 10305 ;;		wreg, status,2, status,0, cstack
 10306 ;; Tracked objects:
 10307 ;;		On entry : 0/0
 10308 ;;		On exit  : 0/0
 10309 ;;		Unchanged: 0/0
 10310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10311 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10312 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10313 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10314 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10315 ;;Total ram usage:       15 bytes
 10316 ;; Hardware stack levels used:    1
 10317 ;; Hardware stack levels required when called:    1
 10318 ;; This function calls:
 10319 ;;		i2___ftpack
 10320 ;; This function is called by:
 10321 ;;		_Brightness_Menu_Function
 10322 ;; This function uses a non-reentrant model
 10323 ;;
 10324                           
 10325                           	psect	text64
 10326  000E42                     __ptext64:
 10327                           	opt stack 0
 10328  000E42                     i2___ftdiv:
 10329                           	opt stack 18
 10330                           
 10331                           ;incstack = 0
 10332  000E42  C00B  F00F         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 10333  000E46  6A10               	clrf	(??i2___ftdiv+1)& (0+255),c
 10334  000E48  6A11               	clrf	(??i2___ftdiv+2)& (0+255),c
 10335  000E4A  340A               	rlcf	i2___ftdiv@f1+1,w,c
 10336  000E4C  360F               	rlcf	??i2___ftdiv& (0+255),f,c
 10337  000E4E  E301               	bnc	u349_41
 10338  000E50  8010               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 10339  000E52                     u349_41:
 10340  000E52  500F               	movf	??i2___ftdiv,w,c
 10341  000E54  6E16               	movwf	i2___ftdiv@exp,c
 10342  000E56  5016               	movf	i2___ftdiv@exp,w,c
 10343  000E58  A4D8               	btfss	status,2,c
 10344  000E5A  D007               	goto	i2l1053
 10345  000E5C  0E00               	movlw	0
 10346  000E5E  6E09               	movwf	?i2___ftdiv,c
 10347  000E60  0E00               	movlw	0
 10348  000E62  6E0A               	movwf	?i2___ftdiv+1,c
 10349  000E64  0E00               	movlw	0
 10350  000E66  6E0B               	movwf	?i2___ftdiv+2,c
 10351  000E68  0012               	return	
 10352  000E6A                     i2l1053:
 10353  000E6A  C00E  F00F         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 10354  000E6E  6A10               	clrf	(??i2___ftdiv+1)& (0+255),c
 10355  000E70  6A11               	clrf	(??i2___ftdiv+2)& (0+255),c
 10356  000E72  340D               	rlcf	i2___ftdiv@f2+1,w,c
 10357  000E74  360F               	rlcf	??i2___ftdiv& (0+255),f,c
 10358  000E76  E301               	bnc	u351_41
 10359  000E78  8010               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 10360  000E7A                     u351_41:
 10361  000E7A  500F               	movf	??i2___ftdiv,w,c
 10362  000E7C  6E17               	movwf	i2___ftdiv@sign,c
 10363  000E7E  5017               	movf	i2___ftdiv@sign,w,c
 10364  000E80  A4D8               	btfss	status,2,c
 10365  000E82  D007               	goto	i2l1055
 10366  000E84  0E00               	movlw	0
 10367  000E86  6E09               	movwf	?i2___ftdiv,c
 10368  000E88  0E00               	movlw	0
 10369  000E8A  6E0A               	movwf	?i2___ftdiv+1,c
 10370  000E8C  0E00               	movlw	0
 10371  000E8E  6E0B               	movwf	?i2___ftdiv+2,c
 10372  000E90  0012               	return	
 10373  000E92                     i2l1055:
 10374  000E92  0E00               	movlw	0
 10375  000E94  6E13               	movwf	i2___ftdiv@f3,c
 10376  000E96  0E00               	movlw	0
 10377  000E98  6E14               	movwf	i2___ftdiv@f3+1,c
 10378  000E9A  0E00               	movlw	0
 10379  000E9C  6E15               	movwf	i2___ftdiv@f3+2,c
 10380  000E9E  5017               	movf	i2___ftdiv@sign,w,c
 10381  000EA0  0F89               	addlw	137
 10382  000EA2  5E16               	subwf	i2___ftdiv@exp,f,c
 10383  000EA4  C00B  F017         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 10384  000EA8  500E               	movf	i2___ftdiv@f2+2,w,c
 10385  000EAA  1A17               	xorwf	i2___ftdiv@sign,f,c
 10386  000EAC  0E80               	movlw	128
 10387  000EAE  1617               	andwf	i2___ftdiv@sign,f,c
 10388  000EB0  8E0A               	bsf	i2___ftdiv@f1+1,7,c
 10389  000EB2  0EFF               	movlw	255
 10390  000EB4  1609               	andwf	i2___ftdiv@f1,f,c
 10391  000EB6  0EFF               	movlw	255
 10392  000EB8  160A               	andwf	i2___ftdiv@f1+1,f,c
 10393  000EBA  0E00               	movlw	0
 10394  000EBC  160B               	andwf	i2___ftdiv@f1+2,f,c
 10395  000EBE  8E0D               	bsf	i2___ftdiv@f2+1,7,c
 10396  000EC0  0EFF               	movlw	255
 10397  000EC2  160C               	andwf	i2___ftdiv@f2,f,c
 10398  000EC4  0EFF               	movlw	255
 10399  000EC6  160D               	andwf	i2___ftdiv@f2+1,f,c
 10400  000EC8  0E00               	movlw	0
 10401  000ECA  160E               	andwf	i2___ftdiv@f2+2,f,c
 10402  000ECC  0E18               	movlw	24
 10403  000ECE  6E12               	movwf	i2___ftdiv@cntr,c
 10404  000ED0  90D8               	bcf	status,0,c
 10405  000ED2  3613               	rlcf	i2___ftdiv@f3,f,c
 10406  000ED4  3614               	rlcf	i2___ftdiv@f3+1,f,c
 10407  000ED6  3615               	rlcf	i2___ftdiv@f3+2,f,c
 10408  000ED8  500C               	movf	i2___ftdiv@f2,w,c
 10409  000EDA  5C09               	subwf	i2___ftdiv@f1,w,c
 10410  000EDC  500D               	movf	i2___ftdiv@f2+1,w,c
 10411  000EDE  580A               	subwfb	i2___ftdiv@f1+1,w,c
 10412  000EE0  500E               	movf	i2___ftdiv@f2+2,w,c
 10413  000EE2  580B               	subwfb	i2___ftdiv@f1+2,w,c
 10414  000EE4  A0D8               	btfss	status,0,c
 10415  000EE6  D007               	goto	i2l1057
 10416  000EE8  500C               	movf	i2___ftdiv@f2,w,c
 10417  000EEA  5E09               	subwf	i2___ftdiv@f1,f,c
 10418  000EEC  500D               	movf	i2___ftdiv@f2+1,w,c
 10419  000EEE  5A0A               	subwfb	i2___ftdiv@f1+1,f,c
 10420  000EF0  500E               	movf	i2___ftdiv@f2+2,w,c
 10421  000EF2  5A0B               	subwfb	i2___ftdiv@f1+2,f,c
 10422  000EF4  8013               	bsf	i2___ftdiv@f3,0,c
 10423  000EF6                     i2l1057:
 10424  000EF6  90D8               	bcf	status,0,c
 10425  000EF8  3609               	rlcf	i2___ftdiv@f1,f,c
 10426  000EFA  360A               	rlcf	i2___ftdiv@f1+1,f,c
 10427  000EFC  360B               	rlcf	i2___ftdiv@f1+2,f,c
 10428  000EFE  2E12               	decfsz	i2___ftdiv@cntr,f,c
 10429  000F00  D7E7               	goto	i2l1056
 10430  000F02  C013  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 10431  000F06  C014  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 10432  000F0A  C015  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 10433  000F0E  C016  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 10434  000F12  C017  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 10435  000F16  EC57  F008         	call	i2___ftpack	;wreg free
 10436  000F1A  C001  F009         	movff	?i2___ftpack,?i2___ftdiv
 10437  000F1E  C002  F00A         	movff	?i2___ftpack+1,?i2___ftdiv+1
 10438  000F22  C003  F00B         	movff	?i2___ftpack+2,?i2___ftdiv+2
 10439  000F26  0012               	return	
 10440  000F28                     __end_ofi2___ftdiv:
 10441                           	opt stack 0
 10442                           tosu	equ	0xFFF
 10443                           tosh	equ	0xFFE
 10444                           tosl	equ	0xFFD
 10445                           pclatu	equ	0xFFB
 10446                           pclath	equ	0xFFA
 10447                           tblptru	equ	0xFF8
 10448                           tblptrh	equ	0xFF7
 10449                           tblptrl	equ	0xFF6
 10450                           tablat	equ	0xFF5
 10451                           prodh	equ	0xFF4
 10452                           prodl	equ	0xFF3
 10453                           intcon	equ	0xFF2
 10454                           indf0	equ	0xFEF
 10455                           postinc0	equ	0xFEE
 10456                           fsr0h	equ	0xFEA
 10457                           fsr0l	equ	0xFE9
 10458                           wreg	equ	0xFE8
 10459                           postdec1	equ	0xFE5
 10460                           fsr1h	equ	0xFE2
 10461                           fsr1l	equ	0xFE1
 10462                           indf2	equ	0xFDF
 10463                           fsr2h	equ	0xFDA
 10464                           fsr2l	equ	0xFD9
 10465                           status	equ	0xFD8
 10466                           
 10467 ;; *************** function i2___awtoft *****************
 10468 ;; Defined at:
 10469 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;  c               2    8[COMRAM] int 
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;  __awtoft        1   11[COMRAM] unsigned char 
 10474 ;; Return value:  Size  Location     Type
 10475 ;;                  3    8[COMRAM] float 
 10476 ;; Registers used:
 10477 ;;		wreg, status,2, status,0, cstack
 10478 ;; Tracked objects:
 10479 ;;		On entry : 0/0
 10480 ;;		On exit  : 0/0
 10481 ;;		Unchanged: 0/0
 10482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10483 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10486 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10487 ;;Total ram usage:        4 bytes
 10488 ;; Hardware stack levels used:    1
 10489 ;; Hardware stack levels required when called:    1
 10490 ;; This function calls:
 10491 ;;		i2___ftpack
 10492 ;; This function is called by:
 10493 ;;		_Brightness_Menu_Function
 10494 ;; This function uses a non-reentrant model
 10495 ;;
 10496                           
 10497                           	psect	text65
 10498  00220C                     __ptext65:
 10499                           	opt stack 0
 10500  00220C                     i2___awtoft:
 10501                           	opt stack 18
 10502                           
 10503                           ;incstack = 0
 10504  00220C  0E00               	movlw	0
 10505  00220E  6E0C               	movwf	i2___awtoft@sign,c
 10506  002210  AE0A               	btfss	i2___awtoft@c+1,7,c
 10507  002212  D006               	goto	i2l970
 10508  002214  6C09               	negf	i2___awtoft@c,c
 10509  002216  1E0A               	comf	i2___awtoft@c+1,f,c
 10510  002218  B0D8               	btfsc	status,0,c
 10511  00221A  2A0A               	incf	i2___awtoft@c+1,f,c
 10512  00221C  0E01               	movlw	1
 10513  00221E  6E0C               	movwf	i2___awtoft@sign,c
 10514  002220                     i2l970:
 10515  002220  C009  F001         	movff	i2___awtoft@c,i2___ftpack@arg
 10516  002224  C00A  F002         	movff	i2___awtoft@c+1,i2___ftpack@arg+1
 10517  002228  6A03               	clrf	i2___ftpack@arg+2,c
 10518  00222A  0E8E               	movlw	142
 10519  00222C  6E04               	movwf	i2___ftpack@exp,c
 10520  00222E  C00C  F005         	movff	i2___awtoft@sign,i2___ftpack@sign
 10521  002232  EC57  F008         	call	i2___ftpack	;wreg free
 10522  002236  C001  F009         	movff	?i2___ftpack,?i2___awtoft
 10523  00223A  C002  F00A         	movff	?i2___ftpack+1,?i2___awtoft+1
 10524  00223E  C003  F00B         	movff	?i2___ftpack+2,?i2___awtoft+2
 10525  002242  0012               	return	
 10526  002244                     __end_ofi2___awtoft:
 10527                           	opt stack 0
 10528                           tosu	equ	0xFFF
 10529                           tosh	equ	0xFFE
 10530                           tosl	equ	0xFFD
 10531                           pclatu	equ	0xFFB
 10532                           pclath	equ	0xFFA
 10533                           tblptru	equ	0xFF8
 10534                           tblptrh	equ	0xFF7
 10535                           tblptrl	equ	0xFF6
 10536                           tablat	equ	0xFF5
 10537                           prodh	equ	0xFF4
 10538                           prodl	equ	0xFF3
 10539                           intcon	equ	0xFF2
 10540                           indf0	equ	0xFEF
 10541                           postinc0	equ	0xFEE
 10542                           fsr0h	equ	0xFEA
 10543                           fsr0l	equ	0xFE9
 10544                           wreg	equ	0xFE8
 10545                           postdec1	equ	0xFE5
 10546                           fsr1h	equ	0xFE2
 10547                           fsr1l	equ	0xFE1
 10548                           indf2	equ	0xFDF
 10549                           fsr2h	equ	0xFDA
 10550                           fsr2l	equ	0xFD9
 10551                           status	equ	0xFD8
 10552                           
 10553 ;; *************** function i2_PWM2_LoadDutyValue *****************
 10554 ;; Defined at:
 10555 ;;		line 80 in file "mcc_generated_files/pwm2.c"
 10556 ;; Parameters:    Size  Location     Type
 10557 ;;  dutyValue       2   15[COMRAM] unsigned int 
 10558 ;; Auto vars:     Size  Location     Type
 10559 ;;		None
 10560 ;; Return value:  Size  Location     Type
 10561 ;;                  1    wreg      void 
 10562 ;; Registers used:
 10563 ;;		wreg, status,2, status,0
 10564 ;; Tracked objects:
 10565 ;;		On entry : 0/0
 10566 ;;		On exit  : 0/0
 10567 ;;		Unchanged: 0/0
 10568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10571 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10572 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10573 ;;Total ram usage:        4 bytes
 10574 ;; Hardware stack levels used:    1
 10575 ;; This function calls:
 10576 ;;		Nothing
 10577 ;; This function is called by:
 10578 ;;		_Brightness_Menu_Function
 10579 ;; This function uses a non-reentrant model
 10580 ;;
 10581                           
 10582                           	psect	text66
 10583  0022AC                     __ptext66:
 10584                           	opt stack 0
 10585  0022AC                     i2_PWM2_LoadDutyValue:
 10586                           	opt stack 19
 10587                           
 10588                           ;pwm2.c: 83: CCPR2L = ((dutyValue & 0x03FC)>>2);
 10589                           
 10590                           ;incstack = 0
 10591  0022AC  C010  F012         	movff	i2PWM2_LoadDutyValue@dutyValue,??i2_PWM2_LoadDutyValue
 10592  0022B0  C011  F013         	movff	i2PWM2_LoadDutyValue@dutyValue+1,??i2_PWM2_LoadDutyValue+1
 10593  0022B4  90D8               	bcf	status,0,c
 10594  0022B6  3213               	rrcf	??i2_PWM2_LoadDutyValue+1,f,c
 10595  0022B8  3212               	rrcf	??i2_PWM2_LoadDutyValue,f,c
 10596  0022BA  90D8               	bcf	status,0,c
 10597  0022BC  3213               	rrcf	??i2_PWM2_LoadDutyValue+1,f,c
 10598  0022BE  3212               	rrcf	??i2_PWM2_LoadDutyValue,f,c
 10599  0022C0  5012               	movf	??i2_PWM2_LoadDutyValue,w,c
 10600  0022C2  010F               	movlb	15	; () banked
 10601  0022C4  6F51               	movwf	81,b	;volatile
 10602                           
 10603                           ;pwm2.c: 86: CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4));
 10604  0022C6  C010  F012         	movff	i2PWM2_LoadDutyValue@dutyValue,??i2_PWM2_LoadDutyValue
 10605  0022CA  0E03               	movlw	3
 10606  0022CC  1612               	andwf	??i2_PWM2_LoadDutyValue,f,c
 10607  0022CE  3A12               	swapf	??i2_PWM2_LoadDutyValue,f,c
 10608  0022D0  0EF0               	movlw	240
 10609  0022D2  1612               	andwf	??i2_PWM2_LoadDutyValue,f,c
 10610  0022D4  5150               	movf	80,w,b	;volatile
 10611  0022D6  0BCF               	andlw	207
 10612  0022D8  1012               	iorwf	??i2_PWM2_LoadDutyValue,w,c
 10613  0022DA  6F50               	movwf	80,b	;volatile
 10614                           
 10615                           ; BSR set to: 15
 10616  0022DC  0012               	return		;funcret
 10617  0022DE                     __end_ofi2_PWM2_LoadDutyValue:
 10618                           	opt stack 0
 10619                           tosu	equ	0xFFF
 10620                           tosh	equ	0xFFE
 10621                           tosl	equ	0xFFD
 10622                           pclatu	equ	0xFFB
 10623                           pclath	equ	0xFFA
 10624                           tblptru	equ	0xFF8
 10625                           tblptrh	equ	0xFF7
 10626                           tblptrl	equ	0xFF6
 10627                           tablat	equ	0xFF5
 10628                           prodh	equ	0xFF4
 10629                           prodl	equ	0xFF3
 10630                           intcon	equ	0xFF2
 10631                           indf0	equ	0xFEF
 10632                           postinc0	equ	0xFEE
 10633                           fsr0h	equ	0xFEA
 10634                           fsr0l	equ	0xFE9
 10635                           wreg	equ	0xFE8
 10636                           postdec1	equ	0xFE5
 10637                           fsr1h	equ	0xFE2
 10638                           fsr1l	equ	0xFE1
 10639                           indf2	equ	0xFDF
 10640                           fsr2h	equ	0xFDA
 10641                           fsr2l	equ	0xFD9
 10642                           status	equ	0xFD8
 10643                           
 10644 ;; *************** function i2_GLCD_WriteString *****************
 10645 ;; Defined at:
 10646 ;;		line 70 in file "ks0108lib/KS0108.c"
 10647 ;; Parameters:    Size  Location     Type
 10648 ;;  stringToWrit    2   13[COMRAM] PTR unsigned char 
 10649 ;;		 -> STR_21(5), STR_20(4), Draw_Brightness_Menu@display(10), STR_19(13), 
 10650 ;;		 -> STR_18(17), STR_17(5), STR_16(7), STR_15(13), 
 10651 ;;		 -> STR_14(7), Draw_runTime_Menu@display(10), STR_13(11), STR_12(10), 
 10652 ;;		 -> STR_11(9), STR_10(10), STR_9(9), STR_8(11), 
 10653 ;;		 -> STR_7(11), STR_6(4), Initialize_Menus@display(10), STR_5(8), 
 10654 ;;		 -> STR_4(7), STR_3(10), STR_2(5), Brightness_Menu_Function@display(10), 
 10655 ;;		 -> STR_1(7), Run_Time_Menu_Function@display(10), 
 10656 ;; Auto vars:     Size  Location     Type
 10657 ;;		None
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  1    wreg      void 
 10660 ;; Registers used:
 10661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10671 ;;Total ram usage:        2 bytes
 10672 ;; Hardware stack levels used:    1
 10673 ;; Hardware stack levels required when called:    4
 10674 ;; This function calls:
 10675 ;;		i2_GLCD_WriteChar
 10676 ;; This function is called by:
 10677 ;;		_Run_Time_Menu_Function
 10678 ;;		_Brightness_Menu_Function
 10679 ;; This function uses a non-reentrant model
 10680 ;;
 10681                           
 10682                           	psect	text67
 10683  001C5E                     __ptext67:
 10684                           	opt stack 0
 10685  001C5E                     i2_GLCD_WriteString:
 10686                           	opt stack 15
 10687                           
 10688                           ;KS0108.c: 72: while(*stringToWrite)
 10689                           
 10690                           ; BSR set to: 15
 10691                           ;incstack = 0
 10692  001C5E  D015               	goto	i2l533
 10693  001C60                     
 10694                           ;KS0108.c: 73: GLCD_WriteChar(*stringToWrite++);
 10695  001C60  C00E  FFF6         	movff	i2GLCD_WriteString@stringToWrite,tblptrl
 10696  001C64  C00F  FFF7         	movff	i2GLCD_WriteString@stringToWrite+1,tblptrh
 10697  001C68  0E00               	movlw	low (__mediumconst shr (0+16))
 10698  001C6A  6EF8               	movwf	tblptru,c
 10699  001C6C  0E0E               	movlw	(high __ramtop+-1)
 10700  001C6E  64F7               	cpfsgt	tblptrh,c
 10701  001C70  D003               	bra	i2u345_47
 10702  001C72  0008               	tblrd		*
 10703  001C74  50F5               	movf	tablat,w,c
 10704  001C76  D005               	bra	i2u345_40
 10705  001C78                     i2u345_47:
 10706  001C78  CFF6 FFE9          	movff	tblptrl,fsr0l
 10707  001C7C  CFF7 FFEA          	movff	tblptrh,fsr0h
 10708  001C80  50EF               	movf	indf0,w,c
 10709  001C82                     i2u345_40:
 10710  001C82  EC7F  F00F         	call	i2_GLCD_WriteChar
 10711  001C86  4A0E               	infsnz	i2GLCD_WriteString@stringToWrite,f,c
 10712  001C88  2A0F               	incf	i2GLCD_WriteString@stringToWrite+1,f,c
 10713  001C8A                     i2l533:
 10714  001C8A  C00E  FFF6         	movff	i2GLCD_WriteString@stringToWrite,tblptrl
 10715  001C8E  C00F  FFF7         	movff	i2GLCD_WriteString@stringToWrite+1,tblptrh
 10716  001C92  0E00               	movlw	low (__mediumconst shr (0+16))
 10717  001C94  6EF8               	movwf	tblptru,c
 10718  001C96  0E0E               	movlw	(high __ramtop+-1)
 10719  001C98  64F7               	cpfsgt	tblptrh,c
 10720  001C9A  D003               	bra	i2u346_47
 10721  001C9C  0008               	tblrd		*
 10722  001C9E  50F5               	movf	tablat,w,c
 10723  001CA0  D005               	bra	i2u346_40
 10724  001CA2                     i2u346_47:
 10725  001CA2  CFF6 FFE9          	movff	tblptrl,fsr0l
 10726  001CA6  CFF7 FFEA          	movff	tblptrh,fsr0h
 10727  001CAA  50EF               	movf	indf0,w,c
 10728  001CAC                     i2u346_40:
 10729  001CAC  0900               	iorlw	0
 10730  001CAE  B4D8               	btfsc	status,2,c
 10731  001CB0  0012               	return	
 10732  001CB2  D7D6               	goto	i2l534
 10733  001CB4                     __end_ofi2_GLCD_WriteString:
 10734                           	opt stack 0
 10735                           tosu	equ	0xFFF
 10736                           tosh	equ	0xFFE
 10737                           tosl	equ	0xFFD
 10738                           pclatu	equ	0xFFB
 10739                           pclath	equ	0xFFA
 10740                           tblptru	equ	0xFF8
 10741                           tblptrh	equ	0xFF7
 10742                           tblptrl	equ	0xFF6
 10743                           tablat	equ	0xFF5
 10744                           prodh	equ	0xFF4
 10745                           prodl	equ	0xFF3
 10746                           intcon	equ	0xFF2
 10747                           indf0	equ	0xFEF
 10748                           postinc0	equ	0xFEE
 10749                           fsr0h	equ	0xFEA
 10750                           fsr0l	equ	0xFE9
 10751                           wreg	equ	0xFE8
 10752                           postdec1	equ	0xFE5
 10753                           fsr1h	equ	0xFE2
 10754                           fsr1l	equ	0xFE1
 10755                           indf2	equ	0xFDF
 10756                           fsr2h	equ	0xFDA
 10757                           fsr2l	equ	0xFD9
 10758                           status	equ	0xFD8
 10759                           
 10760 ;; *************** function i2_GLCD_WriteChar *****************
 10761 ;; Defined at:
 10762 ;;		line 56 in file "ks0108lib/KS0108.c"
 10763 ;; Parameters:    Size  Location     Type
 10764 ;;  charToWrite     1    wreg     unsigned char 
 10765 ;; Auto vars:     Size  Location     Type
 10766 ;;  charToWrite     1   10[COMRAM] unsigned char 
 10767 ;;  GLCD_WriteCh    2   11[COMRAM] int 
 10768 ;; Return value:  Size  Location     Type
 10769 ;;                  1    wreg      void 
 10770 ;; Registers used:
 10771 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10772 ;; Tracked objects:
 10773 ;;		On entry : 0/0
 10774 ;;		On exit  : 0/0
 10775 ;;		Unchanged: 0/0
 10776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10778 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10780 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10781 ;;Total ram usage:        3 bytes
 10782 ;; Hardware stack levels used:    1
 10783 ;; Hardware stack levels required when called:    3
 10784 ;; This function calls:
 10785 ;;		i2_GLCD_WriteData
 10786 ;; This function is called by:
 10787 ;;		i2_GLCD_WriteString
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           	psect	text68
 10792  001EFE                     __ptext68:
 10793                           	opt stack 0
 10794  001EFE                     i2_GLCD_WriteChar:
 10795                           	opt stack 15
 10796                           
 10797                           ;incstack = 0
 10798                           ;i2GLCD_WriteChar@charToWrite stored from wreg
 10799  001EFE  6E0B               	movwf	i2GLCD_WriteChar@charToWrite,c
 10800                           
 10801                           ;KS0108.c: 58: int i;
 10802                           ;KS0108.c: 59: charToWrite -= 32;
 10803  001F00  0E20               	movlw	32
 10804  001F02  5E0B               	subwf	i2GLCD_WriteChar@charToWrite,f,c
 10805                           
 10806                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
 10807  001F04  0E00               	movlw	0
 10808  001F06  6E0D               	movwf	i2GLCD_WriteChar@i+1,c
 10809  001F08  0E00               	movlw	0
 10810  001F0A  6E0C               	movwf	i2GLCD_WriteChar@i,c
 10811  001F0C                     i2l3984:
 10812  001F0C  BE0D               	btfsc	i2GLCD_WriteChar@i+1,7,c
 10813  001F0E  D006               	goto	i2l528
 10814  001F10  500D               	movf	i2GLCD_WriteChar@i+1,w,c
 10815  001F12  E11A               	bnz	i2l3994
 10816  001F14  0E05               	movlw	5
 10817  001F16  5C0C               	subwf	i2GLCD_WriteChar@i,w,c
 10818  001F18  B0D8               	btfsc	status,0,c
 10819  001F1A  D016               	goto	i2u288_40
 10820  001F1C                     i2l528:
 10821                           
 10822                           ;KS0108.c: 61: {
 10823                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
 10824  001F1C  500B               	movf	i2GLCD_WriteChar@charToWrite,w,c
 10825  001F1E  0D05               	mullw	5
 10826  001F20  500C               	movf	i2GLCD_WriteChar@i,w,c
 10827  001F22  26F3               	addwf	prodl,f,c
 10828  001F24  500D               	movf	i2GLCD_WriteChar@i+1,w,c
 10829  001F26  22F4               	addwfc	prodh,f,c
 10830  001F28  0E85               	movlw	low _font5x8
 10831  001F2A  24F3               	addwf	prodl,w,c
 10832  001F2C  6EF6               	movwf	tblptrl,c
 10833  001F2E  0EFD               	movlw	high _font5x8
 10834  001F30  20F4               	addwfc	prodh,w,c
 10835  001F32  6EF7               	movwf	tblptrh,c
 10836  001F34                     	if	1	;There are 3 active tblptr bytes
 10837  001F34  6AF8               	clrf	tblptru,c
 10838  001F36  0E00               	movlw	low (__mediumconst shr (0+16))
 10839  001F38  22F8               	addwfc	tblptru,f,c
 10840  001F3A                     	endif
 10841  001F3A  0008               	tblrd		*
 10842  001F3C  50F5               	movf	tablat,w,c
 10843  001F3E  ECEC  F00C         	call	i2_GLCD_WriteData
 10844  001F42  4A0C               	infsnz	i2GLCD_WriteChar@i,f,c
 10845  001F44  2A0D               	incf	i2GLCD_WriteChar@i+1,f,c
 10846  001F46  D7E2               	goto	i2l3984
 10847  001F48                     i2u288_40:
 10848  001F48                     i2l3994:
 10849                           
 10850                           ;KS0108.c: 64: }
 10851                           ;KS0108.c: 65: GLCD_WriteData(0x00);
 10852  001F48  0E00               	movlw	0
 10853  001F4A  ECEC  F00C         	call	i2_GLCD_WriteData
 10854  001F4E  0012               	return		;funcret
 10855  001F50                     __end_ofi2_GLCD_WriteChar:
 10856                           	opt stack 0
 10857                           tosu	equ	0xFFF
 10858                           tosh	equ	0xFFE
 10859                           tosl	equ	0xFFD
 10860                           pclatu	equ	0xFFB
 10861                           pclath	equ	0xFFA
 10862                           tblptru	equ	0xFF8
 10863                           tblptrh	equ	0xFF7
 10864                           tblptrl	equ	0xFF6
 10865                           tablat	equ	0xFF5
 10866                           prodh	equ	0xFF4
 10867                           prodl	equ	0xFF3
 10868                           intcon	equ	0xFF2
 10869                           indf0	equ	0xFEF
 10870                           postinc0	equ	0xFEE
 10871                           fsr0h	equ	0xFEA
 10872                           fsr0l	equ	0xFE9
 10873                           wreg	equ	0xFE8
 10874                           postdec1	equ	0xFE5
 10875                           fsr1h	equ	0xFE2
 10876                           fsr1l	equ	0xFE1
 10877                           indf2	equ	0xFDF
 10878                           fsr2h	equ	0xFDA
 10879                           fsr2l	equ	0xFD9
 10880                           status	equ	0xFD8
 10881                           
 10882 ;; *************** function i2_Draw_Arrow *****************
 10883 ;; Defined at:
 10884 ;;		line 51 in file "screen_controls.c"
 10885 ;; Parameters:    Size  Location     Type
 10886 ;;		None
 10887 ;; Auto vars:     Size  Location     Type
 10888 ;;		None
 10889 ;; Return value:  Size  Location     Type
 10890 ;;                  1    wreg      void 
 10891 ;; Registers used:
 10892 ;;		wreg, status,2, status,0, cstack
 10893 ;; Tracked objects:
 10894 ;;		On entry : 0/0
 10895 ;;		On exit  : 0/0
 10896 ;;		Unchanged: 0/0
 10897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10902 ;;Total ram usage:        0 bytes
 10903 ;; Hardware stack levels used:    1
 10904 ;; Hardware stack levels required when called:    5
 10905 ;; This function calls:
 10906 ;;		i2_Clear_Arrow_Column
 10907 ;;		i2_Clear_Brightness_Arrows
 10908 ;;		i2_Clear_runTime_Arrows
 10909 ;;		i2_Draw_Brightness_Arrow
 10910 ;;		i2_Draw_runTime_Arrow
 10911 ;;		i2_GLCD_GoTo
 10912 ;;		i2_Make_Arrow
 10913 ;; This function is called by:
 10914 ;;		_Main_Menu_Function
 10915 ;;		_Run_Time_Menu_Function
 10916 ;;		_Brightness_Menu_Function
 10917 ;; This function uses a non-reentrant model
 10918 ;;
 10919                           
 10920                           	psect	text69
 10921  001DB0                     __ptext69:
 10922                           	opt stack 0
 10923  001DB0                     i2_Draw_Arrow:
 10924                           	opt stack 14
 10925                           
 10926                           ;screen_controls.c: 55: switch(currentContext)
 10927                           
 10928                           ;incstack = 0
 10929  001DB0  D01E               	goto	i2l668
 10930  001DB2                     
 10931                           ;screen_controls.c: 58: Clear_Arrow_Column();
 10932  001DB2  EC7E  F00D         	call	i2_Clear_Arrow_Column	;wreg free
 10933                           
 10934                           ;screen_controls.c: 59: GLCD_GoTo(0, mainState);
 10935  001DB6  C052  F00C         	movff	_mainState,i2GLCD_GoTo@y
 10936  001DBA  0E00               	movlw	0
 10937  001DBC  ECC9  F00B         	call	i2_GLCD_GoTo
 10938                           
 10939                           ;screen_controls.c: 60: Make_Arrow();
 10940  001DC0  EC5B  F012         	call	i2_Make_Arrow	;wreg free
 10941                           
 10942                           ;screen_controls.c: 61: break;
 10943  001DC4  0012               	return	
 10944  001DC6                     
 10945                           ;screen_controls.c: 64: Clear_runTime_Arrows();
 10946  001DC6  EC8C  F00B         	call	i2_Clear_runTime_Arrows	;wreg free
 10947                           
 10948                           ;screen_controls.c: 65: Draw_runTime_Arrow();
 10949  001DCA  ECB4  F00C         	call	i2_Draw_runTime_Arrow	;wreg free
 10950                           
 10951                           ;screen_controls.c: 66: break;
 10952  001DCE  0012               	return	
 10953  001DD0                     
 10954                           ;screen_controls.c: 69: Clear_Brightness_Arrows();
 10955  001DD0  EC2C  F00F         	call	i2_Clear_Brightness_Arrows	;wreg free
 10956                           
 10957                           ;screen_controls.c: 70: Draw_Brightness_Arrow();
 10958  001DD4  EC02  F00F         	call	i2_Draw_Brightness_Arrow	;wreg free
 10959                           
 10960                           ;screen_controls.c: 71: break;
 10961  001DD8  0012               	return	
 10962  001DDA                     
 10963                           ;screen_controls.c: 74: Clear_Arrow_Column();
 10964  001DDA  EC7E  F00D         	call	i2_Clear_Arrow_Column	;wreg free
 10965                           
 10966                           ;screen_controls.c: 75: GLCD_GoTo(0, mainState);
 10967  001DDE  C052  F00C         	movff	_mainState,i2GLCD_GoTo@y
 10968  001DE2  0E00               	movlw	0
 10969  001DE4  ECC9  F00B         	call	i2_GLCD_GoTo
 10970                           
 10971                           ;screen_controls.c: 76: Make_Arrow();
 10972  001DE8  EC5B  F012         	call	i2_Make_Arrow	;wreg free
 10973                           
 10974                           ;screen_controls.c: 78: }
 10975                           
 10976                           ;screen_controls.c: 77: break;
 10977  001DEC  0012               	return	
 10978  001DEE                     i2l668:
 10979  001DEE  5051               	movf	_currentContext,w,c
 10980                           
 10981                           ; Switch size 1, requested type "space"
 10982                           ; Number of cases is 3, Range of values is 0 to 2
 10983                           ; switch strategies available:
 10984                           ; Name         Instructions Cycles
 10985                           ; simple_byte           10     6 (average)
 10986                           ;	Chosen strategy is simple_byte
 10987  001DF0  0A00               	xorlw	0	; case 0
 10988  001DF2  B4D8               	btfsc	status,2,c
 10989  001DF4  D7DE               	goto	i2l669
 10990  001DF6  0A01               	xorlw	1	; case 1
 10991  001DF8  B4D8               	btfsc	status,2,c
 10992  001DFA  D7E5               	goto	i2l671
 10993  001DFC  0A03               	xorlw	3	; case 2
 10994  001DFE  B4D8               	btfsc	status,2,c
 10995  001E00  D7E7               	goto	i2l672
 10996  001E02  D7EB               	goto	i2l673
 10997  001E04                     __end_ofi2_Draw_Arrow:
 10998                           	opt stack 0
 10999                           tosu	equ	0xFFF
 11000                           tosh	equ	0xFFE
 11001                           tosl	equ	0xFFD
 11002                           pclatu	equ	0xFFB
 11003                           pclath	equ	0xFFA
 11004                           tblptru	equ	0xFF8
 11005                           tblptrh	equ	0xFF7
 11006                           tblptrl	equ	0xFF6
 11007                           tablat	equ	0xFF5
 11008                           prodh	equ	0xFF4
 11009                           prodl	equ	0xFF3
 11010                           intcon	equ	0xFF2
 11011                           indf0	equ	0xFEF
 11012                           postinc0	equ	0xFEE
 11013                           fsr0h	equ	0xFEA
 11014                           fsr0l	equ	0xFE9
 11015                           wreg	equ	0xFE8
 11016                           postdec1	equ	0xFE5
 11017                           fsr1h	equ	0xFE2
 11018                           fsr1l	equ	0xFE1
 11019                           indf2	equ	0xFDF
 11020                           fsr2h	equ	0xFDA
 11021                           fsr2l	equ	0xFD9
 11022                           status	equ	0xFD8
 11023                           
 11024 ;; *************** function i2_Draw_runTime_Arrow *****************
 11025 ;; Defined at:
 11026 ;;		line 197 in file "screen_controls.c"
 11027 ;; Parameters:    Size  Location     Type
 11028 ;;		None
 11029 ;; Auto vars:     Size  Location     Type
 11030 ;;		None
 11031 ;; Return value:  Size  Location     Type
 11032 ;;                  1    wreg      void 
 11033 ;; Registers used:
 11034 ;;		wreg, status,2, status,0, cstack
 11035 ;; Tracked objects:
 11036 ;;		On entry : 0/0
 11037 ;;		On exit  : 0/0
 11038 ;;		Unchanged: 0/0
 11039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11044 ;;Total ram usage:        0 bytes
 11045 ;; Hardware stack levels used:    1
 11046 ;; Hardware stack levels required when called:    4
 11047 ;; This function calls:
 11048 ;;		i2_GLCD_GoTo
 11049 ;;		i2_Make_Arrow
 11050 ;; This function is called by:
 11051 ;;		i2_Draw_Arrow
 11052 ;; This function uses a non-reentrant model
 11053 ;;
 11054                           
 11055                           	psect	text70
 11056  001968                     __ptext70:
 11057                           	opt stack 0
 11058  001968                     i2_Draw_runTime_Arrow:
 11059                           	opt stack 14
 11060                           
 11061                           ;screen_controls.c: 199: switch(runTimeContext)
 11062                           
 11063                           ;incstack = 0
 11064  001968  D02C               	goto	i2l709
 11065  00196A                     
 11066                           ;screen_controls.c: 202: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 11067  00196A  0E02               	movlw	2
 11068  00196C  6E0C               	movwf	i2GLCD_GoTo@y,c
 11069  00196E  0100               	movlb	0	; () banked
 11070  001970  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11071  001972  0800               	sublw	0
 11072  001974  25A8               	addwf	_runTimeX& (0+255),w,b
 11073  001976  ECC9  F00B         	call	i2_GLCD_GoTo
 11074                           
 11075                           ;screen_controls.c: 203: Make_Arrow();
 11076  00197A  EC5B  F012         	call	i2_Make_Arrow	;wreg free
 11077                           
 11078                           ;screen_controls.c: 204: break;
 11079  00197E  0012               	return	
 11080  001980                     
 11081                           ;screen_controls.c: 207: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
 11082  001980  0E04               	movlw	4
 11083  001982  6E0C               	movwf	i2GLCD_GoTo@y,c
 11084  001984  0100               	movlb	0	; () banked
 11085  001986  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11086  001988  0800               	sublw	0
 11087  00198A  25A8               	addwf	_runTimeX& (0+255),w,b
 11088  00198C  ECC9  F00B         	call	i2_GLCD_GoTo
 11089                           
 11090                           ;screen_controls.c: 208: Make_Arrow();
 11091  001990  EC5B  F012         	call	i2_Make_Arrow	;wreg free
 11092                           
 11093                           ;screen_controls.c: 209: break;
 11094  001994  0012               	return	
 11095  001996                     
 11096                           ;screen_controls.c: 212: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
 11097  001996  0E06               	movlw	6
 11098  001998  6E0C               	movwf	i2GLCD_GoTo@y,c
 11099  00199A  0100               	movlb	0	; () banked
 11100  00199C  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11101  00199E  0800               	sublw	0
 11102  0019A0  25A8               	addwf	_runTimeX& (0+255),w,b
 11103  0019A2  ECC9  F00B         	call	i2_GLCD_GoTo
 11104                           
 11105                           ;screen_controls.c: 213: Make_Arrow();
 11106  0019A6  EC5B  F012         	call	i2_Make_Arrow	;wreg free
 11107                           
 11108                           ;screen_controls.c: 215: break;
 11109                           
 11110                           ;screen_controls.c: 214: break;
 11111  0019AA  0012               	return	
 11112  0019AC                     
 11113                           ;screen_controls.c: 218: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 11114  0019AC  0E02               	movlw	2
 11115  0019AE  6E0C               	movwf	i2GLCD_GoTo@y,c
 11116  0019B0  0100               	movlb	0	; () banked
 11117  0019B2  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11118  0019B4  0800               	sublw	0
 11119  0019B6  25A8               	addwf	_runTimeX& (0+255),w,b
 11120  0019B8  ECC9  F00B         	call	i2_GLCD_GoTo
 11121                           
 11122                           ;screen_controls.c: 219: Make_Arrow();
 11123  0019BC  EC5B  F012         	call	i2_Make_Arrow	;wreg free
 11124                           
 11125                           ;screen_controls.c: 223: }
 11126                           
 11127                           ;screen_controls.c: 220: break;
 11128  0019C0  0012               	return	
 11129  0019C2                     i2l709:
 11130  0019C2  5050               	movf	_runTimeContext,w,c
 11131                           
 11132                           ; Switch size 1, requested type "space"
 11133                           ; Number of cases is 3, Range of values is 0 to 2
 11134                           ; switch strategies available:
 11135                           ; Name         Instructions Cycles
 11136                           ; simple_byte           10     6 (average)
 11137                           ;	Chosen strategy is simple_byte
 11138  0019C4  0A00               	xorlw	0	; case 0
 11139  0019C6  B4D8               	btfsc	status,2,c
 11140  0019C8  D7D0               	goto	i2l710
 11141  0019CA  0A01               	xorlw	1	; case 1
 11142  0019CC  B4D8               	btfsc	status,2,c
 11143  0019CE  D7D8               	goto	i2l712
 11144  0019D0  0A03               	xorlw	3	; case 2
 11145  0019D2  B4D8               	btfsc	status,2,c
 11146  0019D4  D7E0               	goto	i2l713
 11147  0019D6  D7EA               	goto	i2l714
 11148  0019D8                     __end_ofi2_Draw_runTime_Arrow:
 11149                           	opt stack 0
 11150                           tosu	equ	0xFFF
 11151                           tosh	equ	0xFFE
 11152                           tosl	equ	0xFFD
 11153                           pclatu	equ	0xFFB
 11154                           pclath	equ	0xFFA
 11155                           tblptru	equ	0xFF8
 11156                           tblptrh	equ	0xFF7
 11157                           tblptrl	equ	0xFF6
 11158                           tablat	equ	0xFF5
 11159                           prodh	equ	0xFF4
 11160                           prodl	equ	0xFF3
 11161                           intcon	equ	0xFF2
 11162                           indf0	equ	0xFEF
 11163                           postinc0	equ	0xFEE
 11164                           fsr0h	equ	0xFEA
 11165                           fsr0l	equ	0xFE9
 11166                           wreg	equ	0xFE8
 11167                           postdec1	equ	0xFE5
 11168                           fsr1h	equ	0xFE2
 11169                           fsr1l	equ	0xFE1
 11170                           indf2	equ	0xFDF
 11171                           fsr2h	equ	0xFDA
 11172                           fsr2l	equ	0xFD9
 11173                           status	equ	0xFD8
 11174                           
 11175 ;; *************** function i2_Draw_Brightness_Arrow *****************
 11176 ;; Defined at:
 11177 ;;		line 246 in file "screen_controls.c"
 11178 ;; Parameters:    Size  Location     Type
 11179 ;;		None
 11180 ;; Auto vars:     Size  Location     Type
 11181 ;;		None
 11182 ;; Return value:  Size  Location     Type
 11183 ;;                  1    wreg      void 
 11184 ;; Registers used:
 11185 ;;		wreg, status,2, status,0, cstack
 11186 ;; Tracked objects:
 11187 ;;		On entry : 0/0
 11188 ;;		On exit  : 0/0
 11189 ;;		Unchanged: 0/0
 11190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11195 ;;Total ram usage:        0 bytes
 11196 ;; Hardware stack levels used:    1
 11197 ;; Hardware stack levels required when called:    4
 11198 ;; This function calls:
 11199 ;;		i2_GLCD_GoTo
 11200 ;;		i2_Make_Arrow
 11201 ;; This function is called by:
 11202 ;;		i2_Draw_Arrow
 11203 ;; This function uses a non-reentrant model
 11204 ;;
 11205                           
 11206                           	psect	text71
 11207  001E04                     __ptext71:
 11208                           	opt stack 0
 11209  001E04                     i2_Draw_Brightness_Arrow:
 11210                           	opt stack 14
 11211                           
 11212                           ;screen_controls.c: 248: switch(brightnessContext)
 11213                           
 11214                           ;incstack = 0
 11215  001E04  D021               	goto	i2l727
 11216  001E06                     
 11217                           ;screen_controls.c: 251: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 11218  001E06  0E02               	movlw	2
 11219  001E08  6E0C               	movwf	i2GLCD_GoTo@y,c
 11220  001E0A  0100               	movlb	0	; () banked
 11221  001E0C  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11222  001E0E  0800               	sublw	0
 11223  001E10  25A8               	addwf	_runTimeX& (0+255),w,b
 11224  001E12  ECC9  F00B         	call	i2_GLCD_GoTo
 11225                           
 11226                           ;screen_controls.c: 252: Make_Arrow();
 11227  001E16  EC5B  F012         	call	i2_Make_Arrow	;wreg free
 11228                           
 11229                           ;screen_controls.c: 253: break;
 11230  001E1A  0012               	return	
 11231  001E1C                     
 11232                           ;screen_controls.c: 256: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
 11233  001E1C  0E06               	movlw	6
 11234  001E1E  6E0C               	movwf	i2GLCD_GoTo@y,c
 11235  001E20  0100               	movlb	0	; () banked
 11236  001E22  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11237  001E24  0800               	sublw	0
 11238  001E26  25A8               	addwf	_runTimeX& (0+255),w,b
 11239  001E28  ECC9  F00B         	call	i2_GLCD_GoTo
 11240                           
 11241                           ;screen_controls.c: 257: Make_Arrow();
 11242  001E2C  EC5B  F012         	call	i2_Make_Arrow	;wreg free
 11243                           
 11244                           ;screen_controls.c: 259: break;
 11245                           
 11246                           ;screen_controls.c: 258: break;
 11247  001E30  0012               	return	
 11248  001E32                     
 11249                           ;screen_controls.c: 262: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 11250  001E32  0E02               	movlw	2
 11251  001E34  6E0C               	movwf	i2GLCD_GoTo@y,c
 11252  001E36  0100               	movlb	0	; () banked
 11253  001E38  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11254  001E3A  0800               	sublw	0
 11255  001E3C  25A8               	addwf	_runTimeX& (0+255),w,b
 11256  001E3E  ECC9  F00B         	call	i2_GLCD_GoTo
 11257                           
 11258                           ;screen_controls.c: 263: Make_Arrow();
 11259  001E42  EC5B  F012         	call	i2_Make_Arrow	;wreg free
 11260                           
 11261                           ;screen_controls.c: 267: }
 11262                           
 11263                           ;screen_controls.c: 264: break;
 11264  001E46  0012               	return	
 11265  001E48                     i2l727:
 11266  001E48  504F               	movf	_brightnessContext,w,c
 11267                           
 11268                           ; Switch size 1, requested type "space"
 11269                           ; Number of cases is 2, Range of values is 0 to 1
 11270                           ; switch strategies available:
 11271                           ; Name         Instructions Cycles
 11272                           ; simple_byte            7     4 (average)
 11273                           ;	Chosen strategy is simple_byte
 11274  001E4A  0A00               	xorlw	0	; case 0
 11275  001E4C  B4D8               	btfsc	status,2,c
 11276  001E4E  D7DB               	goto	i2l728
 11277  001E50  0A01               	xorlw	1	; case 1
 11278  001E52  B4D8               	btfsc	status,2,c
 11279  001E54  D7E3               	goto	i2l730
 11280  001E56  D7ED               	goto	i2l731
 11281  001E58                     __end_ofi2_Draw_Brightness_Arrow:
 11282                           	opt stack 0
 11283                           tosu	equ	0xFFF
 11284                           tosh	equ	0xFFE
 11285                           tosl	equ	0xFFD
 11286                           pclatu	equ	0xFFB
 11287                           pclath	equ	0xFFA
 11288                           tblptru	equ	0xFF8
 11289                           tblptrh	equ	0xFF7
 11290                           tblptrl	equ	0xFF6
 11291                           tablat	equ	0xFF5
 11292                           prodh	equ	0xFF4
 11293                           prodl	equ	0xFF3
 11294                           intcon	equ	0xFF2
 11295                           indf0	equ	0xFEF
 11296                           postinc0	equ	0xFEE
 11297                           fsr0h	equ	0xFEA
 11298                           fsr0l	equ	0xFE9
 11299                           wreg	equ	0xFE8
 11300                           postdec1	equ	0xFE5
 11301                           fsr1h	equ	0xFE2
 11302                           fsr1l	equ	0xFE1
 11303                           indf2	equ	0xFDF
 11304                           fsr2h	equ	0xFDA
 11305                           fsr2l	equ	0xFD9
 11306                           status	equ	0xFD8
 11307                           
 11308 ;; *************** function i2_Make_Arrow *****************
 11309 ;; Defined at:
 11310 ;;		line 83 in file "screen_controls.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;		None
 11313 ;; Auto vars:     Size  Location     Type
 11314 ;;		None
 11315 ;; Return value:  Size  Location     Type
 11316 ;;                  1    wreg      void 
 11317 ;; Registers used:
 11318 ;;		wreg, status,2, status,0, cstack
 11319 ;; Tracked objects:
 11320 ;;		On entry : 0/0
 11321 ;;		On exit  : 0/0
 11322 ;;		Unchanged: 0/0
 11323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11328 ;;Total ram usage:        0 bytes
 11329 ;; Hardware stack levels used:    1
 11330 ;; Hardware stack levels required when called:    3
 11331 ;; This function calls:
 11332 ;;		i2_GLCD_WriteData
 11333 ;; This function is called by:
 11334 ;;		i2_Draw_Arrow
 11335 ;;		i2_Draw_runTime_Arrow
 11336 ;;		i2_Draw_Brightness_Arrow
 11337 ;; This function uses a non-reentrant model
 11338 ;;
 11339                           
 11340                           	psect	text72
 11341  0024B6                     __ptext72:
 11342                           	opt stack 0
 11343  0024B6                     i2_Make_Arrow:
 11344                           	opt stack 15
 11345                           
 11346                           ;screen_controls.c: 85: GLCD_WriteData(0x7E);
 11347                           
 11348                           ;incstack = 0
 11349  0024B6  0E7E               	movlw	126
 11350  0024B8  ECEC  F00C         	call	i2_GLCD_WriteData
 11351                           
 11352                           ;screen_controls.c: 86: GLCD_WriteData(0x3C);
 11353  0024BC  0E3C               	movlw	60
 11354  0024BE  ECEC  F00C         	call	i2_GLCD_WriteData
 11355                           
 11356                           ;screen_controls.c: 87: GLCD_WriteData(0x18);
 11357  0024C2  0E18               	movlw	24
 11358  0024C4  ECEC  F00C         	call	i2_GLCD_WriteData
 11359  0024C8  0012               	return		;funcret
 11360  0024CA                     __end_ofi2_Make_Arrow:
 11361                           	opt stack 0
 11362                           tosu	equ	0xFFF
 11363                           tosh	equ	0xFFE
 11364                           tosl	equ	0xFFD
 11365                           pclatu	equ	0xFFB
 11366                           pclath	equ	0xFFA
 11367                           tblptru	equ	0xFF8
 11368                           tblptrh	equ	0xFF7
 11369                           tblptrl	equ	0xFF6
 11370                           tablat	equ	0xFF5
 11371                           prodh	equ	0xFF4
 11372                           prodl	equ	0xFF3
 11373                           intcon	equ	0xFF2
 11374                           indf0	equ	0xFEF
 11375                           postinc0	equ	0xFEE
 11376                           fsr0h	equ	0xFEA
 11377                           fsr0l	equ	0xFE9
 11378                           wreg	equ	0xFE8
 11379                           postdec1	equ	0xFE5
 11380                           fsr1h	equ	0xFE2
 11381                           fsr1l	equ	0xFE1
 11382                           indf2	equ	0xFDF
 11383                           fsr2h	equ	0xFDA
 11384                           fsr2l	equ	0xFD9
 11385                           status	equ	0xFD8
 11386                           
 11387 ;; *************** function i2_Clear_runTime_Arrows *****************
 11388 ;; Defined at:
 11389 ;;		line 172 in file "screen_controls.c"
 11390 ;; Parameters:    Size  Location     Type
 11391 ;;		None
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;  Clear_runTim    1   14[COMRAM] unsigned char 
 11394 ;; Return value:  Size  Location     Type
 11395 ;;                  1    wreg      void 
 11396 ;; Registers used:
 11397 ;;		wreg, status,2, status,0, cstack
 11398 ;; Tracked objects:
 11399 ;;		On entry : 0/0
 11400 ;;		On exit  : 0/0
 11401 ;;		Unchanged: 0/0
 11402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11407 ;;Total ram usage:        1 bytes
 11408 ;; Hardware stack levels used:    1
 11409 ;; Hardware stack levels required when called:    4
 11410 ;; This function calls:
 11411 ;;		i2_GLCD_GoTo
 11412 ;;		i2_GLCD_WriteData
 11413 ;; This function is called by:
 11414 ;;		i2_Draw_Arrow
 11415 ;; This function uses a non-reentrant model
 11416 ;;
 11417                           
 11418                           	psect	text73
 11419  001718                     __ptext73:
 11420                           	opt stack 0
 11421  001718                     i2_Clear_runTime_Arrows:
 11422                           	opt stack 14
 11423                           
 11424                           ;screen_controls.c: 174: unsigned char i=0;
 11425                           
 11426                           ;incstack = 0
 11427  001718  0E00               	movlw	0
 11428  00171A  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
 11429                           
 11430                           ;screen_controls.c: 176: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 11431  00171C  0E02               	movlw	2
 11432  00171E  6E0C               	movwf	i2GLCD_GoTo@y,c
 11433  001720  0100               	movlb	0	; () banked
 11434  001722  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11435  001724  0800               	sublw	0
 11436  001726  25A8               	addwf	_runTimeX& (0+255),w,b
 11437  001728  ECC9  F00B         	call	i2_GLCD_GoTo
 11438                           
 11439                           ;screen_controls.c: 178: for(i=0; i<ARROW_SIZE; i++)
 11440  00172C  0E00               	movlw	0
 11441  00172E  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
 11442  001730  D004               	goto	i2l697
 11443  001732                     
 11444                           ;screen_controls.c: 179: {
 11445                           ;screen_controls.c: 180: GLCD_WriteData(0x00);
 11446  001732  0E00               	movlw	0
 11447  001734  ECEC  F00C         	call	i2_GLCD_WriteData
 11448  001738  2A0F               	incf	i2Clear_runTime_Arrows@i,f,c
 11449  00173A                     i2l697:
 11450  00173A  0100               	movlb	0	; () banked
 11451  00173C  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11452  00173E  5C0F               	subwf	i2Clear_runTime_Arrows@i,w,c
 11453  001740  A0D8               	btfss	status,0,c
 11454  001742  D7F7               	goto	i2l698
 11455                           
 11456                           ; BSR set to: 0
 11457                           ;screen_controls.c: 181: }
 11458                           ;screen_controls.c: 183: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
 11459                           
 11460                           ; BSR set to: 0
 11461  001744  0E04               	movlw	4
 11462  001746  6E0C               	movwf	i2GLCD_GoTo@y,c
 11463  001748  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11464  00174A  0800               	sublw	0
 11465  00174C  25A8               	addwf	_runTimeX& (0+255),w,b
 11466  00174E  ECC9  F00B         	call	i2_GLCD_GoTo
 11467                           
 11468                           ;screen_controls.c: 184: for(i=0; i<ARROW_SIZE; i++)
 11469  001752  0E00               	movlw	0
 11470  001754  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
 11471  001756  D004               	goto	i2l700
 11472  001758                     
 11473                           ;screen_controls.c: 185: {
 11474                           ;screen_controls.c: 186: GLCD_WriteData(0x00);
 11475  001758  0E00               	movlw	0
 11476  00175A  ECEC  F00C         	call	i2_GLCD_WriteData
 11477  00175E  2A0F               	incf	i2Clear_runTime_Arrows@i,f,c
 11478  001760                     i2l700:
 11479  001760  0100               	movlb	0	; () banked
 11480  001762  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11481  001764  5C0F               	subwf	i2Clear_runTime_Arrows@i,w,c
 11482  001766  A0D8               	btfss	status,0,c
 11483  001768  D7F7               	goto	i2l701
 11484                           
 11485                           ; BSR set to: 0
 11486                           ;screen_controls.c: 187: }
 11487                           ;screen_controls.c: 189: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
 11488                           
 11489                           ; BSR set to: 0
 11490  00176A  0E06               	movlw	6
 11491  00176C  6E0C               	movwf	i2GLCD_GoTo@y,c
 11492  00176E  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11493  001770  0800               	sublw	0
 11494  001772  25A8               	addwf	_runTimeX& (0+255),w,b
 11495  001774  ECC9  F00B         	call	i2_GLCD_GoTo
 11496                           
 11497                           ;screen_controls.c: 190: for(i=0; i<ARROW_SIZE; i++)
 11498  001778  0E00               	movlw	0
 11499  00177A  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
 11500  00177C  D004               	goto	i2l703
 11501  00177E                     
 11502                           ;screen_controls.c: 191: {
 11503                           ;screen_controls.c: 192: GLCD_WriteData(0x00);
 11504  00177E  0E00               	movlw	0
 11505  001780  ECEC  F00C         	call	i2_GLCD_WriteData
 11506  001784  2A0F               	incf	i2Clear_runTime_Arrows@i,f,c
 11507  001786                     i2l703:
 11508  001786  0100               	movlb	0	; () banked
 11509  001788  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11510  00178A  5C0F               	subwf	i2Clear_runTime_Arrows@i,w,c
 11511  00178C  B0D8               	btfsc	status,0,c
 11512  00178E  0012               	return	
 11513  001790  D7F6               	goto	i2l704
 11514  001792                     __end_ofi2_Clear_runTime_Arrows:
 11515                           	opt stack 0
 11516                           tosu	equ	0xFFF
 11517                           tosh	equ	0xFFE
 11518                           tosl	equ	0xFFD
 11519                           pclatu	equ	0xFFB
 11520                           pclath	equ	0xFFA
 11521                           tblptru	equ	0xFF8
 11522                           tblptrh	equ	0xFF7
 11523                           tblptrl	equ	0xFF6
 11524                           tablat	equ	0xFF5
 11525                           prodh	equ	0xFF4
 11526                           prodl	equ	0xFF3
 11527                           intcon	equ	0xFF2
 11528                           indf0	equ	0xFEF
 11529                           postinc0	equ	0xFEE
 11530                           fsr0h	equ	0xFEA
 11531                           fsr0l	equ	0xFE9
 11532                           wreg	equ	0xFE8
 11533                           postdec1	equ	0xFE5
 11534                           fsr1h	equ	0xFE2
 11535                           fsr1l	equ	0xFE1
 11536                           indf2	equ	0xFDF
 11537                           fsr2h	equ	0xFDA
 11538                           fsr2l	equ	0xFD9
 11539                           status	equ	0xFD8
 11540                           
 11541 ;; *************** function i2_Clear_Brightness_Arrows *****************
 11542 ;; Defined at:
 11543 ;;		line 227 in file "screen_controls.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;		None
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;  Clear_Bright    1   14[COMRAM] unsigned char 
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      void 
 11550 ;; Registers used:
 11551 ;;		wreg, status,2, status,0, cstack
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11560 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11561 ;;Total ram usage:        1 bytes
 11562 ;; Hardware stack levels used:    1
 11563 ;; Hardware stack levels required when called:    4
 11564 ;; This function calls:
 11565 ;;		i2_GLCD_GoTo
 11566 ;;		i2_GLCD_WriteData
 11567 ;; This function is called by:
 11568 ;;		i2_Draw_Arrow
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text74
 11573  001E58                     __ptext74:
 11574                           	opt stack 0
 11575  001E58                     i2_Clear_Brightness_Arrows:
 11576                           	opt stack 14
 11577                           
 11578                           ;screen_controls.c: 229: unsigned char i=0;
 11579                           
 11580                           ; BSR set to: 0
 11581                           ;incstack = 0
 11582  001E58  0E00               	movlw	0
 11583  001E5A  6E0F               	movwf	i2Clear_Brightness_Arrows@i,c
 11584                           
 11585                           ;screen_controls.c: 231: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
 11586  001E5C  0E02               	movlw	2
 11587  001E5E  6E0C               	movwf	i2GLCD_GoTo@y,c
 11588  001E60  0100               	movlb	0	; () banked
 11589  001E62  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11590  001E64  0800               	sublw	0
 11591  001E66  25A8               	addwf	_runTimeX& (0+255),w,b
 11592  001E68  ECC9  F00B         	call	i2_GLCD_GoTo
 11593                           
 11594                           ;screen_controls.c: 233: for(i=0; i<ARROW_SIZE; i++)
 11595  001E6C  0E00               	movlw	0
 11596  001E6E  6E0F               	movwf	i2Clear_Brightness_Arrows@i,c
 11597  001E70  D004               	goto	i2l718
 11598  001E72                     
 11599                           ;screen_controls.c: 234: {
 11600                           ;screen_controls.c: 235: GLCD_WriteData(0x00);
 11601  001E72  0E00               	movlw	0
 11602  001E74  ECEC  F00C         	call	i2_GLCD_WriteData
 11603  001E78  2A0F               	incf	i2Clear_Brightness_Arrows@i,f,c
 11604  001E7A                     i2l718:
 11605  001E7A  0100               	movlb	0	; () banked
 11606  001E7C  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11607  001E7E  5C0F               	subwf	i2Clear_Brightness_Arrows@i,w,c
 11608  001E80  A0D8               	btfss	status,0,c
 11609  001E82  D7F7               	goto	i2l719
 11610                           
 11611                           ; BSR set to: 0
 11612                           ;screen_controls.c: 236: }
 11613                           ;screen_controls.c: 238: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
 11614                           
 11615                           ; BSR set to: 0
 11616  001E84  0E06               	movlw	6
 11617  001E86  6E0C               	movwf	i2GLCD_GoTo@y,c
 11618  001E88  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11619  001E8A  0800               	sublw	0
 11620  001E8C  25A8               	addwf	_runTimeX& (0+255),w,b
 11621  001E8E  ECC9  F00B         	call	i2_GLCD_GoTo
 11622                           
 11623                           ;screen_controls.c: 239: for(i=0; i<ARROW_SIZE; i++)
 11624  001E92  0E00               	movlw	0
 11625  001E94  6E0F               	movwf	i2Clear_Brightness_Arrows@i,c
 11626  001E96  D004               	goto	i2l721
 11627  001E98                     
 11628                           ;screen_controls.c: 240: {
 11629                           ;screen_controls.c: 241: GLCD_WriteData(0x00);
 11630  001E98  0E00               	movlw	0
 11631  001E9A  ECEC  F00C         	call	i2_GLCD_WriteData
 11632  001E9E  2A0F               	incf	i2Clear_Brightness_Arrows@i,f,c
 11633  001EA0                     i2l721:
 11634  001EA0  0100               	movlb	0	; () banked
 11635  001EA2  51A7               	movf	_ARROW_SIZE& (0+255),w,b
 11636  001EA4  5C0F               	subwf	i2Clear_Brightness_Arrows@i,w,c
 11637  001EA6  B0D8               	btfsc	status,0,c
 11638  001EA8  0012               	return	
 11639  001EAA  D7F6               	goto	i2l722
 11640  001EAC                     __end_ofi2_Clear_Brightness_Arrows:
 11641                           	opt stack 0
 11642                           tosu	equ	0xFFF
 11643                           tosh	equ	0xFFE
 11644                           tosl	equ	0xFFD
 11645                           pclatu	equ	0xFFB
 11646                           pclath	equ	0xFFA
 11647                           tblptru	equ	0xFF8
 11648                           tblptrh	equ	0xFF7
 11649                           tblptrl	equ	0xFF6
 11650                           tablat	equ	0xFF5
 11651                           prodh	equ	0xFF4
 11652                           prodl	equ	0xFF3
 11653                           intcon	equ	0xFF2
 11654                           indf0	equ	0xFEF
 11655                           postinc0	equ	0xFEE
 11656                           fsr0h	equ	0xFEA
 11657                           fsr0l	equ	0xFE9
 11658                           wreg	equ	0xFE8
 11659                           postdec1	equ	0xFE5
 11660                           fsr1h	equ	0xFE2
 11661                           fsr1l	equ	0xFE1
 11662                           indf2	equ	0xFDF
 11663                           fsr2h	equ	0xFDA
 11664                           fsr2l	equ	0xFD9
 11665                           status	equ	0xFD8
 11666                           
 11667 ;; *************** function i2_Clear_Arrow_Column *****************
 11668 ;; Defined at:
 11669 ;;		line 103 in file "screen_controls.c"
 11670 ;; Parameters:    Size  Location     Type
 11671 ;;		None
 11672 ;; Auto vars:     Size  Location     Type
 11673 ;;  Clear_Arrow_    1   22[COMRAM] unsigned char 
 11674 ;;  Clear_Arrow_    1   21[COMRAM] unsigned char 
 11675 ;; Return value:  Size  Location     Type
 11676 ;;                  1    wreg      void 
 11677 ;; Registers used:
 11678 ;;		wreg, status,2, status,0, cstack
 11679 ;; Tracked objects:
 11680 ;;		On entry : 0/0
 11681 ;;		On exit  : 0/0
 11682 ;;		Unchanged: 0/0
 11683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11685 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11686 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11687 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11688 ;;Total ram usage:        9 bytes
 11689 ;; Hardware stack levels used:    1
 11690 ;; Hardware stack levels required when called:    4
 11691 ;; This function calls:
 11692 ;;		i2_GLCD_GoTo
 11693 ;;		i2_GLCD_WriteData
 11694 ;; This function is called by:
 11695 ;;		i2_Draw_Arrow
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           	psect	text75
 11700  001AFC                     __ptext75:
 11701                           	opt stack 0
 11702  001AFC                     i2_Clear_Arrow_Column:
 11703                           	opt stack 14
 11704                           
 11705                           ;screen_controls.c: 105: unsigned char i, j;
 11706                           ;screen_controls.c: 107: for(i = 0; i < 64/8; i++)
 11707                           
 11708                           ; BSR set to: 0
 11709                           ;incstack = 0
 11710  001AFC  0E00               	movlw	0
 11711  001AFE  6E17               	movwf	i2Clear_Arrow_Column@i,c
 11712  001B00                     i2l3998:
 11713  001B00  0E07               	movlw	7
 11714  001B02  6417               	cpfsgt	i2Clear_Arrow_Column@i,c
 11715  001B04  D001               	goto	i2l683
 11716  001B06  0012               	return	
 11717  001B08                     i2l683:
 11718                           
 11719                           ;screen_controls.c: 108: {
 11720                           ;screen_controls.c: 109: GLCD_GoTo(0, i);
 11721  001B08  C017  F00C         	movff	i2Clear_Arrow_Column@i,i2GLCD_GoTo@y
 11722  001B0C  0E00               	movlw	0
 11723  001B0E  ECC9  F00B         	call	i2_GLCD_GoTo
 11724                           
 11725                           ;screen_controls.c: 111: for(j = 0; j < (xMenuStart - 1); j++)
 11726  001B12  0E00               	movlw	0
 11727  001B14  6E16               	movwf	i2Clear_Arrow_Column@j,c
 11728  001B16  D004               	goto	i2l685
 11729  001B18                     
 11730                           ;screen_controls.c: 112: {
 11731                           ;screen_controls.c: 113: GLCD_WriteData(0x00);
 11732  001B18  0E00               	movlw	0
 11733  001B1A  ECEC  F00C         	call	i2_GLCD_WriteData
 11734  001B1E  2A16               	incf	i2Clear_Arrow_Column@j,f,c
 11735  001B20                     i2l685:
 11736  001B20  0EFF               	movlw	255
 11737  001B22  6E0F               	movwf	??i2_Clear_Arrow_Column& (0+255),c
 11738  001B24  0EFF               	movlw	255
 11739  001B26  6E10               	movwf	(??i2_Clear_Arrow_Column+1)& (0+255),c
 11740  001B28  0100               	movlb	0	; () banked
 11741  001B2A  51A6               	movf	_xMenuStart& (0+255),w,b
 11742  001B2C  6E11               	movwf	(??i2_Clear_Arrow_Column+2)& (0+255),c
 11743  001B2E  6A12               	clrf	(??i2_Clear_Arrow_Column+3)& (0+255),c
 11744  001B30  500F               	movf	??i2_Clear_Arrow_Column,w,c
 11745  001B32  2611               	addwf	??i2_Clear_Arrow_Column+2,f,c
 11746  001B34  5010               	movf	??i2_Clear_Arrow_Column+1,w,c
 11747  001B36  2212               	addwfc	??i2_Clear_Arrow_Column+3,f,c
 11748  001B38  5016               	movf	i2Clear_Arrow_Column@j,w,c
 11749  001B3A  6E13               	movwf	(??i2_Clear_Arrow_Column+4)& (0+255),c
 11750  001B3C  6A14               	clrf	(??i2_Clear_Arrow_Column+5)& (0+255),c
 11751  001B3E  5011               	movf	??i2_Clear_Arrow_Column+2,w,c
 11752  001B40  5C13               	subwf	??i2_Clear_Arrow_Column+4,w,c
 11753  001B42  5014               	movf	??i2_Clear_Arrow_Column+5,w,c
 11754  001B44  0A80               	xorlw	128
 11755  001B46  6E15               	movwf	(??i2_Clear_Arrow_Column+6)& (0+255),c
 11756  001B48  5012               	movf	??i2_Clear_Arrow_Column+3,w,c
 11757  001B4A  0A80               	xorlw	128
 11758  001B4C  5815               	subwfb	(??i2_Clear_Arrow_Column+6)& (0+255),w,c
 11759  001B4E  A0D8               	btfss	status,0,c
 11760  001B50  D7E3               	goto	i2l686
 11761                           
 11762                           ; BSR set to: 0
 11763                           
 11764                           ; BSR set to: 0
 11765  001B52  2A17               	incf	i2Clear_Arrow_Column@i,f,c
 11766  001B54  D7D5               	goto	i2l3998
 11767  001B56                     __end_ofi2_Clear_Arrow_Column:
 11768                           	opt stack 0
 11769                           tosu	equ	0xFFF
 11770                           tosh	equ	0xFFE
 11771                           tosl	equ	0xFFD
 11772                           pclatu	equ	0xFFB
 11773                           pclath	equ	0xFFA
 11774                           tblptru	equ	0xFF8
 11775                           tblptrh	equ	0xFF7
 11776                           tblptrl	equ	0xFF6
 11777                           tablat	equ	0xFF5
 11778                           prodh	equ	0xFF4
 11779                           prodl	equ	0xFF3
 11780                           intcon	equ	0xFF2
 11781                           indf0	equ	0xFEF
 11782                           postinc0	equ	0xFEE
 11783                           fsr0h	equ	0xFEA
 11784                           fsr0l	equ	0xFE9
 11785                           wreg	equ	0xFE8
 11786                           postdec1	equ	0xFE5
 11787                           fsr1h	equ	0xFE2
 11788                           fsr1l	equ	0xFE1
 11789                           indf2	equ	0xFDF
 11790                           fsr2h	equ	0xFDA
 11791                           fsr2l	equ	0xFD9
 11792                           status	equ	0xFD8
 11793                           
 11794 ;; *************** function i2_GLCD_WriteData *****************
 11795 ;; Defined at:
 11796 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
 11797 ;; Parameters:    Size  Location     Type
 11798 ;;  dataToWrite     1    wreg     unsigned char 
 11799 ;; Auto vars:     Size  Location     Type
 11800 ;;  dataToWrite     1    9[COMRAM] unsigned char 
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  1    wreg      void 
 11803 ;; Registers used:
 11804 ;;		wreg, status,2, status,0, cstack
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11814 ;;Total ram usage:        2 bytes
 11815 ;; Hardware stack levels used:    1
 11816 ;; Hardware stack levels required when called:    2
 11817 ;; This function calls:
 11818 ;;		i2_GLCD_Delay
 11819 ;;		i2_GLCD_DisableController
 11820 ;;		i2_GLCD_EnableController
 11821 ;;		i2_GLCD_ReadStatus
 11822 ;;		i2___awdiv
 11823 ;; This function is called by:
 11824 ;;		i2_GLCD_WriteChar
 11825 ;;		i2_Make_Arrow
 11826 ;;		i2_Clear_Arrow_Column
 11827 ;;		i2_Clear_runTime_Arrows
 11828 ;;		i2_Clear_Brightness_Arrows
 11829 ;; This function uses a non-reentrant model
 11830 ;;
 11831                           
 11832                           	psect	text76
 11833  0019D8                     __ptext76:
 11834                           	opt stack 0
 11835  0019D8                     i2_GLCD_WriteData:
 11836                           	opt stack 15
 11837                           
 11838                           ;incstack = 0
 11839                           ;i2GLCD_WriteData@dataToWrite stored from wreg
 11840  0019D8  6E0A               	movwf	i2GLCD_WriteData@dataToWrite,c
 11841  0019DA                     
 11842                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
 11843  0019DA  C0A4  F001         	movff	_screen_x,i2___awdiv@dividend
 11844  0019DE  6A02               	clrf	i2___awdiv@dividend+1,c
 11845  0019E0  0E00               	movlw	0
 11846  0019E2  6E04               	movwf	i2___awdiv@divisor+1,c
 11847  0019E4  0E40               	movlw	64
 11848  0019E6  6E03               	movwf	i2___awdiv@divisor,c
 11849  0019E8  EC0A  F00B         	call	i2___awdiv	;wreg free
 11850  0019EC  5001               	movf	?i2___awdiv,w,c
 11851  0019EE  EC02  F012         	call	i2_GLCD_ReadStatus
 11852  0019F2  6E09               	movwf	??i2_GLCD_WriteData& (0+255),c
 11853  0019F4  BE09               	btfsc	??i2_GLCD_WriteData,7,c
 11854  0019F6  D7F1               	goto	i2l3636
 11855                           
 11856                           ;KS0108-PIC18.c: 116: TRISD = 0x00;
 11857  0019F8  0E00               	movlw	0
 11858  0019FA  6E95               	movwf	3989,c	;volatile
 11859                           
 11860                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
 11861  0019FC  9280               	bcf	3968,1,c	;volatile
 11862                           
 11863                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
 11864  0019FE  8480               	bsf	3968,2,c	;volatile
 11865                           
 11866                           ;KS0108-PIC18.c: 119: PORTD = dataToWrite;
 11867  001A00  C00A  FF83         	movff	i2GLCD_WriteData@dataToWrite,3971	;volatile
 11868                           
 11869                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
 11870  001A04  C0A4  F001         	movff	_screen_x,i2___awdiv@dividend
 11871  001A08  6A02               	clrf	i2___awdiv@dividend+1,c
 11872  001A0A  0E00               	movlw	0
 11873  001A0C  6E04               	movwf	i2___awdiv@divisor+1,c
 11874  001A0E  0E40               	movlw	64
 11875  001A10  6E03               	movwf	i2___awdiv@divisor,c
 11876  001A12  EC0A  F00B         	call	i2___awdiv	;wreg free
 11877  001A16  5001               	movf	?i2___awdiv,w,c
 11878  001A18  ECDC  F011         	call	i2_GLCD_EnableController
 11879                           
 11880                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
 11881  001A1C  8680               	bsf	3968,3,c	;volatile
 11882                           
 11883                           ;KS0108-PIC18.c: 122: GLCD_Delay();
 11884  001A1E  ECA1  F012         	call	i2_GLCD_Delay	;wreg free
 11885                           
 11886                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
 11887  001A22  9680               	bcf	3968,3,c	;volatile
 11888                           
 11889                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
 11890  001A24  C0A4  F001         	movff	_screen_x,i2___awdiv@dividend
 11891  001A28  6A02               	clrf	i2___awdiv@dividend+1,c
 11892  001A2A  0E00               	movlw	0
 11893  001A2C  6E04               	movwf	i2___awdiv@divisor+1,c
 11894  001A2E  0E40               	movlw	64
 11895  001A30  6E03               	movwf	i2___awdiv@divisor,c
 11896  001A32  EC0A  F00B         	call	i2___awdiv	;wreg free
 11897  001A36  5001               	movf	?i2___awdiv,w,c
 11898  001A38  ECEF  F011         	call	i2_GLCD_DisableController
 11899                           
 11900                           ;KS0108-PIC18.c: 125: screen_x++;
 11901  001A3C  0100               	movlb	0	; () banked
 11902  001A3E  2BA4               	incf	_screen_x& (0+255),f,b
 11903                           
 11904                           ; BSR set to: 0
 11905  001A40  0012               	return		;funcret
 11906  001A42                     __end_ofi2_GLCD_WriteData:
 11907                           	opt stack 0
 11908                           tosu	equ	0xFFF
 11909                           tosh	equ	0xFFE
 11910                           tosl	equ	0xFFD
 11911                           pclatu	equ	0xFFB
 11912                           pclath	equ	0xFFA
 11913                           tblptru	equ	0xFF8
 11914                           tblptrh	equ	0xFF7
 11915                           tblptrl	equ	0xFF6
 11916                           tablat	equ	0xFF5
 11917                           prodh	equ	0xFF4
 11918                           prodl	equ	0xFF3
 11919                           intcon	equ	0xFF2
 11920                           indf0	equ	0xFEF
 11921                           postinc0	equ	0xFEE
 11922                           fsr0h	equ	0xFEA
 11923                           fsr0l	equ	0xFE9
 11924                           wreg	equ	0xFE8
 11925                           postdec1	equ	0xFE5
 11926                           fsr1h	equ	0xFE2
 11927                           fsr1l	equ	0xFE1
 11928                           indf2	equ	0xFDF
 11929                           fsr2h	equ	0xFDA
 11930                           fsr2l	equ	0xFD9
 11931                           status	equ	0xFD8
 11932                           
 11933 ;; *************** function i2_GLCD_GoTo *****************
 11934 ;; Defined at:
 11935 ;;		line 25 in file "ks0108lib/KS0108.c"
 11936 ;; Parameters:    Size  Location     Type
 11937 ;;  x               1    wreg     unsigned char 
 11938 ;;  y               1   11[COMRAM] unsigned char 
 11939 ;; Auto vars:     Size  Location     Type
 11940 ;;  x               1   12[COMRAM] unsigned char 
 11941 ;;  GLCD_GoTo       1   13[COMRAM] unsigned char 
 11942 ;; Return value:  Size  Location     Type
 11943 ;;                  1    wreg      void 
 11944 ;; Registers used:
 11945 ;;		wreg, status,2, status,0, cstack
 11946 ;; Tracked objects:
 11947 ;;		On entry : 0/0
 11948 ;;		On exit  : 0/0
 11949 ;;		Unchanged: 0/0
 11950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11951 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11952 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11954 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11955 ;;Total ram usage:        3 bytes
 11956 ;; Hardware stack levels used:    1
 11957 ;; Hardware stack levels required when called:    3
 11958 ;; This function calls:
 11959 ;;		i2_GLCD_WriteCommand
 11960 ;;		i2___awdiv
 11961 ;; This function is called by:
 11962 ;;		_Run_Time_Menu_Function
 11963 ;;		_Brightness_Menu_Function
 11964 ;;		i2_Draw_Arrow
 11965 ;;		i2_Clear_Arrow_Column
 11966 ;;		i2_Clear_runTime_Arrows
 11967 ;;		i2_Draw_runTime_Arrow
 11968 ;;		i2_Clear_Brightness_Arrows
 11969 ;;		i2_Draw_Brightness_Arrow
 11970 ;; This function uses a non-reentrant model
 11971 ;;
 11972                           
 11973                           	psect	text77
 11974  001792                     __ptext77:
 11975                           	opt stack 0
 11976  001792                     i2_GLCD_GoTo:
 11977                           	opt stack 16
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;incstack = 0
 11981                           ;i2GLCD_GoTo@x stored from wreg
 11982  001792  6E0D               	movwf	i2GLCD_GoTo@x,c
 11983                           
 11984                           ;KS0108.c: 27: unsigned char i;
 11985                           ;KS0108.c: 28: screen_x = x;
 11986  001794  C00D  F0A4         	movff	i2GLCD_GoTo@x,_screen_x
 11987                           
 11988                           ;KS0108.c: 29: screen_y = y;
 11989  001798  C00C  F0A3         	movff	i2GLCD_GoTo@y,_screen_y
 11990                           
 11991                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
 11992  00179C  0E00               	movlw	0
 11993  00179E  6E0E               	movwf	i2GLCD_GoTo@i,c
 11994  0017A0                     i2l3768:
 11995  0017A0  0E01               	movlw	1
 11996  0017A2  640E               	cpfsgt	i2GLCD_GoTo@i,c
 11997  0017A4  D001               	goto	i2l516
 11998  0017A6  D012               	goto	i2u245_40
 11999  0017A8                     i2l516:
 12000                           
 12001                           ;KS0108.c: 32: {
 12002                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
 12003  0017A8  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
 12004  0017AC  0E40               	movlw	64
 12005  0017AE  EC6F  F011         	call	i2_GLCD_WriteCommand
 12006                           
 12007                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
 12008  0017B2  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
 12009  0017B6  500C               	movf	i2GLCD_GoTo@y,w,c
 12010  0017B8  09B8               	iorlw	184
 12011  0017BA  EC6F  F011         	call	i2_GLCD_WriteCommand
 12012                           
 12013                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
 12014  0017BE  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
 12015  0017C2  0EC0               	movlw	192
 12016  0017C4  EC6F  F011         	call	i2_GLCD_WriteCommand
 12017  0017C8  2A0E               	incf	i2GLCD_GoTo@i,f,c
 12018  0017CA  D7EA               	goto	i2l3768
 12019  0017CC                     i2u245_40:
 12020                           
 12021                           ;KS0108.c: 36: }
 12022                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
 12023  0017CC  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
 12024  0017D0  6A02               	clrf	i2___awdiv@dividend+1,c
 12025  0017D2  0E00               	movlw	0
 12026  0017D4  6E04               	movwf	i2___awdiv@divisor+1,c
 12027  0017D6  0E40               	movlw	64
 12028  0017D8  6E03               	movwf	i2___awdiv@divisor,c
 12029  0017DA  EC0A  F00B         	call	i2___awdiv	;wreg free
 12030  0017DE  5001               	movf	?i2___awdiv,w,c
 12031  0017E0  6E09               	movwf	i2GLCD_WriteCommand@controller,c
 12032  0017E2  500D               	movf	i2GLCD_GoTo@x,w,c
 12033  0017E4  0B3F               	andlw	63
 12034  0017E6  0940               	iorlw	64
 12035  0017E8  EC6F  F011         	call	i2_GLCD_WriteCommand
 12036                           
 12037                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
 12038  0017EC  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
 12039  0017F0  6A02               	clrf	i2___awdiv@dividend+1,c
 12040  0017F2  0E00               	movlw	0
 12041  0017F4  6E04               	movwf	i2___awdiv@divisor+1,c
 12042  0017F6  0E40               	movlw	64
 12043  0017F8  6E03               	movwf	i2___awdiv@divisor,c
 12044  0017FA  EC0A  F00B         	call	i2___awdiv	;wreg free
 12045  0017FE  5001               	movf	?i2___awdiv,w,c
 12046  001800  6E09               	movwf	i2GLCD_WriteCommand@controller,c
 12047  001802  500C               	movf	i2GLCD_GoTo@y,w,c
 12048  001804  09B8               	iorlw	184
 12049  001806  EC6F  F011         	call	i2_GLCD_WriteCommand
 12050  00180A  0012               	return		;funcret
 12051  00180C                     __end_ofi2_GLCD_GoTo:
 12052                           	opt stack 0
 12053                           tosu	equ	0xFFF
 12054                           tosh	equ	0xFFE
 12055                           tosl	equ	0xFFD
 12056                           pclatu	equ	0xFFB
 12057                           pclath	equ	0xFFA
 12058                           tblptru	equ	0xFF8
 12059                           tblptrh	equ	0xFF7
 12060                           tblptrl	equ	0xFF6
 12061                           tablat	equ	0xFF5
 12062                           prodh	equ	0xFF4
 12063                           prodl	equ	0xFF3
 12064                           intcon	equ	0xFF2
 12065                           indf0	equ	0xFEF
 12066                           postinc0	equ	0xFEE
 12067                           fsr0h	equ	0xFEA
 12068                           fsr0l	equ	0xFE9
 12069                           wreg	equ	0xFE8
 12070                           postdec1	equ	0xFE5
 12071                           fsr1h	equ	0xFE2
 12072                           fsr1l	equ	0xFE1
 12073                           indf2	equ	0xFDF
 12074                           fsr2h	equ	0xFDA
 12075                           fsr2l	equ	0xFD9
 12076                           status	equ	0xFD8
 12077                           
 12078 ;; *************** function i2___awdiv *****************
 12079 ;; Defined at:
 12080 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 12081 ;; Parameters:    Size  Location     Type
 12082 ;;  dividend        2    0[COMRAM] int 
 12083 ;;  divisor         2    2[COMRAM] int 
 12084 ;; Auto vars:     Size  Location     Type
 12085 ;;  __awdiv         2    6[COMRAM] int 
 12086 ;;  __awdiv         1    5[COMRAM] unsigned char 
 12087 ;;  __awdiv         1    4[COMRAM] unsigned char 
 12088 ;; Return value:  Size  Location     Type
 12089 ;;                  2    0[COMRAM] int 
 12090 ;; Registers used:
 12091 ;;		wreg, status,2, status,0
 12092 ;; Tracked objects:
 12093 ;;		On entry : 0/0
 12094 ;;		On exit  : 0/0
 12095 ;;		Unchanged: 0/0
 12096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12097 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12098 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12100 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12101 ;;Total ram usage:        8 bytes
 12102 ;; Hardware stack levels used:    1
 12103 ;; This function calls:
 12104 ;;		Nothing
 12105 ;; This function is called by:
 12106 ;;		i2_GLCD_GoTo
 12107 ;;		i2_GLCD_WriteData
 12108 ;; This function uses a non-reentrant model
 12109 ;;
 12110                           
 12111                           	psect	text78
 12112  001614                     __ptext78:
 12113                           	opt stack 0
 12114  001614                     i2___awdiv:
 12115                           	opt stack 16
 12116                           
 12117                           ;incstack = 0
 12118  001614  0E00               	movlw	0
 12119  001616  6E06               	movwf	i2___awdiv@sign,c
 12120  001618  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12121  00161A  D006               	goto	i2l942
 12122  00161C  6C03               	negf	i2___awdiv@divisor,c
 12123  00161E  1E04               	comf	i2___awdiv@divisor+1,f,c
 12124  001620  B0D8               	btfsc	status,0,c
 12125  001622  2A04               	incf	i2___awdiv@divisor+1,f,c
 12126  001624  0E01               	movlw	1
 12127  001626  6E06               	movwf	i2___awdiv@sign,c
 12128  001628                     i2l942:
 12129  001628  AE02               	btfss	i2___awdiv@dividend+1,7,c
 12130  00162A  D006               	goto	i2l943
 12131  00162C  6C01               	negf	i2___awdiv@dividend,c
 12132  00162E  1E02               	comf	i2___awdiv@dividend+1,f,c
 12133  001630  B0D8               	btfsc	status,0,c
 12134  001632  2A02               	incf	i2___awdiv@dividend+1,f,c
 12135  001634  0E01               	movlw	1
 12136  001636  1A06               	xorwf	i2___awdiv@sign,f,c
 12137  001638                     i2l943:
 12138  001638  0E00               	movlw	0
 12139  00163A  6E08               	movwf	i2___awdiv@quotient+1,c
 12140  00163C  0E00               	movlw	0
 12141  00163E  6E07               	movwf	i2___awdiv@quotient,c
 12142  001640  5003               	movf	i2___awdiv@divisor,w,c
 12143  001642  1004               	iorwf	i2___awdiv@divisor+1,w,c
 12144  001644  B4D8               	btfsc	status,2,c
 12145  001646  D01C               	goto	i2l950
 12146  001648  0E01               	movlw	1
 12147  00164A  6E05               	movwf	i2___awdiv@counter,c
 12148  00164C  D004               	goto	i2l945
 12149  00164E  90D8               	bcf	status,0,c
 12150  001650  3603               	rlcf	i2___awdiv@divisor,f,c
 12151  001652  3604               	rlcf	i2___awdiv@divisor+1,f,c
 12152  001654  2A05               	incf	i2___awdiv@counter,f,c
 12153  001656                     i2l945:
 12154  001656  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12155  001658  D7FA               	goto	i2l946
 12156  00165A                     i2u222_40:
 12157  00165A  90D8               	bcf	status,0,c
 12158  00165C  3607               	rlcf	i2___awdiv@quotient,f,c
 12159  00165E  3608               	rlcf	i2___awdiv@quotient+1,f,c
 12160  001660  5003               	movf	i2___awdiv@divisor,w,c
 12161  001662  5C01               	subwf	i2___awdiv@dividend,w,c
 12162  001664  5004               	movf	i2___awdiv@divisor+1,w,c
 12163  001666  5802               	subwfb	i2___awdiv@dividend+1,w,c
 12164  001668  A0D8               	btfss	status,0,c
 12165  00166A  D005               	goto	i2l949
 12166  00166C  5003               	movf	i2___awdiv@divisor,w,c
 12167  00166E  5E01               	subwf	i2___awdiv@dividend,f,c
 12168  001670  5004               	movf	i2___awdiv@divisor+1,w,c
 12169  001672  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 12170  001674  8007               	bsf	i2___awdiv@quotient,0,c
 12171  001676                     i2l949:
 12172  001676  90D8               	bcf	status,0,c
 12173  001678  3204               	rrcf	i2___awdiv@divisor+1,f,c
 12174  00167A  3203               	rrcf	i2___awdiv@divisor,f,c
 12175  00167C  2E05               	decfsz	i2___awdiv@counter,f,c
 12176  00167E  D7ED               	goto	i2u222_40
 12177  001680                     i2l950:
 12178  001680  5006               	movf	i2___awdiv@sign,w,c
 12179  001682  B4D8               	btfsc	status,2,c
 12180  001684  D004               	goto	i2l951
 12181  001686  6C07               	negf	i2___awdiv@quotient,c
 12182  001688  1E08               	comf	i2___awdiv@quotient+1,f,c
 12183  00168A  B0D8               	btfsc	status,0,c
 12184  00168C  2A08               	incf	i2___awdiv@quotient+1,f,c
 12185  00168E                     i2l951:
 12186  00168E  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 12187  001692  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 12188  001696  0012               	return	
 12189  001698                     __end_ofi2___awdiv:
 12190                           	opt stack 0
 12191                           tosu	equ	0xFFF
 12192                           tosh	equ	0xFFE
 12193                           tosl	equ	0xFFD
 12194                           pclatu	equ	0xFFB
 12195                           pclath	equ	0xFFA
 12196                           tblptru	equ	0xFF8
 12197                           tblptrh	equ	0xFF7
 12198                           tblptrl	equ	0xFF6
 12199                           tablat	equ	0xFF5
 12200                           prodh	equ	0xFF4
 12201                           prodl	equ	0xFF3
 12202                           intcon	equ	0xFF2
 12203                           indf0	equ	0xFEF
 12204                           postinc0	equ	0xFEE
 12205                           fsr0h	equ	0xFEA
 12206                           fsr0l	equ	0xFE9
 12207                           wreg	equ	0xFE8
 12208                           postdec1	equ	0xFE5
 12209                           fsr1h	equ	0xFE2
 12210                           fsr1l	equ	0xFE1
 12211                           indf2	equ	0xFDF
 12212                           fsr2h	equ	0xFDA
 12213                           fsr2l	equ	0xFD9
 12214                           status	equ	0xFD8
 12215                           
 12216 ;; *************** function i2_GLCD_WriteCommand *****************
 12217 ;; Defined at:
 12218 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
 12219 ;; Parameters:    Size  Location     Type
 12220 ;;  commandToWri    1    wreg     unsigned char 
 12221 ;;  controller      1    8[COMRAM] unsigned char 
 12222 ;; Auto vars:     Size  Location     Type
 12223 ;;  commandToWri    1   10[COMRAM] unsigned char 
 12224 ;; Return value:  Size  Location     Type
 12225 ;;                  1    wreg      void 
 12226 ;; Registers used:
 12227 ;;		wreg, status,2, status,0, cstack
 12228 ;; Tracked objects:
 12229 ;;		On entry : 0/0
 12230 ;;		On exit  : 0/0
 12231 ;;		Unchanged: 0/0
 12232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12233 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12235 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12236 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12237 ;;Total ram usage:        3 bytes
 12238 ;; Hardware stack levels used:    1
 12239 ;; Hardware stack levels required when called:    2
 12240 ;; This function calls:
 12241 ;;		i2_GLCD_Delay
 12242 ;;		i2_GLCD_DisableController
 12243 ;;		i2_GLCD_EnableController
 12244 ;;		i2_GLCD_ReadStatus
 12245 ;; This function is called by:
 12246 ;;		i2_GLCD_GoTo
 12247 ;; This function uses a non-reentrant model
 12248 ;;
 12249                           
 12250                           	psect	text79
 12251  0022DE                     __ptext79:
 12252                           	opt stack 0
 12253  0022DE                     i2_GLCD_WriteCommand:
 12254                           	opt stack 16
 12255                           
 12256                           ;incstack = 0
 12257                           ;i2GLCD_WriteCommand@commandToWrite stored from wreg
 12258  0022DE  6E0B               	movwf	i2GLCD_WriteCommand@commandToWrite,c
 12259  0022E0                     
 12260                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
 12261  0022E0  5009               	movf	i2GLCD_WriteCommand@controller,w,c
 12262  0022E2  EC02  F012         	call	i2_GLCD_ReadStatus
 12263  0022E6  6E0A               	movwf	??i2_GLCD_WriteCommand& (0+255),c
 12264  0022E8  BE0A               	btfsc	??i2_GLCD_WriteCommand,7,c
 12265  0022EA  D7FA               	goto	i2l3616
 12266                           
 12267                           ;KS0108-PIC18.c: 82: TRISD = 0x00;
 12268  0022EC  0E00               	movlw	0
 12269  0022EE  6E95               	movwf	3989,c	;volatile
 12270                           
 12271                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
 12272  0022F0  0EF9               	movlw	249
 12273  0022F2  1680               	andwf	3968,f,c	;volatile
 12274                           
 12275                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
 12276  0022F4  5009               	movf	i2GLCD_WriteCommand@controller,w,c
 12277  0022F6  ECDC  F011         	call	i2_GLCD_EnableController
 12278                           
 12279                           ;KS0108-PIC18.c: 85: PORTD = commandToWrite;
 12280  0022FA  C00B  FF83         	movff	i2GLCD_WriteCommand@commandToWrite,3971	;volatile
 12281                           
 12282                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
 12283  0022FE  8680               	bsf	3968,3,c	;volatile
 12284                           
 12285                           ;KS0108-PIC18.c: 87: GLCD_Delay();
 12286  002300  ECA1  F012         	call	i2_GLCD_Delay	;wreg free
 12287                           
 12288                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
 12289  002304  9680               	bcf	3968,3,c	;volatile
 12290                           
 12291                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
 12292  002306  5009               	movf	i2GLCD_WriteCommand@controller,w,c
 12293  002308  ECEF  F011         	call	i2_GLCD_DisableController
 12294  00230C  0012               	return		;funcret
 12295  00230E                     __end_ofi2_GLCD_WriteCommand:
 12296                           	opt stack 0
 12297                           tosu	equ	0xFFF
 12298                           tosh	equ	0xFFE
 12299                           tosl	equ	0xFFD
 12300                           pclatu	equ	0xFFB
 12301                           pclath	equ	0xFFA
 12302                           tblptru	equ	0xFF8
 12303                           tblptrh	equ	0xFF7
 12304                           tblptrl	equ	0xFF6
 12305                           tablat	equ	0xFF5
 12306                           prodh	equ	0xFF4
 12307                           prodl	equ	0xFF3
 12308                           intcon	equ	0xFF2
 12309                           indf0	equ	0xFEF
 12310                           postinc0	equ	0xFEE
 12311                           fsr0h	equ	0xFEA
 12312                           fsr0l	equ	0xFE9
 12313                           wreg	equ	0xFE8
 12314                           postdec1	equ	0xFE5
 12315                           fsr1h	equ	0xFE2
 12316                           fsr1l	equ	0xFE1
 12317                           indf2	equ	0xFDF
 12318                           fsr2h	equ	0xFDA
 12319                           fsr2l	equ	0xFD9
 12320                           status	equ	0xFD8
 12321                           
 12322 ;; *************** function i2_GLCD_ReadStatus *****************
 12323 ;; Defined at:
 12324 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
 12325 ;; Parameters:    Size  Location     Type
 12326 ;;  controller      1    wreg     unsigned char 
 12327 ;; Auto vars:     Size  Location     Type
 12328 ;;  controller      1    2[COMRAM] unsigned char 
 12329 ;;  GLCD_ReadSta    1    1[COMRAM] unsigned char 
 12330 ;; Return value:  Size  Location     Type
 12331 ;;                  1    wreg      unsigned char 
 12332 ;; Registers used:
 12333 ;;		wreg, status,2, status,0, cstack
 12334 ;; Tracked objects:
 12335 ;;		On entry : 0/0
 12336 ;;		On exit  : 0/0
 12337 ;;		Unchanged: 0/0
 12338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12342 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12343 ;;Total ram usage:        2 bytes
 12344 ;; Hardware stack levels used:    1
 12345 ;; Hardware stack levels required when called:    1
 12346 ;; This function calls:
 12347 ;;		i2_GLCD_Delay
 12348 ;;		i2_GLCD_DisableController
 12349 ;;		i2_GLCD_EnableController
 12350 ;; This function is called by:
 12351 ;;		i2_GLCD_WriteCommand
 12352 ;;		i2_GLCD_WriteData
 12353 ;; This function uses a non-reentrant model
 12354 ;;
 12355                           
 12356                           	psect	text80
 12357  002404                     __ptext80:
 12358                           	opt stack 0
 12359  002404                     i2_GLCD_ReadStatus:
 12360                           	opt stack 15
 12361                           
 12362                           ;incstack = 0
 12363                           ;i2GLCD_ReadStatus@controller stored from wreg
 12364  002404  6E03               	movwf	i2GLCD_ReadStatus@controller,c
 12365                           
 12366                           ;KS0108-PIC18.c: 64: unsigned char status;
 12367                           ;KS0108-PIC18.c: 65: TRISD = 0xFF;
 12368  002406  6895               	setf	3989,c	;volatile
 12369                           
 12370                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
 12371  002408  8280               	bsf	3968,1,c	;volatile
 12372                           
 12373                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
 12374  00240A  9480               	bcf	3968,2,c	;volatile
 12375                           
 12376                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
 12377  00240C  5003               	movf	i2GLCD_ReadStatus@controller,w,c
 12378  00240E  ECDC  F011         	call	i2_GLCD_EnableController
 12379                           
 12380                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
 12381  002412  8680               	bsf	3968,3,c	;volatile
 12382                           
 12383                           ;KS0108-PIC18.c: 70: GLCD_Delay();
 12384  002414  ECA1  F012         	call	i2_GLCD_Delay	;wreg free
 12385                           
 12386                           ;KS0108-PIC18.c: 71: status = PORTD;
 12387  002418  CF83 F002          	movff	3971,i2GLCD_ReadStatus@status	;volatile
 12388                           
 12389                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
 12390  00241C  9680               	bcf	3968,3,c	;volatile
 12391                           
 12392                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
 12393  00241E  5003               	movf	i2GLCD_ReadStatus@controller,w,c
 12394  002420  ECEF  F011         	call	i2_GLCD_DisableController
 12395                           
 12396                           ;KS0108-PIC18.c: 74: return status;
 12397  002424  5002               	movf	i2GLCD_ReadStatus@status,w,c
 12398  002426  0012               	return	
 12399  002428                     __end_ofi2_GLCD_ReadStatus:
 12400                           	opt stack 0
 12401                           tosu	equ	0xFFF
 12402                           tosh	equ	0xFFE
 12403                           tosl	equ	0xFFD
 12404                           pclatu	equ	0xFFB
 12405                           pclath	equ	0xFFA
 12406                           tblptru	equ	0xFF8
 12407                           tblptrh	equ	0xFF7
 12408                           tblptrl	equ	0xFF6
 12409                           tablat	equ	0xFF5
 12410                           prodh	equ	0xFF4
 12411                           prodl	equ	0xFF3
 12412                           intcon	equ	0xFF2
 12413                           indf0	equ	0xFEF
 12414                           postinc0	equ	0xFEE
 12415                           fsr0h	equ	0xFEA
 12416                           fsr0l	equ	0xFE9
 12417                           wreg	equ	0xFE8
 12418                           postdec1	equ	0xFE5
 12419                           fsr1h	equ	0xFE2
 12420                           fsr1l	equ	0xFE1
 12421                           indf2	equ	0xFDF
 12422                           fsr2h	equ	0xFDA
 12423                           fsr2l	equ	0xFD9
 12424                           status	equ	0xFD8
 12425                           
 12426 ;; *************** function i2_GLCD_EnableController *****************
 12427 ;; Defined at:
 12428 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
 12429 ;; Parameters:    Size  Location     Type
 12430 ;;  controller      1    wreg     unsigned char 
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;  controller      1    0[COMRAM] unsigned char 
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  1    wreg      void 
 12435 ;; Registers used:
 12436 ;;		wreg, status,2, status,0
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12446 ;;Total ram usage:        1 bytes
 12447 ;; Hardware stack levels used:    1
 12448 ;; This function calls:
 12449 ;;		Nothing
 12450 ;; This function is called by:
 12451 ;;		i2_GLCD_ReadStatus
 12452 ;;		i2_GLCD_WriteCommand
 12453 ;;		i2_GLCD_WriteData
 12454 ;; This function uses a non-reentrant model
 12455 ;;
 12456                           
 12457                           	psect	text81
 12458  0023B8                     __ptext81:
 12459                           	opt stack 0
 12460  0023B8                     i2_GLCD_EnableController:
 12461                           	opt stack 15
 12462                           
 12463                           ;incstack = 0
 12464                           ;i2GLCD_EnableController@controller stored from wreg
 12465  0023B8  6E01               	movwf	i2GLCD_EnableController@controller,c
 12466                           
 12467                           ;KS0108-PIC18.c: 41: switch(controller){
 12468  0023BA  D006               	goto	i2l569
 12469  0023BC  9A80               	bcf	3968,5,c	;volatile
 12470  0023BE  0012               	return	
 12471  0023C0  9C80               	bcf	3968,6,c	;volatile
 12472  0023C2  0012               	return	
 12473  0023C4  9E80               	bcf	3968,7,c	;volatile
 12474                           
 12475                           ;KS0108-PIC18.c: 45: }
 12476  0023C6  0012               	return	
 12477  0023C8                     i2l569:
 12478  0023C8  5001               	movf	i2GLCD_EnableController@controller,w,c
 12479                           
 12480                           ; Switch size 1, requested type "space"
 12481                           ; Number of cases is 3, Range of values is 0 to 2
 12482                           ; switch strategies available:
 12483                           ; Name         Instructions Cycles
 12484                           ; simple_byte           10     6 (average)
 12485                           ;	Chosen strategy is simple_byte
 12486  0023CA  0A00               	xorlw	0	; case 0
 12487  0023CC  B4D8               	btfsc	status,2,c
 12488  0023CE  D7F6               	goto	i2l570
 12489  0023D0  0A01               	xorlw	1	; case 1
 12490  0023D2  B4D8               	btfsc	status,2,c
 12491  0023D4  D7F5               	goto	i2l572
 12492  0023D6  0A03               	xorlw	3	; case 2
 12493  0023D8  A4D8               	btfss	status,2,c
 12494  0023DA  0012               	return	
 12495  0023DC  D7F3               	goto	i2l573
 12496  0023DE                     __end_ofi2_GLCD_EnableController:
 12497                           	opt stack 0
 12498                           tosu	equ	0xFFF
 12499                           tosh	equ	0xFFE
 12500                           tosl	equ	0xFFD
 12501                           pclatu	equ	0xFFB
 12502                           pclath	equ	0xFFA
 12503                           tblptru	equ	0xFF8
 12504                           tblptrh	equ	0xFF7
 12505                           tblptrl	equ	0xFF6
 12506                           tablat	equ	0xFF5
 12507                           prodh	equ	0xFF4
 12508                           prodl	equ	0xFF3
 12509                           intcon	equ	0xFF2
 12510                           indf0	equ	0xFEF
 12511                           postinc0	equ	0xFEE
 12512                           fsr0h	equ	0xFEA
 12513                           fsr0l	equ	0xFE9
 12514                           wreg	equ	0xFE8
 12515                           postdec1	equ	0xFE5
 12516                           fsr1h	equ	0xFE2
 12517                           fsr1l	equ	0xFE1
 12518                           indf2	equ	0xFDF
 12519                           fsr2h	equ	0xFDA
 12520                           fsr2l	equ	0xFD9
 12521                           status	equ	0xFD8
 12522                           
 12523 ;; *************** function i2_GLCD_DisableController *****************
 12524 ;; Defined at:
 12525 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
 12526 ;; Parameters:    Size  Location     Type
 12527 ;;  controller      1    wreg     unsigned char 
 12528 ;; Auto vars:     Size  Location     Type
 12529 ;;  controller      1    0[COMRAM] unsigned char 
 12530 ;; Return value:  Size  Location     Type
 12531 ;;                  1    wreg      void 
 12532 ;; Registers used:
 12533 ;;		wreg, status,2, status,0
 12534 ;; Tracked objects:
 12535 ;;		On entry : 0/0
 12536 ;;		On exit  : 0/0
 12537 ;;		Unchanged: 0/0
 12538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12543 ;;Total ram usage:        1 bytes
 12544 ;; Hardware stack levels used:    1
 12545 ;; This function calls:
 12546 ;;		Nothing
 12547 ;; This function is called by:
 12548 ;;		i2_GLCD_ReadStatus
 12549 ;;		i2_GLCD_WriteCommand
 12550 ;;		i2_GLCD_WriteData
 12551 ;; This function uses a non-reentrant model
 12552 ;;
 12553                           
 12554                           	psect	text82
 12555  0023DE                     __ptext82:
 12556                           	opt stack 0
 12557  0023DE                     i2_GLCD_DisableController:
 12558                           	opt stack 15
 12559                           
 12560                           ;incstack = 0
 12561                           ;i2GLCD_DisableController@controller stored from wreg
 12562  0023DE  6E01               	movwf	i2GLCD_DisableController@controller,c
 12563                           
 12564                           ;KS0108-PIC18.c: 52: switch(controller)
 12565  0023E0  D006               	goto	i2l577
 12566  0023E2  8A80               	bsf	3968,5,c	;volatile
 12567  0023E4  0012               	return	
 12568  0023E6  8C80               	bsf	3968,6,c	;volatile
 12569  0023E8  0012               	return	
 12570  0023EA  8E80               	bsf	3968,7,c	;volatile
 12571                           
 12572                           ;KS0108-PIC18.c: 57: }
 12573  0023EC  0012               	return	
 12574  0023EE                     i2l577:
 12575  0023EE  5001               	movf	i2GLCD_DisableController@controller,w,c
 12576                           
 12577                           ; Switch size 1, requested type "space"
 12578                           ; Number of cases is 3, Range of values is 0 to 2
 12579                           ; switch strategies available:
 12580                           ; Name         Instructions Cycles
 12581                           ; simple_byte           10     6 (average)
 12582                           ;	Chosen strategy is simple_byte
 12583  0023F0  0A00               	xorlw	0	; case 0
 12584  0023F2  B4D8               	btfsc	status,2,c
 12585  0023F4  D7F6               	goto	i2l578
 12586  0023F6  0A01               	xorlw	1	; case 1
 12587  0023F8  B4D8               	btfsc	status,2,c
 12588  0023FA  D7F5               	goto	i2l580
 12589  0023FC  0A03               	xorlw	3	; case 2
 12590  0023FE  A4D8               	btfss	status,2,c
 12591  002400  0012               	return	
 12592  002402  D7F3               	goto	i2l581
 12593  002404                     __end_ofi2_GLCD_DisableController:
 12594                           	opt stack 0
 12595                           tosu	equ	0xFFF
 12596                           tosh	equ	0xFFE
 12597                           tosl	equ	0xFFD
 12598                           pclatu	equ	0xFFB
 12599                           pclath	equ	0xFFA
 12600                           tblptru	equ	0xFF8
 12601                           tblptrh	equ	0xFF7
 12602                           tblptrl	equ	0xFF6
 12603                           tablat	equ	0xFF5
 12604                           prodh	equ	0xFF4
 12605                           prodl	equ	0xFF3
 12606                           intcon	equ	0xFF2
 12607                           indf0	equ	0xFEF
 12608                           postinc0	equ	0xFEE
 12609                           fsr0h	equ	0xFEA
 12610                           fsr0l	equ	0xFE9
 12611                           wreg	equ	0xFE8
 12612                           postdec1	equ	0xFE5
 12613                           fsr1h	equ	0xFE2
 12614                           fsr1l	equ	0xFE1
 12615                           indf2	equ	0xFDF
 12616                           fsr2h	equ	0xFDA
 12617                           fsr2l	equ	0xFD9
 12618                           status	equ	0xFD8
 12619                           
 12620 ;; *************** function i2_GLCD_Delay *****************
 12621 ;; Defined at:
 12622 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
 12623 ;; Parameters:    Size  Location     Type
 12624 ;;		None
 12625 ;; Auto vars:     Size  Location     Type
 12626 ;;		None
 12627 ;; Return value:  Size  Location     Type
 12628 ;;                  1    wreg      void 
 12629 ;; Registers used:
 12630 ;;		None
 12631 ;; Tracked objects:
 12632 ;;		On entry : 0/0
 12633 ;;		On exit  : 0/0
 12634 ;;		Unchanged: 0/0
 12635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12640 ;;Total ram usage:        0 bytes
 12641 ;; Hardware stack levels used:    1
 12642 ;; This function calls:
 12643 ;;		Nothing
 12644 ;; This function is called by:
 12645 ;;		i2_GLCD_ReadStatus
 12646 ;;		i2_GLCD_WriteCommand
 12647 ;;		i2_GLCD_WriteData
 12648 ;; This function uses a non-reentrant model
 12649 ;;
 12650                           
 12651                           	psect	text83
 12652  002542                     __ptext83:
 12653                           	opt stack 0
 12654  002542                     i2_GLCD_Delay:
 12655                           	opt stack 15
 12656                           
 12657                           ;KS0108-PIC18.c: 26: __nop();
 12658                           
 12659                           ;incstack = 0
 12660  002542  F000               	nop	
 12661  002544  0012               	return		;funcret
 12662  002546                     __end_ofi2_GLCD_Delay:
 12663                           	opt stack 0
 12664                           tosu	equ	0xFFF
 12665                           tosh	equ	0xFFE
 12666                           tosl	equ	0xFFD
 12667                           pclatu	equ	0xFFB
 12668                           pclath	equ	0xFFA
 12669                           tblptru	equ	0xFF8
 12670                           tblptrh	equ	0xFF7
 12671                           tblptrl	equ	0xFF6
 12672                           tablat	equ	0xFF5
 12673                           prodh	equ	0xFF4
 12674                           prodl	equ	0xFF3
 12675                           intcon	equ	0xFF2
 12676                           indf0	equ	0xFEF
 12677                           postinc0	equ	0xFEE
 12678                           fsr0h	equ	0xFEA
 12679                           fsr0l	equ	0xFE9
 12680                           wreg	equ	0xFE8
 12681                           postdec1	equ	0xFE5
 12682                           fsr1h	equ	0xFE2
 12683                           fsr1l	equ	0xFE1
 12684                           indf2	equ	0xFDF
 12685                           fsr2h	equ	0xFDA
 12686                           fsr2l	equ	0xFD9
 12687                           status	equ	0xFD8
 12688                           
 12689 ;; *************** function ___ftsub *****************
 12690 ;; Defined at:
 12691 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 12692 ;; Parameters:    Size  Location     Type
 12693 ;;  f1              3   20[COMRAM] float 
 12694 ;;  f2              3   23[COMRAM] float 
 12695 ;; Auto vars:     Size  Location     Type
 12696 ;;		None
 12697 ;; Return value:  Size  Location     Type
 12698 ;;                  3   20[COMRAM] float 
 12699 ;; Registers used:
 12700 ;;		wreg, status,2, status,0, cstack
 12701 ;; Tracked objects:
 12702 ;;		On entry : 0/0
 12703 ;;		On exit  : 0/0
 12704 ;;		Unchanged: 0/0
 12705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12706 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12709 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12710 ;;Total ram usage:        6 bytes
 12711 ;; Hardware stack levels used:    1
 12712 ;; Hardware stack levels required when called:    2
 12713 ;; This function calls:
 12714 ;;		___ftadd
 12715 ;; This function is called by:
 12716 ;;		_Brightness_Menu_Function
 12717 ;; This function uses a non-reentrant model
 12718 ;;
 12719                           
 12720                           	psect	text84
 12721  0020A8                     __ptext84:
 12722                           	opt stack 0
 12723  0020A8                     ___ftsub:
 12724                           	opt stack 17
 12725                           
 12726                           ;incstack = 0
 12727  0020A8  5018               	movf	___ftsub@f2,w,c
 12728  0020AA  1019               	iorwf	___ftsub@f2+1,w,c
 12729  0020AC  101A               	iorwf	___ftsub@f2+2,w,c
 12730  0020AE  B4D8               	btfsc	status,2,c
 12731  0020B0  D006               	goto	i2l1085
 12732  0020B2  0E00               	movlw	0
 12733  0020B4  1A18               	xorwf	___ftsub@f2,f,c
 12734  0020B6  0E00               	movlw	0
 12735  0020B8  1A19               	xorwf	___ftsub@f2+1,f,c
 12736  0020BA  0E80               	movlw	128
 12737  0020BC  1A1A               	xorwf	___ftsub@f2+2,f,c
 12738  0020BE                     i2l1085:
 12739  0020BE  C015  F009         	movff	___ftsub@f1,___ftadd@f1
 12740  0020C2  C016  F00A         	movff	___ftsub@f1+1,___ftadd@f1+1
 12741  0020C6  C017  F00B         	movff	___ftsub@f1+2,___ftadd@f1+2
 12742  0020CA  C018  F00C         	movff	___ftsub@f2,___ftadd@f2
 12743  0020CE  C019  F00D         	movff	___ftsub@f2+1,___ftadd@f2+1
 12744  0020D2  C01A  F00E         	movff	___ftsub@f2+2,___ftadd@f2+2
 12745  0020D6  EC36  F001         	call	___ftadd	;wreg free
 12746  0020DA  C009  F015         	movff	?___ftadd,?___ftsub
 12747  0020DE  C00A  F016         	movff	?___ftadd+1,?___ftsub+1
 12748  0020E2  C00B  F017         	movff	?___ftadd+2,?___ftsub+2
 12749  0020E6  0012               	return	
 12750  0020E8                     __end_of___ftsub:
 12751                           	opt stack 0
 12752                           tosu	equ	0xFFF
 12753                           tosh	equ	0xFFE
 12754                           tosl	equ	0xFFD
 12755                           pclatu	equ	0xFFB
 12756                           pclath	equ	0xFFA
 12757                           tblptru	equ	0xFF8
 12758                           tblptrh	equ	0xFF7
 12759                           tblptrl	equ	0xFF6
 12760                           tablat	equ	0xFF5
 12761                           prodh	equ	0xFF4
 12762                           prodl	equ	0xFF3
 12763                           intcon	equ	0xFF2
 12764                           indf0	equ	0xFEF
 12765                           postinc0	equ	0xFEE
 12766                           fsr0h	equ	0xFEA
 12767                           fsr0l	equ	0xFE9
 12768                           wreg	equ	0xFE8
 12769                           postdec1	equ	0xFE5
 12770                           fsr1h	equ	0xFE2
 12771                           fsr1l	equ	0xFE1
 12772                           indf2	equ	0xFDF
 12773                           fsr2h	equ	0xFDA
 12774                           fsr2l	equ	0xFD9
 12775                           status	equ	0xFD8
 12776                           
 12777 ;; *************** function ___ftadd *****************
 12778 ;; Defined at:
 12779 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 12780 ;; Parameters:    Size  Location     Type
 12781 ;;  f1              3    8[COMRAM] float 
 12782 ;;  f2              3   11[COMRAM] float 
 12783 ;; Auto vars:     Size  Location     Type
 12784 ;;  exp1            1   19[COMRAM] unsigned char 
 12785 ;;  exp2            1   18[COMRAM] unsigned char 
 12786 ;;  sign            1   17[COMRAM] unsigned char 
 12787 ;; Return value:  Size  Location     Type
 12788 ;;                  3    8[COMRAM] float 
 12789 ;; Registers used:
 12790 ;;		wreg, status,2, status,0, cstack
 12791 ;; Tracked objects:
 12792 ;;		On entry : 0/0
 12793 ;;		On exit  : 0/0
 12794 ;;		Unchanged: 0/0
 12795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12796 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12797 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12798 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12799 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12800 ;;Total ram usage:       12 bytes
 12801 ;; Hardware stack levels used:    1
 12802 ;; Hardware stack levels required when called:    1
 12803 ;; This function calls:
 12804 ;;		i2___ftpack
 12805 ;; This function is called by:
 12806 ;;		_Brightness_Menu_Function
 12807 ;;		___ftsub
 12808 ;; This function uses a non-reentrant model
 12809 ;;
 12810                           
 12811                           	psect	text85
 12812  00026C                     __ptext85:
 12813                           	opt stack 0
 12814  00026C                     ___ftadd:
 12815                           	opt stack 17
 12816                           
 12817                           ;incstack = 0
 12818  00026C  C00B  F00F         	movff	___ftadd@f1+2,??___ftadd
 12819  000270  6A10               	clrf	(??___ftadd+1)& (0+255),c
 12820  000272  6A11               	clrf	(??___ftadd+2)& (0+255),c
 12821  000274  340A               	rlcf	___ftadd@f1+1,w,c
 12822  000276  360F               	rlcf	??___ftadd& (0+255),f,c
 12823  000278  E301               	bnc	u263_41
 12824  00027A  8010               	bsf	(??___ftadd+1)& (0+255),0,c
 12825  00027C                     u263_41:
 12826  00027C  500F               	movf	??___ftadd,w,c
 12827  00027E  6E14               	movwf	___ftadd@exp1,c
 12828  000280  C00E  F00F         	movff	___ftadd@f2+2,??___ftadd
 12829  000284  6A10               	clrf	(??___ftadd+1)& (0+255),c
 12830  000286  6A11               	clrf	(??___ftadd+2)& (0+255),c
 12831  000288  340D               	rlcf	___ftadd@f2+1,w,c
 12832  00028A  360F               	rlcf	??___ftadd& (0+255),f,c
 12833  00028C  E301               	bnc	u264_41
 12834  00028E  8010               	bsf	(??___ftadd+1)& (0+255),0,c
 12835  000290                     u264_41:
 12836  000290  500F               	movf	??___ftadd,w,c
 12837  000292  6E13               	movwf	___ftadd@exp2,c
 12838  000294  5014               	movf	___ftadd@exp1,w,c
 12839  000296  B4D8               	btfsc	status,2,c
 12840  000298  D00B               	goto	i2u267_40
 12841  00029A  5013               	movf	___ftadd@exp2,w,c
 12842  00029C  5C14               	subwf	___ftadd@exp1,w,c
 12843  00029E  B0D8               	btfsc	status,0,c
 12844  0002A0  D00E               	goto	i2l1020
 12845  0002A2  5014               	movf	___ftadd@exp1,w,c
 12846  0002A4  0800               	sublw	0
 12847  0002A6  2413               	addwf	___ftadd@exp2,w,c
 12848  0002A8  6E0F               	movwf	??___ftadd& (0+255),c
 12849  0002AA  0E18               	movlw	24
 12850  0002AC  640F               	cpfsgt	??___ftadd,c
 12851  0002AE  D007               	goto	i2l1020
 12852  0002B0                     i2u267_40:
 12853  0002B0  C00C  F009         	movff	___ftadd@f2,?___ftadd
 12854  0002B4  C00D  F00A         	movff	___ftadd@f2+1,?___ftadd+1
 12855  0002B8  C00E  F00B         	movff	___ftadd@f2+2,?___ftadd+2
 12856  0002BC  0012               	return	
 12857  0002BE                     i2l1020:
 12858  0002BE  5013               	movf	___ftadd@exp2,w,c
 12859  0002C0  B4D8               	btfsc	status,2,c
 12860  0002C2  D00B               	goto	i2u270_40
 12861  0002C4  5014               	movf	___ftadd@exp1,w,c
 12862  0002C6  5C13               	subwf	___ftadd@exp2,w,c
 12863  0002C8  B0D8               	btfsc	status,0,c
 12864  0002CA  D00E               	goto	i2l1024
 12865  0002CC  5013               	movf	___ftadd@exp2,w,c
 12866  0002CE  0800               	sublw	0
 12867  0002D0  2414               	addwf	___ftadd@exp1,w,c
 12868  0002D2  6E0F               	movwf	??___ftadd& (0+255),c
 12869  0002D4  0E18               	movlw	24
 12870  0002D6  640F               	cpfsgt	??___ftadd,c
 12871  0002D8  D007               	goto	i2l1024
 12872  0002DA                     i2u270_40:
 12873  0002DA  C009  F009         	movff	___ftadd@f1,?___ftadd
 12874  0002DE  C00A  F00A         	movff	___ftadd@f1+1,?___ftadd+1
 12875  0002E2  C00B  F00B         	movff	___ftadd@f1+2,?___ftadd+2
 12876  0002E6  0012               	return	
 12877  0002E8                     i2l1024:
 12878  0002E8  0E06               	movlw	6
 12879  0002EA  6E12               	movwf	___ftadd@sign,c
 12880  0002EC  BE0B               	btfsc	___ftadd@f1+2,7,c
 12881  0002EE  8E12               	bsf	___ftadd@sign,7,c
 12882  0002F0  BE0E               	btfsc	___ftadd@f2+2,7,c
 12883  0002F2  8C12               	bsf	___ftadd@sign,6,c
 12884  0002F4  8E0A               	bsf	___ftadd@f1+1,7,c
 12885  0002F6  0EFF               	movlw	255
 12886  0002F8  1609               	andwf	___ftadd@f1,f,c
 12887  0002FA  0EFF               	movlw	255
 12888  0002FC  160A               	andwf	___ftadd@f1+1,f,c
 12889  0002FE  0E00               	movlw	0
 12890  000300  160B               	andwf	___ftadd@f1+2,f,c
 12891  000302  8E0D               	bsf	___ftadd@f2+1,7,c
 12892  000304  0EFF               	movlw	255
 12893  000306  160C               	andwf	___ftadd@f2,f,c
 12894  000308  0EFF               	movlw	255
 12895  00030A  160D               	andwf	___ftadd@f2+1,f,c
 12896  00030C  0E00               	movlw	0
 12897  00030E  160E               	andwf	___ftadd@f2+2,f,c
 12898  000310  5013               	movf	___ftadd@exp2,w,c
 12899  000312  5C14               	subwf	___ftadd@exp1,w,c
 12900  000314  B0D8               	btfsc	status,0,c
 12901  000316  D01B               	goto	i2l1029
 12902  000318                     i2u273_40:
 12903  000318  90D8               	bcf	status,0,c
 12904  00031A  360C               	rlcf	___ftadd@f2,f,c
 12905  00031C  360D               	rlcf	___ftadd@f2+1,f,c
 12906  00031E  360E               	rlcf	___ftadd@f2+2,f,c
 12907  000320  0613               	decf	___ftadd@exp2,f,c
 12908  000322  5014               	movf	___ftadd@exp1,w,c
 12909  000324  1813               	xorwf	___ftadd@exp2,w,c
 12910  000326  B4D8               	btfsc	status,2,c
 12911  000328  D00D               	goto	i2l1034
 12912  00032A  0612               	decf	___ftadd@sign,f,c
 12913  00032C  C012  F00F         	movff	___ftadd@sign,??___ftadd
 12914  000330  0E07               	movlw	7
 12915  000332  160F               	andwf	??___ftadd,f,c
 12916  000334  B4D8               	btfsc	status,2,c
 12917  000336  D006               	goto	i2l1034
 12918  000338  D7EF               	goto	i2u273_40
 12919  00033A  90D8               	bcf	status,0,c
 12920  00033C  320B               	rrcf	___ftadd@f1+2,f,c
 12921  00033E  320A               	rrcf	___ftadd@f1+1,f,c
 12922  000340  3209               	rrcf	___ftadd@f1,f,c
 12923  000342  2A14               	incf	___ftadd@exp1,f,c
 12924  000344                     i2l1034:
 12925  000344  5013               	movf	___ftadd@exp2,w,c
 12926  000346  1814               	xorwf	___ftadd@exp1,w,c
 12927  000348  B4D8               	btfsc	status,2,c
 12928  00034A  D01F               	goto	i2u280_40
 12929  00034C  D7F6               	goto	i2l1035
 12930  00034E                     i2l1029:
 12931  00034E  5014               	movf	___ftadd@exp1,w,c
 12932  000350  5C13               	subwf	___ftadd@exp2,w,c
 12933  000352  B0D8               	btfsc	status,0,c
 12934  000354  D01A               	goto	i2u280_40
 12935  000356                     i2u277_40:
 12936  000356  90D8               	bcf	status,0,c
 12937  000358  3609               	rlcf	___ftadd@f1,f,c
 12938  00035A  360A               	rlcf	___ftadd@f1+1,f,c
 12939  00035C  360B               	rlcf	___ftadd@f1+2,f,c
 12940  00035E  0614               	decf	___ftadd@exp1,f,c
 12941  000360  5014               	movf	___ftadd@exp1,w,c
 12942  000362  1813               	xorwf	___ftadd@exp2,w,c
 12943  000364  B4D8               	btfsc	status,2,c
 12944  000366  D00D               	goto	i2l1043
 12945  000368  0612               	decf	___ftadd@sign,f,c
 12946  00036A  C012  F00F         	movff	___ftadd@sign,??___ftadd
 12947  00036E  0E07               	movlw	7
 12948  000370  160F               	andwf	??___ftadd,f,c
 12949  000372  B4D8               	btfsc	status,2,c
 12950  000374  D006               	goto	i2l1043
 12951  000376  D7EF               	goto	i2u277_40
 12952  000378  90D8               	bcf	status,0,c
 12953  00037A  320E               	rrcf	___ftadd@f2+2,f,c
 12954  00037C  320D               	rrcf	___ftadd@f2+1,f,c
 12955  00037E  320C               	rrcf	___ftadd@f2,f,c
 12956  000380  2A13               	incf	___ftadd@exp2,f,c
 12957  000382                     i2l1043:
 12958  000382  5013               	movf	___ftadd@exp2,w,c
 12959  000384  1814               	xorwf	___ftadd@exp1,w,c
 12960  000386  A4D8               	btfss	status,2,c
 12961  000388  D7F7               	goto	i2l1044
 12962  00038A                     i2u280_40:
 12963  00038A  AE12               	btfss	___ftadd@sign,7,c
 12964  00038C  D00C               	goto	i2l1046
 12965  00038E  0EFF               	movlw	255
 12966  000390  1A09               	xorwf	___ftadd@f1,f,c
 12967  000392  0EFF               	movlw	255
 12968  000394  1A0A               	xorwf	___ftadd@f1+1,f,c
 12969  000396  0EFF               	movlw	255
 12970  000398  1A0B               	xorwf	___ftadd@f1+2,f,c
 12971  00039A  0E01               	movlw	1
 12972  00039C  2609               	addwf	___ftadd@f1,f,c
 12973  00039E  0E00               	movlw	0
 12974  0003A0  220A               	addwfc	___ftadd@f1+1,f,c
 12975  0003A2  0E00               	movlw	0
 12976  0003A4  220B               	addwfc	___ftadd@f1+2,f,c
 12977  0003A6                     i2l1046:
 12978  0003A6  AC12               	btfss	___ftadd@sign,6,c
 12979  0003A8  D00C               	goto	i2l1047
 12980  0003AA  0EFF               	movlw	255
 12981  0003AC  1A0C               	xorwf	___ftadd@f2,f,c
 12982  0003AE  0EFF               	movlw	255
 12983  0003B0  1A0D               	xorwf	___ftadd@f2+1,f,c
 12984  0003B2  0EFF               	movlw	255
 12985  0003B4  1A0E               	xorwf	___ftadd@f2+2,f,c
 12986  0003B6  0E01               	movlw	1
 12987  0003B8  260C               	addwf	___ftadd@f2,f,c
 12988  0003BA  0E00               	movlw	0
 12989  0003BC  220D               	addwfc	___ftadd@f2+1,f,c
 12990  0003BE  0E00               	movlw	0
 12991  0003C0  220E               	addwfc	___ftadd@f2+2,f,c
 12992  0003C2                     i2l1047:
 12993  0003C2  0E00               	movlw	0
 12994  0003C4  6E12               	movwf	___ftadd@sign,c
 12995  0003C6  5009               	movf	___ftadd@f1,w,c
 12996  0003C8  260C               	addwf	___ftadd@f2,f,c
 12997  0003CA  500A               	movf	___ftadd@f1+1,w,c
 12998  0003CC  220D               	addwfc	___ftadd@f2+1,f,c
 12999  0003CE  500B               	movf	___ftadd@f1+2,w,c
 13000  0003D0  220E               	addwfc	___ftadd@f2+2,f,c
 13001  0003D2  AE0E               	btfss	___ftadd@f2+2,7,c
 13002  0003D4  D00E               	goto	i2l1048
 13003  0003D6  0EFF               	movlw	255
 13004  0003D8  1A0C               	xorwf	___ftadd@f2,f,c
 13005  0003DA  0EFF               	movlw	255
 13006  0003DC  1A0D               	xorwf	___ftadd@f2+1,f,c
 13007  0003DE  0EFF               	movlw	255
 13008  0003E0  1A0E               	xorwf	___ftadd@f2+2,f,c
 13009  0003E2  0E01               	movlw	1
 13010  0003E4  260C               	addwf	___ftadd@f2,f,c
 13011  0003E6  0E00               	movlw	0
 13012  0003E8  220D               	addwfc	___ftadd@f2+1,f,c
 13013  0003EA  0E00               	movlw	0
 13014  0003EC  220E               	addwfc	___ftadd@f2+2,f,c
 13015  0003EE  0E01               	movlw	1
 13016  0003F0  6E12               	movwf	___ftadd@sign,c
 13017  0003F2                     i2l1048:
 13018  0003F2  C00C  F001         	movff	___ftadd@f2,i2___ftpack@arg
 13019  0003F6  C00D  F002         	movff	___ftadd@f2+1,i2___ftpack@arg+1
 13020  0003FA  C00E  F003         	movff	___ftadd@f2+2,i2___ftpack@arg+2
 13021  0003FE  C014  F004         	movff	___ftadd@exp1,i2___ftpack@exp
 13022  000402  C012  F005         	movff	___ftadd@sign,i2___ftpack@sign
 13023  000406  EC57  F008         	call	i2___ftpack	;wreg free
 13024  00040A  C001  F009         	movff	?i2___ftpack,?___ftadd
 13025  00040E  C002  F00A         	movff	?i2___ftpack+1,?___ftadd+1
 13026  000412  C003  F00B         	movff	?i2___ftpack+2,?___ftadd+2
 13027  000416  0012               	return	
 13028  000418                     __end_of___ftadd:
 13029                           	opt stack 0
 13030                           tosu	equ	0xFFF
 13031                           tosh	equ	0xFFE
 13032                           tosl	equ	0xFFD
 13033                           pclatu	equ	0xFFB
 13034                           pclath	equ	0xFFA
 13035                           tblptru	equ	0xFF8
 13036                           tblptrh	equ	0xFF7
 13037                           tblptrl	equ	0xFF6
 13038                           tablat	equ	0xFF5
 13039                           prodh	equ	0xFF4
 13040                           prodl	equ	0xFF3
 13041                           intcon	equ	0xFF2
 13042                           indf0	equ	0xFEF
 13043                           postinc0	equ	0xFEE
 13044                           fsr0h	equ	0xFEA
 13045                           fsr0l	equ	0xFE9
 13046                           wreg	equ	0xFE8
 13047                           postdec1	equ	0xFE5
 13048                           fsr1h	equ	0xFE2
 13049                           fsr1l	equ	0xFE1
 13050                           indf2	equ	0xFDF
 13051                           fsr2h	equ	0xFDA
 13052                           fsr2l	equ	0xFD9
 13053                           status	equ	0xFD8
 13054                           
 13055 ;; *************** function i2___ftpack *****************
 13056 ;; Defined at:
 13057 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 13058 ;; Parameters:    Size  Location     Type
 13059 ;;  arg             3    0[COMRAM] unsigned um
 13060 ;;  exp             1    3[COMRAM] unsigned char 
 13061 ;;  sign            1    4[COMRAM] unsigned char 
 13062 ;; Auto vars:     Size  Location     Type
 13063 ;;		None
 13064 ;; Return value:  Size  Location     Type
 13065 ;;                  3    0[COMRAM] float 
 13066 ;; Registers used:
 13067 ;;		wreg, status,2, status,0
 13068 ;; Tracked objects:
 13069 ;;		On entry : 0/0
 13070 ;;		On exit  : 0/0
 13071 ;;		Unchanged: 0/0
 13072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13073 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13075 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13076 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13077 ;;Total ram usage:        8 bytes
 13078 ;; Hardware stack levels used:    1
 13079 ;; This function calls:
 13080 ;;		Nothing
 13081 ;; This function is called by:
 13082 ;;		___ftadd
 13083 ;;		i2___awtoft
 13084 ;;		i2___ftdiv
 13085 ;;		i2___ftmul
 13086 ;; This function uses a non-reentrant model
 13087 ;;
 13088                           
 13089                           	psect	text86
 13090  0010AE                     __ptext86:
 13091                           	opt stack 0
 13092  0010AE                     i2___ftpack:
 13093                           	opt stack 18
 13094                           
 13095                           ;incstack = 0
 13096  0010AE  5004               	movf	i2___ftpack@exp,w,c
 13097  0010B0  B4D8               	btfsc	status,2,c
 13098  0010B2  D005               	goto	i2u247_40
 13099  0010B4  5001               	movf	i2___ftpack@arg,w,c
 13100  0010B6  1002               	iorwf	i2___ftpack@arg+1,w,c
 13101  0010B8  1003               	iorwf	i2___ftpack@arg+2,w,c
 13102  0010BA  A4D8               	btfss	status,2,c
 13103  0010BC  D00C               	goto	i2l989
 13104  0010BE                     i2u247_40:
 13105  0010BE  0E00               	movlw	0
 13106  0010C0  6E01               	movwf	?i2___ftpack,c
 13107  0010C2  0E00               	movlw	0
 13108  0010C4  6E02               	movwf	?i2___ftpack+1,c
 13109  0010C6  0E00               	movlw	0
 13110  0010C8  6E03               	movwf	?i2___ftpack+2,c
 13111  0010CA  0012               	return	
 13112  0010CC  2A04               	incf	i2___ftpack@exp,f,c
 13113  0010CE  90D8               	bcf	status,0,c
 13114  0010D0  3203               	rrcf	i2___ftpack@arg+2,f,c
 13115  0010D2  3202               	rrcf	i2___ftpack@arg+1,f,c
 13116  0010D4  3201               	rrcf	i2___ftpack@arg,f,c
 13117  0010D6                     i2l989:
 13118  0010D6  0E00               	movlw	0
 13119  0010D8  1401               	andwf	i2___ftpack@arg,w,c
 13120  0010DA  6E06               	movwf	??i2___ftpack& (0+255),c
 13121  0010DC  0E00               	movlw	0
 13122  0010DE  1402               	andwf	i2___ftpack@arg+1,w,c
 13123  0010E0  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 13124  0010E2  0EFE               	movlw	254
 13125  0010E4  1403               	andwf	i2___ftpack@arg+2,w,c
 13126  0010E6  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 13127  0010E8  5006               	movf	??i2___ftpack,w,c
 13128  0010EA  1007               	iorwf	??i2___ftpack+1,w,c
 13129  0010EC  1008               	iorwf	??i2___ftpack+2,w,c
 13130  0010EE  B4D8               	btfsc	status,2,c
 13131  0010F0  D00C               	goto	i2l992
 13132  0010F2  D7EC               	goto	i2l990
 13133  0010F4  2A04               	incf	i2___ftpack@exp,f,c
 13134  0010F6  0E01               	movlw	1
 13135  0010F8  2601               	addwf	i2___ftpack@arg,f,c
 13136  0010FA  0E00               	movlw	0
 13137  0010FC  2202               	addwfc	i2___ftpack@arg+1,f,c
 13138  0010FE  0E00               	movlw	0
 13139  001100  2203               	addwfc	i2___ftpack@arg+2,f,c
 13140  001102  90D8               	bcf	status,0,c
 13141  001104  3203               	rrcf	i2___ftpack@arg+2,f,c
 13142  001106  3202               	rrcf	i2___ftpack@arg+1,f,c
 13143  001108  3201               	rrcf	i2___ftpack@arg,f,c
 13144  00110A                     i2l992:
 13145  00110A  0E00               	movlw	0
 13146  00110C  1401               	andwf	i2___ftpack@arg,w,c
 13147  00110E  6E06               	movwf	??i2___ftpack& (0+255),c
 13148  001110  0E00               	movlw	0
 13149  001112  1402               	andwf	i2___ftpack@arg+1,w,c
 13150  001114  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 13151  001116  0EFF               	movlw	255
 13152  001118  1403               	andwf	i2___ftpack@arg+2,w,c
 13153  00111A  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 13154  00111C  5006               	movf	??i2___ftpack,w,c
 13155  00111E  1007               	iorwf	??i2___ftpack+1,w,c
 13156  001120  1008               	iorwf	??i2___ftpack+2,w,c
 13157  001122  B4D8               	btfsc	status,2,c
 13158  001124  D006               	goto	i2l995
 13159  001126  D7E6               	goto	i2l993
 13160  001128  0604               	decf	i2___ftpack@exp,f,c
 13161  00112A  90D8               	bcf	status,0,c
 13162  00112C  3601               	rlcf	i2___ftpack@arg,f,c
 13163  00112E  3602               	rlcf	i2___ftpack@arg+1,f,c
 13164  001130  3603               	rlcf	i2___ftpack@arg+2,f,c
 13165  001132                     i2l995:
 13166  001132  BE02               	btfsc	i2___ftpack@arg+1,7,c
 13167  001134  D003               	goto	i2u251_40
 13168  001136  0E02               	movlw	2
 13169  001138  6004               	cpfslt	i2___ftpack@exp,c
 13170  00113A  D7F6               	goto	i2l996
 13171  00113C                     i2u251_40:
 13172  00113C  A004               	btfss	i2___ftpack@exp,0,c
 13173  00113E  9E02               	bcf	i2___ftpack@arg+1,7,c
 13174  001140  90D8               	bcf	status,0,c
 13175  001142  3204               	rrcf	i2___ftpack@exp,f,c
 13176  001144  5004               	movf	i2___ftpack@exp,w,c
 13177  001146  1203               	iorwf	i2___ftpack@arg+2,f,c
 13178  001148  5005               	movf	i2___ftpack@sign,w,c
 13179  00114A  A4D8               	btfss	status,2,c
 13180  00114C  8E03               	bsf	i2___ftpack@arg+2,7,c
 13181  00114E  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 13182  001152  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 13183  001156  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 13184  00115A  0012               	return	
 13185  00115C                     __end_ofi2___ftpack:
 13186                           	opt stack 0
 13187                           tosu	equ	0xFFF
 13188                           tosh	equ	0xFFE
 13189                           tosl	equ	0xFFD
 13190                           pclatu	equ	0xFFB
 13191                           pclath	equ	0xFFA
 13192                           tblptru	equ	0xFF8
 13193                           tblptrh	equ	0xFF7
 13194                           tblptrl	equ	0xFF6
 13195                           tablat	equ	0xFF5
 13196                           prodh	equ	0xFF4
 13197                           prodl	equ	0xFF3
 13198                           intcon	equ	0xFF2
 13199                           indf0	equ	0xFEF
 13200                           postinc0	equ	0xFEE
 13201                           fsr0h	equ	0xFEA
 13202                           fsr0l	equ	0xFE9
 13203                           wreg	equ	0xFE8
 13204                           postdec1	equ	0xFE5
 13205                           fsr1h	equ	0xFE2
 13206                           fsr1l	equ	0xFE1
 13207                           indf2	equ	0xFDF
 13208                           fsr2h	equ	0xFDA
 13209                           fsr2l	equ	0xFD9
 13210                           status	equ	0xFD8
 13211                           
 13212 ;; *************** function ___ftge *****************
 13213 ;; Defined at:
 13214 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 13215 ;; Parameters:    Size  Location     Type
 13216 ;;  ff1             3    0[COMRAM] float 
 13217 ;;  ff2             3    3[COMRAM] float 
 13218 ;; Auto vars:     Size  Location     Type
 13219 ;;		None
 13220 ;; Return value:  Size  Location     Type
 13221 ;;		None               void
 13222 ;; Registers used:
 13223 ;;		wreg, status,2, status,0
 13224 ;; Tracked objects:
 13225 ;;		On entry : 0/0
 13226 ;;		On exit  : 0/0
 13227 ;;		Unchanged: 0/0
 13228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13229 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13231 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13232 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13233 ;;Total ram usage:        9 bytes
 13234 ;; Hardware stack levels used:    1
 13235 ;; This function calls:
 13236 ;;		Nothing
 13237 ;; This function is called by:
 13238 ;;		_Brightness_Menu_Function
 13239 ;; This function uses a non-reentrant model
 13240 ;;
 13241                           
 13242                           	psect	text87
 13243  0013EE                     __ptext87:
 13244                           	opt stack 0
 13245  0013EE                     ___ftge:
 13246                           	opt stack 19
 13247                           
 13248                           ;incstack = 0
 13249  0013EE  AE03               	btfss	___ftge@ff1+2,7,c
 13250  0013F0  D016               	goto	i2l1061
 13251  0013F2  C001  F007         	movff	___ftge@ff1,??___ftge
 13252  0013F6  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
 13253  0013FA  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
 13254  0013FE  1E07               	comf	??___ftge,f,c
 13255  001400  1E08               	comf	??___ftge+1,f,c
 13256  001402  1E09               	comf	??___ftge+2,f,c
 13257  001404  2A07               	incf	??___ftge,f,c
 13258  001406  0E00               	movlw	0
 13259  001408  2208               	addwfc	??___ftge+1,f,c
 13260  00140A  2209               	addwfc	??___ftge+2,f,c
 13261  00140C  0E00               	movlw	0
 13262  00140E  2407               	addwf	??___ftge,w,c
 13263  001410  6E01               	movwf	___ftge@ff1,c
 13264  001412  0E00               	movlw	0
 13265  001414  2008               	addwfc	??___ftge+1,w,c
 13266  001416  6E02               	movwf	___ftge@ff1+1,c
 13267  001418  0E80               	movlw	128
 13268  00141A  2009               	addwfc	??___ftge+2,w,c
 13269  00141C  6E03               	movwf	___ftge@ff1+2,c
 13270  00141E                     i2l1061:
 13271  00141E  AE06               	btfss	___ftge@ff2+2,7,c
 13272  001420  D016               	goto	i2l1062
 13273  001422  C004  F007         	movff	___ftge@ff2,??___ftge
 13274  001426  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
 13275  00142A  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
 13276  00142E  1E07               	comf	??___ftge,f,c
 13277  001430  1E08               	comf	??___ftge+1,f,c
 13278  001432  1E09               	comf	??___ftge+2,f,c
 13279  001434  2A07               	incf	??___ftge,f,c
 13280  001436  0E00               	movlw	0
 13281  001438  2208               	addwfc	??___ftge+1,f,c
 13282  00143A  2209               	addwfc	??___ftge+2,f,c
 13283  00143C  0E00               	movlw	0
 13284  00143E  2407               	addwf	??___ftge,w,c
 13285  001440  6E04               	movwf	___ftge@ff2,c
 13286  001442  0E00               	movlw	0
 13287  001444  2008               	addwfc	??___ftge+1,w,c
 13288  001446  6E05               	movwf	___ftge@ff2+1,c
 13289  001448  0E80               	movlw	128
 13290  00144A  2009               	addwfc	??___ftge+2,w,c
 13291  00144C  6E06               	movwf	___ftge@ff2+2,c
 13292  00144E                     i2l1062:
 13293  00144E  0E00               	movlw	0
 13294  001450  1A01               	xorwf	___ftge@ff1,f,c
 13295  001452  0E00               	movlw	0
 13296  001454  1A02               	xorwf	___ftge@ff1+1,f,c
 13297  001456  0E80               	movlw	128
 13298  001458  1A03               	xorwf	___ftge@ff1+2,f,c
 13299  00145A  0E00               	movlw	0
 13300  00145C  1A04               	xorwf	___ftge@ff2,f,c
 13301  00145E  0E00               	movlw	0
 13302  001460  1A05               	xorwf	___ftge@ff2+1,f,c
 13303  001462  0E80               	movlw	128
 13304  001464  1A06               	xorwf	___ftge@ff2+2,f,c
 13305  001466  5004               	movf	___ftge@ff2,w,c
 13306  001468  5C01               	subwf	___ftge@ff1,w,c
 13307  00146A  5005               	movf	___ftge@ff2+1,w,c
 13308  00146C  5802               	subwfb	___ftge@ff1+1,w,c
 13309  00146E  5006               	movf	___ftge@ff2+2,w,c
 13310  001470  5803               	subwfb	___ftge@ff1+2,w,c
 13311  001472  B0D8               	btfsc	status,0,c
 13312  001474  D002               	goto	i2l3412
 13313  001476  90D8               	bcf	status,0,c
 13314  001478  0012               	return	
 13315  00147A                     i2l3412:
 13316  00147A  80D8               	bsf	status,0,c
 13317  00147C  0012               	return	
 13318  00147E                     __end_of___ftge:
 13319                           	opt stack 0
 13320                           tosu	equ	0xFFF
 13321                           tosh	equ	0xFFE
 13322                           tosl	equ	0xFFD
 13323                           pclatu	equ	0xFFB
 13324                           pclath	equ	0xFFA
 13325                           tblptru	equ	0xFF8
 13326                           tblptrh	equ	0xFF7
 13327                           tblptrl	equ	0xFF6
 13328                           tablat	equ	0xFF5
 13329                           prodh	equ	0xFF4
 13330                           prodl	equ	0xFF3
 13331                           intcon	equ	0xFF2
 13332                           indf0	equ	0xFEF
 13333                           postinc0	equ	0xFEE
 13334                           fsr0h	equ	0xFEA
 13335                           fsr0l	equ	0xFE9
 13336                           wreg	equ	0xFE8
 13337                           postdec1	equ	0xFE5
 13338                           fsr1h	equ	0xFE2
 13339                           fsr1l	equ	0xFE1
 13340                           indf2	equ	0xFDF
 13341                           fsr2h	equ	0xFDA
 13342                           fsr2l	equ	0xFD9
 13343                           status	equ	0xFD8
 13344                           tosu	equ	0xFFF
 13345                           tosh	equ	0xFFE
 13346                           tosl	equ	0xFFD
 13347                           pclatu	equ	0xFFB
 13348                           pclath	equ	0xFFA
 13349                           tblptru	equ	0xFF8
 13350                           tblptrh	equ	0xFF7
 13351                           tblptrl	equ	0xFF6
 13352                           tablat	equ	0xFF5
 13353                           prodh	equ	0xFF4
 13354                           prodl	equ	0xFF3
 13355                           intcon	equ	0xFF2
 13356                           indf0	equ	0xFEF
 13357                           postinc0	equ	0xFEE
 13358                           fsr0h	equ	0xFEA
 13359                           fsr0l	equ	0xFE9
 13360                           wreg	equ	0xFE8
 13361                           postdec1	equ	0xFE5
 13362                           fsr1h	equ	0xFE2
 13363                           fsr1l	equ	0xFE1
 13364                           indf2	equ	0xFDF
 13365                           fsr2h	equ	0xFDA
 13366                           fsr2l	equ	0xFD9
 13367                           status	equ	0xFD8
 13368                           
 13369                           	psect	text88
 13370  000000                     __ptext88:
 13371                           	opt stack 0
 13372                           tosu	equ	0xFFF
 13373                           tosh	equ	0xFFE
 13374                           tosl	equ	0xFFD
 13375                           pclatu	equ	0xFFB
 13376                           pclath	equ	0xFFA
 13377                           tblptru	equ	0xFF8
 13378                           tblptrh	equ	0xFF7
 13379                           tblptrl	equ	0xFF6
 13380                           tablat	equ	0xFF5
 13381                           prodh	equ	0xFF4
 13382                           prodl	equ	0xFF3
 13383                           intcon	equ	0xFF2
 13384                           indf0	equ	0xFEF
 13385                           postinc0	equ	0xFEE
 13386                           fsr0h	equ	0xFEA
 13387                           fsr0l	equ	0xFE9
 13388                           wreg	equ	0xFE8
 13389                           postdec1	equ	0xFE5
 13390                           fsr1h	equ	0xFE2
 13391                           fsr1l	equ	0xFE1
 13392                           indf2	equ	0xFDF
 13393                           fsr2h	equ	0xFDA
 13394                           fsr2l	equ	0xFD9
 13395                           status	equ	0xFD8
 13396                           
 13397                           	psect	rparam
 13398  0000                     tosu	equ	0xFFF
 13399                           tosh	equ	0xFFE
 13400                           tosl	equ	0xFFD
 13401                           pclatu	equ	0xFFB
 13402                           pclath	equ	0xFFA
 13403                           tblptru	equ	0xFF8
 13404                           tblptrh	equ	0xFF7
 13405                           tblptrl	equ	0xFF6
 13406                           tablat	equ	0xFF5
 13407                           prodh	equ	0xFF4
 13408                           prodl	equ	0xFF3
 13409                           intcon	equ	0xFF2
 13410                           indf0	equ	0xFEF
 13411                           postinc0	equ	0xFEE
 13412                           fsr0h	equ	0xFEA
 13413                           fsr0l	equ	0xFE9
 13414                           wreg	equ	0xFE8
 13415                           postdec1	equ	0xFE5
 13416                           fsr1h	equ	0xFE2
 13417                           fsr1l	equ	0xFE1
 13418                           indf2	equ	0xFDF
 13419                           fsr2h	equ	0xFDA
 13420                           fsr2l	equ	0xFD9
 13421                           status	equ	0xFD8
 13422                           
 13423                           	psect	temp
 13424  00005E                     btemp:
 13425                           	opt stack 0
 13426  00005E                     	ds	1
 13427  0000                     int$flags	set	btemp
 13428  0000                     wtemp6	set	btemp+1
 13429                           tosu	equ	0xFFF
 13430                           tosh	equ	0xFFE
 13431                           tosl	equ	0xFFD
 13432                           pclatu	equ	0xFFB
 13433                           pclath	equ	0xFFA
 13434                           tblptru	equ	0xFF8
 13435                           tblptrh	equ	0xFF7
 13436                           tblptrl	equ	0xFF6
 13437                           tablat	equ	0xFF5
 13438                           prodh	equ	0xFF4
 13439                           prodl	equ	0xFF3
 13440                           intcon	equ	0xFF2
 13441                           indf0	equ	0xFEF
 13442                           postinc0	equ	0xFEE
 13443                           fsr0h	equ	0xFEA
 13444                           fsr0l	equ	0xFE9
 13445                           wreg	equ	0xFE8
 13446                           postdec1	equ	0xFE5
 13447                           fsr1h	equ	0xFE2
 13448                           fsr1l	equ	0xFE1
 13449                           indf2	equ	0xFDF
 13450                           fsr2h	equ	0xFDA
 13451                           fsr2l	equ	0xFD9
 13452                           status	equ	0xFD8


Data Sizes:
    Strings     153
    Constant    481
    Data        14
    BSS         14
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     71      93
    BANK0           160     63      73
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    IOCB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_Brightness_Menu@display(BANK0[10]), Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Brightness_Menu_Function@display(COMRAM[10]), 
		 -> Run_Time_Menu_Function@display(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_Brightness_Menu@display(BANK0[10]), Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Brightness_Menu_Function@display(COMRAM[10]), 
		 -> Run_Time_Menu_Function@display(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_Brightness_Menu@display(BANK0[10]), Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Brightness_Menu_Function@display(COMRAM[10]), 
		 -> Run_Time_Menu_Function@display(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_Brightness_Menu@display(BANK0[10]), Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Brightness_Menu_Function@display(COMRAM[10]), 
		 -> Run_Time_Menu_Function@display(COMRAM[10]), 

    GLCD_WriteString@stringToWrite	PTR unsigned char  size(2) Largest target is 17
		 -> STR_21(CODE[5]), STR_20(CODE[4]), Draw_Brightness_Menu@display(BANK0[10]), STR_19(CODE[13]), 
		 -> STR_18(CODE[17]), STR_17(CODE[5]), STR_16(CODE[7]), STR_15(CODE[13]), 
		 -> STR_14(CODE[7]), Draw_runTime_Menu@display(BANK0[10]), STR_13(CODE[11]), STR_12(CODE[10]), 
		 -> STR_11(CODE[9]), STR_10(CODE[10]), STR_9(CODE[9]), STR_8(CODE[11]), 
		 -> STR_7(CODE[11]), STR_6(CODE[4]), Initialize_Menus@display(BANK0[10]), STR_5(CODE[8]), 
		 -> STR_4(CODE[7]), STR_3(CODE[10]), STR_2(CODE[5]), Brightness_Menu_Function@display(COMRAM[10]), 
		 -> STR_1(CODE[7]), Run_Time_Menu_Function@display(COMRAM[10]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_Brightness_Menu@display(BANK0[10]), Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Brightness_Menu_Function@display(COMRAM[10]), 
		 -> Run_Time_Menu_Function@display(COMRAM[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_PIN_MANAGER_IOC
    _PIN_MANAGER_IOC->_Brightness_Menu_Function
    _Run_Time_Menu_Function->i2_itoa
    _Brightness_Menu_Function->i2___ftmul
    i2_itoa->i2_utoa
    i2_utoa->i2___lwdiv
    i2___ftmul->i2___ftdiv
    i2___ftdiv->i2___ftpack
    i2___awtoft->i2___ftpack
    i2_PWM2_LoadDutyValue->i2___fttol
    i2_GLCD_WriteString->i2_GLCD_WriteChar
    i2_GLCD_WriteChar->i2_GLCD_WriteData
    i2_Draw_Arrow->i2_Clear_Arrow_Column
    i2_Draw_runTime_Arrow->i2_GLCD_GoTo
    i2_Draw_Brightness_Arrow->i2_GLCD_GoTo
    i2_Make_Arrow->i2_GLCD_WriteData
    i2_Clear_runTime_Arrows->i2_GLCD_GoTo
    i2_Clear_Brightness_Arrows->i2_GLCD_GoTo
    i2_Clear_Arrow_Column->i2_GLCD_GoTo
    i2_GLCD_WriteData->i2___awdiv
    i2_GLCD_GoTo->i2_GLCD_WriteCommand
    i2_GLCD_WriteCommand->i2___awdiv
    i2_GLCD_ReadStatus->i2_GLCD_DisableController
    i2_GLCD_ReadStatus->i2_GLCD_EnableController
    ___ftsub->___ftadd
    ___ftadd->i2___ftpack

Critical Paths under _main in BANK0

    _main->_Check_Buttons
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _GLCD_Initalize->_GLCD_WriteCommand
    _Check_Buttons->_Draw_Brightness_Menu
    _Check_Buttons->_Draw_runTime_Menu
    _Check_Buttons->_Initialize_Menus
    ___ftmul->___ftdiv
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    _PWM2_LoadDutyValue->___fttol
    _Initialize_Menus->_GLCD_Line
    _Draw_runTime_Menu->_GLCD_Line
    _Draw_Brightness_Menu->_GLCD_Line
    _itoa->_utoa
    _utoa->___lwdiv
    _Make_Back_Arrow->_GLCD_WriteData
    _GLCD_WriteString->_GLCD_WriteChar
    _GLCD_WriteChar->_GLCD_WriteData
    _GLCD_Line->_GLCD_SetPixel
    _GLCD_SetPixel->_GLCD_GoTo
    _GLCD_ReadData->___awdiv
    _GLCD_ClearScreen->_GLCD_GoTo
    _Draw_Arrow->_Clear_Arrow_Column
    _Draw_runTime_Arrow->_GLCD_GoTo
    _Draw_Brightness_Arrow->_GLCD_GoTo
    _Make_Arrow->_GLCD_WriteData
    _Clear_runTime_Arrows->_GLCD_GoTo
    _Clear_Brightness_Arrows->_GLCD_GoTo
    _Clear_Arrow_Column->_GLCD_GoTo
    _GLCD_WriteData->___awdiv
    _GLCD_GoTo->_GLCD_WriteCommand
    _GLCD_WriteCommand->___awdiv
    _GLCD_ReadStatus->_GLCD_DisableController
    _GLCD_ReadStatus->_GLCD_EnableController

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  283854
                                             62 BANK0      1     1      0
                      _Check_Buttons
                         _Draw_Arrow
                   _GLCD_ClearScreen
                     _GLCD_Initalize
                   _Initialize_Menus
                 _PWM2_LoadDutyValue
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              2 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCD_Initalize                                       1     1      0     767
                                             11 BANK0      1     1      0
               _GLCD_InitializePorts
                  _GLCD_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _GLCD_InitializePorts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        1     1      0  183785
                                             61 BANK0      1     1      0
                         _Draw_Arrow
               _Draw_Brightness_Menu
                  _Draw_runTime_Menu
                   _Initialize_Menus
                 _PWM2_LoadDutyValue
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3092
                                             23 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3046
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2605
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2388
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _PWM2_LoadDutyValue                                   4     2      2     322
                                             15 BANK0      4     2      2
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _Initialize_Menus                                    10    10      0   39376
                                             51 BANK0     10    10      0
                   _GLCD_ClearScreen
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _Draw_runTime_Menu                                   10    10      0   41721
                                             51 BANK0     10    10      0
                   _GLCD_ClearScreen
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
                    _Make_Back_Arrow
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _Draw_Brightness_Menu                                10    10      0   42181
                                             51 BANK0     10    10      0
                   _GLCD_ClearScreen
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
                    _Make_Back_Arrow
                            ___fttol
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    2682
                                             16 BANK0      8     2      6
                            ___fttol (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1307
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     504
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) _Make_Back_Arrow                                      0     0      0    2301
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _GLCD_WriteString                                     2     0      2    4385
                                             13 BANK0      2     0      2
                     _GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (3) _GLCD_WriteChar                                       3     3      0    2392
                                             10 BANK0      3     3      0
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _GLCD_Line                                           30    22      8   17528
                                             21 BANK0     30    22      8
                      _GLCD_SetPixel
 ---------------------------------------------------------------------------------
 (3) _GLCD_SetPixel                                        7     5      2   15408
                                             14 BANK0      7     5      2
                          _GLCD_GoTo
                      _GLCD_ReadData
                     _GLCD_WriteData
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GLCD_ReadData                                        2     2      0    2302
                                              8 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _GLCD_ClearScreen                                     2     2      0    8568
                                             14 BANK0      2     2      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _Draw_Arrow                                           0     0      0   50938
                 _Clear_Arrow_Column
            _Clear_Brightness_Arrows
               _Clear_runTime_Arrows
              _Draw_Brightness_Arrow
                 _Draw_runTime_Arrow
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Draw_runTime_Arrow                                   0     0      0    8454
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Draw_Brightness_Arrow                                0     0      0    8454
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Make_Arrow                                           0     0      0    2301
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_runTime_Arrows                                 1     1      0    8527
                                             14 BANK0      1     1      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_Brightness_Arrows                              1     1      0    8503
                                             14 BANK0      1     1      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_Arrow_Column                                   9     9      0    8546
                                             14 BANK0      9     9      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _GLCD_WriteData                                       2     2      0    2301
                                              8 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GLCD_GoTo                                            3     2      1    6153
                                             11 BANK0      3     2      1
                  _GLCD_WriteCommand
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2124
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _GLCD_WriteCommand                                    3     2      1     699
                                              8 BANK0      3     2      1
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _GLCD_ReadStatus                                      2     2      0     111
                                              1 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
 ---------------------------------------------------------------------------------
 (6) _GLCD_EnableController                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_DisableController                               1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_Delay                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                          18    18      0   58686
                                             53 COMRAM    18    18      0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     4     4      0   58686
                                             49 COMRAM     4     4      0
           _Brightness_Menu_Function
                 _Main_Menu_Function
             _Run_Time_Menu_Function
 ---------------------------------------------------------------------------------
 (11) _Run_Time_Menu_Function                             11    11      0   18380
                                             24 COMRAM    11    11      0
                       i2_Draw_Arrow
                        i2_GLCD_GoTo
                 i2_GLCD_WriteString
                             i2_itoa
 ---------------------------------------------------------------------------------
 (11) _Main_Menu_Function                                  1     1      0   14504
                                             23 COMRAM     1     1      0
                       i2_Draw_Arrow
 ---------------------------------------------------------------------------------
 (11) _Brightness_Menu_Function                           11    11      0   25621
                                             38 COMRAM    11    11      0
                            ___ftadd
                             ___ftge
                            ___ftsub
                       i2_Draw_Arrow
                        i2_GLCD_GoTo
                 i2_GLCD_WriteString
               i2_PWM2_LoadDutyValue
                         i2___awtoft
                          i2___ftdiv
                          i2___ftmul
                          i2___fttol
                             i2_itoa
 ---------------------------------------------------------------------------------
 (12) i2_itoa                                              8     2      6    1176
                                             16 COMRAM     8     2      6
                          i2___fttol (ARG)
                             i2_utoa
 ---------------------------------------------------------------------------------
 (13) i2_utoa                                              9     3      6     857
                                              7 COMRAM     9     3      6
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (14) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (14) i2___lwdiv                                           7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___fttol                                          15    11      4     304
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (12) i2___ftmul                                          15     9      6     921
                                             23 COMRAM    15     9      6
                         i2___awtoft (ARG)
                          i2___ftdiv (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (12) i2___ftdiv                                          15     9      6     875
                                              8 COMRAM    15     9      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (12) i2___awtoft                                          4     1      3     660
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (12) i2_PWM2_LoadDutyValue                                4     2      2      70
                                             15 COMRAM     4     2      2
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (12) i2_GLCD_WriteString                                  2     0      2     977
                                             13 COMRAM     2     0      2
                   i2_GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_WriteChar                                    3     3      0     828
                                             10 COMRAM     3     3      0
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (12) i2_Draw_Arrow                                        0     0      0   14482
               i2_Clear_Arrow_Column
          i2_Clear_Brightness_Arrows
             i2_Clear_runTime_Arrows
            i2_Draw_Brightness_Arrow
               i2_Draw_runTime_Arrow
                        i2_GLCD_GoTo
                       i2_Make_Arrow
 ---------------------------------------------------------------------------------
 (13) i2_Draw_runTime_Arrow                                0     0      0    2378
                        i2_GLCD_GoTo
                       i2_Make_Arrow
 ---------------------------------------------------------------------------------
 (13) i2_Draw_Brightness_Arrow                             0     0      0    2378
                        i2_GLCD_GoTo
                       i2_Make_Arrow
 ---------------------------------------------------------------------------------
 (13) i2_Make_Arrow                                        0     0      0     737
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (13) i2_Clear_runTime_Arrows                              1     1      0    2451
                                             14 COMRAM     1     1      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (13) i2_Clear_Brightness_Arrows                           1     1      0    2427
                                             14 COMRAM     1     1      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (13) i2_Clear_Arrow_Column                                9     9      0    2470
                                             14 COMRAM     9     9      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (14) i2_GLCD_WriteData                                    2     2      0     737
                                              8 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (12) i2_GLCD_GoTo                                         3     2      1    1641
                                             11 COMRAM     3     2      1
                i2_GLCD_WriteCommand
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (15) i2___awdiv                                           8     4      4     560
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_WriteCommand                                 3     2      1     373
                                              8 COMRAM     3     2      1
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2_GLCD_ReadStatus                                   2     2      0     111
                                              1 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
 ---------------------------------------------------------------------------------
 (16) i2_GLCD_EnableController                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_GLCD_DisableController                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_GLCD_Delay                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) ___ftsub                                             6     0      6    2158
                                             20 COMRAM     6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (13) ___ftadd                                            12     6      6    1813
                                              8 COMRAM    12     6      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (13) i2___ftpack                                          8     3      5     543
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (12) ___ftge                                              9     3      6     440
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Draw_Arrow
       _Clear_Arrow_Column
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Clear_Brightness_Arrows
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Clear_runTime_Arrows
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Draw_Brightness_Arrow
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _Make_Arrow
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _Draw_runTime_Arrow
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _Make_Arrow
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _Draw_Brightness_Menu
       _GLCD_ClearScreen
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _Make_Back_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       ___fttol
       _itoa
         ___fttol (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
     _Draw_runTime_Menu
       _GLCD_ClearScreen
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _Make_Back_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _itoa
         ___fttol (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
     _Initialize_Menus
       _GLCD_ClearScreen
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _itoa
         ___fttol (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
     _PWM2_LoadDutyValue
       ___fttol (ARG)
     ___awtoft
       ___ftpack
     ___ftdiv
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
   _Draw_Arrow
     _Clear_Arrow_Column
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Clear_Brightness_Arrows
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Clear_runTime_Arrows
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Draw_Brightness_Arrow
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _Draw_runTime_Arrow
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _Make_Arrow
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
   _GLCD_ClearScreen
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_WriteData
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv
   _GLCD_Initalize
     _GLCD_InitializePorts
     _GLCD_WriteCommand
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv (ARG)
   _Initialize_Menus
     _GLCD_ClearScreen
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_Line
       _GLCD_SetPixel
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_ReadData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
         ___awdiv
     _GLCD_WriteString
       _GLCD_WriteChar
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _itoa
       ___fttol (ARG)
       _utoa (ARG)
         ___lwdiv
         ___lwmod
   _PWM2_LoadDutyValue
     ___fttol (ARG)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR4_Initialize
       _TMR4_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _Brightness_Menu_Function
       ___ftadd
         i2___ftpack
       ___ftge
       ___ftsub
         ___ftadd
           i2___ftpack
       i2_Draw_Arrow
         i2_Clear_Arrow_Column
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_Brightness_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_runTime_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Draw_Brightness_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_Draw_runTime_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_GLCD_GoTo
           i2_GLCD_WriteCommand
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv (ARG)
           i2___awdiv
         i2_Make_Arrow
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
       i2_GLCD_GoTo
         i2_GLCD_WriteCommand
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
           i2_GLCD_ReadStatus
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
           i2___awdiv (ARG)
         i2___awdiv
       i2_GLCD_WriteString
         i2_GLCD_WriteChar
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
       i2_PWM2_LoadDutyValue
         i2___fttol (ARG)
       i2___awtoft
         i2___ftpack
       i2___ftdiv
         i2___ftpack
       i2___ftmul
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___ftpack
         i2___ftpack (ARG)
       i2___fttol
       i2_itoa
         i2___fttol (ARG)
         i2_utoa (ARG)
           i2___lwdiv
           i2___lwmod
     _Main_Menu_Function
       i2_Draw_Arrow
         i2_Clear_Arrow_Column
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_Brightness_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_runTime_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Draw_Brightness_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_Draw_runTime_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_GLCD_GoTo
           i2_GLCD_WriteCommand
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv (ARG)
           i2___awdiv
         i2_Make_Arrow
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
     _Run_Time_Menu_Function
       i2_Draw_Arrow
         i2_Clear_Arrow_Column
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_Brightness_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_runTime_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Draw_Brightness_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_Draw_runTime_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_GLCD_GoTo
           i2_GLCD_WriteCommand
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv (ARG)
           i2___awdiv
         i2_Make_Arrow
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
       i2_GLCD_GoTo
         i2_GLCD_WriteCommand
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
           i2_GLCD_ReadStatus
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
           i2___awdiv (ARG)
         i2___awdiv
       i2_GLCD_WriteString
         i2_GLCD_WriteChar
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
       i2_itoa
         i2___fttol (ARG)
         i2_utoa (ARG)
           i2___lwdiv
           i2___lwmod
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3F      49       5       45.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     47      5D       1       98.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A6       6        0.0%
DATA                 0      0      A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jul 29 22:11:03 2020

             GLCD_WriteCommand@controller 0068                    _Run_Time_Menu_Function 1506  
               GLCD_WriteData@dataToWrite 0069                           GLCD_Initalize@i 006B  
                            ___awdiv@sign 0065                     ?i2_PWM2_LoadDutyValue 0010  
                      i2___lwdiv@dividend 0001                               __CFG_BORV$3 000000  
                              i2___awtoft 220C                                i2___ftpack 10AE  
      i2GLCD_DisableController@controller 0001          GLCD_DisableController@controller 0060  
                         _timer0ReloadVal 009F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 0014  
                            ___ftadd@exp2 0013                              ___ftadd@sign 0012  
                                     l511 245C                                       l440 0742  
                                     l521 2252                                       l441 07BE  
                                     l442 07C2                                       l426 1F92  
                                     l523 226A                                       l451 0852  
                                     l443 07C6                                       l435 072C  
                                     l516 1498                                       l700 16E6  
                                     l452 0844                                       l436 0802  
                                     l444 07CA                                       l701 16DC  
                                     l533 1B84                                       l437 07DA  
                                     l445 07D0                                       l710 18FA  
                                     l534 1B58                                       l454 085A  
                                     l438 0734                                       l703 170E  
                                     l447 081E                                       l704 1704  
                                     l712 1910                                       l480 0156  
                                     l528 1BD0                                       l721 1C54  
                                     l713 1926                                       l570 2340  
                                     l722 1C4A                                       l730 1D74  
                                     l714 193C                                       l490 023E  
                                     l731 1D8A                                       l580 236E  
                                     l572 2344                                       l484 0202  
                                     l581 2372                                       l573 2348  
                                     l709 1952                                       l485 01A0  
                                     l718 1C2C                                       l486 01D4  
                                     l719 1C22                                       l727 1DA0  
                                     l671 1D1E                                       l479 013E  
                                     l728 1D5E                                       l672 1D28  
                                     l577 2376                                       l569 234C  
                                     l673 1D32                                       l489 020A  
                                     l578 236A                                       l683 1A50  
                                     l668 1D46                                       l685 1A6C  
                                     l669 1D0A                                       l950 15FC  
                                     l942 15A4                                       l686 1A62  
                                     l951 160A                                       l943 15B4  
                                     l945 15D2                                       l697 16BE  
                                     l946 15CA                                       l698 16B4  
                                     l970 21B0                                       l949 15F2  
                                     l990 101E                                       l992 105C  
                                     l993 1046                                       l995 1084  
                                     l996 107A                                       l989 1028  
                            __CFG_CPB$OFF 000000                                       _PR4 000FA9  
                            __CFG_CPD$OFF 000000              __end_of_Draw_Brightness_Menu 0FFE  
                         _PWM4_Initialize 24CA                                       tosl 000FFD  
                                     wreg 000FE8               PIN_MANAGER_IOC@currentState 0032  
                      __size_of_GLCD_GoTo 0088                        __size_of_GLCD_Line 01B4  
                            ___ftdiv@cntr 0071                              ___ftdiv@sign 0076  
                                    l1100 0A6A                                      l1111 11A0  
                                    l1112 11E2                                      l1105 1FC2  
                                    l1202 1FF8                                      l1203 1FF0  
                                    l1109 1164                                      l1053 0D84  
                                    l1206 2010                                      l1070 0ACE  
                                    l1207 201A                                      l1055 0DAC  
                                    l1071 0B00                                      l1056 0DEA  
                                    l1072 0B10                                      l1057 0E10  
                                    l1074 0B28                                      l1091 0A2A  
                                    l1075 0B38                                      l1092 0A1A  
                                    l1068 0AA6                                      l1192 1CD4  
                                    l1097 0A4E                                      l1089 09B2  
                                    l1193 1CCC                                      l1098 0A42  
                                    l1196 1CF4                                      l1197 1CFE  
                                    l4210 01A0                                      l4224 020A  
                                    l4238 1A48                                      l4166 2262  
                                    l4158 224A                                      l5046 2454  
                                    l3552 21D8                                      l3666 1490  
                                    l3678 1810                                      l3866 1BC0  
                                    l3876 1BFE                                      STR_1 FFE6  
                                    STR_2 FFF2                                      STR_3 FFBB  
                                    STR_4 FFDF                                      STR_5 FFD7  
                                    STR_6 FFFB                                      STR_7 FF6C  
                                    STR_8 FF9C                                      STR_9 FFCE  
                                    u3010 1B7A                                      u3020 1BA6  
                                    _LATA 000F89                                      u3110 0184  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      u3017 1B70  
                                    _LATE 000F8D                                      u3027 1B9C  
                                    u3060 2276                                      u2420 1FFC  
                                    u3300 108E                                      u4100 081A  
                                    u2350 14C0                                      u2290 15D6  
                                    u4130 084E                                      u2604 1298  
                                    u2620 1BFE                                      u3260 1010  
                                    u2605 1294                                      u3430 0A54  
                                    u2390 1CD8                                      u3371 0996  
                                    u3390 09D0                                      u3395 09C8  
                                    u4267 1F70                                      u4277 071C  
                                    u3911 0A8E                                      u3931 0AB6  
                                    u3861 0D6C                                      u3881 0D94  
                                    _TMR4 000F87                             _maxBrightness 0059  
                                    _WPUB 000F5B            __size_of_Draw_Brightness_Arrow 0054  
           __end_of_Draw_Brightness_Arrow 1DB0                                      _main 1F50  
                            ___ftpack@arg 0060                                      _itoa 1F9C  
                            ___ftpack@exp 0063                ??_Brightness_Menu_Function 0027  
                         _TMR0_StartTimer 2536                                      fsr0h 000FEA  
                                    fsr1h 000FE2                        i2___lwdiv@quotient 0005  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 005E                                      _utoa 115C  
                                    prodh 000FF4           __end_ofi2_GLCD_EnableController 23DE  
                                    prodl 000FF3                                      start 00B4  
                           __CFG_IESO$OFF 000000                              i2___ftdiv@f1 0009  
                            i2___ftdiv@f2 000C                              i2___ftdiv@f3 0013  
                            i2___awtoft@c 0009                             __CFG_MCLRE$ON 000000  
                            ___ftmul@cntr 0084                       i2_GLCD_WriteCommand 22DE  
                            i2___ftmul@f1 0018                              i2___ftmul@f2 001B  
                            ___param_bank 000000                              ___ftmul@sign 0085  
                            i2___fttol@f1 0001                              ___fttol@exp1 006E  
                            ___fttol@lval 006A           __size_of_GLCD_DisableController 002A  
                     __size_of_GLCD_Delay 0004                   __end_of_PWM2_Initialize 2500  
                 __end_of_TMR0_Initialize 219A               ??i2_Clear_Brightness_Arrows 000F  
          ??_TMR0_DefaultInterruptHandler 0001                   __end_of_GLCD_ReadStatus 233A  
          __size_of_OSCILLATOR_Initialize 0012             __end_of_OSCILLATOR_Initialize 2512  
                    _Clear_runTime_Arrows 1698                                     ?_main 0001  
                                   ?_itoa 0070                           __end_of___awdiv 1614  
                                   _EEADR 000F74                              ?i2_GLCD_GoTo 000C  
                         __end_of___ftadd 0418                                     STR_10 FFB1  
                                   STR_11 FFC5                                     STR_20 FFF7  
                                   STR_12 FFA7                                     STR_21 FFED  
                                   STR_13 FF91                                     STR_14 FFE6  
                                   STR_15 FF77                                     STR_16 FFE6  
                                   STR_17 FFED                                     STR_18 FF66  
                                   STR_19 FF84                           __end_of___ftdiv 0E42  
                                   ?_utoa 0067                           __end_of___ftmul 0B72  
                                   _T0CON 000FD5                           ___awdiv@divisor 0062  
                         __end_of___ftsub 20E8                           __end_of___fttol 0A7C  
                                   _T4CON 000F88                           __end_of___lwdiv 1D08  
                         __end_of___lwmod 2024                                     i2l131 1378  
                                   i2l133 139E                                     i2l150 247E  
                                   i2l134 137E                                     i2l135 13E2  
                                   i2l160 1520                                     i2l136 1386  
                                   i2l153 2488                                     i2l137 138E  
                                   i2l217 005E                                     i2l170 1588  
                                   i2l146 1396                                     i2l163 1526  
                                   i2l219 0068                                     i2l180 04BA  
                                   i2l157 1572                                     i2l165 1564  
                                   i2l174 0584                                     i2l182 0576  
                                   i2l158 1568                                     i2l175 057A  
                                   i2l167 1582                                     i2l159 1510  
                                   i2l184 0594                                     i2l176 0422  
                                   i2l177 0472                                     i2l187 059A  
                                   i2l516 17A8                                     i2l700 1760  
                                   i2l701 1758                                     i2l533 1C8A  
                                   i2l710 196A                                     i2l534 1C60  
                                   i2l703 1786                                     i2l704 177E  
                                   i2l712 1980                                     i2l528 1F1C  
                                   i2l721 1EA0                                     i2l713 1996  
                                   i2l570 23BC                                     i2l722 1E98  
                                   i2l730 1E1C                                     i2l714 19AC  
                                   i2l731 1E32                                     i2l580 23E6  
                                   i2l572 23C0                                     i2l581 23EA  
                                   i2l573 23C4                                     i2l709 19C2  
                                   i2l718 1E7A                                     i2l719 1E72  
                                   i2l727 1E48                                     i2l671 1DC6  
                                   i2l728 1E06                                     i2l672 1DD0  
                                   i2l577 23EE                                     i2l569 23C8  
                                   i2l673 1DDA                                     i2l578 23E2  
                                   i2l683 1B08                                     i2l668 1DEE  
                                   i2l685 1B20                                     i2l669 1DB2  
                                   i2l950 1680                                     i2l942 1628  
                                   i2l686 1B18                                     i2l951 168E  
                                   i2l943 1638                                     i2l945 1656  
                                   i2l697 173A                                     i2l946 164E  
                                   i2l698 1732                                     i2l970 2220  
                         ___awdiv@counter 0064                                     i2l949 1676  
                                   i2l990 10CC                                     i2l992 110A  
                                   i2l993 10F4                                     i2l995 1132  
                                   i2l996 1128                                     i2l989 10D6  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _PORTA 000F80                                     _PORTB 000F81  
                                   _PORTD 000F83           Brightness_Menu_Function@display 0027  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                                _Draw_Arrow 1D08  
       __size_of_TMR0_SetInterruptHandler 000A                  ?i2_Draw_Brightness_Arrow 0001  
                           __CFG_WRT0$OFF 000000                           _TMR4_Initialize 248E  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
               ?_TMR0_SetInterruptHandler 0060                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000               __size_of_Clear_Arrow_Column 005E  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                    ?i2_GLCD_WriteCommand 0009                          __end_of_TMR0_ISR 23B8  
                              _Make_Arrow 24A2                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                         __end_of_font5x8 FF65                                i2itoa@base 0015  
              i2Clear_Brightness_Arrows@i 000F                            __CFG_EBTRB$OFF 000000  
                           ___awtoft@sign 006B                   __end_of_PIN_MANAGER_IOC 13EE  
                                   _color FF65                             ___ftpack@sign 0064  
                         _Make_Back_Arrow 227A                   __end_of_PWM3_Initialize 24EE  
                                   pclath 000FFA                                     tablat 000FF5  
                    i2_Clear_Arrow_Column 1AFC                    ??_GLCD_InitializePorts 0060  
              __end_of_Main_Menu_Function 248E                                     utoa@c 006F  
                                   utoa@v 006D                                     status 000FD8  
                                   wtemp6 005F                             i2___ftdiv@exp 0016  
                      __size_ofi2___awdiv 0084                        __size_ofi2___ftdiv 00E6  
                      __size_ofi2___ftmul 00F4                        __size_ofi2___fttol 00F4  
                      __size_ofi2___lwdiv 0052                        __size_ofi2___lwmod 0042  
             Draw_Brightness_Menu@display 0093                           __initialization 1AA0  
                            __end_of_main 1F9C                             i2___ftmul@exp 0021  
                            __end_of_itoa 1FE0                              __end_of_utoa 1206  
                       __end_of_GLCD_GoTo 1506                    ??i2_PWM2_LoadDutyValue 0012  
                       __end_of_GLCD_Line 026C                   __end_of_PWM4_Initialize 24DC  
             ?_INTERRUPT_InterruptManager 0001                 __size_of_Initialize_Menus 0170  
                   ?_Clear_runTime_Arrows 0001                       Clear_Arrow_Column@i 0076  
                     Clear_Arrow_Column@j 0075                               ?i2___awtoft 0009  
                             ?i2___ftpack 0001                                    ??_main 009E  
                           ___fttol@sign1 0069                                i2utoa@base 000C  
                                  ??_itoa 0076                                    ??_utoa 006D  
                           __activetblptr 000003                            __CFG_RETEN$OFF 000000  
                   ??i2_GLCD_WriteCommand 000A                          GLCD_SetPixel@tmp 0072  
                 __end_of_TMR0_StartTimer 253A         __size_ofi2_GLCD_DisableController 0026  
                           ?i2_GLCD_Delay 0001                                    _EEADRH 000F75  
                                  _EEDATA 000F73                                    _CCPR2H 000F52  
                                  _CCPR3H 000F4F                                    _CCPR2L 000F51  
                                  _CCPR4H 000F4C                                    _CCPR3L 000F4E  
                                  _CCPR4L 000F4B                                    _EECON2 000F7E  
                                  _ANCON0 000F5D                                    _ANCON1 000F5C  
               ?i2_GLCD_DisableController 0001                    _GLCD_DisableController 2364  
                        ___awdiv@dividend 0060                          __end_of___awtoft 21D4  
                        __end_of___ftpack 10AE                 i2_Clear_Brightness_Arrows 1E58  
                   ?i2_Clear_Arrow_Column 0001                                    i2l1020 02BE  
                                  i2l1100 0C54                                    i2l1111 12EC  
                                  i2l1024 02E8                                    i2l1112 132A  
                                  i2l1105 2048                                    i2l1034 0344  
                                  i2l1202 207C                                    i2l1043 0382  
                                  i2l1035 033A                                    i2l1203 2074  
                                  i2l1044 0378                                    i2l1061 141E  
                                  i2l1029 034E                                    i2l1053 0E6A  
                                  i2l1109 12B2                                    i2l1062 144E  
                                  i2l1046 03A6                                    i2l1070 0CB6  
                                  i2l1206 2094                                    i2l1047 03C2  
                                  i2l1055 0E92                                    i2l1071 0CE8  
                                  i2l1207 209E                           __CFG_BBSIZ$BB2K 000000  
                                  i2l1048 03F2                                    i2l1056 0ED0  
                                  i2l1072 0CF8                                    i2l1057 0EF6  
                                  i2l1074 0D10                                    i2l1075 0D20  
                                  i2l1091 0C14                                    i2l1068 0C8E  
                                  i2l1092 0C04                                    i2l1085 20BE  
                                  i2l1192 1ECA                                    i2l1097 0C38  
                                  i2l1089 0B9E                                    i2l1193 1EC2  
                                  i2l1098 0C2C                                    i2l1196 1EEA  
                                  i2l1197 1EF4                                    i2l3412 147A  
                          __CFG_WDTEN$OFF 000000                                    i2l3616 22E0  
                                  i2l3636 19DA                                    i2l3768 17A0  
                                  i2l3984 1F0C                                    i2l3994 1F48  
                                  i2l3998 1B00                                    _TABLAT 000FF5  
                                  u263_41 027C                                    u351_41 0E7A  
                                  u264_41 0290                                    u360_41 0B82  
                                  u354_41 0C76                                    u356_41 0C9E  
                                  u349_41 0E52                                    _OSCCON 000FD3  
               __size_ofi2_GLCD_WriteChar 0052                 __size_ofi2_GLCD_WriteData 006A  
                         _TMR4_StartTimer 2532                                    i2_itoa 2024  
                                  i2_utoa 12AA                          _GLCD_WriteString 1B56  
                    _Draw_Brightness_Menu 0F28                            __CFG_XINST$OFF 000000  
                                  ___ftge 13EE                                 ??___awdiv 0064  
                               ??___ftadd 000F                            __CFG_STVREN$ON 000000  
                               ??___ftdiv 006E                                 ??___ftmul 007D  
                               ??___ftsub 001B                                 ??___fttol 0064  
                               ??___lwdiv 0064                                 ??___lwmod 0064  
                        ?_TMR0_Initialize 0001                          ?_PWM2_Initialize 0001  
                 __end_of_TMR4_Initialize 24A2                                    clear_0 1AEC  
                        ___awdiv@quotient 0066                          ?_GLCD_ReadStatus 0001  
         __end_ofi2_Draw_Brightness_Arrow 1E58                    __size_of_Check_Buttons 0154  
                          i2___awdiv@sign 0006             __size_ofi2_Draw_runTime_Arrow 0070  
                   ___ftmul@f3_as_product 0081                                    itoa@cp 0076  
                            __pdataCOMRAM 0053                               ?_Draw_Arrow 0001  
                       __end_ofi2___awdiv 1698                         __end_ofi2___ftdiv 0F28  
                 __end_of_Make_Back_Arrow 22AC                         __end_ofi2___ftmul 0D5A  
                       __end_ofi2___fttol 0C66                         __end_ofi2___lwdiv 1EFE  
                            __mediumconst FD84                         __end_ofi2___lwmod 20A8  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
        __size_ofi2_GLCD_EnableController 0026                                    tblptru 000FF8  
                   _GLCD_EnableController 233A                               ?_Make_Arrow 0001  
                          ??i2_GLCD_Delay 0001                              ??_GLCD_Delay 0060  
TMR0_SetInterruptHandler@InterruptHandler 0060                          ?_PIN_MANAGER_IOC 0001  
           __size_of_INTERRUPT_Initialize 0004                          ?_PWM3_Initialize 0001  
                       _SYSTEM_Initialize 2428                            i2___ftdiv@cntr 0012  
                              __accesstop 0060                   __end_of__initialization 1AF2  
                          i2___ftdiv@sign 0017                __end_ofi2_GLCD_WriteString 1CB4  
                              ___ftadd@f1 0009                                ___ftadd@f2 000C  
         i2GLCD_WriteString@stringToWrite 000E             GLCD_WriteString@stringToWrite 006D  
                     __size_ofi2___awtoft 0038                       __size_ofi2___ftpack 00AE  
                              ___ftge@ff1 0001                                ___ftge@ff2 0004  
                      ?_SYSTEM_Initialize 0001                __end_of_PWM2_LoadDutyValue 2160  
                           ___rparam_used 000001                   ?_Run_Time_Menu_Function 0001  
                              ___ftdiv@f1 0068                                ___ftdiv@f2 006B  
                              ___ftdiv@f3 0072                     ?_Draw_Brightness_Menu 0001  
                         GLCD_WriteChar@i 006B                         ?_GLCD_ClearScreen 0001  
                       _appliedBrightness 0053                                ___awtoft@c 0068  
                          i2___ftpack@arg 0001                            i2___ftpack@exp 0004  
                              ___ftmul@f1 0077                                ___ftmul@f2 007A  
                            i2GLCD_GoTo@i 000E                              i2GLCD_GoTo@x 000D  
                            i2GLCD_GoTo@y 000C                     __end_of_GLCD_ReadData 18F8  
                              ___ftsub@f1 0015                                ___ftsub@f2 0018  
                            _adjustValues 004E                                ___fttol@f1 0060  
                      i2___lwmod@dividend 0001                            __pcstackCOMRAM 0001  
                      ??_GLCD_ClearScreen 006E                              __pidataBANK0 2546  
                     ??_SYSTEM_Initialize 0064                                 ?_TMR0_ISR 0001  
                           __end_of_color FF66                    ??_Clear_runTime_Arrows 006E  
            PIN_MANAGER_IOC@previousState 004C                            i2___ftmul@cntr 0025  
                          i2___ftmul@sign 0026                     __end_of_GLCD_SetPixel 12AA  
                        ?_PWM4_Initialize 0001                        __end_of_GLCD_Delay 2542  
                          i2___fttol@exp1 000F                   __size_of_GLCD_Initalize 0022  
                          i2___fttol@lval 000B                              _afterMinutes 00A5  
                      _Draw_runTime_Arrow 18F8                      __size_ofi2_GLCD_GoTo 007A  
                        ?_TMR0_StartTimer 0001                       ?_Draw_runTime_Arrow 0001  
                 __end_of_TMR4_StartTimer 2536                    ??i2_Clear_Arrow_Column 000F  
               __end_of_SYSTEM_Initialize 244A                                __pbssBANK0 00A3  
                         __CFG_PLLCFG$OFF 000000                             _Check_Buttons 0710  
          __end_of_Run_Time_Menu_Function 158E                  ?_Clear_Brightness_Arrows 0001  
                                 ?i2_itoa 0011                                   ?i2_utoa 0008  
                     __size_of_Draw_Arrow 0054                                   ?___ftge 0001  
        __end_of_TMR0_SetInterruptHandler 2528                      ??_Draw_runTime_Arrow 006E  
                     __size_of_Make_Arrow 0014                                ??_TMR0_ISR 0001  
                                 _CCP2CON 000F50                                   _CCP3CON 000F4D  
                                 _CCP4CON 000F4A                          _Initialize_Menus 05A0  
                 __size_of_GLCD_WriteChar 0058                   __size_of_GLCD_WriteData 0078  
                       GLCD_ClearScreen@i 006E                         GLCD_ClearScreen@j 006F  
                        ?_TMR4_Initialize 0001                                 ?___awtoft 0068  
                               ?___ftpack 0060                          __CFG_CANMX$PORTB 000000  
                  ?_GLCD_EnableController 0001                                   _REFOCON 000F9A  
                        ?_Make_Back_Arrow 0001                 GLCD_ReadStatus@controller 0062  
                                 _OSCCON2 000FD2                                   _TBLPTRH 000FF7  
                                 _TBLPTRL 000FF6                                   _TBLPTRU 000FF8  
                       _GLCD_WriteCommand 21D4                                   _OSCTUNE 000F9B  
                Clear_Brightness_Arrows@i 006E                  Draw_runTime_Menu@display 0093  
                      ?_GLCD_WriteCommand 0068                            ?_Check_Buttons 0001  
                        i2_GLCD_WriteChar 1EFE                          i2_GLCD_WriteData 19D8  
          GLCD_Line@TwoDxAccumulatedError 007F                    ??_Draw_Brightness_Menu 0093  
        __size_ofi2_Draw_Brightness_Arrow 0054                     _Draw_Brightness_Arrow 1D5C  
                     ??_GLCD_WriteCommand 0069                                _xMenuStart 00A6  
                         __size_ofi2_itoa 0042                                   i2utoa@c 0010  
                         __CFG_PWRTEN$OFF 000000                                   i2utoa@v 000E  
                         __size_ofi2_utoa 00A4                                   __Hparam 0000  
             i2GLCD_WriteChar@charToWrite 000B             Run_Time_Menu_Function@display 0019  
                                 __Lparam 0000                           __size_of___ftge 0090  
                                 ___awdiv 158E                      __end_ofi2_GLCD_Delay 2546  
                                 ___ftadd 026C                                   ___ftdiv 0D5A  
                                 ___ftmul 0A7C                                   ___ftsub 20A8  
                                 ___fttol 0984                                   ___lwdiv 1CB4  
                                 ___lwmod 1FE0                        _Main_Menu_Function 246C  
        __end_ofi2_GLCD_DisableController 2404                                   __pcinit 1AA0  
                            ??i2___awtoft 000C                              ??i2___ftpack 0006  
                              ??___awtoft 006B                                ??___ftpack 0065  
                 i2___ftmul@f3_as_product 0022                                   __ramtop 0F00  
       __size_of_Brightness_Menu_Function 0188                                   __ptext0 1F50  
                                 __ptext1 2428                                   __ptext2 248E  
                                 __ptext3 2532                                   __ptext4 2160  
                                 __ptext5 2536                                   __ptext6 251E  
                                 __ptext7 24CA                                   __ptext8 24DC  
                                 __ptext9 24EE                 ?_Brightness_Menu_Function 0001  
                               _GLCD_GoTo 147E                                 _GLCD_Line 00B8  
                               _T0CONbits 000FD5                                   _font5x8 FD85  
              __end_of_Clear_Arrow_Column 1AA0                     _OSCILLATOR_Initialize 2500  
                     ?_Main_Menu_Function 0001                 __end_of_GLCD_WriteCommand 220C  
                 i2_GLCD_EnableController 23B8                             ?i2_Draw_Arrow 0001  
                __end_of_GLCD_WriteString 1BAE                                 _T4CONbits 000F88  
                 ?_GLCD_DisableController 0001                  ??_PIN_MANAGER_Initialize 0060  
                       __CFG_MSSPMSK$MSK7 000000                     GLCD_ReadStatus@status 0061  
                           ?i2_Make_Arrow 0001                        PIN_MANAGER_IOC@CHA 0034  
                      PIN_MANAGER_IOC@CHB 0033                __size_of_SYSTEM_Initialize 0022  
                        ?_TMR4_StartTimer 0001           __end_of_Clear_Brightness_Arrows 1C5E  
                    end_of_initialization 1AF2                  ??i2_Clear_runTime_Arrows 000F  
                 Initialize_Menus@display 0093                                   itoa@buf 0070  
                                 itoa@val 0072             i2PWM2_LoadDutyValue@dutyValue 0010  
           __size_of_GLCD_InitializePorts 000A                        __end_ofi2___awtoft 2244  
                      __end_ofi2___ftpack 115C                      ??_Main_Menu_Function 0018  
                              GLCD_GoTo@i 006D                                GLCD_GoTo@x 006C  
                              GLCD_GoTo@y 006B            GLCD_Line@TwoDyAccumulatedError 0081  
             i2GLCD_WriteData@dataToWrite 000A                                   postdec1 000FE5  
                                 postinc0 000FEE                                   utoa@buf 0067  
                                 utoa@val 0069                     Clear_runTime_Arrows@i 006E  
                          GLCD_Line@TwoDx 0087                            GLCD_Line@TwoDy 0089  
             __end_ofi2_GLCD_WriteCommand 230E                            _GLCD_Initalize 244A  
           __size_ofi2_PWM2_LoadDutyValue 0032                  _TMR0_SetInterruptHandler 251E  
                               _PORTBbits 000F81                                ?_GLCD_GoTo 006B  
                              ?_GLCD_Line 0075            __end_of_GLCD_DisableController 238E  
                          ??i2_Draw_Arrow 0018                              ??_Draw_Arrow 0077  
                        __CFG_FOSC$INTIO2 000000                                _runMinutes 004D  
                          ??i2_Make_Arrow 000B                              ??_Make_Arrow 006A  
                         ??_Check_Buttons 009D                                 i2___awdiv 1614  
                               i2___ftdiv 0E42                         i2___lwdiv@divisor 0003  
                               i2___ftmul 0C66                                 i2___fttol 0B72  
                               i2___lwdiv 1EAC                                 i2___lwmod 2066  
                       i2___lwdiv@counter 0007              __end_ofi2_Draw_runTime_Arrow 19D8  
                  ?_Draw_Brightness_Arrow 0001                               ___ftdiv@exp 0075  
                         i2___awtoft@sign 000C                        i2___awdiv@dividend 0001  
                         i2___ftpack@sign 0005                            __end_ofi2_itoa 2066  
                          __end_ofi2_utoa 134E                               ___ftmul@exp 0080  
                      __end_of_Draw_Arrow 1D5C              __end_of_INTERRUPT_Initialize 253E  
                  __end_of_GLCD_Initalize 246C                        __end_of_Make_Arrow 24B6  
                          GLCD_SetPixel@x 0073                            GLCD_SetPixel@y 006E  
                          __end_of___ftge 147E                        i2_GLCD_WriteString 1C5E  
                          _GLCD_WriteChar 1BAE                            _GLCD_WriteData 180C  
                   PIN_MANAGER_IOC@result 0035                             __pidataCOMRAM 2512  
                       __size_of_TMR0_ISR 002A                        _PWM2_LoadDutyValue 2124  
               ??i2_GLCD_EnableController 0001                                 i2itoa@buf 0011  
                               i2itoa@val 0013                    ?_OSCILLATOR_Initialize 0001  
                        _timeAfterFinishX 005C                 __size_of_GLCD_ClearScreen 0036  
              __size_of_GLCD_WriteCommand 0038                       ?i2_GLCD_WriteString 000E  
                i2_GLCD_DisableController 23DE                       start_initialization 1AA0  
                      i2___awdiv@quotient 0007                  __size_of_PWM2_Initialize 0012  
                __size_of_TMR0_Initialize 003A                       ?_PWM2_LoadDutyValue 006F  
         __size_of_PIN_MANAGER_Initialize 003C                  __size_of_GLCD_ReadStatus 002C  
                         i2___fttol@sign1 000A                                ?i2___awdiv 0001  
                              ?i2___ftdiv 0009                                ?i2___ftmul 0018  
                              ?i2___fttol 0001                                ?i2___lwdiv 0001  
                              ?i2___lwmod 0001                                 i2utoa@buf 0008  
                               i2utoa@val 000A                  __end_of_Initialize_Menus 0710  
         __size_ofi2_Clear_runTime_Arrows 007A                   i2_Draw_Brightness_Arrow 1E04  
                                ??i2_itoa 0017                      ??i2_GLCD_WriteString 0010  
                                ??i2_utoa 000E                     __size_ofi2_GLCD_Delay 0004  
                __size_of_PIN_MANAGER_IOC 00A0                      ??_PWM2_LoadDutyValue 0071  
                __size_of_PWM3_Initialize 0012                            _currentContext 0051  
             PWM2_LoadDutyValue@dutyValue 006F                                  ??___ftge 0007  
                  __end_of_GLCD_WriteChar 1C06                    __end_of_GLCD_WriteData 1884  
                             _CCPTMRSbits 000F99                           ?_GLCD_Initalize 0001  
                             __pdataBANK0 00A6                  __end_ofi2_GLCD_WriteChar 1F50  
                __end_ofi2_GLCD_WriteData 1A42                   ??_GLCD_EnableController 0060  
        __size_of_Clear_Brightness_Arrows 0058             __size_of_Clear_runTime_Arrows 0080  
                           ??i2_GLCD_GoTo 000D                               ??_GLCD_GoTo 006C  
                             ??_GLCD_Line 007D                         __size_of___awtoft 003A  
                 i2GLCD_ReadStatus@status 0002                         __size_of___ftpack 00B0  
                             __pbssCOMRAM 0048                             __pcstackBANK0 0060  
                __size_of_PWM4_Initialize 0012                         i2___lwmod@divisor 0003  
                       i2___lwmod@counter 0005                         i2_GLCD_ReadStatus 2404  
                  __size_of_GLCD_ReadData 0074                              i2_GLCD_Delay 2542  
                       _Draw_runTime_Menu 0864                        ?i2_GLCD_ReadStatus 0001  
           __size_ofi2_Clear_Arrow_Column 005A                    __size_of_GLCD_SetPixel 00A4  
                Main_Menu_Function@result 0018                        ?_Draw_runTime_Menu 0001  
                   _TMR0_InterruptHandler 00A1                                 __pnvBANK0 009F  
                __size_of_TMR0_StartTimer 0004          __end_of_Brightness_Menu_Function 05A0  
                    __end_ofi2_Draw_Arrow 1E04                       ??i2_GLCD_ReadStatus 0002  
                        ___lwdiv@dividend 0060                    _PIN_MANAGER_Initialize 20E8  
                    __end_ofi2_Make_Arrow 24CA                       ??_Draw_runTime_Menu 0093  
                               __pintcode 0008                        GLCD_SetPixel@color 006F  
                         ?_GLCD_WriteChar 0001                           ?_GLCD_WriteData 0001  
                           __pmediumconst FD84                   i2Clear_runTime_Arrows@i 000F  
                                ?___awdiv 0060               __size_of_Draw_runTime_Arrow 0070  
                                ?___ftadd 0009                                  ?___ftdiv 0068  
                                ?___ftmul 0077                                  ?___ftsub 0015  
                                ?___fttol 0060                                  ?___lwdiv 0060  
                                ?___lwmod 0060                    i2_Clear_runTime_Arrows 1718  
            ??_INTERRUPT_InterruptManager 0036                      i2_Draw_runTime_Arrow 1968  
                               _mainState 0052                 __end_ofi2_GLCD_ReadStatus 2428  
                       ?_GLCD_WriteString 006D                  __size_of_TMR4_Initialize 0014  
                     __end_ofi2_GLCD_GoTo 180C                 __end_of_Draw_runTime_Menu 0984  
                        ___lwdiv@quotient 0064                               ??i2___awdiv 0005  
                      ??_GLCD_WriteString 006F                               ??i2___ftdiv 000F  
                             ??i2___ftmul 001E                               ??i2___fttol 0005  
               ??i2_Draw_Brightness_Arrow 000F                               ??i2___lwdiv 0005  
                             ??i2___lwmod 0005                      _INTERRUPT_Initialize 253A  
                      _Clear_Arrow_Column 1A42                  __size_of_Make_Back_Arrow 0032  
                       ??_TMR0_Initialize 0062                         ??_PWM2_Initialize 0060  
                       ??_GLCD_ReadStatus 0061                                  _IOCBbits 000F5A  
                                _LATEbits 000F8D         i2GLCD_EnableController@controller 0001  
         GLCD_EnableController@controller 0060             __size_of_Draw_Brightness_Menu 00D6  
                                i2u222_40 165A       __size_of_INTERRUPT_InterruptManager 00AC  
                                i2u401_48 23A6                                  i2u251_40 113C  
                                i2u245_40 17CC                ??_TMR0_SetInterruptHandler 0062  
                                i2u270_40 02DA                                  i2u247_40 10BE  
                                i2u255_40 1ECE                                  i2u280_40 038A  
                                i2u273_40 0318                                  i2u345_40 1C82  
                     ?_Clear_Arrow_Column 0001                                  i2u345_47 1C78  
                                i2u346_40 1CAC                                  i2u362_40 0BBC  
                                i2u258_40 2080                                  i2u362_45 0BB4  
                                i2u346_47 1CA2                                  i2u267_40 02B0  
                                i2u277_40 0356                                  i2u366_40 0C3E  
                                _PIR4bits 000FB7                                  i2u288_40 1F48  
                                _RCONbits 000FD0                             _GLCD_ReadData 1884  
                           GLCD_Line@Xinc 0083                             GLCD_Line@Yinc 0085  
                                _TMR0_ISR 238E                         ??_PIN_MANAGER_IOC 0032  
                           _GLCD_SetPixel 1206                         ??_PWM3_Initialize 0060  
                       _brightnessContext 004F              __end_of_GLCD_InitializePorts 2532  
                   ?i2_Draw_runTime_Arrow 0001                          __CFG_SOSCSEL$DIG 000000  
                        _GLCD_ClearScreen 2244            Brightness_Menu_Function@result 0031  
                       _brightnessPercent 0056                         i2___awdiv@divisor 0003  
                    ??_Clear_Arrow_Column 006E                         i2___awdiv@counter 0005  
                ??_Run_Time_Menu_Function 0019                   ??_Draw_Brightness_Arrow 006E  
                               copy_data0 1AD2                                  i2itoa@cp 0017  
                   ?_INTERRUPT_Initialize 0001              __end_ofi2_PWM2_LoadDutyValue 22DE  
                       ??_PWM4_Initialize 0060                                _EECON1bits 000F7F  
             __size_of_Main_Menu_Function 0022                  __size_of_TMR4_StartTimer 0004  
                                __Hrparam 0000                                  __Lrparam 0000  
                          ?_GLCD_ReadData 0001                        __CFG_BOREN$SBORDIS 000000  
                _Brightness_Menu_Function 0418        __size_ofi2_Clear_Brightness_Arrows 0054  
                 ??_OSCILLATOR_Initialize 0060                ??i2_GLCD_DisableController 0001  
                       ??_TMR0_StartTimer 0060                          __size_of___awdiv 0086  
              ?i2_Clear_Brightness_Arrows 0001                   _Clear_Brightness_Arrows 1C06  
                        __size_of___ftadd 01AC                          __size_of___ftdiv 00E8  
                        __size_of___ftmul 00F6                          __size_of___ftsub 0040  
                        __size_of___fttol 00F8                            ?_GLCD_SetPixel 006E  
                        __size_of___lwdiv 0054                          __size_of___lwmod 0044  
                                ___awtoft 219A                                  ___ftpack 0FFE  
                       GLCD_Line@CurrentX 008B                         GLCD_Line@CurrentY 008D  
                  _IOCB4_InterruptHandler 004A                               i2_GLCD_GoTo 1792  
             i2GLCD_ReadStatus@controller 0003                __size_ofi2_GLCD_ReadStatus 0024  
                         ___lwdiv@divisor 0062              __size_ofi2_GLCD_WriteCommand 0030  
                         ___lwdiv@counter 0066                                  __ptext10 20E8  
                                __ptext11 2500                                  __ptext20 2124  
                                __ptext12 253A                                  __ptext21 05A0  
                                __ptext13 244A                                  __ptext30 1B56  
                                __ptext22 0864                                  __ptext14 2528  
                                __ptext31 1BAE                                  __ptext23 0F28  
                                __ptext15 0710                                  __ptext40 1698  
                                __ptext32 00B8                                  __ptext24 1F9C  
                                __ptext16 0A7C                                  __ptext41 1C06  
                                __ptext33 1206                                  __ptext25 115C  
                                __ptext17 0D5A                                  __ptext50 253E  
                                __ptext42 1A42                                  __ptext34 1884  
                                __ptext26 1FE0                                  __ptext18 219A  
                                __ptext43 180C                                  __ptext35 2244  
                                __ptext27 1CB4                                  __ptext19 0FFE  
                                __ptext60 2066                                  __ptext52 238E  
                                __ptext44 147E                                  __ptext36 1D08  
                                __ptext28 0984                __size_of_Draw_runTime_Menu 0120  
                                __ptext61 1EAC                                  __ptext53 254A  
                                __ptext45 158E                                  __ptext37 18F8  
                                __ptext29 227A                                  __ptext70 1968  
                                __ptext62 0B72                                  __ptext54 134E  
                                __ptext46 21D4                                  __ptext38 1D5C  
                                __ptext71 1E04                                  __ptext63 0C66  
                                __ptext55 1506                                  __ptext47 230E  
                                __ptext39 24A2                                  __ptext80 2404  
                                __ptext72 24B6                                  __ptext64 0E42  
                                __ptext56 246C                                  __ptext48 233A  
                                __ptext81 23B8                                  __ptext73 1718  
                                __ptext65 220C                                  __ptext57 0418  
                                __ptext49 2364                                  __ptext82 23DE  
                                __ptext74 1E58                                  __ptext66 22AC  
                                __ptext58 2024                                  __ptext83 2542  
                                __ptext75 1AFC                                  __ptext67 1C5E  
                                __ptext59 12AA                                  __ptext84 20A8  
                                __ptext76 19D8                                  __ptext68 1EFE  
                                __ptext85 026C                                  __ptext77 1792  
                                __ptext69 1DB0                                  __ptext86 10AE  
                                __ptext78 1614                                  __ptext87 13EE  
                                __ptext79 22DE                                  __ptext88 0000  
                              _GLCD_Delay 253E                     __end_of_Check_Buttons 0864  
                   __size_ofi2_Draw_Arrow 0054                         ?_Initialize_Menus 0001  
                       ??_TMR4_Initialize 0060                             __size_of_main 004C  
                   __size_ofi2_Make_Arrow 0014             i2GLCD_WriteCommand@controller 0009  
                           __size_of_itoa 0044                                _ARROW_SIZE 00A7  
                           __size_of_utoa 00AA      __end_of_TMR0_DefaultInterruptHandler 254C  
   __size_of_TMR0_DefaultInterruptHandler 0002              _TMR0_DefaultInterruptHandler 254A  
                      ??_Initialize_Menus 0093                          ??_GLCD_Initalize 006B  
                                _screen_x 00A4                                  _screen_y 00A3  
                       ??_Make_Back_Arrow 006A                                  _subMenuY 005D  
                                int$flags 005E                                  _runTimeX 00A8  
      __end_of_INTERRUPT_InterruptManager 00B4                _INTERRUPT_InterruptManager 0008  
                  ??i2_Draw_runTime_Arrow 000F         __end_ofi2_Clear_Brightness_Arrows 1EAC  
                     __CFG_INTOSCSEL$HIGH 000000                         ?i2_GLCD_WriteChar 0001  
                       ?i2_GLCD_WriteData 0001            __size_of_GLCD_EnableController 002A  
           __end_of_GLCD_EnableController 2364                                _INTCONbits 000FF2  
                      ??i2_GLCD_WriteChar 000B                        ??i2_GLCD_WriteData 0009  
                            i2_Draw_Arrow 1DB0                                  itoa@base 0074  
                            i2_Make_Arrow 24B6                    ??_INTERRUPT_Initialize 0060  
         __size_of_Run_Time_Menu_Function 0088              Run_Time_Menu_Function@result 0023  
                            _valuesXStart 005B                                  intlevel2 0000  
            __end_of_Clear_runTime_Arrows 1718                          ___lwmod@dividend 0060  
                       GLCD_ReadData@data 0069                   ?_PIN_MANAGER_Initialize 0001  
                        ??_GLCD_WriteChar 006A                          ??_GLCD_WriteData 0068  
                    _GLCD_InitializePorts 2528                           ??_GLCD_ReadData 0068  
             __size_ofi2_GLCD_WriteString 0056             ?_TMR0_DefaultInterruptHandler 0001  
               GLCD_WriteChar@charToWrite 006A               __size_of_PWM2_LoadDutyValue 003C  
                             GLCD_Line@X1 0075                               GLCD_Line@X2 0079  
                             GLCD_Line@Y1 0077                               GLCD_Line@Y2 007B  
                             GLCD_Line@Dx 008F                               GLCD_Line@Dy 0091  
               ??_Clear_Brightness_Arrows 006E                         i2GLCD_WriteChar@i 000C  
                 ?i2_Clear_runTime_Arrows 0001                  ?i2_GLCD_EnableController 0001  
                         ??_GLCD_SetPixel 0070                  ??_GLCD_DisableController 0060  
                      __CFG_WDTPS$1048576 000000              __end_ofi2_Clear_Arrow_Column 1B56  
                       ??_TMR4_StartTimer 0060                     i2Clear_Arrow_Column@i 0017  
                   i2Clear_Arrow_Column@j 0016                      i2_PWM2_LoadDutyValue 22AC  
                                utoa@base 006B                           ___lwmod@divisor 0062  
                         _TMR0_Initialize 2160                           _PWM2_Initialize 24EE  
                         ___lwmod@counter 0064                           _GLCD_ReadStatus 230E  
                             ?_GLCD_Delay 0001            __end_of_PIN_MANAGER_Initialize 2124  
                     __CFG_BORPWR$ZPBORMV 000000                    _IOCB5_InterruptHandler 0048  
                         _PIN_MANAGER_IOC 134E                     ?_GLCD_InitializePorts 0001  
                          _runTimeContext 0050                  __end_of_GLCD_ClearScreen 227A  
                      _GLCD_SetPixel$1810 0074                           _PWM3_Initialize 24DC  
               __size_of_GLCD_WriteString 0058            __end_ofi2_Clear_runTime_Arrows 1792  
       i2GLCD_WriteCommand@commandToWrite 000B           GLCD_WriteCommand@commandToWrite 006A  
              __end_of_Draw_runTime_Arrow 1968  
