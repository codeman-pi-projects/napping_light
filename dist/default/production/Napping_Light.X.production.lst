

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jul 22 22:43:26 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76  0000                     
    77                           ; Version 1.45
    78                           ; Generated 16/11/2017 GMT
    79                           ; 
    80                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F46K80 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112 ;; Function _IOCB4_DefaultInterruptHandler is unused but had its address taken
   113  0000                     
   114 ;; Function _IOCB5_DefaultInterruptHandler is unused but had its address taken
   115  0000                     
   116                           	psect	idataCOMRAM
   117  0010C8                     __pidataCOMRAM:
   118                           	opt stack 0
   119                           
   120                           ;initializer for _timeAfterFinishX
   121  0010C8  41                 	db	65
   122                           
   123                           ;initializer for _subMenuY
   124  0010C9  03                 	db	3
   125                           
   126                           	psect	idataBANK0
   127  0010B0                     __pidataBANK0:
   128                           	opt stack 0
   129                           
   130                           ;initializer for _valuesXStart
   131  0010B0  4C                 	db	76
   132                           
   133                           ;initializer for _xMenuStart
   134  0010B1  04                 	db	4
   135                           
   136                           ;initializer for _ARROW_SIZE
   137  0010B2  04                 	db	4
   138                           
   139                           ;initializer for _runTimeX
   140  0010B3  0A                 	db	10
   141                           
   142                           	psect	mediumconst
   143  00FDB0                     __pmediumconst:
   144                           	opt stack 0
   145  00FDB0  00                 	db	0
   146  00FDB1                     _font5x8:
   147                           	opt stack 0
   148  00FDB1  00                 	db	0
   149  00FDB2  00                 	db	0
   150  00FDB3  00                 	db	0
   151  00FDB4  00                 	db	0
   152  00FDB5  00                 	db	0
   153  00FDB6  00                 	db	0
   154  00FDB7  00                 	db	0
   155  00FDB8  5F                 	db	95
   156  00FDB9  00                 	db	0
   157  00FDBA  00                 	db	0
   158  00FDBB  00                 	db	0
   159  00FDBC  07                 	db	7
   160  00FDBD  00                 	db	0
   161  00FDBE  07                 	db	7
   162  00FDBF  00                 	db	0
   163  00FDC0  14                 	db	20
   164  00FDC1  7F                 	db	127
   165  00FDC2  14                 	db	20
   166  00FDC3  7F                 	db	127
   167  00FDC4  14                 	db	20
   168  00FDC5  24                 	db	36
   169  00FDC6  2A                 	db	42
   170  00FDC7  7F                 	db	127
   171  00FDC8  2A                 	db	42
   172  00FDC9  12                 	db	18
   173  00FDCA  23                 	db	35
   174  00FDCB  13                 	db	19
   175  00FDCC  08                 	db	8
   176  00FDCD  64                 	db	100
   177  00FDCE  62                 	db	98
   178  00FDCF  36                 	db	54
   179  00FDD0  49                 	db	73
   180  00FDD1  55                 	db	85
   181  00FDD2  22                 	db	34
   182  00FDD3  50                 	db	80
   183  00FDD4  00                 	db	0
   184  00FDD5  05                 	db	5
   185  00FDD6  03                 	db	3
   186  00FDD7  00                 	db	0
   187  00FDD8  00                 	db	0
   188  00FDD9  00                 	db	0
   189  00FDDA  1C                 	db	28
   190  00FDDB  22                 	db	34
   191  00FDDC  41                 	db	65
   192  00FDDD  00                 	db	0
   193  00FDDE  00                 	db	0
   194  00FDDF  41                 	db	65
   195  00FDE0  22                 	db	34
   196  00FDE1  1C                 	db	28
   197  00FDE2  00                 	db	0
   198  00FDE3  08                 	db	8
   199  00FDE4  2A                 	db	42
   200  00FDE5  1C                 	db	28
   201  00FDE6  2A                 	db	42
   202  00FDE7  08                 	db	8
   203  00FDE8  08                 	db	8
   204  00FDE9  08                 	db	8
   205  00FDEA  3E                 	db	62
   206  00FDEB  08                 	db	8
   207  00FDEC  08                 	db	8
   208  00FDED  00                 	db	0
   209  00FDEE  50                 	db	80
   210  00FDEF  30                 	db	48
   211  00FDF0  00                 	db	0
   212  00FDF1  00                 	db	0
   213  00FDF2  08                 	db	8
   214  00FDF3  08                 	db	8
   215  00FDF4  08                 	db	8
   216  00FDF5  08                 	db	8
   217  00FDF6  08                 	db	8
   218  00FDF7  00                 	db	0
   219  00FDF8  30                 	db	48
   220  00FDF9  30                 	db	48
   221  00FDFA  00                 	db	0
   222  00FDFB  00                 	db	0
   223  00FDFC  20                 	db	32
   224  00FDFD  10                 	db	16
   225  00FDFE  08                 	db	8
   226  00FDFF  04                 	db	4
   227  00FE00  02                 	db	2
   228  00FE01  3E                 	db	62
   229  00FE02  51                 	db	81
   230  00FE03  49                 	db	73
   231  00FE04  45                 	db	69
   232  00FE05  3E                 	db	62
   233  00FE06  00                 	db	0
   234  00FE07  42                 	db	66
   235  00FE08  7F                 	db	127
   236  00FE09  40                 	db	64
   237  00FE0A  00                 	db	0
   238  00FE0B  42                 	db	66
   239  00FE0C  61                 	db	97
   240  00FE0D  51                 	db	81
   241  00FE0E  49                 	db	73
   242  00FE0F  46                 	db	70
   243  00FE10  21                 	db	33
   244  00FE11  41                 	db	65
   245  00FE12  45                 	db	69
   246  00FE13  4B                 	db	75
   247  00FE14  31                 	db	49
   248  00FE15  18                 	db	24
   249  00FE16  14                 	db	20
   250  00FE17  12                 	db	18
   251  00FE18  7F                 	db	127
   252  00FE19  10                 	db	16
   253  00FE1A  27                 	db	39
   254  00FE1B  45                 	db	69
   255  00FE1C  45                 	db	69
   256  00FE1D  45                 	db	69
   257  00FE1E  39                 	db	57
   258  00FE1F  3C                 	db	60
   259  00FE20  4A                 	db	74
   260  00FE21  49                 	db	73
   261  00FE22  49                 	db	73
   262  00FE23  30                 	db	48
   263  00FE24  01                 	db	1
   264  00FE25  71                 	db	113
   265  00FE26  09                 	db	9
   266  00FE27  05                 	db	5
   267  00FE28  03                 	db	3
   268  00FE29  36                 	db	54
   269  00FE2A  49                 	db	73
   270  00FE2B  49                 	db	73
   271  00FE2C  49                 	db	73
   272  00FE2D  36                 	db	54
   273  00FE2E  06                 	db	6
   274  00FE2F  49                 	db	73
   275  00FE30  49                 	db	73
   276  00FE31  29                 	db	41
   277  00FE32  1E                 	db	30
   278  00FE33  00                 	db	0
   279  00FE34  36                 	db	54
   280  00FE35  36                 	db	54
   281  00FE36  00                 	db	0
   282  00FE37  00                 	db	0
   283  00FE38  00                 	db	0
   284  00FE39  56                 	db	86
   285  00FE3A  36                 	db	54
   286  00FE3B  00                 	db	0
   287  00FE3C  00                 	db	0
   288  00FE3D  00                 	db	0
   289  00FE3E  08                 	db	8
   290  00FE3F  14                 	db	20
   291  00FE40  22                 	db	34
   292  00FE41  41                 	db	65
   293  00FE42  14                 	db	20
   294  00FE43  14                 	db	20
   295  00FE44  14                 	db	20
   296  00FE45  14                 	db	20
   297  00FE46  14                 	db	20
   298  00FE47  41                 	db	65
   299  00FE48  22                 	db	34
   300  00FE49  14                 	db	20
   301  00FE4A  08                 	db	8
   302  00FE4B  00                 	db	0
   303  00FE4C  02                 	db	2
   304  00FE4D  01                 	db	1
   305  00FE4E  51                 	db	81
   306  00FE4F  09                 	db	9
   307  00FE50  06                 	db	6
   308  00FE51  32                 	db	50
   309  00FE52  49                 	db	73
   310  00FE53  79                 	db	121
   311  00FE54  41                 	db	65
   312  00FE55  3E                 	db	62
   313  00FE56  7E                 	db	126
   314  00FE57  11                 	db	17
   315  00FE58  11                 	db	17
   316  00FE59  11                 	db	17
   317  00FE5A  7E                 	db	126
   318  00FE5B  7F                 	db	127
   319  00FE5C  49                 	db	73
   320  00FE5D  49                 	db	73
   321  00FE5E  49                 	db	73
   322  00FE5F  36                 	db	54
   323  00FE60  3E                 	db	62
   324  00FE61  41                 	db	65
   325  00FE62  41                 	db	65
   326  00FE63  41                 	db	65
   327  00FE64  22                 	db	34
   328  00FE65  7F                 	db	127
   329  00FE66  41                 	db	65
   330  00FE67  41                 	db	65
   331  00FE68  22                 	db	34
   332  00FE69  1C                 	db	28
   333  00FE6A  7F                 	db	127
   334  00FE6B  49                 	db	73
   335  00FE6C  49                 	db	73
   336  00FE6D  49                 	db	73
   337  00FE6E  41                 	db	65
   338  00FE6F  7F                 	db	127
   339  00FE70  09                 	db	9
   340  00FE71  09                 	db	9
   341  00FE72  01                 	db	1
   342  00FE73  01                 	db	1
   343  00FE74  3E                 	db	62
   344  00FE75  41                 	db	65
   345  00FE76  41                 	db	65
   346  00FE77  51                 	db	81
   347  00FE78  32                 	db	50
   348  00FE79  7F                 	db	127
   349  00FE7A  08                 	db	8
   350  00FE7B  08                 	db	8
   351  00FE7C  08                 	db	8
   352  00FE7D  7F                 	db	127
   353  00FE7E  00                 	db	0
   354  00FE7F  41                 	db	65
   355  00FE80  7F                 	db	127
   356  00FE81  41                 	db	65
   357  00FE82  00                 	db	0
   358  00FE83  20                 	db	32
   359  00FE84  40                 	db	64
   360  00FE85  41                 	db	65
   361  00FE86  3F                 	db	63
   362  00FE87  01                 	db	1
   363  00FE88  7F                 	db	127
   364  00FE89  08                 	db	8
   365  00FE8A  14                 	db	20
   366  00FE8B  22                 	db	34
   367  00FE8C  41                 	db	65
   368  00FE8D  7F                 	db	127
   369  00FE8E  40                 	db	64
   370  00FE8F  40                 	db	64
   371  00FE90  40                 	db	64
   372  00FE91  40                 	db	64
   373  00FE92  7F                 	db	127
   374  00FE93  02                 	db	2
   375  00FE94  04                 	db	4
   376  00FE95  02                 	db	2
   377  00FE96  7F                 	db	127
   378  00FE97  7F                 	db	127
   379  00FE98  04                 	db	4
   380  00FE99  08                 	db	8
   381  00FE9A  10                 	db	16
   382  00FE9B  7F                 	db	127
   383  00FE9C  3E                 	db	62
   384  00FE9D  41                 	db	65
   385  00FE9E  41                 	db	65
   386  00FE9F  41                 	db	65
   387  00FEA0  3E                 	db	62
   388  00FEA1  7F                 	db	127
   389  00FEA2  09                 	db	9
   390  00FEA3  09                 	db	9
   391  00FEA4  09                 	db	9
   392  00FEA5  06                 	db	6
   393  00FEA6  3E                 	db	62
   394  00FEA7  41                 	db	65
   395  00FEA8  51                 	db	81
   396  00FEA9  21                 	db	33
   397  00FEAA  5E                 	db	94
   398  00FEAB  7F                 	db	127
   399  00FEAC  09                 	db	9
   400  00FEAD  19                 	db	25
   401  00FEAE  29                 	db	41
   402  00FEAF  46                 	db	70
   403  00FEB0  46                 	db	70
   404  00FEB1  49                 	db	73
   405  00FEB2  49                 	db	73
   406  00FEB3  49                 	db	73
   407  00FEB4  31                 	db	49
   408  00FEB5  01                 	db	1
   409  00FEB6  01                 	db	1
   410  00FEB7  7F                 	db	127
   411  00FEB8  01                 	db	1
   412  00FEB9  01                 	db	1
   413  00FEBA  3F                 	db	63
   414  00FEBB  40                 	db	64
   415  00FEBC  40                 	db	64
   416  00FEBD  40                 	db	64
   417  00FEBE  3F                 	db	63
   418  00FEBF  1F                 	db	31
   419  00FEC0  20                 	db	32
   420  00FEC1  40                 	db	64
   421  00FEC2  20                 	db	32
   422  00FEC3  1F                 	db	31
   423  00FEC4  7F                 	db	127
   424  00FEC5  20                 	db	32
   425  00FEC6  18                 	db	24
   426  00FEC7  20                 	db	32
   427  00FEC8  7F                 	db	127
   428  00FEC9  63                 	db	99
   429  00FECA  14                 	db	20
   430  00FECB  08                 	db	8
   431  00FECC  14                 	db	20
   432  00FECD  63                 	db	99
   433  00FECE  03                 	db	3
   434  00FECF  04                 	db	4
   435  00FED0  78                 	db	120
   436  00FED1  04                 	db	4
   437  00FED2  03                 	db	3
   438  00FED3  61                 	db	97
   439  00FED4  51                 	db	81
   440  00FED5  49                 	db	73
   441  00FED6  45                 	db	69
   442  00FED7  43                 	db	67
   443  00FED8  00                 	db	0
   444  00FED9  00                 	db	0
   445  00FEDA  7F                 	db	127
   446  00FEDB  41                 	db	65
   447  00FEDC  41                 	db	65
   448  00FEDD  02                 	db	2
   449  00FEDE  04                 	db	4
   450  00FEDF  08                 	db	8
   451  00FEE0  10                 	db	16
   452  00FEE1  20                 	db	32
   453  00FEE2  41                 	db	65
   454  00FEE3  41                 	db	65
   455  00FEE4  7F                 	db	127
   456  00FEE5  00                 	db	0
   457  00FEE6  00                 	db	0
   458  00FEE7  04                 	db	4
   459  00FEE8  02                 	db	2
   460  00FEE9  01                 	db	1
   461  00FEEA  02                 	db	2
   462  00FEEB  04                 	db	4
   463  00FEEC  40                 	db	64
   464  00FEED  40                 	db	64
   465  00FEEE  40                 	db	64
   466  00FEEF  40                 	db	64
   467  00FEF0  40                 	db	64
   468  00FEF1  00                 	db	0
   469  00FEF2  01                 	db	1
   470  00FEF3  02                 	db	2
   471  00FEF4  04                 	db	4
   472  00FEF5  00                 	db	0
   473  00FEF6  20                 	db	32
   474  00FEF7  54                 	db	84
   475  00FEF8  54                 	db	84
   476  00FEF9  54                 	db	84
   477  00FEFA  78                 	db	120
   478  00FEFB  7F                 	db	127
   479  00FEFC  48                 	db	72
   480  00FEFD  44                 	db	68
   481  00FEFE  44                 	db	68
   482  00FEFF  38                 	db	56
   483  00FF00  38                 	db	56
   484  00FF01  44                 	db	68
   485  00FF02  44                 	db	68
   486  00FF03  44                 	db	68
   487  00FF04  20                 	db	32
   488  00FF05  38                 	db	56
   489  00FF06  44                 	db	68
   490  00FF07  44                 	db	68
   491  00FF08  48                 	db	72
   492  00FF09  7F                 	db	127
   493  00FF0A  38                 	db	56
   494  00FF0B  54                 	db	84
   495  00FF0C  54                 	db	84
   496  00FF0D  54                 	db	84
   497  00FF0E  18                 	db	24
   498  00FF0F  08                 	db	8
   499  00FF10  7E                 	db	126
   500  00FF11  09                 	db	9
   501  00FF12  01                 	db	1
   502  00FF13  02                 	db	2
   503  00FF14  08                 	db	8
   504  00FF15  14                 	db	20
   505  00FF16  54                 	db	84
   506  00FF17  54                 	db	84
   507  00FF18  3C                 	db	60
   508  00FF19  7F                 	db	127
   509  00FF1A  08                 	db	8
   510  00FF1B  04                 	db	4
   511  00FF1C  04                 	db	4
   512  00FF1D  78                 	db	120
   513  00FF1E  00                 	db	0
   514  00FF1F  44                 	db	68
   515  00FF20  7D                 	db	125
   516  00FF21  40                 	db	64
   517  00FF22  00                 	db	0
   518  00FF23  20                 	db	32
   519  00FF24  40                 	db	64
   520  00FF25  44                 	db	68
   521  00FF26  3D                 	db	61
   522  00FF27  00                 	db	0
   523  00FF28  00                 	db	0
   524  00FF29  7F                 	db	127
   525  00FF2A  10                 	db	16
   526  00FF2B  28                 	db	40
   527  00FF2C  44                 	db	68
   528  00FF2D  00                 	db	0
   529  00FF2E  41                 	db	65
   530  00FF2F  7F                 	db	127
   531  00FF30  40                 	db	64
   532  00FF31  00                 	db	0
   533  00FF32  7C                 	db	124
   534  00FF33  04                 	db	4
   535  00FF34  18                 	db	24
   536  00FF35  04                 	db	4
   537  00FF36  78                 	db	120
   538  00FF37  7C                 	db	124
   539  00FF38  08                 	db	8
   540  00FF39  04                 	db	4
   541  00FF3A  04                 	db	4
   542  00FF3B  78                 	db	120
   543  00FF3C  38                 	db	56
   544  00FF3D  44                 	db	68
   545  00FF3E  44                 	db	68
   546  00FF3F  44                 	db	68
   547  00FF40  38                 	db	56
   548  00FF41  7C                 	db	124
   549  00FF42  14                 	db	20
   550  00FF43  14                 	db	20
   551  00FF44  14                 	db	20
   552  00FF45  08                 	db	8
   553  00FF46  08                 	db	8
   554  00FF47  14                 	db	20
   555  00FF48  14                 	db	20
   556  00FF49  18                 	db	24
   557  00FF4A  7C                 	db	124
   558  00FF4B  7C                 	db	124
   559  00FF4C  08                 	db	8
   560  00FF4D  04                 	db	4
   561  00FF4E  04                 	db	4
   562  00FF4F  08                 	db	8
   563  00FF50  48                 	db	72
   564  00FF51  54                 	db	84
   565  00FF52  54                 	db	84
   566  00FF53  54                 	db	84
   567  00FF54  20                 	db	32
   568  00FF55  04                 	db	4
   569  00FF56  3F                 	db	63
   570  00FF57  44                 	db	68
   571  00FF58  40                 	db	64
   572  00FF59  20                 	db	32
   573  00FF5A  3C                 	db	60
   574  00FF5B  40                 	db	64
   575  00FF5C  40                 	db	64
   576  00FF5D  20                 	db	32
   577  00FF5E  7C                 	db	124
   578  00FF5F  1C                 	db	28
   579  00FF60  20                 	db	32
   580  00FF61  40                 	db	64
   581  00FF62  20                 	db	32
   582  00FF63  1C                 	db	28
   583  00FF64  3C                 	db	60
   584  00FF65  40                 	db	64
   585  00FF66  30                 	db	48
   586  00FF67  40                 	db	64
   587  00FF68  3C                 	db	60
   588  00FF69  44                 	db	68
   589  00FF6A  28                 	db	40
   590  00FF6B  10                 	db	16
   591  00FF6C  28                 	db	40
   592  00FF6D  44                 	db	68
   593  00FF6E  0C                 	db	12
   594  00FF6F  50                 	db	80
   595  00FF70  50                 	db	80
   596  00FF71  50                 	db	80
   597  00FF72  3C                 	db	60
   598  00FF73  44                 	db	68
   599  00FF74  64                 	db	100
   600  00FF75  54                 	db	84
   601  00FF76  4C                 	db	76
   602  00FF77  44                 	db	68
   603  00FF78  00                 	db	0
   604  00FF79  08                 	db	8
   605  00FF7A  36                 	db	54
   606  00FF7B  41                 	db	65
   607  00FF7C  00                 	db	0
   608  00FF7D  00                 	db	0
   609  00FF7E  00                 	db	0
   610  00FF7F  7F                 	db	127
   611  00FF80  00                 	db	0
   612  00FF81  00                 	db	0
   613  00FF82  00                 	db	0
   614  00FF83  41                 	db	65
   615  00FF84  36                 	db	54
   616  00FF85  08                 	db	8
   617  00FF86  00                 	db	0
   618  00FF87  08                 	db	8
   619  00FF88  08                 	db	8
   620  00FF89  2A                 	db	42
   621  00FF8A  1C                 	db	28
   622  00FF8B  08                 	db	8
   623  00FF8C  08                 	db	8
   624  00FF8D  1C                 	db	28
   625  00FF8E  2A                 	db	42
   626  00FF8F  08                 	db	8
   627  00FF90  08                 	db	8
   628  00FF91                     __end_of_font5x8:
   629                           	opt stack 0
   630  00FF91                     _color:
   631                           	opt stack 0
   632  00FF91  01                 	db	1
   633  00FF92                     __end_of_color:
   634                           	opt stack 0
   635  00FF92                     STR_11:
   636  00FF92  54                 	db	84	;'T'
   637  00FF93  69                 	db	105	;'i'
   638  00FF94  6D                 	db	109	;'m'
   639  00FF95  65                 	db	101	;'e'
   640  00FF96  20                 	db	32
   641  00FF97  41                 	db	65	;'A'
   642  00FF98  66                 	db	102	;'f'
   643  00FF99  74                 	db	116	;'t'
   644  00FF9A  65                 	db	101	;'e'
   645  00FF9B  72                 	db	114	;'r'
   646  00FF9C  3A                 	db	58	;':'
   647  00FF9D  20                 	db	32
   648  00FF9E  00                 	db	0
   649  00FF9F                     STR_10:
   650  00FF9F  52                 	db	82	;'R'
   651  00FFA0  75                 	db	117	;'u'
   652  00FFA1  6E                 	db	110	;'n'
   653  00FFA2  20                 	db	32
   654  00FFA3  54                 	db	84	;'T'
   655  00FFA4  69                 	db	105	;'i'
   656  00FFA5  6D                 	db	109	;'m'
   657  00FFA6  65                 	db	101	;'e'
   658  00FFA7  3A                 	db	58	;':'
   659  00FFA8  20                 	db	32
   660  00FFA9  00                 	db	0
   661  00FFAA                     STR_5:
   662  00FFAA  53                 	db	83	;'S'
   663  00FFAB  74                 	db	116	;'t'
   664  00FFAC  61                 	db	97	;'a'
   665  00FFAD  72                 	db	114	;'r'
   666  00FFAE  74                 	db	116	;'t'
   667  00FFAF  43                 	db	67	;'C'
   668  00FFB0  6F                 	db	111	;'o'
   669  00FFB1  6C                 	db	108	;'l'
   670  00FFB2  6F                 	db	111	;'o'
   671  00FFB3  72                 	db	114	;'r'
   672  00FFB4  00                 	db	0
   673  00FFB5                     STR_4:
   674  00FFB5  42                 	db	66	;'B'
   675  00FFB6  72                 	db	114	;'r'
   676  00FFB7  69                 	db	105	;'i'
   677  00FFB8  67                 	db	103	;'g'
   678  00FFB9  68                 	db	104	;'h'
   679  00FFBA  74                 	db	116	;'t'
   680  00FFBB  6E                 	db	110	;'n'
   681  00FFBC  65                 	db	101	;'e'
   682  00FFBD  73                 	db	115	;'s'
   683  00FFBE  73                 	db	115	;'s'
   684  00FFBF  00                 	db	0
   685  00FFC0                     STR_9:
   686  00FFC0  52                 	db	82	;'R'
   687  00FFC1  75                 	db	117	;'u'
   688  00FFC2  6E                 	db	110	;'n'
   689  00FFC3  20                 	db	32
   690  00FFC4  54                 	db	84	;'T'
   691  00FFC5  69                 	db	105	;'i'
   692  00FFC6  6D                 	db	109	;'m'
   693  00FFC7  65                 	db	101	;'e'
   694  00FFC8  73                 	db	115	;'s'
   695  00FFC9  00                 	db	0
   696  00FFCA                     STR_7:
   697  00FFCA  42                 	db	66	;'B'
   698  00FFCB  61                 	db	97	;'a'
   699  00FFCC  63                 	db	99	;'c'
   700  00FFCD  6B                 	db	107	;'k'
   701  00FFCE  6C                 	db	108	;'l'
   702  00FFCF  69                 	db	105	;'i'
   703  00FFD0  67                 	db	103	;'g'
   704  00FFD1  68                 	db	104	;'h'
   705  00FFD2  74                 	db	116	;'t'
   706  00FFD3  00                 	db	0
   707  00FFD4                     STR_1:
   708  00FFD4  4D                 	db	77	;'M'
   709  00FFD5  61                 	db	97	;'a'
   710  00FFD6  69                 	db	105	;'i'
   711  00FFD7  6E                 	db	110	;'n'
   712  00FFD8  20                 	db	32
   713  00FFD9  4D                 	db	77	;'M'
   714  00FFDA  65                 	db	101	;'e'
   715  00FFDB  6E                 	db	110	;'n'
   716  00FFDC  75                 	db	117	;'u'
   717  00FFDD  00                 	db	0
   718  00FFDE                     STR_8:
   719  00FFDE  53                 	db	83	;'S'
   720  00FFDF  65                 	db	101	;'e'
   721  00FFE0  6C                 	db	108	;'l'
   722  00FFE1  53                 	db	83	;'S'
   723  00FFE2  74                 	db	116	;'t'
   724  00FFE3  61                 	db	97	;'a'
   725  00FFE4  74                 	db	116	;'t'
   726  00FFE5  65                 	db	101	;'e'
   727  00FFE6  00                 	db	0
   728  00FFE7                     STR_6:
   729  00FFE7  45                 	db	69	;'E'
   730  00FFE8  6E                 	db	110	;'n'
   731  00FFE9  64                 	db	100	;'d'
   732  00FFEA  43                 	db	67	;'C'
   733  00FFEB  6F                 	db	111	;'o'
   734  00FFEC  6C                 	db	108	;'l'
   735  00FFED  6F                 	db	111	;'o'
   736  00FFEE  72                 	db	114	;'r'
   737  00FFEF  00                 	db	0
   738  00FFF0                     STR_3:
   739  00FFF0  52                 	db	82	;'R'
   740  00FFF1  75                 	db	117	;'u'
   741  00FFF2  6E                 	db	110	;'n'
   742  00FFF3  54                 	db	84	;'T'
   743  00FFF4  69                 	db	105	;'i'
   744  00FFF5  6D                 	db	109	;'m'
   745  00FFF6  65                 	db	101	;'e'
   746  00FFF7  00                 	db	0
   747  00FFF8                     STR_2:
   748  00FFF8  56                 	db	86	;'V'
   749  00FFF9  61                 	db	97	;'a'
   750  00FFFA  6C                 	db	108	;'l'
   751  00FFFB  75                 	db	117	;'u'
   752  00FFFC  65                 	db	101	;'e'
   753  00FFFD  73                 	db	115	;'s'
   754  00FFFE  00                 	db	0
   755                           
   756                           ; #config settings
   757  00FFFF  00                 	db	0	; dummy byte at the end
   758  0000                     
   759                           	psect	nvBANK0
   760  000094                     __pnvBANK0:
   761                           	opt stack 0
   762  000094                     _timer0ReloadVal:
   763                           	opt stack 0
   764  000094                     	ds	2
   765  000096                     _TMR0_InterruptHandler:
   766                           	opt stack 0
   767  000096                     	ds	2
   768  000098                     _IOCB5_InterruptHandler:
   769                           	opt stack 0
   770  000098                     	ds	2
   771  00009A                     _IOCB4_InterruptHandler:
   772                           	opt stack 0
   773  00009A                     	ds	2
   774  0000                     _IOCBbits	set	3930
   775  0000                     _WPUB	set	3931
   776  0000                     _ANCON1	set	3932
   777  0000                     _ANCON0	set	3933
   778  0000                     _PORTC	set	3970
   779  0000                     _PORTA	set	3968
   780  0000                     _LATEbits	set	3981
   781  0000                     _T0CONbits	set	4053
   782  0000                     _TMR0L	set	4054
   783  0000                     _TMR0H	set	4055
   784  0000                     _T0CON	set	4053
   785  0000                     _EEDATA	set	3955
   786  0000                     _EEADR	set	3956
   787  0000                     _EEADRH	set	3957
   788  0000                     _EECON2	set	3966
   789  0000                     _EECON1bits	set	3967
   790  0000                     _TABLAT	set	4085
   791  0000                     _TBLPTRL	set	4086
   792  0000                     _TBLPTRH	set	4087
   793  0000                     _TBLPTRU	set	4088
   794  0000                     _CCPTMRSbits	set	3993
   795  0000                     _CCPR1H	set	4029
   796  0000                     _CCPR1L	set	4028
   797  0000                     _ECCP1DEL	set	4030
   798  0000                     _PSTR1CON	set	3996
   799  0000                     _ECCP1AS	set	4031
   800  0000                     _CCP1CON	set	4027
   801  0000                     _REFOCON	set	3994
   802  0000                     _OSCTUNE	set	3995
   803  0000                     _OSCCON2	set	4050
   804  0000                     _OSCCON	set	4051
   805  0000                     _RCONbits	set	4048
   806  0000                     _PORTB	set	3969
   807  0000                     _PORTBbits	set	3969
   808  0000                     _INTCONbits	set	4082
   809  0000                     _TRISD	set	3989
   810  0000                     _TRISC	set	3988
   811  0000                     _TRISB	set	3987
   812  0000                     _TRISA	set	3986
   813  0000                     _TRISE	set	3990
   814  0000                     _LATC	set	3979
   815  0000                     _LATB	set	3978
   816  0000                     _LATA	set	3977
   817  0000                     _LATD	set	3980
   818  0000                     _LATE	set	3981
   819  0000                     _T4CONbits	set	3976
   820  0000                     _PIR4bits	set	4023
   821  0000                     _TMR4	set	3975
   822  0000                     _PR4	set	4009
   823  0000                     _T4CON	set	3976
   824                           
   825                           	psect	cinit
   826  000BE2                     __pcinit:
   827                           	opt stack 0
   828  000BE2                     start_initialization:
   829                           	opt stack 0
   830  000BE2                     __initialization:
   831                           	opt stack 0
   832                           
   833                           ; Initialize objects allocated to BANK0 (4 bytes)
   834                           ; load TBLPTR registers with __pidataBANK0
   835  000BE2  0EB0               	movlw	low __pidataBANK0
   836  000BE4  6EF6               	movwf	tblptrl,c
   837  000BE6  0E10               	movlw	high __pidataBANK0
   838  000BE8  6EF7               	movwf	tblptrh,c
   839  000BEA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   840  000BEC  6EF8               	movwf	tblptru,c
   841  000BEE  EE00  F09C         	lfsr	0,__pdataBANK0
   842  000BF2  EE10 F004          	lfsr	1,4
   843  000BF6                     copy_data0:
   844  000BF6  0009               	tblrd		*+
   845  000BF8  CFF5 FFEE          	movff	tablat,postinc0
   846  000BFC  50E5               	movf	postdec1,w,c
   847  000BFE  50E1               	movf	fsr1l,w,c
   848  000C00  E1FA               	bnz	copy_data0
   849                           
   850                           ; Initialize objects allocated to COMRAM (2 bytes)
   851                           ; load TBLPTR registers with __pidataCOMRAM
   852  000C02  0EC8               	movlw	low __pidataCOMRAM
   853  000C04  6EF6               	movwf	tblptrl,c
   854  000C06  0E10               	movlw	high __pidataCOMRAM
   855  000C08  6EF7               	movwf	tblptrh,c
   856  000C0A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   857  000C0C  6EF8               	movwf	tblptru,c
   858  000C0E  0009               	tblrd		*+	;fetch initializer
   859  000C10  CFF5 F036          	movff	tablat,__pdataCOMRAM
   860  000C14  0009               	tblrd		*+	;fetch initializer
   861  000C16  CFF5 F037          	movff	tablat,__pdataCOMRAM+1
   862                           
   863                           ; Clear objects allocated to BANK0 (3 bytes)
   864  000C1A  0100               	movlb	0
   865  000C1C  6BA2               	clrf	(__pbssBANK0+2)& (0+255),b
   866  000C1E  6BA1               	clrf	(__pbssBANK0+1)& (0+255),b
   867  000C20  6BA0               	clrf	__pbssBANK0& (0+255),b
   868                           
   869                           ; Clear objects allocated to COMRAM (5 bytes)
   870  000C22  6A35               	clrf	(__pbssCOMRAM+4)& (0+255),c
   871  000C24  6A34               	clrf	(__pbssCOMRAM+3)& (0+255),c
   872  000C26  6A33               	clrf	(__pbssCOMRAM+2)& (0+255),c
   873  000C28  6A32               	clrf	(__pbssCOMRAM+1)& (0+255),c
   874  000C2A  6A31               	clrf	__pbssCOMRAM& (0+255),c
   875  000C2C                     end_of_initialization:
   876                           	opt stack 0
   877  000C2C                     __end_of__initialization:
   878                           	opt stack 0
   879  000C2C  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   880  000C2E  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   881  000C30  0100               	movlb	0
   882  000C32  EFB2  F006         	goto	_main	;jump to C main() function
   883                           tblptru	equ	0xFF8
   884                           tblptrh	equ	0xFF7
   885                           tblptrl	equ	0xFF6
   886                           tablat	equ	0xFF5
   887                           postinc0	equ	0xFEE
   888                           postdec1	equ	0xFE5
   889                           fsr1l	equ	0xFE1
   890                           
   891                           	psect	bssCOMRAM
   892  000031                     __pbssCOMRAM:
   893                           	opt stack 0
   894  000031                     PIN_MANAGER_IOC@ccw_count:
   895                           	opt stack 0
   896  000031                     	ds	1
   897  000032                     PIN_MANAGER_IOC@cw_count:
   898                           	opt stack 0
   899  000032                     	ds	1
   900  000033                     PIN_MANAGER_IOC@previousState:
   901                           	opt stack 0
   902  000033                     	ds	1
   903  000034                     _currentContext:
   904                           	opt stack 0
   905  000034                     	ds	1
   906  000035                     _mainState:
   907                           	opt stack 0
   908  000035                     	ds	1
   909                           tblptru	equ	0xFF8
   910                           tblptrh	equ	0xFF7
   911                           tblptrl	equ	0xFF6
   912                           tablat	equ	0xFF5
   913                           postinc0	equ	0xFEE
   914                           postdec1	equ	0xFE5
   915                           fsr1l	equ	0xFE1
   916                           
   917                           	psect	dataCOMRAM
   918  000036                     __pdataCOMRAM:
   919                           	opt stack 0
   920  000036                     _timeAfterFinishX:
   921                           	opt stack 0
   922  000036                     	ds	1
   923  000037                     _subMenuY:
   924                           	opt stack 0
   925  000037                     	ds	1
   926                           tblptru	equ	0xFF8
   927                           tblptrh	equ	0xFF7
   928                           tblptrl	equ	0xFF6
   929                           tablat	equ	0xFF5
   930                           postinc0	equ	0xFEE
   931                           postdec1	equ	0xFE5
   932                           fsr1l	equ	0xFE1
   933                           
   934                           	psect	bssBANK0
   935  0000A0                     __pbssBANK0:
   936                           	opt stack 0
   937  0000A0                     _screen_y:
   938                           	opt stack 0
   939  0000A0                     	ds	1
   940  0000A1                     _screen_x:
   941                           	opt stack 0
   942  0000A1                     	ds	1
   943  0000A2                     _runTimeContext:
   944                           	opt stack 0
   945  0000A2                     	ds	1
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           tblptrl	equ	0xFF6
   949                           tablat	equ	0xFF5
   950                           postinc0	equ	0xFEE
   951                           postdec1	equ	0xFE5
   952                           fsr1l	equ	0xFE1
   953                           
   954                           	psect	dataBANK0
   955  00009C                     __pdataBANK0:
   956                           	opt stack 0
   957  00009C                     _valuesXStart:
   958                           	opt stack 0
   959  00009C                     	ds	1
   960  00009D                     _xMenuStart:
   961                           	opt stack 0
   962  00009D                     	ds	1
   963  00009E                     _ARROW_SIZE:
   964                           	opt stack 0
   965  00009E                     	ds	1
   966  00009F                     _runTimeX:
   967                           	opt stack 0
   968  00009F                     	ds	1
   969                           tblptru	equ	0xFF8
   970                           tblptrh	equ	0xFF7
   971                           tblptrl	equ	0xFF6
   972                           tablat	equ	0xFF5
   973                           postinc0	equ	0xFEE
   974                           postdec1	equ	0xFE5
   975                           fsr1l	equ	0xFE1
   976                           
   977                           	psect	cstackBANK0
   978  000060                     __pcstackBANK0:
   979                           	opt stack 0
   980  000060                     ?___awdiv:
   981                           	opt stack 0
   982  000060                     GLCD_EnableController@controller:
   983                           	opt stack 0
   984  000060                     GLCD_DisableController@controller:
   985                           	opt stack 0
   986  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
   987                           	opt stack 0
   988  000060                     IOCB5_SetInterruptHandler@InterruptHandler:
   989                           	opt stack 0
   990  000060                     TMR0_SetInterruptHandler@InterruptHandler:
   991                           	opt stack 0
   992  000060                     ___awdiv@dividend:
   993                           	opt stack 0
   994                           
   995                           ; 2 bytes @ 0x0
   996  000060                     	ds	1
   997  000061                     GLCD_ReadStatus@status:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x1
  1001  000061                     	ds	1
  1002  000062                     ??_TMR0_Initialize:
  1003  000062                     GLCD_ReadStatus@controller:
  1004                           	opt stack 0
  1005  000062                     ___awdiv@divisor:
  1006                           	opt stack 0
  1007                           
  1008                           ; 2 bytes @ 0x2
  1009  000062                     	ds	2
  1010  000064                     ___awdiv@counter:
  1011                           	opt stack 0
  1012                           
  1013                           ; 1 bytes @ 0x4
  1014  000064                     	ds	1
  1015  000065                     ___awdiv@sign:
  1016                           	opt stack 0
  1017                           
  1018                           ; 1 bytes @ 0x5
  1019  000065                     	ds	1
  1020  000066                     ___awdiv@quotient:
  1021                           	opt stack 0
  1022                           
  1023                           ; 2 bytes @ 0x6
  1024  000066                     	ds	2
  1025  000068                     ??_GLCD_WriteData:
  1026  000068                     ??_GLCD_ReadData:
  1027  000068                     GLCD_WriteCommand@controller:
  1028                           	opt stack 0
  1029                           
  1030                           ; 1 bytes @ 0x8
  1031  000068                     	ds	1
  1032  000069                     ??_GLCD_WriteCommand:
  1033  000069                     GLCD_ReadData@data:
  1034                           	opt stack 0
  1035  000069                     GLCD_WriteData@dataToWrite:
  1036                           	opt stack 0
  1037                           
  1038                           ; 1 bytes @ 0x9
  1039  000069                     	ds	1
  1040  00006A                     GLCD_WriteChar@charToWrite:
  1041                           	opt stack 0
  1042  00006A                     GLCD_WriteCommand@commandToWrite:
  1043                           	opt stack 0
  1044                           
  1045                           ; 1 bytes @ 0xA
  1046  00006A                     	ds	1
  1047  00006B                     GLCD_Initalize@i:
  1048                           	opt stack 0
  1049  00006B                     GLCD_GoTo@y:
  1050                           	opt stack 0
  1051  00006B                     GLCD_WriteChar@i:
  1052                           	opt stack 0
  1053                           
  1054                           ; 2 bytes @ 0xB
  1055  00006B                     	ds	1
  1056  00006C                     GLCD_GoTo@x:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0xC
  1060  00006C                     	ds	1
  1061  00006D                     GLCD_GoTo@i:
  1062                           	opt stack 0
  1063  00006D                     GLCD_WriteString@stringToWrite:
  1064                           	opt stack 0
  1065                           
  1066                           ; 2 bytes @ 0xD
  1067  00006D                     	ds	1
  1068  00006E                     ??_Clear_Arrow_Column:
  1069  00006E                     GLCD_ClearScreen@i:
  1070                           	opt stack 0
  1071  00006E                     GLCD_SetPixel@y:
  1072                           	opt stack 0
  1073  00006E                     Clear_runTime_Arrows@i:
  1074                           	opt stack 0
  1075                           
  1076                           ; 1 bytes @ 0xE
  1077  00006E                     	ds	1
  1078  00006F                     GLCD_ClearScreen@j:
  1079                           	opt stack 0
  1080  00006F                     GLCD_SetPixel@color:
  1081                           	opt stack 0
  1082                           
  1083                           ; 1 bytes @ 0xF
  1084  00006F                     	ds	1
  1085  000070                     ??_GLCD_SetPixel:
  1086                           
  1087                           ; 1 bytes @ 0x10
  1088  000070                     	ds	2
  1089  000072                     GLCD_SetPixel@tmp:
  1090                           	opt stack 0
  1091                           
  1092                           ; 1 bytes @ 0x12
  1093  000072                     	ds	1
  1094  000073                     GLCD_SetPixel@x:
  1095                           	opt stack 0
  1096                           
  1097                           ; 1 bytes @ 0x13
  1098  000073                     	ds	1
  1099  000074                     _GLCD_SetPixel$1676:
  1100                           	opt stack 0
  1101                           
  1102                           ; 1 bytes @ 0x14
  1103  000074                     	ds	1
  1104  000075                     Clear_Arrow_Column@j:
  1105                           	opt stack 0
  1106  000075                     GLCD_Line@X1:
  1107                           	opt stack 0
  1108                           
  1109                           ; 2 bytes @ 0x15
  1110  000075                     	ds	1
  1111  000076                     Clear_Arrow_Column@i:
  1112                           	opt stack 0
  1113                           
  1114                           ; 1 bytes @ 0x16
  1115  000076                     	ds	1
  1116  000077                     GLCD_Line@Y1:
  1117                           	opt stack 0
  1118                           
  1119                           ; 2 bytes @ 0x17
  1120  000077                     	ds	2
  1121  000079                     GLCD_Line@X2:
  1122                           	opt stack 0
  1123                           
  1124                           ; 2 bytes @ 0x19
  1125  000079                     	ds	2
  1126  00007B                     GLCD_Line@Y2:
  1127                           	opt stack 0
  1128                           
  1129                           ; 2 bytes @ 0x1B
  1130  00007B                     	ds	2
  1131  00007D                     ??_GLCD_Line:
  1132                           
  1133                           ; 1 bytes @ 0x1D
  1134  00007D                     	ds	2
  1135  00007F                     GLCD_Line@TwoDxAccumulatedError:
  1136                           	opt stack 0
  1137                           
  1138                           ; 2 bytes @ 0x1F
  1139  00007F                     	ds	2
  1140  000081                     GLCD_Line@TwoDyAccumulatedError:
  1141                           	opt stack 0
  1142                           
  1143                           ; 2 bytes @ 0x21
  1144  000081                     	ds	2
  1145  000083                     GLCD_Line@Xinc:
  1146                           	opt stack 0
  1147                           
  1148                           ; 2 bytes @ 0x23
  1149  000083                     	ds	2
  1150  000085                     GLCD_Line@Yinc:
  1151                           	opt stack 0
  1152                           
  1153                           ; 2 bytes @ 0x25
  1154  000085                     	ds	2
  1155  000087                     GLCD_Line@TwoDx:
  1156                           	opt stack 0
  1157                           
  1158                           ; 2 bytes @ 0x27
  1159  000087                     	ds	2
  1160  000089                     GLCD_Line@TwoDy:
  1161                           	opt stack 0
  1162                           
  1163                           ; 2 bytes @ 0x29
  1164  000089                     	ds	2
  1165  00008B                     GLCD_Line@CurrentX:
  1166                           	opt stack 0
  1167                           
  1168                           ; 2 bytes @ 0x2B
  1169  00008B                     	ds	2
  1170  00008D                     GLCD_Line@CurrentY:
  1171                           	opt stack 0
  1172                           
  1173                           ; 2 bytes @ 0x2D
  1174  00008D                     	ds	2
  1175  00008F                     GLCD_Line@Dx:
  1176                           	opt stack 0
  1177                           
  1178                           ; 2 bytes @ 0x2F
  1179  00008F                     	ds	2
  1180  000091                     GLCD_Line@Dy:
  1181                           	opt stack 0
  1182                           
  1183                           ; 2 bytes @ 0x31
  1184  000091                     	ds	2
  1185  000093                     ??_main:
  1186                           
  1187                           ; 1 bytes @ 0x33
  1188  000093                     	ds	1
  1189                           tblptru	equ	0xFF8
  1190                           tblptrh	equ	0xFF7
  1191                           tblptrl	equ	0xFF6
  1192                           tablat	equ	0xFF5
  1193                           postinc0	equ	0xFEE
  1194                           postdec1	equ	0xFE5
  1195                           fsr1l	equ	0xFE1
  1196                           
  1197                           	psect	cstackCOMRAM
  1198  000001                     __pcstackCOMRAM:
  1199                           	opt stack 0
  1200  000001                     ?i2___awdiv:
  1201                           	opt stack 0
  1202  000001                     i2GLCD_EnableController@controller:
  1203                           	opt stack 0
  1204  000001                     i2GLCD_DisableController@controller:
  1205                           	opt stack 0
  1206  000001                     i2___awdiv@dividend:
  1207                           	opt stack 0
  1208                           
  1209                           ; 2 bytes @ 0x0
  1210  000001                     	ds	1
  1211  000002                     i2GLCD_ReadStatus@status:
  1212                           	opt stack 0
  1213                           
  1214                           ; 1 bytes @ 0x1
  1215  000002                     	ds	1
  1216  000003                     i2GLCD_ReadStatus@controller:
  1217                           	opt stack 0
  1218  000003                     i2___awdiv@divisor:
  1219                           	opt stack 0
  1220                           
  1221                           ; 2 bytes @ 0x2
  1222  000003                     	ds	2
  1223  000005                     i2___awdiv@counter:
  1224                           	opt stack 0
  1225                           
  1226                           ; 1 bytes @ 0x4
  1227  000005                     	ds	1
  1228  000006                     i2___awdiv@sign:
  1229                           	opt stack 0
  1230                           
  1231                           ; 1 bytes @ 0x5
  1232  000006                     	ds	1
  1233  000007                     i2___awdiv@quotient:
  1234                           	opt stack 0
  1235                           
  1236                           ; 2 bytes @ 0x6
  1237  000007                     	ds	2
  1238  000009                     ??i2_GLCD_WriteData:
  1239  000009                     i2GLCD_WriteCommand@controller:
  1240                           	opt stack 0
  1241                           
  1242                           ; 1 bytes @ 0x8
  1243  000009                     	ds	1
  1244  00000A                     ??i2_GLCD_WriteCommand:
  1245  00000A                     i2GLCD_WriteData@dataToWrite:
  1246                           	opt stack 0
  1247                           
  1248                           ; 1 bytes @ 0x9
  1249  00000A                     	ds	1
  1250  00000B                     i2GLCD_WriteChar@charToWrite:
  1251                           	opt stack 0
  1252  00000B                     i2GLCD_WriteCommand@commandToWrite:
  1253                           	opt stack 0
  1254                           
  1255                           ; 1 bytes @ 0xA
  1256  00000B                     	ds	1
  1257  00000C                     i2GLCD_GoTo@y:
  1258                           	opt stack 0
  1259  00000C                     i2GLCD_WriteChar@i:
  1260                           	opt stack 0
  1261                           
  1262                           ; 2 bytes @ 0xB
  1263  00000C                     	ds	1
  1264  00000D                     i2GLCD_GoTo@x:
  1265                           	opt stack 0
  1266                           
  1267                           ; 1 bytes @ 0xC
  1268  00000D                     	ds	1
  1269  00000E                     i2GLCD_GoTo@i:
  1270                           	opt stack 0
  1271                           
  1272                           ; 1 bytes @ 0xD
  1273  00000E                     	ds	1
  1274  00000F                     ??i2_Clear_Arrow_Column:
  1275  00000F                     i2Clear_runTime_Arrows@i:
  1276                           	opt stack 0
  1277                           
  1278                           ; 1 bytes @ 0xE
  1279  00000F                     	ds	7
  1280  000016                     i2Clear_Arrow_Column@j:
  1281                           	opt stack 0
  1282                           
  1283                           ; 1 bytes @ 0x15
  1284  000016                     	ds	1
  1285  000017                     i2Clear_Arrow_Column@i:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x16
  1289  000017                     	ds	1
  1290  000018                     Main_Menu_Function@result:
  1291                           	opt stack 0
  1292                           
  1293                           ; 1 bytes @ 0x17
  1294  000018                     	ds	1
  1295  000019                     ??_PIN_MANAGER_IOC:
  1296                           
  1297                           ; 1 bytes @ 0x18
  1298  000019                     	ds	2
  1299  00001B                     PIN_MANAGER_IOC@CHA:
  1300                           	opt stack 0
  1301                           
  1302                           ; 1 bytes @ 0x1A
  1303  00001B                     	ds	1
  1304  00001C                     PIN_MANAGER_IOC@CHB:
  1305                           	opt stack 0
  1306                           
  1307                           ; 1 bytes @ 0x1B
  1308  00001C                     	ds	1
  1309  00001D                     PIN_MANAGER_IOC@currentState:
  1310                           	opt stack 0
  1311                           
  1312                           ; 1 bytes @ 0x1C
  1313  00001D                     	ds	1
  1314  00001E                     PIN_MANAGER_IOC@result:
  1315                           	opt stack 0
  1316                           
  1317                           ; 1 bytes @ 0x1D
  1318  00001E                     	ds	1
  1319  00001F                     ??_INTERRUPT_InterruptManager:
  1320                           
  1321                           ; 1 bytes @ 0x1E
  1322  00001F                     	ds	18
  1323                           tblptru	equ	0xFF8
  1324                           tblptrh	equ	0xFF7
  1325                           tblptrl	equ	0xFF6
  1326                           tablat	equ	0xFF5
  1327                           postinc0	equ	0xFEE
  1328                           postdec1	equ	0xFE5
  1329                           fsr1l	equ	0xFE1
  1330                           
  1331 ;;
  1332 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1333 ;;
  1334 ;; *************** function _main *****************
  1335 ;; Defined at:
  1336 ;;		line 58 in file "main.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1352 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1353 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1354 ;;Total ram usage:        1 bytes
  1355 ;; Hardware stack levels required when called:   17
  1356 ;; This function calls:
  1357 ;;		_Check_Buttons
  1358 ;;		_Draw_Arrow
  1359 ;;		_GLCD_ClearScreen
  1360 ;;		_GLCD_Initalize
  1361 ;;		_Initialize_Menus
  1362 ;;		_SYSTEM_Initialize
  1363 ;; This function is called by:
  1364 ;;		Startup code after reset
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text0
  1369  000D64                     __ptext0:
  1370                           	opt stack 0
  1371  000D64                     _main:
  1372                           	opt stack 14
  1373                           
  1374                           ;main.c: 61: SYSTEM_Initialize();
  1375                           
  1376                           ;incstack = 0
  1377  000D64  EC10  F008         	call	_SYSTEM_Initialize	;wreg free
  1378                           
  1379                           ;main.c: 80: (INTCONbits.GIE = 1);
  1380  000D68  8EF2               	bsf	intcon,7,c	;volatile
  1381                           
  1382                           ;main.c: 86: (INTCONbits.PEIE = 1);
  1383  000D6A  8CF2               	bsf	intcon,6,c	;volatile
  1384                           
  1385                           ;main.c: 94: do { LATEbits.LATE1 = 1; } while(0);
  1386  000D6C  828D               	bsf	3981,1,c	;volatile
  1387                           
  1388                           ;main.c: 95: _delay((unsigned long)((10)*(8000000/4000.0)));
  1389  000D6E  0E1A               	movlw	26
  1390  000D70  0100               	movlb	0	; () banked
  1391  000D72  6F93               	movwf	??_main& (0+255),b
  1392  000D74  0EF8               	movlw	248
  1393  000D76                     u1707:
  1394  000D76  2EE8               	decfsz	wreg,f,c
  1395  000D78  D7FE               	bra	u1707
  1396  000D7A  2F93               	decfsz	??_main& (0+255),f,b
  1397  000D7C  D7FC               	bra	u1707
  1398  000D7E  F000               	nop	
  1399                           
  1400                           ;main.c: 96: GLCD_Initalize();
  1401  000D80  ECE0  F007         	call	_GLCD_Initalize	;wreg free
  1402                           
  1403                           ;main.c: 97: GLCD_ClearScreen();
  1404  000D84  EC08  F007         	call	_GLCD_ClearScreen	;wreg free
  1405                           
  1406                           ;main.c: 100: Initialize_Menus();
  1407  000D88  EC36  F001         	call	_Initialize_Menus	;wreg free
  1408                           
  1409                           ;main.c: 102: currentContext = mainMenu;
  1410  000D8C  0E00               	movlw	0
  1411  000D8E  6E34               	movwf	_currentContext,c
  1412                           
  1413                           ;main.c: 103: mainState = setRunTime;
  1414  000D90  0E02               	movlw	2
  1415  000D92  6E35               	movwf	_mainState,c
  1416                           
  1417                           ;main.c: 104: Draw_Arrow();
  1418  000D94  EC6E  F006         	call	_Draw_Arrow	;wreg free
  1419  000D98                     
  1420                           ;main.c: 107: {
  1421                           ;main.c: 109: Check_Buttons();
  1422  000D98  EC5A  F003         	call	_Check_Buttons	;wreg free
  1423  000D9C  D7FD               	goto	l388
  1424  000D9E                     __end_of_main:
  1425                           	opt stack 0
  1426                           tblptru	equ	0xFF8
  1427                           tblptrh	equ	0xFF7
  1428                           tblptrl	equ	0xFF6
  1429                           tablat	equ	0xFF5
  1430                           intcon	equ	0xFF2
  1431                           postinc0	equ	0xFEE
  1432                           wreg	equ	0xFE8
  1433                           postdec1	equ	0xFE5
  1434                           fsr1l	equ	0xFE1
  1435                           
  1436 ;; *************** function _SYSTEM_Initialize *****************
  1437 ;; Defined at:
  1438 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1456 ;;Total ram usage:        0 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:   11
  1459 ;; This function calls:
  1460 ;;		_EPWM1_Initialize
  1461 ;;		_INTERRUPT_Initialize
  1462 ;;		_OSCILLATOR_Initialize
  1463 ;;		_PIN_MANAGER_Initialize
  1464 ;;		_TMR0_Initialize
  1465 ;;		_TMR4_Initialize
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text1
  1472  001020                     __ptext1:
  1473                           	opt stack 0
  1474  001020                     _SYSTEM_Initialize:
  1475                           	opt stack 19
  1476                           
  1477                           ;mcc.c: 114: INTERRUPT_Initialize();
  1478                           
  1479                           ;incstack = 0
  1480  001020  EC5E  F008         	call	_INTERRUPT_Initialize	;wreg free
  1481                           
  1482                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1483  001024  EC17  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  1484                           
  1485                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1486  001028  EC3B  F008         	call	_OSCILLATOR_Initialize	;wreg free
  1487                           
  1488                           ;mcc.c: 117: EPWM1_Initialize();
  1489  00102C  EC02  F008         	call	_EPWM1_Initialize	;wreg free
  1490                           
  1491                           ;mcc.c: 118: TMR4_Initialize();
  1492  001030  EC1D  F008         	call	_TMR4_Initialize	;wreg free
  1493                           
  1494                           ;mcc.c: 119: TMR0_Initialize();
  1495  001034  ECCF  F006         	call	_TMR0_Initialize	;wreg free
  1496  001038  0012               	return		;funcret
  1497  00103A                     __end_of_SYSTEM_Initialize:
  1498                           	opt stack 0
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           intcon	equ	0xFF2
  1504                           postinc0	equ	0xFEE
  1505                           wreg	equ	0xFE8
  1506                           postdec1	equ	0xFE5
  1507                           fsr1l	equ	0xFE1
  1508                           
  1509 ;; *************** function _TMR4_Initialize *****************
  1510 ;; Defined at:
  1511 ;;		line 61 in file "mcc_generated_files/tmr4.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1529 ;;Total ram usage:        0 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:   10
  1532 ;; This function calls:
  1533 ;;		_TMR4_StartTimer
  1534 ;; This function is called by:
  1535 ;;		_SYSTEM_Initialize
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text2
  1540  00103A                     __ptext2:
  1541                           	opt stack 0
  1542  00103A                     _TMR4_Initialize:
  1543                           	opt stack 19
  1544                           
  1545                           ;tmr4.c: 66: T4CON = 0x02;
  1546                           
  1547                           ;incstack = 0
  1548  00103A  0E02               	movlw	2
  1549  00103C  6E88               	movwf	3976,c	;volatile
  1550                           
  1551                           ;tmr4.c: 69: PR4 = 0xF9;
  1552  00103E  0EF9               	movlw	249
  1553  001040  6EA9               	movwf	4009,c	;volatile
  1554                           
  1555                           ;tmr4.c: 72: TMR4 = 0x00;
  1556  001042  0E00               	movlw	0
  1557  001044  6E87               	movwf	3975,c	;volatile
  1558                           
  1559                           ;tmr4.c: 75: PIR4bits.TMR4IF = 0;
  1560  001046  9EB7               	bcf	4023,7,c	;volatile
  1561                           
  1562                           ;tmr4.c: 78: TMR4_StartTimer();
  1563  001048  EC5A  F008         	call	_TMR4_StartTimer	;wreg free
  1564  00104C  0012               	return		;funcret
  1565  00104E                     __end_of_TMR4_Initialize:
  1566                           	opt stack 0
  1567                           tblptru	equ	0xFF8
  1568                           tblptrh	equ	0xFF7
  1569                           tblptrl	equ	0xFF6
  1570                           tablat	equ	0xFF5
  1571                           intcon	equ	0xFF2
  1572                           postinc0	equ	0xFEE
  1573                           wreg	equ	0xFE8
  1574                           postdec1	equ	0xFE5
  1575                           fsr1l	equ	0xFE1
  1576                           
  1577 ;; *************** function _TMR4_StartTimer *****************
  1578 ;; Defined at:
  1579 ;;		line 81 in file "mcc_generated_files/tmr4.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		None
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1597 ;;Total ram usage:        0 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:    9
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_TMR4_Initialize
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text3
  1608  0010B4                     __ptext3:
  1609                           	opt stack 0
  1610  0010B4                     _TMR4_StartTimer:
  1611                           	opt stack 19
  1612                           
  1613                           ;tmr4.c: 84: T4CONbits.TMR4ON = 1;
  1614                           
  1615                           ;incstack = 0
  1616  0010B4  8488               	bsf	3976,2,c	;volatile
  1617  0010B6  0012               	return		;funcret
  1618  0010B8                     __end_of_TMR4_StartTimer:
  1619                           	opt stack 0
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           intcon	equ	0xFF2
  1625                           postinc0	equ	0xFEE
  1626                           wreg	equ	0xFE8
  1627                           postdec1	equ	0xFE5
  1628                           fsr1l	equ	0xFE1
  1629                           
  1630 ;; *************** function _TMR0_Initialize *****************
  1631 ;; Defined at:
  1632 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1648 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1649 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1650 ;;Total ram usage:        2 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; Hardware stack levels required when called:   10
  1653 ;; This function calls:
  1654 ;;		_TMR0_SetInterruptHandler
  1655 ;;		_TMR0_StartTimer
  1656 ;; This function is called by:
  1657 ;;		_SYSTEM_Initialize
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text4
  1662  000D9E                     __ptext4:
  1663                           	opt stack 0
  1664  000D9E                     _TMR0_Initialize:
  1665                           	opt stack 19
  1666                           
  1667                           ;tmr0.c: 71: T0CON = 0x14;
  1668                           
  1669                           ;incstack = 0
  1670  000D9E  0E14               	movlw	20
  1671  000DA0  6ED5               	movwf	4053,c	;volatile
  1672                           
  1673                           ;tmr0.c: 74: TMR0H = 0x0B;
  1674  000DA2  0E0B               	movlw	11
  1675  000DA4  6ED7               	movwf	4055,c	;volatile
  1676                           
  1677                           ;tmr0.c: 77: TMR0L = 0xDB;
  1678  000DA6  0EDB               	movlw	219
  1679  000DA8  6ED6               	movwf	4054,c	;volatile
  1680                           
  1681                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  1682  000DAA  50D6               	movf	4054,w,c	;volatile
  1683  000DAC  CFD7 F062          	movff	4055,??_TMR0_Initialize	;volatile
  1684  000DB0  0100               	movlb	0	; () banked
  1685  000DB2  6B63               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  1686  000DB4  C062  F063         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1687  000DB8  6B62               	clrf	??_TMR0_Initialize& (0+255),b
  1688  000DBA  1162               	iorwf	??_TMR0_Initialize& (0+255),w,b
  1689  000DBC  6F94               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  1690  000DBE  5163               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  1691  000DC0  6F95               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  1695  000DC2  94F2               	bcf	intcon,2,c	;volatile
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  1699  000DC4  8AF2               	bsf	intcon,5,c	;volatile
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1703  000DC6  0ECA               	movlw	low _TMR0_DefaultInterruptHandler
  1704  000DC8  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  1705  000DCA  0E10               	movlw	high _TMR0_DefaultInterruptHandler
  1706  000DCC  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1707  000DCE  EC44  F008         	call	_TMR0_SetInterruptHandler	;wreg free
  1708                           
  1709                           ;tmr0.c: 92: TMR0_StartTimer();
  1710  000DD2  EC5C  F008         	call	_TMR0_StartTimer	;wreg free
  1711  000DD6  0012               	return		;funcret
  1712  000DD8                     __end_of_TMR0_Initialize:
  1713                           	opt stack 0
  1714                           tblptru	equ	0xFF8
  1715                           tblptrh	equ	0xFF7
  1716                           tblptrl	equ	0xFF6
  1717                           tablat	equ	0xFF5
  1718                           intcon	equ	0xFF2
  1719                           postinc0	equ	0xFEE
  1720                           wreg	equ	0xFE8
  1721                           postdec1	equ	0xFE5
  1722                           fsr1l	equ	0xFE1
  1723                           
  1724 ;; *************** function _TMR0_StartTimer *****************
  1725 ;; Defined at:
  1726 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		None
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1744 ;;Total ram usage:        0 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    9
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_TMR0_Initialize
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text5
  1755  0010B8                     __ptext5:
  1756                           	opt stack 0
  1757  0010B8                     _TMR0_StartTimer:
  1758                           	opt stack 19
  1759                           
  1760                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
  1761                           
  1762                           ;incstack = 0
  1763  0010B8  8ED5               	bsf	4053,7,c	;volatile
  1764  0010BA  0012               	return		;funcret
  1765  0010BC                     __end_of_TMR0_StartTimer:
  1766                           	opt stack 0
  1767                           tblptru	equ	0xFF8
  1768                           tblptrh	equ	0xFF7
  1769                           tblptrl	equ	0xFF6
  1770                           tablat	equ	0xFF5
  1771                           intcon	equ	0xFF2
  1772                           postinc0	equ	0xFEE
  1773                           wreg	equ	0xFE8
  1774                           postdec1	equ	0xFE5
  1775                           fsr1l	equ	0xFE1
  1776                           
  1777 ;; *************** function _TMR0_SetInterruptHandler *****************
  1778 ;; Defined at:
  1779 ;;		line 154 in file "mcc_generated_files/tmr0.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1782 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1794 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1797 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1798 ;;Total ram usage:        2 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    9
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_TMR0_Initialize
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text6
  1809  001088                     __ptext6:
  1810                           	opt stack 0
  1811  001088                     _TMR0_SetInterruptHandler:
  1812                           	opt stack 19
  1813                           
  1814                           ;tmr0.c: 155: TMR0_InterruptHandler = InterruptHandler;
  1815                           
  1816                           ;incstack = 0
  1817  001088  C060  F096         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1818  00108C  C061  F097         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1819  001090  0012               	return		;funcret
  1820  001092                     __end_of_TMR0_SetInterruptHandler:
  1821                           	opt stack 0
  1822                           tblptru	equ	0xFF8
  1823                           tblptrh	equ	0xFF7
  1824                           tblptrl	equ	0xFF6
  1825                           tablat	equ	0xFF5
  1826                           intcon	equ	0xFF2
  1827                           postinc0	equ	0xFEE
  1828                           wreg	equ	0xFE8
  1829                           postdec1	equ	0xFE5
  1830                           fsr1l	equ	0xFE1
  1831                           
  1832 ;; *************** function _PIN_MANAGER_Initialize *****************
  1833 ;; Defined at:
  1834 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1852 ;;Total ram usage:        0 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:   10
  1855 ;; This function calls:
  1856 ;;		_IOCB4_SetInterruptHandler
  1857 ;;		_IOCB5_SetInterruptHandler
  1858 ;; This function is called by:
  1859 ;;		_SYSTEM_Initialize
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text7
  1864  000A2E                     __ptext7:
  1865                           	opt stack 0
  1866  000A2E                     _PIN_MANAGER_Initialize:
  1867                           	opt stack 19
  1868                           
  1869                           ;pin_manager.c: 64: LATE = 0x00;
  1870                           
  1871                           ;incstack = 0
  1872  000A2E  0E00               	movlw	0
  1873  000A30  6E8D               	movwf	3981,c	;volatile
  1874                           
  1875                           ;pin_manager.c: 65: LATD = 0x00;
  1876  000A32  0E00               	movlw	0
  1877  000A34  6E8C               	movwf	3980,c	;volatile
  1878                           
  1879                           ;pin_manager.c: 66: LATA = 0x00;
  1880  000A36  0E00               	movlw	0
  1881  000A38  6E89               	movwf	3977,c	;volatile
  1882                           
  1883                           ;pin_manager.c: 67: LATB = 0x00;
  1884  000A3A  0E00               	movlw	0
  1885  000A3C  6E8A               	movwf	3978,c	;volatile
  1886                           
  1887                           ;pin_manager.c: 68: LATC = 0x00;
  1888  000A3E  0E00               	movlw	0
  1889  000A40  6E8B               	movwf	3979,c	;volatile
  1890                           
  1891                           ;pin_manager.c: 73: TRISE = 0x05;
  1892  000A42  0E05               	movlw	5
  1893  000A44  6E96               	movwf	3990,c	;volatile
  1894                           
  1895                           ;pin_manager.c: 74: TRISA = 0x01;
  1896  000A46  0E01               	movlw	1
  1897  000A48  6E92               	movwf	3986,c	;volatile
  1898                           
  1899                           ;pin_manager.c: 75: TRISB = 0xFF;
  1900  000A4A  6893               	setf	3987,c	;volatile
  1901                           
  1902                           ;pin_manager.c: 76: TRISC = 0x00;
  1903  000A4C  0E00               	movlw	0
  1904  000A4E  6E94               	movwf	3988,c	;volatile
  1905                           
  1906                           ;pin_manager.c: 77: TRISD = 0x0F;
  1907  000A50  0E0F               	movlw	15
  1908  000A52  6E95               	movwf	3989,c	;volatile
  1909                           
  1910                           ;pin_manager.c: 82: ANCON0 = 0x00;
  1911  000A54  0E00               	movlw	0
  1912  000A56  010F               	movlb	15	; () banked
  1913  000A58  6F5D               	movwf	93,b	;volatile
  1914                           
  1915                           ;pin_manager.c: 83: ANCON1 = 0x00;
  1916  000A5A  0E00               	movlw	0
  1917  000A5C  6F5C               	movwf	92,b	;volatile
  1918                           
  1919                           ;pin_manager.c: 89: WPUB = 0x00;
  1920  000A5E  0E00               	movlw	0
  1921  000A60  6F5B               	movwf	91,b	;volatile
  1922                           
  1923                           ; BSR set to: 15
  1924                           ;pin_manager.c: 97: IOCBbits.IOCB4 = 1;
  1925  000A62  895A               	bsf	90,4,b	;volatile
  1926                           
  1927                           ; BSR set to: 15
  1928                           ;pin_manager.c: 98: IOCBbits.IOCB5 = 1;
  1929  000A64  8B5A               	bsf	90,5,b	;volatile
  1930                           
  1931                           ; BSR set to: 15
  1932                           ;pin_manager.c: 101: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  1933  000A66  0E00               	movlw	0
  1934  000A68  0100               	movlb	0	; () banked
  1935  000A6A  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  1936  000A6C  0E00               	movlw	0
  1937  000A6E  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1938  000A70  EC4E  F008         	call	_IOCB4_SetInterruptHandler	;wreg free
  1939                           
  1940                           ;pin_manager.c: 102: IOCB5_SetInterruptHandler(IOCB5_DefaultInterruptHandler);
  1941  000A74  0E00               	movlw	0
  1942  000A76  0100               	movlb	0	; () banked
  1943  000A78  6F60               	movwf	IOCB5_SetInterruptHandler@InterruptHandler& (0+255),b
  1944  000A7A  0E00               	movlw	0
  1945  000A7C  6F61               	movwf	(IOCB5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1946  000A7E  EC49  F008         	call	_IOCB5_SetInterruptHandler	;wreg free
  1947                           
  1948                           ;pin_manager.c: 105: INTCONbits.RBIE = 1;
  1949  000A82  86F2               	bsf	intcon,3,c	;volatile
  1950  000A84  0012               	return		;funcret
  1951  000A86                     __end_of_PIN_MANAGER_Initialize:
  1952                           	opt stack 0
  1953                           tblptru	equ	0xFF8
  1954                           tblptrh	equ	0xFF7
  1955                           tblptrl	equ	0xFF6
  1956                           tablat	equ	0xFF5
  1957                           intcon	equ	0xFF2
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           postdec1	equ	0xFE5
  1961                           fsr1l	equ	0xFE1
  1962                           
  1963 ;; *************** function _IOCB5_SetInterruptHandler *****************
  1964 ;; Defined at:
  1965 ;;		line 266 in file "mcc_generated_files/pin_manager.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  1968 ;;		 -> IOCB5_DefaultInterruptHandler(1), 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1980 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1983 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1984 ;;Total ram usage:        2 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    9
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_PIN_MANAGER_Initialize
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text8
  1995  001092                     __ptext8:
  1996                           	opt stack 0
  1997  001092                     _IOCB5_SetInterruptHandler:
  1998                           	opt stack 19
  1999                           
  2000                           ;pin_manager.c: 267: IOCB5_InterruptHandler = InterruptHandler;
  2001                           
  2002                           ;incstack = 0
  2003  001092  C060  F098         	movff	IOCB5_SetInterruptHandler@InterruptHandler,_IOCB5_InterruptHandler
  2004  001096  C061  F099         	movff	IOCB5_SetInterruptHandler@InterruptHandler+1,_IOCB5_InterruptHandler+1
  2005  00109A  0012               	return		;funcret
  2006  00109C                     __end_of_IOCB5_SetInterruptHandler:
  2007                           	opt stack 0
  2008                           tblptru	equ	0xFF8
  2009                           tblptrh	equ	0xFF7
  2010                           tblptrl	equ	0xFF6
  2011                           tablat	equ	0xFF5
  2012                           intcon	equ	0xFF2
  2013                           postinc0	equ	0xFEE
  2014                           wreg	equ	0xFE8
  2015                           postdec1	equ	0xFE5
  2016                           fsr1l	equ	0xFE1
  2017                           
  2018 ;; *************** function _IOCB4_SetInterruptHandler *****************
  2019 ;; Defined at:
  2020 ;;		line 237 in file "mcc_generated_files/pin_manager.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  2023 ;;		 -> IOCB4_DefaultInterruptHandler(1), 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      void 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2035 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2038 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2039 ;;Total ram usage:        2 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    9
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_PIN_MANAGER_Initialize
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text9
  2050  00109C                     __ptext9:
  2051                           	opt stack 0
  2052  00109C                     _IOCB4_SetInterruptHandler:
  2053                           	opt stack 19
  2054                           
  2055                           ;pin_manager.c: 238: IOCB4_InterruptHandler = InterruptHandler;
  2056                           
  2057                           ;incstack = 0
  2058  00109C  C060  F09A         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  2059  0010A0  C061  F09B         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  2060  0010A4  0012               	return		;funcret
  2061  0010A6                     __end_of_IOCB4_SetInterruptHandler:
  2062                           	opt stack 0
  2063                           tblptru	equ	0xFF8
  2064                           tblptrh	equ	0xFF7
  2065                           tblptrl	equ	0xFF6
  2066                           tablat	equ	0xFF5
  2067                           intcon	equ	0xFF2
  2068                           postinc0	equ	0xFEE
  2069                           wreg	equ	0xFE8
  2070                           postdec1	equ	0xFE5
  2071                           fsr1l	equ	0xFE1
  2072                           
  2073 ;; *************** function _OSCILLATOR_Initialize *****************
  2074 ;; Defined at:
  2075 ;;		line 122 in file "mcc_generated_files/mcc.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2093 ;;Total ram usage:        0 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    9
  2096 ;; This function calls:
  2097 ;;		Nothing
  2098 ;; This function is called by:
  2099 ;;		_SYSTEM_Initialize
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text10
  2104  001076                     __ptext10:
  2105                           	opt stack 0
  2106  001076                     _OSCILLATOR_Initialize:
  2107                           	opt stack 20
  2108                           
  2109                           ;mcc.c: 125: OSCCON = 0x60;
  2110                           
  2111                           ;incstack = 0
  2112  001076  0E60               	movlw	96
  2113  001078  6ED3               	movwf	4051,c	;volatile
  2114                           
  2115                           ;mcc.c: 127: OSCCON2 = 0x00;
  2116  00107A  0E00               	movlw	0
  2117  00107C  6ED2               	movwf	4050,c	;volatile
  2118                           
  2119                           ;mcc.c: 129: OSCTUNE = 0x00;
  2120  00107E  0E00               	movlw	0
  2121  001080  6E9B               	movwf	3995,c	;volatile
  2122                           
  2123                           ;mcc.c: 131: REFOCON = 0x00;
  2124  001082  0E00               	movlw	0
  2125  001084  6E9A               	movwf	3994,c	;volatile
  2126  001086  0012               	return		;funcret
  2127  001088                     __end_of_OSCILLATOR_Initialize:
  2128                           	opt stack 0
  2129                           tblptru	equ	0xFF8
  2130                           tblptrh	equ	0xFF7
  2131                           tblptrl	equ	0xFF6
  2132                           tablat	equ	0xFF5
  2133                           intcon	equ	0xFF2
  2134                           postinc0	equ	0xFEE
  2135                           wreg	equ	0xFE8
  2136                           postdec1	equ	0xFE5
  2137                           fsr1l	equ	0xFE1
  2138                           
  2139 ;; *************** function _INTERRUPT_Initialize *****************
  2140 ;; Defined at:
  2141 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		None
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;Total ram usage:        0 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    9
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_SYSTEM_Initialize
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           	psect	text11
  2170  0010BC                     __ptext11:
  2171                           	opt stack 0
  2172  0010BC                     _INTERRUPT_Initialize:
  2173                           	opt stack 20
  2174                           
  2175                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2176                           
  2177                           ;incstack = 0
  2178  0010BC  9ED0               	bcf	4048,7,c	;volatile
  2179  0010BE  0012               	return		;funcret
  2180  0010C0                     __end_of_INTERRUPT_Initialize:
  2181                           	opt stack 0
  2182                           tblptru	equ	0xFF8
  2183                           tblptrh	equ	0xFF7
  2184                           tblptrl	equ	0xFF6
  2185                           tablat	equ	0xFF5
  2186                           intcon	equ	0xFF2
  2187                           postinc0	equ	0xFEE
  2188                           wreg	equ	0xFE8
  2189                           postdec1	equ	0xFE5
  2190                           fsr1l	equ	0xFE1
  2191                           
  2192 ;; *************** function _EPWM1_Initialize *****************
  2193 ;; Defined at:
  2194 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;		None
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;		None
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2212 ;;Total ram usage:        0 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; Hardware stack levels required when called:    9
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_SYSTEM_Initialize
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text12
  2223  001004                     __ptext12:
  2224                           	opt stack 0
  2225  001004                     _EPWM1_Initialize:
  2226                           	opt stack 20
  2227                           
  2228                           ;epwm1.c: 68: CCP1CON = 0x3C;
  2229                           
  2230                           ;incstack = 0
  2231  001004  0E3C               	movlw	60
  2232  001006  6EBB               	movwf	4027,c	;volatile
  2233                           
  2234                           ;epwm1.c: 71: ECCP1AS = 0x00;
  2235  001008  0E00               	movlw	0
  2236  00100A  6EBF               	movwf	4031,c	;volatile
  2237                           
  2238                           ;epwm1.c: 74: PSTR1CON = 0x0F;
  2239  00100C  0E0F               	movlw	15
  2240  00100E  6E9C               	movwf	3996,c	;volatile
  2241                           
  2242                           ;epwm1.c: 77: ECCP1DEL = 0x80;
  2243  001010  0E80               	movlw	128
  2244  001012  6EBE               	movwf	4030,c	;volatile
  2245                           
  2246                           ;epwm1.c: 80: CCPR1L = 0x18;
  2247  001014  0E18               	movlw	24
  2248  001016  6EBC               	movwf	4028,c	;volatile
  2249                           
  2250                           ;epwm1.c: 83: CCPR1H = 0x00;
  2251  001018  0E00               	movlw	0
  2252  00101A  6EBD               	movwf	4029,c	;volatile
  2253                           
  2254                           ;epwm1.c: 87: CCPTMRSbits.C1TSEL = 0x1;
  2255  00101C  8099               	bsf	3993,0,c	;volatile
  2256  00101E  0012               	return		;funcret
  2257  001020                     __end_of_EPWM1_Initialize:
  2258                           	opt stack 0
  2259                           tblptru	equ	0xFF8
  2260                           tblptrh	equ	0xFF7
  2261                           tblptrl	equ	0xFF6
  2262                           tablat	equ	0xFF5
  2263                           intcon	equ	0xFF2
  2264                           postinc0	equ	0xFEE
  2265                           wreg	equ	0xFE8
  2266                           postdec1	equ	0xFE5
  2267                           fsr1l	equ	0xFE1
  2268                           
  2269 ;; *************** function _GLCD_Initalize *****************
  2270 ;; Defined at:
  2271 ;;		line 15 in file "ks0108lib/KS0108.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  i               1   11[BANK0 ] unsigned char 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2288 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;Total ram usage:        1 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:   12
  2292 ;; This function calls:
  2293 ;;		_GLCD_InitializePorts
  2294 ;;		_GLCD_WriteCommand
  2295 ;; This function is called by:
  2296 ;;		_main
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text13
  2301  000FC0                     __ptext13:
  2302                           	opt stack 0
  2303  000FC0                     _GLCD_Initalize:
  2304                           	opt stack 18
  2305                           
  2306                           ;KS0108.c: 17: unsigned char i;
  2307                           ;KS0108.c: 18: GLCD_InitializePorts();
  2308                           
  2309                           ;incstack = 0
  2310  000FC0  EC53  F008         	call	_GLCD_InitializePorts	;wreg free
  2311                           
  2312                           ;KS0108.c: 19: for(i = 0; i < 3; i++)
  2313  000FC4  0E00               	movlw	0
  2314  000FC6  0100               	movlb	0	; () banked
  2315  000FC8  6F6B               	movwf	GLCD_Initalize@i& (0+255),b
  2316  000FCA                     l3093:
  2317                           
  2318                           ; BSR set to: 0
  2319  000FCA  0E02               	movlw	2
  2320  000FCC  656B               	cpfsgt	GLCD_Initalize@i& (0+255),b
  2321  000FCE  D001               	goto	l464
  2322  000FD0  0012               	return	
  2323  000FD2                     l464:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;KS0108.c: 20: GLCD_WriteCommand((0x3E | 0x01), i);
  2327                           
  2328                           ; BSR set to: 0
  2329  000FD2  C06B  F068         	movff	GLCD_Initalize@i,GLCD_WriteCommand@controller
  2330  000FD6  0E3F               	movlw	63
  2331  000FD8  ECEC  F006         	call	_GLCD_WriteCommand
  2332  000FDC  0100               	movlb	0	; () banked
  2333  000FDE  2B6B               	incf	GLCD_Initalize@i& (0+255),f,b
  2334  000FE0  D7F4               	goto	l3093
  2335  000FE2                     __end_of_GLCD_Initalize:
  2336                           	opt stack 0
  2337                           tblptru	equ	0xFF8
  2338                           tblptrh	equ	0xFF7
  2339                           tblptrl	equ	0xFF6
  2340                           tablat	equ	0xFF5
  2341                           intcon	equ	0xFF2
  2342                           postinc0	equ	0xFEE
  2343                           wreg	equ	0xFE8
  2344                           postdec1	equ	0xFE5
  2345                           fsr1l	equ	0xFE1
  2346                           
  2347 ;; *************** function _GLCD_InitializePorts *****************
  2348 ;; Defined at:
  2349 ;;		line 31 in file "ks0108lib/KS0108-PIC18.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;		None
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2367 ;;Total ram usage:        0 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    9
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_GLCD_Initalize
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text14
  2378  0010A6                     __ptext14:
  2379                           	opt stack 0
  2380  0010A6                     _GLCD_InitializePorts:
  2381                           	opt stack 20
  2382                           
  2383                           ;KS0108-PIC18.c: 33: PORTA |= ((1 << 5) | (1 << 6) | (1 << 7));
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;incstack = 0
  2387  0010A6  0EE0               	movlw	224
  2388  0010A8  1280               	iorwf	3968,f,c	;volatile
  2389                           
  2390                           ;KS0108-PIC18.c: 34: TRISA &= ~((1 << 5) | (1 << 6) | (1 << 7) | (1 << 2) | (1 << 1) | (
      +                          1 << 3));
  2391  0010AA  0E11               	movlw	17
  2392  0010AC  1692               	andwf	3986,f,c	;volatile
  2393  0010AE  0012               	return		;funcret
  2394  0010B0                     __end_of_GLCD_InitializePorts:
  2395                           	opt stack 0
  2396                           tblptru	equ	0xFF8
  2397                           tblptrh	equ	0xFF7
  2398                           tblptrl	equ	0xFF6
  2399                           tablat	equ	0xFF5
  2400                           intcon	equ	0xFF2
  2401                           postinc0	equ	0xFEE
  2402                           wreg	equ	0xFE8
  2403                           postdec1	equ	0xFE5
  2404                           fsr1l	equ	0xFE1
  2405                           
  2406 ;; *************** function _Check_Buttons *****************
  2407 ;; Defined at:
  2408 ;;		line 126 in file "main.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2426 ;;Total ram usage:        0 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:   16
  2429 ;; This function calls:
  2430 ;;		_Draw_Arrow
  2431 ;;		_Draw_runTime_Menu
  2432 ;;		_GLCD_ClearScreen
  2433 ;;		_Initialize_Menus
  2434 ;; This function is called by:
  2435 ;;		_main
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text15
  2440  0006B4                     __ptext15:
  2441                           	opt stack 0
  2442  0006B4                     _Check_Buttons:
  2443                           	opt stack 14
  2444                           
  2445                           ;main.c: 132: if(!PORTBbits.RB2)
  2446                           
  2447                           ;incstack = 0
  2448  0006B4  B481               	btfsc	3969,2,c	;volatile
  2449  0006B6  0012               	return	
  2450  0006B8  D002               	goto	l395
  2451  0006BA                     
  2452                           ;main.c: 136: GLCD_ClearScreen();
  2453  0006BA  EC08  F007         	call	_GLCD_ClearScreen	;wreg free
  2454  0006BE                     l395:
  2455  0006BE  A481               	btfss	3969,2,c	;volatile
  2456  0006C0  D7FC               	goto	l396
  2457                           
  2458                           ;main.c: 137: if(currentContext == mainMenu)
  2459  0006C2  5034               	movf	_currentContext,w,c
  2460  0006C4  B4D8               	btfsc	status,2,c
  2461  0006C6  D019               	goto	l399
  2462  0006C8  D02C               	goto	l398
  2463  0006CA                     
  2464                           ;main.c: 142: currentContext = runTime;
  2465  0006CA  0E01               	movlw	1
  2466  0006CC  6E34               	movwf	_currentContext,c
  2467                           
  2468                           ;main.c: 143: runTimeContext = runTimeSelection;
  2469  0006CE  0E00               	movlw	0
  2470  0006D0  0100               	movlb	0	; () banked
  2471  0006D2  6FA2               	movwf	_runTimeContext& (0+255),b
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;main.c: 144: Draw_runTime_Menu();
  2475  0006D4  EC11  F004         	call	_Draw_runTime_Menu	;wreg free
  2476                           
  2477                           ;main.c: 145: break;
  2478  0006D8  D028               	goto	l408
  2479  0006DA                     
  2480                           ;main.c: 147: currentContext = brightnessMenu;
  2481  0006DA  0E02               	movlw	2
  2482  0006DC  D007               	goto	L4
  2483  0006DE                     
  2484                           ;main.c: 150: currentContext = startColorRed;
  2485  0006DE  0E03               	movlw	3
  2486  0006E0  D005               	goto	L4
  2487  0006E2                     
  2488                           ;main.c: 153: currentContext = endColorRed;
  2489  0006E2  0E06               	movlw	6
  2490  0006E4  D003               	goto	L4
  2491  0006E6                     
  2492                           ;main.c: 156: currentContext = backlightMenu;
  2493  0006E6  0E09               	movlw	9
  2494  0006E8  D001               	goto	L4
  2495  0006EA                     
  2496                           ;main.c: 159: currentContext = selectStateMenu;
  2497  0006EA  0E0A               	movlw	10
  2498  0006EC                     L4:
  2499  0006EC  6E34               	movwf	_currentContext,c
  2500                           
  2501                           ;main.c: 160: break;
  2502  0006EE  D01D               	goto	l408
  2503  0006F0                     
  2504                           ;main.c: 162: currentContext = mainMenu;
  2505  0006F0  0E00               	movlw	0
  2506  0006F2  6E34               	movwf	_currentContext,c
  2507                           
  2508                           ;main.c: 163: Initialize_Menus();
  2509  0006F4  EC36  F001         	call	_Initialize_Menus	;wreg free
  2510                           
  2511                           ;main.c: 165: }
  2512                           
  2513                           ;main.c: 164: break;
  2514  0006F8  D018               	goto	l408
  2515  0006FA                     l399:
  2516  0006FA  5035               	movf	_mainState,w,c
  2517                           
  2518                           ; Switch size 1, requested type "space"
  2519                           ; Number of cases is 6, Range of values is 2 to 7
  2520                           ; switch strategies available:
  2521                           ; Name         Instructions Cycles
  2522                           ; simple_byte           19    10 (average)
  2523                           ;	Chosen strategy is simple_byte
  2524  0006FC  0A02               	xorlw	2	; case 2
  2525  0006FE  B4D8               	btfsc	status,2,c
  2526  000700  D7E4               	goto	l400
  2527  000702  0A01               	xorlw	1	; case 3
  2528  000704  B4D8               	btfsc	status,2,c
  2529  000706  D7E9               	goto	l402
  2530  000708  0A07               	xorlw	7	; case 4
  2531  00070A  B4D8               	btfsc	status,2,c
  2532  00070C  D7E8               	goto	l403
  2533  00070E  0A01               	xorlw	1	; case 5
  2534  000710  B4D8               	btfsc	status,2,c
  2535  000712  D7E7               	goto	l404
  2536  000714  0A03               	xorlw	3	; case 6
  2537  000716  B4D8               	btfsc	status,2,c
  2538  000718  D7E6               	goto	l405
  2539  00071A  0A01               	xorlw	1	; case 7
  2540  00071C  B4D8               	btfsc	status,2,c
  2541  00071E  D7E5               	goto	l406
  2542  000720  D7E7               	goto	l407
  2543  000722                     l398:
  2544                           
  2545                           ;main.c: 168: else
  2546                           ;main.c: 169: {
  2547                           ;main.c: 170: currentContext = mainMenu;
  2548  000722  0E00               	movlw	0
  2549  000724  6E34               	movwf	_currentContext,c
  2550                           
  2551                           ;main.c: 171: Initialize_Menus();
  2552  000726  EC36  F001         	call	_Initialize_Menus	;wreg free
  2553  00072A                     l408:
  2554                           
  2555                           ;main.c: 172: }
  2556                           ;main.c: 174: Draw_Arrow();
  2557  00072A  EC6E  F006         	call	_Draw_Arrow	;wreg free
  2558  00072E  0012               	return	
  2559  000730                     __end_of_Check_Buttons:
  2560                           	opt stack 0
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           intcon	equ	0xFF2
  2566                           postinc0	equ	0xFEE
  2567                           wreg	equ	0xFE8
  2568                           postdec1	equ	0xFE5
  2569                           fsr1l	equ	0xFE1
  2570                           status	equ	0xFD8
  2571                           
  2572 ;; *************** function _Initialize_Menus *****************
  2573 ;; Defined at:
  2574 ;;		line 10 in file "screen_controls.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:   15
  2595 ;; This function calls:
  2596 ;;		_GLCD_GoTo
  2597 ;;		_GLCD_Line
  2598 ;;		_GLCD_WriteString
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;;		_Check_Buttons
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text16
  2606  00026C                     __ptext16:
  2607                           	opt stack 0
  2608  00026C                     _Initialize_Menus:
  2609                           	opt stack 15
  2610                           
  2611                           ;screen_controls.c: 13: GLCD_GoTo(xMenuStart,0);
  2612                           
  2613                           ;incstack = 0
  2614  00026C  0E00               	movlw	0
  2615  00026E  0100               	movlb	0	; () banked
  2616  000270  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2617  000272  519D               	movf	_xMenuStart& (0+255),w,b
  2618  000274  EC91  F002         	call	_GLCD_GoTo
  2619                           
  2620                           ;screen_controls.c: 14: GLCD_WriteString("Main Menu");
  2621  000278  0ED4               	movlw	low STR_1
  2622  00027A  0100               	movlb	0	; () banked
  2623  00027C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2624  00027E  0EFF               	movlw	high STR_1
  2625  000280  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2626  000282  EC23  F007         	call	_GLCD_WriteString	;wreg free
  2627                           
  2628                           ;screen_controls.c: 15: GLCD_GoTo((valuesXStart - 4), 0);
  2629  000286  0E00               	movlw	0
  2630  000288  0100               	movlb	0	; () banked
  2631  00028A  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2632  00028C  519C               	movf	_valuesXStart& (0+255),w,b
  2633  00028E  0FFC               	addlw	252
  2634  000290  EC91  F002         	call	_GLCD_GoTo
  2635                           
  2636                           ;screen_controls.c: 16: GLCD_WriteString("Values");
  2637  000294  0EF8               	movlw	low STR_2
  2638  000296  0100               	movlb	0	; () banked
  2639  000298  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2640  00029A  0EFF               	movlw	high STR_2
  2641  00029C  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2642  00029E  EC23  F007         	call	_GLCD_WriteString	;wreg free
  2643                           
  2644                           ;screen_controls.c: 17: GLCD_Line(0,12,127,12);
  2645  0002A2  0E00               	movlw	0
  2646  0002A4  0100               	movlb	0	; () banked
  2647  0002A6  6F76               	movwf	(GLCD_Line@X1+1)& (0+255),b
  2648  0002A8  0E00               	movlw	0
  2649  0002AA  6F75               	movwf	GLCD_Line@X1& (0+255),b
  2650  0002AC  0E00               	movlw	0
  2651  0002AE  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  2652  0002B0  0E0C               	movlw	12
  2653  0002B2  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  2654  0002B4  0E00               	movlw	0
  2655  0002B6  6F7A               	movwf	(GLCD_Line@X2+1)& (0+255),b
  2656  0002B8  0E7F               	movlw	127
  2657  0002BA  6F79               	movwf	GLCD_Line@X2& (0+255),b
  2658  0002BC  0E00               	movlw	0
  2659  0002BE  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  2660  0002C0  0E0C               	movlw	12
  2661  0002C2  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  2662  0002C4  EC5C  F000         	call	_GLCD_Line	;wreg free
  2663                           
  2664                           ;screen_controls.c: 18: GLCD_Line((valuesXStart - 8),0,(valuesXStart - 8),63);
  2665  0002C8  0EF8               	movlw	248
  2666  0002CA  0100               	movlb	0	; () banked
  2667  0002CC  259C               	addwf	_valuesXStart& (0+255),w,b
  2668  0002CE  6F75               	movwf	GLCD_Line@X1& (0+255),b
  2669  0002D0  6B76               	clrf	(GLCD_Line@X1+1)& (0+255),b
  2670  0002D2  0EFF               	movlw	255
  2671  0002D4  2376               	addwfc	(GLCD_Line@X1+1)& (0+255),f,b
  2672  0002D6  0E00               	movlw	0
  2673  0002D8  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  2674  0002DA  0E00               	movlw	0
  2675  0002DC  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  2676  0002DE  0EF8               	movlw	248
  2677  0002E0  259C               	addwf	_valuesXStart& (0+255),w,b
  2678  0002E2  6F79               	movwf	GLCD_Line@X2& (0+255),b
  2679  0002E4  6B7A               	clrf	(GLCD_Line@X2+1)& (0+255),b
  2680  0002E6  0EFF               	movlw	255
  2681  0002E8  237A               	addwfc	(GLCD_Line@X2+1)& (0+255),f,b
  2682  0002EA  0E00               	movlw	0
  2683  0002EC  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  2684  0002EE  0E3F               	movlw	63
  2685  0002F0  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  2686  0002F2  EC5C  F000         	call	_GLCD_Line	;wreg free
  2687                           
  2688                           ;screen_controls.c: 21: GLCD_GoTo(xMenuStart, setRunTime);
  2689  0002F6  0E02               	movlw	2
  2690  0002F8  0100               	movlb	0	; () banked
  2691  0002FA  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2692  0002FC  519D               	movf	_xMenuStart& (0+255),w,b
  2693  0002FE  EC91  F002         	call	_GLCD_GoTo
  2694                           
  2695                           ;screen_controls.c: 22: GLCD_WriteString("RunTime");
  2696  000302  0EF0               	movlw	low STR_3
  2697  000304  0100               	movlb	0	; () banked
  2698  000306  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2699  000308  0EFF               	movlw	high STR_3
  2700  00030A  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2701  00030C  EC23  F007         	call	_GLCD_WriteString	;wreg free
  2702                           
  2703                           ;screen_controls.c: 24: GLCD_GoTo(xMenuStart, setBrightness);
  2704  000310  0E03               	movlw	3
  2705  000312  0100               	movlb	0	; () banked
  2706  000314  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2707  000316  519D               	movf	_xMenuStart& (0+255),w,b
  2708  000318  EC91  F002         	call	_GLCD_GoTo
  2709                           
  2710                           ;screen_controls.c: 25: GLCD_WriteString("Brightness");
  2711  00031C  0EB5               	movlw	low STR_4
  2712  00031E  0100               	movlb	0	; () banked
  2713  000320  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2714  000322  0EFF               	movlw	high STR_4
  2715  000324  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2716  000326  EC23  F007         	call	_GLCD_WriteString	;wreg free
  2717                           
  2718                           ;screen_controls.c: 27: GLCD_GoTo(xMenuStart, setStartColors);
  2719  00032A  0E04               	movlw	4
  2720  00032C  0100               	movlb	0	; () banked
  2721  00032E  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2722  000330  519D               	movf	_xMenuStart& (0+255),w,b
  2723  000332  EC91  F002         	call	_GLCD_GoTo
  2724                           
  2725                           ;screen_controls.c: 28: GLCD_WriteString("StartColor");
  2726  000336  0EAA               	movlw	low STR_5
  2727  000338  0100               	movlb	0	; () banked
  2728  00033A  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2729  00033C  0EFF               	movlw	high STR_5
  2730  00033E  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2731  000340  EC23  F007         	call	_GLCD_WriteString	;wreg free
  2732                           
  2733                           ;screen_controls.c: 30: GLCD_GoTo(xMenuStart, setFinishedColors);
  2734  000344  0E05               	movlw	5
  2735  000346  0100               	movlb	0	; () banked
  2736  000348  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2737  00034A  519D               	movf	_xMenuStart& (0+255),w,b
  2738  00034C  EC91  F002         	call	_GLCD_GoTo
  2739                           
  2740                           ;screen_controls.c: 31: GLCD_WriteString("EndColor");
  2741  000350  0EE7               	movlw	low STR_6
  2742  000352  0100               	movlb	0	; () banked
  2743  000354  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2744  000356  0EFF               	movlw	high STR_6
  2745  000358  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2746  00035A  EC23  F007         	call	_GLCD_WriteString	;wreg free
  2747                           
  2748                           ;screen_controls.c: 33: GLCD_GoTo(xMenuStart, setBacklightBrightness);
  2749  00035E  0E06               	movlw	6
  2750  000360  0100               	movlb	0	; () banked
  2751  000362  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2752  000364  519D               	movf	_xMenuStart& (0+255),w,b
  2753  000366  EC91  F002         	call	_GLCD_GoTo
  2754                           
  2755                           ;screen_controls.c: 34: GLCD_WriteString("Backlight");
  2756  00036A  0ECA               	movlw	low STR_7
  2757  00036C  0100               	movlb	0	; () banked
  2758  00036E  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2759  000370  0EFF               	movlw	high STR_7
  2760  000372  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2761  000374  EC23  F007         	call	_GLCD_WriteString	;wreg free
  2762                           
  2763                           ;screen_controls.c: 36: GLCD_GoTo(xMenuStart, selectState);
  2764  000378  0E07               	movlw	7
  2765  00037A  0100               	movlb	0	; () banked
  2766  00037C  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2767  00037E  519D               	movf	_xMenuStart& (0+255),w,b
  2768  000380  EC91  F002         	call	_GLCD_GoTo
  2769                           
  2770                           ;screen_controls.c: 37: GLCD_WriteString("SelState");
  2771  000384  0EDE               	movlw	low STR_8
  2772  000386  0100               	movlb	0	; () banked
  2773  000388  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2774  00038A  0EFF               	movlw	high STR_8
  2775  00038C  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2776  00038E  EC23  F007         	call	_GLCD_WriteString	;wreg free
  2777  000392  0012               	return		;funcret
  2778  000394                     __end_of_Initialize_Menus:
  2779                           	opt stack 0
  2780                           tblptru	equ	0xFF8
  2781                           tblptrh	equ	0xFF7
  2782                           tblptrl	equ	0xFF6
  2783                           tablat	equ	0xFF5
  2784                           intcon	equ	0xFF2
  2785                           postinc0	equ	0xFEE
  2786                           wreg	equ	0xFE8
  2787                           postdec1	equ	0xFE5
  2788                           fsr1l	equ	0xFE1
  2789                           status	equ	0xFD8
  2790                           
  2791 ;; *************** function _GLCD_ClearScreen *****************
  2792 ;; Defined at:
  2793 ;;		line 43 in file "ks0108lib/KS0108.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  j               1   15[BANK0 ] unsigned char 
  2798 ;;  i               1   14[BANK0 ] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2809 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2811 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2812 ;;Total ram usage:        2 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:   13
  2815 ;; This function calls:
  2816 ;;		_GLCD_GoTo
  2817 ;;		_GLCD_WriteData
  2818 ;; This function is called by:
  2819 ;;		_main
  2820 ;;		_Check_Buttons
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text17
  2825  000E10                     __ptext17:
  2826                           	opt stack 0
  2827  000E10                     _GLCD_ClearScreen:
  2828                           	opt stack 17
  2829                           
  2830                           ;KS0108.c: 45: unsigned char i, j;
  2831                           ;KS0108.c: 46: for(j = 0; j < 64/8; j++)
  2832                           
  2833                           ;incstack = 0
  2834  000E10  0E00               	movlw	0
  2835  000E12  0100               	movlb	0	; () banked
  2836  000E14  6F6F               	movwf	GLCD_ClearScreen@j& (0+255),b
  2837  000E16                     l2951:
  2838                           
  2839                           ; BSR set to: 0
  2840  000E16  0E07               	movlw	7
  2841  000E18  656F               	cpfsgt	GLCD_ClearScreen@j& (0+255),b
  2842  000E1A  D001               	goto	l474
  2843  000E1C  0012               	return	
  2844  000E1E                     l474:
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;KS0108.c: 47: {
  2848                           ;KS0108.c: 48: GLCD_GoTo(0,j);
  2849                           
  2850                           ; BSR set to: 0
  2851  000E1E  C06F  F06B         	movff	GLCD_ClearScreen@j,GLCD_GoTo@y
  2852  000E22  0E00               	movlw	0
  2853  000E24  EC91  F002         	call	_GLCD_GoTo
  2854                           
  2855                           ;KS0108.c: 49: for(i = 0; i < 128; i++)
  2856  000E28  0E00               	movlw	0
  2857  000E2A  0100               	movlb	0	; () banked
  2858  000E2C  6F6E               	movwf	GLCD_ClearScreen@i& (0+255),b
  2859  000E2E                     l2959:
  2860                           
  2861                           ; BSR set to: 0
  2862  000E2E  0E7F               	movlw	127
  2863  000E30  656E               	cpfsgt	GLCD_ClearScreen@i& (0+255),b
  2864  000E32  D001               	goto	l476
  2865  000E34  D006               	goto	u1400
  2866  000E36                     l476:
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;KS0108.c: 50: GLCD_WriteData(0x00);
  2870                           
  2871                           ; BSR set to: 0
  2872  000E36  0E00               	movlw	0
  2873  000E38  ECD5  F003         	call	_GLCD_WriteData
  2874  000E3C  0100               	movlb	0	; () banked
  2875  000E3E  2B6E               	incf	GLCD_ClearScreen@i& (0+255),f,b
  2876  000E40  D7F6               	goto	l2959
  2877  000E42                     u1400:
  2878                           
  2879                           ; BSR set to: 0
  2880                           
  2881                           ; BSR set to: 0
  2882  000E42  2B6F               	incf	GLCD_ClearScreen@j& (0+255),f,b
  2883  000E44  D7E8               	goto	l2951
  2884  000E46                     __end_of_GLCD_ClearScreen:
  2885                           	opt stack 0
  2886                           tblptru	equ	0xFF8
  2887                           tblptrh	equ	0xFF7
  2888                           tblptrl	equ	0xFF6
  2889                           tablat	equ	0xFF5
  2890                           intcon	equ	0xFF2
  2891                           postinc0	equ	0xFEE
  2892                           wreg	equ	0xFE8
  2893                           postdec1	equ	0xFE5
  2894                           fsr1l	equ	0xFE1
  2895                           status	equ	0xFD8
  2896                           
  2897 ;; *************** function _Draw_runTime_Menu *****************
  2898 ;; Defined at:
  2899 ;;		line 92 in file "screen_controls.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;		None
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2917 ;;Total ram usage:        0 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:   15
  2920 ;; This function calls:
  2921 ;;		_GLCD_GoTo
  2922 ;;		_GLCD_Line
  2923 ;;		_GLCD_WriteString
  2924 ;; This function is called by:
  2925 ;;		_Check_Buttons
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text18
  2930  000822                     __ptext18:
  2931                           	opt stack 0
  2932  000822                     _Draw_runTime_Menu:
  2933                           	opt stack 14
  2934                           
  2935                           ;screen_controls.c: 94: GLCD_GoTo(0,0);
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;incstack = 0
  2939  000822  0E00               	movlw	0
  2940  000824  0100               	movlb	0	; () banked
  2941  000826  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2942  000828  0E00               	movlw	0
  2943  00082A  EC91  F002         	call	_GLCD_GoTo
  2944                           
  2945                           ;screen_controls.c: 95: GLCD_WriteString("Run Times");
  2946  00082E  0EC0               	movlw	low STR_9
  2947  000830  0100               	movlb	0	; () banked
  2948  000832  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2949  000834  0EFF               	movlw	high STR_9
  2950  000836  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2951  000838  EC23  F007         	call	_GLCD_WriteString	;wreg free
  2952                           
  2953                           ;screen_controls.c: 96: GLCD_Line(0,9,127,9);
  2954  00083C  0E00               	movlw	0
  2955  00083E  0100               	movlb	0	; () banked
  2956  000840  6F76               	movwf	(GLCD_Line@X1+1)& (0+255),b
  2957  000842  0E00               	movlw	0
  2958  000844  6F75               	movwf	GLCD_Line@X1& (0+255),b
  2959  000846  0E00               	movlw	0
  2960  000848  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  2961  00084A  0E09               	movlw	9
  2962  00084C  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  2963  00084E  0E00               	movlw	0
  2964  000850  6F7A               	movwf	(GLCD_Line@X2+1)& (0+255),b
  2965  000852  0E7F               	movlw	127
  2966  000854  6F79               	movwf	GLCD_Line@X2& (0+255),b
  2967  000856  0E00               	movlw	0
  2968  000858  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  2969  00085A  0E09               	movlw	9
  2970  00085C  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  2971  00085E  EC5C  F000         	call	_GLCD_Line	;wreg free
  2972                           
  2973                           ;screen_controls.c: 98: GLCD_GoTo(runTimeX, 2);
  2974  000862  0E02               	movlw	2
  2975  000864  0100               	movlb	0	; () banked
  2976  000866  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2977  000868  519F               	movf	_runTimeX& (0+255),w,b
  2978  00086A  EC91  F002         	call	_GLCD_GoTo
  2979                           
  2980                           ;screen_controls.c: 99: GLCD_WriteString("Run Time: ");
  2981  00086E  0E9F               	movlw	low STR_10
  2982  000870  0100               	movlb	0	; () banked
  2983  000872  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2984  000874  0EFF               	movlw	high STR_10
  2985  000876  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2986  000878  EC23  F007         	call	_GLCD_WriteString	;wreg free
  2987                           
  2988                           ;screen_controls.c: 101: GLCD_GoTo(runTimeX, 4);
  2989  00087C  0E04               	movlw	4
  2990  00087E  0100               	movlb	0	; () banked
  2991  000880  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2992  000882  519F               	movf	_runTimeX& (0+255),w,b
  2993  000884  EC91  F002         	call	_GLCD_GoTo
  2994                           
  2995                           ;screen_controls.c: 102: GLCD_WriteString("Time After: ");
  2996  000888  0E92               	movlw	low STR_11
  2997  00088A  0100               	movlb	0	; () banked
  2998  00088C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2999  00088E  0EFF               	movlw	high STR_11
  3000  000890  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3001  000892  EC23  F007         	call	_GLCD_WriteString	;wreg free
  3002  000896  0012               	return		;funcret
  3003  000898                     __end_of_Draw_runTime_Menu:
  3004                           	opt stack 0
  3005                           tblptru	equ	0xFF8
  3006                           tblptrh	equ	0xFF7
  3007                           tblptrl	equ	0xFF6
  3008                           tablat	equ	0xFF5
  3009                           intcon	equ	0xFF2
  3010                           postinc0	equ	0xFEE
  3011                           wreg	equ	0xFE8
  3012                           postdec1	equ	0xFE5
  3013                           fsr1l	equ	0xFE1
  3014                           status	equ	0xFD8
  3015                           
  3016 ;; *************** function _GLCD_WriteString *****************
  3017 ;; Defined at:
  3018 ;;		line 70 in file "ks0108lib/KS0108.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  stringToWrit    2   13[BANK0 ] PTR unsigned char 
  3021 ;;		 -> STR_11(13), STR_10(11), STR_9(10), STR_8(9), 
  3022 ;;		 -> STR_7(10), STR_6(9), STR_5(11), STR_4(11), 
  3023 ;;		 -> STR_3(8), STR_2(7), STR_1(10), 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3035 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3038 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3039 ;;Total ram usage:        2 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:   13
  3042 ;; This function calls:
  3043 ;;		_GLCD_WriteChar
  3044 ;; This function is called by:
  3045 ;;		_Initialize_Menus
  3046 ;;		_Draw_runTime_Menu
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text19
  3051  000E46                     __ptext19:
  3052                           	opt stack 0
  3053  000E46                     _GLCD_WriteString:
  3054                           	opt stack 16
  3055                           
  3056                           ;KS0108.c: 72: while(*stringToWrite)
  3057                           
  3058                           ;incstack = 0
  3059  000E46  D00C               	goto	l486
  3060  000E48                     
  3061                           ;KS0108.c: 73: GLCD_WriteChar(*stringToWrite++);
  3062  000E48  C06D  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  3063  000E4C  C06E  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  3064  000E50                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3065  000E50  6AF8               	clrf	tblptru,c
  3066  000E52                     	endif
  3067  000E52                     	if	0	;tblptru may be non-zero
  3068  000E52                     	endif
  3069  000E52  0008               	tblrd		*
  3070  000E54  50F5               	movf	tablat,w,c
  3071  000E56  EC43  F005         	call	_GLCD_WriteChar
  3072  000E5A  0100               	movlb	0	; () banked
  3073  000E5C  4B6D               	infsnz	GLCD_WriteString@stringToWrite& (0+255),f,b
  3074  000E5E  2B6E               	incf	(GLCD_WriteString@stringToWrite+1)& (0+255),f,b
  3075  000E60                     l486:
  3076                           
  3077                           ; BSR set to: 0
  3078  000E60  C06D  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  3079  000E64  C06E  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  3080  000E68                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3081  000E68  6AF8               	clrf	tblptru,c
  3082  000E6A                     	endif
  3083  000E6A                     	if	0	;tblptru may be non-zero
  3084  000E6A                     	endif
  3085  000E6A  0008               	tblrd		*
  3086  000E6C  50F5               	movf	tablat,w,c
  3087  000E6E  0900               	iorlw	0
  3088  000E70  B4D8               	btfsc	status,2,c
  3089  000E72  0012               	return	
  3090  000E74  D7E9               	goto	l487
  3091  000E76                     __end_of_GLCD_WriteString:
  3092                           	opt stack 0
  3093                           tblptru	equ	0xFF8
  3094                           tblptrh	equ	0xFF7
  3095                           tblptrl	equ	0xFF6
  3096                           tablat	equ	0xFF5
  3097                           intcon	equ	0xFF2
  3098                           postinc0	equ	0xFEE
  3099                           wreg	equ	0xFE8
  3100                           postdec1	equ	0xFE5
  3101                           fsr1l	equ	0xFE1
  3102                           status	equ	0xFD8
  3103                           
  3104 ;; *************** function _GLCD_WriteChar *****************
  3105 ;; Defined at:
  3106 ;;		line 56 in file "ks0108lib/KS0108.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  charToWrite     1    wreg     unsigned char 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  charToWrite     1   10[BANK0 ] unsigned char 
  3111 ;;  i               2   11[BANK0 ] int 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3122 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;Total ram usage:        3 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:   12
  3128 ;; This function calls:
  3129 ;;		_GLCD_WriteData
  3130 ;; This function is called by:
  3131 ;;		_GLCD_WriteString
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text20
  3136  000A86                     __ptext20:
  3137                           	opt stack 0
  3138  000A86                     _GLCD_WriteChar:
  3139                           	opt stack 16
  3140                           
  3141                           ;incstack = 0
  3142                           ;GLCD_WriteChar@charToWrite stored from wreg
  3143  000A86  0100               	movlb	0	; () banked
  3144  000A88  6F6A               	movwf	GLCD_WriteChar@charToWrite& (0+255),b
  3145                           
  3146                           ;KS0108.c: 58: int i;
  3147                           ;KS0108.c: 59: charToWrite -= 32;
  3148  000A8A  0E20               	movlw	32
  3149  000A8C  0100               	movlb	0	; () banked
  3150  000A8E  5F6A               	subwf	GLCD_WriteChar@charToWrite& (0+255),f,b
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
  3154  000A90  0E00               	movlw	0
  3155  000A92  6F6C               	movwf	(GLCD_WriteChar@i+1)& (0+255),b
  3156  000A94  0E00               	movlw	0
  3157  000A96  6F6B               	movwf	GLCD_WriteChar@i& (0+255),b
  3158  000A98                     l2671:
  3159                           
  3160                           ; BSR set to: 0
  3161  000A98  BF6C               	btfsc	(GLCD_WriteChar@i+1)& (0+255),7,b
  3162  000A9A  D006               	goto	l481
  3163  000A9C  516C               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  3164  000A9E  E11B               	bnz	l2681
  3165  000AA0  0E05               	movlw	5
  3166  000AA2  5D6B               	subwf	GLCD_WriteChar@i& (0+255),w,b
  3167  000AA4  B0D8               	btfsc	status,0,c
  3168  000AA6  D017               	goto	u1130
  3169  000AA8                     l481:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;KS0108.c: 61: {
  3173                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
  3174                           
  3175                           ; BSR set to: 0
  3176  000AA8  516A               	movf	GLCD_WriteChar@charToWrite& (0+255),w,b
  3177  000AAA  0D05               	mullw	5
  3178  000AAC  516B               	movf	GLCD_WriteChar@i& (0+255),w,b
  3179  000AAE  26F3               	addwf	prodl,f,c
  3180  000AB0  516C               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  3181  000AB2  22F4               	addwfc	prodh,f,c
  3182  000AB4  0EB1               	movlw	low _font5x8
  3183  000AB6  24F3               	addwf	prodl,w,c
  3184  000AB8  6EF6               	movwf	tblptrl,c
  3185  000ABA  0EFD               	movlw	high _font5x8
  3186  000ABC  20F4               	addwfc	prodh,w,c
  3187  000ABE  6EF7               	movwf	tblptrh,c
  3188  000AC0                     	if	1	;There are 3 active tblptr bytes
  3189  000AC0  6AF8               	clrf	tblptru,c
  3190  000AC2  0E00               	movlw	low (__mediumconst shr (0+16))
  3191  000AC4  22F8               	addwfc	tblptru,f,c
  3192  000AC6                     	endif
  3193  000AC6  0008               	tblrd		*
  3194  000AC8  50F5               	movf	tablat,w,c
  3195  000ACA  ECD5  F003         	call	_GLCD_WriteData
  3196  000ACE  0100               	movlb	0	; () banked
  3197  000AD0  4B6B               	infsnz	GLCD_WriteChar@i& (0+255),f,b
  3198  000AD2  2B6C               	incf	(GLCD_WriteChar@i+1)& (0+255),f,b
  3199  000AD4  D7E1               	goto	l2671
  3200  000AD6                     u1130:
  3201  000AD6                     l2681:
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;KS0108.c: 64: }
  3205                           ;KS0108.c: 65: GLCD_WriteData(0x00);
  3206  000AD6  0E00               	movlw	0
  3207  000AD8  ECD5  F003         	call	_GLCD_WriteData
  3208  000ADC  0012               	return		;funcret
  3209  000ADE                     __end_of_GLCD_WriteChar:
  3210                           	opt stack 0
  3211                           tblptru	equ	0xFF8
  3212                           tblptrh	equ	0xFF7
  3213                           tblptrl	equ	0xFF6
  3214                           tablat	equ	0xFF5
  3215                           prodh	equ	0xFF4
  3216                           prodl	equ	0xFF3
  3217                           intcon	equ	0xFF2
  3218                           postinc0	equ	0xFEE
  3219                           wreg	equ	0xFE8
  3220                           postdec1	equ	0xFE5
  3221                           fsr1l	equ	0xFE1
  3222                           status	equ	0xFD8
  3223                           
  3224 ;; *************** function _GLCD_Line *****************
  3225 ;; Defined at:
  3226 ;;		line 52 in file "ks0108lib/graphic.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  X1              2   21[BANK0 ] unsigned int 
  3229 ;;  Y1              2   23[BANK0 ] unsigned int 
  3230 ;;  X2              2   25[BANK0 ] unsigned int 
  3231 ;;  Y2              2   27[BANK0 ] unsigned int 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  Dy              2   49[BANK0 ] int 
  3234 ;;  Dx              2   47[BANK0 ] int 
  3235 ;;  CurrentY        2   45[BANK0 ] int 
  3236 ;;  CurrentX        2   43[BANK0 ] int 
  3237 ;;  TwoDy           2   41[BANK0 ] int 
  3238 ;;  TwoDx           2   39[BANK0 ] int 
  3239 ;;  Yinc            2   37[BANK0 ] int 
  3240 ;;  Xinc            2   35[BANK0 ] int 
  3241 ;;  TwoDyAccumul    2   33[BANK0 ] int 
  3242 ;;  TwoDxAccumul    2   31[BANK0 ] int 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3252 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3253 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3254 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3255 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3256 ;;Total ram usage:       30 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:   14
  3259 ;; This function calls:
  3260 ;;		_GLCD_SetPixel
  3261 ;; This function is called by:
  3262 ;;		_Initialize_Menus
  3263 ;;		_Draw_runTime_Menu
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text21
  3268  0000B8                     __ptext21:
  3269                           	opt stack 0
  3270  0000B8                     _GLCD_Line:
  3271                           	opt stack 15
  3272                           
  3273                           ;graphic.c: 54: int CurrentX, CurrentY, Xinc, Yinc,
  3274                           ;graphic.c: 55: Dx, Dy, TwoDx, TwoDy,
  3275                           ;graphic.c: 56: TwoDxAccumulatedError, TwoDyAccumulatedError;
  3276                           ;graphic.c: 58: Dx = (X2-X1);
  3277                           
  3278                           ;incstack = 0
  3279  0000B8  C075  F07D         	movff	GLCD_Line@X1,??_GLCD_Line
  3280  0000BC  C076  F07E         	movff	GLCD_Line@X1+1,??_GLCD_Line+1
  3281  0000C0  0100               	movlb	0	; () banked
  3282  0000C2  1F7D               	comf	??_GLCD_Line& (0+255),f,b
  3283  0000C4  1F7E               	comf	(??_GLCD_Line+1)& (0+255),f,b
  3284  0000C6  4B7D               	infsnz	??_GLCD_Line& (0+255),f,b
  3285  0000C8  2B7E               	incf	(??_GLCD_Line+1)& (0+255),f,b
  3286  0000CA  5179               	movf	GLCD_Line@X2& (0+255),w,b
  3287  0000CC  257D               	addwf	??_GLCD_Line& (0+255),w,b
  3288  0000CE  6F8F               	movwf	GLCD_Line@Dx& (0+255),b
  3289  0000D0  517A               	movf	(GLCD_Line@X2+1)& (0+255),w,b
  3290  0000D2  217E               	addwfc	(??_GLCD_Line+1)& (0+255),w,b
  3291  0000D4  6F90               	movwf	(GLCD_Line@Dx+1)& (0+255),b
  3292                           
  3293                           ;graphic.c: 59: Dy = (Y2-Y1);
  3294  0000D6  C077  F07D         	movff	GLCD_Line@Y1,??_GLCD_Line
  3295  0000DA  C078  F07E         	movff	GLCD_Line@Y1+1,??_GLCD_Line+1
  3296  0000DE  1F7D               	comf	??_GLCD_Line& (0+255),f,b
  3297  0000E0  1F7E               	comf	(??_GLCD_Line+1)& (0+255),f,b
  3298  0000E2  4B7D               	infsnz	??_GLCD_Line& (0+255),f,b
  3299  0000E4  2B7E               	incf	(??_GLCD_Line+1)& (0+255),f,b
  3300  0000E6  517B               	movf	GLCD_Line@Y2& (0+255),w,b
  3301  0000E8  257D               	addwf	??_GLCD_Line& (0+255),w,b
  3302  0000EA  6F91               	movwf	GLCD_Line@Dy& (0+255),b
  3303  0000EC  517C               	movf	(GLCD_Line@Y2+1)& (0+255),w,b
  3304  0000EE  217E               	addwfc	(??_GLCD_Line+1)& (0+255),w,b
  3305  0000F0  6F92               	movwf	(GLCD_Line@Dy+1)& (0+255),b
  3306                           
  3307                           ;graphic.c: 61: TwoDx = Dx + Dx;
  3308  0000F2  90D8               	bcf	status,0,c
  3309  0000F4  358F               	rlcf	GLCD_Line@Dx& (0+255),w,b
  3310  0000F6  6F87               	movwf	GLCD_Line@TwoDx& (0+255),b
  3311  0000F8  3590               	rlcf	(GLCD_Line@Dx+1)& (0+255),w,b
  3312  0000FA  6F88               	movwf	(GLCD_Line@TwoDx+1)& (0+255),b
  3313                           
  3314                           ;graphic.c: 62: TwoDy = Dy + Dy;
  3315  0000FC  90D8               	bcf	status,0,c
  3316  0000FE  3591               	rlcf	GLCD_Line@Dy& (0+255),w,b
  3317  000100  6F89               	movwf	GLCD_Line@TwoDy& (0+255),b
  3318  000102  3592               	rlcf	(GLCD_Line@Dy+1)& (0+255),w,b
  3319  000104  6F8A               	movwf	(GLCD_Line@TwoDy+1)& (0+255),b
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;graphic.c: 64: CurrentX = X1;
  3323  000106  C075  F08B         	movff	GLCD_Line@X1,GLCD_Line@CurrentX
  3324  00010A  C076  F08C         	movff	GLCD_Line@X1+1,GLCD_Line@CurrentX+1
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;graphic.c: 65: CurrentY = Y1;
  3328  00010E  C077  F08D         	movff	GLCD_Line@Y1,GLCD_Line@CurrentY
  3329  000112  C078  F08E         	movff	GLCD_Line@Y1+1,GLCD_Line@CurrentY+1
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;graphic.c: 67: Xinc = 1;
  3333  000116  0E00               	movlw	0
  3334  000118  6F84               	movwf	(GLCD_Line@Xinc+1)& (0+255),b
  3335  00011A  0E01               	movlw	1
  3336  00011C  6F83               	movwf	GLCD_Line@Xinc& (0+255),b
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;graphic.c: 68: Yinc = 1;
  3340  00011E  0E00               	movlw	0
  3341  000120  6F86               	movwf	(GLCD_Line@Yinc+1)& (0+255),b
  3342  000122  0E01               	movlw	1
  3343  000124  6F85               	movwf	GLCD_Line@Yinc& (0+255),b
  3344                           
  3345                           ;graphic.c: 70: if(Dx < 0)
  3346  000126  AF90               	btfss	(GLCD_Line@Dx+1)& (0+255),7,b
  3347  000128  D00A               	goto	l432
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;graphic.c: 71: {
  3351                           ;graphic.c: 72: Xinc = -1;
  3352  00012A  6983               	setf	GLCD_Line@Xinc& (0+255),b
  3353  00012C  6984               	setf	(GLCD_Line@Xinc+1)& (0+255),b
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;graphic.c: 73: Dx = -Dx;
  3357  00012E  6D8F               	negf	GLCD_Line@Dx& (0+255),b
  3358  000130  1F90               	comf	(GLCD_Line@Dx+1)& (0+255),f,b
  3359  000132  B0D8               	btfsc	status,0,c
  3360  000134  2B90               	incf	(GLCD_Line@Dx+1)& (0+255),f,b
  3361                           
  3362                           ;graphic.c: 74: TwoDx = -TwoDx;
  3363  000136  6D87               	negf	GLCD_Line@TwoDx& (0+255),b
  3364  000138  1F88               	comf	(GLCD_Line@TwoDx+1)& (0+255),f,b
  3365  00013A  B0D8               	btfsc	status,0,c
  3366  00013C  2B88               	incf	(GLCD_Line@TwoDx+1)& (0+255),f,b
  3367  00013E                     l432:
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;graphic.c: 75: }
  3371                           ;graphic.c: 77: if (Dy < 0)
  3372                           
  3373                           ; BSR set to: 0
  3374  00013E  AF92               	btfss	(GLCD_Line@Dy+1)& (0+255),7,b
  3375  000140  D00A               	goto	l433
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;graphic.c: 78: {
  3379                           ;graphic.c: 79: Yinc = -1;
  3380  000142  6985               	setf	GLCD_Line@Yinc& (0+255),b
  3381  000144  6986               	setf	(GLCD_Line@Yinc+1)& (0+255),b
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;graphic.c: 80: Dy = -Dy;
  3385  000146  6D91               	negf	GLCD_Line@Dy& (0+255),b
  3386  000148  1F92               	comf	(GLCD_Line@Dy+1)& (0+255),f,b
  3387  00014A  B0D8               	btfsc	status,0,c
  3388  00014C  2B92               	incf	(GLCD_Line@Dy+1)& (0+255),f,b
  3389                           
  3390                           ;graphic.c: 81: TwoDy = -TwoDy;
  3391  00014E  6D89               	negf	GLCD_Line@TwoDy& (0+255),b
  3392  000150  1F8A               	comf	(GLCD_Line@TwoDy+1)& (0+255),f,b
  3393  000152  B0D8               	btfsc	status,0,c
  3394  000154  2B8A               	incf	(GLCD_Line@TwoDy+1)& (0+255),f,b
  3395  000156                     l433:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;graphic.c: 82: }
  3399                           ;graphic.c: 84: GLCD_SetPixel(X1,Y1, color);
  3400                           
  3401                           ; BSR set to: 0
  3402  000156  C077  F06E         	movff	GLCD_Line@Y1,GLCD_SetPixel@y
  3403  00015A  0E91               	movlw	low _color
  3404  00015C  6EF6               	movwf	tblptrl,c
  3405  00015E                     	if	1	;There is more than 1 active tblptr byte
  3406  00015E  0EFF               	movlw	high _color
  3407  000160  6EF7               	movwf	tblptrh,c
  3408  000162                     	endif
  3409  000162                     	if	1	;There are 3 active tblptr bytes
  3410  000162  0E00               	movlw	low (_color shr (0+16))
  3411  000164  6EF8               	movwf	tblptru,c
  3412  000166                     	endif
  3413  000166  0008               	tblrd		*
  3414  000168  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  3415  00016C  5175               	movf	GLCD_Line@X1& (0+255),w,b
  3416  00016E  EC3F  F002         	call	_GLCD_SetPixel
  3417                           
  3418                           ;graphic.c: 86: if ((Dx != 0) || (Dy != 0))
  3419  000172  0100               	movlb	0	; () banked
  3420  000174  518F               	movf	GLCD_Line@Dx& (0+255),w,b
  3421  000176  1190               	iorwf	(GLCD_Line@Dx+1)& (0+255),w,b
  3422  000178  A4D8               	btfss	status,2,c
  3423  00017A  D004               	goto	u1230
  3424                           
  3425                           ; BSR set to: 0
  3426  00017C  5191               	movf	GLCD_Line@Dy& (0+255),w,b
  3427  00017E  1192               	iorwf	(GLCD_Line@Dy+1)& (0+255),w,b
  3428  000180  B4D8               	btfsc	status,2,c
  3429  000182  0012               	return	
  3430  000184                     u1230:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;graphic.c: 87: {
  3434                           ;graphic.c: 89: if (Dy <= Dx)
  3435                           
  3436                           ; BSR set to: 0
  3437  000184  5191               	movf	GLCD_Line@Dy& (0+255),w,b
  3438  000186  5D8F               	subwf	GLCD_Line@Dx& (0+255),w,b
  3439  000188  5190               	movf	(GLCD_Line@Dx+1)& (0+255),w,b
  3440  00018A  0A80               	xorlw	128
  3441  00018C  6F7D               	movwf	??_GLCD_Line& (0+255),b
  3442  00018E  5192               	movf	(GLCD_Line@Dy+1)& (0+255),w,b
  3443  000190  0A80               	xorlw	128
  3444  000192  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  3445  000194  A0D8               	btfss	status,0,c
  3446  000196  D035               	goto	l437
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;graphic.c: 90: {
  3450                           ;graphic.c: 91: TwoDxAccumulatedError = 0;
  3451  000198  0E00               	movlw	0
  3452  00019A  6F80               	movwf	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),b
  3453  00019C  0E00               	movlw	0
  3454  00019E  6F7F               	movwf	GLCD_Line@TwoDxAccumulatedError& (0+255),b
  3455  0001A0                     l2785:
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;graphic.c: 93: {
  3459                           ;graphic.c: 94: CurrentX += Xinc;
  3460  0001A0  5183               	movf	GLCD_Line@Xinc& (0+255),w,b
  3461  0001A2  278B               	addwf	GLCD_Line@CurrentX& (0+255),f,b
  3462  0001A4  5184               	movf	(GLCD_Line@Xinc+1)& (0+255),w,b
  3463  0001A6  238C               	addwfc	(GLCD_Line@CurrentX+1)& (0+255),f,b
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;graphic.c: 95: TwoDxAccumulatedError += TwoDy;
  3467  0001A8  5189               	movf	GLCD_Line@TwoDy& (0+255),w,b
  3468  0001AA  277F               	addwf	GLCD_Line@TwoDxAccumulatedError& (0+255),f,b
  3469  0001AC  518A               	movf	(GLCD_Line@TwoDy+1)& (0+255),w,b
  3470  0001AE  2380               	addwfc	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),f,b
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;graphic.c: 96: if(TwoDxAccumulatedError > Dx)
  3474  0001B0  517F               	movf	GLCD_Line@TwoDxAccumulatedError& (0+255),w,b
  3475  0001B2  5D8F               	subwf	GLCD_Line@Dx& (0+255),w,b
  3476  0001B4  5190               	movf	(GLCD_Line@Dx+1)& (0+255),w,b
  3477  0001B6  0A80               	xorlw	128
  3478  0001B8  6F7D               	movwf	??_GLCD_Line& (0+255),b
  3479  0001BA  5180               	movf	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),w,b
  3480  0001BC  0A80               	xorlw	128
  3481  0001BE  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  3482  0001C0  B0D8               	btfsc	status,0,c
  3483  0001C2  D008               	goto	l439
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;graphic.c: 97: {
  3487                           ;graphic.c: 98: CurrentY += Yinc;
  3488  0001C4  5185               	movf	GLCD_Line@Yinc& (0+255),w,b
  3489  0001C6  278D               	addwf	GLCD_Line@CurrentY& (0+255),f,b
  3490  0001C8  5186               	movf	(GLCD_Line@Yinc+1)& (0+255),w,b
  3491  0001CA  238E               	addwfc	(GLCD_Line@CurrentY+1)& (0+255),f,b
  3492                           
  3493                           ;graphic.c: 99: TwoDxAccumulatedError -= TwoDx;
  3494  0001CC  5187               	movf	GLCD_Line@TwoDx& (0+255),w,b
  3495  0001CE  5F7F               	subwf	GLCD_Line@TwoDxAccumulatedError& (0+255),f,b
  3496  0001D0  5188               	movf	(GLCD_Line@TwoDx+1)& (0+255),w,b
  3497  0001D2  5B80               	subwfb	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),f,b
  3498  0001D4                     l439:
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;graphic.c: 100: }
  3502                           ;graphic.c: 101: GLCD_SetPixel(CurrentX,CurrentY, color);
  3503                           
  3504                           ; BSR set to: 0
  3505  0001D4  C08D  F06E         	movff	GLCD_Line@CurrentY,GLCD_SetPixel@y
  3506  0001D8  0E91               	movlw	low _color
  3507  0001DA  6EF6               	movwf	tblptrl,c
  3508  0001DC                     	if	1	;There is more than 1 active tblptr byte
  3509  0001DC  0EFF               	movlw	high _color
  3510  0001DE  6EF7               	movwf	tblptrh,c
  3511  0001E0                     	endif
  3512  0001E0                     	if	1	;There are 3 active tblptr bytes
  3513  0001E0  0E00               	movlw	low (_color shr (0+16))
  3514  0001E2  6EF8               	movwf	tblptru,c
  3515  0001E4                     	endif
  3516  0001E4  0008               	tblrd		*
  3517  0001E6  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  3518  0001EA  518B               	movf	GLCD_Line@CurrentX& (0+255),w,b
  3519  0001EC  EC3F  F002         	call	_GLCD_SetPixel
  3520                           
  3521                           ;graphic.c: 102: }while (CurrentX != X2);
  3522  0001F0  0100               	movlb	0	; () banked
  3523  0001F2  5179               	movf	GLCD_Line@X2& (0+255),w,b
  3524  0001F4  198B               	xorwf	GLCD_Line@CurrentX& (0+255),w,b
  3525  0001F6  E1D4               	bnz	l2785
  3526  0001F8  517A               	movf	(GLCD_Line@X2+1)& (0+255),w,b
  3527  0001FA  198C               	xorwf	(GLCD_Line@CurrentX+1)& (0+255),w,b
  3528  0001FC  B4D8               	btfsc	status,2,c
  3529  0001FE  0012               	return	
  3530  000200  D7CF               	goto	l438
  3531  000202                     l437:
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;graphic.c: 104: else
  3535                           ;graphic.c: 105: {
  3536                           ;graphic.c: 106: TwoDyAccumulatedError = 0;
  3537                           
  3538                           ; BSR set to: 0
  3539  000202  0E00               	movlw	0
  3540  000204  6F82               	movwf	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),b
  3541  000206  0E00               	movlw	0
  3542  000208  6F81               	movwf	GLCD_Line@TwoDyAccumulatedError& (0+255),b
  3543  00020A                     l2799:
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;graphic.c: 108: {
  3547                           ;graphic.c: 109: CurrentY += Yinc;
  3548  00020A  5185               	movf	GLCD_Line@Yinc& (0+255),w,b
  3549  00020C  278D               	addwf	GLCD_Line@CurrentY& (0+255),f,b
  3550  00020E  5186               	movf	(GLCD_Line@Yinc+1)& (0+255),w,b
  3551  000210  238E               	addwfc	(GLCD_Line@CurrentY+1)& (0+255),f,b
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;graphic.c: 110: TwoDyAccumulatedError += TwoDx;
  3555  000212  5187               	movf	GLCD_Line@TwoDx& (0+255),w,b
  3556  000214  2781               	addwf	GLCD_Line@TwoDyAccumulatedError& (0+255),f,b
  3557  000216  5188               	movf	(GLCD_Line@TwoDx+1)& (0+255),w,b
  3558  000218  2382               	addwfc	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),f,b
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;graphic.c: 111: if(TwoDyAccumulatedError>Dy)
  3562  00021A  5181               	movf	GLCD_Line@TwoDyAccumulatedError& (0+255),w,b
  3563  00021C  5D91               	subwf	GLCD_Line@Dy& (0+255),w,b
  3564  00021E  5192               	movf	(GLCD_Line@Dy+1)& (0+255),w,b
  3565  000220  0A80               	xorlw	128
  3566  000222  6F7D               	movwf	??_GLCD_Line& (0+255),b
  3567  000224  5182               	movf	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),w,b
  3568  000226  0A80               	xorlw	128
  3569  000228  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  3570  00022A  B0D8               	btfsc	status,0,c
  3571  00022C  D008               	goto	l443
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;graphic.c: 112: {
  3575                           ;graphic.c: 113: CurrentX += Xinc;
  3576  00022E  5183               	movf	GLCD_Line@Xinc& (0+255),w,b
  3577  000230  278B               	addwf	GLCD_Line@CurrentX& (0+255),f,b
  3578  000232  5184               	movf	(GLCD_Line@Xinc+1)& (0+255),w,b
  3579  000234  238C               	addwfc	(GLCD_Line@CurrentX+1)& (0+255),f,b
  3580                           
  3581                           ;graphic.c: 114: TwoDyAccumulatedError -= TwoDy;
  3582  000236  5189               	movf	GLCD_Line@TwoDy& (0+255),w,b
  3583  000238  5F81               	subwf	GLCD_Line@TwoDyAccumulatedError& (0+255),f,b
  3584  00023A  518A               	movf	(GLCD_Line@TwoDy+1)& (0+255),w,b
  3585  00023C  5B82               	subwfb	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),f,b
  3586  00023E                     l443:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;graphic.c: 115: }
  3590                           ;graphic.c: 116: GLCD_SetPixel(CurrentX,CurrentY, color);
  3591                           
  3592                           ; BSR set to: 0
  3593  00023E  C08D  F06E         	movff	GLCD_Line@CurrentY,GLCD_SetPixel@y
  3594  000242  0E91               	movlw	low _color
  3595  000244  6EF6               	movwf	tblptrl,c
  3596  000246                     	if	1	;There is more than 1 active tblptr byte
  3597  000246  0EFF               	movlw	high _color
  3598  000248  6EF7               	movwf	tblptrh,c
  3599  00024A                     	endif
  3600  00024A                     	if	1	;There are 3 active tblptr bytes
  3601  00024A  0E00               	movlw	low (_color shr (0+16))
  3602  00024C  6EF8               	movwf	tblptru,c
  3603  00024E                     	endif
  3604  00024E  0008               	tblrd		*
  3605  000250  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  3606  000254  518B               	movf	GLCD_Line@CurrentX& (0+255),w,b
  3607  000256  EC3F  F002         	call	_GLCD_SetPixel
  3608                           
  3609                           ;graphic.c: 117: }while (CurrentY != Y2);
  3610  00025A  0100               	movlb	0	; () banked
  3611  00025C  517B               	movf	GLCD_Line@Y2& (0+255),w,b
  3612  00025E  198D               	xorwf	GLCD_Line@CurrentY& (0+255),w,b
  3613  000260  E1D4               	bnz	l2799
  3614  000262  517C               	movf	(GLCD_Line@Y2+1)& (0+255),w,b
  3615  000264  198E               	xorwf	(GLCD_Line@CurrentY+1)& (0+255),w,b
  3616  000266  B4D8               	btfsc	status,2,c
  3617  000268  0012               	return	
  3618  00026A  D7CF               	goto	l442
  3619  00026C                     __end_of_GLCD_Line:
  3620                           	opt stack 0
  3621                           tblptru	equ	0xFF8
  3622                           tblptrh	equ	0xFF7
  3623                           tblptrl	equ	0xFF6
  3624                           tablat	equ	0xFF5
  3625                           prodh	equ	0xFF4
  3626                           prodl	equ	0xFF3
  3627                           intcon	equ	0xFF2
  3628                           postinc0	equ	0xFEE
  3629                           wreg	equ	0xFE8
  3630                           postdec1	equ	0xFE5
  3631                           fsr1l	equ	0xFE1
  3632                           status	equ	0xFD8
  3633                           
  3634 ;; *************** function _GLCD_SetPixel *****************
  3635 ;; Defined at:
  3636 ;;		line 78 in file "ks0108lib/KS0108.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  x               1    wreg     unsigned char 
  3639 ;;  y               1   14[BANK0 ] unsigned char 
  3640 ;;  color           1   15[BANK0 ] unsigned char 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  x               1   19[BANK0 ] unsigned char 
  3643 ;;  tmp             1   18[BANK0 ] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3653 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3654 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3655 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3656 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3657 ;;Total ram usage:        7 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:   13
  3660 ;; This function calls:
  3661 ;;		_GLCD_GoTo
  3662 ;;		_GLCD_ReadData
  3663 ;;		_GLCD_WriteData
  3664 ;;		___awdiv
  3665 ;; This function is called by:
  3666 ;;		_GLCD_Line
  3667 ;;		_GLCD_Rectangle
  3668 ;;		_GLCD_Circle
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text22
  3673  00047E                     __ptext22:
  3674                           	opt stack 0
  3675  00047E                     _GLCD_SetPixel:
  3676                           	opt stack 15
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;incstack = 0
  3680                           ;GLCD_SetPixel@x stored from wreg
  3681  00047E  0100               	movlb	0	; () banked
  3682  000480  6F73               	movwf	GLCD_SetPixel@x& (0+255),b
  3683                           
  3684                           ;KS0108.c: 80: unsigned char tmp;
  3685                           ;KS0108.c: 81: GLCD_GoTo(x, (y / 8));
  3686  000482  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  3687  000486  0100               	movlb	0	; () banked
  3688  000488  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3689  00048A  0E00               	movlw	0
  3690  00048C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3691  00048E  0E08               	movlw	8
  3692  000490  6F62               	movwf	___awdiv@divisor& (0+255),b
  3693  000492  ECD5  F002         	call	___awdiv	;wreg free
  3694  000496  0100               	movlb	0	; () banked
  3695  000498  5160               	movf	?___awdiv& (0+255),w,b
  3696  00049A  6F74               	movwf	_GLCD_SetPixel$1676& (0+255),b
  3697                           
  3698                           ;KS0108.c: 80: unsigned char tmp;
  3699                           ;KS0108.c: 81: GLCD_GoTo(x, (y / 8));
  3700  00049C  C074  F06B         	movff	_GLCD_SetPixel$1676,GLCD_GoTo@y
  3701  0004A0  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  3702  0004A2  EC91  F002         	call	_GLCD_GoTo
  3703                           
  3704                           ;KS0108.c: 82: tmp = GLCD_ReadData();
  3705  0004A6  EC4C  F004         	call	_GLCD_ReadData	;wreg free
  3706  0004AA  0100               	movlb	0	; () banked
  3707  0004AC  6F72               	movwf	GLCD_SetPixel@tmp& (0+255),b
  3708                           
  3709                           ;KS0108.c: 83: GLCD_GoTo(x, (y / 8));
  3710  0004AE  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  3711  0004B2  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3712  0004B4  0E00               	movlw	0
  3713  0004B6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3714  0004B8  0E08               	movlw	8
  3715  0004BA  6F62               	movwf	___awdiv@divisor& (0+255),b
  3716  0004BC  ECD5  F002         	call	___awdiv	;wreg free
  3717  0004C0  0100               	movlb	0	; () banked
  3718  0004C2  5160               	movf	?___awdiv& (0+255),w,b
  3719  0004C4  6F74               	movwf	_GLCD_SetPixel$1676& (0+255),b
  3720                           
  3721                           ;KS0108.c: 83: GLCD_GoTo(x, (y / 8));
  3722  0004C6  C074  F06B         	movff	_GLCD_SetPixel$1676,GLCD_GoTo@y
  3723  0004CA  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  3724  0004CC  EC91  F002         	call	_GLCD_GoTo
  3725                           
  3726                           ;KS0108.c: 84: tmp = GLCD_ReadData();
  3727  0004D0  EC4C  F004         	call	_GLCD_ReadData	;wreg free
  3728  0004D4  0100               	movlb	0	; () banked
  3729  0004D6  6F72               	movwf	GLCD_SetPixel@tmp& (0+255),b
  3730                           
  3731                           ;KS0108.c: 85: GLCD_GoTo(x, (y / 8));
  3732  0004D8  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  3733  0004DC  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3734  0004DE  0E00               	movlw	0
  3735  0004E0  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3736  0004E2  0E08               	movlw	8
  3737  0004E4  6F62               	movwf	___awdiv@divisor& (0+255),b
  3738  0004E6  ECD5  F002         	call	___awdiv	;wreg free
  3739  0004EA  0100               	movlb	0	; () banked
  3740  0004EC  5160               	movf	?___awdiv& (0+255),w,b
  3741  0004EE  6F74               	movwf	_GLCD_SetPixel$1676& (0+255),b
  3742                           
  3743                           ;KS0108.c: 85: GLCD_GoTo(x, (y / 8));
  3744  0004F0  C074  F06B         	movff	_GLCD_SetPixel$1676,GLCD_GoTo@y
  3745  0004F4  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  3746  0004F6  EC91  F002         	call	_GLCD_GoTo
  3747                           
  3748                           ;KS0108.c: 86: tmp |= (1 << (y % 8));
  3749  0004FA  C06E  F070         	movff	GLCD_SetPixel@y,??_GLCD_SetPixel
  3750  0004FE  0E07               	movlw	7
  3751  000500  0100               	movlb	0	; () banked
  3752  000502  1770               	andwf	??_GLCD_SetPixel& (0+255),f,b
  3753  000504  0E01               	movlw	1
  3754  000506  6F71               	movwf	(??_GLCD_SetPixel+1)& (0+255),b
  3755  000508  2B70               	incf	??_GLCD_SetPixel& (0+255),f,b
  3756  00050A  D002               	goto	u1144
  3757  00050C                     u1145:
  3758  00050C  90D8               	bcf	status,0,c
  3759  00050E  3771               	rlcf	(??_GLCD_SetPixel+1)& (0+255),f,b
  3760  000510                     u1144:
  3761  000510  2F70               	decfsz	??_GLCD_SetPixel& (0+255),f,b
  3762  000512  D7FC               	goto	u1145
  3763  000514  0100               	movlb	0	; () banked
  3764  000516  5171               	movf	(??_GLCD_SetPixel+1)& (0+255),w,b
  3765  000518  1372               	iorwf	GLCD_SetPixel@tmp& (0+255),f,b
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;KS0108.c: 87: GLCD_WriteData(tmp);
  3769  00051A  5172               	movf	GLCD_SetPixel@tmp& (0+255),w,b
  3770  00051C  ECD5  F003         	call	_GLCD_WriteData
  3771  000520  0012               	return		;funcret
  3772  000522                     __end_of_GLCD_SetPixel:
  3773                           	opt stack 0
  3774                           tblptru	equ	0xFF8
  3775                           tblptrh	equ	0xFF7
  3776                           tblptrl	equ	0xFF6
  3777                           tablat	equ	0xFF5
  3778                           prodh	equ	0xFF4
  3779                           prodl	equ	0xFF3
  3780                           intcon	equ	0xFF2
  3781                           postinc0	equ	0xFEE
  3782                           wreg	equ	0xFE8
  3783                           postdec1	equ	0xFE5
  3784                           fsr1l	equ	0xFE1
  3785                           status	equ	0xFD8
  3786                           
  3787 ;; *************** function _GLCD_ReadData *****************
  3788 ;; Defined at:
  3789 ;;		line 94 in file "ks0108lib/KS0108-PIC18.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  data            1    9[BANK0 ] unsigned char 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      unsigned char 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3804 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3805 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3806 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3807 ;;Total ram usage:        2 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:   11
  3810 ;; This function calls:
  3811 ;;		_GLCD_Delay
  3812 ;;		_GLCD_DisableController
  3813 ;;		_GLCD_EnableController
  3814 ;;		_GLCD_ReadStatus
  3815 ;;		___awdiv
  3816 ;; This function is called by:
  3817 ;;		_GLCD_SetPixel
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text23
  3822  000898                     __ptext23:
  3823                           	opt stack 0
  3824  000898                     _GLCD_ReadData:
  3825                           	opt stack 16
  3826                           
  3827                           ;KS0108-PIC18.c: 96: unsigned char data;
  3828                           ;KS0108-PIC18.c: 97: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  3829                           
  3830                           ;incstack = 0
  3831  000898  C0A1  F060         	movff	_screen_x,___awdiv@dividend
  3832  00089C  0100               	movlb	0	; () banked
  3833  00089E  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3834  0008A0  0E00               	movlw	0
  3835  0008A2  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3836  0008A4  0E40               	movlw	64
  3837  0008A6  6F62               	movwf	___awdiv@divisor& (0+255),b
  3838  0008A8  ECD5  F002         	call	___awdiv	;wreg free
  3839  0008AC  0100               	movlb	0	; () banked
  3840  0008AE  5160               	movf	?___awdiv& (0+255),w,b
  3841  0008B0  EC53  F007         	call	_GLCD_ReadStatus
  3842  0008B4  0100               	movlb	0	; () banked
  3843  0008B6  6F68               	movwf	??_GLCD_ReadData& (0+255),b
  3844  0008B8  BF68               	btfsc	??_GLCD_ReadData& (0+255),7,b
  3845  0008BA  D7EE               	goto	_GLCD_ReadData
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;KS0108-PIC18.c: 98: TRISC = 0xFF;
  3849  0008BC  6894               	setf	3988,c	;volatile
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;KS0108-PIC18.c: 99: PORTA |= ((1 << 1) | (1 << 2));
  3853  0008BE  0E06               	movlw	6
  3854  0008C0  1280               	iorwf	3968,f,c	;volatile
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;KS0108-PIC18.c: 100: GLCD_EnableController(screen_x / 64);
  3858  0008C2  C0A1  F060         	movff	_screen_x,___awdiv@dividend
  3859  0008C6  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3860  0008C8  0E00               	movlw	0
  3861  0008CA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3862  0008CC  0E40               	movlw	64
  3863  0008CE  6F62               	movwf	___awdiv@divisor& (0+255),b
  3864  0008D0  ECD5  F002         	call	___awdiv	;wreg free
  3865  0008D4  0100               	movlb	0	; () banked
  3866  0008D6  5160               	movf	?___awdiv& (0+255),w,b
  3867  0008D8  EC69  F007         	call	_GLCD_EnableController
  3868                           
  3869                           ;KS0108-PIC18.c: 102: PORTA |= (1 << 3);
  3870  0008DC  8680               	bsf	3968,3,c	;volatile
  3871                           
  3872                           ;KS0108-PIC18.c: 103: GLCD_Delay();
  3873  0008DE  EC60  F008         	call	_GLCD_Delay	;wreg free
  3874                           
  3875                           ;KS0108-PIC18.c: 104: data = PORTC;
  3876  0008E2  CF82 F069          	movff	3970,GLCD_ReadData@data	;volatile
  3877                           
  3878                           ;KS0108-PIC18.c: 105: PORTA &= ~(1 << 3);
  3879  0008E6  9680               	bcf	3968,3,c	;volatile
  3880                           
  3881                           ;KS0108-PIC18.c: 106: GLCD_DisableController(screen_x / 64);
  3882  0008E8  C0A1  F060         	movff	_screen_x,___awdiv@dividend
  3883  0008EC  0100               	movlb	0	; () banked
  3884  0008EE  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3885  0008F0  0E00               	movlw	0
  3886  0008F2  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3887  0008F4  0E40               	movlw	64
  3888  0008F6  6F62               	movwf	___awdiv@divisor& (0+255),b
  3889  0008F8  ECD5  F002         	call	___awdiv	;wreg free
  3890  0008FC  0100               	movlb	0	; () banked
  3891  0008FE  5160               	movf	?___awdiv& (0+255),w,b
  3892  000900  EC7E  F007         	call	_GLCD_DisableController
  3893                           
  3894                           ;KS0108-PIC18.c: 107: screen_x++;
  3895  000904  0100               	movlb	0	; () banked
  3896  000906  2BA1               	incf	_screen_x& (0+255),f,b
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;KS0108-PIC18.c: 108: return data;
  3900  000908  5169               	movf	GLCD_ReadData@data& (0+255),w,b
  3901  00090A  0012               	return	
  3902  00090C                     __end_of_GLCD_ReadData:
  3903                           	opt stack 0
  3904                           tblptru	equ	0xFF8
  3905                           tblptrh	equ	0xFF7
  3906                           tblptrl	equ	0xFF6
  3907                           tablat	equ	0xFF5
  3908                           prodh	equ	0xFF4
  3909                           prodl	equ	0xFF3
  3910                           intcon	equ	0xFF2
  3911                           postinc0	equ	0xFEE
  3912                           wreg	equ	0xFE8
  3913                           postdec1	equ	0xFE5
  3914                           fsr1l	equ	0xFE1
  3915                           status	equ	0xFD8
  3916                           
  3917 ;; *************** function _Draw_Arrow *****************
  3918 ;; Defined at:
  3919 ;;		line 42 in file "screen_controls.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;		None
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;		None
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;Total ram usage:        0 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:   14
  3940 ;; This function calls:
  3941 ;;		_Clear_Arrow_Column
  3942 ;;		_Clear_runTime_Arrows
  3943 ;;		_Draw_runTime_Arrow
  3944 ;;		_GLCD_GoTo
  3945 ;;		_Make_Arrow
  3946 ;; This function is called by:
  3947 ;;		_main
  3948 ;;		_Check_Buttons
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text24
  3953  000CDC                     __ptext24:
  3954                           	opt stack 0
  3955  000CDC                     _Draw_Arrow:
  3956                           	opt stack 16
  3957                           
  3958                           ;screen_controls.c: 46: switch(currentContext)
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;incstack = 0
  3962  000CDC  D019               	goto	l599
  3963  000CDE                     
  3964                           ;screen_controls.c: 49: Clear_Arrow_Column();
  3965  000CDE  ECBB  F004         	call	_Clear_Arrow_Column	;wreg free
  3966                           
  3967                           ;screen_controls.c: 50: GLCD_GoTo(0, mainState);
  3968  000CE2  C035  F06B         	movff	_mainState,GLCD_GoTo@y
  3969  000CE6  0E00               	movlw	0
  3970  000CE8  EC91  F002         	call	_GLCD_GoTo
  3971                           
  3972                           ;screen_controls.c: 51: Make_Arrow();
  3973  000CEC  EC27  F008         	call	_Make_Arrow	;wreg free
  3974                           
  3975                           ;screen_controls.c: 52: break;
  3976  000CF0  0012               	return	
  3977  000CF2                     
  3978                           ;screen_controls.c: 55: Clear_runTime_Arrows();
  3979  000CF2  EC6F  F005         	call	_Clear_runTime_Arrows	;wreg free
  3980                           
  3981                           ;screen_controls.c: 56: Draw_runTime_Arrow();
  3982  000CF6  EC9B  F005         	call	_Draw_runTime_Arrow	;wreg free
  3983                           
  3984                           ;screen_controls.c: 57: break;
  3985  000CFA  0012               	return	
  3986  000CFC                     
  3987                           ;screen_controls.c: 60: Clear_Arrow_Column();
  3988  000CFC  ECBB  F004         	call	_Clear_Arrow_Column	;wreg free
  3989                           
  3990                           ;screen_controls.c: 61: GLCD_GoTo(0, mainState);
  3991  000D00  C035  F06B         	movff	_mainState,GLCD_GoTo@y
  3992  000D04  0E00               	movlw	0
  3993  000D06  EC91  F002         	call	_GLCD_GoTo
  3994                           
  3995                           ;screen_controls.c: 62: Make_Arrow();
  3996  000D0A  EC27  F008         	call	_Make_Arrow	;wreg free
  3997                           
  3998                           ;screen_controls.c: 64: }
  3999                           
  4000                           ;screen_controls.c: 63: break;
  4001  000D0E  0012               	return	
  4002  000D10                     l599:
  4003  000D10  5034               	movf	_currentContext,w,c
  4004                           
  4005                           ; Switch size 1, requested type "space"
  4006                           ; Number of cases is 2, Range of values is 0 to 1
  4007                           ; switch strategies available:
  4008                           ; Name         Instructions Cycles
  4009                           ; simple_byte            7     4 (average)
  4010                           ;	Chosen strategy is simple_byte
  4011  000D12  0A00               	xorlw	0	; case 0
  4012  000D14  B4D8               	btfsc	status,2,c
  4013  000D16  D7E3               	goto	l600
  4014  000D18  0A01               	xorlw	1	; case 1
  4015  000D1A  B4D8               	btfsc	status,2,c
  4016  000D1C  D7EA               	goto	l602
  4017  000D1E  D7EE               	goto	l603
  4018  000D20                     __end_of_Draw_Arrow:
  4019                           	opt stack 0
  4020                           tblptru	equ	0xFF8
  4021                           tblptrh	equ	0xFF7
  4022                           tblptrl	equ	0xFF6
  4023                           tablat	equ	0xFF5
  4024                           prodh	equ	0xFF4
  4025                           prodl	equ	0xFF3
  4026                           intcon	equ	0xFF2
  4027                           postinc0	equ	0xFEE
  4028                           wreg	equ	0xFE8
  4029                           postdec1	equ	0xFE5
  4030                           fsr1l	equ	0xFE1
  4031                           status	equ	0xFD8
  4032                           
  4033 ;; *************** function _Draw_runTime_Arrow *****************
  4034 ;; Defined at:
  4035 ;;		line 124 in file "screen_controls.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4053 ;;Total ram usage:        0 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:   13
  4056 ;; This function calls:
  4057 ;;		_GLCD_GoTo
  4058 ;;		_Make_Arrow
  4059 ;; This function is called by:
  4060 ;;		_Draw_Arrow
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text25
  4065  000B36                     __ptext25:
  4066                           	opt stack 0
  4067  000B36                     _Draw_runTime_Arrow:
  4068                           	opt stack 16
  4069                           
  4070                           ;screen_controls.c: 126: switch(runTimeContext)
  4071                           
  4072                           ;incstack = 0
  4073  000B36  D021               	goto	l630
  4074  000B38                     
  4075                           ;screen_controls.c: 129: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  4076  000B38  0E02               	movlw	2
  4077  000B3A  0100               	movlb	0	; () banked
  4078  000B3C  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4079  000B3E  519E               	movf	_ARROW_SIZE& (0+255),w,b
  4080  000B40  0800               	sublw	0
  4081  000B42  259F               	addwf	_runTimeX& (0+255),w,b
  4082  000B44  EC91  F002         	call	_GLCD_GoTo
  4083                           
  4084                           ;screen_controls.c: 130: Make_Arrow();
  4085  000B48  EC27  F008         	call	_Make_Arrow	;wreg free
  4086                           
  4087                           ;screen_controls.c: 131: break;
  4088  000B4C  0012               	return	
  4089  000B4E                     
  4090                           ;screen_controls.c: 134: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  4091  000B4E  0E04               	movlw	4
  4092  000B50  0100               	movlb	0	; () banked
  4093  000B52  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4094  000B54  519E               	movf	_ARROW_SIZE& (0+255),w,b
  4095  000B56  0800               	sublw	0
  4096  000B58  259F               	addwf	_runTimeX& (0+255),w,b
  4097  000B5A  EC91  F002         	call	_GLCD_GoTo
  4098                           
  4099                           ;screen_controls.c: 135: Make_Arrow();
  4100  000B5E  EC27  F008         	call	_Make_Arrow	;wreg free
  4101                           
  4102                           ;screen_controls.c: 136: break;
  4103  000B62  0012               	return	
  4104  000B64                     
  4105                           ;screen_controls.c: 139: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  4106  000B64  0E02               	movlw	2
  4107  000B66  0100               	movlb	0	; () banked
  4108  000B68  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4109  000B6A  519E               	movf	_ARROW_SIZE& (0+255),w,b
  4110  000B6C  0800               	sublw	0
  4111  000B6E  259F               	addwf	_runTimeX& (0+255),w,b
  4112  000B70  EC91  F002         	call	_GLCD_GoTo
  4113                           
  4114                           ;screen_controls.c: 140: Make_Arrow();
  4115  000B74  EC27  F008         	call	_Make_Arrow	;wreg free
  4116                           
  4117                           ;screen_controls.c: 144: }
  4118                           
  4119                           ;screen_controls.c: 141: break;
  4120  000B78  0012               	return	
  4121  000B7A                     l630:
  4122  000B7A  0100               	movlb	0	; () banked
  4123  000B7C  51A2               	movf	_runTimeContext& (0+255),w,b
  4124                           
  4125                           ; Switch size 1, requested type "space"
  4126                           ; Number of cases is 2, Range of values is 0 to 1
  4127                           ; switch strategies available:
  4128                           ; Name         Instructions Cycles
  4129                           ; simple_byte            7     4 (average)
  4130                           ;	Chosen strategy is simple_byte
  4131  000B7E  0A00               	xorlw	0	; case 0
  4132  000B80  B4D8               	btfsc	status,2,c
  4133  000B82  D7DA               	goto	l631
  4134  000B84  0A01               	xorlw	1	; case 1
  4135  000B86  B4D8               	btfsc	status,2,c
  4136  000B88  D7E2               	goto	l633
  4137  000B8A  D7EC               	goto	l634
  4138  000B8C                     __end_of_Draw_runTime_Arrow:
  4139                           	opt stack 0
  4140                           tblptru	equ	0xFF8
  4141                           tblptrh	equ	0xFF7
  4142                           tblptrl	equ	0xFF6
  4143                           tablat	equ	0xFF5
  4144                           prodh	equ	0xFF4
  4145                           prodl	equ	0xFF3
  4146                           intcon	equ	0xFF2
  4147                           postinc0	equ	0xFEE
  4148                           wreg	equ	0xFE8
  4149                           postdec1	equ	0xFE5
  4150                           fsr1l	equ	0xFE1
  4151                           status	equ	0xFD8
  4152                           
  4153 ;; *************** function _Make_Arrow *****************
  4154 ;; Defined at:
  4155 ;;		line 69 in file "screen_controls.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;		None
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2, status,0, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4173 ;;Total ram usage:        0 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:   12
  4176 ;; This function calls:
  4177 ;;		_GLCD_WriteData
  4178 ;; This function is called by:
  4179 ;;		_Draw_Arrow
  4180 ;;		_Draw_runTime_Arrow
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text26
  4185  00104E                     __ptext26:
  4186                           	opt stack 0
  4187  00104E                     _Make_Arrow:
  4188                           	opt stack 17
  4189                           
  4190                           ;screen_controls.c: 71: GLCD_WriteData(0x7E);
  4191                           
  4192                           ;incstack = 0
  4193  00104E  0E7E               	movlw	126
  4194  001050  ECD5  F003         	call	_GLCD_WriteData
  4195                           
  4196                           ;screen_controls.c: 72: GLCD_WriteData(0x3C);
  4197  001054  0E3C               	movlw	60
  4198  001056  ECD5  F003         	call	_GLCD_WriteData
  4199                           
  4200                           ;screen_controls.c: 73: GLCD_WriteData(0x18);
  4201  00105A  0E18               	movlw	24
  4202  00105C  ECD5  F003         	call	_GLCD_WriteData
  4203  001060  0012               	return		;funcret
  4204  001062                     __end_of_Make_Arrow:
  4205                           	opt stack 0
  4206                           tblptru	equ	0xFF8
  4207                           tblptrh	equ	0xFF7
  4208                           tblptrl	equ	0xFF6
  4209                           tablat	equ	0xFF5
  4210                           prodh	equ	0xFF4
  4211                           prodl	equ	0xFF3
  4212                           intcon	equ	0xFF2
  4213                           postinc0	equ	0xFEE
  4214                           wreg	equ	0xFE8
  4215                           postdec1	equ	0xFE5
  4216                           fsr1l	equ	0xFE1
  4217                           status	equ	0xFD8
  4218                           
  4219 ;; *************** function _Clear_runTime_Arrows *****************
  4220 ;; Defined at:
  4221 ;;		line 105 in file "screen_controls.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  i               1   14[BANK0 ] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4238 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4239 ;;Total ram usage:        1 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:   13
  4242 ;; This function calls:
  4243 ;;		_GLCD_GoTo
  4244 ;;		_GLCD_WriteData
  4245 ;; This function is called by:
  4246 ;;		_Draw_Arrow
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text27
  4251  000ADE                     __ptext27:
  4252                           	opt stack 0
  4253  000ADE                     _Clear_runTime_Arrows:
  4254                           	opt stack 16
  4255                           
  4256                           ;screen_controls.c: 107: unsigned char i=0;
  4257                           
  4258                           ;incstack = 0
  4259  000ADE  0E00               	movlw	0
  4260  000AE0  0100               	movlb	0	; () banked
  4261  000AE2  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;screen_controls.c: 109: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  4265  000AE4  0E02               	movlw	2
  4266  000AE6  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4267  000AE8  519E               	movf	_ARROW_SIZE& (0+255),w,b
  4268  000AEA  0800               	sublw	0
  4269  000AEC  259F               	addwf	_runTimeX& (0+255),w,b
  4270  000AEE  EC91  F002         	call	_GLCD_GoTo
  4271                           
  4272                           ;screen_controls.c: 111: for(i=0; i<ARROW_SIZE; i++)
  4273  000AF2  0E00               	movlw	0
  4274  000AF4  0100               	movlb	0	; () banked
  4275  000AF6  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  4276  000AF8  D005               	goto	l621
  4277  000AFA                     
  4278                           ; BSR set to: 0
  4279                           ;screen_controls.c: 112: {
  4280                           ;screen_controls.c: 113: GLCD_WriteData(0x00);
  4281                           
  4282                           ; BSR set to: 0
  4283  000AFA  0E00               	movlw	0
  4284  000AFC  ECD5  F003         	call	_GLCD_WriteData
  4285  000B00  0100               	movlb	0	; () banked
  4286  000B02  2B6E               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  4287  000B04                     l621:
  4288                           
  4289                           ; BSR set to: 0
  4290                           
  4291                           ; BSR set to: 0
  4292  000B04  519E               	movf	_ARROW_SIZE& (0+255),w,b
  4293  000B06  5D6E               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  4294  000B08  A0D8               	btfss	status,0,c
  4295  000B0A  D7F7               	goto	l622
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;screen_controls.c: 114: }
  4299                           ;screen_controls.c: 116: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  4300                           
  4301                           ; BSR set to: 0
  4302  000B0C  0E04               	movlw	4
  4303  000B0E  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  4304  000B10  519E               	movf	_ARROW_SIZE& (0+255),w,b
  4305  000B12  0800               	sublw	0
  4306  000B14  259F               	addwf	_runTimeX& (0+255),w,b
  4307  000B16  EC91  F002         	call	_GLCD_GoTo
  4308                           
  4309                           ;screen_controls.c: 117: for(i=0; i<ARROW_SIZE; i++)
  4310  000B1A  0E00               	movlw	0
  4311  000B1C  0100               	movlb	0	; () banked
  4312  000B1E  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  4313  000B20  D005               	goto	l624
  4314  000B22                     
  4315                           ; BSR set to: 0
  4316                           ;screen_controls.c: 118: {
  4317                           ;screen_controls.c: 119: GLCD_WriteData(0x00);
  4318                           
  4319                           ; BSR set to: 0
  4320  000B22  0E00               	movlw	0
  4321  000B24  ECD5  F003         	call	_GLCD_WriteData
  4322  000B28  0100               	movlb	0	; () banked
  4323  000B2A  2B6E               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  4324  000B2C                     l624:
  4325                           
  4326                           ; BSR set to: 0
  4327                           
  4328                           ; BSR set to: 0
  4329  000B2C  519E               	movf	_ARROW_SIZE& (0+255),w,b
  4330  000B2E  5D6E               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  4331  000B30  B0D8               	btfsc	status,0,c
  4332  000B32  0012               	return	
  4333  000B34  D7F6               	goto	l625
  4334  000B36                     __end_of_Clear_runTime_Arrows:
  4335                           	opt stack 0
  4336                           tblptru	equ	0xFF8
  4337                           tblptrh	equ	0xFF7
  4338                           tblptrl	equ	0xFF6
  4339                           tablat	equ	0xFF5
  4340                           prodh	equ	0xFF4
  4341                           prodl	equ	0xFF3
  4342                           intcon	equ	0xFF2
  4343                           postinc0	equ	0xFEE
  4344                           wreg	equ	0xFE8
  4345                           postdec1	equ	0xFE5
  4346                           fsr1l	equ	0xFE1
  4347                           status	equ	0xFD8
  4348                           
  4349 ;; *************** function _Clear_Arrow_Column *****************
  4350 ;; Defined at:
  4351 ;;		line 76 in file "screen_controls.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;		None
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  i               1   22[BANK0 ] unsigned char 
  4356 ;;  j               1   21[BANK0 ] unsigned char 
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, status,2, status,0, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4368 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4369 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4370 ;;Total ram usage:        9 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:   13
  4373 ;; This function calls:
  4374 ;;		_GLCD_GoTo
  4375 ;;		_GLCD_WriteData
  4376 ;; This function is called by:
  4377 ;;		_Draw_Arrow
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text28
  4382  000976                     __ptext28:
  4383                           	opt stack 0
  4384  000976                     _Clear_Arrow_Column:
  4385                           	opt stack 16
  4386                           
  4387                           ;screen_controls.c: 78: unsigned char i, j;
  4388                           ;screen_controls.c: 80: for(i = 0; i < 64/8; i++)
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;incstack = 0
  4392  000976  0E00               	movlw	0
  4393  000978  0100               	movlb	0	; () banked
  4394  00097A  6F76               	movwf	Clear_Arrow_Column@i& (0+255),b
  4395  00097C                     l2821:
  4396                           
  4397                           ; BSR set to: 0
  4398  00097C  0E07               	movlw	7
  4399  00097E  6576               	cpfsgt	Clear_Arrow_Column@i& (0+255),b
  4400  000980  D001               	goto	l610
  4401  000982  0012               	return	
  4402  000984                     l610:
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;screen_controls.c: 81: {
  4406                           ;screen_controls.c: 82: GLCD_GoTo(0, i);
  4407                           
  4408                           ; BSR set to: 0
  4409  000984  C076  F06B         	movff	Clear_Arrow_Column@i,GLCD_GoTo@y
  4410  000988  0E00               	movlw	0
  4411  00098A  EC91  F002         	call	_GLCD_GoTo
  4412                           
  4413                           ;screen_controls.c: 84: for(j = 0; j < (xMenuStart - 1); j++)
  4414  00098E  0E00               	movlw	0
  4415  000990  0100               	movlb	0	; () banked
  4416  000992  6F75               	movwf	Clear_Arrow_Column@j& (0+255),b
  4417  000994  D005               	goto	l612
  4418  000996                     
  4419                           ; BSR set to: 0
  4420                           ;screen_controls.c: 85: {
  4421                           ;screen_controls.c: 86: GLCD_WriteData(0x00);
  4422                           
  4423                           ; BSR set to: 0
  4424  000996  0E00               	movlw	0
  4425  000998  ECD5  F003         	call	_GLCD_WriteData
  4426  00099C  0100               	movlb	0	; () banked
  4427  00099E  2B75               	incf	Clear_Arrow_Column@j& (0+255),f,b
  4428  0009A0                     l612:
  4429                           
  4430                           ; BSR set to: 0
  4431                           
  4432                           ; BSR set to: 0
  4433  0009A0  0EFF               	movlw	255
  4434  0009A2  6F6E               	movwf	??_Clear_Arrow_Column& (0+255),b
  4435  0009A4  0EFF               	movlw	255
  4436  0009A6  6F6F               	movwf	(??_Clear_Arrow_Column+1)& (0+255),b
  4437  0009A8  519D               	movf	_xMenuStart& (0+255),w,b
  4438  0009AA  6F70               	movwf	(??_Clear_Arrow_Column+2)& (0+255),b
  4439  0009AC  6B71               	clrf	(??_Clear_Arrow_Column+3)& (0+255),b
  4440  0009AE  516E               	movf	??_Clear_Arrow_Column& (0+255),w,b
  4441  0009B0  2770               	addwf	(??_Clear_Arrow_Column+2)& (0+255),f,b
  4442  0009B2  516F               	movf	(??_Clear_Arrow_Column+1)& (0+255),w,b
  4443  0009B4  2371               	addwfc	(??_Clear_Arrow_Column+3)& (0+255),f,b
  4444  0009B6  5175               	movf	Clear_Arrow_Column@j& (0+255),w,b
  4445  0009B8  6F72               	movwf	(??_Clear_Arrow_Column+4)& (0+255),b
  4446  0009BA  6B73               	clrf	(??_Clear_Arrow_Column+5)& (0+255),b
  4447  0009BC  5170               	movf	(??_Clear_Arrow_Column+2)& (0+255),w,b
  4448  0009BE  5D72               	subwf	(??_Clear_Arrow_Column+4)& (0+255),w,b
  4449  0009C0  5173               	movf	(??_Clear_Arrow_Column+5)& (0+255),w,b
  4450  0009C2  0A80               	xorlw	128
  4451  0009C4  6F74               	movwf	(??_Clear_Arrow_Column+6)& (0+255),b
  4452  0009C6  5171               	movf	(??_Clear_Arrow_Column+3)& (0+255),w,b
  4453  0009C8  0A80               	xorlw	128
  4454  0009CA  5974               	subwfb	(??_Clear_Arrow_Column+6)& (0+255),w,b
  4455  0009CC  A0D8               	btfss	status,0,c
  4456  0009CE  D7E3               	goto	l613
  4457                           
  4458                           ; BSR set to: 0
  4459                           
  4460                           ; BSR set to: 0
  4461  0009D0  2B76               	incf	Clear_Arrow_Column@i& (0+255),f,b
  4462  0009D2  D7D4               	goto	l2821
  4463  0009D4                     __end_of_Clear_Arrow_Column:
  4464                           	opt stack 0
  4465                           tblptru	equ	0xFF8
  4466                           tblptrh	equ	0xFF7
  4467                           tblptrl	equ	0xFF6
  4468                           tablat	equ	0xFF5
  4469                           prodh	equ	0xFF4
  4470                           prodl	equ	0xFF3
  4471                           intcon	equ	0xFF2
  4472                           postinc0	equ	0xFEE
  4473                           wreg	equ	0xFE8
  4474                           postdec1	equ	0xFE5
  4475                           fsr1l	equ	0xFE1
  4476                           status	equ	0xFD8
  4477                           
  4478 ;; *************** function _GLCD_WriteData *****************
  4479 ;; Defined at:
  4480 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  dataToWrite     1    wreg     unsigned char 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  dataToWrite     1    9[BANK0 ] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4495 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4496 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4497 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4498 ;;Total ram usage:        2 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:   11
  4501 ;; This function calls:
  4502 ;;		_GLCD_Delay
  4503 ;;		_GLCD_DisableController
  4504 ;;		_GLCD_EnableController
  4505 ;;		_GLCD_ReadStatus
  4506 ;;		___awdiv
  4507 ;; This function is called by:
  4508 ;;		_GLCD_ClearScreen
  4509 ;;		_GLCD_WriteChar
  4510 ;;		_GLCD_SetPixel
  4511 ;;		_Make_Arrow
  4512 ;;		_Clear_Arrow_Column
  4513 ;;		_Clear_runTime_Arrows
  4514 ;;		_GLCD_Bitmap
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text29
  4519  0007AA                     __ptext29:
  4520                           	opt stack 0
  4521  0007AA                     _GLCD_WriteData:
  4522                           	opt stack 16
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;incstack = 0
  4526                           ;GLCD_WriteData@dataToWrite stored from wreg
  4527  0007AA  0100               	movlb	0	; () banked
  4528  0007AC  6F69               	movwf	GLCD_WriteData@dataToWrite& (0+255),b
  4529  0007AE                     
  4530                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  4531  0007AE  C0A1  F060         	movff	_screen_x,___awdiv@dividend
  4532  0007B2  0100               	movlb	0	; () banked
  4533  0007B4  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4534  0007B6  0E00               	movlw	0
  4535  0007B8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4536  0007BA  0E40               	movlw	64
  4537  0007BC  6F62               	movwf	___awdiv@divisor& (0+255),b
  4538  0007BE  ECD5  F002         	call	___awdiv	;wreg free
  4539  0007C2  0100               	movlb	0	; () banked
  4540  0007C4  5160               	movf	?___awdiv& (0+255),w,b
  4541  0007C6  EC53  F007         	call	_GLCD_ReadStatus
  4542  0007CA  0100               	movlb	0	; () banked
  4543  0007CC  6F68               	movwf	??_GLCD_WriteData& (0+255),b
  4544  0007CE  BF68               	btfsc	??_GLCD_WriteData& (0+255),7,b
  4545  0007D0  D7EE               	goto	l2601
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;KS0108-PIC18.c: 116: TRISC = 0x00;
  4549                           
  4550                           ; BSR set to: 0
  4551  0007D2  0E00               	movlw	0
  4552  0007D4  6E94               	movwf	3988,c	;volatile
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
  4556  0007D6  9280               	bcf	3968,1,c	;volatile
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
  4560  0007D8  8480               	bsf	3968,2,c	;volatile
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;KS0108-PIC18.c: 119: PORTC = dataToWrite;
  4564  0007DA  C069  FF82         	movff	GLCD_WriteData@dataToWrite,3970	;volatile
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
  4568  0007DE  C0A1  F060         	movff	_screen_x,___awdiv@dividend
  4569  0007E2  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4570  0007E4  0E00               	movlw	0
  4571  0007E6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4572  0007E8  0E40               	movlw	64
  4573  0007EA  6F62               	movwf	___awdiv@divisor& (0+255),b
  4574  0007EC  ECD5  F002         	call	___awdiv	;wreg free
  4575  0007F0  0100               	movlb	0	; () banked
  4576  0007F2  5160               	movf	?___awdiv& (0+255),w,b
  4577  0007F4  EC69  F007         	call	_GLCD_EnableController
  4578                           
  4579                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
  4580  0007F8  8680               	bsf	3968,3,c	;volatile
  4581                           
  4582                           ;KS0108-PIC18.c: 122: GLCD_Delay();
  4583  0007FA  EC60  F008         	call	_GLCD_Delay	;wreg free
  4584                           
  4585                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
  4586  0007FE  9680               	bcf	3968,3,c	;volatile
  4587                           
  4588                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
  4589  000800  C0A1  F060         	movff	_screen_x,___awdiv@dividend
  4590  000804  0100               	movlb	0	; () banked
  4591  000806  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4592  000808  0E00               	movlw	0
  4593  00080A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4594  00080C  0E40               	movlw	64
  4595  00080E  6F62               	movwf	___awdiv@divisor& (0+255),b
  4596  000810  ECD5  F002         	call	___awdiv	;wreg free
  4597  000814  0100               	movlb	0	; () banked
  4598  000816  5160               	movf	?___awdiv& (0+255),w,b
  4599  000818  EC7E  F007         	call	_GLCD_DisableController
  4600                           
  4601                           ;KS0108-PIC18.c: 125: screen_x++;
  4602  00081C  0100               	movlb	0	; () banked
  4603  00081E  2BA1               	incf	_screen_x& (0+255),f,b
  4604                           
  4605                           ; BSR set to: 0
  4606  000820  0012               	return		;funcret
  4607  000822                     __end_of_GLCD_WriteData:
  4608                           	opt stack 0
  4609                           tblptru	equ	0xFF8
  4610                           tblptrh	equ	0xFF7
  4611                           tblptrl	equ	0xFF6
  4612                           tablat	equ	0xFF5
  4613                           prodh	equ	0xFF4
  4614                           prodl	equ	0xFF3
  4615                           intcon	equ	0xFF2
  4616                           postinc0	equ	0xFEE
  4617                           wreg	equ	0xFE8
  4618                           postdec1	equ	0xFE5
  4619                           fsr1l	equ	0xFE1
  4620                           status	equ	0xFD8
  4621                           
  4622 ;; *************** function _GLCD_GoTo *****************
  4623 ;; Defined at:
  4624 ;;		line 25 in file "ks0108lib/KS0108.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  x               1    wreg     unsigned char 
  4627 ;;  y               1   11[BANK0 ] unsigned char 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  x               1   12[BANK0 ] unsigned char 
  4630 ;;  i               1   13[BANK0 ] unsigned char 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      void 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2, status,0, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4640 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4641 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4643 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4644 ;;Total ram usage:        3 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:   12
  4647 ;; This function calls:
  4648 ;;		_GLCD_WriteCommand
  4649 ;;		___awdiv
  4650 ;; This function is called by:
  4651 ;;		_GLCD_ClearScreen
  4652 ;;		_GLCD_SetPixel
  4653 ;;		_Initialize_Menus
  4654 ;;		_Draw_Arrow
  4655 ;;		_Clear_Arrow_Column
  4656 ;;		_Draw_runTime_Menu
  4657 ;;		_Clear_runTime_Arrows
  4658 ;;		_Draw_runTime_Arrow
  4659 ;;		_GLCD_Bitmap
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text30
  4664  000522                     __ptext30:
  4665                           	opt stack 0
  4666  000522                     _GLCD_GoTo:
  4667                           	opt stack 15
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;incstack = 0
  4671                           ;GLCD_GoTo@x stored from wreg
  4672  000522  0100               	movlb	0	; () banked
  4673  000524  6F6C               	movwf	GLCD_GoTo@x& (0+255),b
  4674                           
  4675                           ;KS0108.c: 27: unsigned char i;
  4676                           ;KS0108.c: 28: screen_x = x;
  4677  000526  C06C  F0A1         	movff	GLCD_GoTo@x,_screen_x
  4678                           
  4679                           ;KS0108.c: 29: screen_y = y;
  4680  00052A  C06B  F0A0         	movff	GLCD_GoTo@y,_screen_y
  4681                           
  4682                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
  4683  00052E  0E00               	movlw	0
  4684  000530  0100               	movlb	0	; () banked
  4685  000532  6F6D               	movwf	GLCD_GoTo@i& (0+255),b
  4686  000534                     l2589:
  4687                           
  4688                           ; BSR set to: 0
  4689  000534  0E01               	movlw	1
  4690  000536  656D               	cpfsgt	GLCD_GoTo@i& (0+255),b
  4691  000538  D001               	goto	l469
  4692  00053A  D014               	goto	u1070
  4693  00053C                     l469:
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;KS0108.c: 32: {
  4697                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
  4698                           
  4699                           ; BSR set to: 0
  4700  00053C  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  4701  000540  0E40               	movlw	64
  4702  000542  ECEC  F006         	call	_GLCD_WriteCommand
  4703                           
  4704                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
  4705  000546  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  4706  00054A  0100               	movlb	0	; () banked
  4707  00054C  516B               	movf	GLCD_GoTo@y& (0+255),w,b
  4708  00054E  09B8               	iorlw	184
  4709  000550  ECEC  F006         	call	_GLCD_WriteCommand
  4710                           
  4711                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
  4712  000554  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  4713  000558  0EC0               	movlw	192
  4714  00055A  ECEC  F006         	call	_GLCD_WriteCommand
  4715  00055E  0100               	movlb	0	; () banked
  4716  000560  2B6D               	incf	GLCD_GoTo@i& (0+255),f,b
  4717  000562  D7E8               	goto	l2589
  4718  000564                     u1070:
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;KS0108.c: 36: }
  4722                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
  4723                           
  4724                           ; BSR set to: 0
  4725  000564  C06C  F060         	movff	GLCD_GoTo@x,___awdiv@dividend
  4726  000568  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4727  00056A  0E00               	movlw	0
  4728  00056C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4729  00056E  0E40               	movlw	64
  4730  000570  6F62               	movwf	___awdiv@divisor& (0+255),b
  4731  000572  ECD5  F002         	call	___awdiv	;wreg free
  4732  000576  0100               	movlb	0	; () banked
  4733  000578  5160               	movf	?___awdiv& (0+255),w,b
  4734  00057A  6F68               	movwf	GLCD_WriteCommand@controller& (0+255),b
  4735  00057C  516C               	movf	GLCD_GoTo@x& (0+255),w,b
  4736  00057E  0B3F               	andlw	63
  4737  000580  0940               	iorlw	64
  4738  000582  ECEC  F006         	call	_GLCD_WriteCommand
  4739                           
  4740                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
  4741  000586  C06C  F060         	movff	GLCD_GoTo@x,___awdiv@dividend
  4742  00058A  0100               	movlb	0	; () banked
  4743  00058C  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4744  00058E  0E00               	movlw	0
  4745  000590  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4746  000592  0E40               	movlw	64
  4747  000594  6F62               	movwf	___awdiv@divisor& (0+255),b
  4748  000596  ECD5  F002         	call	___awdiv	;wreg free
  4749  00059A  0100               	movlb	0	; () banked
  4750  00059C  5160               	movf	?___awdiv& (0+255),w,b
  4751  00059E  6F68               	movwf	GLCD_WriteCommand@controller& (0+255),b
  4752  0005A0  516B               	movf	GLCD_GoTo@y& (0+255),w,b
  4753  0005A2  09B8               	iorlw	184
  4754  0005A4  ECEC  F006         	call	_GLCD_WriteCommand
  4755  0005A8  0012               	return		;funcret
  4756  0005AA                     __end_of_GLCD_GoTo:
  4757                           	opt stack 0
  4758                           tblptru	equ	0xFF8
  4759                           tblptrh	equ	0xFF7
  4760                           tblptrl	equ	0xFF6
  4761                           tablat	equ	0xFF5
  4762                           prodh	equ	0xFF4
  4763                           prodl	equ	0xFF3
  4764                           intcon	equ	0xFF2
  4765                           postinc0	equ	0xFEE
  4766                           wreg	equ	0xFE8
  4767                           postdec1	equ	0xFE5
  4768                           fsr1l	equ	0xFE1
  4769                           status	equ	0xFD8
  4770                           
  4771 ;; *************** function ___awdiv *****************
  4772 ;; Defined at:
  4773 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  dividend        2    0[BANK0 ] int 
  4776 ;;  divisor         2    2[BANK0 ] int 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  quotient        2    6[BANK0 ] int 
  4779 ;;  sign            1    5[BANK0 ] unsigned char 
  4780 ;;  counter         1    4[BANK0 ] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  2    0[BANK0 ] int 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4790 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4791 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4793 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4794 ;;Total ram usage:        8 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    9
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_GLCD_GoTo
  4801 ;;		_GLCD_SetPixel
  4802 ;;		_GLCD_ReadData
  4803 ;;		_GLCD_WriteData
  4804 ;;		_GLCD_Bitmap
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text31
  4809  0005AA                     __ptext31:
  4810                           	opt stack 0
  4811  0005AA                     ___awdiv:
  4812                           	opt stack 17
  4813                           
  4814                           ;incstack = 0
  4815  0005AA  0E00               	movlw	0
  4816  0005AC  0100               	movlb	0	; () banked
  4817  0005AE  6F65               	movwf	___awdiv@sign& (0+255),b
  4818                           
  4819                           ; BSR set to: 0
  4820  0005B0  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4821  0005B2  D006               	goto	l803
  4822                           
  4823                           ; BSR set to: 0
  4824  0005B4  6D62               	negf	___awdiv@divisor& (0+255),b
  4825  0005B6  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4826  0005B8  B0D8               	btfsc	status,0,c
  4827  0005BA  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4828                           
  4829                           ; BSR set to: 0
  4830  0005BC  0E01               	movlw	1
  4831  0005BE  6F65               	movwf	___awdiv@sign& (0+255),b
  4832  0005C0                     l803:
  4833                           
  4834                           ; BSR set to: 0
  4835                           
  4836                           ; BSR set to: 0
  4837  0005C0  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4838  0005C2  D006               	goto	l804
  4839                           
  4840                           ; BSR set to: 0
  4841  0005C4  6D60               	negf	___awdiv@dividend& (0+255),b
  4842  0005C6  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4843  0005C8  B0D8               	btfsc	status,0,c
  4844  0005CA  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4845                           
  4846                           ; BSR set to: 0
  4847  0005CC  0E01               	movlw	1
  4848  0005CE  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  4849  0005D0                     l804:
  4850                           
  4851                           ; BSR set to: 0
  4852                           
  4853                           ; BSR set to: 0
  4854  0005D0  0E00               	movlw	0
  4855  0005D2  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  4856  0005D4  0E00               	movlw	0
  4857  0005D6  6F66               	movwf	___awdiv@quotient& (0+255),b
  4858                           
  4859                           ; BSR set to: 0
  4860  0005D8  5162               	movf	___awdiv@divisor& (0+255),w,b
  4861  0005DA  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4862  0005DC  B4D8               	btfsc	status,2,c
  4863  0005DE  D01C               	goto	l811
  4864                           
  4865                           ; BSR set to: 0
  4866  0005E0  0E01               	movlw	1
  4867  0005E2  6F64               	movwf	___awdiv@counter& (0+255),b
  4868  0005E4  D004               	goto	l806
  4869  0005E6                     
  4870                           ; BSR set to: 0
  4871                           
  4872                           ; BSR set to: 0
  4873  0005E6  90D8               	bcf	status,0,c
  4874  0005E8  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  4875  0005EA  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4876  0005EC  2B64               	incf	___awdiv@counter& (0+255),f,b
  4877  0005EE                     l806:
  4878                           
  4879                           ; BSR set to: 0
  4880                           
  4881                           ; BSR set to: 0
  4882  0005EE  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4883  0005F0  D7FA               	goto	l807
  4884  0005F2                     u1010:
  4885                           
  4886                           ; BSR set to: 0
  4887                           
  4888                           ; BSR set to: 0
  4889                           
  4890                           ; BSR set to: 0
  4891  0005F2  90D8               	bcf	status,0,c
  4892  0005F4  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  4893  0005F6  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4894                           
  4895                           ; BSR set to: 0
  4896  0005F8  5162               	movf	___awdiv@divisor& (0+255),w,b
  4897  0005FA  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  4898  0005FC  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4899  0005FE  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4900  000600  A0D8               	btfss	status,0,c
  4901  000602  D005               	goto	l810
  4902                           
  4903                           ; BSR set to: 0
  4904  000604  5162               	movf	___awdiv@divisor& (0+255),w,b
  4905  000606  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  4906  000608  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4907  00060A  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4908                           
  4909                           ; BSR set to: 0
  4910  00060C  8166               	bsf	___awdiv@quotient& (0+255),0,b
  4911  00060E                     l810:
  4912                           
  4913                           ; BSR set to: 0
  4914                           
  4915                           ; BSR set to: 0
  4916  00060E  90D8               	bcf	status,0,c
  4917  000610  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4918  000612  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  4919                           
  4920                           ; BSR set to: 0
  4921  000614  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  4922  000616  D7ED               	goto	u1010
  4923  000618                     l811:
  4924                           
  4925                           ; BSR set to: 0
  4926                           
  4927                           ; BSR set to: 0
  4928                           
  4929                           ; BSR set to: 0
  4930  000618  5165               	movf	___awdiv@sign& (0+255),w,b
  4931  00061A  B4D8               	btfsc	status,2,c
  4932  00061C  D004               	goto	l812
  4933                           
  4934                           ; BSR set to: 0
  4935  00061E  6D66               	negf	___awdiv@quotient& (0+255),b
  4936  000620  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4937  000622  B0D8               	btfsc	status,0,c
  4938  000624  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4939  000626                     l812:
  4940                           
  4941                           ; BSR set to: 0
  4942                           
  4943                           ; BSR set to: 0
  4944  000626  C066  F060         	movff	___awdiv@quotient,?___awdiv
  4945  00062A  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  4946  00062E  0012               	return	
  4947  000630                     __end_of___awdiv:
  4948                           	opt stack 0
  4949                           tblptru	equ	0xFF8
  4950                           tblptrh	equ	0xFF7
  4951                           tblptrl	equ	0xFF6
  4952                           tablat	equ	0xFF5
  4953                           prodh	equ	0xFF4
  4954                           prodl	equ	0xFF3
  4955                           intcon	equ	0xFF2
  4956                           postinc0	equ	0xFEE
  4957                           wreg	equ	0xFE8
  4958                           postdec1	equ	0xFE5
  4959                           fsr1l	equ	0xFE1
  4960                           status	equ	0xFD8
  4961                           
  4962 ;; *************** function _GLCD_WriteCommand *****************
  4963 ;; Defined at:
  4964 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  commandToWri    1    wreg     unsigned char 
  4967 ;;  controller      1    8[BANK0 ] unsigned char 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  commandToWri    1   10[BANK0 ] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4979 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4982 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4983 ;;Total ram usage:        3 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:   11
  4986 ;; This function calls:
  4987 ;;		_GLCD_Delay
  4988 ;;		_GLCD_DisableController
  4989 ;;		_GLCD_EnableController
  4990 ;;		_GLCD_ReadStatus
  4991 ;; This function is called by:
  4992 ;;		_GLCD_Initalize
  4993 ;;		_GLCD_GoTo
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text32
  4998  000DD8                     __ptext32:
  4999                           	opt stack 0
  5000  000DD8                     _GLCD_WriteCommand:
  5001                           	opt stack 15
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;incstack = 0
  5005                           ;GLCD_WriteCommand@commandToWrite stored from wreg
  5006  000DD8  0100               	movlb	0	; () banked
  5007  000DDA  6F6A               	movwf	GLCD_WriteCommand@commandToWrite& (0+255),b
  5008  000DDC                     
  5009                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
  5010  000DDC  0100               	movlb	0	; () banked
  5011  000DDE  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  5012  000DE0  EC53  F007         	call	_GLCD_ReadStatus
  5013  000DE4  0100               	movlb	0	; () banked
  5014  000DE6  6F69               	movwf	??_GLCD_WriteCommand& (0+255),b
  5015  000DE8  BF69               	btfsc	??_GLCD_WriteCommand& (0+255),7,b
  5016  000DEA  D7F8               	goto	l2475
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;KS0108-PIC18.c: 82: TRISC = 0x00;
  5020                           
  5021                           ; BSR set to: 0
  5022  000DEC  0E00               	movlw	0
  5023  000DEE  6E94               	movwf	3988,c	;volatile
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
  5027  000DF0  0EF9               	movlw	249
  5028  000DF2  1680               	andwf	3968,f,c	;volatile
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
  5032  000DF4  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  5033  000DF6  EC69  F007         	call	_GLCD_EnableController
  5034                           
  5035                           ;KS0108-PIC18.c: 85: PORTC = commandToWrite;
  5036  000DFA  C06A  FF82         	movff	GLCD_WriteCommand@commandToWrite,3970	;volatile
  5037                           
  5038                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
  5039  000DFE  8680               	bsf	3968,3,c	;volatile
  5040                           
  5041                           ;KS0108-PIC18.c: 87: GLCD_Delay();
  5042  000E00  EC60  F008         	call	_GLCD_Delay	;wreg free
  5043                           
  5044                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
  5045  000E04  9680               	bcf	3968,3,c	;volatile
  5046                           
  5047                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
  5048  000E06  0100               	movlb	0	; () banked
  5049  000E08  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  5050  000E0A  EC7E  F007         	call	_GLCD_DisableController
  5051  000E0E  0012               	return		;funcret
  5052  000E10                     __end_of_GLCD_WriteCommand:
  5053                           	opt stack 0
  5054                           tblptru	equ	0xFF8
  5055                           tblptrh	equ	0xFF7
  5056                           tblptrl	equ	0xFF6
  5057                           tablat	equ	0xFF5
  5058                           prodh	equ	0xFF4
  5059                           prodl	equ	0xFF3
  5060                           intcon	equ	0xFF2
  5061                           postinc0	equ	0xFEE
  5062                           wreg	equ	0xFE8
  5063                           postdec1	equ	0xFE5
  5064                           fsr1l	equ	0xFE1
  5065                           status	equ	0xFD8
  5066                           
  5067 ;; *************** function _GLCD_ReadStatus *****************
  5068 ;; Defined at:
  5069 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  controller      1    wreg     unsigned char 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  controller      1    2[BANK0 ] unsigned char 
  5074 ;;  status          1    1[BANK0 ] unsigned char 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  1    wreg      unsigned char 
  5077 ;; Registers used:
  5078 ;;		wreg, status,2, status,0, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5085 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5087 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5088 ;;Total ram usage:        2 bytes
  5089 ;; Hardware stack levels used:    1
  5090 ;; Hardware stack levels required when called:   10
  5091 ;; This function calls:
  5092 ;;		_GLCD_Delay
  5093 ;;		_GLCD_DisableController
  5094 ;;		_GLCD_EnableController
  5095 ;; This function is called by:
  5096 ;;		_GLCD_WriteCommand
  5097 ;;		_GLCD_ReadData
  5098 ;;		_GLCD_WriteData
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text33
  5103  000EA6                     __ptext33:
  5104                           	opt stack 0
  5105  000EA6                     _GLCD_ReadStatus:
  5106                           	opt stack 16
  5107                           
  5108                           ;incstack = 0
  5109                           ;GLCD_ReadStatus@controller stored from wreg
  5110  000EA6  0100               	movlb	0	; () banked
  5111  000EA8  6F62               	movwf	GLCD_ReadStatus@controller& (0+255),b
  5112                           
  5113                           ;KS0108-PIC18.c: 64: unsigned char status;
  5114                           ;KS0108-PIC18.c: 65: TRISC = 0xFF;
  5115  000EAA  6894               	setf	3988,c	;volatile
  5116                           
  5117                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
  5118  000EAC  8280               	bsf	3968,1,c	;volatile
  5119                           
  5120                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
  5121  000EAE  9480               	bcf	3968,2,c	;volatile
  5122                           
  5123                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
  5124  000EB0  0100               	movlb	0	; () banked
  5125  000EB2  5162               	movf	GLCD_ReadStatus@controller& (0+255),w,b
  5126  000EB4  EC69  F007         	call	_GLCD_EnableController
  5127                           
  5128                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
  5129  000EB8  8680               	bsf	3968,3,c	;volatile
  5130                           
  5131                           ;KS0108-PIC18.c: 70: GLCD_Delay();
  5132  000EBA  EC60  F008         	call	_GLCD_Delay	;wreg free
  5133                           
  5134                           ;KS0108-PIC18.c: 71: status = PORTC;
  5135  000EBE  CF82 F061          	movff	3970,GLCD_ReadStatus@status	;volatile
  5136                           
  5137                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
  5138  000EC2  9680               	bcf	3968,3,c	;volatile
  5139                           
  5140                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
  5141  000EC4  0100               	movlb	0	; () banked
  5142  000EC6  5162               	movf	GLCD_ReadStatus@controller& (0+255),w,b
  5143  000EC8  EC7E  F007         	call	_GLCD_DisableController
  5144                           
  5145                           ;KS0108-PIC18.c: 74: return status;
  5146  000ECC  0100               	movlb	0	; () banked
  5147  000ECE  5161               	movf	GLCD_ReadStatus@status& (0+255),w,b
  5148  000ED0  0012               	return	
  5149  000ED2                     __end_of_GLCD_ReadStatus:
  5150                           	opt stack 0
  5151                           tblptru	equ	0xFF8
  5152                           tblptrh	equ	0xFF7
  5153                           tblptrl	equ	0xFF6
  5154                           tablat	equ	0xFF5
  5155                           prodh	equ	0xFF4
  5156                           prodl	equ	0xFF3
  5157                           intcon	equ	0xFF2
  5158                           postinc0	equ	0xFEE
  5159                           wreg	equ	0xFE8
  5160                           postdec1	equ	0xFE5
  5161                           fsr1l	equ	0xFE1
  5162                           status	equ	0xFD8
  5163                           
  5164 ;; *************** function _GLCD_EnableController *****************
  5165 ;; Defined at:
  5166 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  controller      1    wreg     unsigned char 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  controller      1    0[BANK0 ] unsigned char 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      void 
  5173 ;; Registers used:
  5174 ;;		wreg, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5183 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5184 ;;Total ram usage:        1 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    9
  5187 ;; This function calls:
  5188 ;;		Nothing
  5189 ;; This function is called by:
  5190 ;;		_GLCD_ReadStatus
  5191 ;;		_GLCD_WriteCommand
  5192 ;;		_GLCD_ReadData
  5193 ;;		_GLCD_WriteData
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text34
  5198  000ED2                     __ptext34:
  5199                           	opt stack 0
  5200  000ED2                     _GLCD_EnableController:
  5201                           	opt stack 16
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;incstack = 0
  5205                           ;GLCD_EnableController@controller stored from wreg
  5206  000ED2  0100               	movlb	0	; () banked
  5207  000ED4  6F60               	movwf	GLCD_EnableController@controller& (0+255),b
  5208                           
  5209                           ;KS0108-PIC18.c: 41: switch(controller){
  5210  000ED6  D006               	goto	l522
  5211  000ED8  9A80               	bcf	3968,5,c	;volatile
  5212  000EDA  0012               	return	
  5213  000EDC  9C80               	bcf	3968,6,c	;volatile
  5214  000EDE  0012               	return	
  5215  000EE0  9E80               	bcf	3968,7,c	;volatile
  5216                           
  5217                           ;KS0108-PIC18.c: 45: }
  5218  000EE2  0012               	return	
  5219  000EE4                     l522:
  5220  000EE4  0100               	movlb	0	; () banked
  5221  000EE6  5160               	movf	GLCD_EnableController@controller& (0+255),w,b
  5222                           
  5223                           ; Switch size 1, requested type "space"
  5224                           ; Number of cases is 3, Range of values is 0 to 2
  5225                           ; switch strategies available:
  5226                           ; Name         Instructions Cycles
  5227                           ; simple_byte           10     6 (average)
  5228                           ;	Chosen strategy is simple_byte
  5229  000EE8  0A00               	xorlw	0	; case 0
  5230  000EEA  B4D8               	btfsc	status,2,c
  5231  000EEC  D7F5               	goto	l523
  5232  000EEE  0A01               	xorlw	1	; case 1
  5233  000EF0  B4D8               	btfsc	status,2,c
  5234  000EF2  D7F4               	goto	l525
  5235  000EF4  0A03               	xorlw	3	; case 2
  5236  000EF6  A4D8               	btfss	status,2,c
  5237  000EF8  0012               	return	
  5238  000EFA  D7F2               	goto	l526
  5239  000EFC                     __end_of_GLCD_EnableController:
  5240                           	opt stack 0
  5241                           tblptru	equ	0xFF8
  5242                           tblptrh	equ	0xFF7
  5243                           tblptrl	equ	0xFF6
  5244                           tablat	equ	0xFF5
  5245                           prodh	equ	0xFF4
  5246                           prodl	equ	0xFF3
  5247                           intcon	equ	0xFF2
  5248                           postinc0	equ	0xFEE
  5249                           wreg	equ	0xFE8
  5250                           postdec1	equ	0xFE5
  5251                           fsr1l	equ	0xFE1
  5252                           status	equ	0xFD8
  5253                           
  5254 ;; *************** function _GLCD_DisableController *****************
  5255 ;; Defined at:
  5256 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;  controller      1    wreg     unsigned char 
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  controller      1    0[BANK0 ] unsigned char 
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1    wreg      void 
  5263 ;; Registers used:
  5264 ;;		wreg, status,2, status,0
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5273 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5274 ;;Total ram usage:        1 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:    9
  5277 ;; This function calls:
  5278 ;;		Nothing
  5279 ;; This function is called by:
  5280 ;;		_GLCD_ReadStatus
  5281 ;;		_GLCD_WriteCommand
  5282 ;;		_GLCD_ReadData
  5283 ;;		_GLCD_WriteData
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           	psect	text35
  5288  000EFC                     __ptext35:
  5289                           	opt stack 0
  5290  000EFC                     _GLCD_DisableController:
  5291                           	opt stack 16
  5292                           
  5293                           ;incstack = 0
  5294                           ;GLCD_DisableController@controller stored from wreg
  5295  000EFC  0100               	movlb	0	; () banked
  5296  000EFE  6F60               	movwf	GLCD_DisableController@controller& (0+255),b
  5297                           
  5298                           ;KS0108-PIC18.c: 52: switch(controller)
  5299  000F00  D006               	goto	l530
  5300  000F02  8A80               	bsf	3968,5,c	;volatile
  5301  000F04  0012               	return	
  5302  000F06  8C80               	bsf	3968,6,c	;volatile
  5303  000F08  0012               	return	
  5304  000F0A  8E80               	bsf	3968,7,c	;volatile
  5305                           
  5306                           ;KS0108-PIC18.c: 57: }
  5307  000F0C  0012               	return	
  5308  000F0E                     l530:
  5309  000F0E  0100               	movlb	0	; () banked
  5310  000F10  5160               	movf	GLCD_DisableController@controller& (0+255),w,b
  5311                           
  5312                           ; Switch size 1, requested type "space"
  5313                           ; Number of cases is 3, Range of values is 0 to 2
  5314                           ; switch strategies available:
  5315                           ; Name         Instructions Cycles
  5316                           ; simple_byte           10     6 (average)
  5317                           ;	Chosen strategy is simple_byte
  5318  000F12  0A00               	xorlw	0	; case 0
  5319  000F14  B4D8               	btfsc	status,2,c
  5320  000F16  D7F5               	goto	l531
  5321  000F18  0A01               	xorlw	1	; case 1
  5322  000F1A  B4D8               	btfsc	status,2,c
  5323  000F1C  D7F4               	goto	l533
  5324  000F1E  0A03               	xorlw	3	; case 2
  5325  000F20  A4D8               	btfss	status,2,c
  5326  000F22  0012               	return	
  5327  000F24  D7F2               	goto	l534
  5328  000F26                     __end_of_GLCD_DisableController:
  5329                           	opt stack 0
  5330                           tblptru	equ	0xFF8
  5331                           tblptrh	equ	0xFF7
  5332                           tblptrl	equ	0xFF6
  5333                           tablat	equ	0xFF5
  5334                           prodh	equ	0xFF4
  5335                           prodl	equ	0xFF3
  5336                           intcon	equ	0xFF2
  5337                           postinc0	equ	0xFEE
  5338                           wreg	equ	0xFE8
  5339                           postdec1	equ	0xFE5
  5340                           fsr1l	equ	0xFE1
  5341                           status	equ	0xFD8
  5342                           
  5343 ;; *************** function _GLCD_Delay *****************
  5344 ;; Defined at:
  5345 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;		None
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;		None
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      void 
  5352 ;; Registers used:
  5353 ;;		None
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5363 ;;Total ram usage:        0 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:    9
  5366 ;; This function calls:
  5367 ;;		Nothing
  5368 ;; This function is called by:
  5369 ;;		_GLCD_ReadStatus
  5370 ;;		_GLCD_WriteCommand
  5371 ;;		_GLCD_ReadData
  5372 ;;		_GLCD_WriteData
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text36
  5377  0010C0                     __ptext36:
  5378                           	opt stack 0
  5379  0010C0                     _GLCD_Delay:
  5380                           	opt stack 16
  5381                           
  5382                           ;KS0108-PIC18.c: 26: __nop();
  5383                           
  5384                           ;incstack = 0
  5385  0010C0  F000               	nop	
  5386  0010C2  0012               	return		;funcret
  5387  0010C4                     __end_of_GLCD_Delay:
  5388                           	opt stack 0
  5389                           tblptru	equ	0xFF8
  5390                           tblptrh	equ	0xFF7
  5391                           tblptrl	equ	0xFF6
  5392                           tablat	equ	0xFF5
  5393                           prodh	equ	0xFF4
  5394                           prodl	equ	0xFF3
  5395                           intcon	equ	0xFF2
  5396                           postinc0	equ	0xFEE
  5397                           wreg	equ	0xFE8
  5398                           postdec1	equ	0xFE5
  5399                           fsr1l	equ	0xFE1
  5400                           status	equ	0xFD8
  5401                           
  5402 ;; *************** function _INTERRUPT_InterruptManager *****************
  5403 ;; Defined at:
  5404 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;		None
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      void 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5420 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5421 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5422 ;;Total ram usage:       18 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    8
  5425 ;; This function calls:
  5426 ;;		_PIN_MANAGER_IOC
  5427 ;;		_TMR0_ISR
  5428 ;; This function is called by:
  5429 ;;		Interrupt level 2
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	intcode
  5434  000008                     __pintcode:
  5435                           	opt stack 0
  5436  000008                     _INTERRUPT_InterruptManager:
  5437                           	opt stack 14
  5438                           
  5439                           ;incstack = 0
  5440  000008  8238               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5441  00000A  CFFA F01F          	movff	pclath,??_INTERRUPT_InterruptManager
  5442  00000E  CFFB F020          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5443  000012  CFE9 F021          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  5444  000016  CFEA F022          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  5445  00001A  CFE1 F023          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  5446  00001E  CFE2 F024          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  5447  000022  CFD9 F025          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  5448  000026  CFDA F026          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  5449  00002A  CFF3 F027          	movff	prodl,??_INTERRUPT_InterruptManager+8
  5450  00002E  CFF4 F028          	movff	prodh,??_INTERRUPT_InterruptManager+9
  5451  000032  CFF6 F029          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  5452  000036  CFF7 F02A          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  5453  00003A  CFF8 F02B          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  5454  00003E  CFF5 F02C          	movff	tablat,??_INTERRUPT_InterruptManager+13
  5455  000042  C038  F02D         	movff	btemp,??_INTERRUPT_InterruptManager+14
  5456  000046  C039  F02E         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  5457  00004A  C03A  F02F         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  5458  00004E  C03B  F030         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  5459                           
  5460                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  5461  000052  BAF2               	btfsc	intcon,5,c	;volatile
  5462  000054  A4F2               	btfss	intcon,2,c	;volatile
  5463  000056  D003               	goto	i2l181
  5464                           
  5465                           ;interrupt_manager.c: 61: {
  5466                           ;interrupt_manager.c: 62: TMR0_ISR();
  5467  000058  EC93  F007         	call	_TMR0_ISR	;wreg free
  5468                           
  5469                           ;interrupt_manager.c: 63: }
  5470  00005C  D005               	goto	i2l183
  5471  00005E                     i2l181:
  5472                           
  5473                           ;interrupt_manager.c: 64: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  5474  00005E  B6F2               	btfsc	intcon,3,c	;volatile
  5475  000060  A0F2               	btfss	intcon,0,c	;volatile
  5476  000062  D002               	goto	i2l183
  5477                           
  5478                           ;interrupt_manager.c: 65: {
  5479                           ;interrupt_manager.c: 66: PIN_MANAGER_IOC();
  5480  000064  ECCA  F001         	call	_PIN_MANAGER_IOC	;wreg free
  5481  000068                     i2l183:
  5482                           
  5483                           ;interrupt_manager.c: 68: else
  5484                           ;interrupt_manager.c: 69: {
  5485  000068  C030  F03B         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  5486  00006C  C02F  F03A         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  5487  000070  C02E  F039         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  5488  000074  C02D  F038         	movff	??_INTERRUPT_InterruptManager+14,btemp
  5489  000078  C02C  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  5490  00007C  C02B  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  5491  000080  C02A  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  5492  000084  C029  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  5493  000088  C028  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  5494  00008C  C027  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  5495  000090  C026  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  5496  000094  C025  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  5497  000098  C024  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  5498  00009C  C023  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  5499  0000A0  C022  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  5500  0000A4  C021  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  5501  0000A8  C020  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5502  0000AC  C01F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5503  0000B0  9238               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5504  0000B2  0011               	retfie		f
  5505  0000B4                     __end_of_INTERRUPT_InterruptManager:
  5506                           	opt stack 0
  5507                           pclatu	equ	0xFFB
  5508                           pclath	equ	0xFFA
  5509                           tblptru	equ	0xFF8
  5510                           tblptrh	equ	0xFF7
  5511                           tblptrl	equ	0xFF6
  5512                           tablat	equ	0xFF5
  5513                           prodh	equ	0xFF4
  5514                           prodl	equ	0xFF3
  5515                           intcon	equ	0xFF2
  5516                           postinc0	equ	0xFEE
  5517                           fsr0h	equ	0xFEA
  5518                           fsr0l	equ	0xFE9
  5519                           wreg	equ	0xFE8
  5520                           postdec1	equ	0xFE5
  5521                           fsr1h	equ	0xFE2
  5522                           fsr1l	equ	0xFE1
  5523                           fsr2h	equ	0xFDA
  5524                           fsr2l	equ	0xFD9
  5525                           status	equ	0xFD8
  5526                           
  5527 ;; *************** function _TMR0_ISR *****************
  5528 ;; Defined at:
  5529 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;		None
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;		None
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  1    wreg      void 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5547 ;;Total ram usage:        0 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:    1
  5550 ;; This function calls:
  5551 ;;		Absolute function
  5552 ;;		_TMR0_DefaultInterruptHandler
  5553 ;; This function is called by:
  5554 ;;		_INTERRUPT_InterruptManager
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text38
  5559  000F26                     __ptext38:
  5560                           	opt stack 0
  5561  000F26                     _TMR0_ISR:
  5562                           	opt stack 20
  5563                           
  5564                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
  5565                           
  5566                           ;incstack = 0
  5567  000F26  94F2               	bcf	intcon,2,c	;volatile
  5568                           
  5569                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
  5570  000F28  0100               	movlb	0	; () banked
  5571  000F2A  5195               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
  5572  000F2C  6ED7               	movwf	4055,c	;volatile
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
  5576  000F2E  C094  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;tmr0.c: 145: if(TMR0_InterruptHandler)
  5580  000F32  5196               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5581  000F34  1197               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5582  000F36  B4D8               	btfsc	status,2,c
  5583  000F38  0012               	return	
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;tmr0.c: 146: {
  5587                           ;tmr0.c: 147: TMR0_InterruptHandler();
  5588  000F3A  D801               	call	i2u150_48
  5589  000F3C  0012               	return	
  5590  000F3E                     i2u150_48:
  5591  000F3E  0005               	push	
  5592  000F40  6EFA               	movwf	pclath,c
  5593  000F42  5196               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5594  000F44  6EFD               	movwf	tosl,c
  5595  000F46  5197               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5596  000F48  6EFE               	movwf	tosh,c
  5597  000F4A  6AFF               	clrf	tosu,c
  5598  000F4C  50FA               	movf	pclath,w,c
  5599  000F4E  0012               	return		;indir
  5600  000F50                     __end_of_TMR0_ISR:
  5601                           	opt stack 0
  5602                           tosu	equ	0xFFF
  5603                           tosh	equ	0xFFE
  5604                           tosl	equ	0xFFD
  5605                           pclatu	equ	0xFFB
  5606                           pclath	equ	0xFFA
  5607                           tblptru	equ	0xFF8
  5608                           tblptrh	equ	0xFF7
  5609                           tblptrl	equ	0xFF6
  5610                           tablat	equ	0xFF5
  5611                           prodh	equ	0xFF4
  5612                           prodl	equ	0xFF3
  5613                           intcon	equ	0xFF2
  5614                           postinc0	equ	0xFEE
  5615                           fsr0h	equ	0xFEA
  5616                           fsr0l	equ	0xFE9
  5617                           wreg	equ	0xFE8
  5618                           postdec1	equ	0xFE5
  5619                           fsr1h	equ	0xFE2
  5620                           fsr1l	equ	0xFE1
  5621                           fsr2h	equ	0xFDA
  5622                           fsr2l	equ	0xFD9
  5623                           status	equ	0xFD8
  5624                           
  5625 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5626 ;; Defined at:
  5627 ;;		line 158 in file "mcc_generated_files/tmr0.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;		None
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;		None
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      void 
  5634 ;; Registers used:
  5635 ;;		None
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5645 ;;Total ram usage:        0 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; This function calls:
  5648 ;;		Nothing
  5649 ;; This function is called by:
  5650 ;;		_TMR0_Initialize
  5651 ;;		_TMR0_ISR
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text39
  5656  0010CA                     __ptext39:
  5657                           	opt stack 0
  5658  0010CA                     _TMR0_DefaultInterruptHandler:
  5659                           	opt stack 20
  5660                           
  5661                           ;incstack = 0
  5662  0010CA  0012               	return		;funcret
  5663  0010CC                     __end_of_TMR0_DefaultInterruptHandler:
  5664                           	opt stack 0
  5665                           tosu	equ	0xFFF
  5666                           tosh	equ	0xFFE
  5667                           tosl	equ	0xFFD
  5668                           pclatu	equ	0xFFB
  5669                           pclath	equ	0xFFA
  5670                           tblptru	equ	0xFF8
  5671                           tblptrh	equ	0xFF7
  5672                           tblptrl	equ	0xFF6
  5673                           tablat	equ	0xFF5
  5674                           prodh	equ	0xFF4
  5675                           prodl	equ	0xFF3
  5676                           intcon	equ	0xFF2
  5677                           postinc0	equ	0xFEE
  5678                           fsr0h	equ	0xFEA
  5679                           fsr0l	equ	0xFE9
  5680                           wreg	equ	0xFE8
  5681                           postdec1	equ	0xFE5
  5682                           fsr1h	equ	0xFE2
  5683                           fsr1l	equ	0xFE1
  5684                           fsr2h	equ	0xFDA
  5685                           fsr2l	equ	0xFD9
  5686                           status	equ	0xFD8
  5687                           
  5688 ;; *************** function _PIN_MANAGER_IOC *****************
  5689 ;; Defined at:
  5690 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;		None
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  result          1   29[COMRAM] unsigned char 
  5695 ;;  currentState    1   28[COMRAM] unsigned char 
  5696 ;;  CHB             1   27[COMRAM] unsigned char 
  5697 ;;  CHA             1   26[COMRAM] unsigned char 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  1    wreg      void 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5708 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5711 ;;Total ram usage:        6 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    7
  5714 ;; This function calls:
  5715 ;;		_Main_Menu_Function
  5716 ;;		i2_GLCD_GoTo
  5717 ;;		i2_GLCD_WriteChar
  5718 ;; This function is called by:
  5719 ;;		_INTERRUPT_InterruptManager
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text40
  5724  000394                     __ptext40:
  5725                           	opt stack 0
  5726  000394                     _PIN_MANAGER_IOC:
  5727                           	opt stack 14
  5728                           
  5729                           ;pin_manager.c: 138: static unsigned char previousState;
  5730                           ;pin_manager.c: 139: unsigned char currentState;
  5731                           ;pin_manager.c: 140: unsigned char result;
  5732                           ;pin_manager.c: 141: static unsigned char cw_count = 0;
  5733                           ;pin_manager.c: 142: static unsigned char ccw_count = 0;
  5734                           ;pin_manager.c: 143: unsigned char CHA, CHB;
  5735                           ;pin_manager.c: 147: CHA = PORTBbits.RB5;
  5736                           
  5737                           ;incstack = 0
  5738  000394  0E00               	movlw	0
  5739  000396  BA81               	btfsc	3969,5,c	;volatile
  5740  000398  0E01               	movlw	1
  5741  00039A  6E1B               	movwf	PIN_MANAGER_IOC@CHA,c
  5742                           
  5743                           ;pin_manager.c: 148: CHB = PORTBbits.RB4;
  5744  00039C  0E00               	movlw	0
  5745  00039E  B881               	btfsc	3969,4,c	;volatile
  5746  0003A0  0E01               	movlw	1
  5747  0003A2  6E1C               	movwf	PIN_MANAGER_IOC@CHB,c
  5748                           
  5749                           ;pin_manager.c: 150: currentState = (PORTBbits.RB5 << 1) | PORTBbits.RB4;
  5750  0003A4  A881               	btfss	3969,4,c	;volatile
  5751  0003A6  D003               	goto	i2u144_40
  5752  0003A8  6A19               	clrf	??_PIN_MANAGER_IOC& (0+255),c
  5753  0003AA  2A19               	incf	??_PIN_MANAGER_IOC& (0+255),f,c
  5754  0003AC  D001               	goto	i2u144_48
  5755  0003AE                     i2u144_40:
  5756  0003AE  6A19               	clrf	??_PIN_MANAGER_IOC& (0+255),c
  5757  0003B0                     i2u144_48:
  5758  0003B0  AA81               	btfss	3969,5,c	;volatile
  5759  0003B2  D003               	goto	i2u145_40
  5760  0003B4  6A1A               	clrf	(??_PIN_MANAGER_IOC+1)& (0+255),c
  5761  0003B6  2A1A               	incf	(??_PIN_MANAGER_IOC+1)& (0+255),f,c
  5762  0003B8  D001               	goto	i2u145_48
  5763  0003BA                     i2u145_40:
  5764  0003BA  6A1A               	clrf	(??_PIN_MANAGER_IOC+1)& (0+255),c
  5765  0003BC                     i2u145_48:
  5766  0003BC  90D8               	bcf	status,0,c
  5767  0003BE  341A               	rlcf	??_PIN_MANAGER_IOC+1,w,c
  5768  0003C0  1019               	iorwf	??_PIN_MANAGER_IOC,w,c
  5769  0003C2  6E1D               	movwf	PIN_MANAGER_IOC@currentState,c
  5770                           
  5771                           ;pin_manager.c: 152: GLCD_GoTo(75,3);
  5772  0003C4  0E03               	movlw	3
  5773  0003C6  6E0C               	movwf	i2GLCD_GoTo@y,c
  5774  0003C8  0E4B               	movlw	75
  5775  0003CA  EC98  F003         	call	i2_GLCD_GoTo
  5776                           
  5777                           ;pin_manager.c: 154: GLCD_WriteChar(CHA + 48);
  5778  0003CE  501B               	movf	PIN_MANAGER_IOC@CHA,w,c
  5779  0003D0  0F30               	addlw	48
  5780  0003D2  EC45  F006         	call	i2_GLCD_WriteChar
  5781                           
  5782                           ;pin_manager.c: 155: GLCD_WriteChar(CHB + 48);
  5783  0003D6  501C               	movf	PIN_MANAGER_IOC@CHB,w,c
  5784  0003D8  0F30               	addlw	48
  5785  0003DA  EC45  F006         	call	i2_GLCD_WriteChar
  5786                           
  5787                           ;pin_manager.c: 159: result = (previousState & 0x01) ^ ((currentState >> 1) & 0x01);
  5788  0003DE  C01D  F019         	movff	PIN_MANAGER_IOC@currentState,??_PIN_MANAGER_IOC
  5789  0003E2  90D8               	bcf	status,0,c
  5790  0003E4  3219               	rrcf	??_PIN_MANAGER_IOC,f,c
  5791  0003E6  0E01               	movlw	1
  5792  0003E8  1619               	andwf	??_PIN_MANAGER_IOC,f,c
  5793  0003EA  5033               	movf	PIN_MANAGER_IOC@previousState,w,c
  5794  0003EC  0B01               	andlw	1
  5795  0003EE  1819               	xorwf	??_PIN_MANAGER_IOC,w,c
  5796  0003F0  6E1E               	movwf	PIN_MANAGER_IOC@result,c
  5797                           
  5798                           ;pin_manager.c: 161: if(result)
  5799  0003F2  501E               	movf	PIN_MANAGER_IOC@result,w,c
  5800  0003F4  B4D8               	btfsc	status,2,c
  5801  0003F6  D002               	goto	i2l120
  5802                           
  5803                           ;pin_manager.c: 162: {
  5804                           ;pin_manager.c: 163: cw_count++;
  5805  0003F8  2A32               	incf	PIN_MANAGER_IOC@cw_count,f,c
  5806                           
  5807                           ;pin_manager.c: 164: }
  5808  0003FA  D001               	goto	i2l121
  5809  0003FC                     i2l120:
  5810                           
  5811                           ;pin_manager.c: 165: else
  5812                           ;pin_manager.c: 166: {
  5813                           ;pin_manager.c: 167: ccw_count++;
  5814  0003FC  2A31               	incf	PIN_MANAGER_IOC@ccw_count,f,c
  5815  0003FE                     i2l121:
  5816                           
  5817                           ;pin_manager.c: 168: }
  5818                           ;pin_manager.c: 170: if(cw_count >= 3 | ccw_count >= 3)
  5819  0003FE  0E03               	movlw	3
  5820  000400  6032               	cpfslt	PIN_MANAGER_IOC@cw_count,c
  5821  000402  D003               	goto	i2u148_40
  5822  000404  0E02               	movlw	2
  5823  000406  6431               	cpfsgt	PIN_MANAGER_IOC@ccw_count,c
  5824  000408  D034               	goto	i2l127
  5825  00040A                     i2u148_40:
  5826                           
  5827                           ;pin_manager.c: 171: {
  5828                           ;pin_manager.c: 172: _delay((unsigned long)((10)*(8000000/4000.0)));
  5829  00040A  0E1A               	movlw	26
  5830  00040C  6E19               	movwf	??_PIN_MANAGER_IOC& (0+255),c
  5831  00040E  0EF8               	movlw	248
  5832  000410                     i2u171_47:
  5833  000410  2EE8               	decfsz	wreg,f,c
  5834  000412  D7FE               	bra	i2u171_47
  5835  000414  2E19               	decfsz	??_PIN_MANAGER_IOC& (0+255),f,c
  5836  000416  D7FC               	bra	i2u171_47
  5837  000418  D000               	nop2	
  5838                           
  5839                           ;pin_manager.c: 173: cw_count = 0;
  5840  00041A  0E00               	movlw	0
  5841  00041C  6E32               	movwf	PIN_MANAGER_IOC@cw_count,c
  5842                           
  5843                           ;pin_manager.c: 174: ccw_count = 0;
  5844  00041E  0E00               	movlw	0
  5845  000420  6E31               	movwf	PIN_MANAGER_IOC@ccw_count,c
  5846                           
  5847                           ;pin_manager.c: 175: switch(currentContext)
  5848  000422  D008               	goto	i2l125
  5849  000424  501E               	movf	PIN_MANAGER_IOC@result,w,c
  5850  000426  ECF1  F007         	call	_Main_Menu_Function
  5851                           
  5852                           ;pin_manager.c: 186: case selectStateMenu: break;
  5853                           
  5854                           ;pin_manager.c: 185: case backlightMenu: break;
  5855                           
  5856                           ;pin_manager.c: 184: case endColorGreen: break;
  5857                           
  5858                           ;pin_manager.c: 183: case endColorBlue: break;
  5859                           
  5860                           ;pin_manager.c: 182: case endColorRed: break;
  5861                           
  5862                           ;pin_manager.c: 181: case startColorGreen: break;
  5863                           
  5864                           ;pin_manager.c: 180: case startColorBlue: break;
  5865                           
  5866                           ;pin_manager.c: 179: case startColorRed: break;
  5867                           
  5868                           ;pin_manager.c: 178: case brightnessMenu: break;
  5869  00042A  D023               	goto	i2l127
  5870  00042C  501E               	movf	PIN_MANAGER_IOC@result,w,c
  5871  00042E  ECF1  F007         	call	_Main_Menu_Function
  5872                           
  5873                           ;pin_manager.c: 190: }
  5874  000432  D01F               	goto	i2l127
  5875  000434                     i2l125:
  5876  000434  5034               	movf	_currentContext,w,c
  5877                           
  5878                           ; Switch size 1, requested type "space"
  5879                           ; Number of cases is 10, Range of values is 0 to 10
  5880                           ; switch strategies available:
  5881                           ; Name         Instructions Cycles
  5882                           ; simple_byte           31    16 (average)
  5883                           ;	Chosen strategy is simple_byte
  5884  000436  0A00               	xorlw	0	; case 0
  5885  000438  B4D8               	btfsc	status,2,c
  5886  00043A  D7F4               	goto	i2l126
  5887  00043C  0A02               	xorlw	2	; case 2
  5888  00043E  B4D8               	btfsc	status,2,c
  5889  000440  D018               	goto	i2l127
  5890  000442  0A01               	xorlw	1	; case 3
  5891  000444  B4D8               	btfsc	status,2,c
  5892  000446  D015               	goto	i2l127
  5893  000448  0A07               	xorlw	7	; case 4
  5894  00044A  B4D8               	btfsc	status,2,c
  5895  00044C  D012               	goto	i2l127
  5896  00044E  0A01               	xorlw	1	; case 5
  5897  000450  B4D8               	btfsc	status,2,c
  5898  000452  D00F               	goto	i2l127
  5899  000454  0A03               	xorlw	3	; case 6
  5900  000456  B4D8               	btfsc	status,2,c
  5901  000458  D00C               	goto	i2l127
  5902  00045A  0A01               	xorlw	1	; case 7
  5903  00045C  B4D8               	btfsc	status,2,c
  5904  00045E  D009               	goto	i2l127
  5905  000460  0A0F               	xorlw	15	; case 8
  5906  000462  B4D8               	btfsc	status,2,c
  5907  000464  D006               	goto	i2l127
  5908  000466  0A01               	xorlw	1	; case 9
  5909  000468  B4D8               	btfsc	status,2,c
  5910  00046A  D003               	goto	i2l127
  5911  00046C  0A03               	xorlw	3	; case 10
  5912  00046E  A4D8               	btfss	status,2,c
  5913  000470  D7DD               	goto	i2l137
  5914  000472                     i2l127:
  5915                           
  5916                           ;pin_manager.c: 191: }
  5917                           ;pin_manager.c: 193: previousState = currentState;
  5918  000472  C01D  F033         	movff	PIN_MANAGER_IOC@currentState,PIN_MANAGER_IOC@previousState
  5919                           
  5920                           ;pin_manager.c: 197: PORTB = PORTB;
  5921  000476  CF81 FF81          	movff	3969,3969	;volatile
  5922                           
  5923                           ;pin_manager.c: 199: INTCONbits.RBIF = 0;
  5924  00047A  90F2               	bcf	intcon,0,c	;volatile
  5925  00047C  0012               	return		;funcret
  5926  00047E                     __end_of_PIN_MANAGER_IOC:
  5927                           	opt stack 0
  5928                           tosu	equ	0xFFF
  5929                           tosh	equ	0xFFE
  5930                           tosl	equ	0xFFD
  5931                           pclatu	equ	0xFFB
  5932                           pclath	equ	0xFFA
  5933                           tblptru	equ	0xFF8
  5934                           tblptrh	equ	0xFF7
  5935                           tblptrl	equ	0xFF6
  5936                           tablat	equ	0xFF5
  5937                           prodh	equ	0xFF4
  5938                           prodl	equ	0xFF3
  5939                           intcon	equ	0xFF2
  5940                           postinc0	equ	0xFEE
  5941                           fsr0h	equ	0xFEA
  5942                           fsr0l	equ	0xFE9
  5943                           wreg	equ	0xFE8
  5944                           postdec1	equ	0xFE5
  5945                           fsr1h	equ	0xFE2
  5946                           fsr1l	equ	0xFE1
  5947                           fsr2h	equ	0xFDA
  5948                           fsr2l	equ	0xFD9
  5949                           status	equ	0xFD8
  5950                           
  5951 ;; *************** function i2_GLCD_WriteChar *****************
  5952 ;; Defined at:
  5953 ;;		line 56 in file "ks0108lib/KS0108.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;  charToWrite     1    wreg     unsigned char 
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;  charToWrite     1   10[COMRAM] unsigned char 
  5958 ;;  GLCD_WriteCh    2   11[COMRAM] int 
  5959 ;; Return value:  Size  Location     Type
  5960 ;;                  1    wreg      void 
  5961 ;; Registers used:
  5962 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5969 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5971 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5972 ;;Total ram usage:        3 bytes
  5973 ;; Hardware stack levels used:    1
  5974 ;; Hardware stack levels required when called:    3
  5975 ;; This function calls:
  5976 ;;		i2_GLCD_WriteData
  5977 ;; This function is called by:
  5978 ;;		_PIN_MANAGER_IOC
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           	psect	text41
  5983  000C8A                     __ptext41:
  5984                           	opt stack 0
  5985  000C8A                     i2_GLCD_WriteChar:
  5986                           	opt stack 17
  5987                           
  5988                           ;incstack = 0
  5989                           ;i2GLCD_WriteChar@charToWrite stored from wreg
  5990  000C8A  6E0B               	movwf	i2GLCD_WriteChar@charToWrite,c
  5991                           
  5992                           ;KS0108.c: 58: int i;
  5993                           ;KS0108.c: 59: charToWrite -= 32;
  5994  000C8C  0E20               	movlw	32
  5995  000C8E  5E0B               	subwf	i2GLCD_WriteChar@charToWrite,f,c
  5996                           
  5997                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
  5998  000C90  0E00               	movlw	0
  5999  000C92  6E0D               	movwf	i2GLCD_WriteChar@i+1,c
  6000  000C94  0E00               	movlw	0
  6001  000C96  6E0C               	movwf	i2GLCD_WriteChar@i,c
  6002  000C98                     i2l3019:
  6003  000C98  BE0D               	btfsc	i2GLCD_WriteChar@i+1,7,c
  6004  000C9A  D006               	goto	i2l481
  6005  000C9C  500D               	movf	i2GLCD_WriteChar@i+1,w,c
  6006  000C9E  E11A               	bnz	i2l3029
  6007  000CA0  0E05               	movlw	5
  6008  000CA2  5C0C               	subwf	i2GLCD_WriteChar@i,w,c
  6009  000CA4  B0D8               	btfsc	status,0,c
  6010  000CA6  D016               	goto	i2u143_40
  6011  000CA8                     i2l481:
  6012                           
  6013                           ;KS0108.c: 61: {
  6014                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
  6015  000CA8  500B               	movf	i2GLCD_WriteChar@charToWrite,w,c
  6016  000CAA  0D05               	mullw	5
  6017  000CAC  500C               	movf	i2GLCD_WriteChar@i,w,c
  6018  000CAE  26F3               	addwf	prodl,f,c
  6019  000CB0  500D               	movf	i2GLCD_WriteChar@i+1,w,c
  6020  000CB2  22F4               	addwfc	prodh,f,c
  6021  000CB4  0EB1               	movlw	low _font5x8
  6022  000CB6  24F3               	addwf	prodl,w,c
  6023  000CB8  6EF6               	movwf	tblptrl,c
  6024  000CBA  0EFD               	movlw	high _font5x8
  6025  000CBC  20F4               	addwfc	prodh,w,c
  6026  000CBE  6EF7               	movwf	tblptrh,c
  6027  000CC0                     	if	1	;There are 3 active tblptr bytes
  6028  000CC0  6AF8               	clrf	tblptru,c
  6029  000CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  6030  000CC4  22F8               	addwfc	tblptru,f,c
  6031  000CC6                     	endif
  6032  000CC6  0008               	tblrd		*
  6033  000CC8  50F5               	movf	tablat,w,c
  6034  000CCA  EC86  F004         	call	i2_GLCD_WriteData
  6035  000CCE  4A0C               	infsnz	i2GLCD_WriteChar@i,f,c
  6036  000CD0  2A0D               	incf	i2GLCD_WriteChar@i+1,f,c
  6037  000CD2  D7E2               	goto	i2l3019
  6038  000CD4                     i2u143_40:
  6039  000CD4                     i2l3029:
  6040                           
  6041                           ;KS0108.c: 64: }
  6042                           ;KS0108.c: 65: GLCD_WriteData(0x00);
  6043  000CD4  0E00               	movlw	0
  6044  000CD6  EC86  F004         	call	i2_GLCD_WriteData
  6045  000CDA  0012               	return		;funcret
  6046  000CDC                     __end_ofi2_GLCD_WriteChar:
  6047                           	opt stack 0
  6048                           tosu	equ	0xFFF
  6049                           tosh	equ	0xFFE
  6050                           tosl	equ	0xFFD
  6051                           pclatu	equ	0xFFB
  6052                           pclath	equ	0xFFA
  6053                           tblptru	equ	0xFF8
  6054                           tblptrh	equ	0xFF7
  6055                           tblptrl	equ	0xFF6
  6056                           tablat	equ	0xFF5
  6057                           prodh	equ	0xFF4
  6058                           prodl	equ	0xFF3
  6059                           intcon	equ	0xFF2
  6060                           postinc0	equ	0xFEE
  6061                           fsr0h	equ	0xFEA
  6062                           fsr0l	equ	0xFE9
  6063                           wreg	equ	0xFE8
  6064                           postdec1	equ	0xFE5
  6065                           fsr1h	equ	0xFE2
  6066                           fsr1l	equ	0xFE1
  6067                           fsr2h	equ	0xFDA
  6068                           fsr2l	equ	0xFD9
  6069                           status	equ	0xFD8
  6070                           
  6071 ;; *************** function _Main_Menu_Function *****************
  6072 ;; Defined at:
  6073 ;;		line 204 in file "mcc_generated_files/pin_manager.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  result          1    wreg     unsigned char 
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;  result          1   23[COMRAM] unsigned char 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  1    wreg      void 
  6080 ;; Registers used:
  6081 ;;		wreg, status,2, status,0, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6090 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6091 ;;Total ram usage:        1 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; Hardware stack levels required when called:    6
  6094 ;; This function calls:
  6095 ;;		i2_Draw_Arrow
  6096 ;; This function is called by:
  6097 ;;		_PIN_MANAGER_IOC
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101                           	psect	text42
  6102  000FE2                     __ptext42:
  6103                           	opt stack 0
  6104  000FE2                     _Main_Menu_Function:
  6105                           	opt stack 14
  6106                           
  6107                           ;incstack = 0
  6108                           ;Main_Menu_Function@result stored from wreg
  6109  000FE2  6E18               	movwf	Main_Menu_Function@result,c
  6110                           
  6111                           ;pin_manager.c: 206: if(result)
  6112  000FE4  5018               	movf	Main_Menu_Function@result,w,c
  6113  000FE6  B4D8               	btfsc	status,2,c
  6114  000FE8  D005               	goto	i2l141
  6115                           
  6116                           ;pin_manager.c: 207: {
  6117                           ;pin_manager.c: 208: if(mainState < selectState) mainState = mainState + 1;
  6118  000FEA  0E07               	movlw	7
  6119  000FEC  6035               	cpfslt	_mainState,c
  6120  000FEE  D007               	goto	i2l144
  6121  000FF0  2835               	incf	_mainState,w,c
  6122  000FF2  D004               	goto	L5
  6123  000FF4                     i2l141:
  6124                           
  6125                           ;pin_manager.c: 210: else
  6126                           ;pin_manager.c: 211: {
  6127                           ;pin_manager.c: 212: if(mainState > setRunTime) mainState = mainState - 1;
  6128  000FF4  0E02               	movlw	2
  6129  000FF6  6435               	cpfsgt	_mainState,c
  6130  000FF8  D002               	goto	i2l144
  6131  000FFA  0435               	decf	_mainState,w,c
  6132  000FFC                     L5:
  6133  000FFC  6E35               	movwf	_mainState,c
  6134  000FFE                     i2l144:
  6135                           
  6136                           ;pin_manager.c: 213: }
  6137                           ;pin_manager.c: 216: Draw_Arrow();
  6138  000FFE  EC90  F006         	call	i2_Draw_Arrow	;wreg free
  6139  001002  0012               	return		;funcret
  6140  001004                     __end_of_Main_Menu_Function:
  6141                           	opt stack 0
  6142                           tosu	equ	0xFFF
  6143                           tosh	equ	0xFFE
  6144                           tosl	equ	0xFFD
  6145                           pclatu	equ	0xFFB
  6146                           pclath	equ	0xFFA
  6147                           tblptru	equ	0xFF8
  6148                           tblptrh	equ	0xFF7
  6149                           tblptrl	equ	0xFF6
  6150                           tablat	equ	0xFF5
  6151                           prodh	equ	0xFF4
  6152                           prodl	equ	0xFF3
  6153                           intcon	equ	0xFF2
  6154                           postinc0	equ	0xFEE
  6155                           fsr0h	equ	0xFEA
  6156                           fsr0l	equ	0xFE9
  6157                           wreg	equ	0xFE8
  6158                           postdec1	equ	0xFE5
  6159                           fsr1h	equ	0xFE2
  6160                           fsr1l	equ	0xFE1
  6161                           fsr2h	equ	0xFDA
  6162                           fsr2l	equ	0xFD9
  6163                           status	equ	0xFD8
  6164                           
  6165 ;; *************** function i2_Draw_Arrow *****************
  6166 ;; Defined at:
  6167 ;;		line 42 in file "screen_controls.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;		None
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;		None
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      void 
  6174 ;; Registers used:
  6175 ;;		wreg, status,2, status,0, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6185 ;;Total ram usage:        0 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:    5
  6188 ;; This function calls:
  6189 ;;		i2_Clear_Arrow_Column
  6190 ;;		i2_Clear_runTime_Arrows
  6191 ;;		i2_Draw_runTime_Arrow
  6192 ;;		i2_GLCD_GoTo
  6193 ;;		i2_Make_Arrow
  6194 ;; This function is called by:
  6195 ;;		_Main_Menu_Function
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text43
  6200  000D20                     __ptext43:
  6201                           	opt stack 0
  6202  000D20                     i2_Draw_Arrow:
  6203                           	opt stack 14
  6204                           
  6205                           ;screen_controls.c: 46: switch(currentContext)
  6206                           
  6207                           ;incstack = 0
  6208  000D20  D019               	goto	i2l599
  6209  000D22                     
  6210                           ;screen_controls.c: 49: Clear_Arrow_Column();
  6211  000D22  ECEA  F004         	call	i2_Clear_Arrow_Column	;wreg free
  6212                           
  6213                           ;screen_controls.c: 50: GLCD_GoTo(0, mainState);
  6214  000D26  C035  F00C         	movff	_mainState,i2GLCD_GoTo@y
  6215  000D2A  0E00               	movlw	0
  6216  000D2C  EC98  F003         	call	i2_GLCD_GoTo
  6217                           
  6218                           ;screen_controls.c: 51: Make_Arrow();
  6219  000D30  EC31  F008         	call	i2_Make_Arrow	;wreg free
  6220                           
  6221                           ;screen_controls.c: 52: break;
  6222  000D34  0012               	return	
  6223  000D36                     
  6224                           ;screen_controls.c: 55: Clear_runTime_Arrows();
  6225  000D36  EC1B  F006         	call	i2_Clear_runTime_Arrows	;wreg free
  6226                           
  6227                           ;screen_controls.c: 56: Draw_runTime_Arrow();
  6228  000D3A  ECC6  F005         	call	i2_Draw_runTime_Arrow	;wreg free
  6229                           
  6230                           ;screen_controls.c: 57: break;
  6231  000D3E  0012               	return	
  6232  000D40                     
  6233                           ;screen_controls.c: 60: Clear_Arrow_Column();
  6234  000D40  ECEA  F004         	call	i2_Clear_Arrow_Column	;wreg free
  6235                           
  6236                           ;screen_controls.c: 61: GLCD_GoTo(0, mainState);
  6237  000D44  C035  F00C         	movff	_mainState,i2GLCD_GoTo@y
  6238  000D48  0E00               	movlw	0
  6239  000D4A  EC98  F003         	call	i2_GLCD_GoTo
  6240                           
  6241                           ;screen_controls.c: 62: Make_Arrow();
  6242  000D4E  EC31  F008         	call	i2_Make_Arrow	;wreg free
  6243                           
  6244                           ;screen_controls.c: 64: }
  6245                           
  6246                           ;screen_controls.c: 63: break;
  6247  000D52  0012               	return	
  6248  000D54                     i2l599:
  6249  000D54  5034               	movf	_currentContext,w,c
  6250                           
  6251                           ; Switch size 1, requested type "space"
  6252                           ; Number of cases is 2, Range of values is 0 to 1
  6253                           ; switch strategies available:
  6254                           ; Name         Instructions Cycles
  6255                           ; simple_byte            7     4 (average)
  6256                           ;	Chosen strategy is simple_byte
  6257  000D56  0A00               	xorlw	0	; case 0
  6258  000D58  B4D8               	btfsc	status,2,c
  6259  000D5A  D7E3               	goto	i2l600
  6260  000D5C  0A01               	xorlw	1	; case 1
  6261  000D5E  B4D8               	btfsc	status,2,c
  6262  000D60  D7EA               	goto	i2l602
  6263  000D62  D7EE               	goto	i2l603
  6264  000D64                     __end_ofi2_Draw_Arrow:
  6265                           	opt stack 0
  6266                           tosu	equ	0xFFF
  6267                           tosh	equ	0xFFE
  6268                           tosl	equ	0xFFD
  6269                           pclatu	equ	0xFFB
  6270                           pclath	equ	0xFFA
  6271                           tblptru	equ	0xFF8
  6272                           tblptrh	equ	0xFF7
  6273                           tblptrl	equ	0xFF6
  6274                           tablat	equ	0xFF5
  6275                           prodh	equ	0xFF4
  6276                           prodl	equ	0xFF3
  6277                           intcon	equ	0xFF2
  6278                           postinc0	equ	0xFEE
  6279                           fsr0h	equ	0xFEA
  6280                           fsr0l	equ	0xFE9
  6281                           wreg	equ	0xFE8
  6282                           postdec1	equ	0xFE5
  6283                           fsr1h	equ	0xFE2
  6284                           fsr1l	equ	0xFE1
  6285                           fsr2h	equ	0xFDA
  6286                           fsr2l	equ	0xFD9
  6287                           status	equ	0xFD8
  6288                           
  6289 ;; *************** function i2_Draw_runTime_Arrow *****************
  6290 ;; Defined at:
  6291 ;;		line 124 in file "screen_controls.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;		None
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;		None
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  1    wreg      void 
  6298 ;; Registers used:
  6299 ;;		wreg, status,2, status,0, cstack
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6309 ;;Total ram usage:        0 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; Hardware stack levels required when called:    4
  6312 ;; This function calls:
  6313 ;;		i2_GLCD_GoTo
  6314 ;;		i2_Make_Arrow
  6315 ;; This function is called by:
  6316 ;;		i2_Draw_Arrow
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text44
  6321  000B8C                     __ptext44:
  6322                           	opt stack 0
  6323  000B8C                     i2_Draw_runTime_Arrow:
  6324                           	opt stack 14
  6325                           
  6326                           ;screen_controls.c: 126: switch(runTimeContext)
  6327                           
  6328                           ;incstack = 0
  6329  000B8C  D021               	goto	i2l630
  6330  000B8E                     
  6331                           ;screen_controls.c: 129: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  6332  000B8E  0E02               	movlw	2
  6333  000B90  6E0C               	movwf	i2GLCD_GoTo@y,c
  6334  000B92  0100               	movlb	0	; () banked
  6335  000B94  519E               	movf	_ARROW_SIZE& (0+255),w,b
  6336  000B96  0800               	sublw	0
  6337  000B98  259F               	addwf	_runTimeX& (0+255),w,b
  6338  000B9A  EC98  F003         	call	i2_GLCD_GoTo
  6339                           
  6340                           ;screen_controls.c: 130: Make_Arrow();
  6341  000B9E  EC31  F008         	call	i2_Make_Arrow	;wreg free
  6342                           
  6343                           ;screen_controls.c: 131: break;
  6344  000BA2  0012               	return	
  6345  000BA4                     
  6346                           ;screen_controls.c: 134: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  6347  000BA4  0E04               	movlw	4
  6348  000BA6  6E0C               	movwf	i2GLCD_GoTo@y,c
  6349  000BA8  0100               	movlb	0	; () banked
  6350  000BAA  519E               	movf	_ARROW_SIZE& (0+255),w,b
  6351  000BAC  0800               	sublw	0
  6352  000BAE  259F               	addwf	_runTimeX& (0+255),w,b
  6353  000BB0  EC98  F003         	call	i2_GLCD_GoTo
  6354                           
  6355                           ;screen_controls.c: 135: Make_Arrow();
  6356  000BB4  EC31  F008         	call	i2_Make_Arrow	;wreg free
  6357                           
  6358                           ;screen_controls.c: 136: break;
  6359  000BB8  0012               	return	
  6360  000BBA                     
  6361                           ;screen_controls.c: 139: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  6362  000BBA  0E02               	movlw	2
  6363  000BBC  6E0C               	movwf	i2GLCD_GoTo@y,c
  6364  000BBE  0100               	movlb	0	; () banked
  6365  000BC0  519E               	movf	_ARROW_SIZE& (0+255),w,b
  6366  000BC2  0800               	sublw	0
  6367  000BC4  259F               	addwf	_runTimeX& (0+255),w,b
  6368  000BC6  EC98  F003         	call	i2_GLCD_GoTo
  6369                           
  6370                           ;screen_controls.c: 140: Make_Arrow();
  6371  000BCA  EC31  F008         	call	i2_Make_Arrow	;wreg free
  6372                           
  6373                           ;screen_controls.c: 144: }
  6374                           
  6375                           ;screen_controls.c: 141: break;
  6376  000BCE  0012               	return	
  6377  000BD0                     i2l630:
  6378  000BD0  0100               	movlb	0	; () banked
  6379  000BD2  51A2               	movf	_runTimeContext& (0+255),w,b
  6380                           
  6381                           ; Switch size 1, requested type "space"
  6382                           ; Number of cases is 2, Range of values is 0 to 1
  6383                           ; switch strategies available:
  6384                           ; Name         Instructions Cycles
  6385                           ; simple_byte            7     4 (average)
  6386                           ;	Chosen strategy is simple_byte
  6387  000BD4  0A00               	xorlw	0	; case 0
  6388  000BD6  B4D8               	btfsc	status,2,c
  6389  000BD8  D7DA               	goto	i2l631
  6390  000BDA  0A01               	xorlw	1	; case 1
  6391  000BDC  B4D8               	btfsc	status,2,c
  6392  000BDE  D7E2               	goto	i2l633
  6393  000BE0  D7EC               	goto	i2l634
  6394  000BE2                     __end_ofi2_Draw_runTime_Arrow:
  6395                           	opt stack 0
  6396                           tosu	equ	0xFFF
  6397                           tosh	equ	0xFFE
  6398                           tosl	equ	0xFFD
  6399                           pclatu	equ	0xFFB
  6400                           pclath	equ	0xFFA
  6401                           tblptru	equ	0xFF8
  6402                           tblptrh	equ	0xFF7
  6403                           tblptrl	equ	0xFF6
  6404                           tablat	equ	0xFF5
  6405                           prodh	equ	0xFF4
  6406                           prodl	equ	0xFF3
  6407                           intcon	equ	0xFF2
  6408                           postinc0	equ	0xFEE
  6409                           fsr0h	equ	0xFEA
  6410                           fsr0l	equ	0xFE9
  6411                           wreg	equ	0xFE8
  6412                           postdec1	equ	0xFE5
  6413                           fsr1h	equ	0xFE2
  6414                           fsr1l	equ	0xFE1
  6415                           fsr2h	equ	0xFDA
  6416                           fsr2l	equ	0xFD9
  6417                           status	equ	0xFD8
  6418                           
  6419 ;; *************** function i2_Make_Arrow *****************
  6420 ;; Defined at:
  6421 ;;		line 69 in file "screen_controls.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;		None
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;		None
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  1    wreg      void 
  6428 ;; Registers used:
  6429 ;;		wreg, status,2, status,0, cstack
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6439 ;;Total ram usage:        0 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:    3
  6442 ;; This function calls:
  6443 ;;		i2_GLCD_WriteData
  6444 ;; This function is called by:
  6445 ;;		i2_Draw_Arrow
  6446 ;;		i2_Draw_runTime_Arrow
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text45
  6451  001062                     __ptext45:
  6452                           	opt stack 0
  6453  001062                     i2_Make_Arrow:
  6454                           	opt stack 15
  6455                           
  6456                           ;screen_controls.c: 71: GLCD_WriteData(0x7E);
  6457                           
  6458                           ;incstack = 0
  6459  001062  0E7E               	movlw	126
  6460  001064  EC86  F004         	call	i2_GLCD_WriteData
  6461                           
  6462                           ;screen_controls.c: 72: GLCD_WriteData(0x3C);
  6463  001068  0E3C               	movlw	60
  6464  00106A  EC86  F004         	call	i2_GLCD_WriteData
  6465                           
  6466                           ;screen_controls.c: 73: GLCD_WriteData(0x18);
  6467  00106E  0E18               	movlw	24
  6468  001070  EC86  F004         	call	i2_GLCD_WriteData
  6469  001074  0012               	return		;funcret
  6470  001076                     __end_ofi2_Make_Arrow:
  6471                           	opt stack 0
  6472                           tosu	equ	0xFFF
  6473                           tosh	equ	0xFFE
  6474                           tosl	equ	0xFFD
  6475                           pclatu	equ	0xFFB
  6476                           pclath	equ	0xFFA
  6477                           tblptru	equ	0xFF8
  6478                           tblptrh	equ	0xFF7
  6479                           tblptrl	equ	0xFF6
  6480                           tablat	equ	0xFF5
  6481                           prodh	equ	0xFF4
  6482                           prodl	equ	0xFF3
  6483                           intcon	equ	0xFF2
  6484                           postinc0	equ	0xFEE
  6485                           fsr0h	equ	0xFEA
  6486                           fsr0l	equ	0xFE9
  6487                           wreg	equ	0xFE8
  6488                           postdec1	equ	0xFE5
  6489                           fsr1h	equ	0xFE2
  6490                           fsr1l	equ	0xFE1
  6491                           fsr2h	equ	0xFDA
  6492                           fsr2l	equ	0xFD9
  6493                           status	equ	0xFD8
  6494                           
  6495 ;; *************** function i2_Clear_runTime_Arrows *****************
  6496 ;; Defined at:
  6497 ;;		line 105 in file "screen_controls.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;		None
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;  Clear_runTim    1   14[COMRAM] unsigned char 
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  1    wreg      void 
  6504 ;; Registers used:
  6505 ;;		wreg, status,2, status,0, cstack
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6514 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6515 ;;Total ram usage:        1 bytes
  6516 ;; Hardware stack levels used:    1
  6517 ;; Hardware stack levels required when called:    4
  6518 ;; This function calls:
  6519 ;;		i2_GLCD_GoTo
  6520 ;;		i2_GLCD_WriteData
  6521 ;; This function is called by:
  6522 ;;		i2_Draw_Arrow
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           	psect	text46
  6527  000C36                     __ptext46:
  6528                           	opt stack 0
  6529  000C36                     i2_Clear_runTime_Arrows:
  6530                           	opt stack 14
  6531                           
  6532                           ;screen_controls.c: 107: unsigned char i=0;
  6533                           
  6534                           ;incstack = 0
  6535  000C36  0E00               	movlw	0
  6536  000C38  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
  6537                           
  6538                           ;screen_controls.c: 109: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  6539  000C3A  0E02               	movlw	2
  6540  000C3C  6E0C               	movwf	i2GLCD_GoTo@y,c
  6541  000C3E  0100               	movlb	0	; () banked
  6542  000C40  519E               	movf	_ARROW_SIZE& (0+255),w,b
  6543  000C42  0800               	sublw	0
  6544  000C44  259F               	addwf	_runTimeX& (0+255),w,b
  6545  000C46  EC98  F003         	call	i2_GLCD_GoTo
  6546                           
  6547                           ;screen_controls.c: 111: for(i=0; i<ARROW_SIZE; i++)
  6548  000C4A  0E00               	movlw	0
  6549  000C4C  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
  6550  000C4E  D004               	goto	i2l621
  6551  000C50                     
  6552                           ;screen_controls.c: 112: {
  6553                           ;screen_controls.c: 113: GLCD_WriteData(0x00);
  6554  000C50  0E00               	movlw	0
  6555  000C52  EC86  F004         	call	i2_GLCD_WriteData
  6556  000C56  2A0F               	incf	i2Clear_runTime_Arrows@i,f,c
  6557  000C58                     i2l621:
  6558  000C58  0100               	movlb	0	; () banked
  6559  000C5A  519E               	movf	_ARROW_SIZE& (0+255),w,b
  6560  000C5C  5C0F               	subwf	i2Clear_runTime_Arrows@i,w,c
  6561  000C5E  A0D8               	btfss	status,0,c
  6562  000C60  D7F7               	goto	i2l622
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;screen_controls.c: 114: }
  6566                           ;screen_controls.c: 116: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  6567                           
  6568                           ; BSR set to: 0
  6569  000C62  0E04               	movlw	4
  6570  000C64  6E0C               	movwf	i2GLCD_GoTo@y,c
  6571  000C66  519E               	movf	_ARROW_SIZE& (0+255),w,b
  6572  000C68  0800               	sublw	0
  6573  000C6A  259F               	addwf	_runTimeX& (0+255),w,b
  6574  000C6C  EC98  F003         	call	i2_GLCD_GoTo
  6575                           
  6576                           ;screen_controls.c: 117: for(i=0; i<ARROW_SIZE; i++)
  6577  000C70  0E00               	movlw	0
  6578  000C72  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
  6579  000C74  D004               	goto	i2l624
  6580  000C76                     
  6581                           ;screen_controls.c: 118: {
  6582                           ;screen_controls.c: 119: GLCD_WriteData(0x00);
  6583  000C76  0E00               	movlw	0
  6584  000C78  EC86  F004         	call	i2_GLCD_WriteData
  6585  000C7C  2A0F               	incf	i2Clear_runTime_Arrows@i,f,c
  6586  000C7E                     i2l624:
  6587  000C7E  0100               	movlb	0	; () banked
  6588  000C80  519E               	movf	_ARROW_SIZE& (0+255),w,b
  6589  000C82  5C0F               	subwf	i2Clear_runTime_Arrows@i,w,c
  6590  000C84  B0D8               	btfsc	status,0,c
  6591  000C86  0012               	return	
  6592  000C88  D7F6               	goto	i2l625
  6593  000C8A                     __end_ofi2_Clear_runTime_Arrows:
  6594                           	opt stack 0
  6595                           tosu	equ	0xFFF
  6596                           tosh	equ	0xFFE
  6597                           tosl	equ	0xFFD
  6598                           pclatu	equ	0xFFB
  6599                           pclath	equ	0xFFA
  6600                           tblptru	equ	0xFF8
  6601                           tblptrh	equ	0xFF7
  6602                           tblptrl	equ	0xFF6
  6603                           tablat	equ	0xFF5
  6604                           prodh	equ	0xFF4
  6605                           prodl	equ	0xFF3
  6606                           intcon	equ	0xFF2
  6607                           postinc0	equ	0xFEE
  6608                           fsr0h	equ	0xFEA
  6609                           fsr0l	equ	0xFE9
  6610                           wreg	equ	0xFE8
  6611                           postdec1	equ	0xFE5
  6612                           fsr1h	equ	0xFE2
  6613                           fsr1l	equ	0xFE1
  6614                           fsr2h	equ	0xFDA
  6615                           fsr2l	equ	0xFD9
  6616                           status	equ	0xFD8
  6617                           
  6618 ;; *************** function i2_Clear_Arrow_Column *****************
  6619 ;; Defined at:
  6620 ;;		line 76 in file "screen_controls.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;		None
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;  Clear_Arrow_    1   22[COMRAM] unsigned char 
  6625 ;;  Clear_Arrow_    1   21[COMRAM] unsigned char 
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      void 
  6628 ;; Registers used:
  6629 ;;		wreg, status,2, status,0, cstack
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6636 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6637 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6638 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6639 ;;Total ram usage:        9 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:    4
  6642 ;; This function calls:
  6643 ;;		i2_GLCD_GoTo
  6644 ;;		i2_GLCD_WriteData
  6645 ;; This function is called by:
  6646 ;;		i2_Draw_Arrow
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           	psect	text47
  6651  0009D4                     __ptext47:
  6652                           	opt stack 0
  6653  0009D4                     i2_Clear_Arrow_Column:
  6654                           	opt stack 14
  6655                           
  6656                           ;screen_controls.c: 78: unsigned char i, j;
  6657                           ;screen_controls.c: 80: for(i = 0; i < 64/8; i++)
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;incstack = 0
  6661  0009D4  0E00               	movlw	0
  6662  0009D6  6E17               	movwf	i2Clear_Arrow_Column@i,c
  6663  0009D8                     i2l2693:
  6664  0009D8  0E07               	movlw	7
  6665  0009DA  6417               	cpfsgt	i2Clear_Arrow_Column@i,c
  6666  0009DC  D001               	goto	i2l610
  6667  0009DE  0012               	return	
  6668  0009E0                     i2l610:
  6669                           
  6670                           ;screen_controls.c: 81: {
  6671                           ;screen_controls.c: 82: GLCD_GoTo(0, i);
  6672  0009E0  C017  F00C         	movff	i2Clear_Arrow_Column@i,i2GLCD_GoTo@y
  6673  0009E4  0E00               	movlw	0
  6674  0009E6  EC98  F003         	call	i2_GLCD_GoTo
  6675                           
  6676                           ;screen_controls.c: 84: for(j = 0; j < (xMenuStart - 1); j++)
  6677  0009EA  0E00               	movlw	0
  6678  0009EC  6E16               	movwf	i2Clear_Arrow_Column@j,c
  6679  0009EE  D004               	goto	i2l612
  6680  0009F0                     
  6681                           ;screen_controls.c: 85: {
  6682                           ;screen_controls.c: 86: GLCD_WriteData(0x00);
  6683  0009F0  0E00               	movlw	0
  6684  0009F2  EC86  F004         	call	i2_GLCD_WriteData
  6685  0009F6  2A16               	incf	i2Clear_Arrow_Column@j,f,c
  6686  0009F8                     i2l612:
  6687  0009F8  0EFF               	movlw	255
  6688  0009FA  6E0F               	movwf	??i2_Clear_Arrow_Column& (0+255),c
  6689  0009FC  0EFF               	movlw	255
  6690  0009FE  6E10               	movwf	(??i2_Clear_Arrow_Column+1)& (0+255),c
  6691  000A00  0100               	movlb	0	; () banked
  6692  000A02  519D               	movf	_xMenuStart& (0+255),w,b
  6693  000A04  6E11               	movwf	(??i2_Clear_Arrow_Column+2)& (0+255),c
  6694  000A06  6A12               	clrf	(??i2_Clear_Arrow_Column+3)& (0+255),c
  6695  000A08  500F               	movf	??i2_Clear_Arrow_Column,w,c
  6696  000A0A  2611               	addwf	??i2_Clear_Arrow_Column+2,f,c
  6697  000A0C  5010               	movf	??i2_Clear_Arrow_Column+1,w,c
  6698  000A0E  2212               	addwfc	??i2_Clear_Arrow_Column+3,f,c
  6699  000A10  5016               	movf	i2Clear_Arrow_Column@j,w,c
  6700  000A12  6E13               	movwf	(??i2_Clear_Arrow_Column+4)& (0+255),c
  6701  000A14  6A14               	clrf	(??i2_Clear_Arrow_Column+5)& (0+255),c
  6702  000A16  5011               	movf	??i2_Clear_Arrow_Column+2,w,c
  6703  000A18  5C13               	subwf	??i2_Clear_Arrow_Column+4,w,c
  6704  000A1A  5014               	movf	??i2_Clear_Arrow_Column+5,w,c
  6705  000A1C  0A80               	xorlw	128
  6706  000A1E  6E15               	movwf	(??i2_Clear_Arrow_Column+6)& (0+255),c
  6707  000A20  5012               	movf	??i2_Clear_Arrow_Column+3,w,c
  6708  000A22  0A80               	xorlw	128
  6709  000A24  5815               	subwfb	(??i2_Clear_Arrow_Column+6)& (0+255),w,c
  6710  000A26  A0D8               	btfss	status,0,c
  6711  000A28  D7E3               	goto	i2l613
  6712                           
  6713                           ; BSR set to: 0
  6714                           
  6715                           ; BSR set to: 0
  6716  000A2A  2A17               	incf	i2Clear_Arrow_Column@i,f,c
  6717  000A2C  D7D5               	goto	i2l2693
  6718  000A2E                     __end_ofi2_Clear_Arrow_Column:
  6719                           	opt stack 0
  6720                           tosu	equ	0xFFF
  6721                           tosh	equ	0xFFE
  6722                           tosl	equ	0xFFD
  6723                           pclatu	equ	0xFFB
  6724                           pclath	equ	0xFFA
  6725                           tblptru	equ	0xFF8
  6726                           tblptrh	equ	0xFF7
  6727                           tblptrl	equ	0xFF6
  6728                           tablat	equ	0xFF5
  6729                           prodh	equ	0xFF4
  6730                           prodl	equ	0xFF3
  6731                           intcon	equ	0xFF2
  6732                           postinc0	equ	0xFEE
  6733                           fsr0h	equ	0xFEA
  6734                           fsr0l	equ	0xFE9
  6735                           wreg	equ	0xFE8
  6736                           postdec1	equ	0xFE5
  6737                           fsr1h	equ	0xFE2
  6738                           fsr1l	equ	0xFE1
  6739                           fsr2h	equ	0xFDA
  6740                           fsr2l	equ	0xFD9
  6741                           status	equ	0xFD8
  6742                           
  6743 ;; *************** function i2_GLCD_WriteData *****************
  6744 ;; Defined at:
  6745 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  dataToWrite     1    wreg     unsigned char 
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;  dataToWrite     1    9[COMRAM] unsigned char 
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  1    wreg      void 
  6752 ;; Registers used:
  6753 ;;		wreg, status,2, status,0, cstack
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6761 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6763 ;;Total ram usage:        2 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:    2
  6766 ;; This function calls:
  6767 ;;		i2_GLCD_Delay
  6768 ;;		i2_GLCD_DisableController
  6769 ;;		i2_GLCD_EnableController
  6770 ;;		i2_GLCD_ReadStatus
  6771 ;;		i2___awdiv
  6772 ;; This function is called by:
  6773 ;;		i2_GLCD_WriteChar
  6774 ;;		i2_Make_Arrow
  6775 ;;		i2_Clear_Arrow_Column
  6776 ;;		i2_Clear_runTime_Arrows
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           	psect	text48
  6781  00090C                     __ptext48:
  6782                           	opt stack 0
  6783  00090C                     i2_GLCD_WriteData:
  6784                           	opt stack 17
  6785                           
  6786                           ;incstack = 0
  6787                           ;i2GLCD_WriteData@dataToWrite stored from wreg
  6788  00090C  6E0A               	movwf	i2GLCD_WriteData@dataToWrite,c
  6789  00090E                     
  6790                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  6791  00090E  C0A1  F001         	movff	_screen_x,i2___awdiv@dividend
  6792  000912  6A02               	clrf	i2___awdiv@dividend+1,c
  6793  000914  0E00               	movlw	0
  6794  000916  6E04               	movwf	i2___awdiv@divisor+1,c
  6795  000918  0E40               	movlw	64
  6796  00091A  6E03               	movwf	i2___awdiv@divisor,c
  6797  00091C  EC18  F003         	call	i2___awdiv	;wreg free
  6798  000920  5001               	movf	?i2___awdiv,w,c
  6799  000922  ECCE  F007         	call	i2_GLCD_ReadStatus
  6800  000926  6E09               	movwf	??i2_GLCD_WriteData& (0+255),c
  6801  000928  BE09               	btfsc	??i2_GLCD_WriteData,7,c
  6802  00092A  D7F1               	goto	i2l2559
  6803                           
  6804                           ;KS0108-PIC18.c: 116: TRISC = 0x00;
  6805  00092C  0E00               	movlw	0
  6806  00092E  6E94               	movwf	3988,c	;volatile
  6807                           
  6808                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
  6809  000930  9280               	bcf	3968,1,c	;volatile
  6810                           
  6811                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
  6812  000932  8480               	bsf	3968,2,c	;volatile
  6813                           
  6814                           ;KS0108-PIC18.c: 119: PORTC = dataToWrite;
  6815  000934  C00A  FF82         	movff	i2GLCD_WriteData@dataToWrite,3970	;volatile
  6816                           
  6817                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
  6818  000938  C0A1  F001         	movff	_screen_x,i2___awdiv@dividend
  6819  00093C  6A02               	clrf	i2___awdiv@dividend+1,c
  6820  00093E  0E00               	movlw	0
  6821  000940  6E04               	movwf	i2___awdiv@divisor+1,c
  6822  000942  0E40               	movlw	64
  6823  000944  6E03               	movwf	i2___awdiv@divisor,c
  6824  000946  EC18  F003         	call	i2___awdiv	;wreg free
  6825  00094A  5001               	movf	?i2___awdiv,w,c
  6826  00094C  ECA8  F007         	call	i2_GLCD_EnableController
  6827                           
  6828                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
  6829  000950  8680               	bsf	3968,3,c	;volatile
  6830                           
  6831                           ;KS0108-PIC18.c: 122: GLCD_Delay();
  6832  000952  EC62  F008         	call	i2_GLCD_Delay	;wreg free
  6833                           
  6834                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
  6835  000956  9680               	bcf	3968,3,c	;volatile
  6836                           
  6837                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
  6838  000958  C0A1  F001         	movff	_screen_x,i2___awdiv@dividend
  6839  00095C  6A02               	clrf	i2___awdiv@dividend+1,c
  6840  00095E  0E00               	movlw	0
  6841  000960  6E04               	movwf	i2___awdiv@divisor+1,c
  6842  000962  0E40               	movlw	64
  6843  000964  6E03               	movwf	i2___awdiv@divisor,c
  6844  000966  EC18  F003         	call	i2___awdiv	;wreg free
  6845  00096A  5001               	movf	?i2___awdiv,w,c
  6846  00096C  ECBB  F007         	call	i2_GLCD_DisableController
  6847                           
  6848                           ;KS0108-PIC18.c: 125: screen_x++;
  6849  000970  0100               	movlb	0	; () banked
  6850  000972  2BA1               	incf	_screen_x& (0+255),f,b
  6851                           
  6852                           ; BSR set to: 0
  6853  000974  0012               	return		;funcret
  6854  000976                     __end_ofi2_GLCD_WriteData:
  6855                           	opt stack 0
  6856                           tosu	equ	0xFFF
  6857                           tosh	equ	0xFFE
  6858                           tosl	equ	0xFFD
  6859                           pclatu	equ	0xFFB
  6860                           pclath	equ	0xFFA
  6861                           tblptru	equ	0xFF8
  6862                           tblptrh	equ	0xFF7
  6863                           tblptrl	equ	0xFF6
  6864                           tablat	equ	0xFF5
  6865                           prodh	equ	0xFF4
  6866                           prodl	equ	0xFF3
  6867                           intcon	equ	0xFF2
  6868                           postinc0	equ	0xFEE
  6869                           fsr0h	equ	0xFEA
  6870                           fsr0l	equ	0xFE9
  6871                           wreg	equ	0xFE8
  6872                           postdec1	equ	0xFE5
  6873                           fsr1h	equ	0xFE2
  6874                           fsr1l	equ	0xFE1
  6875                           fsr2h	equ	0xFDA
  6876                           fsr2l	equ	0xFD9
  6877                           status	equ	0xFD8
  6878                           
  6879 ;; *************** function i2_GLCD_GoTo *****************
  6880 ;; Defined at:
  6881 ;;		line 25 in file "ks0108lib/KS0108.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;  x               1    wreg     unsigned char 
  6884 ;;  y               1   11[COMRAM] unsigned char 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  x               1   12[COMRAM] unsigned char 
  6887 ;;  GLCD_GoTo       1   13[COMRAM] unsigned char 
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  1    wreg      void 
  6890 ;; Registers used:
  6891 ;;		wreg, status,2, status,0, cstack
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6897 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6900 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6901 ;;Total ram usage:        3 bytes
  6902 ;; Hardware stack levels used:    1
  6903 ;; Hardware stack levels required when called:    3
  6904 ;; This function calls:
  6905 ;;		i2_GLCD_WriteCommand
  6906 ;;		i2___awdiv
  6907 ;; This function is called by:
  6908 ;;		_PIN_MANAGER_IOC
  6909 ;;		i2_Draw_Arrow
  6910 ;;		i2_Clear_Arrow_Column
  6911 ;;		i2_Clear_runTime_Arrows
  6912 ;;		i2_Draw_runTime_Arrow
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text49
  6917  000730                     __ptext49:
  6918                           	opt stack 0
  6919  000730                     i2_GLCD_GoTo:
  6920                           	opt stack 17
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;incstack = 0
  6924                           ;i2GLCD_GoTo@x stored from wreg
  6925  000730  6E0D               	movwf	i2GLCD_GoTo@x,c
  6926                           
  6927                           ;KS0108.c: 27: unsigned char i;
  6928                           ;KS0108.c: 28: screen_x = x;
  6929  000732  C00D  F0A1         	movff	i2GLCD_GoTo@x,_screen_x
  6930                           
  6931                           ;KS0108.c: 29: screen_y = y;
  6932  000736  C00C  F0A0         	movff	i2GLCD_GoTo@y,_screen_y
  6933                           
  6934                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
  6935  00073A  0E00               	movlw	0
  6936  00073C  6E0E               	movwf	i2GLCD_GoTo@i,c
  6937  00073E                     i2l2653:
  6938  00073E  0E01               	movlw	1
  6939  000740  640E               	cpfsgt	i2GLCD_GoTo@i,c
  6940  000742  D001               	goto	i2l469
  6941  000744  D012               	goto	i2u111_40
  6942  000746                     i2l469:
  6943                           
  6944                           ;KS0108.c: 32: {
  6945                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
  6946  000746  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  6947  00074A  0E40               	movlw	64
  6948  00074C  EC3B  F007         	call	i2_GLCD_WriteCommand
  6949                           
  6950                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
  6951  000750  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  6952  000754  500C               	movf	i2GLCD_GoTo@y,w,c
  6953  000756  09B8               	iorlw	184
  6954  000758  EC3B  F007         	call	i2_GLCD_WriteCommand
  6955                           
  6956                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
  6957  00075C  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  6958  000760  0EC0               	movlw	192
  6959  000762  EC3B  F007         	call	i2_GLCD_WriteCommand
  6960  000766  2A0E               	incf	i2GLCD_GoTo@i,f,c
  6961  000768  D7EA               	goto	i2l2653
  6962  00076A                     i2u111_40:
  6963                           
  6964                           ;KS0108.c: 36: }
  6965                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
  6966  00076A  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
  6967  00076E  6A02               	clrf	i2___awdiv@dividend+1,c
  6968  000770  0E00               	movlw	0
  6969  000772  6E04               	movwf	i2___awdiv@divisor+1,c
  6970  000774  0E40               	movlw	64
  6971  000776  6E03               	movwf	i2___awdiv@divisor,c
  6972  000778  EC18  F003         	call	i2___awdiv	;wreg free
  6973  00077C  5001               	movf	?i2___awdiv,w,c
  6974  00077E  6E09               	movwf	i2GLCD_WriteCommand@controller,c
  6975  000780  500D               	movf	i2GLCD_GoTo@x,w,c
  6976  000782  0B3F               	andlw	63
  6977  000784  0940               	iorlw	64
  6978  000786  EC3B  F007         	call	i2_GLCD_WriteCommand
  6979                           
  6980                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
  6981  00078A  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
  6982  00078E  6A02               	clrf	i2___awdiv@dividend+1,c
  6983  000790  0E00               	movlw	0
  6984  000792  6E04               	movwf	i2___awdiv@divisor+1,c
  6985  000794  0E40               	movlw	64
  6986  000796  6E03               	movwf	i2___awdiv@divisor,c
  6987  000798  EC18  F003         	call	i2___awdiv	;wreg free
  6988  00079C  5001               	movf	?i2___awdiv,w,c
  6989  00079E  6E09               	movwf	i2GLCD_WriteCommand@controller,c
  6990  0007A0  500C               	movf	i2GLCD_GoTo@y,w,c
  6991  0007A2  09B8               	iorlw	184
  6992  0007A4  EC3B  F007         	call	i2_GLCD_WriteCommand
  6993  0007A8  0012               	return		;funcret
  6994  0007AA                     __end_ofi2_GLCD_GoTo:
  6995                           	opt stack 0
  6996                           tosu	equ	0xFFF
  6997                           tosh	equ	0xFFE
  6998                           tosl	equ	0xFFD
  6999                           pclatu	equ	0xFFB
  7000                           pclath	equ	0xFFA
  7001                           tblptru	equ	0xFF8
  7002                           tblptrh	equ	0xFF7
  7003                           tblptrl	equ	0xFF6
  7004                           tablat	equ	0xFF5
  7005                           prodh	equ	0xFF4
  7006                           prodl	equ	0xFF3
  7007                           intcon	equ	0xFF2
  7008                           postinc0	equ	0xFEE
  7009                           fsr0h	equ	0xFEA
  7010                           fsr0l	equ	0xFE9
  7011                           wreg	equ	0xFE8
  7012                           postdec1	equ	0xFE5
  7013                           fsr1h	equ	0xFE2
  7014                           fsr1l	equ	0xFE1
  7015                           fsr2h	equ	0xFDA
  7016                           fsr2l	equ	0xFD9
  7017                           status	equ	0xFD8
  7018                           
  7019 ;; *************** function i2___awdiv *****************
  7020 ;; Defined at:
  7021 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;  dividend        2    0[COMRAM] int 
  7024 ;;  divisor         2    2[COMRAM] int 
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;  __awdiv         2    6[COMRAM] int 
  7027 ;;  __awdiv         1    5[COMRAM] unsigned char 
  7028 ;;  __awdiv         1    4[COMRAM] unsigned char 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  2    0[COMRAM] int 
  7031 ;; Registers used:
  7032 ;;		wreg, status,2, status,0
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7038 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7039 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7041 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7042 ;;Total ram usage:        8 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		i2_GLCD_GoTo
  7048 ;;		i2_GLCD_WriteData
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text50
  7053  000630                     __ptext50:
  7054                           	opt stack 0
  7055  000630                     i2___awdiv:
  7056                           	opt stack 18
  7057                           
  7058                           ;incstack = 0
  7059  000630  0E00               	movlw	0
  7060  000632  6E06               	movwf	i2___awdiv@sign,c
  7061  000634  AE04               	btfss	i2___awdiv@divisor+1,7,c
  7062  000636  D006               	goto	i2l803
  7063  000638  6C03               	negf	i2___awdiv@divisor,c
  7064  00063A  1E04               	comf	i2___awdiv@divisor+1,f,c
  7065  00063C  B0D8               	btfsc	status,0,c
  7066  00063E  2A04               	incf	i2___awdiv@divisor+1,f,c
  7067  000640  0E01               	movlw	1
  7068  000642  6E06               	movwf	i2___awdiv@sign,c
  7069  000644                     i2l803:
  7070  000644  AE02               	btfss	i2___awdiv@dividend+1,7,c
  7071  000646  D006               	goto	i2l804
  7072  000648  6C01               	negf	i2___awdiv@dividend,c
  7073  00064A  1E02               	comf	i2___awdiv@dividend+1,f,c
  7074  00064C  B0D8               	btfsc	status,0,c
  7075  00064E  2A02               	incf	i2___awdiv@dividend+1,f,c
  7076  000650  0E01               	movlw	1
  7077  000652  1A06               	xorwf	i2___awdiv@sign,f,c
  7078  000654                     i2l804:
  7079  000654  0E00               	movlw	0
  7080  000656  6E08               	movwf	i2___awdiv@quotient+1,c
  7081  000658  0E00               	movlw	0
  7082  00065A  6E07               	movwf	i2___awdiv@quotient,c
  7083  00065C  5003               	movf	i2___awdiv@divisor,w,c
  7084  00065E  1004               	iorwf	i2___awdiv@divisor+1,w,c
  7085  000660  B4D8               	btfsc	status,2,c
  7086  000662  D01C               	goto	i2l811
  7087  000664  0E01               	movlw	1
  7088  000666  6E05               	movwf	i2___awdiv@counter,c
  7089  000668  D004               	goto	i2l806
  7090  00066A  90D8               	bcf	status,0,c
  7091  00066C  3603               	rlcf	i2___awdiv@divisor,f,c
  7092  00066E  3604               	rlcf	i2___awdiv@divisor+1,f,c
  7093  000670  2A05               	incf	i2___awdiv@counter,f,c
  7094  000672                     i2l806:
  7095  000672  AE04               	btfss	i2___awdiv@divisor+1,7,c
  7096  000674  D7FA               	goto	i2l807
  7097  000676                     i2u94_40:
  7098  000676  90D8               	bcf	status,0,c
  7099  000678  3607               	rlcf	i2___awdiv@quotient,f,c
  7100  00067A  3608               	rlcf	i2___awdiv@quotient+1,f,c
  7101  00067C  5003               	movf	i2___awdiv@divisor,w,c
  7102  00067E  5C01               	subwf	i2___awdiv@dividend,w,c
  7103  000680  5004               	movf	i2___awdiv@divisor+1,w,c
  7104  000682  5802               	subwfb	i2___awdiv@dividend+1,w,c
  7105  000684  A0D8               	btfss	status,0,c
  7106  000686  D005               	goto	i2l810
  7107  000688  5003               	movf	i2___awdiv@divisor,w,c
  7108  00068A  5E01               	subwf	i2___awdiv@dividend,f,c
  7109  00068C  5004               	movf	i2___awdiv@divisor+1,w,c
  7110  00068E  5A02               	subwfb	i2___awdiv@dividend+1,f,c
  7111  000690  8007               	bsf	i2___awdiv@quotient,0,c
  7112  000692                     i2l810:
  7113  000692  90D8               	bcf	status,0,c
  7114  000694  3204               	rrcf	i2___awdiv@divisor+1,f,c
  7115  000696  3203               	rrcf	i2___awdiv@divisor,f,c
  7116  000698  2E05               	decfsz	i2___awdiv@counter,f,c
  7117  00069A  D7ED               	goto	i2u94_40
  7118  00069C                     i2l811:
  7119  00069C  5006               	movf	i2___awdiv@sign,w,c
  7120  00069E  B4D8               	btfsc	status,2,c
  7121  0006A0  D004               	goto	i2l812
  7122  0006A2  6C07               	negf	i2___awdiv@quotient,c
  7123  0006A4  1E08               	comf	i2___awdiv@quotient+1,f,c
  7124  0006A6  B0D8               	btfsc	status,0,c
  7125  0006A8  2A08               	incf	i2___awdiv@quotient+1,f,c
  7126  0006AA                     i2l812:
  7127  0006AA  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  7128  0006AE  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  7129  0006B2  0012               	return	
  7130  0006B4                     __end_ofi2___awdiv:
  7131                           	opt stack 0
  7132                           tosu	equ	0xFFF
  7133                           tosh	equ	0xFFE
  7134                           tosl	equ	0xFFD
  7135                           pclatu	equ	0xFFB
  7136                           pclath	equ	0xFFA
  7137                           tblptru	equ	0xFF8
  7138                           tblptrh	equ	0xFF7
  7139                           tblptrl	equ	0xFF6
  7140                           tablat	equ	0xFF5
  7141                           prodh	equ	0xFF4
  7142                           prodl	equ	0xFF3
  7143                           intcon	equ	0xFF2
  7144                           postinc0	equ	0xFEE
  7145                           fsr0h	equ	0xFEA
  7146                           fsr0l	equ	0xFE9
  7147                           wreg	equ	0xFE8
  7148                           postdec1	equ	0xFE5
  7149                           fsr1h	equ	0xFE2
  7150                           fsr1l	equ	0xFE1
  7151                           fsr2h	equ	0xFDA
  7152                           fsr2l	equ	0xFD9
  7153                           status	equ	0xFD8
  7154                           
  7155 ;; *************** function i2_GLCD_WriteCommand *****************
  7156 ;; Defined at:
  7157 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  commandToWri    1    wreg     unsigned char 
  7160 ;;  controller      1    8[COMRAM] unsigned char 
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  commandToWri    1   10[COMRAM] unsigned char 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  1    wreg      void 
  7165 ;; Registers used:
  7166 ;;		wreg, status,2, status,0, cstack
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7172 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7175 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7176 ;;Total ram usage:        3 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; Hardware stack levels required when called:    2
  7179 ;; This function calls:
  7180 ;;		i2_GLCD_Delay
  7181 ;;		i2_GLCD_DisableController
  7182 ;;		i2_GLCD_EnableController
  7183 ;;		i2_GLCD_ReadStatus
  7184 ;; This function is called by:
  7185 ;;		i2_GLCD_GoTo
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text51
  7190  000E76                     __ptext51:
  7191                           	opt stack 0
  7192  000E76                     i2_GLCD_WriteCommand:
  7193                           	opt stack 17
  7194                           
  7195                           ;incstack = 0
  7196                           ;i2GLCD_WriteCommand@commandToWrite stored from wreg
  7197  000E76  6E0B               	movwf	i2GLCD_WriteCommand@commandToWrite,c
  7198  000E78                     
  7199                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
  7200  000E78  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  7201  000E7A  ECCE  F007         	call	i2_GLCD_ReadStatus
  7202  000E7E  6E0A               	movwf	??i2_GLCD_WriteCommand& (0+255),c
  7203  000E80  BE0A               	btfsc	??i2_GLCD_WriteCommand,7,c
  7204  000E82  D7FA               	goto	i2l2539
  7205                           
  7206                           ;KS0108-PIC18.c: 82: TRISC = 0x00;
  7207  000E84  0E00               	movlw	0
  7208  000E86  6E94               	movwf	3988,c	;volatile
  7209                           
  7210                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
  7211  000E88  0EF9               	movlw	249
  7212  000E8A  1680               	andwf	3968,f,c	;volatile
  7213                           
  7214                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
  7215  000E8C  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  7216  000E8E  ECA8  F007         	call	i2_GLCD_EnableController
  7217                           
  7218                           ;KS0108-PIC18.c: 85: PORTC = commandToWrite;
  7219  000E92  C00B  FF82         	movff	i2GLCD_WriteCommand@commandToWrite,3970	;volatile
  7220                           
  7221                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
  7222  000E96  8680               	bsf	3968,3,c	;volatile
  7223                           
  7224                           ;KS0108-PIC18.c: 87: GLCD_Delay();
  7225  000E98  EC62  F008         	call	i2_GLCD_Delay	;wreg free
  7226                           
  7227                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
  7228  000E9C  9680               	bcf	3968,3,c	;volatile
  7229                           
  7230                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
  7231  000E9E  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  7232  000EA0  ECBB  F007         	call	i2_GLCD_DisableController
  7233  000EA4  0012               	return		;funcret
  7234  000EA6                     __end_ofi2_GLCD_WriteCommand:
  7235                           	opt stack 0
  7236                           tosu	equ	0xFFF
  7237                           tosh	equ	0xFFE
  7238                           tosl	equ	0xFFD
  7239                           pclatu	equ	0xFFB
  7240                           pclath	equ	0xFFA
  7241                           tblptru	equ	0xFF8
  7242                           tblptrh	equ	0xFF7
  7243                           tblptrl	equ	0xFF6
  7244                           tablat	equ	0xFF5
  7245                           prodh	equ	0xFF4
  7246                           prodl	equ	0xFF3
  7247                           intcon	equ	0xFF2
  7248                           postinc0	equ	0xFEE
  7249                           fsr0h	equ	0xFEA
  7250                           fsr0l	equ	0xFE9
  7251                           wreg	equ	0xFE8
  7252                           postdec1	equ	0xFE5
  7253                           fsr1h	equ	0xFE2
  7254                           fsr1l	equ	0xFE1
  7255                           fsr2h	equ	0xFDA
  7256                           fsr2l	equ	0xFD9
  7257                           status	equ	0xFD8
  7258                           
  7259 ;; *************** function i2_GLCD_ReadStatus *****************
  7260 ;; Defined at:
  7261 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  controller      1    wreg     unsigned char 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  controller      1    2[COMRAM] unsigned char 
  7266 ;;  GLCD_ReadSta    1    1[COMRAM] unsigned char 
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  1    wreg      unsigned char 
  7269 ;; Registers used:
  7270 ;;		wreg, status,2, status,0, cstack
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7280 ;;Total ram usage:        2 bytes
  7281 ;; Hardware stack levels used:    1
  7282 ;; Hardware stack levels required when called:    1
  7283 ;; This function calls:
  7284 ;;		i2_GLCD_Delay
  7285 ;;		i2_GLCD_DisableController
  7286 ;;		i2_GLCD_EnableController
  7287 ;; This function is called by:
  7288 ;;		i2_GLCD_WriteCommand
  7289 ;;		i2_GLCD_WriteData
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           	psect	text52
  7294  000F9C                     __ptext52:
  7295                           	opt stack 0
  7296  000F9C                     i2_GLCD_ReadStatus:
  7297                           	opt stack 17
  7298                           
  7299                           ;incstack = 0
  7300                           ;i2GLCD_ReadStatus@controller stored from wreg
  7301  000F9C  6E03               	movwf	i2GLCD_ReadStatus@controller,c
  7302                           
  7303                           ;KS0108-PIC18.c: 64: unsigned char status;
  7304                           ;KS0108-PIC18.c: 65: TRISC = 0xFF;
  7305  000F9E  6894               	setf	3988,c	;volatile
  7306                           
  7307                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
  7308  000FA0  8280               	bsf	3968,1,c	;volatile
  7309                           
  7310                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
  7311  000FA2  9480               	bcf	3968,2,c	;volatile
  7312                           
  7313                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
  7314  000FA4  5003               	movf	i2GLCD_ReadStatus@controller,w,c
  7315  000FA6  ECA8  F007         	call	i2_GLCD_EnableController
  7316                           
  7317                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
  7318  000FAA  8680               	bsf	3968,3,c	;volatile
  7319                           
  7320                           ;KS0108-PIC18.c: 70: GLCD_Delay();
  7321  000FAC  EC62  F008         	call	i2_GLCD_Delay	;wreg free
  7322                           
  7323                           ;KS0108-PIC18.c: 71: status = PORTC;
  7324  000FB0  CF82 F002          	movff	3970,i2GLCD_ReadStatus@status	;volatile
  7325                           
  7326                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
  7327  000FB4  9680               	bcf	3968,3,c	;volatile
  7328                           
  7329                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
  7330  000FB6  5003               	movf	i2GLCD_ReadStatus@controller,w,c
  7331  000FB8  ECBB  F007         	call	i2_GLCD_DisableController
  7332                           
  7333                           ;KS0108-PIC18.c: 74: return status;
  7334  000FBC  5002               	movf	i2GLCD_ReadStatus@status,w,c
  7335  000FBE  0012               	return	
  7336  000FC0                     __end_ofi2_GLCD_ReadStatus:
  7337                           	opt stack 0
  7338                           tosu	equ	0xFFF
  7339                           tosh	equ	0xFFE
  7340                           tosl	equ	0xFFD
  7341                           pclatu	equ	0xFFB
  7342                           pclath	equ	0xFFA
  7343                           tblptru	equ	0xFF8
  7344                           tblptrh	equ	0xFF7
  7345                           tblptrl	equ	0xFF6
  7346                           tablat	equ	0xFF5
  7347                           prodh	equ	0xFF4
  7348                           prodl	equ	0xFF3
  7349                           intcon	equ	0xFF2
  7350                           postinc0	equ	0xFEE
  7351                           fsr0h	equ	0xFEA
  7352                           fsr0l	equ	0xFE9
  7353                           wreg	equ	0xFE8
  7354                           postdec1	equ	0xFE5
  7355                           fsr1h	equ	0xFE2
  7356                           fsr1l	equ	0xFE1
  7357                           fsr2h	equ	0xFDA
  7358                           fsr2l	equ	0xFD9
  7359                           status	equ	0xFD8
  7360                           
  7361 ;; *************** function i2_GLCD_EnableController *****************
  7362 ;; Defined at:
  7363 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  controller      1    wreg     unsigned char 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  controller      1    0[COMRAM] unsigned char 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  1    wreg      void 
  7370 ;; Registers used:
  7371 ;;		wreg, status,2, status,0
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7381 ;;Total ram usage:        1 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; This function calls:
  7384 ;;		Nothing
  7385 ;; This function is called by:
  7386 ;;		i2_GLCD_ReadStatus
  7387 ;;		i2_GLCD_WriteCommand
  7388 ;;		i2_GLCD_WriteData
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text53
  7393  000F50                     __ptext53:
  7394                           	opt stack 0
  7395  000F50                     i2_GLCD_EnableController:
  7396                           	opt stack 17
  7397                           
  7398                           ;incstack = 0
  7399                           ;i2GLCD_EnableController@controller stored from wreg
  7400  000F50  6E01               	movwf	i2GLCD_EnableController@controller,c
  7401                           
  7402                           ;KS0108-PIC18.c: 41: switch(controller){
  7403  000F52  D006               	goto	i2l522
  7404  000F54  9A80               	bcf	3968,5,c	;volatile
  7405  000F56  0012               	return	
  7406  000F58  9C80               	bcf	3968,6,c	;volatile
  7407  000F5A  0012               	return	
  7408  000F5C  9E80               	bcf	3968,7,c	;volatile
  7409                           
  7410                           ;KS0108-PIC18.c: 45: }
  7411  000F5E  0012               	return	
  7412  000F60                     i2l522:
  7413  000F60  5001               	movf	i2GLCD_EnableController@controller,w,c
  7414                           
  7415                           ; Switch size 1, requested type "space"
  7416                           ; Number of cases is 3, Range of values is 0 to 2
  7417                           ; switch strategies available:
  7418                           ; Name         Instructions Cycles
  7419                           ; simple_byte           10     6 (average)
  7420                           ;	Chosen strategy is simple_byte
  7421  000F62  0A00               	xorlw	0	; case 0
  7422  000F64  B4D8               	btfsc	status,2,c
  7423  000F66  D7F6               	goto	i2l523
  7424  000F68  0A01               	xorlw	1	; case 1
  7425  000F6A  B4D8               	btfsc	status,2,c
  7426  000F6C  D7F5               	goto	i2l525
  7427  000F6E  0A03               	xorlw	3	; case 2
  7428  000F70  A4D8               	btfss	status,2,c
  7429  000F72  0012               	return	
  7430  000F74  D7F3               	goto	i2l526
  7431  000F76                     __end_ofi2_GLCD_EnableController:
  7432                           	opt stack 0
  7433                           tosu	equ	0xFFF
  7434                           tosh	equ	0xFFE
  7435                           tosl	equ	0xFFD
  7436                           pclatu	equ	0xFFB
  7437                           pclath	equ	0xFFA
  7438                           tblptru	equ	0xFF8
  7439                           tblptrh	equ	0xFF7
  7440                           tblptrl	equ	0xFF6
  7441                           tablat	equ	0xFF5
  7442                           prodh	equ	0xFF4
  7443                           prodl	equ	0xFF3
  7444                           intcon	equ	0xFF2
  7445                           postinc0	equ	0xFEE
  7446                           fsr0h	equ	0xFEA
  7447                           fsr0l	equ	0xFE9
  7448                           wreg	equ	0xFE8
  7449                           postdec1	equ	0xFE5
  7450                           fsr1h	equ	0xFE2
  7451                           fsr1l	equ	0xFE1
  7452                           fsr2h	equ	0xFDA
  7453                           fsr2l	equ	0xFD9
  7454                           status	equ	0xFD8
  7455                           
  7456 ;; *************** function i2_GLCD_DisableController *****************
  7457 ;; Defined at:
  7458 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;  controller      1    wreg     unsigned char 
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;  controller      1    0[COMRAM] unsigned char 
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  1    wreg      void 
  7465 ;; Registers used:
  7466 ;;		wreg, status,2, status,0
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7476 ;;Total ram usage:        1 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; This function calls:
  7479 ;;		Nothing
  7480 ;; This function is called by:
  7481 ;;		i2_GLCD_ReadStatus
  7482 ;;		i2_GLCD_WriteCommand
  7483 ;;		i2_GLCD_WriteData
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           	psect	text54
  7488  000F76                     __ptext54:
  7489                           	opt stack 0
  7490  000F76                     i2_GLCD_DisableController:
  7491                           	opt stack 17
  7492                           
  7493                           ;incstack = 0
  7494                           ;i2GLCD_DisableController@controller stored from wreg
  7495  000F76  6E01               	movwf	i2GLCD_DisableController@controller,c
  7496                           
  7497                           ;KS0108-PIC18.c: 52: switch(controller)
  7498  000F78  D006               	goto	i2l530
  7499  000F7A  8A80               	bsf	3968,5,c	;volatile
  7500  000F7C  0012               	return	
  7501  000F7E  8C80               	bsf	3968,6,c	;volatile
  7502  000F80  0012               	return	
  7503  000F82  8E80               	bsf	3968,7,c	;volatile
  7504                           
  7505                           ;KS0108-PIC18.c: 57: }
  7506  000F84  0012               	return	
  7507  000F86                     i2l530:
  7508  000F86  5001               	movf	i2GLCD_DisableController@controller,w,c
  7509                           
  7510                           ; Switch size 1, requested type "space"
  7511                           ; Number of cases is 3, Range of values is 0 to 2
  7512                           ; switch strategies available:
  7513                           ; Name         Instructions Cycles
  7514                           ; simple_byte           10     6 (average)
  7515                           ;	Chosen strategy is simple_byte
  7516  000F88  0A00               	xorlw	0	; case 0
  7517  000F8A  B4D8               	btfsc	status,2,c
  7518  000F8C  D7F6               	goto	i2l531
  7519  000F8E  0A01               	xorlw	1	; case 1
  7520  000F90  B4D8               	btfsc	status,2,c
  7521  000F92  D7F5               	goto	i2l533
  7522  000F94  0A03               	xorlw	3	; case 2
  7523  000F96  A4D8               	btfss	status,2,c
  7524  000F98  0012               	return	
  7525  000F9A  D7F3               	goto	i2l534
  7526  000F9C                     __end_ofi2_GLCD_DisableController:
  7527                           	opt stack 0
  7528                           tosu	equ	0xFFF
  7529                           tosh	equ	0xFFE
  7530                           tosl	equ	0xFFD
  7531                           pclatu	equ	0xFFB
  7532                           pclath	equ	0xFFA
  7533                           tblptru	equ	0xFF8
  7534                           tblptrh	equ	0xFF7
  7535                           tblptrl	equ	0xFF6
  7536                           tablat	equ	0xFF5
  7537                           prodh	equ	0xFF4
  7538                           prodl	equ	0xFF3
  7539                           intcon	equ	0xFF2
  7540                           postinc0	equ	0xFEE
  7541                           fsr0h	equ	0xFEA
  7542                           fsr0l	equ	0xFE9
  7543                           wreg	equ	0xFE8
  7544                           postdec1	equ	0xFE5
  7545                           fsr1h	equ	0xFE2
  7546                           fsr1l	equ	0xFE1
  7547                           fsr2h	equ	0xFDA
  7548                           fsr2l	equ	0xFD9
  7549                           status	equ	0xFD8
  7550                           
  7551 ;; *************** function i2_GLCD_Delay *****************
  7552 ;; Defined at:
  7553 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;		None
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;		None
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  1    wreg      void 
  7560 ;; Registers used:
  7561 ;;		None
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7571 ;;Total ram usage:        0 bytes
  7572 ;; Hardware stack levels used:    1
  7573 ;; This function calls:
  7574 ;;		Nothing
  7575 ;; This function is called by:
  7576 ;;		i2_GLCD_ReadStatus
  7577 ;;		i2_GLCD_WriteCommand
  7578 ;;		i2_GLCD_WriteData
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           	psect	text55
  7583  0010C4                     __ptext55:
  7584                           	opt stack 0
  7585  0010C4                     i2_GLCD_Delay:
  7586                           	opt stack 17
  7587                           
  7588                           ;KS0108-PIC18.c: 26: __nop();
  7589                           
  7590                           ;incstack = 0
  7591  0010C4  F000               	nop	
  7592  0010C6  0012               	return		;funcret
  7593  0010C8                     __end_ofi2_GLCD_Delay:
  7594                           	opt stack 0
  7595                           tosu	equ	0xFFF
  7596                           tosh	equ	0xFFE
  7597                           tosl	equ	0xFFD
  7598                           pclatu	equ	0xFFB
  7599                           pclath	equ	0xFFA
  7600                           tblptru	equ	0xFF8
  7601                           tblptrh	equ	0xFF7
  7602                           tblptrl	equ	0xFF6
  7603                           tablat	equ	0xFF5
  7604                           prodh	equ	0xFF4
  7605                           prodl	equ	0xFF3
  7606                           intcon	equ	0xFF2
  7607                           postinc0	equ	0xFEE
  7608                           fsr0h	equ	0xFEA
  7609                           fsr0l	equ	0xFE9
  7610                           wreg	equ	0xFE8
  7611                           postdec1	equ	0xFE5
  7612                           fsr1h	equ	0xFE2
  7613                           fsr1l	equ	0xFE1
  7614                           fsr2h	equ	0xFDA
  7615                           fsr2l	equ	0xFD9
  7616                           status	equ	0xFD8
  7617                           tosu	equ	0xFFF
  7618                           tosh	equ	0xFFE
  7619                           tosl	equ	0xFFD
  7620                           pclatu	equ	0xFFB
  7621                           pclath	equ	0xFFA
  7622                           tblptru	equ	0xFF8
  7623                           tblptrh	equ	0xFF7
  7624                           tblptrl	equ	0xFF6
  7625                           tablat	equ	0xFF5
  7626                           prodh	equ	0xFF4
  7627                           prodl	equ	0xFF3
  7628                           intcon	equ	0xFF2
  7629                           postinc0	equ	0xFEE
  7630                           fsr0h	equ	0xFEA
  7631                           fsr0l	equ	0xFE9
  7632                           wreg	equ	0xFE8
  7633                           postdec1	equ	0xFE5
  7634                           fsr1h	equ	0xFE2
  7635                           fsr1l	equ	0xFE1
  7636                           fsr2h	equ	0xFDA
  7637                           fsr2l	equ	0xFD9
  7638                           status	equ	0xFD8
  7639                           
  7640                           	psect	text56
  7641  000000                     __ptext56:
  7642                           	opt stack 0
  7643                           tosu	equ	0xFFF
  7644                           tosh	equ	0xFFE
  7645                           tosl	equ	0xFFD
  7646                           pclatu	equ	0xFFB
  7647                           pclath	equ	0xFFA
  7648                           tblptru	equ	0xFF8
  7649                           tblptrh	equ	0xFF7
  7650                           tblptrl	equ	0xFF6
  7651                           tablat	equ	0xFF5
  7652                           prodh	equ	0xFF4
  7653                           prodl	equ	0xFF3
  7654                           intcon	equ	0xFF2
  7655                           postinc0	equ	0xFEE
  7656                           fsr0h	equ	0xFEA
  7657                           fsr0l	equ	0xFE9
  7658                           wreg	equ	0xFE8
  7659                           postdec1	equ	0xFE5
  7660                           fsr1h	equ	0xFE2
  7661                           fsr1l	equ	0xFE1
  7662                           fsr2h	equ	0xFDA
  7663                           fsr2l	equ	0xFD9
  7664                           status	equ	0xFD8
  7665                           
  7666                           	psect	rparam
  7667  0000                     tosu	equ	0xFFF
  7668                           tosh	equ	0xFFE
  7669                           tosl	equ	0xFFD
  7670                           pclatu	equ	0xFFB
  7671                           pclath	equ	0xFFA
  7672                           tblptru	equ	0xFF8
  7673                           tblptrh	equ	0xFF7
  7674                           tblptrl	equ	0xFF6
  7675                           tablat	equ	0xFF5
  7676                           prodh	equ	0xFF4
  7677                           prodl	equ	0xFF3
  7678                           intcon	equ	0xFF2
  7679                           postinc0	equ	0xFEE
  7680                           fsr0h	equ	0xFEA
  7681                           fsr0l	equ	0xFE9
  7682                           wreg	equ	0xFE8
  7683                           postdec1	equ	0xFE5
  7684                           fsr1h	equ	0xFE2
  7685                           fsr1l	equ	0xFE1
  7686                           fsr2h	equ	0xFDA
  7687                           fsr2l	equ	0xFD9
  7688                           status	equ	0xFD8
  7689                           
  7690                           	psect	temp
  7691  000038                     btemp:
  7692                           	opt stack 0
  7693  000038                     	ds	1
  7694  0000                     int$flags	set	btemp
  7695  0000                     wtemp6	set	btemp+1
  7696                           tosu	equ	0xFFF
  7697                           tosh	equ	0xFFE
  7698                           tosl	equ	0xFFD
  7699                           pclatu	equ	0xFFB
  7700                           pclath	equ	0xFFA
  7701                           tblptru	equ	0xFF8
  7702                           tblptrh	equ	0xFF7
  7703                           tblptrl	equ	0xFF6
  7704                           tablat	equ	0xFF5
  7705                           prodh	equ	0xFF4
  7706                           prodl	equ	0xFF3
  7707                           intcon	equ	0xFF2
  7708                           postinc0	equ	0xFEE
  7709                           fsr0h	equ	0xFEA
  7710                           fsr0l	equ	0xFE9
  7711                           wreg	equ	0xFE8
  7712                           postdec1	equ	0xFE5
  7713                           fsr1h	equ	0xFE2
  7714                           fsr1l	equ	0xFE1
  7715                           fsr2h	equ	0xFDA
  7716                           fsr2l	equ	0xFD9
  7717                           status	equ	0xFD8


Data Sizes:
    Strings     109
    Constant    481
    Data        6
    BSS         8
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      55
    BANK0           160     52      67
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    GLCD_WriteString@stringToWrite	PTR unsigned char  size(2) Largest target is 13
		 -> STR_11(CODE[13]), STR_10(CODE[11]), STR_9(CODE[10]), STR_8(CODE[9]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[8]), STR_2(CODE[7]), STR_1(CODE[10]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCB5_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCB5_DefaultInterruptHandler(), 

    IOCB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCB5_DefaultInterruptHandler(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_PIN_MANAGER_IOC
    _PIN_MANAGER_IOC->_Main_Menu_Function
    i2_GLCD_WriteChar->i2_GLCD_WriteData
    i2_Draw_Arrow->i2_Clear_Arrow_Column
    i2_Draw_runTime_Arrow->i2_GLCD_GoTo
    i2_Make_Arrow->i2_GLCD_WriteData
    i2_Clear_runTime_Arrows->i2_GLCD_GoTo
    i2_Clear_Arrow_Column->i2_GLCD_GoTo
    i2_GLCD_WriteData->i2___awdiv
    i2_GLCD_GoTo->i2_GLCD_WriteCommand
    i2_GLCD_WriteCommand->i2___awdiv
    i2_GLCD_ReadStatus->i2_GLCD_DisableController
    i2_GLCD_ReadStatus->i2_GLCD_EnableController

Critical Paths under _main in BANK0

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB5_SetInterruptHandler
    _GLCD_Initalize->_GLCD_WriteCommand
    _Initialize_Menus->_GLCD_Line
    _GLCD_ClearScreen->_GLCD_GoTo
    _Draw_runTime_Menu->_GLCD_Line
    _GLCD_WriteString->_GLCD_WriteChar
    _GLCD_WriteChar->_GLCD_WriteData
    _GLCD_Line->_GLCD_SetPixel
    _GLCD_SetPixel->_GLCD_GoTo
    _GLCD_ReadData->___awdiv
    _Draw_Arrow->_Clear_Arrow_Column
    _Draw_runTime_Arrow->_GLCD_GoTo
    _Make_Arrow->_GLCD_WriteData
    _Clear_runTime_Arrows->_GLCD_GoTo
    _Clear_Arrow_Column->_GLCD_GoTo
    _GLCD_WriteData->___awdiv
    _GLCD_GoTo->_GLCD_WriteCommand
    _GLCD_WriteCommand->___awdiv
    _GLCD_ReadStatus->_GLCD_DisableController
    _GLCD_ReadStatus->_GLCD_EnableController

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  147021
                                             51 BANK0      1     1      0
                      _Check_Buttons
                         _Draw_Arrow
                   _GLCD_ClearScreen
                     _GLCD_Initalize
                   _Initialize_Menus
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                   _EPWM1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              2 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     196
          _IOCB4_SetInterruptHandler
          _IOCB5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB5_SetInterruptHandler                            2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCD_Initalize                                       1     1      0     767
                                             11 BANK0      1     1      0
               _GLCD_InitializePorts
                  _GLCD_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _GLCD_InitializePorts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        0     0      0   85115
                         _Draw_Arrow
                  _Draw_runTime_Menu
                   _GLCD_ClearScreen
                   _Initialize_Menus
 ---------------------------------------------------------------------------------
 (1) _Initialize_Menus                                     0     0      0   24270
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
 ---------------------------------------------------------------------------------
 (1) _GLCD_ClearScreen                                     2     2      0    7378
                                             14 BANK0      2     2      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Draw_runTime_Menu                                    0     0      0   24270
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
 ---------------------------------------------------------------------------------
 (2) _GLCD_WriteString                                     2     0      2    3273
                                             13 BANK0      2     0      2
                     _GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (3) _GLCD_WriteChar                                       3     3      0    2392
                                             10 BANK0      3     3      0
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _GLCD_Line                                           30    22      8   16034
                                             21 BANK0     30    22      8
                      _GLCD_SetPixel
 ---------------------------------------------------------------------------------
 (3) _GLCD_SetPixel                                        7     5      2   14218
                                             14 BANK0      7     5      2
                          _GLCD_GoTo
                      _GLCD_ReadData
                     _GLCD_WriteData
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GLCD_ReadData                                        2     2      0    2302
                                              8 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _Draw_Arrow                                           0     0      0   29197
                 _Clear_Arrow_Column
               _Clear_runTime_Arrows
                 _Draw_runTime_Arrow
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Draw_runTime_Arrow                                   0     0      0    7264
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Make_Arrow                                           0     0      0    2301
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_runTime_Arrows                                 1     1      0    7313
                                             14 BANK0      1     1      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_Arrow_Column                                   9     9      0    7356
                                             14 BANK0      9     9      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _GLCD_WriteData                                       2     2      0    2301
                                              8 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GLCD_GoTo                                            3     2      1    4963
                                             11 BANK0      3     2      1
                  _GLCD_WriteCommand
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2124
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _GLCD_WriteCommand                                    3     2      1     699
                                              8 BANK0      3     2      1
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _GLCD_ReadStatus                                      2     2      0     111
                                              1 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
 ---------------------------------------------------------------------------------
 (6) _GLCD_EnableController                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_DisableController                               1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_Delay                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                          18    18      0   11262
                                             30 COMRAM    18    18      0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     6     6      0   11262
                                             24 COMRAM     6     6      0
                 _Main_Menu_Function
                        i2_GLCD_GoTo
                   i2_GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (11) i2_GLCD_WriteChar                                    3     3      0     828
                                             10 COMRAM     3     3      0
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (11) _Main_Menu_Function                                  1     1      0    8843
                                             23 COMRAM     1     1      0
                       i2_Draw_Arrow
 ---------------------------------------------------------------------------------
 (12) i2_Draw_Arrow                                        0     0      0    8821
               i2_Clear_Arrow_Column
             i2_Clear_runTime_Arrows
               i2_Draw_runTime_Arrow
                        i2_GLCD_GoTo
                       i2_Make_Arrow
 ---------------------------------------------------------------------------------
 (13) i2_Draw_runTime_Arrow                                0     0      0    2170
                        i2_GLCD_GoTo
                       i2_Make_Arrow
 ---------------------------------------------------------------------------------
 (13) i2_Make_Arrow                                        0     0      0     737
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (13) i2_Clear_runTime_Arrows                              1     1      0    2219
                                             14 COMRAM     1     1      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (13) i2_Clear_Arrow_Column                                9     9      0    2262
                                             14 COMRAM     9     9      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (12) i2_GLCD_WriteData                                    2     2      0     737
                                              8 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (11) i2_GLCD_GoTo                                         3     2      1    1433
                                             11 COMRAM     3     2      1
                i2_GLCD_WriteCommand
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (13) i2___awdiv                                           8     4      4     560
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_GLCD_WriteCommand                                 3     2      1     373
                                              8 COMRAM     3     2      1
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_ReadStatus                                   2     2      0     111
                                              1 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
 ---------------------------------------------------------------------------------
 (14) i2_GLCD_EnableController                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_GLCD_DisableController                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_GLCD_Delay                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Draw_Arrow
       _Clear_Arrow_Column
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Clear_runTime_Arrows
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Draw_runTime_Arrow
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _Make_Arrow
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _Draw_runTime_Menu
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
     _GLCD_ClearScreen
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Initialize_Menus
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
   _Draw_Arrow
     _Clear_Arrow_Column
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Clear_runTime_Arrows
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Draw_runTime_Arrow
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _Make_Arrow
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
   _GLCD_ClearScreen
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_WriteData
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv
   _GLCD_Initalize
     _GLCD_InitializePorts
     _GLCD_WriteCommand
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv (ARG)
   _Initialize_Menus
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_Line
       _GLCD_SetPixel
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_ReadData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
         ___awdiv
     _GLCD_WriteString
       _GLCD_WriteChar
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
       _IOCB5_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR4_Initialize
       _TMR4_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _Main_Menu_Function
       i2_Draw_Arrow
         i2_Clear_Arrow_Column
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_runTime_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Draw_runTime_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_GLCD_GoTo
           i2_GLCD_WriteCommand
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv (ARG)
           i2___awdiv
         i2_Make_Arrow
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
     i2_GLCD_GoTo
       i2_GLCD_WriteCommand
         i2_GLCD_Delay
         i2_GLCD_DisableController
         i2_GLCD_EnableController
         i2_GLCD_ReadStatus
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
         i2___awdiv (ARG)
       i2___awdiv
     i2_GLCD_WriteChar
       i2_GLCD_WriteData
         i2_GLCD_Delay
         i2_GLCD_DisableController
         i2_GLCD_EnableController
         i2_GLCD_ReadStatus
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
         i2___awdiv
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     34      43       5       41.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      37       1       58.5%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7A       6        0.0%
DATA                 0      0      7A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jul 22 22:43:26 2020

              GLCD_WriteCommand@controller 0068                  GLCD_WriteData@dataToWrite 0069  
                          GLCD_Initalize@i 006B                               ___awdiv@sign 0065  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
       i2GLCD_DisableController@controller 0001           GLCD_DisableController@controller 0060  
                          _timer0ReloadVal 0094                 ?_IOCB4_SetInterruptHandler 0060  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l400 06CA                                        l402 06DA  
                                      l403 06DE                                        l404 06E2  
                                      l405 06E6                                        l406 06EA  
                                      l407 06F0                                        l600 0CDE  
                                      l432 013E                                        l408 072A  
                                      l433 0156                                        l530 0F0E  
                                      l522 0EE4                                        l610 0984  
                                      l602 0CF2                                        l442 020A  
                                      l531 0F02                                        l523 0ED8  
                                      l603 0CFC                                        l443 023E  
                                      l612 09A0                                        l533 0F06  
                                      l525 0EDC                                        l613 0996  
                                      l621 0B04                                        l437 0202  
                                      l534 0F0A                                        l526 0EE0  
                                      l622 0AFA                                        l630 0B7A  
                                      l438 01A0                                        l631 0B38  
                                      l439 01D4                                        l624 0B2C  
                                      l464 0FD2                                        l625 0B22  
                                      l633 0B4E                                        l481 0AA8  
                                      l810 060E                                        l634 0B64  
                                      l474 0E1E                                        l811 0618  
                                      l803 05C0                                        l395 06BE  
                                      l812 0626                                        l804 05D0  
                                      l476 0E36                                        l396 06BA  
                                      l388 0D98                                        l469 053C  
                                      l806 05EE                                        l486 0E60  
                                      l398 0722                                        l807 05E6  
                                      l487 0E48                                        l399 06FA  
                                      l599 0D10                               __CFG_CPB$OFF 000000  
                                      _PR4 000FA9                               __CFG_CPD$OFF 000000  
                                      tosl 000FFD                                        wreg 000FE8  
              PIN_MANAGER_IOC@currentState 001D                         __size_of_GLCD_GoTo 0088  
                       __size_of_GLCD_Line 01B4                                       l2601 07AE  
                                     l3093 0FCA                                       l2475 0DDC  
                                     l2821 097C                                       l2671 0A98  
                                     l2681 0AD6                                       l2589 0534  
                                     l2951 0E16                                       l2785 01A0  
                                     l2799 020A                                       l2959 0E2E  
                                     STR_1 FFD4                                       STR_2 FFF8  
                                     STR_3 FFF0                                       STR_4 FFB5  
                                     STR_5 FFAA                                       STR_6 FFE7  
                                     STR_7 FFCA                                       STR_8 FFDE  
                                     STR_9 FFC0                                       u1010 05F2  
                                     u1130 0AD6                                       u1070 0564  
                                     u1230 0184                                       u1144 0510  
                                     u1400 0E42                                       u1145 050C  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u1707 0D76  
                                     _TMR4 000F87                                       _WPUB 000F5B  
                                     _main 0D64                            _TMR0_StartTimer 10B8  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       fsr0l 000FE9  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 0038                                       prodh 000FF4  
          __end_ofi2_GLCD_EnableController 0F76                                       prodl 000FF3  
                                     start 00B4                              __CFG_IESO$OFF 000000  
                            __CFG_MCLRE$ON 000000                        i2_GLCD_WriteCommand 0E76  
                             ___param_bank 000000            __size_of_GLCD_DisableController 002A  
                      __size_of_GLCD_Delay 0004                    __end_of_TMR0_Initialize 0DD8  
           ??_TMR0_DefaultInterruptHandler 0001                    __end_of_GLCD_ReadStatus 0ED2  
           __size_of_OSCILLATOR_Initialize 0012              __end_of_OSCILLATOR_Initialize 1088  
                     _Clear_runTime_Arrows 0ADE                                      ?_main 0001  
                          __end_of___awdiv 0630                                      _EEADR 000F74  
                             ?i2_GLCD_GoTo 000C                                      STR_10 FF9F  
                                    STR_11 FF92          __end_of_IOCB4_SetInterruptHandler 10A6  
                                    _T0CON 000FD5                            ___awdiv@divisor 0062  
                                    _T4CON 000F88                                      i2l120 03FC  
                                    i2l121 03FE                                      i2l141 0FF4  
                                    i2l125 0434                                      i2l126 0424  
                                    i2l127 0472                                      i2l144 0FFE  
                                    i2l137 042C                                      i2l181 005E  
                                    i2l183 0068                                      i2l600 0D22  
                                    i2l530 0F86                                      i2l522 0F60  
                                    i2l610 09E0                                      i2l602 0D36  
                                    i2l531 0F7A                                      i2l523 0F54  
                                    i2l603 0D40                                      i2l612 09F8  
                                    i2l533 0F7E                                      i2l525 0F58  
                                    i2l613 09F0                                      i2l621 0C58  
                                    i2l534 0F82                                      i2l526 0F5C  
                                    i2l622 0C50                                      i2l630 0BD0  
                                    i2l631 0B8E                                      i2l624 0C7E  
                                    i2l625 0C76                                      i2l633 0BA4  
                                    i2l481 0CA8                                      i2l810 0692  
                                    i2l634 0BBA                                      i2l811 069C  
                                    i2l803 0644                                      i2l812 06AA  
                                    i2l804 0654                                      i2l469 0746  
                                    i2l806 0672                                      i2l807 066A  
                                    i2l599 0D54                            ___awdiv@counter 0064  
                                    _TMR0H 000FD7                                      _TMR0L 000FD6  
                                    _PORTA 000F80                                      _PORTB 000F81  
                                    _PORTC 000F82                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                               _Draw_Arrow 0CDC          __size_of_TMR0_SetInterruptHandler 000A  
                            __CFG_WRT0$OFF 000000                            _TMR4_Initialize 103A  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                ?_TMR0_SetInterruptHandler 0060                              __CFG_WRT3$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                __size_of_Clear_Arrow_Column 005E  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                     ?i2_GLCD_WriteCommand 0009                           __end_of_TMR0_ISR 0F50  
                               _Make_Arrow 104E                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                          __end_of_font5x8 FF91                             __CFG_EBTRB$OFF 000000  
                  __end_of_PIN_MANAGER_IOC 047E                                      _color FF91  
                                    pclath 000FFA                                      tablat 000FF5  
                     i2_Clear_Arrow_Column 09D4                     ??_GLCD_InitializePorts 0060  
               __end_of_Main_Menu_Function 1004                                      status 000FD8  
                                    wtemp6 0039                         __size_ofi2___awdiv 0084  
                          __initialization 0BE2                               __end_of_main 0D9E  
                        __end_of_GLCD_GoTo 05AA                          __end_of_GLCD_Line 026C  
              ?_INTERRUPT_InterruptManager 0001                  __size_of_Initialize_Menus 0128  
                    ?_Clear_runTime_Arrows 0001                        Clear_Arrow_Column@i 0076  
                      Clear_Arrow_Column@j 0075                                     ??_main 0093  
                            __activetblptr 000003                    PIN_MANAGER_IOC@cw_count 0032  
                           __CFG_RETEN$OFF 000000                      ??i2_GLCD_WriteCommand 000A  
                         GLCD_SetPixel@tmp 0072                    __end_of_TMR0_StartTimer 10BC  
        __size_ofi2_GLCD_DisableController 0026                              ?i2_GLCD_Delay 0001  
                                   _EEADRH 000F75                                     _EEDATA 000F73  
                                   _CCPR1H 000FBD                                     _CCPR1L 000FBC  
                                   _EECON2 000F7E                                     _ANCON0 000F5D  
                                   _ANCON1 000F5C                  ?i2_GLCD_DisableController 0001  
                   _GLCD_DisableController 0EFC                           ___awdiv@dividend 0060  
                    ?i2_Clear_Arrow_Column 0001                            __CFG_BBSIZ$BB2K 000000  
                                   i2l3019 0C98                                     i2l3029 0CD4  
                           __CFG_WDTEN$OFF 000000                                     i2l2539 0E78  
                                   i2l2653 073E                                     i2l2559 090E  
                                   i2l2693 09D8                                     _TABLAT 000FF5  
                                   _OSCCON 000FD3                  __size_ofi2_GLCD_WriteChar 0052  
                __size_ofi2_GLCD_WriteData 006A                            _TMR4_StartTimer 10B4  
                         _GLCD_WriteString 0E46                             __CFG_XINST$OFF 000000  
                                ??___awdiv 0064                             __CFG_STVREN$ON 000000  
                         ?_TMR0_Initialize 0001                    __end_of_TMR4_Initialize 104E  
                         ___awdiv@quotient 0066                           ?_GLCD_ReadStatus 0001  
                   __size_of_Check_Buttons 007C                             i2___awdiv@sign 0006  
            __size_ofi2_Draw_runTime_Arrow 0056                               __pdataCOMRAM 0036  
                              ?_Draw_Arrow 0001                          __end_ofi2___awdiv 06B4  
                             __mediumconst FDB0                                     tblptrh 000FF7  
                                   tblptrl 000FF6           __size_ofi2_GLCD_EnableController 0026  
                                   tblptru 000FF8                      _GLCD_EnableController 0ED2  
                              ?_Make_Arrow 0001                             ??i2_GLCD_Delay 0001  
                             ??_GLCD_Delay 0060   TMR0_SetInterruptHandler@InterruptHandler 0060  
IOCB5_SetInterruptHandler@InterruptHandler 0060  IOCB4_SetInterruptHandler@InterruptHandler 0060  
                         ?_PIN_MANAGER_IOC 0001              __size_of_INTERRUPT_Initialize 0004  
                        _SYSTEM_Initialize 1020                                 __accesstop 0060  
                  __end_of__initialization 0C2C              GLCD_WriteString@stringToWrite 006D  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                          GLCD_WriteChar@i 006B                          ?_GLCD_ClearScreen 0001  
                             i2GLCD_GoTo@i 000E                               i2GLCD_GoTo@x 000D  
                             i2GLCD_GoTo@y 000C                      __end_of_GLCD_ReadData 090C  
                        ?_EPWM1_Initialize 0001                             __pcstackCOMRAM 0001  
                       ??_GLCD_ClearScreen 006E                               __pidataBANK0 10B0  
                      ??_SYSTEM_Initialize 0064                                  ?_TMR0_ISR 0001  
                       ??_EPWM1_Initialize 0060                              __end_of_color FF92  
                   ??_Clear_runTime_Arrows 006E               PIN_MANAGER_IOC@previousState 0033  
            _IOCB4_DefaultInterruptHandler 000000                      __end_of_GLCD_SetPixel 0522  
                       __end_of_GLCD_Delay 10C4                    __size_of_GLCD_Initalize 0022  
              ??_IOCB4_SetInterruptHandler 0062                         _Draw_runTime_Arrow 0B36  
                 PIN_MANAGER_IOC@ccw_count 0031                       __size_ofi2_GLCD_GoTo 007A  
                         ?_TMR0_StartTimer 0001                        ?_Draw_runTime_Arrow 0001  
                  __end_of_TMR4_StartTimer 10B8                     ??i2_Clear_Arrow_Column 000F  
                __end_of_SYSTEM_Initialize 103A                                 __pbssBANK0 00A0  
                          __CFG_PLLCFG$OFF 000000                              _Check_Buttons 06B4  
                      __size_of_Draw_Arrow 0044           __end_of_TMR0_SetInterruptHandler 1092  
                     ??_Draw_runTime_Arrow 006E                        __size_of_Make_Arrow 0014  
                               ??_TMR0_ISR 0001                                    _CCP1CON 000FBB  
                                  _ECCP1AS 000FBF                           _Initialize_Menus 026C  
                  __size_of_GLCD_WriteChar 0058                    __size_of_GLCD_WriteData 0078  
                        GLCD_ClearScreen@i 006E                          GLCD_ClearScreen@j 006F  
       __size_of_IOCB5_SetInterruptHandler 000A                           ?_TMR4_Initialize 0001  
               ?_IOCB5_SetInterruptHandler 0060                           __CFG_CANMX$PORTB 000000  
                   ?_GLCD_EnableController 0001                                    _REFOCON 000F9A  
                GLCD_ReadStatus@controller 0062                                    _OSCCON2 000FD2  
                                  _TBLPTRH 000FF7                                    _TBLPTRL 000FF6  
                                  _TBLPTRU 000FF8                          _GLCD_WriteCommand 0DD8  
                                  _OSCTUNE 000F9B                                    i2u94_40 0676  
                       ?_GLCD_WriteCommand 0068                             ?_Check_Buttons 0001  
                         i2_GLCD_WriteChar 0C8A                           i2_GLCD_WriteData 090C  
           GLCD_Line@TwoDxAccumulatedError 007F                  _IOCB4_SetInterruptHandler 109C  
                      ??_GLCD_WriteCommand 0069                                 _xMenuStart 009D  
                          __CFG_PWRTEN$OFF 000000                                    __Hparam 0000  
              i2GLCD_WriteChar@charToWrite 000B                                    __Lparam 0000  
                                  ___awdiv 05AA                       __end_ofi2_GLCD_Delay 10C8  
                       _Main_Menu_Function 0FE2           __end_ofi2_GLCD_DisableController 0F9C  
                                  __pcinit 0BE2                                    __ramtop 0F00  
                                  __ptext0 0D64                                    __ptext1 1020  
                                  __ptext2 103A                                    __ptext3 10B4  
                                  __ptext4 0D9E                                    __ptext5 10B8  
                                  __ptext6 1088                                    __ptext7 0A2E  
                                  __ptext8 1092                                    __ptext9 109C  
                                _GLCD_GoTo 0522                                  _GLCD_Line 00B8  
                                _T0CONbits 000FD5          __end_of_IOCB5_SetInterruptHandler 109C  
                                  _font5x8 FDB1                 __end_of_Clear_Arrow_Column 09D4  
                    _OSCILLATOR_Initialize 1076                        ?_Main_Menu_Function 0001  
                __end_of_GLCD_WriteCommand 0E10                    i2_GLCD_EnableController 0F50  
                            ?i2_Draw_Arrow 0001                   __end_of_GLCD_WriteString 0E76  
                                _T4CONbits 000F88                    ?_GLCD_DisableController 0001  
                 ??_PIN_MANAGER_Initialize 0062                          __CFG_MSSPMSK$MSK7 000000  
                    GLCD_ReadStatus@status 0061                              ?i2_Make_Arrow 0001  
                       PIN_MANAGER_IOC@CHA 001B                         PIN_MANAGER_IOC@CHB 001C  
               __size_of_SYSTEM_Initialize 001A                           ?_TMR4_StartTimer 0001  
                     end_of_initialization 0C2C                   ??i2_Clear_runTime_Arrows 000F  
            __size_of_GLCD_InitializePorts 000A                       ??_Main_Menu_Function 0018  
                               GLCD_GoTo@i 006D                                 GLCD_GoTo@x 006C  
                               GLCD_GoTo@y 006B             GLCD_Line@TwoDyAccumulatedError 0081  
              i2GLCD_WriteData@dataToWrite 000A                                    postdec1 000FE5  
                                  postinc0 000FEE                      Clear_runTime_Arrows@i 006E  
                           GLCD_Line@TwoDx 0087                             GLCD_Line@TwoDy 0089  
              __end_ofi2_GLCD_WriteCommand 0EA6                             _GLCD_Initalize 0FC0  
                 _TMR0_SetInterruptHandler 1088                                  _PORTBbits 000F81  
                               ?_GLCD_GoTo 006B                                 ?_GLCD_Line 0075  
           __end_of_GLCD_DisableController 0F26                             ??i2_Draw_Arrow 0018  
                             ??_Draw_Arrow 0077                           __CFG_FOSC$INTIO2 000000  
                           ??i2_Make_Arrow 000B                               ??_Make_Arrow 006A  
                          ??_Check_Buttons 0093                                  i2___awdiv 0630  
             __end_ofi2_Draw_runTime_Arrow 0BE2                         i2___awdiv@dividend 0001  
                       __end_of_Draw_Arrow 0D20               __end_of_INTERRUPT_Initialize 10C0  
                   __end_of_GLCD_Initalize 0FE2                         __end_of_Make_Arrow 1062  
                           GLCD_SetPixel@x 0073                             GLCD_SetPixel@y 006E  
                           _GLCD_WriteChar 0A86                             _GLCD_WriteData 07AA  
                    PIN_MANAGER_IOC@result 001E                              __pidataCOMRAM 10C8  
                        __size_of_TMR0_ISR 002A                  ??i2_GLCD_EnableController 0001  
                   ?_OSCILLATOR_Initialize 0001                           _timeAfterFinishX 0036  
                __size_of_GLCD_ClearScreen 0036                 __size_of_GLCD_WriteCommand 0038  
                 i2_GLCD_DisableController 0F76                        start_initialization 0BE2  
                __size_of_EPWM1_Initialize 001C                         i2___awdiv@quotient 0007  
                 __size_of_TMR0_Initialize 003A            __size_of_PIN_MANAGER_Initialize 0058  
                 __size_of_GLCD_ReadStatus 002C                                 ?i2___awdiv 0001  
                 __end_of_Initialize_Menus 0394            __size_ofi2_Clear_runTime_Arrows 0054  
                    __size_ofi2_GLCD_Delay 0004                   __size_of_PIN_MANAGER_IOC 00EA  
                           _currentContext 0034                     __end_of_GLCD_WriteChar 0ADE  
                   __end_of_GLCD_WriteData 0822                                _CCPTMRSbits 000F99  
                          ?_GLCD_Initalize 0001                                __pdataBANK0 009C  
                 __end_ofi2_GLCD_WriteChar 0CDC                   __end_ofi2_GLCD_WriteData 0976  
                  ??_GLCD_EnableController 0060              __size_of_Clear_runTime_Arrows 0058  
                            ??i2_GLCD_GoTo 000D                                ??_GLCD_GoTo 006C  
            _IOCB5_DefaultInterruptHandler 000000                ??_IOCB5_SetInterruptHandler 0062  
                              ??_GLCD_Line 007D                    i2GLCD_ReadStatus@status 0002  
                              __pbssCOMRAM 0031                              __pcstackBANK0 0060  
                        i2_GLCD_ReadStatus 0F9C                     __size_of_GLCD_ReadData 0074  
                             i2_GLCD_Delay 10C4                          _Draw_runTime_Menu 0822  
                       ?i2_GLCD_ReadStatus 0001              __size_ofi2_Clear_Arrow_Column 005A  
                   __size_of_GLCD_SetPixel 00A4                   Main_Menu_Function@result 0018  
                       ?_Draw_runTime_Menu 0001                      _TMR0_InterruptHandler 0096  
                                __pnvBANK0 0094                   __size_of_TMR0_StartTimer 0004  
                     __end_ofi2_Draw_Arrow 0D64                        ??i2_GLCD_ReadStatus 0002  
                   _PIN_MANAGER_Initialize 0A2E                       __end_ofi2_Make_Arrow 1076  
                      ??_Draw_runTime_Menu 0093                                  __pintcode 0008  
                       GLCD_SetPixel@color 006F                            ?_GLCD_WriteChar 0001  
                          ?_GLCD_WriteData 0001                              __pmediumconst FDB0  
                  i2Clear_runTime_Arrows@i 000F                                   ?___awdiv 0060  
              __size_of_Draw_runTime_Arrow 0056                     i2_Clear_runTime_Arrows 0C36  
             ??_INTERRUPT_InterruptManager 001F                       i2_Draw_runTime_Arrow 0B8C  
                                _mainState 0035                                   _ECCP1DEL 000FBE  
                __end_ofi2_GLCD_ReadStatus 0FC0                          ?_GLCD_WriteString 006D  
                 __size_of_TMR4_Initialize 0014                        __end_ofi2_GLCD_GoTo 07AA  
                __end_of_Draw_runTime_Menu 0898                                ??i2___awdiv 0005  
                       ??_GLCD_WriteString 006F                       _INTERRUPT_Initialize 10BC  
                       _Clear_Arrow_Column 0976                  _IOCB5_SetInterruptHandler 1092  
                        ??_TMR0_Initialize 0062                          ??_GLCD_ReadStatus 0061  
                                 _IOCBbits 000F5A                                   _LATEbits 000F8D  
        i2GLCD_EnableController@controller 0001            GLCD_EnableController@controller 0060  
                                 i2u111_40 076A                                   i2u143_40 0CD4  
                                 i2u150_48 0F3E        __size_of_INTERRUPT_InterruptManager 00AC  
                                 i2u144_40 03AE                                   i2u145_40 03BA  
                                 i2u144_48 03B0                                   i2u145_48 03BC  
                                 i2u171_47 0410                                   i2u148_40 040A  
               ??_TMR0_SetInterruptHandler 0062                        ?_Clear_Arrow_Column 0001  
                                 _PIR4bits 000FB7                                   _RCONbits 000FD0  
                            _GLCD_ReadData 0898                              GLCD_Line@Xinc 0083  
                            GLCD_Line@Yinc 0085                                   _TMR0_ISR 0F26  
                                 _PSTR1CON 000F9C                          ??_PIN_MANAGER_IOC 0019  
                            _GLCD_SetPixel 047E               __end_of_GLCD_InitializePorts 10B0  
                    ?i2_Draw_runTime_Arrow 0001                           __CFG_SOSCSEL$DIG 000000  
                         _GLCD_ClearScreen 0E10                           _EPWM1_Initialize 1004  
                        i2___awdiv@divisor 0003                       ??_Clear_Arrow_Column 006E  
                        i2___awdiv@counter 0005                                  copy_data0 0BF6  
                    ?_INTERRUPT_Initialize 0001                                 _EECON1bits 000F7F  
              __size_of_Main_Menu_Function 0022                   __size_of_TMR4_StartTimer 0004  
                                 __Hrparam 0000                                   __Lrparam 0000  
                           ?_GLCD_ReadData 0001                         __CFG_BOREN$SBORDIS 000000  
                  ??_OSCILLATOR_Initialize 0060                 ??i2_GLCD_DisableController 0001  
                        ??_TMR0_StartTimer 0060                           __size_of___awdiv 0086  
                           ?_GLCD_SetPixel 006E                          GLCD_Line@CurrentX 008B  
                        GLCD_Line@CurrentY 008D                     _IOCB4_InterruptHandler 009A  
                              i2_GLCD_GoTo 0730                i2GLCD_ReadStatus@controller 0003  
               __size_ofi2_GLCD_ReadStatus 0024               __size_ofi2_GLCD_WriteCommand 0030  
                                 __ptext10 1076                                   __ptext11 10BC  
                                 __ptext20 0A86                                   __ptext12 1004  
                                 __ptext21 00B8                                   __ptext13 0FC0  
                                 __ptext30 0522                                   __ptext22 047E  
                                 __ptext14 10A6                                   __ptext31 05AA  
                                 __ptext23 0898                                   __ptext15 06B4  
                                 __ptext40 0394                                   __ptext32 0DD8  
                                 __ptext24 0CDC                                   __ptext16 026C  
                                 __ptext41 0C8A                                   __ptext33 0EA6  
                                 __ptext25 0B36                                   __ptext17 0E10  
                                 __ptext50 0630                                   __ptext42 0FE2  
                                 __ptext34 0ED2                                   __ptext26 104E  
                                 __ptext18 0822                                   __ptext51 0E76  
                                 __ptext43 0D20                                   __ptext35 0EFC  
                                 __ptext27 0ADE                                   __ptext19 0E46  
                                 __ptext52 0F9C                                   __ptext44 0B8C  
                                 __ptext36 10C0                                   __ptext28 0976  
               __size_of_Draw_runTime_Menu 0076                                   __ptext53 0F50  
                                 __ptext45 1062                                   __ptext29 07AA  
                                 __ptext54 0F76                                   __ptext46 0C36  
                                 __ptext38 0F26                                   __ptext55 10C4  
                                 __ptext47 09D4                                   __ptext39 10CA  
                                 __ptext56 0000                                   __ptext48 090C  
                                 __ptext49 0730                                 _GLCD_Delay 10C0  
                    __end_of_Check_Buttons 0730                      __size_ofi2_Draw_Arrow 0044  
                        ?_Initialize_Menus 0001                          ??_TMR4_Initialize 0060  
                            __size_of_main 003A                      __size_ofi2_Make_Arrow 0014  
            i2GLCD_WriteCommand@controller 0009                                 _ARROW_SIZE 009E  
     __end_of_TMR0_DefaultInterruptHandler 10CC      __size_of_TMR0_DefaultInterruptHandler 0002  
             _TMR0_DefaultInterruptHandler 10CA                         ??_Initialize_Menus 0093  
                         ??_GLCD_Initalize 006B                                   _screen_x 00A1  
                                 _screen_y 00A0                                   _subMenuY 0037  
                                 int$flags 0038                                   _runTimeX 009F  
       __end_of_INTERRUPT_InterruptManager 00B4                 _INTERRUPT_InterruptManager 0008  
                   ??i2_Draw_runTime_Arrow 000F                        __CFG_INTOSCSEL$HIGH 000000  
                        ?i2_GLCD_WriteChar 0001                          ?i2_GLCD_WriteData 0001  
           __size_of_GLCD_EnableController 002A              __end_of_GLCD_EnableController 0EFC  
                               _INTCONbits 000FF2                         ??i2_GLCD_WriteChar 000B  
                       ??i2_GLCD_WriteData 0009                               i2_Draw_Arrow 0D20  
                             i2_Make_Arrow 1062                     ??_INTERRUPT_Initialize 0060  
                             _valuesXStart 009C                                   intlevel2 0000  
             __end_of_Clear_runTime_Arrows 0B36                          GLCD_ReadData@data 0069  
                  ?_PIN_MANAGER_Initialize 0001                           ??_GLCD_WriteChar 006A  
                         ??_GLCD_WriteData 0068                       _GLCD_InitializePorts 10A6  
                          ??_GLCD_ReadData 0068              ?_TMR0_DefaultInterruptHandler 0001  
                GLCD_WriteChar@charToWrite 006A                                GLCD_Line@X1 0075  
                              GLCD_Line@X2 0079                                GLCD_Line@Y1 0077  
                              GLCD_Line@Y2 007B                                GLCD_Line@Dx 008F  
                              GLCD_Line@Dy 0091                          i2GLCD_WriteChar@i 000C  
                  ?i2_Clear_runTime_Arrows 0001                   ?i2_GLCD_EnableController 0001  
                          ??_GLCD_SetPixel 0070                   ??_GLCD_DisableController 0060  
                       __CFG_WDTPS$1048576 000000               __end_ofi2_Clear_Arrow_Column 0A2E  
                        ??_TMR4_StartTimer 0060                      i2Clear_Arrow_Column@i 0017  
                    i2Clear_Arrow_Column@j 0016                            _TMR0_Initialize 0D9E  
                          _GLCD_ReadStatus 0EA6                                ?_GLCD_Delay 0001  
           __end_of_PIN_MANAGER_Initialize 0A86                        __CFG_BORPWR$ZPBORMV 000000  
                   _IOCB5_InterruptHandler 0098                            _PIN_MANAGER_IOC 0394  
                    ?_GLCD_InitializePorts 0001                             _runTimeContext 00A2  
                 __end_of_GLCD_ClearScreen 0E46                         _GLCD_SetPixel$1676 0074  
                __size_of_GLCD_WriteString 0030             __end_ofi2_Clear_runTime_Arrows 0C8A  
        i2GLCD_WriteCommand@commandToWrite 000B            GLCD_WriteCommand@commandToWrite 006A  
                 __end_of_EPWM1_Initialize 1020                 __end_of_Draw_runTime_Arrow 0B8C  
