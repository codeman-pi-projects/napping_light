

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jul 20 21:33:48 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67  0000                     
    68                           ; Version 1.45
    69                           ; Generated 16/11/2017 GMT
    70                           ; 
    71                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F46K80 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103 ;; Function _IOCB4_DefaultInterruptHandler is unused but had its address taken
   104  0000                     
   105 ;; Function _IOCB5_DefaultInterruptHandler is unused but had its address taken
   106  0000                     
   107                           	psect	idataCOMRAM
   108  000E8A                     __pidataCOMRAM:
   109                           	opt stack 0
   110                           
   111                           ;initializer for _valuesXStart
   112  000E8A  4C                 	db	76
   113                           
   114                           ;initializer for _xMenuStart
   115  000E8B  04                 	db	4
   116                           
   117                           ;initializer for _ARROW_SIZE
   118  000E8C  04                 	db	4
   119                           
   120                           ;initializer for _timeAfterFinishX
   121  000E8D  41                 	db	65
   122                           
   123                           ;initializer for _runTimeX
   124  000E8E  0A                 	db	10
   125                           
   126                           ;initializer for _subMenuY
   127  000E8F  03                 	db	3
   128                           
   129                           	psect	mediumconst
   130  00FDB0                     __pmediumconst:
   131                           	opt stack 0
   132  00FDB0  00                 	db	0
   133  00FDB1                     _font5x8:
   134                           	opt stack 0
   135  00FDB1  00                 	db	0
   136  00FDB2  00                 	db	0
   137  00FDB3  00                 	db	0
   138  00FDB4  00                 	db	0
   139  00FDB5  00                 	db	0
   140  00FDB6  00                 	db	0
   141  00FDB7  00                 	db	0
   142  00FDB8  5F                 	db	95
   143  00FDB9  00                 	db	0
   144  00FDBA  00                 	db	0
   145  00FDBB  00                 	db	0
   146  00FDBC  07                 	db	7
   147  00FDBD  00                 	db	0
   148  00FDBE  07                 	db	7
   149  00FDBF  00                 	db	0
   150  00FDC0  14                 	db	20
   151  00FDC1  7F                 	db	127
   152  00FDC2  14                 	db	20
   153  00FDC3  7F                 	db	127
   154  00FDC4  14                 	db	20
   155  00FDC5  24                 	db	36
   156  00FDC6  2A                 	db	42
   157  00FDC7  7F                 	db	127
   158  00FDC8  2A                 	db	42
   159  00FDC9  12                 	db	18
   160  00FDCA  23                 	db	35
   161  00FDCB  13                 	db	19
   162  00FDCC  08                 	db	8
   163  00FDCD  64                 	db	100
   164  00FDCE  62                 	db	98
   165  00FDCF  36                 	db	54
   166  00FDD0  49                 	db	73
   167  00FDD1  55                 	db	85
   168  00FDD2  22                 	db	34
   169  00FDD3  50                 	db	80
   170  00FDD4  00                 	db	0
   171  00FDD5  05                 	db	5
   172  00FDD6  03                 	db	3
   173  00FDD7  00                 	db	0
   174  00FDD8  00                 	db	0
   175  00FDD9  00                 	db	0
   176  00FDDA  1C                 	db	28
   177  00FDDB  22                 	db	34
   178  00FDDC  41                 	db	65
   179  00FDDD  00                 	db	0
   180  00FDDE  00                 	db	0
   181  00FDDF  41                 	db	65
   182  00FDE0  22                 	db	34
   183  00FDE1  1C                 	db	28
   184  00FDE2  00                 	db	0
   185  00FDE3  08                 	db	8
   186  00FDE4  2A                 	db	42
   187  00FDE5  1C                 	db	28
   188  00FDE6  2A                 	db	42
   189  00FDE7  08                 	db	8
   190  00FDE8  08                 	db	8
   191  00FDE9  08                 	db	8
   192  00FDEA  3E                 	db	62
   193  00FDEB  08                 	db	8
   194  00FDEC  08                 	db	8
   195  00FDED  00                 	db	0
   196  00FDEE  50                 	db	80
   197  00FDEF  30                 	db	48
   198  00FDF0  00                 	db	0
   199  00FDF1  00                 	db	0
   200  00FDF2  08                 	db	8
   201  00FDF3  08                 	db	8
   202  00FDF4  08                 	db	8
   203  00FDF5  08                 	db	8
   204  00FDF6  08                 	db	8
   205  00FDF7  00                 	db	0
   206  00FDF8  30                 	db	48
   207  00FDF9  30                 	db	48
   208  00FDFA  00                 	db	0
   209  00FDFB  00                 	db	0
   210  00FDFC  20                 	db	32
   211  00FDFD  10                 	db	16
   212  00FDFE  08                 	db	8
   213  00FDFF  04                 	db	4
   214  00FE00  02                 	db	2
   215  00FE01  3E                 	db	62
   216  00FE02  51                 	db	81
   217  00FE03  49                 	db	73
   218  00FE04  45                 	db	69
   219  00FE05  3E                 	db	62
   220  00FE06  00                 	db	0
   221  00FE07  42                 	db	66
   222  00FE08  7F                 	db	127
   223  00FE09  40                 	db	64
   224  00FE0A  00                 	db	0
   225  00FE0B  42                 	db	66
   226  00FE0C  61                 	db	97
   227  00FE0D  51                 	db	81
   228  00FE0E  49                 	db	73
   229  00FE0F  46                 	db	70
   230  00FE10  21                 	db	33
   231  00FE11  41                 	db	65
   232  00FE12  45                 	db	69
   233  00FE13  4B                 	db	75
   234  00FE14  31                 	db	49
   235  00FE15  18                 	db	24
   236  00FE16  14                 	db	20
   237  00FE17  12                 	db	18
   238  00FE18  7F                 	db	127
   239  00FE19  10                 	db	16
   240  00FE1A  27                 	db	39
   241  00FE1B  45                 	db	69
   242  00FE1C  45                 	db	69
   243  00FE1D  45                 	db	69
   244  00FE1E  39                 	db	57
   245  00FE1F  3C                 	db	60
   246  00FE20  4A                 	db	74
   247  00FE21  49                 	db	73
   248  00FE22  49                 	db	73
   249  00FE23  30                 	db	48
   250  00FE24  01                 	db	1
   251  00FE25  71                 	db	113
   252  00FE26  09                 	db	9
   253  00FE27  05                 	db	5
   254  00FE28  03                 	db	3
   255  00FE29  36                 	db	54
   256  00FE2A  49                 	db	73
   257  00FE2B  49                 	db	73
   258  00FE2C  49                 	db	73
   259  00FE2D  36                 	db	54
   260  00FE2E  06                 	db	6
   261  00FE2F  49                 	db	73
   262  00FE30  49                 	db	73
   263  00FE31  29                 	db	41
   264  00FE32  1E                 	db	30
   265  00FE33  00                 	db	0
   266  00FE34  36                 	db	54
   267  00FE35  36                 	db	54
   268  00FE36  00                 	db	0
   269  00FE37  00                 	db	0
   270  00FE38  00                 	db	0
   271  00FE39  56                 	db	86
   272  00FE3A  36                 	db	54
   273  00FE3B  00                 	db	0
   274  00FE3C  00                 	db	0
   275  00FE3D  00                 	db	0
   276  00FE3E  08                 	db	8
   277  00FE3F  14                 	db	20
   278  00FE40  22                 	db	34
   279  00FE41  41                 	db	65
   280  00FE42  14                 	db	20
   281  00FE43  14                 	db	20
   282  00FE44  14                 	db	20
   283  00FE45  14                 	db	20
   284  00FE46  14                 	db	20
   285  00FE47  41                 	db	65
   286  00FE48  22                 	db	34
   287  00FE49  14                 	db	20
   288  00FE4A  08                 	db	8
   289  00FE4B  00                 	db	0
   290  00FE4C  02                 	db	2
   291  00FE4D  01                 	db	1
   292  00FE4E  51                 	db	81
   293  00FE4F  09                 	db	9
   294  00FE50  06                 	db	6
   295  00FE51  32                 	db	50
   296  00FE52  49                 	db	73
   297  00FE53  79                 	db	121
   298  00FE54  41                 	db	65
   299  00FE55  3E                 	db	62
   300  00FE56  7E                 	db	126
   301  00FE57  11                 	db	17
   302  00FE58  11                 	db	17
   303  00FE59  11                 	db	17
   304  00FE5A  7E                 	db	126
   305  00FE5B  7F                 	db	127
   306  00FE5C  49                 	db	73
   307  00FE5D  49                 	db	73
   308  00FE5E  49                 	db	73
   309  00FE5F  36                 	db	54
   310  00FE60  3E                 	db	62
   311  00FE61  41                 	db	65
   312  00FE62  41                 	db	65
   313  00FE63  41                 	db	65
   314  00FE64  22                 	db	34
   315  00FE65  7F                 	db	127
   316  00FE66  41                 	db	65
   317  00FE67  41                 	db	65
   318  00FE68  22                 	db	34
   319  00FE69  1C                 	db	28
   320  00FE6A  7F                 	db	127
   321  00FE6B  49                 	db	73
   322  00FE6C  49                 	db	73
   323  00FE6D  49                 	db	73
   324  00FE6E  41                 	db	65
   325  00FE6F  7F                 	db	127
   326  00FE70  09                 	db	9
   327  00FE71  09                 	db	9
   328  00FE72  01                 	db	1
   329  00FE73  01                 	db	1
   330  00FE74  3E                 	db	62
   331  00FE75  41                 	db	65
   332  00FE76  41                 	db	65
   333  00FE77  51                 	db	81
   334  00FE78  32                 	db	50
   335  00FE79  7F                 	db	127
   336  00FE7A  08                 	db	8
   337  00FE7B  08                 	db	8
   338  00FE7C  08                 	db	8
   339  00FE7D  7F                 	db	127
   340  00FE7E  00                 	db	0
   341  00FE7F  41                 	db	65
   342  00FE80  7F                 	db	127
   343  00FE81  41                 	db	65
   344  00FE82  00                 	db	0
   345  00FE83  20                 	db	32
   346  00FE84  40                 	db	64
   347  00FE85  41                 	db	65
   348  00FE86  3F                 	db	63
   349  00FE87  01                 	db	1
   350  00FE88  7F                 	db	127
   351  00FE89  08                 	db	8
   352  00FE8A  14                 	db	20
   353  00FE8B  22                 	db	34
   354  00FE8C  41                 	db	65
   355  00FE8D  7F                 	db	127
   356  00FE8E  40                 	db	64
   357  00FE8F  40                 	db	64
   358  00FE90  40                 	db	64
   359  00FE91  40                 	db	64
   360  00FE92  7F                 	db	127
   361  00FE93  02                 	db	2
   362  00FE94  04                 	db	4
   363  00FE95  02                 	db	2
   364  00FE96  7F                 	db	127
   365  00FE97  7F                 	db	127
   366  00FE98  04                 	db	4
   367  00FE99  08                 	db	8
   368  00FE9A  10                 	db	16
   369  00FE9B  7F                 	db	127
   370  00FE9C  3E                 	db	62
   371  00FE9D  41                 	db	65
   372  00FE9E  41                 	db	65
   373  00FE9F  41                 	db	65
   374  00FEA0  3E                 	db	62
   375  00FEA1  7F                 	db	127
   376  00FEA2  09                 	db	9
   377  00FEA3  09                 	db	9
   378  00FEA4  09                 	db	9
   379  00FEA5  06                 	db	6
   380  00FEA6  3E                 	db	62
   381  00FEA7  41                 	db	65
   382  00FEA8  51                 	db	81
   383  00FEA9  21                 	db	33
   384  00FEAA  5E                 	db	94
   385  00FEAB  7F                 	db	127
   386  00FEAC  09                 	db	9
   387  00FEAD  19                 	db	25
   388  00FEAE  29                 	db	41
   389  00FEAF  46                 	db	70
   390  00FEB0  46                 	db	70
   391  00FEB1  49                 	db	73
   392  00FEB2  49                 	db	73
   393  00FEB3  49                 	db	73
   394  00FEB4  31                 	db	49
   395  00FEB5  01                 	db	1
   396  00FEB6  01                 	db	1
   397  00FEB7  7F                 	db	127
   398  00FEB8  01                 	db	1
   399  00FEB9  01                 	db	1
   400  00FEBA  3F                 	db	63
   401  00FEBB  40                 	db	64
   402  00FEBC  40                 	db	64
   403  00FEBD  40                 	db	64
   404  00FEBE  3F                 	db	63
   405  00FEBF  1F                 	db	31
   406  00FEC0  20                 	db	32
   407  00FEC1  40                 	db	64
   408  00FEC2  20                 	db	32
   409  00FEC3  1F                 	db	31
   410  00FEC4  7F                 	db	127
   411  00FEC5  20                 	db	32
   412  00FEC6  18                 	db	24
   413  00FEC7  20                 	db	32
   414  00FEC8  7F                 	db	127
   415  00FEC9  63                 	db	99
   416  00FECA  14                 	db	20
   417  00FECB  08                 	db	8
   418  00FECC  14                 	db	20
   419  00FECD  63                 	db	99
   420  00FECE  03                 	db	3
   421  00FECF  04                 	db	4
   422  00FED0  78                 	db	120
   423  00FED1  04                 	db	4
   424  00FED2  03                 	db	3
   425  00FED3  61                 	db	97
   426  00FED4  51                 	db	81
   427  00FED5  49                 	db	73
   428  00FED6  45                 	db	69
   429  00FED7  43                 	db	67
   430  00FED8  00                 	db	0
   431  00FED9  00                 	db	0
   432  00FEDA  7F                 	db	127
   433  00FEDB  41                 	db	65
   434  00FEDC  41                 	db	65
   435  00FEDD  02                 	db	2
   436  00FEDE  04                 	db	4
   437  00FEDF  08                 	db	8
   438  00FEE0  10                 	db	16
   439  00FEE1  20                 	db	32
   440  00FEE2  41                 	db	65
   441  00FEE3  41                 	db	65
   442  00FEE4  7F                 	db	127
   443  00FEE5  00                 	db	0
   444  00FEE6  00                 	db	0
   445  00FEE7  04                 	db	4
   446  00FEE8  02                 	db	2
   447  00FEE9  01                 	db	1
   448  00FEEA  02                 	db	2
   449  00FEEB  04                 	db	4
   450  00FEEC  40                 	db	64
   451  00FEED  40                 	db	64
   452  00FEEE  40                 	db	64
   453  00FEEF  40                 	db	64
   454  00FEF0  40                 	db	64
   455  00FEF1  00                 	db	0
   456  00FEF2  01                 	db	1
   457  00FEF3  02                 	db	2
   458  00FEF4  04                 	db	4
   459  00FEF5  00                 	db	0
   460  00FEF6  20                 	db	32
   461  00FEF7  54                 	db	84
   462  00FEF8  54                 	db	84
   463  00FEF9  54                 	db	84
   464  00FEFA  78                 	db	120
   465  00FEFB  7F                 	db	127
   466  00FEFC  48                 	db	72
   467  00FEFD  44                 	db	68
   468  00FEFE  44                 	db	68
   469  00FEFF  38                 	db	56
   470  00FF00  38                 	db	56
   471  00FF01  44                 	db	68
   472  00FF02  44                 	db	68
   473  00FF03  44                 	db	68
   474  00FF04  20                 	db	32
   475  00FF05  38                 	db	56
   476  00FF06  44                 	db	68
   477  00FF07  44                 	db	68
   478  00FF08  48                 	db	72
   479  00FF09  7F                 	db	127
   480  00FF0A  38                 	db	56
   481  00FF0B  54                 	db	84
   482  00FF0C  54                 	db	84
   483  00FF0D  54                 	db	84
   484  00FF0E  18                 	db	24
   485  00FF0F  08                 	db	8
   486  00FF10  7E                 	db	126
   487  00FF11  09                 	db	9
   488  00FF12  01                 	db	1
   489  00FF13  02                 	db	2
   490  00FF14  08                 	db	8
   491  00FF15  14                 	db	20
   492  00FF16  54                 	db	84
   493  00FF17  54                 	db	84
   494  00FF18  3C                 	db	60
   495  00FF19  7F                 	db	127
   496  00FF1A  08                 	db	8
   497  00FF1B  04                 	db	4
   498  00FF1C  04                 	db	4
   499  00FF1D  78                 	db	120
   500  00FF1E  00                 	db	0
   501  00FF1F  44                 	db	68
   502  00FF20  7D                 	db	125
   503  00FF21  40                 	db	64
   504  00FF22  00                 	db	0
   505  00FF23  20                 	db	32
   506  00FF24  40                 	db	64
   507  00FF25  44                 	db	68
   508  00FF26  3D                 	db	61
   509  00FF27  00                 	db	0
   510  00FF28  00                 	db	0
   511  00FF29  7F                 	db	127
   512  00FF2A  10                 	db	16
   513  00FF2B  28                 	db	40
   514  00FF2C  44                 	db	68
   515  00FF2D  00                 	db	0
   516  00FF2E  41                 	db	65
   517  00FF2F  7F                 	db	127
   518  00FF30  40                 	db	64
   519  00FF31  00                 	db	0
   520  00FF32  7C                 	db	124
   521  00FF33  04                 	db	4
   522  00FF34  18                 	db	24
   523  00FF35  04                 	db	4
   524  00FF36  78                 	db	120
   525  00FF37  7C                 	db	124
   526  00FF38  08                 	db	8
   527  00FF39  04                 	db	4
   528  00FF3A  04                 	db	4
   529  00FF3B  78                 	db	120
   530  00FF3C  38                 	db	56
   531  00FF3D  44                 	db	68
   532  00FF3E  44                 	db	68
   533  00FF3F  44                 	db	68
   534  00FF40  38                 	db	56
   535  00FF41  7C                 	db	124
   536  00FF42  14                 	db	20
   537  00FF43  14                 	db	20
   538  00FF44  14                 	db	20
   539  00FF45  08                 	db	8
   540  00FF46  08                 	db	8
   541  00FF47  14                 	db	20
   542  00FF48  14                 	db	20
   543  00FF49  18                 	db	24
   544  00FF4A  7C                 	db	124
   545  00FF4B  7C                 	db	124
   546  00FF4C  08                 	db	8
   547  00FF4D  04                 	db	4
   548  00FF4E  04                 	db	4
   549  00FF4F  08                 	db	8
   550  00FF50  48                 	db	72
   551  00FF51  54                 	db	84
   552  00FF52  54                 	db	84
   553  00FF53  54                 	db	84
   554  00FF54  20                 	db	32
   555  00FF55  04                 	db	4
   556  00FF56  3F                 	db	63
   557  00FF57  44                 	db	68
   558  00FF58  40                 	db	64
   559  00FF59  20                 	db	32
   560  00FF5A  3C                 	db	60
   561  00FF5B  40                 	db	64
   562  00FF5C  40                 	db	64
   563  00FF5D  20                 	db	32
   564  00FF5E  7C                 	db	124
   565  00FF5F  1C                 	db	28
   566  00FF60  20                 	db	32
   567  00FF61  40                 	db	64
   568  00FF62  20                 	db	32
   569  00FF63  1C                 	db	28
   570  00FF64  3C                 	db	60
   571  00FF65  40                 	db	64
   572  00FF66  30                 	db	48
   573  00FF67  40                 	db	64
   574  00FF68  3C                 	db	60
   575  00FF69  44                 	db	68
   576  00FF6A  28                 	db	40
   577  00FF6B  10                 	db	16
   578  00FF6C  28                 	db	40
   579  00FF6D  44                 	db	68
   580  00FF6E  0C                 	db	12
   581  00FF6F  50                 	db	80
   582  00FF70  50                 	db	80
   583  00FF71  50                 	db	80
   584  00FF72  3C                 	db	60
   585  00FF73  44                 	db	68
   586  00FF74  64                 	db	100
   587  00FF75  54                 	db	84
   588  00FF76  4C                 	db	76
   589  00FF77  44                 	db	68
   590  00FF78  00                 	db	0
   591  00FF79  08                 	db	8
   592  00FF7A  36                 	db	54
   593  00FF7B  41                 	db	65
   594  00FF7C  00                 	db	0
   595  00FF7D  00                 	db	0
   596  00FF7E  00                 	db	0
   597  00FF7F  7F                 	db	127
   598  00FF80  00                 	db	0
   599  00FF81  00                 	db	0
   600  00FF82  00                 	db	0
   601  00FF83  41                 	db	65
   602  00FF84  36                 	db	54
   603  00FF85  08                 	db	8
   604  00FF86  00                 	db	0
   605  00FF87  08                 	db	8
   606  00FF88  08                 	db	8
   607  00FF89  2A                 	db	42
   608  00FF8A  1C                 	db	28
   609  00FF8B  08                 	db	8
   610  00FF8C  08                 	db	8
   611  00FF8D  1C                 	db	28
   612  00FF8E  2A                 	db	42
   613  00FF8F  08                 	db	8
   614  00FF90  08                 	db	8
   615  00FF91                     __end_of_font5x8:
   616                           	opt stack 0
   617  00FF91                     _color:
   618                           	opt stack 0
   619  00FF91  01                 	db	1
   620  00FF92                     __end_of_color:
   621                           	opt stack 0
   622  00FF92                     STR_11:
   623  00FF92  54                 	db	84	;'T'
   624  00FF93  69                 	db	105	;'i'
   625  00FF94  6D                 	db	109	;'m'
   626  00FF95  65                 	db	101	;'e'
   627  00FF96  20                 	db	32
   628  00FF97  41                 	db	65	;'A'
   629  00FF98  66                 	db	102	;'f'
   630  00FF99  74                 	db	116	;'t'
   631  00FF9A  65                 	db	101	;'e'
   632  00FF9B  72                 	db	114	;'r'
   633  00FF9C  3A                 	db	58	;':'
   634  00FF9D  20                 	db	32
   635  00FF9E  00                 	db	0
   636  00FF9F                     STR_10:
   637  00FF9F  52                 	db	82	;'R'
   638  00FFA0  75                 	db	117	;'u'
   639  00FFA1  6E                 	db	110	;'n'
   640  00FFA2  20                 	db	32
   641  00FFA3  54                 	db	84	;'T'
   642  00FFA4  69                 	db	105	;'i'
   643  00FFA5  6D                 	db	109	;'m'
   644  00FFA6  65                 	db	101	;'e'
   645  00FFA7  3A                 	db	58	;':'
   646  00FFA8  20                 	db	32
   647  00FFA9  00                 	db	0
   648  00FFAA                     STR_5:
   649  00FFAA  53                 	db	83	;'S'
   650  00FFAB  74                 	db	116	;'t'
   651  00FFAC  61                 	db	97	;'a'
   652  00FFAD  72                 	db	114	;'r'
   653  00FFAE  74                 	db	116	;'t'
   654  00FFAF  43                 	db	67	;'C'
   655  00FFB0  6F                 	db	111	;'o'
   656  00FFB1  6C                 	db	108	;'l'
   657  00FFB2  6F                 	db	111	;'o'
   658  00FFB3  72                 	db	114	;'r'
   659  00FFB4  00                 	db	0
   660  00FFB5                     STR_4:
   661  00FFB5  42                 	db	66	;'B'
   662  00FFB6  72                 	db	114	;'r'
   663  00FFB7  69                 	db	105	;'i'
   664  00FFB8  67                 	db	103	;'g'
   665  00FFB9  68                 	db	104	;'h'
   666  00FFBA  74                 	db	116	;'t'
   667  00FFBB  6E                 	db	110	;'n'
   668  00FFBC  65                 	db	101	;'e'
   669  00FFBD  73                 	db	115	;'s'
   670  00FFBE  73                 	db	115	;'s'
   671  00FFBF  00                 	db	0
   672  00FFC0                     STR_9:
   673  00FFC0  52                 	db	82	;'R'
   674  00FFC1  75                 	db	117	;'u'
   675  00FFC2  6E                 	db	110	;'n'
   676  00FFC3  20                 	db	32
   677  00FFC4  54                 	db	84	;'T'
   678  00FFC5  69                 	db	105	;'i'
   679  00FFC6  6D                 	db	109	;'m'
   680  00FFC7  65                 	db	101	;'e'
   681  00FFC8  73                 	db	115	;'s'
   682  00FFC9  00                 	db	0
   683  00FFCA                     STR_7:
   684  00FFCA  42                 	db	66	;'B'
   685  00FFCB  61                 	db	97	;'a'
   686  00FFCC  63                 	db	99	;'c'
   687  00FFCD  6B                 	db	107	;'k'
   688  00FFCE  6C                 	db	108	;'l'
   689  00FFCF  69                 	db	105	;'i'
   690  00FFD0  67                 	db	103	;'g'
   691  00FFD1  68                 	db	104	;'h'
   692  00FFD2  74                 	db	116	;'t'
   693  00FFD3  00                 	db	0
   694  00FFD4                     STR_1:
   695  00FFD4  4D                 	db	77	;'M'
   696  00FFD5  61                 	db	97	;'a'
   697  00FFD6  69                 	db	105	;'i'
   698  00FFD7  6E                 	db	110	;'n'
   699  00FFD8  20                 	db	32
   700  00FFD9  4D                 	db	77	;'M'
   701  00FFDA  65                 	db	101	;'e'
   702  00FFDB  6E                 	db	110	;'n'
   703  00FFDC  75                 	db	117	;'u'
   704  00FFDD  00                 	db	0
   705  00FFDE                     STR_8:
   706  00FFDE  53                 	db	83	;'S'
   707  00FFDF  65                 	db	101	;'e'
   708  00FFE0  6C                 	db	108	;'l'
   709  00FFE1  53                 	db	83	;'S'
   710  00FFE2  74                 	db	116	;'t'
   711  00FFE3  61                 	db	97	;'a'
   712  00FFE4  74                 	db	116	;'t'
   713  00FFE5  65                 	db	101	;'e'
   714  00FFE6  00                 	db	0
   715  00FFE7                     STR_6:
   716  00FFE7  45                 	db	69	;'E'
   717  00FFE8  6E                 	db	110	;'n'
   718  00FFE9  64                 	db	100	;'d'
   719  00FFEA  43                 	db	67	;'C'
   720  00FFEB  6F                 	db	111	;'o'
   721  00FFEC  6C                 	db	108	;'l'
   722  00FFED  6F                 	db	111	;'o'
   723  00FFEE  72                 	db	114	;'r'
   724  00FFEF  00                 	db	0
   725  00FFF0                     STR_3:
   726  00FFF0  52                 	db	82	;'R'
   727  00FFF1  75                 	db	117	;'u'
   728  00FFF2  6E                 	db	110	;'n'
   729  00FFF3  54                 	db	84	;'T'
   730  00FFF4  69                 	db	105	;'i'
   731  00FFF5  6D                 	db	109	;'m'
   732  00FFF6  65                 	db	101	;'e'
   733  00FFF7  00                 	db	0
   734  00FFF8                     STR_2:
   735  00FFF8  56                 	db	86	;'V'
   736  00FFF9  61                 	db	97	;'a'
   737  00FFFA  6C                 	db	108	;'l'
   738  00FFFB  75                 	db	117	;'u'
   739  00FFFC  65                 	db	101	;'e'
   740  00FFFD  73                 	db	115	;'s'
   741  00FFFE  00                 	db	0
   742                           
   743                           ; #config settings
   744  00FFFF  00                 	db	0	; dummy byte at the end
   745  0000                     
   746                           	psect	nvCOMRAM
   747  000027                     __pnvCOMRAM:
   748                           	opt stack 0
   749  000027                     _timer0ReloadVal:
   750                           	opt stack 0
   751  000027                     	ds	2
   752  000029                     _TMR0_InterruptHandler:
   753                           	opt stack 0
   754  000029                     	ds	2
   755  00002B                     _IOCB5_InterruptHandler:
   756                           	opt stack 0
   757  00002B                     	ds	2
   758  00002D                     _IOCB4_InterruptHandler:
   759                           	opt stack 0
   760  00002D                     	ds	2
   761  0000                     _IOCBbits	set	3930
   762  0000                     _WPUB	set	3931
   763  0000                     _ANCON1	set	3932
   764  0000                     _ANCON0	set	3933
   765  0000                     _PORTC	set	3970
   766  0000                     _PORTA	set	3968
   767  0000                     _LATEbits	set	3981
   768  0000                     _T0CONbits	set	4053
   769  0000                     _TMR0L	set	4054
   770  0000                     _TMR0H	set	4055
   771  0000                     _T0CON	set	4053
   772  0000                     _EEDATA	set	3955
   773  0000                     _EEADR	set	3956
   774  0000                     _EEADRH	set	3957
   775  0000                     _EECON2	set	3966
   776  0000                     _EECON1bits	set	3967
   777  0000                     _TABLAT	set	4085
   778  0000                     _TBLPTRL	set	4086
   779  0000                     _TBLPTRH	set	4087
   780  0000                     _TBLPTRU	set	4088
   781  0000                     _CCPTMRSbits	set	3993
   782  0000                     _CCPR1H	set	4029
   783  0000                     _CCPR1L	set	4028
   784  0000                     _ECCP1DEL	set	4030
   785  0000                     _PSTR1CON	set	3996
   786  0000                     _ECCP1AS	set	4031
   787  0000                     _CCP1CON	set	4027
   788  0000                     _REFOCON	set	3994
   789  0000                     _OSCTUNE	set	3995
   790  0000                     _OSCCON2	set	4050
   791  0000                     _OSCCON	set	4051
   792  0000                     _RCONbits	set	4048
   793  0000                     _PORTB	set	3969
   794  0000                     _PORTBbits	set	3969
   795  0000                     _INTCONbits	set	4082
   796  0000                     _TRISD	set	3989
   797  0000                     _TRISC	set	3988
   798  0000                     _TRISB	set	3987
   799  0000                     _TRISA	set	3986
   800  0000                     _TRISE	set	3990
   801  0000                     _LATC	set	3979
   802  0000                     _LATB	set	3978
   803  0000                     _LATA	set	3977
   804  0000                     _LATD	set	3980
   805  0000                     _LATE	set	3981
   806  0000                     _T4CONbits	set	3976
   807  0000                     _PIR4bits	set	4023
   808  0000                     _TMR4	set	3975
   809  0000                     _PR4	set	4009
   810  0000                     _T4CON	set	3976
   811                           
   812                           	psect	cinit
   813  000BC0                     __pcinit:
   814                           	opt stack 0
   815  000BC0                     start_initialization:
   816                           	opt stack 0
   817  000BC0                     __initialization:
   818                           	opt stack 0
   819                           
   820                           ; Initialize objects allocated to COMRAM (6 bytes)
   821                           ; load TBLPTR registers with __pidataCOMRAM
   822  000BC0  0E8A               	movlw	low __pidataCOMRAM
   823  000BC2  6EF6               	movwf	tblptrl,c
   824  000BC4  0E0E               	movlw	high __pidataCOMRAM
   825  000BC6  6EF7               	movwf	tblptrh,c
   826  000BC8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   827  000BCA  6EF8               	movwf	tblptru,c
   828  000BCC  EE00  F035         	lfsr	0,__pdataCOMRAM
   829  000BD0  EE10 F006          	lfsr	1,6
   830  000BD4                     copy_data0:
   831  000BD4  0009               	tblrd		*+
   832  000BD6  CFF5 FFEE          	movff	tablat,postinc0
   833  000BDA  50E5               	movf	postdec1,w,c
   834  000BDC  50E1               	movf	fsr1l,w,c
   835  000BDE  E1FA               	bnz	copy_data0
   836                           
   837                           ; Clear objects allocated to COMRAM (6 bytes)
   838  000BE0  6A34               	clrf	(__pbssCOMRAM+5)& (0+255),c
   839  000BE2  6A33               	clrf	(__pbssCOMRAM+4)& (0+255),c
   840  000BE4  6A32               	clrf	(__pbssCOMRAM+3)& (0+255),c
   841  000BE6  6A31               	clrf	(__pbssCOMRAM+2)& (0+255),c
   842  000BE8  6A30               	clrf	(__pbssCOMRAM+1)& (0+255),c
   843  000BEA  6A2F               	clrf	__pbssCOMRAM& (0+255),c
   844  000BEC                     end_of_initialization:
   845                           	opt stack 0
   846  000BEC                     __end_of__initialization:
   847                           	opt stack 0
   848  000BEC  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   849  000BEE  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   850  000BF0  0100               	movlb	0
   851  000BF2  EFA6  F005         	goto	_main	;jump to C main() function
   852                           tblptru	equ	0xFF8
   853                           tblptrh	equ	0xFF7
   854                           tblptrl	equ	0xFF6
   855                           tablat	equ	0xFF5
   856                           postinc0	equ	0xFEE
   857                           postdec1	equ	0xFE5
   858                           fsr1l	equ	0xFE1
   859                           
   860                           	psect	bssCOMRAM
   861  00002F                     __pbssCOMRAM:
   862                           	opt stack 0
   863  00002F                     _screen_y:
   864                           	opt stack 0
   865  00002F                     	ds	1
   866  000030                     _screen_x:
   867                           	opt stack 0
   868  000030                     	ds	1
   869  000031                     PIN_MANAGER_IOC@previousState:
   870                           	opt stack 0
   871  000031                     	ds	1
   872  000032                     _runTimeContext:
   873                           	opt stack 0
   874  000032                     	ds	1
   875  000033                     _currentContext:
   876                           	opt stack 0
   877  000033                     	ds	1
   878  000034                     _mainState:
   879                           	opt stack 0
   880  000034                     	ds	1
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           postinc0	equ	0xFEE
   886                           postdec1	equ	0xFE5
   887                           fsr1l	equ	0xFE1
   888                           
   889                           	psect	dataCOMRAM
   890  000035                     __pdataCOMRAM:
   891                           	opt stack 0
   892  000035                     _valuesXStart:
   893                           	opt stack 0
   894  000035                     	ds	1
   895  000036                     _xMenuStart:
   896                           	opt stack 0
   897  000036                     	ds	1
   898  000037                     _ARROW_SIZE:
   899                           	opt stack 0
   900  000037                     	ds	1
   901  000038                     _timeAfterFinishX:
   902                           	opt stack 0
   903  000038                     	ds	1
   904  000039                     _runTimeX:
   905                           	opt stack 0
   906  000039                     	ds	1
   907  00003A                     _subMenuY:
   908                           	opt stack 0
   909  00003A                     	ds	1
   910                           tblptru	equ	0xFF8
   911                           tblptrh	equ	0xFF7
   912                           tblptrl	equ	0xFF6
   913                           tablat	equ	0xFF5
   914                           postinc0	equ	0xFEE
   915                           postdec1	equ	0xFE5
   916                           fsr1l	equ	0xFE1
   917                           
   918                           	psect	cstackBANK0
   919  000060                     __pcstackBANK0:
   920                           	opt stack 0
   921  000060                     ??_TMR0_Initialize:
   922  000060                     ?___awdiv:
   923                           	opt stack 0
   924  000060                     GLCD_ReadStatus@status:
   925                           	opt stack 0
   926  000060                     ___awdiv@dividend:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x0
   930  000060                     	ds	1
   931  000061                     GLCD_ReadStatus@controller:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x1
   935  000061                     	ds	1
   936  000062                     ___awdiv@divisor:
   937                           	opt stack 0
   938                           
   939                           ; 2 bytes @ 0x2
   940  000062                     	ds	2
   941  000064                     ___awdiv@counter:
   942                           	opt stack 0
   943                           
   944                           ; 1 bytes @ 0x4
   945  000064                     	ds	1
   946  000065                     ___awdiv@sign:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x5
   950  000065                     	ds	1
   951  000066                     ___awdiv@quotient:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0x6
   955  000066                     	ds	2
   956  000068                     ??_GLCD_WriteCommand:
   957  000068                     GLCD_ReadData@data:
   958                           	opt stack 0
   959  000068                     GLCD_WriteData@dataToWrite:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x8
   963  000068                     	ds	1
   964  000069                     GLCD_WriteChar@charToWrite:
   965                           	opt stack 0
   966  000069                     GLCD_WriteCommand@commandToWrite:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x9
   970  000069                     	ds	1
   971  00006A                     GLCD_Initalize@i:
   972                           	opt stack 0
   973  00006A                     GLCD_GoTo@y:
   974                           	opt stack 0
   975  00006A                     GLCD_WriteChar@i:
   976                           	opt stack 0
   977                           
   978                           ; 2 bytes @ 0xA
   979  00006A                     	ds	1
   980  00006B                     GLCD_GoTo@x:
   981                           	opt stack 0
   982                           
   983                           ; 1 bytes @ 0xB
   984  00006B                     	ds	1
   985  00006C                     GLCD_GoTo@i:
   986                           	opt stack 0
   987  00006C                     GLCD_WriteString@stringToWrite:
   988                           	opt stack 0
   989                           
   990                           ; 2 bytes @ 0xC
   991  00006C                     	ds	1
   992  00006D                     ??_Clear_Arrow_Column:
   993  00006D                     GLCD_ClearScreen@i:
   994                           	opt stack 0
   995  00006D                     GLCD_SetPixel@y:
   996                           	opt stack 0
   997  00006D                     Clear_runTime_Arrows@i:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0xD
  1001  00006D                     	ds	1
  1002  00006E                     GLCD_ClearScreen@j:
  1003                           	opt stack 0
  1004  00006E                     GLCD_SetPixel@color:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0xE
  1008  00006E                     	ds	1
  1009  00006F                     ??_GLCD_SetPixel:
  1010                           
  1011                           ; 1 bytes @ 0xF
  1012  00006F                     	ds	2
  1013  000071                     GLCD_SetPixel@tmp:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x11
  1017  000071                     	ds	1
  1018  000072                     GLCD_SetPixel@x:
  1019                           	opt stack 0
  1020                           
  1021                           ; 1 bytes @ 0x12
  1022  000072                     	ds	1
  1023  000073                     _GLCD_SetPixel$1670:
  1024                           	opt stack 0
  1025                           
  1026                           ; 1 bytes @ 0x13
  1027  000073                     	ds	1
  1028  000074                     Clear_Arrow_Column@j:
  1029                           	opt stack 0
  1030  000074                     GLCD_Line@X1:
  1031                           	opt stack 0
  1032                           
  1033                           ; 2 bytes @ 0x14
  1034  000074                     	ds	1
  1035  000075                     Clear_Arrow_Column@i:
  1036                           	opt stack 0
  1037                           
  1038                           ; 1 bytes @ 0x15
  1039  000075                     	ds	1
  1040  000076                     GLCD_Line@Y1:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x16
  1044  000076                     	ds	2
  1045  000078                     GLCD_Line@X2:
  1046                           	opt stack 0
  1047                           
  1048                           ; 2 bytes @ 0x18
  1049  000078                     	ds	2
  1050  00007A                     GLCD_Line@Y2:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x1A
  1054  00007A                     	ds	2
  1055  00007C                     ??_GLCD_Line:
  1056                           
  1057                           ; 1 bytes @ 0x1C
  1058  00007C                     	ds	2
  1059  00007E                     GLCD_Line@TwoDxAccumulatedError:
  1060                           	opt stack 0
  1061                           
  1062                           ; 2 bytes @ 0x1E
  1063  00007E                     	ds	2
  1064  000080                     GLCD_Line@TwoDyAccumulatedError:
  1065                           	opt stack 0
  1066                           
  1067                           ; 2 bytes @ 0x20
  1068  000080                     	ds	2
  1069  000082                     GLCD_Line@Xinc:
  1070                           	opt stack 0
  1071                           
  1072                           ; 2 bytes @ 0x22
  1073  000082                     	ds	2
  1074  000084                     GLCD_Line@Yinc:
  1075                           	opt stack 0
  1076                           
  1077                           ; 2 bytes @ 0x24
  1078  000084                     	ds	2
  1079  000086                     GLCD_Line@TwoDx:
  1080                           	opt stack 0
  1081                           
  1082                           ; 2 bytes @ 0x26
  1083  000086                     	ds	2
  1084  000088                     GLCD_Line@TwoDy:
  1085                           	opt stack 0
  1086                           
  1087                           ; 2 bytes @ 0x28
  1088  000088                     	ds	2
  1089  00008A                     GLCD_Line@CurrentX:
  1090                           	opt stack 0
  1091                           
  1092                           ; 2 bytes @ 0x2A
  1093  00008A                     	ds	2
  1094  00008C                     GLCD_Line@CurrentY:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0x2C
  1098  00008C                     	ds	2
  1099  00008E                     GLCD_Line@Dx:
  1100                           	opt stack 0
  1101                           
  1102                           ; 2 bytes @ 0x2E
  1103  00008E                     	ds	2
  1104  000090                     GLCD_Line@Dy:
  1105                           	opt stack 0
  1106                           
  1107                           ; 2 bytes @ 0x30
  1108  000090                     	ds	2
  1109  000092                     ??_main:
  1110                           
  1111                           ; 1 bytes @ 0x32
  1112  000092                     	ds	1
  1113                           tblptru	equ	0xFF8
  1114                           tblptrh	equ	0xFF7
  1115                           tblptrl	equ	0xFF6
  1116                           tablat	equ	0xFF5
  1117                           postinc0	equ	0xFEE
  1118                           postdec1	equ	0xFE5
  1119                           fsr1l	equ	0xFE1
  1120                           
  1121                           	psect	cstackCOMRAM
  1122  000001                     __pcstackCOMRAM:
  1123                           	opt stack 0
  1124  000001                     ?i2___awdiv:
  1125                           	opt stack 0
  1126  000001                     i2GLCD_EnableController@controller:
  1127                           	opt stack 0
  1128  000001                     i2GLCD_DisableController@controller:
  1129                           	opt stack 0
  1130  000001                     i2___awdiv@dividend:
  1131                           	opt stack 0
  1132                           
  1133                           ; 2 bytes @ 0x0
  1134  000001                     	ds	1
  1135  000002                     i2GLCD_ReadStatus@status:
  1136                           	opt stack 0
  1137                           
  1138                           ; 1 bytes @ 0x1
  1139  000002                     	ds	1
  1140  000003                     i2GLCD_ReadStatus@controller:
  1141                           	opt stack 0
  1142  000003                     i2___awdiv@divisor:
  1143                           	opt stack 0
  1144                           
  1145                           ; 2 bytes @ 0x2
  1146  000003                     	ds	2
  1147  000005                     i2___awdiv@counter:
  1148                           	opt stack 0
  1149                           
  1150                           ; 1 bytes @ 0x4
  1151  000005                     	ds	1
  1152  000006                     i2___awdiv@sign:
  1153                           	opt stack 0
  1154                           
  1155                           ; 1 bytes @ 0x5
  1156  000006                     	ds	1
  1157  000007                     i2___awdiv@quotient:
  1158                           	opt stack 0
  1159                           
  1160                           ; 2 bytes @ 0x6
  1161  000007                     	ds	2
  1162  000009                     ??i2_GLCD_WriteData:
  1163  000009                     i2GLCD_WriteCommand@controller:
  1164                           	opt stack 0
  1165                           
  1166                           ; 1 bytes @ 0x8
  1167  000009                     	ds	1
  1168  00000A                     ??i2_GLCD_WriteCommand:
  1169  00000A                     i2GLCD_WriteData@dataToWrite:
  1170                           	opt stack 0
  1171                           
  1172                           ; 1 bytes @ 0x9
  1173  00000A                     	ds	1
  1174  00000B                     i2GLCD_WriteChar@charToWrite:
  1175                           	opt stack 0
  1176  00000B                     i2GLCD_WriteCommand@commandToWrite:
  1177                           	opt stack 0
  1178                           
  1179                           ; 1 bytes @ 0xA
  1180  00000B                     	ds	1
  1181  00000C                     i2GLCD_GoTo@y:
  1182                           	opt stack 0
  1183  00000C                     i2GLCD_WriteChar@i:
  1184                           	opt stack 0
  1185                           
  1186                           ; 2 bytes @ 0xB
  1187  00000C                     	ds	1
  1188  00000D                     i2GLCD_GoTo@x:
  1189                           	opt stack 0
  1190                           
  1191                           ; 1 bytes @ 0xC
  1192  00000D                     	ds	1
  1193  00000E                     i2GLCD_GoTo@i:
  1194                           	opt stack 0
  1195                           
  1196                           ; 1 bytes @ 0xD
  1197  00000E                     	ds	1
  1198  00000F                     ??_PIN_MANAGER_IOC:
  1199                           
  1200                           ; 1 bytes @ 0xE
  1201  00000F                     	ds	2
  1202  000011                     PIN_MANAGER_IOC@result:
  1203                           	opt stack 0
  1204                           
  1205                           ; 1 bytes @ 0x10
  1206  000011                     	ds	1
  1207  000012                     PIN_MANAGER_IOC@currentState:
  1208                           	opt stack 0
  1209                           
  1210                           ; 1 bytes @ 0x11
  1211  000012                     	ds	1
  1212  000013                     ??_INTERRUPT_InterruptManager:
  1213                           
  1214                           ; 1 bytes @ 0x12
  1215  000013                     	ds	18
  1216  000025                     GLCD_EnableController@controller:
  1217                           	opt stack 0
  1218  000025                     GLCD_DisableController@controller:
  1219                           	opt stack 0
  1220  000025                     IOCB4_SetInterruptHandler@InterruptHandler:
  1221                           	opt stack 0
  1222  000025                     IOCB5_SetInterruptHandler@InterruptHandler:
  1223                           	opt stack 0
  1224  000025                     TMR0_SetInterruptHandler@InterruptHandler:
  1225                           	opt stack 0
  1226                           
  1227                           ; 2 bytes @ 0x24
  1228  000025                     	ds	1
  1229  000026                     ??_GLCD_WriteData:
  1230  000026                     ??_GLCD_ReadData:
  1231  000026                     GLCD_WriteCommand@controller:
  1232                           	opt stack 0
  1233                           
  1234                           ; 1 bytes @ 0x25
  1235  000026                     	ds	1
  1236  000027                     tblptru	equ	0xFF8
  1237                           tblptrh	equ	0xFF7
  1238                           tblptrl	equ	0xFF6
  1239                           tablat	equ	0xFF5
  1240                           postinc0	equ	0xFEE
  1241                           postdec1	equ	0xFE5
  1242                           fsr1l	equ	0xFE1
  1243                           
  1244                           ; 1 bytes @ 0x26
  1245 ;;
  1246 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1247 ;;
  1248 ;; *************** function _main *****************
  1249 ;; Defined at:
  1250 ;;		line 58 in file "main.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1266 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1267 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1268 ;;Total ram usage:        1 bytes
  1269 ;; Hardware stack levels required when called:   14
  1270 ;; This function calls:
  1271 ;;		_Check_Buttons
  1272 ;;		_Draw_Arrow
  1273 ;;		_GLCD_ClearScreen
  1274 ;;		_GLCD_Initalize
  1275 ;;		_Initialize_Menus
  1276 ;;		_SYSTEM_Initialize
  1277 ;; This function is called by:
  1278 ;;		Startup code after reset
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text0
  1283  000B4C                     __ptext0:
  1284                           	opt stack 0
  1285  000B4C                     _main:
  1286                           	opt stack 17
  1287                           
  1288                           ;main.c: 61: SYSTEM_Initialize();
  1289                           
  1290                           ;incstack = 0
  1291  000B4C  EC07  F007         	call	_SYSTEM_Initialize	;wreg free
  1292                           
  1293                           ;main.c: 80: (INTCONbits.GIE = 1);
  1294  000B50  8EF2               	bsf	intcon,7,c	;volatile
  1295                           
  1296                           ;main.c: 86: (INTCONbits.PEIE = 1);
  1297  000B52  8CF2               	bsf	intcon,6,c	;volatile
  1298                           
  1299                           ;main.c: 94: do { LATEbits.LATE1 = 1; } while(0);
  1300  000B54  828D               	bsf	3981,1,c	;volatile
  1301                           
  1302                           ;main.c: 95: _delay((unsigned long)((10)*(8000000/4000.0)));
  1303  000B56  0E1A               	movlw	26
  1304  000B58  0100               	movlb	0	; () banked
  1305  000B5A  6F92               	movwf	??_main& (0+255),b
  1306  000B5C  0EF8               	movlw	248
  1307  000B5E                     u1997:
  1308  000B5E  2EE8               	decfsz	wreg,f,c
  1309  000B60  D7FE               	bra	u1997
  1310  000B62  2F92               	decfsz	??_main& (0+255),f,b
  1311  000B64  D7FC               	bra	u1997
  1312  000B66  F000               	nop	
  1313                           
  1314                           ;main.c: 96: GLCD_Initalize();
  1315  000B68  ECE8  F006         	call	_GLCD_Initalize	;wreg free
  1316                           
  1317                           ;main.c: 97: GLCD_ClearScreen();
  1318  000B6C  ECFB  F005         	call	_GLCD_ClearScreen	;wreg free
  1319                           
  1320                           ;main.c: 100: Initialize_Menus();
  1321  000B70  EC36  F001         	call	_Initialize_Menus	;wreg free
  1322                           
  1323                           ;main.c: 102: currentContext = mainMenu;
  1324  000B74  0E00               	movlw	0
  1325  000B76  6E33               	movwf	_currentContext,c
  1326                           
  1327                           ;main.c: 103: mainState = setRunTime;
  1328  000B78  0E02               	movlw	2
  1329  000B7A  6E34               	movwf	_mainState,c
  1330                           
  1331                           ;main.c: 104: Draw_Arrow();
  1332  000B7C  EC84  F005         	call	_Draw_Arrow	;wreg free
  1333  000B80                     
  1334                           ;main.c: 107: {
  1335                           ;main.c: 109: Check_Buttons();
  1336  000B80  ECE5  F002         	call	_Check_Buttons	;wreg free
  1337  000B84  D7FD               	goto	l364
  1338  000B86                     __end_of_main:
  1339                           	opt stack 0
  1340                           tblptru	equ	0xFF8
  1341                           tblptrh	equ	0xFF7
  1342                           tblptrl	equ	0xFF6
  1343                           tablat	equ	0xFF5
  1344                           intcon	equ	0xFF2
  1345                           postinc0	equ	0xFEE
  1346                           wreg	equ	0xFE8
  1347                           postdec1	equ	0xFE5
  1348                           fsr1l	equ	0xFE1
  1349                           
  1350 ;; *************** function _SYSTEM_Initialize *****************
  1351 ;; Defined at:
  1352 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2, status,0, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;Total ram usage:        0 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    8
  1373 ;; This function calls:
  1374 ;;		_EPWM1_Initialize
  1375 ;;		_INTERRUPT_Initialize
  1376 ;;		_OSCILLATOR_Initialize
  1377 ;;		_PIN_MANAGER_Initialize
  1378 ;;		_TMR0_Initialize
  1379 ;;		_TMR4_Initialize
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text1
  1386  000E0E                     __ptext1:
  1387                           	opt stack 0
  1388  000E0E                     _SYSTEM_Initialize:
  1389                           	opt stack 22
  1390                           
  1391                           ;mcc.c: 114: INTERRUPT_Initialize();
  1392                           
  1393                           ;incstack = 0
  1394  000E0E  EC4C  F007         	call	_INTERRUPT_Initialize	;wreg free
  1395                           
  1396                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1397  000E12  EC07  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  1398                           
  1399                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1400  000E16  EC28  F007         	call	_OSCILLATOR_Initialize	;wreg free
  1401                           
  1402                           ;mcc.c: 117: EPWM1_Initialize();
  1403  000E1A  ECF9  F006         	call	_EPWM1_Initialize	;wreg free
  1404                           
  1405                           ;mcc.c: 118: TMR4_Initialize();
  1406  000E1E  EC14  F007         	call	_TMR4_Initialize	;wreg free
  1407                           
  1408                           ;mcc.c: 119: TMR0_Initialize();
  1409  000E22  ECC3  F005         	call	_TMR0_Initialize	;wreg free
  1410  000E26  0012               	return		;funcret
  1411  000E28                     __end_of_SYSTEM_Initialize:
  1412                           	opt stack 0
  1413                           tblptru	equ	0xFF8
  1414                           tblptrh	equ	0xFF7
  1415                           tblptrl	equ	0xFF6
  1416                           tablat	equ	0xFF5
  1417                           intcon	equ	0xFF2
  1418                           postinc0	equ	0xFEE
  1419                           wreg	equ	0xFE8
  1420                           postdec1	equ	0xFE5
  1421                           fsr1l	equ	0xFE1
  1422                           
  1423 ;; *************** function _TMR4_Initialize *****************
  1424 ;; Defined at:
  1425 ;;		line 61 in file "mcc_generated_files/tmr4.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    7
  1446 ;; This function calls:
  1447 ;;		_TMR4_StartTimer
  1448 ;; This function is called by:
  1449 ;;		_SYSTEM_Initialize
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text2
  1454  000E28                     __ptext2:
  1455                           	opt stack 0
  1456  000E28                     _TMR4_Initialize:
  1457                           	opt stack 22
  1458                           
  1459                           ;tmr4.c: 66: T4CON = 0x02;
  1460                           
  1461                           ;incstack = 0
  1462  000E28  0E02               	movlw	2
  1463  000E2A  6E88               	movwf	3976,c	;volatile
  1464                           
  1465                           ;tmr4.c: 69: PR4 = 0xF9;
  1466  000E2C  0EF9               	movlw	249
  1467  000E2E  6EA9               	movwf	4009,c	;volatile
  1468                           
  1469                           ;tmr4.c: 72: TMR4 = 0x00;
  1470  000E30  0E00               	movlw	0
  1471  000E32  6E87               	movwf	3975,c	;volatile
  1472                           
  1473                           ;tmr4.c: 75: PIR4bits.TMR4IF = 0;
  1474  000E34  9EB7               	bcf	4023,7,c	;volatile
  1475                           
  1476                           ;tmr4.c: 78: TMR4_StartTimer();
  1477  000E36  EC48  F007         	call	_TMR4_StartTimer	;wreg free
  1478  000E3A  0012               	return		;funcret
  1479  000E3C                     __end_of_TMR4_Initialize:
  1480                           	opt stack 0
  1481                           tblptru	equ	0xFF8
  1482                           tblptrh	equ	0xFF7
  1483                           tblptrl	equ	0xFF6
  1484                           tablat	equ	0xFF5
  1485                           intcon	equ	0xFF2
  1486                           postinc0	equ	0xFEE
  1487                           wreg	equ	0xFE8
  1488                           postdec1	equ	0xFE5
  1489                           fsr1l	equ	0xFE1
  1490                           
  1491 ;; *************** function _TMR4_StartTimer *****************
  1492 ;; Defined at:
  1493 ;;		line 81 in file "mcc_generated_files/tmr4.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		None
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1511 ;;Total ram usage:        0 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    6
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_TMR4_Initialize
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text3
  1522  000E90                     __ptext3:
  1523                           	opt stack 0
  1524  000E90                     _TMR4_StartTimer:
  1525                           	opt stack 22
  1526                           
  1527                           ;tmr4.c: 84: T4CONbits.TMR4ON = 1;
  1528                           
  1529                           ;incstack = 0
  1530  000E90  8488               	bsf	3976,2,c	;volatile
  1531  000E92  0012               	return		;funcret
  1532  000E94                     __end_of_TMR4_StartTimer:
  1533                           	opt stack 0
  1534                           tblptru	equ	0xFF8
  1535                           tblptrh	equ	0xFF7
  1536                           tblptrl	equ	0xFF6
  1537                           tablat	equ	0xFF5
  1538                           intcon	equ	0xFF2
  1539                           postinc0	equ	0xFEE
  1540                           wreg	equ	0xFE8
  1541                           postdec1	equ	0xFE5
  1542                           fsr1l	equ	0xFE1
  1543                           
  1544 ;; *************** function _TMR0_Initialize *****************
  1545 ;; Defined at:
  1546 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, status,2, status,0, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1562 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1563 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1564 ;;Total ram usage:        2 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    7
  1567 ;; This function calls:
  1568 ;;		_TMR0_SetInterruptHandler
  1569 ;;		_TMR0_StartTimer
  1570 ;; This function is called by:
  1571 ;;		_SYSTEM_Initialize
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text4
  1576  000B86                     __ptext4:
  1577                           	opt stack 0
  1578  000B86                     _TMR0_Initialize:
  1579                           	opt stack 22
  1580                           
  1581                           ;tmr0.c: 71: T0CON = 0x14;
  1582                           
  1583                           ;incstack = 0
  1584  000B86  0E14               	movlw	20
  1585  000B88  6ED5               	movwf	4053,c	;volatile
  1586                           
  1587                           ;tmr0.c: 74: TMR0H = 0x0B;
  1588  000B8A  0E0B               	movlw	11
  1589  000B8C  6ED7               	movwf	4055,c	;volatile
  1590                           
  1591                           ;tmr0.c: 77: TMR0L = 0xDB;
  1592  000B8E  0EDB               	movlw	219
  1593  000B90  6ED6               	movwf	4054,c	;volatile
  1594                           
  1595                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  1596  000B92  50D6               	movf	4054,w,c	;volatile
  1597  000B94  CFD7 F060          	movff	4055,??_TMR0_Initialize	;volatile
  1598  000B98  0100               	movlb	0	; () banked
  1599  000B9A  6B61               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  1600  000B9C  C060  F061         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1601  000BA0  6B60               	clrf	??_TMR0_Initialize& (0+255),b
  1602  000BA2  1160               	iorwf	??_TMR0_Initialize& (0+255),w,b
  1603  000BA4  6E27               	movwf	_timer0ReloadVal,c	;volatile
  1604  000BA6  5161               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  1605  000BA8  6E28               	movwf	_timer0ReloadVal+1,c	;volatile
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  1609  000BAA  94F2               	bcf	intcon,2,c	;volatile
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  1613  000BAC  8AF2               	bsf	intcon,5,c	;volatile
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1617  000BAE  0EA4               	movlw	low _TMR0_DefaultInterruptHandler
  1618  000BB0  6E25               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1619  000BB2  0E0E               	movlw	high _TMR0_DefaultInterruptHandler
  1620  000BB4  6E26               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1621  000BB6  EC31  F007         	call	_TMR0_SetInterruptHandler	;wreg free
  1622                           
  1623                           ;tmr0.c: 92: TMR0_StartTimer();
  1624  000BBA  EC4A  F007         	call	_TMR0_StartTimer	;wreg free
  1625  000BBE  0012               	return		;funcret
  1626  000BC0                     __end_of_TMR0_Initialize:
  1627                           	opt stack 0
  1628                           tblptru	equ	0xFF8
  1629                           tblptrh	equ	0xFF7
  1630                           tblptrl	equ	0xFF6
  1631                           tablat	equ	0xFF5
  1632                           intcon	equ	0xFF2
  1633                           postinc0	equ	0xFEE
  1634                           wreg	equ	0xFE8
  1635                           postdec1	equ	0xFE5
  1636                           fsr1l	equ	0xFE1
  1637                           
  1638 ;; *************** function _TMR0_StartTimer *****************
  1639 ;; Defined at:
  1640 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;		None
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		None
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1658 ;;Total ram usage:        0 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:    6
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_TMR0_Initialize
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text5
  1669  000E94                     __ptext5:
  1670                           	opt stack 0
  1671  000E94                     _TMR0_StartTimer:
  1672                           	opt stack 22
  1673                           
  1674                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
  1675                           
  1676                           ;incstack = 0
  1677  000E94  8ED5               	bsf	4053,7,c	;volatile
  1678  000E96  0012               	return		;funcret
  1679  000E98                     __end_of_TMR0_StartTimer:
  1680                           	opt stack 0
  1681                           tblptru	equ	0xFF8
  1682                           tblptrh	equ	0xFF7
  1683                           tblptrl	equ	0xFF6
  1684                           tablat	equ	0xFF5
  1685                           intcon	equ	0xFF2
  1686                           postinc0	equ	0xFEE
  1687                           wreg	equ	0xFE8
  1688                           postdec1	equ	0xFE5
  1689                           fsr1l	equ	0xFE1
  1690                           
  1691 ;; *************** function _TMR0_SetInterruptHandler *****************
  1692 ;; Defined at:
  1693 ;;		line 154 in file "mcc_generated_files/tmr0.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  InterruptHan    2   36[COMRAM] PTR FTN()void 
  1696 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;		None
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1711 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1712 ;;Total ram usage:        2 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    6
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_TMR0_Initialize
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text6
  1723  000E62                     __ptext6:
  1724                           	opt stack 0
  1725  000E62                     _TMR0_SetInterruptHandler:
  1726                           	opt stack 22
  1727                           
  1728                           ;tmr0.c: 155: TMR0_InterruptHandler = InterruptHandler;
  1729                           
  1730                           ;incstack = 0
  1731  000E62  C025  F029         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1732  000E66  C026  F02A         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1733  000E6A  0012               	return		;funcret
  1734  000E6C                     __end_of_TMR0_SetInterruptHandler:
  1735                           	opt stack 0
  1736                           tblptru	equ	0xFF8
  1737                           tblptrh	equ	0xFF7
  1738                           tblptrl	equ	0xFF6
  1739                           tablat	equ	0xFF5
  1740                           intcon	equ	0xFF2
  1741                           postinc0	equ	0xFEE
  1742                           wreg	equ	0xFE8
  1743                           postdec1	equ	0xFE5
  1744                           fsr1l	equ	0xFE1
  1745                           
  1746 ;; *************** function _PIN_MANAGER_Initialize *****************
  1747 ;; Defined at:
  1748 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1766 ;;Total ram usage:        0 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    7
  1769 ;; This function calls:
  1770 ;;		_IOCB4_SetInterruptHandler
  1771 ;;		_IOCB5_SetInterruptHandler
  1772 ;; This function is called by:
  1773 ;;		_SYSTEM_Initialize
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text7
  1778  000A0E                     __ptext7:
  1779                           	opt stack 0
  1780  000A0E                     _PIN_MANAGER_Initialize:
  1781                           	opt stack 22
  1782                           
  1783                           ;pin_manager.c: 64: LATE = 0x00;
  1784                           
  1785                           ;incstack = 0
  1786  000A0E  0E00               	movlw	0
  1787  000A10  6E8D               	movwf	3981,c	;volatile
  1788                           
  1789                           ;pin_manager.c: 65: LATD = 0x00;
  1790  000A12  0E00               	movlw	0
  1791  000A14  6E8C               	movwf	3980,c	;volatile
  1792                           
  1793                           ;pin_manager.c: 66: LATA = 0x00;
  1794  000A16  0E00               	movlw	0
  1795  000A18  6E89               	movwf	3977,c	;volatile
  1796                           
  1797                           ;pin_manager.c: 67: LATB = 0x00;
  1798  000A1A  0E00               	movlw	0
  1799  000A1C  6E8A               	movwf	3978,c	;volatile
  1800                           
  1801                           ;pin_manager.c: 68: LATC = 0x00;
  1802  000A1E  0E00               	movlw	0
  1803  000A20  6E8B               	movwf	3979,c	;volatile
  1804                           
  1805                           ;pin_manager.c: 73: TRISE = 0x05;
  1806  000A22  0E05               	movlw	5
  1807  000A24  6E96               	movwf	3990,c	;volatile
  1808                           
  1809                           ;pin_manager.c: 74: TRISA = 0x01;
  1810  000A26  0E01               	movlw	1
  1811  000A28  6E92               	movwf	3986,c	;volatile
  1812                           
  1813                           ;pin_manager.c: 75: TRISB = 0xFF;
  1814  000A2A  6893               	setf	3987,c	;volatile
  1815                           
  1816                           ;pin_manager.c: 76: TRISC = 0x00;
  1817  000A2C  0E00               	movlw	0
  1818  000A2E  6E94               	movwf	3988,c	;volatile
  1819                           
  1820                           ;pin_manager.c: 77: TRISD = 0x0F;
  1821  000A30  0E0F               	movlw	15
  1822  000A32  6E95               	movwf	3989,c	;volatile
  1823                           
  1824                           ;pin_manager.c: 82: ANCON0 = 0x00;
  1825  000A34  0E00               	movlw	0
  1826  000A36  010F               	movlb	15	; () banked
  1827  000A38  6F5D               	movwf	93,b	;volatile
  1828                           
  1829                           ;pin_manager.c: 83: ANCON1 = 0x00;
  1830  000A3A  0E00               	movlw	0
  1831  000A3C  6F5C               	movwf	92,b	;volatile
  1832                           
  1833                           ;pin_manager.c: 89: WPUB = 0x00;
  1834  000A3E  0E00               	movlw	0
  1835  000A40  6F5B               	movwf	91,b	;volatile
  1836                           
  1837                           ; BSR set to: 15
  1838                           ;pin_manager.c: 97: IOCBbits.IOCB4 = 1;
  1839  000A42  895A               	bsf	90,4,b	;volatile
  1840                           
  1841                           ; BSR set to: 15
  1842                           ;pin_manager.c: 98: IOCBbits.IOCB5 = 1;
  1843  000A44  8B5A               	bsf	90,5,b	;volatile
  1844                           
  1845                           ; BSR set to: 15
  1846                           ;pin_manager.c: 101: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  1847  000A46  0E00               	movlw	0
  1848  000A48  6E25               	movwf	IOCB4_SetInterruptHandler@InterruptHandler,c
  1849  000A4A  0E00               	movlw	0
  1850  000A4C  6E26               	movwf	IOCB4_SetInterruptHandler@InterruptHandler+1,c
  1851  000A4E  EC3B  F007         	call	_IOCB4_SetInterruptHandler	;wreg free
  1852                           
  1853                           ;pin_manager.c: 102: IOCB5_SetInterruptHandler(IOCB5_DefaultInterruptHandler);
  1854  000A52  0E00               	movlw	0
  1855  000A54  6E25               	movwf	IOCB5_SetInterruptHandler@InterruptHandler,c
  1856  000A56  0E00               	movlw	0
  1857  000A58  6E26               	movwf	IOCB5_SetInterruptHandler@InterruptHandler+1,c
  1858  000A5A  EC36  F007         	call	_IOCB5_SetInterruptHandler	;wreg free
  1859                           
  1860                           ;pin_manager.c: 105: INTCONbits.RBIE = 1;
  1861  000A5E  86F2               	bsf	intcon,3,c	;volatile
  1862  000A60  0012               	return		;funcret
  1863  000A62                     __end_of_PIN_MANAGER_Initialize:
  1864                           	opt stack 0
  1865                           tblptru	equ	0xFF8
  1866                           tblptrh	equ	0xFF7
  1867                           tblptrl	equ	0xFF6
  1868                           tablat	equ	0xFF5
  1869                           intcon	equ	0xFF2
  1870                           postinc0	equ	0xFEE
  1871                           wreg	equ	0xFE8
  1872                           postdec1	equ	0xFE5
  1873                           fsr1l	equ	0xFE1
  1874                           
  1875 ;; *************** function _IOCB5_SetInterruptHandler *****************
  1876 ;; Defined at:
  1877 ;;		line 248 in file "mcc_generated_files/pin_manager.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  InterruptHan    2   36[COMRAM] PTR void 
  1880 ;;		 -> IOCB5_DefaultInterruptHandler(1), 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1896 ;;Total ram usage:        2 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    6
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_PIN_MANAGER_Initialize
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text8
  1907  000E6C                     __ptext8:
  1908                           	opt stack 0
  1909  000E6C                     _IOCB5_SetInterruptHandler:
  1910                           	opt stack 22
  1911                           
  1912                           ;pin_manager.c: 249: IOCB5_InterruptHandler = InterruptHandler;
  1913                           
  1914                           ;incstack = 0
  1915  000E6C  C025  F02B         	movff	IOCB5_SetInterruptHandler@InterruptHandler,_IOCB5_InterruptHandler
  1916  000E70  C026  F02C         	movff	IOCB5_SetInterruptHandler@InterruptHandler+1,_IOCB5_InterruptHandler+1
  1917  000E74  0012               	return		;funcret
  1918  000E76                     __end_of_IOCB5_SetInterruptHandler:
  1919                           	opt stack 0
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           intcon	equ	0xFF2
  1925                           postinc0	equ	0xFEE
  1926                           wreg	equ	0xFE8
  1927                           postdec1	equ	0xFE5
  1928                           fsr1l	equ	0xFE1
  1929                           
  1930 ;; *************** function _IOCB4_SetInterruptHandler *****************
  1931 ;; Defined at:
  1932 ;;		line 219 in file "mcc_generated_files/pin_manager.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  InterruptHan    2   36[COMRAM] PTR void 
  1935 ;;		 -> IOCB4_DefaultInterruptHandler(1), 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1950 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1951 ;;Total ram usage:        2 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    6
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_PIN_MANAGER_Initialize
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text9
  1962  000E76                     __ptext9:
  1963                           	opt stack 0
  1964  000E76                     _IOCB4_SetInterruptHandler:
  1965                           	opt stack 22
  1966                           
  1967                           ;pin_manager.c: 220: IOCB4_InterruptHandler = InterruptHandler;
  1968                           
  1969                           ;incstack = 0
  1970  000E76  C025  F02D         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  1971  000E7A  C026  F02E         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  1972  000E7E  0012               	return		;funcret
  1973  000E80                     __end_of_IOCB4_SetInterruptHandler:
  1974                           	opt stack 0
  1975                           tblptru	equ	0xFF8
  1976                           tblptrh	equ	0xFF7
  1977                           tblptrl	equ	0xFF6
  1978                           tablat	equ	0xFF5
  1979                           intcon	equ	0xFF2
  1980                           postinc0	equ	0xFEE
  1981                           wreg	equ	0xFE8
  1982                           postdec1	equ	0xFE5
  1983                           fsr1l	equ	0xFE1
  1984                           
  1985 ;; *************** function _OSCILLATOR_Initialize *****************
  1986 ;; Defined at:
  1987 ;;		line 122 in file "mcc_generated_files/mcc.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2005 ;;Total ram usage:        0 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    6
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_SYSTEM_Initialize
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text10
  2016  000E50                     __ptext10:
  2017                           	opt stack 0
  2018  000E50                     _OSCILLATOR_Initialize:
  2019                           	opt stack 23
  2020                           
  2021                           ;mcc.c: 125: OSCCON = 0x60;
  2022                           
  2023                           ;incstack = 0
  2024  000E50  0E60               	movlw	96
  2025  000E52  6ED3               	movwf	4051,c	;volatile
  2026                           
  2027                           ;mcc.c: 127: OSCCON2 = 0x00;
  2028  000E54  0E00               	movlw	0
  2029  000E56  6ED2               	movwf	4050,c	;volatile
  2030                           
  2031                           ;mcc.c: 129: OSCTUNE = 0x00;
  2032  000E58  0E00               	movlw	0
  2033  000E5A  6E9B               	movwf	3995,c	;volatile
  2034                           
  2035                           ;mcc.c: 131: REFOCON = 0x00;
  2036  000E5C  0E00               	movlw	0
  2037  000E5E  6E9A               	movwf	3994,c	;volatile
  2038  000E60  0012               	return		;funcret
  2039  000E62                     __end_of_OSCILLATOR_Initialize:
  2040                           	opt stack 0
  2041                           tblptru	equ	0xFF8
  2042                           tblptrh	equ	0xFF7
  2043                           tblptrl	equ	0xFF6
  2044                           tablat	equ	0xFF5
  2045                           intcon	equ	0xFF2
  2046                           postinc0	equ	0xFEE
  2047                           wreg	equ	0xFE8
  2048                           postdec1	equ	0xFE5
  2049                           fsr1l	equ	0xFE1
  2050                           
  2051 ;; *************** function _INTERRUPT_Initialize *****************
  2052 ;; Defined at:
  2053 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		None
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:    6
  2074 ;; This function calls:
  2075 ;;		Nothing
  2076 ;; This function is called by:
  2077 ;;		_SYSTEM_Initialize
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text11
  2082  000E98                     __ptext11:
  2083                           	opt stack 0
  2084  000E98                     _INTERRUPT_Initialize:
  2085                           	opt stack 23
  2086                           
  2087                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2088                           
  2089                           ;incstack = 0
  2090  000E98  9ED0               	bcf	4048,7,c	;volatile
  2091  000E9A  0012               	return		;funcret
  2092  000E9C                     __end_of_INTERRUPT_Initialize:
  2093                           	opt stack 0
  2094                           tblptru	equ	0xFF8
  2095                           tblptrh	equ	0xFF7
  2096                           tblptrl	equ	0xFF6
  2097                           tablat	equ	0xFF5
  2098                           intcon	equ	0xFF2
  2099                           postinc0	equ	0xFEE
  2100                           wreg	equ	0xFE8
  2101                           postdec1	equ	0xFE5
  2102                           fsr1l	equ	0xFE1
  2103                           
  2104 ;; *************** function _EPWM1_Initialize *****************
  2105 ;; Defined at:
  2106 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, status,2
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2124 ;;Total ram usage:        0 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    6
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_SYSTEM_Initialize
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text12
  2135  000DF2                     __ptext12:
  2136                           	opt stack 0
  2137  000DF2                     _EPWM1_Initialize:
  2138                           	opt stack 23
  2139                           
  2140                           ;epwm1.c: 68: CCP1CON = 0x3C;
  2141                           
  2142                           ;incstack = 0
  2143  000DF2  0E3C               	movlw	60
  2144  000DF4  6EBB               	movwf	4027,c	;volatile
  2145                           
  2146                           ;epwm1.c: 71: ECCP1AS = 0x00;
  2147  000DF6  0E00               	movlw	0
  2148  000DF8  6EBF               	movwf	4031,c	;volatile
  2149                           
  2150                           ;epwm1.c: 74: PSTR1CON = 0x0F;
  2151  000DFA  0E0F               	movlw	15
  2152  000DFC  6E9C               	movwf	3996,c	;volatile
  2153                           
  2154                           ;epwm1.c: 77: ECCP1DEL = 0x80;
  2155  000DFE  0E80               	movlw	128
  2156  000E00  6EBE               	movwf	4030,c	;volatile
  2157                           
  2158                           ;epwm1.c: 80: CCPR1L = 0x18;
  2159  000E02  0E18               	movlw	24
  2160  000E04  6EBC               	movwf	4028,c	;volatile
  2161                           
  2162                           ;epwm1.c: 83: CCPR1H = 0x00;
  2163  000E06  0E00               	movlw	0
  2164  000E08  6EBD               	movwf	4029,c	;volatile
  2165                           
  2166                           ;epwm1.c: 87: CCPTMRSbits.C1TSEL = 0x1;
  2167  000E0A  8099               	bsf	3993,0,c	;volatile
  2168  000E0C  0012               	return		;funcret
  2169  000E0E                     __end_of_EPWM1_Initialize:
  2170                           	opt stack 0
  2171                           tblptru	equ	0xFF8
  2172                           tblptrh	equ	0xFF7
  2173                           tblptrl	equ	0xFF6
  2174                           tablat	equ	0xFF5
  2175                           intcon	equ	0xFF2
  2176                           postinc0	equ	0xFEE
  2177                           wreg	equ	0xFE8
  2178                           postdec1	equ	0xFE5
  2179                           fsr1l	equ	0xFE1
  2180                           
  2181 ;; *************** function _GLCD_Initalize *****************
  2182 ;; Defined at:
  2183 ;;		line 15 in file "ks0108lib/KS0108.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  i               1   10[BANK0 ] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2198 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2200 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2201 ;;Total ram usage:        1 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    9
  2204 ;; This function calls:
  2205 ;;		_GLCD_InitializePorts
  2206 ;;		_GLCD_WriteCommand
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text13
  2213  000DD0                     __ptext13:
  2214                           	opt stack 0
  2215  000DD0                     _GLCD_Initalize:
  2216                           	opt stack 21
  2217                           
  2218                           ;KS0108.c: 17: unsigned char i;
  2219                           ;KS0108.c: 18: GLCD_InitializePorts();
  2220                           
  2221                           ;incstack = 0
  2222  000DD0  EC40  F007         	call	_GLCD_InitializePorts	;wreg free
  2223                           
  2224                           ;KS0108.c: 19: for(i = 0; i < 3; i++)
  2225  000DD4  0E00               	movlw	0
  2226  000DD6  0100               	movlb	0	; () banked
  2227  000DD8  6F6A               	movwf	GLCD_Initalize@i& (0+255),b
  2228  000DDA                     l3435:
  2229                           
  2230                           ; BSR set to: 0
  2231  000DDA  0E02               	movlw	2
  2232  000DDC  656A               	cpfsgt	GLCD_Initalize@i& (0+255),b
  2233  000DDE  D001               	goto	l440
  2234  000DE0  0012               	return	
  2235  000DE2                     l440:
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;KS0108.c: 20: GLCD_WriteCommand((0x3E | 0x01), i);
  2239                           
  2240                           ; BSR set to: 0
  2241  000DE2  C06A  F026         	movff	GLCD_Initalize@i,GLCD_WriteCommand@controller
  2242  000DE6  0E3F               	movlw	63
  2243  000DE8  EC16  F006         	call	_GLCD_WriteCommand
  2244  000DEC  0100               	movlb	0	; () banked
  2245  000DEE  2B6A               	incf	GLCD_Initalize@i& (0+255),f,b
  2246  000DF0  D7F4               	goto	l3435
  2247  000DF2                     __end_of_GLCD_Initalize:
  2248                           	opt stack 0
  2249                           tblptru	equ	0xFF8
  2250                           tblptrh	equ	0xFF7
  2251                           tblptrl	equ	0xFF6
  2252                           tablat	equ	0xFF5
  2253                           intcon	equ	0xFF2
  2254                           postinc0	equ	0xFEE
  2255                           wreg	equ	0xFE8
  2256                           postdec1	equ	0xFE5
  2257                           fsr1l	equ	0xFE1
  2258                           
  2259 ;; *************** function _GLCD_InitializePorts *****************
  2260 ;; Defined at:
  2261 ;;		line 31 in file "ks0108lib/KS0108-PIC18.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2279 ;;Total ram usage:        0 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    6
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_GLCD_Initalize
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text14
  2290  000E80                     __ptext14:
  2291                           	opt stack 0
  2292  000E80                     _GLCD_InitializePorts:
  2293                           	opt stack 23
  2294                           
  2295                           ;KS0108-PIC18.c: 33: PORTA |= ((1 << 5) | (1 << 6) | (1 << 7));
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;incstack = 0
  2299  000E80  0EE0               	movlw	224
  2300  000E82  1280               	iorwf	3968,f,c	;volatile
  2301                           
  2302                           ;KS0108-PIC18.c: 34: TRISA &= ~((1 << 5) | (1 << 6) | (1 << 7) | (1 << 2) | (1 << 1) | (
      +                          1 << 3));
  2303  000E84  0E11               	movlw	17
  2304  000E86  1692               	andwf	3986,f,c	;volatile
  2305  000E88  0012               	return		;funcret
  2306  000E8A                     __end_of_GLCD_InitializePorts:
  2307                           	opt stack 0
  2308                           tblptru	equ	0xFF8
  2309                           tblptrh	equ	0xFF7
  2310                           tblptrl	equ	0xFF6
  2311                           tablat	equ	0xFF5
  2312                           intcon	equ	0xFF2
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1l	equ	0xFE1
  2317                           
  2318 ;; *************** function _Check_Buttons *****************
  2319 ;; Defined at:
  2320 ;;		line 126 in file "main.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2338 ;;Total ram usage:        0 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:   13
  2341 ;; This function calls:
  2342 ;;		_Draw_Arrow
  2343 ;;		_Draw_runTime_Menu
  2344 ;;		_GLCD_ClearScreen
  2345 ;;		_Initialize_Menus
  2346 ;; This function is called by:
  2347 ;;		_main
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text15
  2352  0005CA                     __ptext15:
  2353                           	opt stack 0
  2354  0005CA                     _Check_Buttons:
  2355                           	opt stack 17
  2356                           
  2357                           ;main.c: 132: if(!PORTBbits.RB2)
  2358                           
  2359                           ;incstack = 0
  2360  0005CA  B481               	btfsc	3969,2,c	;volatile
  2361  0005CC  0012               	return	
  2362  0005CE  D002               	goto	l371
  2363  0005D0                     
  2364                           ;main.c: 136: GLCD_ClearScreen();
  2365  0005D0  ECFB  F005         	call	_GLCD_ClearScreen	;wreg free
  2366  0005D4                     l371:
  2367  0005D4  A481               	btfss	3969,2,c	;volatile
  2368  0005D6  D7FC               	goto	l372
  2369                           
  2370                           ;main.c: 137: if(currentContext == mainMenu)
  2371  0005D8  5033               	movf	_currentContext,w,c
  2372  0005DA  B4D8               	btfsc	status,2,c
  2373  0005DC  D018               	goto	l375
  2374  0005DE  D02B               	goto	l374
  2375  0005E0                     
  2376                           ;main.c: 142: currentContext = runTime;
  2377  0005E0  0E01               	movlw	1
  2378  0005E2  6E33               	movwf	_currentContext,c
  2379                           
  2380                           ;main.c: 143: runTimeContext = runTimeSelection;
  2381  0005E4  0E00               	movlw	0
  2382  0005E6  6E32               	movwf	_runTimeContext,c
  2383                           
  2384                           ;main.c: 144: Draw_runTime_Menu();
  2385  0005E8  EC9C  F003         	call	_Draw_runTime_Menu	;wreg free
  2386                           
  2387                           ;main.c: 145: break;
  2388  0005EC  D028               	goto	l384
  2389  0005EE                     
  2390                           ;main.c: 147: currentContext = brightnessMenu;
  2391  0005EE  0E02               	movlw	2
  2392  0005F0  D007               	goto	L4
  2393  0005F2                     
  2394                           ;main.c: 150: currentContext = startColorRed;
  2395  0005F2  0E03               	movlw	3
  2396  0005F4  D005               	goto	L4
  2397  0005F6                     
  2398                           ;main.c: 153: currentContext = endColorRed;
  2399  0005F6  0E06               	movlw	6
  2400  0005F8  D003               	goto	L4
  2401  0005FA                     
  2402                           ;main.c: 156: currentContext = backlightMenu;
  2403  0005FA  0E09               	movlw	9
  2404  0005FC  D001               	goto	L4
  2405  0005FE                     
  2406                           ;main.c: 159: currentContext = selectStateMenu;
  2407  0005FE  0E0A               	movlw	10
  2408  000600                     L4:
  2409  000600  6E33               	movwf	_currentContext,c
  2410                           
  2411                           ;main.c: 160: break;
  2412  000602  D01D               	goto	l384
  2413  000604                     
  2414                           ;main.c: 162: currentContext = mainMenu;
  2415  000604  0E00               	movlw	0
  2416  000606  6E33               	movwf	_currentContext,c
  2417                           
  2418                           ;main.c: 163: Initialize_Menus();
  2419  000608  EC36  F001         	call	_Initialize_Menus	;wreg free
  2420                           
  2421                           ;main.c: 165: }
  2422                           
  2423                           ;main.c: 164: break;
  2424  00060C  D018               	goto	l384
  2425  00060E                     l375:
  2426  00060E  5034               	movf	_mainState,w,c
  2427                           
  2428                           ; Switch size 1, requested type "space"
  2429                           ; Number of cases is 6, Range of values is 2 to 7
  2430                           ; switch strategies available:
  2431                           ; Name         Instructions Cycles
  2432                           ; simple_byte           19    10 (average)
  2433                           ;	Chosen strategy is simple_byte
  2434  000610  0A02               	xorlw	2	; case 2
  2435  000612  B4D8               	btfsc	status,2,c
  2436  000614  D7E5               	goto	l376
  2437  000616  0A01               	xorlw	1	; case 3
  2438  000618  B4D8               	btfsc	status,2,c
  2439  00061A  D7E9               	goto	l378
  2440  00061C  0A07               	xorlw	7	; case 4
  2441  00061E  B4D8               	btfsc	status,2,c
  2442  000620  D7E8               	goto	l379
  2443  000622  0A01               	xorlw	1	; case 5
  2444  000624  B4D8               	btfsc	status,2,c
  2445  000626  D7E7               	goto	l380
  2446  000628  0A03               	xorlw	3	; case 6
  2447  00062A  B4D8               	btfsc	status,2,c
  2448  00062C  D7E6               	goto	l381
  2449  00062E  0A01               	xorlw	1	; case 7
  2450  000630  B4D8               	btfsc	status,2,c
  2451  000632  D7E5               	goto	l382
  2452  000634  D7E7               	goto	l383
  2453  000636                     l374:
  2454                           
  2455                           ;main.c: 168: else
  2456                           ;main.c: 169: {
  2457                           ;main.c: 170: currentContext = mainMenu;
  2458  000636  0E00               	movlw	0
  2459  000638  6E33               	movwf	_currentContext,c
  2460                           
  2461                           ;main.c: 171: Initialize_Menus();
  2462  00063A  EC36  F001         	call	_Initialize_Menus	;wreg free
  2463  00063E                     l384:
  2464                           
  2465                           ;main.c: 172: }
  2466                           ;main.c: 174: Draw_Arrow();
  2467  00063E  EC84  F005         	call	_Draw_Arrow	;wreg free
  2468  000642  0012               	return	
  2469  000644                     __end_of_Check_Buttons:
  2470                           	opt stack 0
  2471                           tblptru	equ	0xFF8
  2472                           tblptrh	equ	0xFF7
  2473                           tblptrl	equ	0xFF6
  2474                           tablat	equ	0xFF5
  2475                           intcon	equ	0xFF2
  2476                           postinc0	equ	0xFEE
  2477                           wreg	equ	0xFE8
  2478                           postdec1	equ	0xFE5
  2479                           fsr1l	equ	0xFE1
  2480                           status	equ	0xFD8
  2481                           
  2482 ;; *************** function _Initialize_Menus *****************
  2483 ;; Defined at:
  2484 ;;		line 10 in file "screen_controls.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2502 ;;Total ram usage:        0 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:   12
  2505 ;; This function calls:
  2506 ;;		_GLCD_GoTo
  2507 ;;		_GLCD_Line
  2508 ;;		_GLCD_WriteString
  2509 ;; This function is called by:
  2510 ;;		_main
  2511 ;;		_Check_Buttons
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text16
  2516  00026C                     __ptext16:
  2517                           	opt stack 0
  2518  00026C                     _Initialize_Menus:
  2519                           	opt stack 18
  2520                           
  2521                           ;screen_controls.c: 13: GLCD_GoTo(xMenuStart,0);
  2522                           
  2523                           ;incstack = 0
  2524  00026C  0E00               	movlw	0
  2525  00026E  0100               	movlb	0	; () banked
  2526  000270  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2527  000272  5036               	movf	_xMenuStart,w,c
  2528  000274  EC1C  F002         	call	_GLCD_GoTo
  2529                           
  2530                           ;screen_controls.c: 14: GLCD_WriteString("Main Menu");
  2531  000278  0ED4               	movlw	low STR_1
  2532  00027A  0100               	movlb	0	; () banked
  2533  00027C  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2534  00027E  0EFF               	movlw	high STR_1
  2535  000280  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2536  000282  EC30  F006         	call	_GLCD_WriteString	;wreg free
  2537                           
  2538                           ;screen_controls.c: 15: GLCD_GoTo((valuesXStart - 4), 0);
  2539  000286  0E00               	movlw	0
  2540  000288  0100               	movlb	0	; () banked
  2541  00028A  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2542  00028C  5035               	movf	_valuesXStart,w,c
  2543  00028E  0FFC               	addlw	252
  2544  000290  EC1C  F002         	call	_GLCD_GoTo
  2545                           
  2546                           ;screen_controls.c: 16: GLCD_WriteString("Values");
  2547  000294  0EF8               	movlw	low STR_2
  2548  000296  0100               	movlb	0	; () banked
  2549  000298  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2550  00029A  0EFF               	movlw	high STR_2
  2551  00029C  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2552  00029E  EC30  F006         	call	_GLCD_WriteString	;wreg free
  2553                           
  2554                           ;screen_controls.c: 17: GLCD_Line(0,12,127,12);
  2555  0002A2  0E00               	movlw	0
  2556  0002A4  0100               	movlb	0	; () banked
  2557  0002A6  6F75               	movwf	(GLCD_Line@X1+1)& (0+255),b
  2558  0002A8  0E00               	movlw	0
  2559  0002AA  6F74               	movwf	GLCD_Line@X1& (0+255),b
  2560  0002AC  0E00               	movlw	0
  2561  0002AE  6F77               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  2562  0002B0  0E0C               	movlw	12
  2563  0002B2  6F76               	movwf	GLCD_Line@Y1& (0+255),b
  2564  0002B4  0E00               	movlw	0
  2565  0002B6  6F79               	movwf	(GLCD_Line@X2+1)& (0+255),b
  2566  0002B8  0E7F               	movlw	127
  2567  0002BA  6F78               	movwf	GLCD_Line@X2& (0+255),b
  2568  0002BC  0E00               	movlw	0
  2569  0002BE  6F7B               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  2570  0002C0  0E0C               	movlw	12
  2571  0002C2  6F7A               	movwf	GLCD_Line@Y2& (0+255),b
  2572  0002C4  EC5C  F000         	call	_GLCD_Line	;wreg free
  2573                           
  2574                           ;screen_controls.c: 18: GLCD_Line((valuesXStart - 8),0,(valuesXStart - 8),63);
  2575  0002C8  0EF8               	movlw	248
  2576  0002CA  2435               	addwf	_valuesXStart,w,c
  2577  0002CC  0100               	movlb	0	; () banked
  2578  0002CE  6F74               	movwf	GLCD_Line@X1& (0+255),b
  2579  0002D0  6B75               	clrf	(GLCD_Line@X1+1)& (0+255),b
  2580  0002D2  0EFF               	movlw	255
  2581  0002D4  2375               	addwfc	(GLCD_Line@X1+1)& (0+255),f,b
  2582  0002D6  0E00               	movlw	0
  2583  0002D8  6F77               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  2584  0002DA  0E00               	movlw	0
  2585  0002DC  6F76               	movwf	GLCD_Line@Y1& (0+255),b
  2586  0002DE  0EF8               	movlw	248
  2587  0002E0  2435               	addwf	_valuesXStart,w,c
  2588  0002E2  6F78               	movwf	GLCD_Line@X2& (0+255),b
  2589  0002E4  6B79               	clrf	(GLCD_Line@X2+1)& (0+255),b
  2590  0002E6  0EFF               	movlw	255
  2591  0002E8  2379               	addwfc	(GLCD_Line@X2+1)& (0+255),f,b
  2592  0002EA  0E00               	movlw	0
  2593  0002EC  6F7B               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  2594  0002EE  0E3F               	movlw	63
  2595  0002F0  6F7A               	movwf	GLCD_Line@Y2& (0+255),b
  2596  0002F2  EC5C  F000         	call	_GLCD_Line	;wreg free
  2597                           
  2598                           ;screen_controls.c: 21: GLCD_GoTo(xMenuStart, setRunTime);
  2599  0002F6  0E02               	movlw	2
  2600  0002F8  0100               	movlb	0	; () banked
  2601  0002FA  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2602  0002FC  5036               	movf	_xMenuStart,w,c
  2603  0002FE  EC1C  F002         	call	_GLCD_GoTo
  2604                           
  2605                           ;screen_controls.c: 22: GLCD_WriteString("RunTime");
  2606  000302  0EF0               	movlw	low STR_3
  2607  000304  0100               	movlb	0	; () banked
  2608  000306  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2609  000308  0EFF               	movlw	high STR_3
  2610  00030A  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2611  00030C  EC30  F006         	call	_GLCD_WriteString	;wreg free
  2612                           
  2613                           ;screen_controls.c: 24: GLCD_GoTo(xMenuStart, setBrightness);
  2614  000310  0E03               	movlw	3
  2615  000312  0100               	movlb	0	; () banked
  2616  000314  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2617  000316  5036               	movf	_xMenuStart,w,c
  2618  000318  EC1C  F002         	call	_GLCD_GoTo
  2619                           
  2620                           ;screen_controls.c: 25: GLCD_WriteString("Brightness");
  2621  00031C  0EB5               	movlw	low STR_4
  2622  00031E  0100               	movlb	0	; () banked
  2623  000320  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2624  000322  0EFF               	movlw	high STR_4
  2625  000324  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2626  000326  EC30  F006         	call	_GLCD_WriteString	;wreg free
  2627                           
  2628                           ;screen_controls.c: 27: GLCD_GoTo(xMenuStart, setStartColors);
  2629  00032A  0E04               	movlw	4
  2630  00032C  0100               	movlb	0	; () banked
  2631  00032E  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2632  000330  5036               	movf	_xMenuStart,w,c
  2633  000332  EC1C  F002         	call	_GLCD_GoTo
  2634                           
  2635                           ;screen_controls.c: 28: GLCD_WriteString("StartColor");
  2636  000336  0EAA               	movlw	low STR_5
  2637  000338  0100               	movlb	0	; () banked
  2638  00033A  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2639  00033C  0EFF               	movlw	high STR_5
  2640  00033E  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2641  000340  EC30  F006         	call	_GLCD_WriteString	;wreg free
  2642                           
  2643                           ;screen_controls.c: 30: GLCD_GoTo(xMenuStart, setFinishedColors);
  2644  000344  0E05               	movlw	5
  2645  000346  0100               	movlb	0	; () banked
  2646  000348  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2647  00034A  5036               	movf	_xMenuStart,w,c
  2648  00034C  EC1C  F002         	call	_GLCD_GoTo
  2649                           
  2650                           ;screen_controls.c: 31: GLCD_WriteString("EndColor");
  2651  000350  0EE7               	movlw	low STR_6
  2652  000352  0100               	movlb	0	; () banked
  2653  000354  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2654  000356  0EFF               	movlw	high STR_6
  2655  000358  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2656  00035A  EC30  F006         	call	_GLCD_WriteString	;wreg free
  2657                           
  2658                           ;screen_controls.c: 33: GLCD_GoTo(xMenuStart, setBacklightBrightness);
  2659  00035E  0E06               	movlw	6
  2660  000360  0100               	movlb	0	; () banked
  2661  000362  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2662  000364  5036               	movf	_xMenuStart,w,c
  2663  000366  EC1C  F002         	call	_GLCD_GoTo
  2664                           
  2665                           ;screen_controls.c: 34: GLCD_WriteString("Backlight");
  2666  00036A  0ECA               	movlw	low STR_7
  2667  00036C  0100               	movlb	0	; () banked
  2668  00036E  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2669  000370  0EFF               	movlw	high STR_7
  2670  000372  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2671  000374  EC30  F006         	call	_GLCD_WriteString	;wreg free
  2672                           
  2673                           ;screen_controls.c: 36: GLCD_GoTo(xMenuStart, selectState);
  2674  000378  0E07               	movlw	7
  2675  00037A  0100               	movlb	0	; () banked
  2676  00037C  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2677  00037E  5036               	movf	_xMenuStart,w,c
  2678  000380  EC1C  F002         	call	_GLCD_GoTo
  2679                           
  2680                           ;screen_controls.c: 37: GLCD_WriteString("SelState");
  2681  000384  0EDE               	movlw	low STR_8
  2682  000386  0100               	movlb	0	; () banked
  2683  000388  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2684  00038A  0EFF               	movlw	high STR_8
  2685  00038C  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2686  00038E  EC30  F006         	call	_GLCD_WriteString	;wreg free
  2687  000392  0012               	return		;funcret
  2688  000394                     __end_of_Initialize_Menus:
  2689                           	opt stack 0
  2690                           tblptru	equ	0xFF8
  2691                           tblptrh	equ	0xFF7
  2692                           tblptrl	equ	0xFF6
  2693                           tablat	equ	0xFF5
  2694                           intcon	equ	0xFF2
  2695                           postinc0	equ	0xFEE
  2696                           wreg	equ	0xFE8
  2697                           postdec1	equ	0xFE5
  2698                           fsr1l	equ	0xFE1
  2699                           status	equ	0xFD8
  2700                           
  2701 ;; *************** function _GLCD_ClearScreen *****************
  2702 ;; Defined at:
  2703 ;;		line 43 in file "ks0108lib/KS0108.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;		None
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  j               1   14[BANK0 ] unsigned char 
  2708 ;;  i               1   13[BANK0 ] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2719 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2721 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2722 ;;Total ram usage:        2 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:   10
  2725 ;; This function calls:
  2726 ;;		_GLCD_GoTo
  2727 ;;		_GLCD_WriteData
  2728 ;; This function is called by:
  2729 ;;		_main
  2730 ;;		_Check_Buttons
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text17
  2735  000BF6                     __ptext17:
  2736                           	opt stack 0
  2737  000BF6                     _GLCD_ClearScreen:
  2738                           	opt stack 20
  2739                           
  2740                           ;KS0108.c: 45: unsigned char i, j;
  2741                           ;KS0108.c: 46: for(j = 0; j < 64/8; j++)
  2742                           
  2743                           ;incstack = 0
  2744  000BF6  0E00               	movlw	0
  2745  000BF8  0100               	movlb	0	; () banked
  2746  000BFA  6F6E               	movwf	GLCD_ClearScreen@j& (0+255),b
  2747  000BFC                     l3355:
  2748                           
  2749                           ; BSR set to: 0
  2750  000BFC  0E07               	movlw	7
  2751  000BFE  656E               	cpfsgt	GLCD_ClearScreen@j& (0+255),b
  2752  000C00  D001               	goto	l450
  2753  000C02  0012               	return	
  2754  000C04                     l450:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;KS0108.c: 47: {
  2758                           ;KS0108.c: 48: GLCD_GoTo(0,j);
  2759                           
  2760                           ; BSR set to: 0
  2761  000C04  C06E  F06A         	movff	GLCD_ClearScreen@j,GLCD_GoTo@y
  2762  000C08  0E00               	movlw	0
  2763  000C0A  EC1C  F002         	call	_GLCD_GoTo
  2764                           
  2765                           ;KS0108.c: 49: for(i = 0; i < 128; i++)
  2766  000C0E  0E00               	movlw	0
  2767  000C10  0100               	movlb	0	; () banked
  2768  000C12  6F6D               	movwf	GLCD_ClearScreen@i& (0+255),b
  2769  000C14                     l3363:
  2770                           
  2771                           ; BSR set to: 0
  2772  000C14  0E7F               	movlw	127
  2773  000C16  656D               	cpfsgt	GLCD_ClearScreen@i& (0+255),b
  2774  000C18  D001               	goto	l452
  2775  000C1A  D006               	goto	u1830
  2776  000C1C                     l452:
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;KS0108.c: 50: GLCD_WriteData(0x00);
  2780                           
  2781                           ; BSR set to: 0
  2782  000C1C  0E00               	movlw	0
  2783  000C1E  ECD7  F003         	call	_GLCD_WriteData
  2784  000C22  0100               	movlb	0	; () banked
  2785  000C24  2B6D               	incf	GLCD_ClearScreen@i& (0+255),f,b
  2786  000C26  D7F6               	goto	l3363
  2787  000C28                     u1830:
  2788                           
  2789                           ; BSR set to: 0
  2790                           
  2791                           ; BSR set to: 0
  2792  000C28  2B6E               	incf	GLCD_ClearScreen@j& (0+255),f,b
  2793  000C2A  D7E8               	goto	l3355
  2794  000C2C                     __end_of_GLCD_ClearScreen:
  2795                           	opt stack 0
  2796                           tblptru	equ	0xFF8
  2797                           tblptrh	equ	0xFF7
  2798                           tblptrl	equ	0xFF6
  2799                           tablat	equ	0xFF5
  2800                           intcon	equ	0xFF2
  2801                           postinc0	equ	0xFEE
  2802                           wreg	equ	0xFE8
  2803                           postdec1	equ	0xFE5
  2804                           fsr1l	equ	0xFE1
  2805                           status	equ	0xFD8
  2806                           
  2807 ;; *************** function _Draw_runTime_Menu *****************
  2808 ;; Defined at:
  2809 ;;		line 92 in file "screen_controls.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;		None
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2827 ;;Total ram usage:        0 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:   12
  2830 ;; This function calls:
  2831 ;;		_GLCD_GoTo
  2832 ;;		_GLCD_Line
  2833 ;;		_GLCD_WriteString
  2834 ;; This function is called by:
  2835 ;;		_Check_Buttons
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text18
  2840  000738                     __ptext18:
  2841                           	opt stack 0
  2842  000738                     _Draw_runTime_Menu:
  2843                           	opt stack 17
  2844                           
  2845                           ;screen_controls.c: 94: GLCD_GoTo(0,0);
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;incstack = 0
  2849  000738  0E00               	movlw	0
  2850  00073A  0100               	movlb	0	; () banked
  2851  00073C  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2852  00073E  0E00               	movlw	0
  2853  000740  EC1C  F002         	call	_GLCD_GoTo
  2854                           
  2855                           ;screen_controls.c: 95: GLCD_WriteString("Run Times");
  2856  000744  0EC0               	movlw	low STR_9
  2857  000746  0100               	movlb	0	; () banked
  2858  000748  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2859  00074A  0EFF               	movlw	high STR_9
  2860  00074C  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2861  00074E  EC30  F006         	call	_GLCD_WriteString	;wreg free
  2862                           
  2863                           ;screen_controls.c: 96: GLCD_Line(0,9,127,9);
  2864  000752  0E00               	movlw	0
  2865  000754  0100               	movlb	0	; () banked
  2866  000756  6F75               	movwf	(GLCD_Line@X1+1)& (0+255),b
  2867  000758  0E00               	movlw	0
  2868  00075A  6F74               	movwf	GLCD_Line@X1& (0+255),b
  2869  00075C  0E00               	movlw	0
  2870  00075E  6F77               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  2871  000760  0E09               	movlw	9
  2872  000762  6F76               	movwf	GLCD_Line@Y1& (0+255),b
  2873  000764  0E00               	movlw	0
  2874  000766  6F79               	movwf	(GLCD_Line@X2+1)& (0+255),b
  2875  000768  0E7F               	movlw	127
  2876  00076A  6F78               	movwf	GLCD_Line@X2& (0+255),b
  2877  00076C  0E00               	movlw	0
  2878  00076E  6F7B               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  2879  000770  0E09               	movlw	9
  2880  000772  6F7A               	movwf	GLCD_Line@Y2& (0+255),b
  2881  000774  EC5C  F000         	call	_GLCD_Line	;wreg free
  2882                           
  2883                           ;screen_controls.c: 98: GLCD_GoTo(runTimeX, 2);
  2884  000778  0E02               	movlw	2
  2885  00077A  0100               	movlb	0	; () banked
  2886  00077C  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2887  00077E  5039               	movf	_runTimeX,w,c
  2888  000780  EC1C  F002         	call	_GLCD_GoTo
  2889                           
  2890                           ;screen_controls.c: 99: GLCD_WriteString("Run Time: ");
  2891  000784  0E9F               	movlw	low STR_10
  2892  000786  0100               	movlb	0	; () banked
  2893  000788  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2894  00078A  0EFF               	movlw	high STR_10
  2895  00078C  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2896  00078E  EC30  F006         	call	_GLCD_WriteString	;wreg free
  2897                           
  2898                           ;screen_controls.c: 101: GLCD_GoTo(runTimeX, 4);
  2899  000792  0E04               	movlw	4
  2900  000794  0100               	movlb	0	; () banked
  2901  000796  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  2902  000798  5039               	movf	_runTimeX,w,c
  2903  00079A  EC1C  F002         	call	_GLCD_GoTo
  2904                           
  2905                           ;screen_controls.c: 102: GLCD_WriteString("Time After: ");
  2906  00079E  0E92               	movlw	low STR_11
  2907  0007A0  0100               	movlb	0	; () banked
  2908  0007A2  6F6C               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2909  0007A4  0EFF               	movlw	high STR_11
  2910  0007A6  6F6D               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2911  0007A8  EC30  F006         	call	_GLCD_WriteString	;wreg free
  2912  0007AC  0012               	return		;funcret
  2913  0007AE                     __end_of_Draw_runTime_Menu:
  2914                           	opt stack 0
  2915                           tblptru	equ	0xFF8
  2916                           tblptrh	equ	0xFF7
  2917                           tblptrl	equ	0xFF6
  2918                           tablat	equ	0xFF5
  2919                           intcon	equ	0xFF2
  2920                           postinc0	equ	0xFEE
  2921                           wreg	equ	0xFE8
  2922                           postdec1	equ	0xFE5
  2923                           fsr1l	equ	0xFE1
  2924                           status	equ	0xFD8
  2925                           
  2926 ;; *************** function _GLCD_WriteString *****************
  2927 ;; Defined at:
  2928 ;;		line 70 in file "ks0108lib/KS0108.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  stringToWrit    2   12[BANK0 ] PTR unsigned char 
  2931 ;;		 -> STR_11(13), STR_10(11), STR_9(10), STR_8(9), 
  2932 ;;		 -> STR_7(10), STR_6(9), STR_5(11), STR_4(11), 
  2933 ;;		 -> STR_3(8), STR_2(7), STR_1(10), 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;		None
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2945 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2948 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2949 ;;Total ram usage:        2 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:   10
  2952 ;; This function calls:
  2953 ;;		_GLCD_WriteChar
  2954 ;; This function is called by:
  2955 ;;		_Initialize_Menus
  2956 ;;		_Draw_runTime_Menu
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text19
  2961  000C60                     __ptext19:
  2962                           	opt stack 0
  2963  000C60                     _GLCD_WriteString:
  2964                           	opt stack 19
  2965                           
  2966                           ;KS0108.c: 72: while(*stringToWrite)
  2967                           
  2968                           ;incstack = 0
  2969  000C60  D00C               	goto	l462
  2970  000C62                     
  2971                           ;KS0108.c: 73: GLCD_WriteChar(*stringToWrite++);
  2972  000C62  C06C  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  2973  000C66  C06D  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  2974  000C6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2975  000C6A  6AF8               	clrf	tblptru,c
  2976  000C6C                     	endif
  2977  000C6C                     	if	0	;tblptru may be non-zero
  2978  000C6C                     	endif
  2979  000C6C  0008               	tblrd		*
  2980  000C6E  50F5               	movf	tablat,w,c
  2981  000C70  ECAF  F004         	call	_GLCD_WriteChar
  2982  000C74  0100               	movlb	0	; () banked
  2983  000C76  4B6C               	infsnz	GLCD_WriteString@stringToWrite& (0+255),f,b
  2984  000C78  2B6D               	incf	(GLCD_WriteString@stringToWrite+1)& (0+255),f,b
  2985  000C7A                     l462:
  2986                           
  2987                           ; BSR set to: 0
  2988  000C7A  C06C  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  2989  000C7E  C06D  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  2990  000C82                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2991  000C82  6AF8               	clrf	tblptru,c
  2992  000C84                     	endif
  2993  000C84                     	if	0	;tblptru may be non-zero
  2994  000C84                     	endif
  2995  000C84  0008               	tblrd		*
  2996  000C86  50F5               	movf	tablat,w,c
  2997  000C88  0900               	iorlw	0
  2998  000C8A  B4D8               	btfsc	status,2,c
  2999  000C8C  0012               	return	
  3000  000C8E  D7E9               	goto	l463
  3001  000C90                     __end_of_GLCD_WriteString:
  3002                           	opt stack 0
  3003                           tblptru	equ	0xFF8
  3004                           tblptrh	equ	0xFF7
  3005                           tblptrl	equ	0xFF6
  3006                           tablat	equ	0xFF5
  3007                           intcon	equ	0xFF2
  3008                           postinc0	equ	0xFEE
  3009                           wreg	equ	0xFE8
  3010                           postdec1	equ	0xFE5
  3011                           fsr1l	equ	0xFE1
  3012                           status	equ	0xFD8
  3013                           
  3014 ;; *************** function _GLCD_WriteChar *****************
  3015 ;; Defined at:
  3016 ;;		line 56 in file "ks0108lib/KS0108.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  charToWrite     1    wreg     unsigned char 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  charToWrite     1    9[BANK0 ] unsigned char 
  3021 ;;  i               2   10[BANK0 ] int 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3032 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3034 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3035 ;;Total ram usage:        3 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    9
  3038 ;; This function calls:
  3039 ;;		_GLCD_WriteData
  3040 ;; This function is called by:
  3041 ;;		_GLCD_WriteString
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text20
  3046  00095E                     __ptext20:
  3047                           	opt stack 0
  3048  00095E                     _GLCD_WriteChar:
  3049                           	opt stack 19
  3050                           
  3051                           ;incstack = 0
  3052                           ;GLCD_WriteChar@charToWrite stored from wreg
  3053  00095E  0100               	movlb	0	; () banked
  3054  000960  6F69               	movwf	GLCD_WriteChar@charToWrite& (0+255),b
  3055                           
  3056                           ;KS0108.c: 58: int i;
  3057                           ;KS0108.c: 59: charToWrite -= 32;
  3058  000962  0E20               	movlw	32
  3059  000964  0100               	movlb	0	; () banked
  3060  000966  5F69               	subwf	GLCD_WriteChar@charToWrite& (0+255),f,b
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
  3064  000968  0E00               	movlw	0
  3065  00096A  6F6B               	movwf	(GLCD_WriteChar@i+1)& (0+255),b
  3066  00096C  0E00               	movlw	0
  3067  00096E  6F6A               	movwf	GLCD_WriteChar@i& (0+255),b
  3068  000970                     l3191:
  3069                           
  3070                           ; BSR set to: 0
  3071  000970  BF6B               	btfsc	(GLCD_WriteChar@i+1)& (0+255),7,b
  3072  000972  D006               	goto	l457
  3073  000974  516B               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  3074  000976  E11B               	bnz	l3201
  3075  000978  0E05               	movlw	5
  3076  00097A  5D6A               	subwf	GLCD_WriteChar@i& (0+255),w,b
  3077  00097C  B0D8               	btfsc	status,0,c
  3078  00097E  D017               	goto	u1640
  3079  000980                     l457:
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;KS0108.c: 61: {
  3083                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
  3084                           
  3085                           ; BSR set to: 0
  3086  000980  5169               	movf	GLCD_WriteChar@charToWrite& (0+255),w,b
  3087  000982  0D05               	mullw	5
  3088  000984  516A               	movf	GLCD_WriteChar@i& (0+255),w,b
  3089  000986  26F3               	addwf	prodl,f,c
  3090  000988  516B               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  3091  00098A  22F4               	addwfc	prodh,f,c
  3092  00098C  0EB1               	movlw	low _font5x8
  3093  00098E  24F3               	addwf	prodl,w,c
  3094  000990  6EF6               	movwf	tblptrl,c
  3095  000992  0EFD               	movlw	high _font5x8
  3096  000994  20F4               	addwfc	prodh,w,c
  3097  000996  6EF7               	movwf	tblptrh,c
  3098  000998                     	if	1	;There are 3 active tblptr bytes
  3099  000998  6AF8               	clrf	tblptru,c
  3100  00099A  0E00               	movlw	low (__mediumconst shr (0+16))
  3101  00099C  22F8               	addwfc	tblptru,f,c
  3102  00099E                     	endif
  3103  00099E  0008               	tblrd		*
  3104  0009A0  50F5               	movf	tablat,w,c
  3105  0009A2  ECD7  F003         	call	_GLCD_WriteData
  3106  0009A6  0100               	movlb	0	; () banked
  3107  0009A8  4B6A               	infsnz	GLCD_WriteChar@i& (0+255),f,b
  3108  0009AA  2B6B               	incf	(GLCD_WriteChar@i+1)& (0+255),f,b
  3109  0009AC  D7E1               	goto	l3191
  3110  0009AE                     u1640:
  3111  0009AE                     l3201:
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;KS0108.c: 64: }
  3115                           ;KS0108.c: 65: GLCD_WriteData(0x00);
  3116  0009AE  0E00               	movlw	0
  3117  0009B0  ECD7  F003         	call	_GLCD_WriteData
  3118  0009B4  0012               	return		;funcret
  3119  0009B6                     __end_of_GLCD_WriteChar:
  3120                           	opt stack 0
  3121                           tblptru	equ	0xFF8
  3122                           tblptrh	equ	0xFF7
  3123                           tblptrl	equ	0xFF6
  3124                           tablat	equ	0xFF5
  3125                           prodh	equ	0xFF4
  3126                           prodl	equ	0xFF3
  3127                           intcon	equ	0xFF2
  3128                           postinc0	equ	0xFEE
  3129                           wreg	equ	0xFE8
  3130                           postdec1	equ	0xFE5
  3131                           fsr1l	equ	0xFE1
  3132                           status	equ	0xFD8
  3133                           
  3134 ;; *************** function _GLCD_Line *****************
  3135 ;; Defined at:
  3136 ;;		line 52 in file "ks0108lib/graphic.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  X1              2   20[BANK0 ] unsigned int 
  3139 ;;  Y1              2   22[BANK0 ] unsigned int 
  3140 ;;  X2              2   24[BANK0 ] unsigned int 
  3141 ;;  Y2              2   26[BANK0 ] unsigned int 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  Dy              2   48[BANK0 ] int 
  3144 ;;  Dx              2   46[BANK0 ] int 
  3145 ;;  CurrentY        2   44[BANK0 ] int 
  3146 ;;  CurrentX        2   42[BANK0 ] int 
  3147 ;;  TwoDy           2   40[BANK0 ] int 
  3148 ;;  TwoDx           2   38[BANK0 ] int 
  3149 ;;  Yinc            2   36[BANK0 ] int 
  3150 ;;  Xinc            2   34[BANK0 ] int 
  3151 ;;  TwoDyAccumul    2   32[BANK0 ] int 
  3152 ;;  TwoDxAccumul    2   30[BANK0 ] int 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3162 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3163 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3165 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3166 ;;Total ram usage:       30 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:   11
  3169 ;; This function calls:
  3170 ;;		_GLCD_SetPixel
  3171 ;; This function is called by:
  3172 ;;		_Initialize_Menus
  3173 ;;		_Draw_runTime_Menu
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text21
  3178  0000B8                     __ptext21:
  3179                           	opt stack 0
  3180  0000B8                     _GLCD_Line:
  3181                           	opt stack 18
  3182                           
  3183                           ;graphic.c: 54: int CurrentX, CurrentY, Xinc, Yinc,
  3184                           ;graphic.c: 55: Dx, Dy, TwoDx, TwoDy,
  3185                           ;graphic.c: 56: TwoDxAccumulatedError, TwoDyAccumulatedError;
  3186                           ;graphic.c: 58: Dx = (X2-X1);
  3187                           
  3188                           ;incstack = 0
  3189  0000B8  C074  F07C         	movff	GLCD_Line@X1,??_GLCD_Line
  3190  0000BC  C075  F07D         	movff	GLCD_Line@X1+1,??_GLCD_Line+1
  3191  0000C0  0100               	movlb	0	; () banked
  3192  0000C2  1F7C               	comf	??_GLCD_Line& (0+255),f,b
  3193  0000C4  1F7D               	comf	(??_GLCD_Line+1)& (0+255),f,b
  3194  0000C6  4B7C               	infsnz	??_GLCD_Line& (0+255),f,b
  3195  0000C8  2B7D               	incf	(??_GLCD_Line+1)& (0+255),f,b
  3196  0000CA  5178               	movf	GLCD_Line@X2& (0+255),w,b
  3197  0000CC  257C               	addwf	??_GLCD_Line& (0+255),w,b
  3198  0000CE  6F8E               	movwf	GLCD_Line@Dx& (0+255),b
  3199  0000D0  5179               	movf	(GLCD_Line@X2+1)& (0+255),w,b
  3200  0000D2  217D               	addwfc	(??_GLCD_Line+1)& (0+255),w,b
  3201  0000D4  6F8F               	movwf	(GLCD_Line@Dx+1)& (0+255),b
  3202                           
  3203                           ;graphic.c: 59: Dy = (Y2-Y1);
  3204  0000D6  C076  F07C         	movff	GLCD_Line@Y1,??_GLCD_Line
  3205  0000DA  C077  F07D         	movff	GLCD_Line@Y1+1,??_GLCD_Line+1
  3206  0000DE  1F7C               	comf	??_GLCD_Line& (0+255),f,b
  3207  0000E0  1F7D               	comf	(??_GLCD_Line+1)& (0+255),f,b
  3208  0000E2  4B7C               	infsnz	??_GLCD_Line& (0+255),f,b
  3209  0000E4  2B7D               	incf	(??_GLCD_Line+1)& (0+255),f,b
  3210  0000E6  517A               	movf	GLCD_Line@Y2& (0+255),w,b
  3211  0000E8  257C               	addwf	??_GLCD_Line& (0+255),w,b
  3212  0000EA  6F90               	movwf	GLCD_Line@Dy& (0+255),b
  3213  0000EC  517B               	movf	(GLCD_Line@Y2+1)& (0+255),w,b
  3214  0000EE  217D               	addwfc	(??_GLCD_Line+1)& (0+255),w,b
  3215  0000F0  6F91               	movwf	(GLCD_Line@Dy+1)& (0+255),b
  3216                           
  3217                           ;graphic.c: 61: TwoDx = Dx + Dx;
  3218  0000F2  90D8               	bcf	status,0,c
  3219  0000F4  358E               	rlcf	GLCD_Line@Dx& (0+255),w,b
  3220  0000F6  6F86               	movwf	GLCD_Line@TwoDx& (0+255),b
  3221  0000F8  358F               	rlcf	(GLCD_Line@Dx+1)& (0+255),w,b
  3222  0000FA  6F87               	movwf	(GLCD_Line@TwoDx+1)& (0+255),b
  3223                           
  3224                           ;graphic.c: 62: TwoDy = Dy + Dy;
  3225  0000FC  90D8               	bcf	status,0,c
  3226  0000FE  3590               	rlcf	GLCD_Line@Dy& (0+255),w,b
  3227  000100  6F88               	movwf	GLCD_Line@TwoDy& (0+255),b
  3228  000102  3591               	rlcf	(GLCD_Line@Dy+1)& (0+255),w,b
  3229  000104  6F89               	movwf	(GLCD_Line@TwoDy+1)& (0+255),b
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;graphic.c: 64: CurrentX = X1;
  3233  000106  C074  F08A         	movff	GLCD_Line@X1,GLCD_Line@CurrentX
  3234  00010A  C075  F08B         	movff	GLCD_Line@X1+1,GLCD_Line@CurrentX+1
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;graphic.c: 65: CurrentY = Y1;
  3238  00010E  C076  F08C         	movff	GLCD_Line@Y1,GLCD_Line@CurrentY
  3239  000112  C077  F08D         	movff	GLCD_Line@Y1+1,GLCD_Line@CurrentY+1
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;graphic.c: 67: Xinc = 1;
  3243  000116  0E00               	movlw	0
  3244  000118  6F83               	movwf	(GLCD_Line@Xinc+1)& (0+255),b
  3245  00011A  0E01               	movlw	1
  3246  00011C  6F82               	movwf	GLCD_Line@Xinc& (0+255),b
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;graphic.c: 68: Yinc = 1;
  3250  00011E  0E00               	movlw	0
  3251  000120  6F85               	movwf	(GLCD_Line@Yinc+1)& (0+255),b
  3252  000122  0E01               	movlw	1
  3253  000124  6F84               	movwf	GLCD_Line@Yinc& (0+255),b
  3254                           
  3255                           ;graphic.c: 70: if(Dx < 0)
  3256  000126  AF8F               	btfss	(GLCD_Line@Dx+1)& (0+255),7,b
  3257  000128  D00A               	goto	l408
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;graphic.c: 71: {
  3261                           ;graphic.c: 72: Xinc = -1;
  3262  00012A  6982               	setf	GLCD_Line@Xinc& (0+255),b
  3263  00012C  6983               	setf	(GLCD_Line@Xinc+1)& (0+255),b
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;graphic.c: 73: Dx = -Dx;
  3267  00012E  6D8E               	negf	GLCD_Line@Dx& (0+255),b
  3268  000130  1F8F               	comf	(GLCD_Line@Dx+1)& (0+255),f,b
  3269  000132  B0D8               	btfsc	status,0,c
  3270  000134  2B8F               	incf	(GLCD_Line@Dx+1)& (0+255),f,b
  3271                           
  3272                           ;graphic.c: 74: TwoDx = -TwoDx;
  3273  000136  6D86               	negf	GLCD_Line@TwoDx& (0+255),b
  3274  000138  1F87               	comf	(GLCD_Line@TwoDx+1)& (0+255),f,b
  3275  00013A  B0D8               	btfsc	status,0,c
  3276  00013C  2B87               	incf	(GLCD_Line@TwoDx+1)& (0+255),f,b
  3277  00013E                     l408:
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;graphic.c: 75: }
  3281                           ;graphic.c: 77: if (Dy < 0)
  3282                           
  3283                           ; BSR set to: 0
  3284  00013E  AF91               	btfss	(GLCD_Line@Dy+1)& (0+255),7,b
  3285  000140  D00A               	goto	l409
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;graphic.c: 78: {
  3289                           ;graphic.c: 79: Yinc = -1;
  3290  000142  6984               	setf	GLCD_Line@Yinc& (0+255),b
  3291  000144  6985               	setf	(GLCD_Line@Yinc+1)& (0+255),b
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;graphic.c: 80: Dy = -Dy;
  3295  000146  6D90               	negf	GLCD_Line@Dy& (0+255),b
  3296  000148  1F91               	comf	(GLCD_Line@Dy+1)& (0+255),f,b
  3297  00014A  B0D8               	btfsc	status,0,c
  3298  00014C  2B91               	incf	(GLCD_Line@Dy+1)& (0+255),f,b
  3299                           
  3300                           ;graphic.c: 81: TwoDy = -TwoDy;
  3301  00014E  6D88               	negf	GLCD_Line@TwoDy& (0+255),b
  3302  000150  1F89               	comf	(GLCD_Line@TwoDy+1)& (0+255),f,b
  3303  000152  B0D8               	btfsc	status,0,c
  3304  000154  2B89               	incf	(GLCD_Line@TwoDy+1)& (0+255),f,b
  3305  000156                     l409:
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;graphic.c: 82: }
  3309                           ;graphic.c: 84: GLCD_SetPixel(X1,Y1, color);
  3310                           
  3311                           ; BSR set to: 0
  3312  000156  C076  F06D         	movff	GLCD_Line@Y1,GLCD_SetPixel@y
  3313  00015A  0E91               	movlw	low _color
  3314  00015C  6EF6               	movwf	tblptrl,c
  3315  00015E                     	if	1	;There is more than 1 active tblptr byte
  3316  00015E  0EFF               	movlw	high _color
  3317  000160  6EF7               	movwf	tblptrh,c
  3318  000162                     	endif
  3319  000162                     	if	1	;There are 3 active tblptr bytes
  3320  000162  0E00               	movlw	low (_color shr (0+16))
  3321  000164  6EF8               	movwf	tblptru,c
  3322  000166                     	endif
  3323  000166  0008               	tblrd		*
  3324  000168  CFF5 F06E          	movff	tablat,GLCD_SetPixel@color
  3325  00016C  5174               	movf	GLCD_Line@X1& (0+255),w,b
  3326  00016E  ECCA  F001         	call	_GLCD_SetPixel
  3327                           
  3328                           ;graphic.c: 86: if ((Dx != 0) || (Dy != 0))
  3329  000172  0100               	movlb	0	; () banked
  3330  000174  518E               	movf	GLCD_Line@Dx& (0+255),w,b
  3331  000176  118F               	iorwf	(GLCD_Line@Dx+1)& (0+255),w,b
  3332  000178  A4D8               	btfss	status,2,c
  3333  00017A  D004               	goto	u1690
  3334                           
  3335                           ; BSR set to: 0
  3336  00017C  5190               	movf	GLCD_Line@Dy& (0+255),w,b
  3337  00017E  1191               	iorwf	(GLCD_Line@Dy+1)& (0+255),w,b
  3338  000180  B4D8               	btfsc	status,2,c
  3339  000182  0012               	return	
  3340  000184                     u1690:
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;graphic.c: 87: {
  3344                           ;graphic.c: 89: if (Dy <= Dx)
  3345                           
  3346                           ; BSR set to: 0
  3347  000184  5190               	movf	GLCD_Line@Dy& (0+255),w,b
  3348  000186  5D8E               	subwf	GLCD_Line@Dx& (0+255),w,b
  3349  000188  518F               	movf	(GLCD_Line@Dx+1)& (0+255),w,b
  3350  00018A  0A80               	xorlw	128
  3351  00018C  6F7C               	movwf	??_GLCD_Line& (0+255),b
  3352  00018E  5191               	movf	(GLCD_Line@Dy+1)& (0+255),w,b
  3353  000190  0A80               	xorlw	128
  3354  000192  597C               	subwfb	??_GLCD_Line& (0+255),w,b
  3355  000194  A0D8               	btfss	status,0,c
  3356  000196  D035               	goto	l413
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;graphic.c: 90: {
  3360                           ;graphic.c: 91: TwoDxAccumulatedError = 0;
  3361  000198  0E00               	movlw	0
  3362  00019A  6F7F               	movwf	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),b
  3363  00019C  0E00               	movlw	0
  3364  00019E  6F7E               	movwf	GLCD_Line@TwoDxAccumulatedError& (0+255),b
  3365  0001A0                     l3241:
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;graphic.c: 93: {
  3369                           ;graphic.c: 94: CurrentX += Xinc;
  3370  0001A0  5182               	movf	GLCD_Line@Xinc& (0+255),w,b
  3371  0001A2  278A               	addwf	GLCD_Line@CurrentX& (0+255),f,b
  3372  0001A4  5183               	movf	(GLCD_Line@Xinc+1)& (0+255),w,b
  3373  0001A6  238B               	addwfc	(GLCD_Line@CurrentX+1)& (0+255),f,b
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;graphic.c: 95: TwoDxAccumulatedError += TwoDy;
  3377  0001A8  5188               	movf	GLCD_Line@TwoDy& (0+255),w,b
  3378  0001AA  277E               	addwf	GLCD_Line@TwoDxAccumulatedError& (0+255),f,b
  3379  0001AC  5189               	movf	(GLCD_Line@TwoDy+1)& (0+255),w,b
  3380  0001AE  237F               	addwfc	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),f,b
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;graphic.c: 96: if(TwoDxAccumulatedError > Dx)
  3384  0001B0  517E               	movf	GLCD_Line@TwoDxAccumulatedError& (0+255),w,b
  3385  0001B2  5D8E               	subwf	GLCD_Line@Dx& (0+255),w,b
  3386  0001B4  518F               	movf	(GLCD_Line@Dx+1)& (0+255),w,b
  3387  0001B6  0A80               	xorlw	128
  3388  0001B8  6F7C               	movwf	??_GLCD_Line& (0+255),b
  3389  0001BA  517F               	movf	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),w,b
  3390  0001BC  0A80               	xorlw	128
  3391  0001BE  597C               	subwfb	??_GLCD_Line& (0+255),w,b
  3392  0001C0  B0D8               	btfsc	status,0,c
  3393  0001C2  D008               	goto	l415
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;graphic.c: 97: {
  3397                           ;graphic.c: 98: CurrentY += Yinc;
  3398  0001C4  5184               	movf	GLCD_Line@Yinc& (0+255),w,b
  3399  0001C6  278C               	addwf	GLCD_Line@CurrentY& (0+255),f,b
  3400  0001C8  5185               	movf	(GLCD_Line@Yinc+1)& (0+255),w,b
  3401  0001CA  238D               	addwfc	(GLCD_Line@CurrentY+1)& (0+255),f,b
  3402                           
  3403                           ;graphic.c: 99: TwoDxAccumulatedError -= TwoDx;
  3404  0001CC  5186               	movf	GLCD_Line@TwoDx& (0+255),w,b
  3405  0001CE  5F7E               	subwf	GLCD_Line@TwoDxAccumulatedError& (0+255),f,b
  3406  0001D0  5187               	movf	(GLCD_Line@TwoDx+1)& (0+255),w,b
  3407  0001D2  5B7F               	subwfb	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),f,b
  3408  0001D4                     l415:
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;graphic.c: 100: }
  3412                           ;graphic.c: 101: GLCD_SetPixel(CurrentX,CurrentY, color);
  3413                           
  3414                           ; BSR set to: 0
  3415  0001D4  C08C  F06D         	movff	GLCD_Line@CurrentY,GLCD_SetPixel@y
  3416  0001D8  0E91               	movlw	low _color
  3417  0001DA  6EF6               	movwf	tblptrl,c
  3418  0001DC                     	if	1	;There is more than 1 active tblptr byte
  3419  0001DC  0EFF               	movlw	high _color
  3420  0001DE  6EF7               	movwf	tblptrh,c
  3421  0001E0                     	endif
  3422  0001E0                     	if	1	;There are 3 active tblptr bytes
  3423  0001E0  0E00               	movlw	low (_color shr (0+16))
  3424  0001E2  6EF8               	movwf	tblptru,c
  3425  0001E4                     	endif
  3426  0001E4  0008               	tblrd		*
  3427  0001E6  CFF5 F06E          	movff	tablat,GLCD_SetPixel@color
  3428  0001EA  518A               	movf	GLCD_Line@CurrentX& (0+255),w,b
  3429  0001EC  ECCA  F001         	call	_GLCD_SetPixel
  3430                           
  3431                           ;graphic.c: 102: }while (CurrentX != X2);
  3432  0001F0  0100               	movlb	0	; () banked
  3433  0001F2  5178               	movf	GLCD_Line@X2& (0+255),w,b
  3434  0001F4  198A               	xorwf	GLCD_Line@CurrentX& (0+255),w,b
  3435  0001F6  E1D4               	bnz	l3241
  3436  0001F8  5179               	movf	(GLCD_Line@X2+1)& (0+255),w,b
  3437  0001FA  198B               	xorwf	(GLCD_Line@CurrentX+1)& (0+255),w,b
  3438  0001FC  B4D8               	btfsc	status,2,c
  3439  0001FE  0012               	return	
  3440  000200  D7CF               	goto	l414
  3441  000202                     l413:
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;graphic.c: 104: else
  3445                           ;graphic.c: 105: {
  3446                           ;graphic.c: 106: TwoDyAccumulatedError = 0;
  3447                           
  3448                           ; BSR set to: 0
  3449  000202  0E00               	movlw	0
  3450  000204  6F81               	movwf	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),b
  3451  000206  0E00               	movlw	0
  3452  000208  6F80               	movwf	GLCD_Line@TwoDyAccumulatedError& (0+255),b
  3453  00020A                     l3255:
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;graphic.c: 108: {
  3457                           ;graphic.c: 109: CurrentY += Yinc;
  3458  00020A  5184               	movf	GLCD_Line@Yinc& (0+255),w,b
  3459  00020C  278C               	addwf	GLCD_Line@CurrentY& (0+255),f,b
  3460  00020E  5185               	movf	(GLCD_Line@Yinc+1)& (0+255),w,b
  3461  000210  238D               	addwfc	(GLCD_Line@CurrentY+1)& (0+255),f,b
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;graphic.c: 110: TwoDyAccumulatedError += TwoDx;
  3465  000212  5186               	movf	GLCD_Line@TwoDx& (0+255),w,b
  3466  000214  2780               	addwf	GLCD_Line@TwoDyAccumulatedError& (0+255),f,b
  3467  000216  5187               	movf	(GLCD_Line@TwoDx+1)& (0+255),w,b
  3468  000218  2381               	addwfc	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),f,b
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;graphic.c: 111: if(TwoDyAccumulatedError>Dy)
  3472  00021A  5180               	movf	GLCD_Line@TwoDyAccumulatedError& (0+255),w,b
  3473  00021C  5D90               	subwf	GLCD_Line@Dy& (0+255),w,b
  3474  00021E  5191               	movf	(GLCD_Line@Dy+1)& (0+255),w,b
  3475  000220  0A80               	xorlw	128
  3476  000222  6F7C               	movwf	??_GLCD_Line& (0+255),b
  3477  000224  5181               	movf	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),w,b
  3478  000226  0A80               	xorlw	128
  3479  000228  597C               	subwfb	??_GLCD_Line& (0+255),w,b
  3480  00022A  B0D8               	btfsc	status,0,c
  3481  00022C  D008               	goto	l419
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;graphic.c: 112: {
  3485                           ;graphic.c: 113: CurrentX += Xinc;
  3486  00022E  5182               	movf	GLCD_Line@Xinc& (0+255),w,b
  3487  000230  278A               	addwf	GLCD_Line@CurrentX& (0+255),f,b
  3488  000232  5183               	movf	(GLCD_Line@Xinc+1)& (0+255),w,b
  3489  000234  238B               	addwfc	(GLCD_Line@CurrentX+1)& (0+255),f,b
  3490                           
  3491                           ;graphic.c: 114: TwoDyAccumulatedError -= TwoDy;
  3492  000236  5188               	movf	GLCD_Line@TwoDy& (0+255),w,b
  3493  000238  5F80               	subwf	GLCD_Line@TwoDyAccumulatedError& (0+255),f,b
  3494  00023A  5189               	movf	(GLCD_Line@TwoDy+1)& (0+255),w,b
  3495  00023C  5B81               	subwfb	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),f,b
  3496  00023E                     l419:
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;graphic.c: 115: }
  3500                           ;graphic.c: 116: GLCD_SetPixel(CurrentX,CurrentY, color);
  3501                           
  3502                           ; BSR set to: 0
  3503  00023E  C08C  F06D         	movff	GLCD_Line@CurrentY,GLCD_SetPixel@y
  3504  000242  0E91               	movlw	low _color
  3505  000244  6EF6               	movwf	tblptrl,c
  3506  000246                     	if	1	;There is more than 1 active tblptr byte
  3507  000246  0EFF               	movlw	high _color
  3508  000248  6EF7               	movwf	tblptrh,c
  3509  00024A                     	endif
  3510  00024A                     	if	1	;There are 3 active tblptr bytes
  3511  00024A  0E00               	movlw	low (_color shr (0+16))
  3512  00024C  6EF8               	movwf	tblptru,c
  3513  00024E                     	endif
  3514  00024E  0008               	tblrd		*
  3515  000250  CFF5 F06E          	movff	tablat,GLCD_SetPixel@color
  3516  000254  518A               	movf	GLCD_Line@CurrentX& (0+255),w,b
  3517  000256  ECCA  F001         	call	_GLCD_SetPixel
  3518                           
  3519                           ;graphic.c: 117: }while (CurrentY != Y2);
  3520  00025A  0100               	movlb	0	; () banked
  3521  00025C  517A               	movf	GLCD_Line@Y2& (0+255),w,b
  3522  00025E  198C               	xorwf	GLCD_Line@CurrentY& (0+255),w,b
  3523  000260  E1D4               	bnz	l3255
  3524  000262  517B               	movf	(GLCD_Line@Y2+1)& (0+255),w,b
  3525  000264  198D               	xorwf	(GLCD_Line@CurrentY+1)& (0+255),w,b
  3526  000266  B4D8               	btfsc	status,2,c
  3527  000268  0012               	return	
  3528  00026A  D7CF               	goto	l418
  3529  00026C                     __end_of_GLCD_Line:
  3530                           	opt stack 0
  3531                           tblptru	equ	0xFF8
  3532                           tblptrh	equ	0xFF7
  3533                           tblptrl	equ	0xFF6
  3534                           tablat	equ	0xFF5
  3535                           prodh	equ	0xFF4
  3536                           prodl	equ	0xFF3
  3537                           intcon	equ	0xFF2
  3538                           postinc0	equ	0xFEE
  3539                           wreg	equ	0xFE8
  3540                           postdec1	equ	0xFE5
  3541                           fsr1l	equ	0xFE1
  3542                           status	equ	0xFD8
  3543                           
  3544 ;; *************** function _GLCD_SetPixel *****************
  3545 ;; Defined at:
  3546 ;;		line 78 in file "ks0108lib/KS0108.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;  x               1    wreg     unsigned char 
  3549 ;;  y               1   13[BANK0 ] unsigned char 
  3550 ;;  color           1   14[BANK0 ] unsigned char 
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  x               1   18[BANK0 ] unsigned char 
  3553 ;;  tmp             1   17[BANK0 ] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3563 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3564 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3565 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3566 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3567 ;;Total ram usage:        7 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:   10
  3570 ;; This function calls:
  3571 ;;		_GLCD_GoTo
  3572 ;;		_GLCD_ReadData
  3573 ;;		_GLCD_WriteData
  3574 ;;		___awdiv
  3575 ;; This function is called by:
  3576 ;;		_GLCD_Line
  3577 ;;		_GLCD_Rectangle
  3578 ;;		_GLCD_Circle
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text22
  3583  000394                     __ptext22:
  3584                           	opt stack 0
  3585  000394                     _GLCD_SetPixel:
  3586                           	opt stack 18
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;incstack = 0
  3590                           ;GLCD_SetPixel@x stored from wreg
  3591  000394  0100               	movlb	0	; () banked
  3592  000396  6F72               	movwf	GLCD_SetPixel@x& (0+255),b
  3593                           
  3594                           ;KS0108.c: 80: unsigned char tmp;
  3595                           ;KS0108.c: 81: GLCD_GoTo(x, (y / 8));
  3596  000398  C06D  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  3597  00039C  0100               	movlb	0	; () banked
  3598  00039E  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3599  0003A0  0E00               	movlw	0
  3600  0003A2  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3601  0003A4  0E08               	movlw	8
  3602  0003A6  6F62               	movwf	___awdiv@divisor& (0+255),b
  3603  0003A8  EC60  F002         	call	___awdiv	;wreg free
  3604  0003AC  0100               	movlb	0	; () banked
  3605  0003AE  5160               	movf	?___awdiv& (0+255),w,b
  3606  0003B0  6F73               	movwf	_GLCD_SetPixel$1670& (0+255),b
  3607                           
  3608                           ;KS0108.c: 80: unsigned char tmp;
  3609                           ;KS0108.c: 81: GLCD_GoTo(x, (y / 8));
  3610  0003B2  C073  F06A         	movff	_GLCD_SetPixel$1670,GLCD_GoTo@y
  3611  0003B6  5172               	movf	GLCD_SetPixel@x& (0+255),w,b
  3612  0003B8  EC1C  F002         	call	_GLCD_GoTo
  3613                           
  3614                           ;KS0108.c: 82: tmp = GLCD_ReadData();
  3615  0003BC  EC12  F004         	call	_GLCD_ReadData	;wreg free
  3616  0003C0  0100               	movlb	0	; () banked
  3617  0003C2  6F71               	movwf	GLCD_SetPixel@tmp& (0+255),b
  3618                           
  3619                           ;KS0108.c: 83: GLCD_GoTo(x, (y / 8));
  3620  0003C4  C06D  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  3621  0003C8  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3622  0003CA  0E00               	movlw	0
  3623  0003CC  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3624  0003CE  0E08               	movlw	8
  3625  0003D0  6F62               	movwf	___awdiv@divisor& (0+255),b
  3626  0003D2  EC60  F002         	call	___awdiv	;wreg free
  3627  0003D6  0100               	movlb	0	; () banked
  3628  0003D8  5160               	movf	?___awdiv& (0+255),w,b
  3629  0003DA  6F73               	movwf	_GLCD_SetPixel$1670& (0+255),b
  3630                           
  3631                           ;KS0108.c: 83: GLCD_GoTo(x, (y / 8));
  3632  0003DC  C073  F06A         	movff	_GLCD_SetPixel$1670,GLCD_GoTo@y
  3633  0003E0  5172               	movf	GLCD_SetPixel@x& (0+255),w,b
  3634  0003E2  EC1C  F002         	call	_GLCD_GoTo
  3635                           
  3636                           ;KS0108.c: 84: tmp = GLCD_ReadData();
  3637  0003E6  EC12  F004         	call	_GLCD_ReadData	;wreg free
  3638  0003EA  0100               	movlb	0	; () banked
  3639  0003EC  6F71               	movwf	GLCD_SetPixel@tmp& (0+255),b
  3640                           
  3641                           ;KS0108.c: 85: GLCD_GoTo(x, (y / 8));
  3642  0003EE  C06D  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  3643  0003F2  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3644  0003F4  0E00               	movlw	0
  3645  0003F6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3646  0003F8  0E08               	movlw	8
  3647  0003FA  6F62               	movwf	___awdiv@divisor& (0+255),b
  3648  0003FC  EC60  F002         	call	___awdiv	;wreg free
  3649  000400  0100               	movlb	0	; () banked
  3650  000402  5160               	movf	?___awdiv& (0+255),w,b
  3651  000404  6F73               	movwf	_GLCD_SetPixel$1670& (0+255),b
  3652                           
  3653                           ;KS0108.c: 85: GLCD_GoTo(x, (y / 8));
  3654  000406  C073  F06A         	movff	_GLCD_SetPixel$1670,GLCD_GoTo@y
  3655  00040A  5172               	movf	GLCD_SetPixel@x& (0+255),w,b
  3656  00040C  EC1C  F002         	call	_GLCD_GoTo
  3657                           
  3658                           ;KS0108.c: 86: tmp |= (1 << (y % 8));
  3659  000410  C06D  F06F         	movff	GLCD_SetPixel@y,??_GLCD_SetPixel
  3660  000414  0E07               	movlw	7
  3661  000416  0100               	movlb	0	; () banked
  3662  000418  176F               	andwf	??_GLCD_SetPixel& (0+255),f,b
  3663  00041A  0E01               	movlw	1
  3664  00041C  6F70               	movwf	(??_GLCD_SetPixel+1)& (0+255),b
  3665  00041E  2B6F               	incf	??_GLCD_SetPixel& (0+255),f,b
  3666  000420  D002               	goto	u1654
  3667  000422                     u1655:
  3668  000422  90D8               	bcf	status,0,c
  3669  000424  3770               	rlcf	(??_GLCD_SetPixel+1)& (0+255),f,b
  3670  000426                     u1654:
  3671  000426  2F6F               	decfsz	??_GLCD_SetPixel& (0+255),f,b
  3672  000428  D7FC               	goto	u1655
  3673  00042A  0100               	movlb	0	; () banked
  3674  00042C  5170               	movf	(??_GLCD_SetPixel+1)& (0+255),w,b
  3675  00042E  1371               	iorwf	GLCD_SetPixel@tmp& (0+255),f,b
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;KS0108.c: 87: GLCD_WriteData(tmp);
  3679  000430  5171               	movf	GLCD_SetPixel@tmp& (0+255),w,b
  3680  000432  ECD7  F003         	call	_GLCD_WriteData
  3681  000436  0012               	return		;funcret
  3682  000438                     __end_of_GLCD_SetPixel:
  3683                           	opt stack 0
  3684                           tblptru	equ	0xFF8
  3685                           tblptrh	equ	0xFF7
  3686                           tblptrl	equ	0xFF6
  3687                           tablat	equ	0xFF5
  3688                           prodh	equ	0xFF4
  3689                           prodl	equ	0xFF3
  3690                           intcon	equ	0xFF2
  3691                           postinc0	equ	0xFEE
  3692                           wreg	equ	0xFE8
  3693                           postdec1	equ	0xFE5
  3694                           fsr1l	equ	0xFE1
  3695                           status	equ	0xFD8
  3696                           
  3697 ;; *************** function _GLCD_ReadData *****************
  3698 ;; Defined at:
  3699 ;;		line 94 in file "ks0108lib/KS0108-PIC18.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;  data            1    8[BANK0 ] unsigned char 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      unsigned char 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3714 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3716 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3717 ;;Total ram usage:        2 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    8
  3720 ;; This function calls:
  3721 ;;		_GLCD_Delay
  3722 ;;		_GLCD_DisableController
  3723 ;;		_GLCD_EnableController
  3724 ;;		_GLCD_ReadStatus
  3725 ;;		___awdiv
  3726 ;; This function is called by:
  3727 ;;		_GLCD_SetPixel
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text23
  3732  000824                     __ptext23:
  3733                           	opt stack 0
  3734  000824                     _GLCD_ReadData:
  3735                           	opt stack 19
  3736                           
  3737                           ;KS0108-PIC18.c: 96: unsigned char data;
  3738                           ;KS0108-PIC18.c: 97: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  3739                           
  3740                           ;incstack = 0
  3741  000824  C030  F060         	movff	_screen_x,___awdiv@dividend
  3742  000828  0100               	movlb	0	; () banked
  3743  00082A  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3744  00082C  0E00               	movlw	0
  3745  00082E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3746  000830  0E40               	movlw	64
  3747  000832  6F62               	movwf	___awdiv@divisor& (0+255),b
  3748  000834  EC60  F002         	call	___awdiv	;wreg free
  3749  000838  0100               	movlb	0	; () banked
  3750  00083A  5160               	movf	?___awdiv& (0+255),w,b
  3751  00083C  EC60  F006         	call	_GLCD_ReadStatus
  3752  000840  6E26               	movwf	??_GLCD_ReadData& (0+255),c
  3753  000842  BE26               	btfsc	??_GLCD_ReadData,7,c
  3754  000844  D7EF               	goto	_GLCD_ReadData
  3755                           
  3756                           ;KS0108-PIC18.c: 98: TRISC = 0xFF;
  3757  000846  6894               	setf	3988,c	;volatile
  3758                           
  3759                           ;KS0108-PIC18.c: 99: PORTA |= ((1 << 1) | (1 << 2));
  3760  000848  0E06               	movlw	6
  3761  00084A  1280               	iorwf	3968,f,c	;volatile
  3762                           
  3763                           ;KS0108-PIC18.c: 100: GLCD_EnableController(screen_x / 64);
  3764  00084C  C030  F060         	movff	_screen_x,___awdiv@dividend
  3765  000850  0100               	movlb	0	; () banked
  3766  000852  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3767  000854  0E00               	movlw	0
  3768  000856  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3769  000858  0E40               	movlw	64
  3770  00085A  6F62               	movwf	___awdiv@divisor& (0+255),b
  3771  00085C  EC60  F002         	call	___awdiv	;wreg free
  3772  000860  0100               	movlb	0	; () banked
  3773  000862  5160               	movf	?___awdiv& (0+255),w,b
  3774  000864  EC8A  F006         	call	_GLCD_EnableController
  3775                           
  3776                           ;KS0108-PIC18.c: 102: PORTA |= (1 << 3);
  3777  000868  8680               	bsf	3968,3,c	;volatile
  3778                           
  3779                           ;KS0108-PIC18.c: 103: GLCD_Delay();
  3780  00086A  EC4E  F007         	call	_GLCD_Delay	;wreg free
  3781                           
  3782                           ;KS0108-PIC18.c: 104: data = PORTC;
  3783  00086E  CF82 F068          	movff	3970,GLCD_ReadData@data	;volatile
  3784                           
  3785                           ;KS0108-PIC18.c: 105: PORTA &= ~(1 << 3);
  3786  000872  9680               	bcf	3968,3,c	;volatile
  3787                           
  3788                           ;KS0108-PIC18.c: 106: GLCD_DisableController(screen_x / 64);
  3789  000874  C030  F060         	movff	_screen_x,___awdiv@dividend
  3790  000878  0100               	movlb	0	; () banked
  3791  00087A  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  3792  00087C  0E00               	movlw	0
  3793  00087E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3794  000880  0E40               	movlw	64
  3795  000882  6F62               	movwf	___awdiv@divisor& (0+255),b
  3796  000884  EC60  F002         	call	___awdiv	;wreg free
  3797  000888  0100               	movlb	0	; () banked
  3798  00088A  5160               	movf	?___awdiv& (0+255),w,b
  3799  00088C  EC9D  F006         	call	_GLCD_DisableController
  3800                           
  3801                           ;KS0108-PIC18.c: 107: screen_x++;
  3802  000890  2A30               	incf	_screen_x,f,c
  3803                           
  3804                           ;KS0108-PIC18.c: 108: return data;
  3805  000892  0100               	movlb	0	; () banked
  3806  000894  5168               	movf	GLCD_ReadData@data& (0+255),w,b
  3807  000896  0012               	return	
  3808  000898                     __end_of_GLCD_ReadData:
  3809                           	opt stack 0
  3810                           tblptru	equ	0xFF8
  3811                           tblptrh	equ	0xFF7
  3812                           tblptrl	equ	0xFF6
  3813                           tablat	equ	0xFF5
  3814                           prodh	equ	0xFF4
  3815                           prodl	equ	0xFF3
  3816                           intcon	equ	0xFF2
  3817                           postinc0	equ	0xFEE
  3818                           wreg	equ	0xFE8
  3819                           postdec1	equ	0xFE5
  3820                           fsr1l	equ	0xFE1
  3821                           status	equ	0xFD8
  3822                           
  3823 ;; *************** function _Draw_Arrow *****************
  3824 ;; Defined at:
  3825 ;;		line 42 in file "screen_controls.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3843 ;;Total ram usage:        0 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:   11
  3846 ;; This function calls:
  3847 ;;		_Clear_Arrow_Column
  3848 ;;		_Clear_runTime_Arrows
  3849 ;;		_Draw_runTime_Arrow
  3850 ;;		_GLCD_GoTo
  3851 ;;		_Make_Arrow
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;;		_Check_Buttons
  3855 ;;		_Main_Menu_Function
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text24
  3860  000B08                     __ptext24:
  3861                           	opt stack 0
  3862  000B08                     _Draw_Arrow:
  3863                           	opt stack 19
  3864                           
  3865                           ;screen_controls.c: 46: switch(currentContext)
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;incstack = 0
  3869  000B08  D019               	goto	l575
  3870  000B0A                     
  3871                           ;screen_controls.c: 49: Clear_Arrow_Column();
  3872  000B0A  EC80  F004         	call	_Clear_Arrow_Column	;wreg free
  3873                           
  3874                           ;screen_controls.c: 50: GLCD_GoTo(0, mainState);
  3875  000B0E  C034  F06A         	movff	_mainState,GLCD_GoTo@y
  3876  000B12  0E00               	movlw	0
  3877  000B14  EC1C  F002         	call	_GLCD_GoTo
  3878                           
  3879                           ;screen_controls.c: 51: Make_Arrow();
  3880  000B18  EC1E  F007         	call	_Make_Arrow	;wreg free
  3881                           
  3882                           ;screen_controls.c: 52: break;
  3883  000B1C  0012               	return	
  3884  000B1E                     
  3885                           ;screen_controls.c: 55: Clear_runTime_Arrows();
  3886  000B1E  ECDB  F004         	call	_Clear_runTime_Arrows	;wreg free
  3887                           
  3888                           ;screen_controls.c: 56: Draw_runTime_Arrow();
  3889  000B22  EC31  F005         	call	_Draw_runTime_Arrow	;wreg free
  3890                           
  3891                           ;screen_controls.c: 57: break;
  3892  000B26  0012               	return	
  3893  000B28                     
  3894                           ;screen_controls.c: 60: Clear_Arrow_Column();
  3895  000B28  EC80  F004         	call	_Clear_Arrow_Column	;wreg free
  3896                           
  3897                           ;screen_controls.c: 61: GLCD_GoTo(0, mainState);
  3898  000B2C  C034  F06A         	movff	_mainState,GLCD_GoTo@y
  3899  000B30  0E00               	movlw	0
  3900  000B32  EC1C  F002         	call	_GLCD_GoTo
  3901                           
  3902                           ;screen_controls.c: 62: Make_Arrow();
  3903  000B36  EC1E  F007         	call	_Make_Arrow	;wreg free
  3904                           
  3905                           ;screen_controls.c: 64: }
  3906                           
  3907                           ;screen_controls.c: 63: break;
  3908  000B3A  0012               	return	
  3909  000B3C                     l575:
  3910  000B3C  5033               	movf	_currentContext,w,c
  3911                           
  3912                           ; Switch size 1, requested type "space"
  3913                           ; Number of cases is 2, Range of values is 0 to 1
  3914                           ; switch strategies available:
  3915                           ; Name         Instructions Cycles
  3916                           ; simple_byte            7     4 (average)
  3917                           ;	Chosen strategy is simple_byte
  3918  000B3E  0A00               	xorlw	0	; case 0
  3919  000B40  B4D8               	btfsc	status,2,c
  3920  000B42  D7E3               	goto	l576
  3921  000B44  0A01               	xorlw	1	; case 1
  3922  000B46  B4D8               	btfsc	status,2,c
  3923  000B48  D7EA               	goto	l578
  3924  000B4A  D7EE               	goto	l579
  3925  000B4C                     __end_of_Draw_Arrow:
  3926                           	opt stack 0
  3927                           tblptru	equ	0xFF8
  3928                           tblptrh	equ	0xFF7
  3929                           tblptrl	equ	0xFF6
  3930                           tablat	equ	0xFF5
  3931                           prodh	equ	0xFF4
  3932                           prodl	equ	0xFF3
  3933                           intcon	equ	0xFF2
  3934                           postinc0	equ	0xFEE
  3935                           wreg	equ	0xFE8
  3936                           postdec1	equ	0xFE5
  3937                           fsr1l	equ	0xFE1
  3938                           status	equ	0xFD8
  3939                           
  3940 ;; *************** function _Draw_runTime_Arrow *****************
  3941 ;; Defined at:
  3942 ;;		line 124 in file "screen_controls.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;		None
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		wreg, status,2, status,0, cstack
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3960 ;;Total ram usage:        0 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:   10
  3963 ;; This function calls:
  3964 ;;		_GLCD_GoTo
  3965 ;;		_Make_Arrow
  3966 ;; This function is called by:
  3967 ;;		_Draw_Arrow
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text25
  3972  000A62                     __ptext25:
  3973                           	opt stack 0
  3974  000A62                     _Draw_runTime_Arrow:
  3975                           	opt stack 19
  3976                           
  3977                           ;screen_controls.c: 126: switch(runTimeContext)
  3978                           
  3979                           ;incstack = 0
  3980  000A62  D021               	goto	l606
  3981  000A64                     
  3982                           ;screen_controls.c: 129: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  3983  000A64  0E02               	movlw	2
  3984  000A66  0100               	movlb	0	; () banked
  3985  000A68  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  3986  000A6A  5037               	movf	_ARROW_SIZE,w,c
  3987  000A6C  0800               	sublw	0
  3988  000A6E  2439               	addwf	_runTimeX,w,c
  3989  000A70  EC1C  F002         	call	_GLCD_GoTo
  3990                           
  3991                           ;screen_controls.c: 130: Make_Arrow();
  3992  000A74  EC1E  F007         	call	_Make_Arrow	;wreg free
  3993                           
  3994                           ;screen_controls.c: 131: break;
  3995  000A78  0012               	return	
  3996  000A7A                     
  3997                           ;screen_controls.c: 134: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  3998  000A7A  0E04               	movlw	4
  3999  000A7C  0100               	movlb	0	; () banked
  4000  000A7E  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  4001  000A80  5037               	movf	_ARROW_SIZE,w,c
  4002  000A82  0800               	sublw	0
  4003  000A84  2439               	addwf	_runTimeX,w,c
  4004  000A86  EC1C  F002         	call	_GLCD_GoTo
  4005                           
  4006                           ;screen_controls.c: 135: Make_Arrow();
  4007  000A8A  EC1E  F007         	call	_Make_Arrow	;wreg free
  4008                           
  4009                           ;screen_controls.c: 136: break;
  4010  000A8E  0012               	return	
  4011  000A90                     
  4012                           ;screen_controls.c: 139: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  4013  000A90  0E02               	movlw	2
  4014  000A92  0100               	movlb	0	; () banked
  4015  000A94  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  4016  000A96  5037               	movf	_ARROW_SIZE,w,c
  4017  000A98  0800               	sublw	0
  4018  000A9A  2439               	addwf	_runTimeX,w,c
  4019  000A9C  EC1C  F002         	call	_GLCD_GoTo
  4020                           
  4021                           ;screen_controls.c: 140: Make_Arrow();
  4022  000AA0  EC1E  F007         	call	_Make_Arrow	;wreg free
  4023                           
  4024                           ;screen_controls.c: 144: }
  4025                           
  4026                           ;screen_controls.c: 141: break;
  4027  000AA4  0012               	return	
  4028  000AA6                     l606:
  4029  000AA6  5032               	movf	_runTimeContext,w,c
  4030                           
  4031                           ; Switch size 1, requested type "space"
  4032                           ; Number of cases is 2, Range of values is 0 to 1
  4033                           ; switch strategies available:
  4034                           ; Name         Instructions Cycles
  4035                           ; simple_byte            7     4 (average)
  4036                           ;	Chosen strategy is simple_byte
  4037  000AA8  0A00               	xorlw	0	; case 0
  4038  000AAA  B4D8               	btfsc	status,2,c
  4039  000AAC  D7DB               	goto	l607
  4040  000AAE  0A01               	xorlw	1	; case 1
  4041  000AB0  B4D8               	btfsc	status,2,c
  4042  000AB2  D7E3               	goto	l609
  4043  000AB4  D7ED               	goto	l610
  4044  000AB6                     __end_of_Draw_runTime_Arrow:
  4045                           	opt stack 0
  4046                           tblptru	equ	0xFF8
  4047                           tblptrh	equ	0xFF7
  4048                           tblptrl	equ	0xFF6
  4049                           tablat	equ	0xFF5
  4050                           prodh	equ	0xFF4
  4051                           prodl	equ	0xFF3
  4052                           intcon	equ	0xFF2
  4053                           postinc0	equ	0xFEE
  4054                           wreg	equ	0xFE8
  4055                           postdec1	equ	0xFE5
  4056                           fsr1l	equ	0xFE1
  4057                           status	equ	0xFD8
  4058                           
  4059 ;; *************** function _Make_Arrow *****************
  4060 ;; Defined at:
  4061 ;;		line 69 in file "screen_controls.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4079 ;;Total ram usage:        0 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    9
  4082 ;; This function calls:
  4083 ;;		_GLCD_WriteData
  4084 ;; This function is called by:
  4085 ;;		_Draw_Arrow
  4086 ;;		_Draw_runTime_Arrow
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text26
  4091  000E3C                     __ptext26:
  4092                           	opt stack 0
  4093  000E3C                     _Make_Arrow:
  4094                           	opt stack 20
  4095                           
  4096                           ;screen_controls.c: 71: GLCD_WriteData(0x7E);
  4097                           
  4098                           ;incstack = 0
  4099  000E3C  0E7E               	movlw	126
  4100  000E3E  ECD7  F003         	call	_GLCD_WriteData
  4101                           
  4102                           ;screen_controls.c: 72: GLCD_WriteData(0x3C);
  4103  000E42  0E3C               	movlw	60
  4104  000E44  ECD7  F003         	call	_GLCD_WriteData
  4105                           
  4106                           ;screen_controls.c: 73: GLCD_WriteData(0x18);
  4107  000E48  0E18               	movlw	24
  4108  000E4A  ECD7  F003         	call	_GLCD_WriteData
  4109  000E4E  0012               	return		;funcret
  4110  000E50                     __end_of_Make_Arrow:
  4111                           	opt stack 0
  4112                           tblptru	equ	0xFF8
  4113                           tblptrh	equ	0xFF7
  4114                           tblptrl	equ	0xFF6
  4115                           tablat	equ	0xFF5
  4116                           prodh	equ	0xFF4
  4117                           prodl	equ	0xFF3
  4118                           intcon	equ	0xFF2
  4119                           postinc0	equ	0xFEE
  4120                           wreg	equ	0xFE8
  4121                           postdec1	equ	0xFE5
  4122                           fsr1l	equ	0xFE1
  4123                           status	equ	0xFD8
  4124                           
  4125 ;; *************** function _Clear_runTime_Arrows *****************
  4126 ;; Defined at:
  4127 ;;		line 105 in file "screen_controls.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;		None
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  i               1   13[BANK0 ] unsigned char 
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  1    wreg      void 
  4134 ;; Registers used:
  4135 ;;		wreg, status,2, status,0, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4142 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4144 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4145 ;;Total ram usage:        1 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:   10
  4148 ;; This function calls:
  4149 ;;		_GLCD_GoTo
  4150 ;;		_GLCD_WriteData
  4151 ;; This function is called by:
  4152 ;;		_Draw_Arrow
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text27
  4157  0009B6                     __ptext27:
  4158                           	opt stack 0
  4159  0009B6                     _Clear_runTime_Arrows:
  4160                           	opt stack 19
  4161                           
  4162                           ;screen_controls.c: 107: unsigned char i=0;
  4163                           
  4164                           ;incstack = 0
  4165  0009B6  0E00               	movlw	0
  4166  0009B8  0100               	movlb	0	; () banked
  4167  0009BA  6F6D               	movwf	Clear_runTime_Arrows@i& (0+255),b
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;screen_controls.c: 109: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  4171  0009BC  0E02               	movlw	2
  4172  0009BE  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  4173  0009C0  5037               	movf	_ARROW_SIZE,w,c
  4174  0009C2  0800               	sublw	0
  4175  0009C4  2439               	addwf	_runTimeX,w,c
  4176  0009C6  EC1C  F002         	call	_GLCD_GoTo
  4177                           
  4178                           ;screen_controls.c: 111: for(i=0; i<ARROW_SIZE; i++)
  4179  0009CA  0E00               	movlw	0
  4180  0009CC  0100               	movlb	0	; () banked
  4181  0009CE  6F6D               	movwf	Clear_runTime_Arrows@i& (0+255),b
  4182  0009D0  D005               	goto	l597
  4183  0009D2                     
  4184                           ; BSR set to: 0
  4185                           ;screen_controls.c: 112: {
  4186                           ;screen_controls.c: 113: GLCD_WriteData(0x00);
  4187                           
  4188                           ; BSR set to: 0
  4189  0009D2  0E00               	movlw	0
  4190  0009D4  ECD7  F003         	call	_GLCD_WriteData
  4191  0009D8  0100               	movlb	0	; () banked
  4192  0009DA  2B6D               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  4193  0009DC                     l597:
  4194                           
  4195                           ; BSR set to: 0
  4196                           
  4197                           ; BSR set to: 0
  4198  0009DC  5037               	movf	_ARROW_SIZE,w,c
  4199  0009DE  5D6D               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  4200  0009E0  A0D8               	btfss	status,0,c
  4201  0009E2  D7F7               	goto	l598
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;screen_controls.c: 114: }
  4205                           ;screen_controls.c: 116: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  4206                           
  4207                           ; BSR set to: 0
  4208  0009E4  0E04               	movlw	4
  4209  0009E6  6F6A               	movwf	GLCD_GoTo@y& (0+255),b
  4210  0009E8  5037               	movf	_ARROW_SIZE,w,c
  4211  0009EA  0800               	sublw	0
  4212  0009EC  2439               	addwf	_runTimeX,w,c
  4213  0009EE  EC1C  F002         	call	_GLCD_GoTo
  4214                           
  4215                           ;screen_controls.c: 117: for(i=0; i<ARROW_SIZE; i++)
  4216  0009F2  0E00               	movlw	0
  4217  0009F4  0100               	movlb	0	; () banked
  4218  0009F6  6F6D               	movwf	Clear_runTime_Arrows@i& (0+255),b
  4219  0009F8  D005               	goto	l600
  4220  0009FA                     
  4221                           ; BSR set to: 0
  4222                           ;screen_controls.c: 118: {
  4223                           ;screen_controls.c: 119: GLCD_WriteData(0x00);
  4224                           
  4225                           ; BSR set to: 0
  4226  0009FA  0E00               	movlw	0
  4227  0009FC  ECD7  F003         	call	_GLCD_WriteData
  4228  000A00  0100               	movlb	0	; () banked
  4229  000A02  2B6D               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  4230  000A04                     l600:
  4231                           
  4232                           ; BSR set to: 0
  4233                           
  4234                           ; BSR set to: 0
  4235  000A04  5037               	movf	_ARROW_SIZE,w,c
  4236  000A06  5D6D               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  4237  000A08  B0D8               	btfsc	status,0,c
  4238  000A0A  0012               	return	
  4239  000A0C  D7F6               	goto	l601
  4240  000A0E                     __end_of_Clear_runTime_Arrows:
  4241                           	opt stack 0
  4242                           tblptru	equ	0xFF8
  4243                           tblptrh	equ	0xFF7
  4244                           tblptrl	equ	0xFF6
  4245                           tablat	equ	0xFF5
  4246                           prodh	equ	0xFF4
  4247                           prodl	equ	0xFF3
  4248                           intcon	equ	0xFF2
  4249                           postinc0	equ	0xFEE
  4250                           wreg	equ	0xFE8
  4251                           postdec1	equ	0xFE5
  4252                           fsr1l	equ	0xFE1
  4253                           status	equ	0xFD8
  4254                           
  4255 ;; *************** function _Clear_Arrow_Column *****************
  4256 ;; Defined at:
  4257 ;;		line 76 in file "screen_controls.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;		None
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  i               1   21[BANK0 ] unsigned char 
  4262 ;;  j               1   20[BANK0 ] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		wreg, status,2, status,0, cstack
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4274 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4275 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4276 ;;Total ram usage:        9 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:   10
  4279 ;; This function calls:
  4280 ;;		_GLCD_GoTo
  4281 ;;		_GLCD_WriteData
  4282 ;; This function is called by:
  4283 ;;		_Draw_Arrow
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           	psect	text28
  4288  000900                     __ptext28:
  4289                           	opt stack 0
  4290  000900                     _Clear_Arrow_Column:
  4291                           	opt stack 19
  4292                           
  4293                           ;screen_controls.c: 78: unsigned char i, j;
  4294                           ;screen_controls.c: 80: for(i = 0; i < 64/8; i++)
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;incstack = 0
  4298  000900  0E00               	movlw	0
  4299  000902  0100               	movlb	0	; () banked
  4300  000904  6F75               	movwf	Clear_Arrow_Column@i& (0+255),b
  4301  000906                     l3277:
  4302                           
  4303                           ; BSR set to: 0
  4304  000906  0E07               	movlw	7
  4305  000908  6575               	cpfsgt	Clear_Arrow_Column@i& (0+255),b
  4306  00090A  D001               	goto	l586
  4307  00090C  0012               	return	
  4308  00090E                     l586:
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;screen_controls.c: 81: {
  4312                           ;screen_controls.c: 82: GLCD_GoTo(0, i);
  4313                           
  4314                           ; BSR set to: 0
  4315  00090E  C075  F06A         	movff	Clear_Arrow_Column@i,GLCD_GoTo@y
  4316  000912  0E00               	movlw	0
  4317  000914  EC1C  F002         	call	_GLCD_GoTo
  4318                           
  4319                           ;screen_controls.c: 84: for(j = 0; j < (xMenuStart - 1); j++)
  4320  000918  0E00               	movlw	0
  4321  00091A  0100               	movlb	0	; () banked
  4322  00091C  6F74               	movwf	Clear_Arrow_Column@j& (0+255),b
  4323  00091E  D005               	goto	l588
  4324  000920                     
  4325                           ; BSR set to: 0
  4326                           ;screen_controls.c: 85: {
  4327                           ;screen_controls.c: 86: GLCD_WriteData(0x00);
  4328                           
  4329                           ; BSR set to: 0
  4330  000920  0E00               	movlw	0
  4331  000922  ECD7  F003         	call	_GLCD_WriteData
  4332  000926  0100               	movlb	0	; () banked
  4333  000928  2B74               	incf	Clear_Arrow_Column@j& (0+255),f,b
  4334  00092A                     l588:
  4335                           
  4336                           ; BSR set to: 0
  4337                           
  4338                           ; BSR set to: 0
  4339  00092A  0EFF               	movlw	255
  4340  00092C  6F6D               	movwf	??_Clear_Arrow_Column& (0+255),b
  4341  00092E  0EFF               	movlw	255
  4342  000930  6F6E               	movwf	(??_Clear_Arrow_Column+1)& (0+255),b
  4343  000932  5036               	movf	_xMenuStart,w,c
  4344  000934  6F6F               	movwf	(??_Clear_Arrow_Column+2)& (0+255),b
  4345  000936  6B70               	clrf	(??_Clear_Arrow_Column+3)& (0+255),b
  4346  000938  516D               	movf	??_Clear_Arrow_Column& (0+255),w,b
  4347  00093A  276F               	addwf	(??_Clear_Arrow_Column+2)& (0+255),f,b
  4348  00093C  516E               	movf	(??_Clear_Arrow_Column+1)& (0+255),w,b
  4349  00093E  2370               	addwfc	(??_Clear_Arrow_Column+3)& (0+255),f,b
  4350  000940  5174               	movf	Clear_Arrow_Column@j& (0+255),w,b
  4351  000942  6F71               	movwf	(??_Clear_Arrow_Column+4)& (0+255),b
  4352  000944  6B72               	clrf	(??_Clear_Arrow_Column+5)& (0+255),b
  4353  000946  516F               	movf	(??_Clear_Arrow_Column+2)& (0+255),w,b
  4354  000948  5D71               	subwf	(??_Clear_Arrow_Column+4)& (0+255),w,b
  4355  00094A  5172               	movf	(??_Clear_Arrow_Column+5)& (0+255),w,b
  4356  00094C  0A80               	xorlw	128
  4357  00094E  6F73               	movwf	(??_Clear_Arrow_Column+6)& (0+255),b
  4358  000950  5170               	movf	(??_Clear_Arrow_Column+3)& (0+255),w,b
  4359  000952  0A80               	xorlw	128
  4360  000954  5973               	subwfb	(??_Clear_Arrow_Column+6)& (0+255),w,b
  4361  000956  A0D8               	btfss	status,0,c
  4362  000958  D7E3               	goto	l589
  4363                           
  4364                           ; BSR set to: 0
  4365                           
  4366                           ; BSR set to: 0
  4367  00095A  2B75               	incf	Clear_Arrow_Column@i& (0+255),f,b
  4368  00095C  D7D4               	goto	l3277
  4369  00095E                     __end_of_Clear_Arrow_Column:
  4370                           	opt stack 0
  4371                           tblptru	equ	0xFF8
  4372                           tblptrh	equ	0xFF7
  4373                           tblptrl	equ	0xFF6
  4374                           tablat	equ	0xFF5
  4375                           prodh	equ	0xFF4
  4376                           prodl	equ	0xFF3
  4377                           intcon	equ	0xFF2
  4378                           postinc0	equ	0xFEE
  4379                           wreg	equ	0xFE8
  4380                           postdec1	equ	0xFE5
  4381                           fsr1l	equ	0xFE1
  4382                           status	equ	0xFD8
  4383                           
  4384 ;; *************** function _GLCD_WriteData *****************
  4385 ;; Defined at:
  4386 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  dataToWrite     1    wreg     unsigned char 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  dataToWrite     1    8[BANK0 ] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      void 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4403 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4404 ;;Total ram usage:        2 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    8
  4407 ;; This function calls:
  4408 ;;		_GLCD_Delay
  4409 ;;		_GLCD_DisableController
  4410 ;;		_GLCD_EnableController
  4411 ;;		_GLCD_ReadStatus
  4412 ;;		___awdiv
  4413 ;; This function is called by:
  4414 ;;		_GLCD_ClearScreen
  4415 ;;		_GLCD_WriteChar
  4416 ;;		_GLCD_SetPixel
  4417 ;;		_Make_Arrow
  4418 ;;		_Clear_Arrow_Column
  4419 ;;		_Clear_runTime_Arrows
  4420 ;;		_GLCD_Bitmap
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text29
  4425  0007AE                     __ptext29:
  4426                           	opt stack 0
  4427  0007AE                     _GLCD_WriteData:
  4428                           	opt stack 19
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;incstack = 0
  4432                           ;GLCD_WriteData@dataToWrite stored from wreg
  4433  0007AE  0100               	movlb	0	; () banked
  4434  0007B0  6F68               	movwf	GLCD_WriteData@dataToWrite& (0+255),b
  4435  0007B2                     
  4436                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  4437  0007B2  C030  F060         	movff	_screen_x,___awdiv@dividend
  4438  0007B6  0100               	movlb	0	; () banked
  4439  0007B8  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4440  0007BA  0E00               	movlw	0
  4441  0007BC  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4442  0007BE  0E40               	movlw	64
  4443  0007C0  6F62               	movwf	___awdiv@divisor& (0+255),b
  4444  0007C2  EC60  F002         	call	___awdiv	;wreg free
  4445  0007C6  0100               	movlb	0	; () banked
  4446  0007C8  5160               	movf	?___awdiv& (0+255),w,b
  4447  0007CA  EC60  F006         	call	_GLCD_ReadStatus
  4448  0007CE  6E26               	movwf	??_GLCD_WriteData& (0+255),c
  4449  0007D0  BE26               	btfsc	??_GLCD_WriteData,7,c
  4450  0007D2  D7EF               	goto	l3141
  4451                           
  4452                           ;KS0108-PIC18.c: 116: TRISC = 0x00;
  4453  0007D4  0E00               	movlw	0
  4454  0007D6  6E94               	movwf	3988,c	;volatile
  4455                           
  4456                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
  4457  0007D8  9280               	bcf	3968,1,c	;volatile
  4458                           
  4459                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
  4460  0007DA  8480               	bsf	3968,2,c	;volatile
  4461                           
  4462                           ;KS0108-PIC18.c: 119: PORTC = dataToWrite;
  4463  0007DC  C068  FF82         	movff	GLCD_WriteData@dataToWrite,3970	;volatile
  4464                           
  4465                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
  4466  0007E0  C030  F060         	movff	_screen_x,___awdiv@dividend
  4467  0007E4  0100               	movlb	0	; () banked
  4468  0007E6  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4469  0007E8  0E00               	movlw	0
  4470  0007EA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4471  0007EC  0E40               	movlw	64
  4472  0007EE  6F62               	movwf	___awdiv@divisor& (0+255),b
  4473  0007F0  EC60  F002         	call	___awdiv	;wreg free
  4474  0007F4  0100               	movlb	0	; () banked
  4475  0007F6  5160               	movf	?___awdiv& (0+255),w,b
  4476  0007F8  EC8A  F006         	call	_GLCD_EnableController
  4477                           
  4478                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
  4479  0007FC  8680               	bsf	3968,3,c	;volatile
  4480                           
  4481                           ;KS0108-PIC18.c: 122: GLCD_Delay();
  4482  0007FE  EC4E  F007         	call	_GLCD_Delay	;wreg free
  4483                           
  4484                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
  4485  000802  9680               	bcf	3968,3,c	;volatile
  4486                           
  4487                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
  4488  000804  C030  F060         	movff	_screen_x,___awdiv@dividend
  4489  000808  0100               	movlb	0	; () banked
  4490  00080A  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4491  00080C  0E00               	movlw	0
  4492  00080E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4493  000810  0E40               	movlw	64
  4494  000812  6F62               	movwf	___awdiv@divisor& (0+255),b
  4495  000814  EC60  F002         	call	___awdiv	;wreg free
  4496  000818  0100               	movlb	0	; () banked
  4497  00081A  5160               	movf	?___awdiv& (0+255),w,b
  4498  00081C  EC9D  F006         	call	_GLCD_DisableController
  4499                           
  4500                           ;KS0108-PIC18.c: 125: screen_x++;
  4501  000820  2A30               	incf	_screen_x,f,c
  4502  000822  0012               	return		;funcret
  4503  000824                     __end_of_GLCD_WriteData:
  4504                           	opt stack 0
  4505                           tblptru	equ	0xFF8
  4506                           tblptrh	equ	0xFF7
  4507                           tblptrl	equ	0xFF6
  4508                           tablat	equ	0xFF5
  4509                           prodh	equ	0xFF4
  4510                           prodl	equ	0xFF3
  4511                           intcon	equ	0xFF2
  4512                           postinc0	equ	0xFEE
  4513                           wreg	equ	0xFE8
  4514                           postdec1	equ	0xFE5
  4515                           fsr1l	equ	0xFE1
  4516                           status	equ	0xFD8
  4517                           
  4518 ;; *************** function _GLCD_GoTo *****************
  4519 ;; Defined at:
  4520 ;;		line 25 in file "ks0108lib/KS0108.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  x               1    wreg     unsigned char 
  4523 ;;  y               1   10[BANK0 ] unsigned char 
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;  x               1   11[BANK0 ] unsigned char 
  4526 ;;  i               1   12[BANK0 ] unsigned char 
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  1    wreg      void 
  4529 ;; Registers used:
  4530 ;;		wreg, status,2, status,0, cstack
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4536 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4537 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4539 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4540 ;;Total ram usage:        3 bytes
  4541 ;; Hardware stack levels used:    1
  4542 ;; Hardware stack levels required when called:    9
  4543 ;; This function calls:
  4544 ;;		_GLCD_WriteCommand
  4545 ;;		___awdiv
  4546 ;; This function is called by:
  4547 ;;		_GLCD_ClearScreen
  4548 ;;		_GLCD_SetPixel
  4549 ;;		_Initialize_Menus
  4550 ;;		_Draw_Arrow
  4551 ;;		_Clear_Arrow_Column
  4552 ;;		_Draw_runTime_Menu
  4553 ;;		_Clear_runTime_Arrows
  4554 ;;		_Draw_runTime_Arrow
  4555 ;;		_GLCD_Bitmap
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text30
  4560  000438                     __ptext30:
  4561                           	opt stack 0
  4562  000438                     _GLCD_GoTo:
  4563                           	opt stack 18
  4564                           
  4565                           ;incstack = 0
  4566                           ;GLCD_GoTo@x stored from wreg
  4567  000438  0100               	movlb	0	; () banked
  4568  00043A  6F6B               	movwf	GLCD_GoTo@x& (0+255),b
  4569                           
  4570                           ;KS0108.c: 27: unsigned char i;
  4571                           ;KS0108.c: 28: screen_x = x;
  4572  00043C  C06B  F030         	movff	GLCD_GoTo@x,_screen_x
  4573                           
  4574                           ;KS0108.c: 29: screen_y = y;
  4575  000440  C06A  F02F         	movff	GLCD_GoTo@y,_screen_y
  4576                           
  4577                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
  4578  000444  0E00               	movlw	0
  4579  000446  0100               	movlb	0	; () banked
  4580  000448  6F6C               	movwf	GLCD_GoTo@i& (0+255),b
  4581  00044A                     l3129:
  4582                           
  4583                           ; BSR set to: 0
  4584  00044A  0E01               	movlw	1
  4585  00044C  656C               	cpfsgt	GLCD_GoTo@i& (0+255),b
  4586  00044E  D001               	goto	l445
  4587  000450  D014               	goto	u1600
  4588  000452                     l445:
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;KS0108.c: 32: {
  4592                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
  4593                           
  4594                           ; BSR set to: 0
  4595  000452  C06C  F026         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  4596  000456  0E40               	movlw	64
  4597  000458  EC16  F006         	call	_GLCD_WriteCommand
  4598                           
  4599                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
  4600  00045C  C06C  F026         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  4601  000460  0100               	movlb	0	; () banked
  4602  000462  516A               	movf	GLCD_GoTo@y& (0+255),w,b
  4603  000464  09B8               	iorlw	184
  4604  000466  EC16  F006         	call	_GLCD_WriteCommand
  4605                           
  4606                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
  4607  00046A  C06C  F026         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  4608  00046E  0EC0               	movlw	192
  4609  000470  EC16  F006         	call	_GLCD_WriteCommand
  4610  000474  0100               	movlb	0	; () banked
  4611  000476  2B6C               	incf	GLCD_GoTo@i& (0+255),f,b
  4612  000478  D7E8               	goto	l3129
  4613  00047A                     u1600:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;KS0108.c: 36: }
  4617                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
  4618                           
  4619                           ; BSR set to: 0
  4620  00047A  C06B  F060         	movff	GLCD_GoTo@x,___awdiv@dividend
  4621  00047E  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4622  000480  0E00               	movlw	0
  4623  000482  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4624  000484  0E40               	movlw	64
  4625  000486  6F62               	movwf	___awdiv@divisor& (0+255),b
  4626  000488  EC60  F002         	call	___awdiv	;wreg free
  4627  00048C  0100               	movlb	0	; () banked
  4628  00048E  5160               	movf	?___awdiv& (0+255),w,b
  4629  000490  6E26               	movwf	GLCD_WriteCommand@controller,c
  4630  000492  516B               	movf	GLCD_GoTo@x& (0+255),w,b
  4631  000494  0B3F               	andlw	63
  4632  000496  0940               	iorlw	64
  4633  000498  EC16  F006         	call	_GLCD_WriteCommand
  4634                           
  4635                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
  4636  00049C  C06B  F060         	movff	GLCD_GoTo@x,___awdiv@dividend
  4637  0004A0  0100               	movlb	0	; () banked
  4638  0004A2  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4639  0004A4  0E00               	movlw	0
  4640  0004A6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4641  0004A8  0E40               	movlw	64
  4642  0004AA  6F62               	movwf	___awdiv@divisor& (0+255),b
  4643  0004AC  EC60  F002         	call	___awdiv	;wreg free
  4644  0004B0  0100               	movlb	0	; () banked
  4645  0004B2  5160               	movf	?___awdiv& (0+255),w,b
  4646  0004B4  6E26               	movwf	GLCD_WriteCommand@controller,c
  4647  0004B6  516A               	movf	GLCD_GoTo@y& (0+255),w,b
  4648  0004B8  09B8               	iorlw	184
  4649  0004BA  EC16  F006         	call	_GLCD_WriteCommand
  4650  0004BE  0012               	return		;funcret
  4651  0004C0                     __end_of_GLCD_GoTo:
  4652                           	opt stack 0
  4653                           tblptru	equ	0xFF8
  4654                           tblptrh	equ	0xFF7
  4655                           tblptrl	equ	0xFF6
  4656                           tablat	equ	0xFF5
  4657                           prodh	equ	0xFF4
  4658                           prodl	equ	0xFF3
  4659                           intcon	equ	0xFF2
  4660                           postinc0	equ	0xFEE
  4661                           wreg	equ	0xFE8
  4662                           postdec1	equ	0xFE5
  4663                           fsr1l	equ	0xFE1
  4664                           status	equ	0xFD8
  4665                           
  4666 ;; *************** function ___awdiv *****************
  4667 ;; Defined at:
  4668 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  dividend        2    0[BANK0 ] int 
  4671 ;;  divisor         2    2[BANK0 ] int 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  quotient        2    6[BANK0 ] int 
  4674 ;;  sign            1    5[BANK0 ] unsigned char 
  4675 ;;  counter         1    4[BANK0 ] unsigned char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  2    0[BANK0 ] int 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4685 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4686 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4688 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4689 ;;Total ram usage:        8 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    6
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_GLCD_GoTo
  4696 ;;		_GLCD_SetPixel
  4697 ;;		_GLCD_ReadData
  4698 ;;		_GLCD_WriteData
  4699 ;;		_GLCD_Bitmap
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text31
  4704  0004C0                     __ptext31:
  4705                           	opt stack 0
  4706  0004C0                     ___awdiv:
  4707                           	opt stack 20
  4708                           
  4709                           ;incstack = 0
  4710  0004C0  0E00               	movlw	0
  4711  0004C2  0100               	movlb	0	; () banked
  4712  0004C4  6F65               	movwf	___awdiv@sign& (0+255),b
  4713                           
  4714                           ; BSR set to: 0
  4715  0004C6  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4716  0004C8  D006               	goto	l779
  4717                           
  4718                           ; BSR set to: 0
  4719  0004CA  6D62               	negf	___awdiv@divisor& (0+255),b
  4720  0004CC  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4721  0004CE  B0D8               	btfsc	status,0,c
  4722  0004D0  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4723                           
  4724                           ; BSR set to: 0
  4725  0004D2  0E01               	movlw	1
  4726  0004D4  6F65               	movwf	___awdiv@sign& (0+255),b
  4727  0004D6                     l779:
  4728                           
  4729                           ; BSR set to: 0
  4730                           
  4731                           ; BSR set to: 0
  4732  0004D6  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4733  0004D8  D006               	goto	l780
  4734                           
  4735                           ; BSR set to: 0
  4736  0004DA  6D60               	negf	___awdiv@dividend& (0+255),b
  4737  0004DC  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4738  0004DE  B0D8               	btfsc	status,0,c
  4739  0004E0  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4740                           
  4741                           ; BSR set to: 0
  4742  0004E2  0E01               	movlw	1
  4743  0004E4  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  4744  0004E6                     l780:
  4745                           
  4746                           ; BSR set to: 0
  4747                           
  4748                           ; BSR set to: 0
  4749  0004E6  0E00               	movlw	0
  4750  0004E8  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  4751  0004EA  0E00               	movlw	0
  4752  0004EC  6F66               	movwf	___awdiv@quotient& (0+255),b
  4753                           
  4754                           ; BSR set to: 0
  4755  0004EE  5162               	movf	___awdiv@divisor& (0+255),w,b
  4756  0004F0  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4757  0004F2  B4D8               	btfsc	status,2,c
  4758  0004F4  D01C               	goto	l787
  4759                           
  4760                           ; BSR set to: 0
  4761  0004F6  0E01               	movlw	1
  4762  0004F8  6F64               	movwf	___awdiv@counter& (0+255),b
  4763  0004FA  D004               	goto	l782
  4764  0004FC                     
  4765                           ; BSR set to: 0
  4766                           
  4767                           ; BSR set to: 0
  4768  0004FC  90D8               	bcf	status,0,c
  4769  0004FE  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  4770  000500  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4771  000502  2B64               	incf	___awdiv@counter& (0+255),f,b
  4772  000504                     l782:
  4773                           
  4774                           ; BSR set to: 0
  4775                           
  4776                           ; BSR set to: 0
  4777  000504  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4778  000506  D7FA               	goto	l783
  4779  000508                     u1560:
  4780                           
  4781                           ; BSR set to: 0
  4782                           
  4783                           ; BSR set to: 0
  4784                           
  4785                           ; BSR set to: 0
  4786  000508  90D8               	bcf	status,0,c
  4787  00050A  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  4788  00050C  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4789                           
  4790                           ; BSR set to: 0
  4791  00050E  5162               	movf	___awdiv@divisor& (0+255),w,b
  4792  000510  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  4793  000512  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4794  000514  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4795  000516  A0D8               	btfss	status,0,c
  4796  000518  D005               	goto	l786
  4797                           
  4798                           ; BSR set to: 0
  4799  00051A  5162               	movf	___awdiv@divisor& (0+255),w,b
  4800  00051C  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  4801  00051E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4802  000520  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4803                           
  4804                           ; BSR set to: 0
  4805  000522  8166               	bsf	___awdiv@quotient& (0+255),0,b
  4806  000524                     l786:
  4807                           
  4808                           ; BSR set to: 0
  4809                           
  4810                           ; BSR set to: 0
  4811  000524  90D8               	bcf	status,0,c
  4812  000526  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4813  000528  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  4814                           
  4815                           ; BSR set to: 0
  4816  00052A  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  4817  00052C  D7ED               	goto	u1560
  4818  00052E                     l787:
  4819                           
  4820                           ; BSR set to: 0
  4821                           
  4822                           ; BSR set to: 0
  4823                           
  4824                           ; BSR set to: 0
  4825  00052E  5165               	movf	___awdiv@sign& (0+255),w,b
  4826  000530  B4D8               	btfsc	status,2,c
  4827  000532  D004               	goto	l788
  4828                           
  4829                           ; BSR set to: 0
  4830  000534  6D66               	negf	___awdiv@quotient& (0+255),b
  4831  000536  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4832  000538  B0D8               	btfsc	status,0,c
  4833  00053A  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4834  00053C                     l788:
  4835                           
  4836                           ; BSR set to: 0
  4837                           
  4838                           ; BSR set to: 0
  4839  00053C  C066  F060         	movff	___awdiv@quotient,?___awdiv
  4840  000540  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  4841  000544  0012               	return	
  4842  000546                     __end_of___awdiv:
  4843                           	opt stack 0
  4844                           tblptru	equ	0xFF8
  4845                           tblptrh	equ	0xFF7
  4846                           tblptrl	equ	0xFF6
  4847                           tablat	equ	0xFF5
  4848                           prodh	equ	0xFF4
  4849                           prodl	equ	0xFF3
  4850                           intcon	equ	0xFF2
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           postdec1	equ	0xFE5
  4854                           fsr1l	equ	0xFE1
  4855                           status	equ	0xFD8
  4856                           
  4857 ;; *************** function _GLCD_WriteCommand *****************
  4858 ;; Defined at:
  4859 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  commandToWri    1    wreg     unsigned char 
  4862 ;;  controller      1   37[COMRAM] unsigned char 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  commandToWri    1    9[BANK0 ] unsigned char 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		wreg, status,2, status,0, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4874 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4876 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4877 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4878 ;;Total ram usage:        3 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    8
  4881 ;; This function calls:
  4882 ;;		_GLCD_Delay
  4883 ;;		_GLCD_DisableController
  4884 ;;		_GLCD_EnableController
  4885 ;;		_GLCD_ReadStatus
  4886 ;; This function is called by:
  4887 ;;		_GLCD_Initalize
  4888 ;;		_GLCD_GoTo
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text32
  4893  000C2C                     __ptext32:
  4894                           	opt stack 0
  4895  000C2C                     _GLCD_WriteCommand:
  4896                           	opt stack 18
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;incstack = 0
  4900                           ;GLCD_WriteCommand@commandToWrite stored from wreg
  4901  000C2C  0100               	movlb	0	; () banked
  4902  000C2E  6F69               	movwf	GLCD_WriteCommand@commandToWrite& (0+255),b
  4903  000C30                     
  4904                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
  4905  000C30  5026               	movf	GLCD_WriteCommand@controller,w,c
  4906  000C32  EC60  F006         	call	_GLCD_ReadStatus
  4907  000C36  0100               	movlb	0	; () banked
  4908  000C38  6F68               	movwf	??_GLCD_WriteCommand& (0+255),b
  4909  000C3A  BF68               	btfsc	??_GLCD_WriteCommand& (0+255),7,b
  4910  000C3C  D7F9               	goto	l3059
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;KS0108-PIC18.c: 82: TRISC = 0x00;
  4914                           
  4915                           ; BSR set to: 0
  4916  000C3E  0E00               	movlw	0
  4917  000C40  6E94               	movwf	3988,c	;volatile
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
  4921  000C42  0EF9               	movlw	249
  4922  000C44  1680               	andwf	3968,f,c	;volatile
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
  4926  000C46  5026               	movf	GLCD_WriteCommand@controller,w,c
  4927  000C48  EC8A  F006         	call	_GLCD_EnableController
  4928                           
  4929                           ;KS0108-PIC18.c: 85: PORTC = commandToWrite;
  4930  000C4C  C069  FF82         	movff	GLCD_WriteCommand@commandToWrite,3970	;volatile
  4931                           
  4932                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
  4933  000C50  8680               	bsf	3968,3,c	;volatile
  4934                           
  4935                           ;KS0108-PIC18.c: 87: GLCD_Delay();
  4936  000C52  EC4E  F007         	call	_GLCD_Delay	;wreg free
  4937                           
  4938                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
  4939  000C56  9680               	bcf	3968,3,c	;volatile
  4940                           
  4941                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
  4942  000C58  5026               	movf	GLCD_WriteCommand@controller,w,c
  4943  000C5A  EC9D  F006         	call	_GLCD_DisableController
  4944  000C5E  0012               	return		;funcret
  4945  000C60                     __end_of_GLCD_WriteCommand:
  4946                           	opt stack 0
  4947                           tblptru	equ	0xFF8
  4948                           tblptrh	equ	0xFF7
  4949                           tblptrl	equ	0xFF6
  4950                           tablat	equ	0xFF5
  4951                           prodh	equ	0xFF4
  4952                           prodl	equ	0xFF3
  4953                           intcon	equ	0xFF2
  4954                           postinc0	equ	0xFEE
  4955                           wreg	equ	0xFE8
  4956                           postdec1	equ	0xFE5
  4957                           fsr1l	equ	0xFE1
  4958                           status	equ	0xFD8
  4959                           
  4960 ;; *************** function _GLCD_ReadStatus *****************
  4961 ;; Defined at:
  4962 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  controller      1    wreg     unsigned char 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  controller      1    1[BANK0 ] unsigned char 
  4967 ;;  status          1    0[BANK0 ] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      unsigned char 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4978 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4980 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4981 ;;Total ram usage:        2 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:    7
  4984 ;; This function calls:
  4985 ;;		_GLCD_Delay
  4986 ;;		_GLCD_DisableController
  4987 ;;		_GLCD_EnableController
  4988 ;; This function is called by:
  4989 ;;		_GLCD_WriteCommand
  4990 ;;		_GLCD_ReadData
  4991 ;;		_GLCD_WriteData
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text33
  4996  000CC0                     __ptext33:
  4997                           	opt stack 0
  4998  000CC0                     _GLCD_ReadStatus:
  4999                           	opt stack 19
  5000                           
  5001                           ;incstack = 0
  5002                           ;GLCD_ReadStatus@controller stored from wreg
  5003  000CC0  0100               	movlb	0	; () banked
  5004  000CC2  6F61               	movwf	GLCD_ReadStatus@controller& (0+255),b
  5005                           
  5006                           ;KS0108-PIC18.c: 64: unsigned char status;
  5007                           ;KS0108-PIC18.c: 65: TRISC = 0xFF;
  5008  000CC4  6894               	setf	3988,c	;volatile
  5009                           
  5010                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
  5011  000CC6  8280               	bsf	3968,1,c	;volatile
  5012                           
  5013                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
  5014  000CC8  9480               	bcf	3968,2,c	;volatile
  5015                           
  5016                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
  5017  000CCA  0100               	movlb	0	; () banked
  5018  000CCC  5161               	movf	GLCD_ReadStatus@controller& (0+255),w,b
  5019  000CCE  EC8A  F006         	call	_GLCD_EnableController
  5020                           
  5021                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
  5022  000CD2  8680               	bsf	3968,3,c	;volatile
  5023                           
  5024                           ;KS0108-PIC18.c: 70: GLCD_Delay();
  5025  000CD4  EC4E  F007         	call	_GLCD_Delay	;wreg free
  5026                           
  5027                           ;KS0108-PIC18.c: 71: status = PORTC;
  5028  000CD8  CF82 F060          	movff	3970,GLCD_ReadStatus@status	;volatile
  5029                           
  5030                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
  5031  000CDC  9680               	bcf	3968,3,c	;volatile
  5032                           
  5033                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
  5034  000CDE  0100               	movlb	0	; () banked
  5035  000CE0  5161               	movf	GLCD_ReadStatus@controller& (0+255),w,b
  5036  000CE2  EC9D  F006         	call	_GLCD_DisableController
  5037                           
  5038                           ;KS0108-PIC18.c: 74: return status;
  5039  000CE6  0100               	movlb	0	; () banked
  5040  000CE8  5160               	movf	GLCD_ReadStatus@status& (0+255),w,b
  5041  000CEA  0012               	return	
  5042  000CEC                     __end_of_GLCD_ReadStatus:
  5043                           	opt stack 0
  5044                           tblptru	equ	0xFF8
  5045                           tblptrh	equ	0xFF7
  5046                           tblptrl	equ	0xFF6
  5047                           tablat	equ	0xFF5
  5048                           prodh	equ	0xFF4
  5049                           prodl	equ	0xFF3
  5050                           intcon	equ	0xFF2
  5051                           postinc0	equ	0xFEE
  5052                           wreg	equ	0xFE8
  5053                           postdec1	equ	0xFE5
  5054                           fsr1l	equ	0xFE1
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function _GLCD_EnableController *****************
  5058 ;; Defined at:
  5059 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  controller      1    wreg     unsigned char 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  controller      1   36[COMRAM] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5077 ;;Total ram usage:        1 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    6
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_GLCD_ReadStatus
  5084 ;;		_GLCD_WriteCommand
  5085 ;;		_GLCD_ReadData
  5086 ;;		_GLCD_WriteData
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text34
  5091  000D14                     __ptext34:
  5092                           	opt stack 0
  5093  000D14                     _GLCD_EnableController:
  5094                           	opt stack 19
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;incstack = 0
  5098                           ;GLCD_EnableController@controller stored from wreg
  5099  000D14  6E25               	movwf	GLCD_EnableController@controller,c
  5100                           
  5101                           ;KS0108-PIC18.c: 41: switch(controller){
  5102  000D16  D006               	goto	l498
  5103  000D18  9A80               	bcf	3968,5,c	;volatile
  5104  000D1A  0012               	return	
  5105  000D1C  9C80               	bcf	3968,6,c	;volatile
  5106  000D1E  0012               	return	
  5107  000D20  9E80               	bcf	3968,7,c	;volatile
  5108                           
  5109                           ;KS0108-PIC18.c: 45: }
  5110  000D22  0012               	return	
  5111  000D24                     l498:
  5112  000D24  5025               	movf	GLCD_EnableController@controller,w,c
  5113                           
  5114                           ; Switch size 1, requested type "space"
  5115                           ; Number of cases is 3, Range of values is 0 to 2
  5116                           ; switch strategies available:
  5117                           ; Name         Instructions Cycles
  5118                           ; simple_byte           10     6 (average)
  5119                           ;	Chosen strategy is simple_byte
  5120  000D26  0A00               	xorlw	0	; case 0
  5121  000D28  B4D8               	btfsc	status,2,c
  5122  000D2A  D7F6               	goto	l499
  5123  000D2C  0A01               	xorlw	1	; case 1
  5124  000D2E  B4D8               	btfsc	status,2,c
  5125  000D30  D7F5               	goto	l501
  5126  000D32  0A03               	xorlw	3	; case 2
  5127  000D34  A4D8               	btfss	status,2,c
  5128  000D36  0012               	return	
  5129  000D38  D7F3               	goto	l502
  5130  000D3A                     __end_of_GLCD_EnableController:
  5131                           	opt stack 0
  5132                           tblptru	equ	0xFF8
  5133                           tblptrh	equ	0xFF7
  5134                           tblptrl	equ	0xFF6
  5135                           tablat	equ	0xFF5
  5136                           prodh	equ	0xFF4
  5137                           prodl	equ	0xFF3
  5138                           intcon	equ	0xFF2
  5139                           postinc0	equ	0xFEE
  5140                           wreg	equ	0xFE8
  5141                           postdec1	equ	0xFE5
  5142                           fsr1l	equ	0xFE1
  5143                           status	equ	0xFD8
  5144                           
  5145 ;; *************** function _GLCD_DisableController *****************
  5146 ;; Defined at:
  5147 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;  controller      1    wreg     unsigned char 
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  controller      1   36[COMRAM] unsigned char 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  1    wreg      void 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5164 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5165 ;;Total ram usage:        1 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:    6
  5168 ;; This function calls:
  5169 ;;		Nothing
  5170 ;; This function is called by:
  5171 ;;		_GLCD_ReadStatus
  5172 ;;		_GLCD_WriteCommand
  5173 ;;		_GLCD_ReadData
  5174 ;;		_GLCD_WriteData
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text35
  5179  000D3A                     __ptext35:
  5180                           	opt stack 0
  5181  000D3A                     _GLCD_DisableController:
  5182                           	opt stack 19
  5183                           
  5184                           ;incstack = 0
  5185                           ;GLCD_DisableController@controller stored from wreg
  5186  000D3A  6E25               	movwf	GLCD_DisableController@controller,c
  5187                           
  5188                           ;KS0108-PIC18.c: 52: switch(controller)
  5189  000D3C  D006               	goto	l506
  5190  000D3E  8A80               	bsf	3968,5,c	;volatile
  5191  000D40  0012               	return	
  5192  000D42  8C80               	bsf	3968,6,c	;volatile
  5193  000D44  0012               	return	
  5194  000D46  8E80               	bsf	3968,7,c	;volatile
  5195                           
  5196                           ;KS0108-PIC18.c: 57: }
  5197  000D48  0012               	return	
  5198  000D4A                     l506:
  5199  000D4A  5025               	movf	GLCD_DisableController@controller,w,c
  5200                           
  5201                           ; Switch size 1, requested type "space"
  5202                           ; Number of cases is 3, Range of values is 0 to 2
  5203                           ; switch strategies available:
  5204                           ; Name         Instructions Cycles
  5205                           ; simple_byte           10     6 (average)
  5206                           ;	Chosen strategy is simple_byte
  5207  000D4C  0A00               	xorlw	0	; case 0
  5208  000D4E  B4D8               	btfsc	status,2,c
  5209  000D50  D7F6               	goto	l507
  5210  000D52  0A01               	xorlw	1	; case 1
  5211  000D54  B4D8               	btfsc	status,2,c
  5212  000D56  D7F5               	goto	l509
  5213  000D58  0A03               	xorlw	3	; case 2
  5214  000D5A  A4D8               	btfss	status,2,c
  5215  000D5C  0012               	return	
  5216  000D5E  D7F3               	goto	l510
  5217  000D60                     __end_of_GLCD_DisableController:
  5218                           	opt stack 0
  5219                           tblptru	equ	0xFF8
  5220                           tblptrh	equ	0xFF7
  5221                           tblptrl	equ	0xFF6
  5222                           tablat	equ	0xFF5
  5223                           prodh	equ	0xFF4
  5224                           prodl	equ	0xFF3
  5225                           intcon	equ	0xFF2
  5226                           postinc0	equ	0xFEE
  5227                           wreg	equ	0xFE8
  5228                           postdec1	equ	0xFE5
  5229                           fsr1l	equ	0xFE1
  5230                           status	equ	0xFD8
  5231                           
  5232 ;; *************** function _GLCD_Delay *****************
  5233 ;; Defined at:
  5234 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;		None
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;		None
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      void 
  5241 ;; Registers used:
  5242 ;;		None
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5252 ;;Total ram usage:        0 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:    6
  5255 ;; This function calls:
  5256 ;;		Nothing
  5257 ;; This function is called by:
  5258 ;;		_GLCD_ReadStatus
  5259 ;;		_GLCD_WriteCommand
  5260 ;;		_GLCD_ReadData
  5261 ;;		_GLCD_WriteData
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text36
  5266  000E9C                     __ptext36:
  5267                           	opt stack 0
  5268  000E9C                     _GLCD_Delay:
  5269                           	opt stack 19
  5270                           
  5271                           ;KS0108-PIC18.c: 26: __nop();
  5272                           
  5273                           ;incstack = 0
  5274  000E9C  F000               	nop	
  5275  000E9E  0012               	return		;funcret
  5276  000EA0                     __end_of_GLCD_Delay:
  5277                           	opt stack 0
  5278                           tblptru	equ	0xFF8
  5279                           tblptrh	equ	0xFF7
  5280                           tblptrl	equ	0xFF6
  5281                           tablat	equ	0xFF5
  5282                           prodh	equ	0xFF4
  5283                           prodl	equ	0xFF3
  5284                           intcon	equ	0xFF2
  5285                           postinc0	equ	0xFEE
  5286                           wreg	equ	0xFE8
  5287                           postdec1	equ	0xFE5
  5288                           fsr1l	equ	0xFE1
  5289                           status	equ	0xFD8
  5290                           
  5291 ;; *************** function _INTERRUPT_InterruptManager *****************
  5292 ;; Defined at:
  5293 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;		None
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5310 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5311 ;;Total ram usage:       18 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    5
  5314 ;; This function calls:
  5315 ;;		_PIN_MANAGER_IOC
  5316 ;;		_TMR0_ISR
  5317 ;; This function is called by:
  5318 ;;		Interrupt level 2
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	intcode
  5323  000008                     __pintcode:
  5324                           	opt stack 0
  5325  000008                     _INTERRUPT_InterruptManager:
  5326                           	opt stack 17
  5327                           
  5328                           ;incstack = 0
  5329  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5330  00000A  CFFA F013          	movff	pclath,??_INTERRUPT_InterruptManager
  5331  00000E  CFFB F014          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5332  000012  CFE9 F015          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  5333  000016  CFEA F016          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  5334  00001A  CFE1 F017          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  5335  00001E  CFE2 F018          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  5336  000022  CFD9 F019          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  5337  000026  CFDA F01A          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  5338  00002A  CFF3 F01B          	movff	prodl,??_INTERRUPT_InterruptManager+8
  5339  00002E  CFF4 F01C          	movff	prodh,??_INTERRUPT_InterruptManager+9
  5340  000032  CFF6 F01D          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  5341  000036  CFF7 F01E          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  5342  00003A  CFF8 F01F          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  5343  00003E  CFF5 F020          	movff	tablat,??_INTERRUPT_InterruptManager+13
  5344  000042  C03B  F021         	movff	btemp,??_INTERRUPT_InterruptManager+14
  5345  000046  C03C  F022         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  5346  00004A  C03D  F023         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  5347  00004E  C03E  F024         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  5348                           
  5349                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  5350  000052  BAF2               	btfsc	intcon,5,c	;volatile
  5351  000054  A4F2               	btfss	intcon,2,c	;volatile
  5352  000056  D003               	goto	i2l157
  5353                           
  5354                           ;interrupt_manager.c: 61: {
  5355                           ;interrupt_manager.c: 62: TMR0_ISR();
  5356  000058  EC76  F006         	call	_TMR0_ISR	;wreg free
  5357                           
  5358                           ;interrupt_manager.c: 63: }
  5359  00005C  D005               	goto	i2l159
  5360  00005E                     i2l157:
  5361                           
  5362                           ;interrupt_manager.c: 64: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  5363  00005E  B6F2               	btfsc	intcon,3,c	;volatile
  5364  000060  A0F2               	btfss	intcon,0,c	;volatile
  5365  000062  D002               	goto	i2l159
  5366                           
  5367                           ;interrupt_manager.c: 65: {
  5368                           ;interrupt_manager.c: 66: PIN_MANAGER_IOC();
  5369  000064  EC22  F003         	call	_PIN_MANAGER_IOC	;wreg free
  5370  000068                     i2l159:
  5371                           
  5372                           ;interrupt_manager.c: 68: else
  5373                           ;interrupt_manager.c: 69: {
  5374  000068  C024  F03E         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  5375  00006C  C023  F03D         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  5376  000070  C022  F03C         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  5377  000074  C021  F03B         	movff	??_INTERRUPT_InterruptManager+14,btemp
  5378  000078  C020  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  5379  00007C  C01F  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  5380  000080  C01E  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  5381  000084  C01D  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  5382  000088  C01C  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  5383  00008C  C01B  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  5384  000090  C01A  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  5385  000094  C019  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  5386  000098  C018  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  5387  00009C  C017  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  5388  0000A0  C016  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  5389  0000A4  C015  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  5390  0000A8  C014  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5391  0000AC  C013  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5392  0000B0  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5393  0000B2  0011               	retfie		f
  5394  0000B4                     __end_of_INTERRUPT_InterruptManager:
  5395                           	opt stack 0
  5396                           pclatu	equ	0xFFB
  5397                           pclath	equ	0xFFA
  5398                           tblptru	equ	0xFF8
  5399                           tblptrh	equ	0xFF7
  5400                           tblptrl	equ	0xFF6
  5401                           tablat	equ	0xFF5
  5402                           prodh	equ	0xFF4
  5403                           prodl	equ	0xFF3
  5404                           intcon	equ	0xFF2
  5405                           postinc0	equ	0xFEE
  5406                           fsr0h	equ	0xFEA
  5407                           fsr0l	equ	0xFE9
  5408                           wreg	equ	0xFE8
  5409                           postdec1	equ	0xFE5
  5410                           fsr1h	equ	0xFE2
  5411                           fsr1l	equ	0xFE1
  5412                           fsr2h	equ	0xFDA
  5413                           fsr2l	equ	0xFD9
  5414                           status	equ	0xFD8
  5415                           
  5416 ;; *************** function _TMR0_ISR *****************
  5417 ;; Defined at:
  5418 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;		None
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;		None
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  1    wreg      void 
  5425 ;; Registers used:
  5426 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5436 ;;Total ram usage:        0 bytes
  5437 ;; Hardware stack levels used:    1
  5438 ;; Hardware stack levels required when called:    1
  5439 ;; This function calls:
  5440 ;;		Absolute function
  5441 ;;		_TMR0_DefaultInterruptHandler
  5442 ;; This function is called by:
  5443 ;;		_INTERRUPT_InterruptManager
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text38
  5448  000CEC                     __ptext38:
  5449                           	opt stack 0
  5450  000CEC                     _TMR0_ISR:
  5451                           	opt stack 20
  5452                           
  5453                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
  5454                           
  5455                           ;incstack = 0
  5456  000CEC  94F2               	bcf	intcon,2,c	;volatile
  5457                           
  5458                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
  5459  000CEE  5028               	movf	_timer0ReloadVal+1,w,c	;volatile
  5460  000CF0  6ED7               	movwf	4055,c	;volatile
  5461                           
  5462                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
  5463  000CF2  C027  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5464                           
  5465                           ;tmr0.c: 145: if(TMR0_InterruptHandler)
  5466  000CF6  5029               	movf	_TMR0_InterruptHandler,w,c
  5467  000CF8  102A               	iorwf	_TMR0_InterruptHandler+1,w,c
  5468  000CFA  B4D8               	btfsc	status,2,c
  5469  000CFC  0012               	return	
  5470                           
  5471                           ;tmr0.c: 146: {
  5472                           ;tmr0.c: 147: TMR0_InterruptHandler();
  5473  000CFE  D801               	call	i2u51_48
  5474  000D00  0012               	return	
  5475  000D02                     i2u51_48:
  5476  000D02  0005               	push	
  5477  000D04  6EFA               	movwf	pclath,c
  5478  000D06  5029               	movf	_TMR0_InterruptHandler,w,c
  5479  000D08  6EFD               	movwf	tosl,c
  5480  000D0A  502A               	movf	_TMR0_InterruptHandler+1,w,c
  5481  000D0C  6EFE               	movwf	tosh,c
  5482  000D0E  6AFF               	clrf	tosu,c
  5483  000D10  50FA               	movf	pclath,w,c
  5484  000D12  0012               	return		;indir
  5485  000D14                     __end_of_TMR0_ISR:
  5486                           	opt stack 0
  5487                           tosu	equ	0xFFF
  5488                           tosh	equ	0xFFE
  5489                           tosl	equ	0xFFD
  5490                           pclatu	equ	0xFFB
  5491                           pclath	equ	0xFFA
  5492                           tblptru	equ	0xFF8
  5493                           tblptrh	equ	0xFF7
  5494                           tblptrl	equ	0xFF6
  5495                           tablat	equ	0xFF5
  5496                           prodh	equ	0xFF4
  5497                           prodl	equ	0xFF3
  5498                           intcon	equ	0xFF2
  5499                           postinc0	equ	0xFEE
  5500                           fsr0h	equ	0xFEA
  5501                           fsr0l	equ	0xFE9
  5502                           wreg	equ	0xFE8
  5503                           postdec1	equ	0xFE5
  5504                           fsr1h	equ	0xFE2
  5505                           fsr1l	equ	0xFE1
  5506                           fsr2h	equ	0xFDA
  5507                           fsr2l	equ	0xFD9
  5508                           status	equ	0xFD8
  5509                           
  5510 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5511 ;; Defined at:
  5512 ;;		line 158 in file "mcc_generated_files/tmr0.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;		None
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;		None
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  1    wreg      void 
  5519 ;; Registers used:
  5520 ;;		None
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5530 ;;Total ram usage:        0 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_TMR0_Initialize
  5536 ;;		_TMR0_ISR
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           	psect	text39
  5541  000EA4                     __ptext39:
  5542                           	opt stack 0
  5543  000EA4                     _TMR0_DefaultInterruptHandler:
  5544                           	opt stack 20
  5545                           
  5546                           ;incstack = 0
  5547  000EA4  0012               	return		;funcret
  5548  000EA6                     __end_of_TMR0_DefaultInterruptHandler:
  5549                           	opt stack 0
  5550                           tosu	equ	0xFFF
  5551                           tosh	equ	0xFFE
  5552                           tosl	equ	0xFFD
  5553                           pclatu	equ	0xFFB
  5554                           pclath	equ	0xFFA
  5555                           tblptru	equ	0xFF8
  5556                           tblptrh	equ	0xFF7
  5557                           tblptrl	equ	0xFF6
  5558                           tablat	equ	0xFF5
  5559                           prodh	equ	0xFF4
  5560                           prodl	equ	0xFF3
  5561                           intcon	equ	0xFF2
  5562                           postinc0	equ	0xFEE
  5563                           fsr0h	equ	0xFEA
  5564                           fsr0l	equ	0xFE9
  5565                           wreg	equ	0xFE8
  5566                           postdec1	equ	0xFE5
  5567                           fsr1h	equ	0xFE2
  5568                           fsr1l	equ	0xFE1
  5569                           fsr2h	equ	0xFDA
  5570                           fsr2l	equ	0xFD9
  5571                           status	equ	0xFD8
  5572                           
  5573 ;; *************** function _PIN_MANAGER_IOC *****************
  5574 ;; Defined at:
  5575 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;		None
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;  currentState    1   17[COMRAM] unsigned char 
  5580 ;;  result          1   16[COMRAM] unsigned char 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5593 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5594 ;;Total ram usage:        4 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; Hardware stack levels required when called:    4
  5597 ;; This function calls:
  5598 ;;		i2_GLCD_GoTo
  5599 ;;		i2_GLCD_WriteChar
  5600 ;; This function is called by:
  5601 ;;		_INTERRUPT_InterruptManager
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           	psect	text40
  5606  000644                     __ptext40:
  5607                           	opt stack 0
  5608  000644                     _PIN_MANAGER_IOC:
  5609                           	opt stack 17
  5610                           
  5611                           ;pin_manager.c: 138: static unsigned char previousState;
  5612                           ;pin_manager.c: 139: unsigned char currentState;
  5613                           ;pin_manager.c: 140: unsigned char result;
  5614                           ;pin_manager.c: 142: _delay((unsigned long)((2)*(8000000/4000.0)));
  5615                           
  5616                           ;incstack = 0
  5617  000644  0E06               	movlw	6
  5618  000646  6E0F               	movwf	??_PIN_MANAGER_IOC& (0+255),c
  5619  000648  0E30               	movlw	48
  5620  00064A                     i2u200_47:
  5621  00064A  2EE8               	decfsz	wreg,f,c
  5622  00064C  D7FE               	bra	i2u200_47
  5623  00064E  2E0F               	decfsz	??_PIN_MANAGER_IOC& (0+255),f,c
  5624  000650  D7FC               	bra	i2u200_47
  5625  000652  D000               	nop2	
  5626                           
  5627                           ;pin_manager.c: 144: currentState = (PORTBbits.RB5 << 1) | PORTBbits.RB4;
  5628  000654  A881               	btfss	3969,4,c	;volatile
  5629  000656  D003               	goto	i2u130_40
  5630  000658  6A0F               	clrf	??_PIN_MANAGER_IOC& (0+255),c
  5631  00065A  2A0F               	incf	??_PIN_MANAGER_IOC& (0+255),f,c
  5632  00065C  D001               	goto	i2u130_48
  5633  00065E                     i2u130_40:
  5634  00065E  6A0F               	clrf	??_PIN_MANAGER_IOC& (0+255),c
  5635  000660                     i2u130_48:
  5636  000660  AA81               	btfss	3969,5,c	;volatile
  5637  000662  D003               	goto	i2u131_40
  5638  000664  6A10               	clrf	(??_PIN_MANAGER_IOC+1)& (0+255),c
  5639  000666  2A10               	incf	(??_PIN_MANAGER_IOC+1)& (0+255),f,c
  5640  000668  D001               	goto	i2u131_48
  5641  00066A                     i2u131_40:
  5642  00066A  6A10               	clrf	(??_PIN_MANAGER_IOC+1)& (0+255),c
  5643  00066C                     i2u131_48:
  5644  00066C  90D8               	bcf	status,0,c
  5645  00066E  3410               	rlcf	??_PIN_MANAGER_IOC+1,w,c
  5646  000670  100F               	iorwf	??_PIN_MANAGER_IOC,w,c
  5647  000672  6E12               	movwf	PIN_MANAGER_IOC@currentState,c
  5648                           
  5649                           ;pin_manager.c: 146: GLCD_GoTo(65,3);
  5650  000674  0E03               	movlw	3
  5651  000676  6E0C               	movwf	i2GLCD_GoTo@y,c
  5652  000678  0E41               	movlw	65
  5653  00067A  EC5F  F003         	call	i2_GLCD_GoTo
  5654                           
  5655                           ;pin_manager.c: 148: GLCD_WriteChar((PORTBbits.RB5 + 48));
  5656  00067E  AA81               	btfss	3969,5,c	;volatile
  5657  000680  D002               	goto	i2u132_40
  5658  000682  0E01               	movlw	1
  5659  000684  D001               	goto	i2u132_46
  5660  000686                     i2u132_40:
  5661  000686  0E00               	movlw	0
  5662  000688                     i2u132_46:
  5663  000688  0F30               	addlw	48
  5664  00068A  EC5B  F005         	call	i2_GLCD_WriteChar
  5665                           
  5666                           ;pin_manager.c: 149: GLCD_WriteChar((PORTBbits.RB4 + 48));
  5667  00068E  A881               	btfss	3969,4,c	;volatile
  5668  000690  D002               	goto	i2u133_40
  5669  000692  0E01               	movlw	1
  5670  000694  D001               	goto	i2u133_46
  5671  000696                     i2u133_40:
  5672  000696  0E00               	movlw	0
  5673  000698                     i2u133_46:
  5674  000698  0F30               	addlw	48
  5675  00069A  EC5B  F005         	call	i2_GLCD_WriteChar
  5676                           
  5677                           ;pin_manager.c: 153: result = (previousState & 0x01) ^ ((currentState >> 1) & 0x01);
  5678  00069E  C012  F00F         	movff	PIN_MANAGER_IOC@currentState,??_PIN_MANAGER_IOC
  5679  0006A2  90D8               	bcf	status,0,c
  5680  0006A4  320F               	rrcf	??_PIN_MANAGER_IOC,f,c
  5681  0006A6  0E01               	movlw	1
  5682  0006A8  160F               	andwf	??_PIN_MANAGER_IOC,f,c
  5683  0006AA  5031               	movf	PIN_MANAGER_IOC@previousState,w,c
  5684  0006AC  0B01               	andlw	1
  5685  0006AE  180F               	xorwf	??_PIN_MANAGER_IOC,w,c
  5686  0006B0  6E11               	movwf	PIN_MANAGER_IOC@result,c
  5687                           
  5688                           ;pin_manager.c: 175: previousState = currentState;
  5689  0006B2  C012  F031         	movff	PIN_MANAGER_IOC@currentState,PIN_MANAGER_IOC@previousState
  5690                           
  5691                           ;pin_manager.c: 179: PORTB = PORTB;
  5692  0006B6  CF81 FF81          	movff	3969,3969	;volatile
  5693                           
  5694                           ;pin_manager.c: 181: INTCONbits.RBIF = 0;
  5695  0006BA  90F2               	bcf	intcon,0,c	;volatile
  5696  0006BC  0012               	return		;funcret
  5697  0006BE                     __end_of_PIN_MANAGER_IOC:
  5698                           	opt stack 0
  5699                           tosu	equ	0xFFF
  5700                           tosh	equ	0xFFE
  5701                           tosl	equ	0xFFD
  5702                           pclatu	equ	0xFFB
  5703                           pclath	equ	0xFFA
  5704                           tblptru	equ	0xFF8
  5705                           tblptrh	equ	0xFF7
  5706                           tblptrl	equ	0xFF6
  5707                           tablat	equ	0xFF5
  5708                           prodh	equ	0xFF4
  5709                           prodl	equ	0xFF3
  5710                           intcon	equ	0xFF2
  5711                           postinc0	equ	0xFEE
  5712                           fsr0h	equ	0xFEA
  5713                           fsr0l	equ	0xFE9
  5714                           wreg	equ	0xFE8
  5715                           postdec1	equ	0xFE5
  5716                           fsr1h	equ	0xFE2
  5717                           fsr1l	equ	0xFE1
  5718                           fsr2h	equ	0xFDA
  5719                           fsr2l	equ	0xFD9
  5720                           status	equ	0xFD8
  5721                           
  5722 ;; *************** function i2_GLCD_WriteChar *****************
  5723 ;; Defined at:
  5724 ;;		line 56 in file "ks0108lib/KS0108.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  charToWrite     1    wreg     unsigned char 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  charToWrite     1   10[COMRAM] unsigned char 
  5729 ;;  GLCD_WriteCh    2   11[COMRAM] int 
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1    wreg      void 
  5732 ;; Registers used:
  5733 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5740 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5743 ;;Total ram usage:        3 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:    3
  5746 ;; This function calls:
  5747 ;;		i2_GLCD_WriteData
  5748 ;; This function is called by:
  5749 ;;		_PIN_MANAGER_IOC
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753                           	psect	text41
  5754  000AB6                     __ptext41:
  5755                           	opt stack 0
  5756  000AB6                     i2_GLCD_WriteChar:
  5757                           	opt stack 17
  5758                           
  5759                           ;incstack = 0
  5760                           ;i2GLCD_WriteChar@charToWrite stored from wreg
  5761  000AB6  6E0B               	movwf	i2GLCD_WriteChar@charToWrite,c
  5762                           
  5763                           ;KS0108.c: 58: int i;
  5764                           ;KS0108.c: 59: charToWrite -= 32;
  5765  000AB8  0E20               	movlw	32
  5766  000ABA  5E0B               	subwf	i2GLCD_WriteChar@charToWrite,f,c
  5767                           
  5768                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
  5769  000ABC  0E00               	movlw	0
  5770  000ABE  6E0D               	movwf	i2GLCD_WriteChar@i+1,c
  5771  000AC0  0E00               	movlw	0
  5772  000AC2  6E0C               	movwf	i2GLCD_WriteChar@i,c
  5773  000AC4                     i2l2809:
  5774  000AC4  BE0D               	btfsc	i2GLCD_WriteChar@i+1,7,c
  5775  000AC6  D006               	goto	i2l457
  5776  000AC8  500D               	movf	i2GLCD_WriteChar@i+1,w,c
  5777  000ACA  E11A               	bnz	i2l2819
  5778  000ACC  0E05               	movlw	5
  5779  000ACE  5C0C               	subwf	i2GLCD_WriteChar@i,w,c
  5780  000AD0  B0D8               	btfsc	status,0,c
  5781  000AD2  D016               	goto	i2u129_40
  5782  000AD4                     i2l457:
  5783                           
  5784                           ;KS0108.c: 61: {
  5785                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
  5786  000AD4  500B               	movf	i2GLCD_WriteChar@charToWrite,w,c
  5787  000AD6  0D05               	mullw	5
  5788  000AD8  500C               	movf	i2GLCD_WriteChar@i,w,c
  5789  000ADA  26F3               	addwf	prodl,f,c
  5790  000ADC  500D               	movf	i2GLCD_WriteChar@i+1,w,c
  5791  000ADE  22F4               	addwfc	prodh,f,c
  5792  000AE0  0EB1               	movlw	low _font5x8
  5793  000AE2  24F3               	addwf	prodl,w,c
  5794  000AE4  6EF6               	movwf	tblptrl,c
  5795  000AE6  0EFD               	movlw	high _font5x8
  5796  000AE8  20F4               	addwfc	prodh,w,c
  5797  000AEA  6EF7               	movwf	tblptrh,c
  5798  000AEC                     	if	1	;There are 3 active tblptr bytes
  5799  000AEC  6AF8               	clrf	tblptru,c
  5800  000AEE  0E00               	movlw	low (__mediumconst shr (0+16))
  5801  000AF0  22F8               	addwfc	tblptru,f,c
  5802  000AF2                     	endif
  5803  000AF2  0008               	tblrd		*
  5804  000AF4  50F5               	movf	tablat,w,c
  5805  000AF6  EC4C  F004         	call	i2_GLCD_WriteData
  5806  000AFA  4A0C               	infsnz	i2GLCD_WriteChar@i,f,c
  5807  000AFC  2A0D               	incf	i2GLCD_WriteChar@i+1,f,c
  5808  000AFE  D7E2               	goto	i2l2809
  5809  000B00                     i2u129_40:
  5810  000B00                     i2l2819:
  5811                           
  5812                           ;KS0108.c: 64: }
  5813                           ;KS0108.c: 65: GLCD_WriteData(0x00);
  5814  000B00  0E00               	movlw	0
  5815  000B02  EC4C  F004         	call	i2_GLCD_WriteData
  5816  000B06  0012               	return		;funcret
  5817  000B08                     __end_ofi2_GLCD_WriteChar:
  5818                           	opt stack 0
  5819                           tosu	equ	0xFFF
  5820                           tosh	equ	0xFFE
  5821                           tosl	equ	0xFFD
  5822                           pclatu	equ	0xFFB
  5823                           pclath	equ	0xFFA
  5824                           tblptru	equ	0xFF8
  5825                           tblptrh	equ	0xFF7
  5826                           tblptrl	equ	0xFF6
  5827                           tablat	equ	0xFF5
  5828                           prodh	equ	0xFF4
  5829                           prodl	equ	0xFF3
  5830                           intcon	equ	0xFF2
  5831                           postinc0	equ	0xFEE
  5832                           fsr0h	equ	0xFEA
  5833                           fsr0l	equ	0xFE9
  5834                           wreg	equ	0xFE8
  5835                           postdec1	equ	0xFE5
  5836                           fsr1h	equ	0xFE2
  5837                           fsr1l	equ	0xFE1
  5838                           fsr2h	equ	0xFDA
  5839                           fsr2l	equ	0xFD9
  5840                           status	equ	0xFD8
  5841                           
  5842 ;; *************** function i2_GLCD_WriteData *****************
  5843 ;; Defined at:
  5844 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  dataToWrite     1    wreg     unsigned char 
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;  dataToWrite     1    9[COMRAM] unsigned char 
  5849 ;; Return value:  Size  Location     Type
  5850 ;;                  1    wreg      void 
  5851 ;; Registers used:
  5852 ;;		wreg, status,2, status,0, cstack
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5862 ;;Total ram usage:        2 bytes
  5863 ;; Hardware stack levels used:    1
  5864 ;; Hardware stack levels required when called:    2
  5865 ;; This function calls:
  5866 ;;		i2_GLCD_Delay
  5867 ;;		i2_GLCD_DisableController
  5868 ;;		i2_GLCD_EnableController
  5869 ;;		i2_GLCD_ReadStatus
  5870 ;;		i2___awdiv
  5871 ;; This function is called by:
  5872 ;;		i2_GLCD_WriteChar
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           	psect	text42
  5877  000898                     __ptext42:
  5878                           	opt stack 0
  5879  000898                     i2_GLCD_WriteData:
  5880                           	opt stack 17
  5881                           
  5882                           ;incstack = 0
  5883                           ;i2GLCD_WriteData@dataToWrite stored from wreg
  5884  000898  6E0A               	movwf	i2GLCD_WriteData@dataToWrite,c
  5885  00089A                     
  5886                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  5887  00089A  C030  F001         	movff	_screen_x,i2___awdiv@dividend
  5888  00089E  6A02               	clrf	i2___awdiv@dividend+1,c
  5889  0008A0  0E00               	movlw	0
  5890  0008A2  6E04               	movwf	i2___awdiv@divisor+1,c
  5891  0008A4  0E40               	movlw	64
  5892  0008A6  6E03               	movwf	i2___awdiv@divisor,c
  5893  0008A8  ECA3  F002         	call	i2___awdiv	;wreg free
  5894  0008AC  5001               	movf	?i2___awdiv,w,c
  5895  0008AE  ECD6  F006         	call	i2_GLCD_ReadStatus
  5896  0008B2  6E09               	movwf	??i2_GLCD_WriteData& (0+255),c
  5897  0008B4  BE09               	btfsc	??i2_GLCD_WriteData,7,c
  5898  0008B6  D7F1               	goto	i2l2661
  5899                           
  5900                           ;KS0108-PIC18.c: 116: TRISC = 0x00;
  5901  0008B8  0E00               	movlw	0
  5902  0008BA  6E94               	movwf	3988,c	;volatile
  5903                           
  5904                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
  5905  0008BC  9280               	bcf	3968,1,c	;volatile
  5906                           
  5907                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
  5908  0008BE  8480               	bsf	3968,2,c	;volatile
  5909                           
  5910                           ;KS0108-PIC18.c: 119: PORTC = dataToWrite;
  5911  0008C0  C00A  FF82         	movff	i2GLCD_WriteData@dataToWrite,3970	;volatile
  5912                           
  5913                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
  5914  0008C4  C030  F001         	movff	_screen_x,i2___awdiv@dividend
  5915  0008C8  6A02               	clrf	i2___awdiv@dividend+1,c
  5916  0008CA  0E00               	movlw	0
  5917  0008CC  6E04               	movwf	i2___awdiv@divisor+1,c
  5918  0008CE  0E40               	movlw	64
  5919  0008D0  6E03               	movwf	i2___awdiv@divisor,c
  5920  0008D2  ECA3  F002         	call	i2___awdiv	;wreg free
  5921  0008D6  5001               	movf	?i2___awdiv,w,c
  5922  0008D8  ECB0  F006         	call	i2_GLCD_EnableController
  5923                           
  5924                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
  5925  0008DC  8680               	bsf	3968,3,c	;volatile
  5926                           
  5927                           ;KS0108-PIC18.c: 122: GLCD_Delay();
  5928  0008DE  EC50  F007         	call	i2_GLCD_Delay	;wreg free
  5929                           
  5930                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
  5931  0008E2  9680               	bcf	3968,3,c	;volatile
  5932                           
  5933                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
  5934  0008E4  C030  F001         	movff	_screen_x,i2___awdiv@dividend
  5935  0008E8  6A02               	clrf	i2___awdiv@dividend+1,c
  5936  0008EA  0E00               	movlw	0
  5937  0008EC  6E04               	movwf	i2___awdiv@divisor+1,c
  5938  0008EE  0E40               	movlw	64
  5939  0008F0  6E03               	movwf	i2___awdiv@divisor,c
  5940  0008F2  ECA3  F002         	call	i2___awdiv	;wreg free
  5941  0008F6  5001               	movf	?i2___awdiv,w,c
  5942  0008F8  ECC3  F006         	call	i2_GLCD_DisableController
  5943                           
  5944                           ;KS0108-PIC18.c: 125: screen_x++;
  5945  0008FC  2A30               	incf	_screen_x,f,c
  5946  0008FE  0012               	return		;funcret
  5947  000900                     __end_ofi2_GLCD_WriteData:
  5948                           	opt stack 0
  5949                           tosu	equ	0xFFF
  5950                           tosh	equ	0xFFE
  5951                           tosl	equ	0xFFD
  5952                           pclatu	equ	0xFFB
  5953                           pclath	equ	0xFFA
  5954                           tblptru	equ	0xFF8
  5955                           tblptrh	equ	0xFF7
  5956                           tblptrl	equ	0xFF6
  5957                           tablat	equ	0xFF5
  5958                           prodh	equ	0xFF4
  5959                           prodl	equ	0xFF3
  5960                           intcon	equ	0xFF2
  5961                           postinc0	equ	0xFEE
  5962                           fsr0h	equ	0xFEA
  5963                           fsr0l	equ	0xFE9
  5964                           wreg	equ	0xFE8
  5965                           postdec1	equ	0xFE5
  5966                           fsr1h	equ	0xFE2
  5967                           fsr1l	equ	0xFE1
  5968                           fsr2h	equ	0xFDA
  5969                           fsr2l	equ	0xFD9
  5970                           status	equ	0xFD8
  5971                           
  5972 ;; *************** function i2_GLCD_GoTo *****************
  5973 ;; Defined at:
  5974 ;;		line 25 in file "ks0108lib/KS0108.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  x               1    wreg     unsigned char 
  5977 ;;  y               1   11[COMRAM] unsigned char 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  x               1   12[COMRAM] unsigned char 
  5980 ;;  GLCD_GoTo       1   13[COMRAM] unsigned char 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  1    wreg      void 
  5983 ;; Registers used:
  5984 ;;		wreg, status,2, status,0, cstack
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5990 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5993 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5994 ;;Total ram usage:        3 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:    3
  5997 ;; This function calls:
  5998 ;;		i2_GLCD_WriteCommand
  5999 ;;		i2___awdiv
  6000 ;; This function is called by:
  6001 ;;		_PIN_MANAGER_IOC
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text43
  6006  0006BE                     __ptext43:
  6007                           	opt stack 0
  6008  0006BE                     i2_GLCD_GoTo:
  6009                           	opt stack 17
  6010                           
  6011                           ;incstack = 0
  6012                           ;i2GLCD_GoTo@x stored from wreg
  6013  0006BE  6E0D               	movwf	i2GLCD_GoTo@x,c
  6014                           
  6015                           ;KS0108.c: 27: unsigned char i;
  6016                           ;KS0108.c: 28: screen_x = x;
  6017  0006C0  C00D  F030         	movff	i2GLCD_GoTo@x,_screen_x
  6018                           
  6019                           ;KS0108.c: 29: screen_y = y;
  6020  0006C4  C00C  F02F         	movff	i2GLCD_GoTo@y,_screen_y
  6021                           
  6022                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
  6023  0006C8  0E00               	movlw	0
  6024  0006CA  6E0E               	movwf	i2GLCD_GoTo@i,c
  6025  0006CC                     i2l2793:
  6026  0006CC  0E01               	movlw	1
  6027  0006CE  640E               	cpfsgt	i2GLCD_GoTo@i,c
  6028  0006D0  D001               	goto	i2l445
  6029  0006D2  D012               	goto	i2u127_40
  6030  0006D4                     i2l445:
  6031                           
  6032                           ;KS0108.c: 32: {
  6033                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
  6034  0006D4  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  6035  0006D8  0E40               	movlw	64
  6036  0006DA  EC48  F006         	call	i2_GLCD_WriteCommand
  6037                           
  6038                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
  6039  0006DE  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  6040  0006E2  500C               	movf	i2GLCD_GoTo@y,w,c
  6041  0006E4  09B8               	iorlw	184
  6042  0006E6  EC48  F006         	call	i2_GLCD_WriteCommand
  6043                           
  6044                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
  6045  0006EA  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  6046  0006EE  0EC0               	movlw	192
  6047  0006F0  EC48  F006         	call	i2_GLCD_WriteCommand
  6048  0006F4  2A0E               	incf	i2GLCD_GoTo@i,f,c
  6049  0006F6  D7EA               	goto	i2l2793
  6050  0006F8                     i2u127_40:
  6051                           
  6052                           ;KS0108.c: 36: }
  6053                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
  6054  0006F8  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
  6055  0006FC  6A02               	clrf	i2___awdiv@dividend+1,c
  6056  0006FE  0E00               	movlw	0
  6057  000700  6E04               	movwf	i2___awdiv@divisor+1,c
  6058  000702  0E40               	movlw	64
  6059  000704  6E03               	movwf	i2___awdiv@divisor,c
  6060  000706  ECA3  F002         	call	i2___awdiv	;wreg free
  6061  00070A  5001               	movf	?i2___awdiv,w,c
  6062  00070C  6E09               	movwf	i2GLCD_WriteCommand@controller,c
  6063  00070E  500D               	movf	i2GLCD_GoTo@x,w,c
  6064  000710  0B3F               	andlw	63
  6065  000712  0940               	iorlw	64
  6066  000714  EC48  F006         	call	i2_GLCD_WriteCommand
  6067                           
  6068                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
  6069  000718  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
  6070  00071C  6A02               	clrf	i2___awdiv@dividend+1,c
  6071  00071E  0E00               	movlw	0
  6072  000720  6E04               	movwf	i2___awdiv@divisor+1,c
  6073  000722  0E40               	movlw	64
  6074  000724  6E03               	movwf	i2___awdiv@divisor,c
  6075  000726  ECA3  F002         	call	i2___awdiv	;wreg free
  6076  00072A  5001               	movf	?i2___awdiv,w,c
  6077  00072C  6E09               	movwf	i2GLCD_WriteCommand@controller,c
  6078  00072E  500C               	movf	i2GLCD_GoTo@y,w,c
  6079  000730  09B8               	iorlw	184
  6080  000732  EC48  F006         	call	i2_GLCD_WriteCommand
  6081  000736  0012               	return		;funcret
  6082  000738                     __end_ofi2_GLCD_GoTo:
  6083                           	opt stack 0
  6084                           tosu	equ	0xFFF
  6085                           tosh	equ	0xFFE
  6086                           tosl	equ	0xFFD
  6087                           pclatu	equ	0xFFB
  6088                           pclath	equ	0xFFA
  6089                           tblptru	equ	0xFF8
  6090                           tblptrh	equ	0xFF7
  6091                           tblptrl	equ	0xFF6
  6092                           tablat	equ	0xFF5
  6093                           prodh	equ	0xFF4
  6094                           prodl	equ	0xFF3
  6095                           intcon	equ	0xFF2
  6096                           postinc0	equ	0xFEE
  6097                           fsr0h	equ	0xFEA
  6098                           fsr0l	equ	0xFE9
  6099                           wreg	equ	0xFE8
  6100                           postdec1	equ	0xFE5
  6101                           fsr1h	equ	0xFE2
  6102                           fsr1l	equ	0xFE1
  6103                           fsr2h	equ	0xFDA
  6104                           fsr2l	equ	0xFD9
  6105                           status	equ	0xFD8
  6106                           
  6107 ;; *************** function i2___awdiv *****************
  6108 ;; Defined at:
  6109 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  dividend        2    0[COMRAM] int 
  6112 ;;  divisor         2    2[COMRAM] int 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  __awdiv         2    6[COMRAM] int 
  6115 ;;  __awdiv         1    5[COMRAM] unsigned char 
  6116 ;;  __awdiv         1    4[COMRAM] unsigned char 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  2    0[COMRAM] int 
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6127 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6129 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6130 ;;Total ram usage:        8 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; This function calls:
  6133 ;;		Nothing
  6134 ;; This function is called by:
  6135 ;;		i2_GLCD_GoTo
  6136 ;;		i2_GLCD_WriteData
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text44
  6141  000546                     __ptext44:
  6142                           	opt stack 0
  6143  000546                     i2___awdiv:
  6144                           	opt stack 18
  6145                           
  6146                           ;incstack = 0
  6147  000546  0E00               	movlw	0
  6148  000548  6E06               	movwf	i2___awdiv@sign,c
  6149  00054A  AE04               	btfss	i2___awdiv@divisor+1,7,c
  6150  00054C  D006               	goto	i2l779
  6151  00054E  6C03               	negf	i2___awdiv@divisor,c
  6152  000550  1E04               	comf	i2___awdiv@divisor+1,f,c
  6153  000552  B0D8               	btfsc	status,0,c
  6154  000554  2A04               	incf	i2___awdiv@divisor+1,f,c
  6155  000556  0E01               	movlw	1
  6156  000558  6E06               	movwf	i2___awdiv@sign,c
  6157  00055A                     i2l779:
  6158  00055A  AE02               	btfss	i2___awdiv@dividend+1,7,c
  6159  00055C  D006               	goto	i2l780
  6160  00055E  6C01               	negf	i2___awdiv@dividend,c
  6161  000560  1E02               	comf	i2___awdiv@dividend+1,f,c
  6162  000562  B0D8               	btfsc	status,0,c
  6163  000564  2A02               	incf	i2___awdiv@dividend+1,f,c
  6164  000566  0E01               	movlw	1
  6165  000568  1A06               	xorwf	i2___awdiv@sign,f,c
  6166  00056A                     i2l780:
  6167  00056A  0E00               	movlw	0
  6168  00056C  6E08               	movwf	i2___awdiv@quotient+1,c
  6169  00056E  0E00               	movlw	0
  6170  000570  6E07               	movwf	i2___awdiv@quotient,c
  6171  000572  5003               	movf	i2___awdiv@divisor,w,c
  6172  000574  1004               	iorwf	i2___awdiv@divisor+1,w,c
  6173  000576  B4D8               	btfsc	status,2,c
  6174  000578  D01C               	goto	i2l787
  6175  00057A  0E01               	movlw	1
  6176  00057C  6E05               	movwf	i2___awdiv@counter,c
  6177  00057E  D004               	goto	i2l782
  6178  000580  90D8               	bcf	status,0,c
  6179  000582  3603               	rlcf	i2___awdiv@divisor,f,c
  6180  000584  3604               	rlcf	i2___awdiv@divisor+1,f,c
  6181  000586  2A05               	incf	i2___awdiv@counter,f,c
  6182  000588                     i2l782:
  6183  000588  AE04               	btfss	i2___awdiv@divisor+1,7,c
  6184  00058A  D7FA               	goto	i2l783
  6185  00058C                     i2u102_40:
  6186  00058C  90D8               	bcf	status,0,c
  6187  00058E  3607               	rlcf	i2___awdiv@quotient,f,c
  6188  000590  3608               	rlcf	i2___awdiv@quotient+1,f,c
  6189  000592  5003               	movf	i2___awdiv@divisor,w,c
  6190  000594  5C01               	subwf	i2___awdiv@dividend,w,c
  6191  000596  5004               	movf	i2___awdiv@divisor+1,w,c
  6192  000598  5802               	subwfb	i2___awdiv@dividend+1,w,c
  6193  00059A  A0D8               	btfss	status,0,c
  6194  00059C  D005               	goto	i2l786
  6195  00059E  5003               	movf	i2___awdiv@divisor,w,c
  6196  0005A0  5E01               	subwf	i2___awdiv@dividend,f,c
  6197  0005A2  5004               	movf	i2___awdiv@divisor+1,w,c
  6198  0005A4  5A02               	subwfb	i2___awdiv@dividend+1,f,c
  6199  0005A6  8007               	bsf	i2___awdiv@quotient,0,c
  6200  0005A8                     i2l786:
  6201  0005A8  90D8               	bcf	status,0,c
  6202  0005AA  3204               	rrcf	i2___awdiv@divisor+1,f,c
  6203  0005AC  3203               	rrcf	i2___awdiv@divisor,f,c
  6204  0005AE  2E05               	decfsz	i2___awdiv@counter,f,c
  6205  0005B0  D7ED               	goto	i2u102_40
  6206  0005B2                     i2l787:
  6207  0005B2  5006               	movf	i2___awdiv@sign,w,c
  6208  0005B4  B4D8               	btfsc	status,2,c
  6209  0005B6  D004               	goto	i2l788
  6210  0005B8  6C07               	negf	i2___awdiv@quotient,c
  6211  0005BA  1E08               	comf	i2___awdiv@quotient+1,f,c
  6212  0005BC  B0D8               	btfsc	status,0,c
  6213  0005BE  2A08               	incf	i2___awdiv@quotient+1,f,c
  6214  0005C0                     i2l788:
  6215  0005C0  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  6216  0005C4  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  6217  0005C8  0012               	return	
  6218  0005CA                     __end_ofi2___awdiv:
  6219                           	opt stack 0
  6220                           tosu	equ	0xFFF
  6221                           tosh	equ	0xFFE
  6222                           tosl	equ	0xFFD
  6223                           pclatu	equ	0xFFB
  6224                           pclath	equ	0xFFA
  6225                           tblptru	equ	0xFF8
  6226                           tblptrh	equ	0xFF7
  6227                           tblptrl	equ	0xFF6
  6228                           tablat	equ	0xFF5
  6229                           prodh	equ	0xFF4
  6230                           prodl	equ	0xFF3
  6231                           intcon	equ	0xFF2
  6232                           postinc0	equ	0xFEE
  6233                           fsr0h	equ	0xFEA
  6234                           fsr0l	equ	0xFE9
  6235                           wreg	equ	0xFE8
  6236                           postdec1	equ	0xFE5
  6237                           fsr1h	equ	0xFE2
  6238                           fsr1l	equ	0xFE1
  6239                           fsr2h	equ	0xFDA
  6240                           fsr2l	equ	0xFD9
  6241                           status	equ	0xFD8
  6242                           
  6243 ;; *************** function i2_GLCD_WriteCommand *****************
  6244 ;; Defined at:
  6245 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;  commandToWri    1    wreg     unsigned char 
  6248 ;;  controller      1    8[COMRAM] unsigned char 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;  commandToWri    1   10[COMRAM] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      void 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0, cstack
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6260 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6262 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6263 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6264 ;;Total ram usage:        3 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; Hardware stack levels required when called:    2
  6267 ;; This function calls:
  6268 ;;		i2_GLCD_Delay
  6269 ;;		i2_GLCD_DisableController
  6270 ;;		i2_GLCD_EnableController
  6271 ;;		i2_GLCD_ReadStatus
  6272 ;; This function is called by:
  6273 ;;		i2_GLCD_GoTo
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text45
  6278  000C90                     __ptext45:
  6279                           	opt stack 0
  6280  000C90                     i2_GLCD_WriteCommand:
  6281                           	opt stack 17
  6282                           
  6283                           ;incstack = 0
  6284                           ;i2GLCD_WriteCommand@commandToWrite stored from wreg
  6285  000C90  6E0B               	movwf	i2GLCD_WriteCommand@commandToWrite,c
  6286  000C92                     
  6287                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
  6288  000C92  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  6289  000C94  ECD6  F006         	call	i2_GLCD_ReadStatus
  6290  000C98  6E0A               	movwf	??i2_GLCD_WriteCommand& (0+255),c
  6291  000C9A  BE0A               	btfsc	??i2_GLCD_WriteCommand,7,c
  6292  000C9C  D7FA               	goto	i2l2641
  6293                           
  6294                           ;KS0108-PIC18.c: 82: TRISC = 0x00;
  6295  000C9E  0E00               	movlw	0
  6296  000CA0  6E94               	movwf	3988,c	;volatile
  6297                           
  6298                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
  6299  000CA2  0EF9               	movlw	249
  6300  000CA4  1680               	andwf	3968,f,c	;volatile
  6301                           
  6302                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
  6303  000CA6  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  6304  000CA8  ECB0  F006         	call	i2_GLCD_EnableController
  6305                           
  6306                           ;KS0108-PIC18.c: 85: PORTC = commandToWrite;
  6307  000CAC  C00B  FF82         	movff	i2GLCD_WriteCommand@commandToWrite,3970	;volatile
  6308                           
  6309                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
  6310  000CB0  8680               	bsf	3968,3,c	;volatile
  6311                           
  6312                           ;KS0108-PIC18.c: 87: GLCD_Delay();
  6313  000CB2  EC50  F007         	call	i2_GLCD_Delay	;wreg free
  6314                           
  6315                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
  6316  000CB6  9680               	bcf	3968,3,c	;volatile
  6317                           
  6318                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
  6319  000CB8  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  6320  000CBA  ECC3  F006         	call	i2_GLCD_DisableController
  6321  000CBE  0012               	return		;funcret
  6322  000CC0                     __end_ofi2_GLCD_WriteCommand:
  6323                           	opt stack 0
  6324                           tosu	equ	0xFFF
  6325                           tosh	equ	0xFFE
  6326                           tosl	equ	0xFFD
  6327                           pclatu	equ	0xFFB
  6328                           pclath	equ	0xFFA
  6329                           tblptru	equ	0xFF8
  6330                           tblptrh	equ	0xFF7
  6331                           tblptrl	equ	0xFF6
  6332                           tablat	equ	0xFF5
  6333                           prodh	equ	0xFF4
  6334                           prodl	equ	0xFF3
  6335                           intcon	equ	0xFF2
  6336                           postinc0	equ	0xFEE
  6337                           fsr0h	equ	0xFEA
  6338                           fsr0l	equ	0xFE9
  6339                           wreg	equ	0xFE8
  6340                           postdec1	equ	0xFE5
  6341                           fsr1h	equ	0xFE2
  6342                           fsr1l	equ	0xFE1
  6343                           fsr2h	equ	0xFDA
  6344                           fsr2l	equ	0xFD9
  6345                           status	equ	0xFD8
  6346                           
  6347 ;; *************** function i2_GLCD_ReadStatus *****************
  6348 ;; Defined at:
  6349 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  controller      1    wreg     unsigned char 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;  controller      1    2[COMRAM] unsigned char 
  6354 ;;  GLCD_ReadSta    1    1[COMRAM] unsigned char 
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      unsigned char 
  6357 ;; Registers used:
  6358 ;;		wreg, status,2, status,0, cstack
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6365 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6368 ;;Total ram usage:        2 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; Hardware stack levels required when called:    1
  6371 ;; This function calls:
  6372 ;;		i2_GLCD_Delay
  6373 ;;		i2_GLCD_DisableController
  6374 ;;		i2_GLCD_EnableController
  6375 ;; This function is called by:
  6376 ;;		i2_GLCD_WriteCommand
  6377 ;;		i2_GLCD_WriteData
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           	psect	text46
  6382  000DAC                     __ptext46:
  6383                           	opt stack 0
  6384  000DAC                     i2_GLCD_ReadStatus:
  6385                           	opt stack 17
  6386                           
  6387                           ;incstack = 0
  6388                           ;i2GLCD_ReadStatus@controller stored from wreg
  6389  000DAC  6E03               	movwf	i2GLCD_ReadStatus@controller,c
  6390                           
  6391                           ;KS0108-PIC18.c: 64: unsigned char status;
  6392                           ;KS0108-PIC18.c: 65: TRISC = 0xFF;
  6393  000DAE  6894               	setf	3988,c	;volatile
  6394                           
  6395                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
  6396  000DB0  8280               	bsf	3968,1,c	;volatile
  6397                           
  6398                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
  6399  000DB2  9480               	bcf	3968,2,c	;volatile
  6400                           
  6401                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
  6402  000DB4  5003               	movf	i2GLCD_ReadStatus@controller,w,c
  6403  000DB6  ECB0  F006         	call	i2_GLCD_EnableController
  6404                           
  6405                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
  6406  000DBA  8680               	bsf	3968,3,c	;volatile
  6407                           
  6408                           ;KS0108-PIC18.c: 70: GLCD_Delay();
  6409  000DBC  EC50  F007         	call	i2_GLCD_Delay	;wreg free
  6410                           
  6411                           ;KS0108-PIC18.c: 71: status = PORTC;
  6412  000DC0  CF82 F002          	movff	3970,i2GLCD_ReadStatus@status	;volatile
  6413                           
  6414                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
  6415  000DC4  9680               	bcf	3968,3,c	;volatile
  6416                           
  6417                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
  6418  000DC6  5003               	movf	i2GLCD_ReadStatus@controller,w,c
  6419  000DC8  ECC3  F006         	call	i2_GLCD_DisableController
  6420                           
  6421                           ;KS0108-PIC18.c: 74: return status;
  6422  000DCC  5002               	movf	i2GLCD_ReadStatus@status,w,c
  6423  000DCE  0012               	return	
  6424  000DD0                     __end_ofi2_GLCD_ReadStatus:
  6425                           	opt stack 0
  6426                           tosu	equ	0xFFF
  6427                           tosh	equ	0xFFE
  6428                           tosl	equ	0xFFD
  6429                           pclatu	equ	0xFFB
  6430                           pclath	equ	0xFFA
  6431                           tblptru	equ	0xFF8
  6432                           tblptrh	equ	0xFF7
  6433                           tblptrl	equ	0xFF6
  6434                           tablat	equ	0xFF5
  6435                           prodh	equ	0xFF4
  6436                           prodl	equ	0xFF3
  6437                           intcon	equ	0xFF2
  6438                           postinc0	equ	0xFEE
  6439                           fsr0h	equ	0xFEA
  6440                           fsr0l	equ	0xFE9
  6441                           wreg	equ	0xFE8
  6442                           postdec1	equ	0xFE5
  6443                           fsr1h	equ	0xFE2
  6444                           fsr1l	equ	0xFE1
  6445                           fsr2h	equ	0xFDA
  6446                           fsr2l	equ	0xFD9
  6447                           status	equ	0xFD8
  6448                           
  6449 ;; *************** function i2_GLCD_EnableController *****************
  6450 ;; Defined at:
  6451 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;  controller      1    wreg     unsigned char 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;  controller      1    0[COMRAM] unsigned char 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  1    wreg      void 
  6458 ;; Registers used:
  6459 ;;		wreg, status,2, status,0
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6469 ;;Total ram usage:        1 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; This function calls:
  6472 ;;		Nothing
  6473 ;; This function is called by:
  6474 ;;		i2_GLCD_ReadStatus
  6475 ;;		i2_GLCD_WriteCommand
  6476 ;;		i2_GLCD_WriteData
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           	psect	text47
  6481  000D60                     __ptext47:
  6482                           	opt stack 0
  6483  000D60                     i2_GLCD_EnableController:
  6484                           	opt stack 17
  6485                           
  6486                           ;incstack = 0
  6487                           ;i2GLCD_EnableController@controller stored from wreg
  6488  000D60  6E01               	movwf	i2GLCD_EnableController@controller,c
  6489                           
  6490                           ;KS0108-PIC18.c: 41: switch(controller){
  6491  000D62  D006               	goto	i2l498
  6492  000D64  9A80               	bcf	3968,5,c	;volatile
  6493  000D66  0012               	return	
  6494  000D68  9C80               	bcf	3968,6,c	;volatile
  6495  000D6A  0012               	return	
  6496  000D6C  9E80               	bcf	3968,7,c	;volatile
  6497                           
  6498                           ;KS0108-PIC18.c: 45: }
  6499  000D6E  0012               	return	
  6500  000D70                     i2l498:
  6501  000D70  5001               	movf	i2GLCD_EnableController@controller,w,c
  6502                           
  6503                           ; Switch size 1, requested type "space"
  6504                           ; Number of cases is 3, Range of values is 0 to 2
  6505                           ; switch strategies available:
  6506                           ; Name         Instructions Cycles
  6507                           ; simple_byte           10     6 (average)
  6508                           ;	Chosen strategy is simple_byte
  6509  000D72  0A00               	xorlw	0	; case 0
  6510  000D74  B4D8               	btfsc	status,2,c
  6511  000D76  D7F6               	goto	i2l499
  6512  000D78  0A01               	xorlw	1	; case 1
  6513  000D7A  B4D8               	btfsc	status,2,c
  6514  000D7C  D7F5               	goto	i2l501
  6515  000D7E  0A03               	xorlw	3	; case 2
  6516  000D80  A4D8               	btfss	status,2,c
  6517  000D82  0012               	return	
  6518  000D84  D7F3               	goto	i2l502
  6519  000D86                     __end_ofi2_GLCD_EnableController:
  6520                           	opt stack 0
  6521                           tosu	equ	0xFFF
  6522                           tosh	equ	0xFFE
  6523                           tosl	equ	0xFFD
  6524                           pclatu	equ	0xFFB
  6525                           pclath	equ	0xFFA
  6526                           tblptru	equ	0xFF8
  6527                           tblptrh	equ	0xFF7
  6528                           tblptrl	equ	0xFF6
  6529                           tablat	equ	0xFF5
  6530                           prodh	equ	0xFF4
  6531                           prodl	equ	0xFF3
  6532                           intcon	equ	0xFF2
  6533                           postinc0	equ	0xFEE
  6534                           fsr0h	equ	0xFEA
  6535                           fsr0l	equ	0xFE9
  6536                           wreg	equ	0xFE8
  6537                           postdec1	equ	0xFE5
  6538                           fsr1h	equ	0xFE2
  6539                           fsr1l	equ	0xFE1
  6540                           fsr2h	equ	0xFDA
  6541                           fsr2l	equ	0xFD9
  6542                           status	equ	0xFD8
  6543                           
  6544 ;; *************** function i2_GLCD_DisableController *****************
  6545 ;; Defined at:
  6546 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  controller      1    wreg     unsigned char 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;  controller      1    0[COMRAM] unsigned char 
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  1    wreg      void 
  6553 ;; Registers used:
  6554 ;;		wreg, status,2, status,0
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6561 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6563 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6564 ;;Total ram usage:        1 bytes
  6565 ;; Hardware stack levels used:    1
  6566 ;; This function calls:
  6567 ;;		Nothing
  6568 ;; This function is called by:
  6569 ;;		i2_GLCD_ReadStatus
  6570 ;;		i2_GLCD_WriteCommand
  6571 ;;		i2_GLCD_WriteData
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575                           	psect	text48
  6576  000D86                     __ptext48:
  6577                           	opt stack 0
  6578  000D86                     i2_GLCD_DisableController:
  6579                           	opt stack 17
  6580                           
  6581                           ;incstack = 0
  6582                           ;i2GLCD_DisableController@controller stored from wreg
  6583  000D86  6E01               	movwf	i2GLCD_DisableController@controller,c
  6584                           
  6585                           ;KS0108-PIC18.c: 52: switch(controller)
  6586  000D88  D006               	goto	i2l506
  6587  000D8A  8A80               	bsf	3968,5,c	;volatile
  6588  000D8C  0012               	return	
  6589  000D8E  8C80               	bsf	3968,6,c	;volatile
  6590  000D90  0012               	return	
  6591  000D92  8E80               	bsf	3968,7,c	;volatile
  6592                           
  6593                           ;KS0108-PIC18.c: 57: }
  6594  000D94  0012               	return	
  6595  000D96                     i2l506:
  6596  000D96  5001               	movf	i2GLCD_DisableController@controller,w,c
  6597                           
  6598                           ; Switch size 1, requested type "space"
  6599                           ; Number of cases is 3, Range of values is 0 to 2
  6600                           ; switch strategies available:
  6601                           ; Name         Instructions Cycles
  6602                           ; simple_byte           10     6 (average)
  6603                           ;	Chosen strategy is simple_byte
  6604  000D98  0A00               	xorlw	0	; case 0
  6605  000D9A  B4D8               	btfsc	status,2,c
  6606  000D9C  D7F6               	goto	i2l507
  6607  000D9E  0A01               	xorlw	1	; case 1
  6608  000DA0  B4D8               	btfsc	status,2,c
  6609  000DA2  D7F5               	goto	i2l509
  6610  000DA4  0A03               	xorlw	3	; case 2
  6611  000DA6  A4D8               	btfss	status,2,c
  6612  000DA8  0012               	return	
  6613  000DAA  D7F3               	goto	i2l510
  6614  000DAC                     __end_ofi2_GLCD_DisableController:
  6615                           	opt stack 0
  6616                           tosu	equ	0xFFF
  6617                           tosh	equ	0xFFE
  6618                           tosl	equ	0xFFD
  6619                           pclatu	equ	0xFFB
  6620                           pclath	equ	0xFFA
  6621                           tblptru	equ	0xFF8
  6622                           tblptrh	equ	0xFF7
  6623                           tblptrl	equ	0xFF6
  6624                           tablat	equ	0xFF5
  6625                           prodh	equ	0xFF4
  6626                           prodl	equ	0xFF3
  6627                           intcon	equ	0xFF2
  6628                           postinc0	equ	0xFEE
  6629                           fsr0h	equ	0xFEA
  6630                           fsr0l	equ	0xFE9
  6631                           wreg	equ	0xFE8
  6632                           postdec1	equ	0xFE5
  6633                           fsr1h	equ	0xFE2
  6634                           fsr1l	equ	0xFE1
  6635                           fsr2h	equ	0xFDA
  6636                           fsr2l	equ	0xFD9
  6637                           status	equ	0xFD8
  6638                           
  6639 ;; *************** function i2_GLCD_Delay *****************
  6640 ;; Defined at:
  6641 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;		None
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;		None
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      void 
  6648 ;; Registers used:
  6649 ;;		None
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6659 ;;Total ram usage:        0 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; This function calls:
  6662 ;;		Nothing
  6663 ;; This function is called by:
  6664 ;;		i2_GLCD_ReadStatus
  6665 ;;		i2_GLCD_WriteCommand
  6666 ;;		i2_GLCD_WriteData
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text49
  6671  000EA0                     __ptext49:
  6672                           	opt stack 0
  6673  000EA0                     i2_GLCD_Delay:
  6674                           	opt stack 17
  6675                           
  6676                           ;KS0108-PIC18.c: 26: __nop();
  6677                           
  6678                           ;incstack = 0
  6679  000EA0  F000               	nop	
  6680  000EA2  0012               	return		;funcret
  6681  000EA4                     __end_ofi2_GLCD_Delay:
  6682                           	opt stack 0
  6683                           tosu	equ	0xFFF
  6684                           tosh	equ	0xFFE
  6685                           tosl	equ	0xFFD
  6686                           pclatu	equ	0xFFB
  6687                           pclath	equ	0xFFA
  6688                           tblptru	equ	0xFF8
  6689                           tblptrh	equ	0xFF7
  6690                           tblptrl	equ	0xFF6
  6691                           tablat	equ	0xFF5
  6692                           prodh	equ	0xFF4
  6693                           prodl	equ	0xFF3
  6694                           intcon	equ	0xFF2
  6695                           postinc0	equ	0xFEE
  6696                           fsr0h	equ	0xFEA
  6697                           fsr0l	equ	0xFE9
  6698                           wreg	equ	0xFE8
  6699                           postdec1	equ	0xFE5
  6700                           fsr1h	equ	0xFE2
  6701                           fsr1l	equ	0xFE1
  6702                           fsr2h	equ	0xFDA
  6703                           fsr2l	equ	0xFD9
  6704                           status	equ	0xFD8
  6705                           tosu	equ	0xFFF
  6706                           tosh	equ	0xFFE
  6707                           tosl	equ	0xFFD
  6708                           pclatu	equ	0xFFB
  6709                           pclath	equ	0xFFA
  6710                           tblptru	equ	0xFF8
  6711                           tblptrh	equ	0xFF7
  6712                           tblptrl	equ	0xFF6
  6713                           tablat	equ	0xFF5
  6714                           prodh	equ	0xFF4
  6715                           prodl	equ	0xFF3
  6716                           intcon	equ	0xFF2
  6717                           postinc0	equ	0xFEE
  6718                           fsr0h	equ	0xFEA
  6719                           fsr0l	equ	0xFE9
  6720                           wreg	equ	0xFE8
  6721                           postdec1	equ	0xFE5
  6722                           fsr1h	equ	0xFE2
  6723                           fsr1l	equ	0xFE1
  6724                           fsr2h	equ	0xFDA
  6725                           fsr2l	equ	0xFD9
  6726                           status	equ	0xFD8
  6727                           
  6728                           	psect	text50
  6729  000000                     __ptext50:
  6730                           	opt stack 0
  6731                           tosu	equ	0xFFF
  6732                           tosh	equ	0xFFE
  6733                           tosl	equ	0xFFD
  6734                           pclatu	equ	0xFFB
  6735                           pclath	equ	0xFFA
  6736                           tblptru	equ	0xFF8
  6737                           tblptrh	equ	0xFF7
  6738                           tblptrl	equ	0xFF6
  6739                           tablat	equ	0xFF5
  6740                           prodh	equ	0xFF4
  6741                           prodl	equ	0xFF3
  6742                           intcon	equ	0xFF2
  6743                           postinc0	equ	0xFEE
  6744                           fsr0h	equ	0xFEA
  6745                           fsr0l	equ	0xFE9
  6746                           wreg	equ	0xFE8
  6747                           postdec1	equ	0xFE5
  6748                           fsr1h	equ	0xFE2
  6749                           fsr1l	equ	0xFE1
  6750                           fsr2h	equ	0xFDA
  6751                           fsr2l	equ	0xFD9
  6752                           status	equ	0xFD8
  6753                           
  6754                           	psect	rparam
  6755  0000                     tosu	equ	0xFFF
  6756                           tosh	equ	0xFFE
  6757                           tosl	equ	0xFFD
  6758                           pclatu	equ	0xFFB
  6759                           pclath	equ	0xFFA
  6760                           tblptru	equ	0xFF8
  6761                           tblptrh	equ	0xFF7
  6762                           tblptrl	equ	0xFF6
  6763                           tablat	equ	0xFF5
  6764                           prodh	equ	0xFF4
  6765                           prodl	equ	0xFF3
  6766                           intcon	equ	0xFF2
  6767                           postinc0	equ	0xFEE
  6768                           fsr0h	equ	0xFEA
  6769                           fsr0l	equ	0xFE9
  6770                           wreg	equ	0xFE8
  6771                           postdec1	equ	0xFE5
  6772                           fsr1h	equ	0xFE2
  6773                           fsr1l	equ	0xFE1
  6774                           fsr2h	equ	0xFDA
  6775                           fsr2l	equ	0xFD9
  6776                           status	equ	0xFD8
  6777                           
  6778                           	psect	temp
  6779  00003B                     btemp:
  6780                           	opt stack 0
  6781  00003B                     	ds	1
  6782  0000                     int$flags	set	btemp
  6783  0000                     wtemp6	set	btemp+1
  6784                           tosu	equ	0xFFF
  6785                           tosh	equ	0xFFE
  6786                           tosl	equ	0xFFD
  6787                           pclatu	equ	0xFFB
  6788                           pclath	equ	0xFFA
  6789                           tblptru	equ	0xFF8
  6790                           tblptrh	equ	0xFF7
  6791                           tblptrl	equ	0xFF6
  6792                           tablat	equ	0xFF5
  6793                           prodh	equ	0xFF4
  6794                           prodl	equ	0xFF3
  6795                           intcon	equ	0xFF2
  6796                           postinc0	equ	0xFEE
  6797                           fsr0h	equ	0xFEA
  6798                           fsr0l	equ	0xFE9
  6799                           wreg	equ	0xFE8
  6800                           postdec1	equ	0xFE5
  6801                           fsr1h	equ	0xFE2
  6802                           fsr1l	equ	0xFE1
  6803                           fsr2h	equ	0xFDA
  6804                           fsr2l	equ	0xFD9
  6805                           status	equ	0xFD8


Data Sizes:
    Strings     109
    Constant    481
    Data        6
    BSS         6
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      58
    BANK0           160     51      51
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    GLCD_WriteString@stringToWrite	PTR unsigned char  size(2) Largest target is 13
		 -> STR_11(CODE[13]), STR_10(CODE[11]), STR_9(CODE[10]), STR_8(CODE[9]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[8]), STR_2(CODE[7]), STR_1(CODE[10]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCB5_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCB5_DefaultInterruptHandler(), 

    IOCB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCB5_DefaultInterruptHandler(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB5_SetInterruptHandler
    _GLCD_Initalize->_GLCD_WriteCommand
    _GLCD_ClearScreen->_GLCD_WriteData
    _GLCD_WriteChar->_GLCD_WriteData
    _GLCD_SetPixel->_GLCD_ReadData
    _GLCD_SetPixel->_GLCD_WriteData
    _GLCD_ReadData->_GLCD_DisableController
    _GLCD_ReadData->_GLCD_EnableController
    _Make_Arrow->_GLCD_WriteData
    _Clear_runTime_Arrows->_GLCD_WriteData
    _Clear_Arrow_Column->_GLCD_WriteData
    _GLCD_WriteData->_GLCD_DisableController
    _GLCD_WriteData->_GLCD_EnableController
    _GLCD_GoTo->_GLCD_WriteCommand
    _GLCD_WriteCommand->_GLCD_DisableController
    _GLCD_WriteCommand->_GLCD_EnableController
    _GLCD_ReadStatus->_GLCD_DisableController
    _GLCD_ReadStatus->_GLCD_EnableController

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_PIN_MANAGER_IOC
    _PIN_MANAGER_IOC->i2_GLCD_GoTo
    i2_GLCD_WriteChar->i2_GLCD_WriteData
    i2_GLCD_WriteData->i2___awdiv
    i2_GLCD_GoTo->i2_GLCD_WriteCommand
    i2_GLCD_WriteCommand->i2___awdiv
    i2_GLCD_ReadStatus->i2_GLCD_DisableController
    i2_GLCD_ReadStatus->i2_GLCD_EnableController

Critical Paths under _main in BANK0

    _SYSTEM_Initialize->_TMR0_Initialize
    _GLCD_Initalize->_GLCD_WriteCommand
    _Initialize_Menus->_GLCD_Line
    _GLCD_ClearScreen->_GLCD_GoTo
    _Draw_runTime_Menu->_GLCD_Line
    _GLCD_WriteString->_GLCD_WriteChar
    _GLCD_WriteChar->_GLCD_WriteData
    _GLCD_Line->_GLCD_SetPixel
    _GLCD_SetPixel->_GLCD_GoTo
    _GLCD_ReadData->___awdiv
    _Draw_Arrow->_Clear_Arrow_Column
    _Draw_runTime_Arrow->_GLCD_GoTo
    _Make_Arrow->_GLCD_WriteData
    _Clear_runTime_Arrows->_GLCD_GoTo
    _Clear_Arrow_Column->_GLCD_GoTo
    _GLCD_WriteData->___awdiv
    _GLCD_GoTo->_GLCD_WriteCommand
    _GLCD_WriteCommand->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  181354
                                             50 BANK0      1     1      0
                      _Check_Buttons
                         _Draw_Arrow
                   _GLCD_ClearScreen
                     _GLCD_Initalize
                   _Initialize_Menus
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                   _EPWM1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              0 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             36 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     196
          _IOCB4_SetInterruptHandler
          _IOCB5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB5_SetInterruptHandler                            2     0      2      98
                                             36 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2      98
                                             36 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCD_Initalize                                       1     1      0     983
                                             10 BANK0      1     1      0
               _GLCD_InitializePorts
                  _GLCD_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _GLCD_InitializePorts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        0     0      0  105028
                         _Draw_Arrow
                  _Draw_runTime_Menu
                   _GLCD_ClearScreen
                   _Initialize_Menus
 ---------------------------------------------------------------------------------
 (1) _Initialize_Menus                                     0     0      0   29979
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
 ---------------------------------------------------------------------------------
 (1) _GLCD_ClearScreen                                     2     2      0    9105
                                             13 BANK0      2     2      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Draw_runTime_Menu                                    0     0      0   29979
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
 ---------------------------------------------------------------------------------
 (2) _GLCD_WriteString                                     2     0      2    4044
                                             12 BANK0      2     0      2
                     _GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (3) _GLCD_WriteChar                                       3     3      0    2989
                                              9 BANK0      3     3      0
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _GLCD_Line                                           30    22      8   19853
                                             20 BANK0     30    22      8
                      _GLCD_SetPixel
 ---------------------------------------------------------------------------------
 (3) _GLCD_SetPixel                                        7     5      2   17461
                                             13 BANK0      7     5      2
                          _GLCD_GoTo
                      _GLCD_ReadData
                     _GLCD_WriteData
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GLCD_ReadData                                        2     2      0    2859
                                             37 COMRAM     1     1      0
                                              8 BANK0      1     1      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _Draw_Arrow                                           0     0      0   35965
                 _Clear_Arrow_Column
               _Clear_runTime_Arrows
                 _Draw_runTime_Arrow
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Draw_runTime_Arrow                                   0     0      0    8938
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Make_Arrow                                           0     0      0    2856
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_runTime_Arrows                                 1     1      0    9015
                                             13 BANK0      1     1      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_Arrow_Column                                   9     9      0    9074
                                             13 BANK0      9     9      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _GLCD_WriteData                                       2     2      0    2856
                                             37 COMRAM     1     1      0
                                              8 BANK0      1     1      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GLCD_GoTo                                            3     2      1    6082
                                             10 BANK0      3     2      1
                  _GLCD_WriteCommand
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2605
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _GLCD_WriteCommand                                    3     2      1     884
                                             37 COMRAM     1     0      1
                                              8 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _GLCD_ReadStatus                                      2     2      0     158
                                              0 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
 ---------------------------------------------------------------------------------
 (6) _GLCD_EnableController                                1     1      0      31
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_DisableController                               1     1      0      31
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_Delay                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                          18    18      0    2099
                                             18 COMRAM    18    18      0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     4     4      0    2099
                                             14 COMRAM     4     4      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (11) i2_GLCD_WriteChar                                    3     3      0     828
                                             10 COMRAM     3     3      0
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (12) i2_GLCD_WriteData                                    2     2      0     737
                                              8 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (11) i2_GLCD_GoTo                                         3     2      1    1225
                                             11 COMRAM     3     2      1
                i2_GLCD_WriteCommand
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (13) i2___awdiv                                           8     4      4     560
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_GLCD_WriteCommand                                 3     2      1     373
                                              8 COMRAM     3     2      1
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_ReadStatus                                   2     2      0     111
                                              1 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
 ---------------------------------------------------------------------------------
 (14) i2_GLCD_EnableController                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_GLCD_DisableController                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_GLCD_Delay                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Draw_Arrow
       _Clear_Arrow_Column
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Clear_runTime_Arrows
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Draw_runTime_Arrow
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _Make_Arrow
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _Draw_runTime_Menu
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
     _GLCD_ClearScreen
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Initialize_Menus
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
   _Draw_Arrow
     _Clear_Arrow_Column
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Clear_runTime_Arrows
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Draw_runTime_Arrow
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _Make_Arrow
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
   _GLCD_ClearScreen
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_WriteData
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv
   _GLCD_Initalize
     _GLCD_InitializePorts
     _GLCD_WriteCommand
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv (ARG)
   _Initialize_Menus
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_Line
       _GLCD_SetPixel
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_ReadData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
         ___awdiv
     _GLCD_WriteString
       _GLCD_WriteChar
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
       _IOCB5_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR4_Initialize
       _TMR4_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     i2_GLCD_GoTo
       i2_GLCD_WriteCommand
         i2_GLCD_Delay
         i2_GLCD_DisableController
         i2_GLCD_EnableController
         i2_GLCD_ReadStatus
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
         i2___awdiv (ARG)
       i2___awdiv
     i2_GLCD_WriteChar
       i2_GLCD_WriteData
         i2_GLCD_Delay
         i2_GLCD_DisableController
         i2_GLCD_EnableController
         i2_GLCD_ReadStatus
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
         i2___awdiv
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      33       5       31.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      3A       1       61.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6D       6        0.0%
DATA                 0      0      6D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jul 20 21:33:48 2020

              GLCD_WriteCommand@controller 0026                  GLCD_WriteData@dataToWrite 0068  
                          GLCD_Initalize@i 006A                               ___awdiv@sign 0065  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
         GLCD_DisableController@controller 0025         i2GLCD_DisableController@controller 0001  
                          _timer0ReloadVal 0027                 ?_IOCB4_SetInterruptHandler 0025  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l501 0D1C                                        l413 0202  
                                      l510 0D46                                        l502 0D20  
                                      l414 01A0                                        l415 01D4  
                                      l600 0A04                                        l408 013E  
                                      l440 0DE2                                        l601 09FA  
                                      l409 0156                                        l506 0D4A  
                                      l610 0A90                                        l418 020A  
                                      l450 0C04                                        l507 0D3E  
                                      l419 023E                                        l371 05D4  
                                      l452 0C1C                                        l380 05F6  
                                      l372 05D0                                        l364 0B80  
                                      l509 0D42                                        l445 0452  
                                      l381 05FA                                        l606 0AA6  
                                      l462 0C7A                                        l374 0636  
                                      l382 05FE                                        l607 0A64  
                                      l463 0C62                                        l375 060E  
                                      l383 0604                                        l384 063E  
                                      l376 05E0                                        l609 0A7A  
                                      l457 0980                                        l378 05EE  
                                      l379 05F2                                        l575 0B3C  
                                      l576 0B0A                                        l498 0D24  
                                      l586 090E                                        l578 0B1E  
                                      l499 0D18                                        l579 0B28  
                                      l780 04E6                                        l588 092A  
                                      l589 0920                                        l597 09DC  
                                      l782 0504                                        l598 09D2  
                                      l783 04FC                                        l786 0524  
                                      l787 052E                                        l779 04D6  
                                      l788 053C                               __CFG_CPB$OFF 000000  
                                      _PR4 000FA9                               __CFG_CPD$OFF 000000  
                                      tosl 000FFD                                        wreg 000FE8  
              PIN_MANAGER_IOC@currentState 0012                         __size_of_GLCD_GoTo 0088  
                       __size_of_GLCD_Line 01B4                                       l3201 09AE  
                                     l3141 07B2                                       l3129 044A  
                                     l3241 01A0                                       l3059 0C30  
                                     l3255 020A                                       l3191 0970  
                                     l3363 0C14                                       l3355 0BFC  
                                     l3435 0DDA                                       l3277 0906  
                                     STR_1 FFD4                                       STR_2 FFF8  
                                     STR_3 FFF0                                       STR_4 FFB5  
                                     STR_5 FFAA                                       STR_6 FFE7  
                                     STR_7 FFCA                                       STR_8 FFDE  
                                     STR_9 FFC0                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     u1600 047A                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u1560 0508  
                                     u1640 09AE                                       u1654 0426  
                                     u1830 0C28                                       u1655 0422  
                                     u1690 0184                                       u1997 0B5E  
                                     _TMR4 000F87                                       _WPUB 000F5B  
                                     _main 0B4C                            _TMR0_StartTimer 0E94  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       fsr0l 000FE9  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 003B                                       prodh 000FF4  
          __end_ofi2_GLCD_EnableController 0D86                                       prodl 000FF3  
                                     start 00B4                              __CFG_IESO$OFF 000000  
                            __CFG_MCLRE$ON 000000                        i2_GLCD_WriteCommand 0C90  
                             ___param_bank 000000            __size_of_GLCD_DisableController 0026  
                      __size_of_GLCD_Delay 0004                    __end_of_TMR0_Initialize 0BC0  
           ??_TMR0_DefaultInterruptHandler 0001                    __end_of_GLCD_ReadStatus 0CEC  
           __size_of_OSCILLATOR_Initialize 0012              __end_of_OSCILLATOR_Initialize 0E62  
                     _Clear_runTime_Arrows 09B6                                      ?_main 0001  
                          __end_of___awdiv 0546                                      _EEADR 000F74  
                             ?i2_GLCD_GoTo 000C                                      STR_10 FF9F  
                                    STR_11 FF92          __end_of_IOCB4_SetInterruptHandler 0E80  
                                    _T0CON 000FD5                            ___awdiv@divisor 0062  
                                    _T4CON 000F88                                      i2l501 0D68  
                                    i2l157 005E                                      i2l510 0D92  
                                    i2l502 0D6C                                      i2l159 0068  
                                    i2l506 0D96                                      i2l507 0D8A  
                                    i2l509 0D8E                                      i2l445 06D4  
                                    i2l457 0AD4                                      i2l498 0D70  
                                    i2l499 0D64                                      i2l780 056A  
                                    i2l782 0588                                      i2l783 0580  
                                    i2l786 05A8                                      i2l787 05B2  
                                    i2l779 055A                                      i2l788 05C0  
                          ___awdiv@counter 0064                                      _TMR0H 000FD7  
                                    _TMR0L 000FD6                                      _PORTA 000F80  
                                    _PORTB 000F81                                      _PORTC 000F82  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                                 _Draw_Arrow 0B08  
        __size_of_TMR0_SetInterruptHandler 000A                              __CFG_WRT0$OFF 000000  
                          _TMR4_Initialize 0E28                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                  ?_TMR0_SetInterruptHandler 0025  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
              __size_of_Clear_Arrow_Column 005E                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                       ?i2_GLCD_WriteCommand 0009  
                         __end_of_TMR0_ISR 0D14                                 _Make_Arrow 0E3C  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                            __end_of_font5x8 FF91  
                           __CFG_EBTRB$OFF 000000                    __end_of_PIN_MANAGER_IOC 06BE  
                                    _color FF91                                      pclath 000FFA  
                                    tablat 000FF5                     ??_GLCD_InitializePorts 0025  
                                    status 000FD8                                      wtemp6 003C  
                       __size_ofi2___awdiv 0084                            __initialization 0BC0  
                             __end_of_main 0B86                          __end_of_GLCD_GoTo 04C0  
                        __end_of_GLCD_Line 026C                ?_INTERRUPT_InterruptManager 0001  
                __size_of_Initialize_Menus 0128                      ?_Clear_runTime_Arrows 0001  
                      Clear_Arrow_Column@i 0075                        Clear_Arrow_Column@j 0074  
                                   ??_main 0092                              __activetblptr 000003  
                           __CFG_RETEN$OFF 000000                      ??i2_GLCD_WriteCommand 000A  
                         GLCD_SetPixel@tmp 0071                    __end_of_TMR0_StartTimer 0E98  
        __size_ofi2_GLCD_DisableController 0026                              ?i2_GLCD_Delay 0001  
                                   _EEADRH 000F75                                     _EEDATA 000F73  
                                   _CCPR1H 000FBD                                     _CCPR1L 000FBC  
                                   _EECON2 000F7E                                     _ANCON0 000F5D  
                                   _ANCON1 000F5C                  ?i2_GLCD_DisableController 0001  
                   _GLCD_DisableController 0D3A                           ___awdiv@dividend 0060  
                          __CFG_BBSIZ$BB2K 000000                             __CFG_WDTEN$OFF 000000  
                                   i2l2641 0C92                                     i2l2661 089A  
                                   i2l2809 0AC4                                     i2l2819 0B00  
                                   i2l2793 06CC                                     _TABLAT 000FF5  
                                   _OSCCON 000FD3                  __size_ofi2_GLCD_WriteChar 0052  
                __size_ofi2_GLCD_WriteData 0068                            _TMR4_StartTimer 0E90  
                         _GLCD_WriteString 0C60                             __CFG_XINST$OFF 000000  
                                ??___awdiv 0025                             __CFG_STVREN$ON 000000  
                         ?_TMR0_Initialize 0001                    __end_of_TMR4_Initialize 0E3C  
                         ___awdiv@quotient 0066                           ?_GLCD_ReadStatus 0001  
                   __size_of_Check_Buttons 007A                             i2___awdiv@sign 0006  
                             __pdataCOMRAM 0035                                ?_Draw_Arrow 0001  
                        __end_ofi2___awdiv 05CA                               __mediumconst FDB0  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
         __size_ofi2_GLCD_EnableController 0026                                     tblptru 000FF8  
                    _GLCD_EnableController 0D14                                ?_Make_Arrow 0001  
                           ??i2_GLCD_Delay 0001                               ??_GLCD_Delay 0025  
 TMR0_SetInterruptHandler@InterruptHandler 0025  IOCB5_SetInterruptHandler@InterruptHandler 0025  
IOCB4_SetInterruptHandler@InterruptHandler 0025                           ?_PIN_MANAGER_IOC 0001  
            __size_of_INTERRUPT_Initialize 0004                          _SYSTEM_Initialize 0E0E  
                               __accesstop 0060                    __end_of__initialization 0BEC  
            GLCD_WriteString@stringToWrite 006C                         ?_SYSTEM_Initialize 0001  
                            ___rparam_used 000001                            GLCD_WriteChar@i 006A  
                        ?_GLCD_ClearScreen 0001                               i2GLCD_GoTo@i 000E  
                             i2GLCD_GoTo@x 000D                               i2GLCD_GoTo@y 000C  
                    __end_of_GLCD_ReadData 0898                          ?_EPWM1_Initialize 0001  
                           __pcstackCOMRAM 0001                         ??_GLCD_ClearScreen 0027  
                      ??_SYSTEM_Initialize 0027                                  ?_TMR0_ISR 0001  
                       ??_EPWM1_Initialize 0025                              __end_of_color FF92  
                   ??_Clear_runTime_Arrows 0027               PIN_MANAGER_IOC@previousState 0031  
            _IOCB4_DefaultInterruptHandler 000000                      __end_of_GLCD_SetPixel 0438  
                       __end_of_GLCD_Delay 0EA0                    __size_of_GLCD_Initalize 0022  
              ??_IOCB4_SetInterruptHandler 0027                         _Draw_runTime_Arrow 0A62  
                     __size_ofi2_GLCD_GoTo 007A                           ?_TMR0_StartTimer 0001  
                      ?_Draw_runTime_Arrow 0001                    __end_of_TMR4_StartTimer 0E94  
                __end_of_SYSTEM_Initialize 0E28                            __CFG_PLLCFG$OFF 000000  
                            _Check_Buttons 05CA                                 __pnvCOMRAM 0027  
                      __size_of_Draw_Arrow 0044           __end_of_TMR0_SetInterruptHandler 0E6C  
                     ??_Draw_runTime_Arrow 0027                        __size_of_Make_Arrow 0014  
                               ??_TMR0_ISR 0001                                    _CCP1CON 000FBB  
                                  _ECCP1AS 000FBF                           _Initialize_Menus 026C  
                  __size_of_GLCD_WriteChar 0058                    __size_of_GLCD_WriteData 0076  
                        GLCD_ClearScreen@i 006D                          GLCD_ClearScreen@j 006E  
       __size_of_IOCB5_SetInterruptHandler 000A                           ?_TMR4_Initialize 0001  
               ?_IOCB5_SetInterruptHandler 0025                           __CFG_CANMX$PORTB 000000  
                   ?_GLCD_EnableController 0001                                    _REFOCON 000F9A  
                GLCD_ReadStatus@controller 0061                                    _OSCCON2 000FD2  
                                  _TBLPTRH 000FF7                                    _TBLPTRL 000FF6  
                                  _TBLPTRU 000FF8                                    i2u51_48 0D02  
                        _GLCD_WriteCommand 0C2C                                    _OSCTUNE 000F9B  
                       ?_GLCD_WriteCommand 0026                             ?_Check_Buttons 0001  
                         i2_GLCD_WriteChar 0AB6                           i2_GLCD_WriteData 0898  
           GLCD_Line@TwoDxAccumulatedError 007E                  _IOCB4_SetInterruptHandler 0E76  
                      ??_GLCD_WriteCommand 0068                                 _xMenuStart 0036  
                          __CFG_PWRTEN$OFF 000000                                    __Hparam 0000  
              i2GLCD_WriteChar@charToWrite 000B                                    __Lparam 0000  
                                  ___awdiv 04C0                       __end_ofi2_GLCD_Delay 0EA4  
         __end_ofi2_GLCD_DisableController 0DAC                                    __pcinit 0BC0  
                                  __ramtop 0F00                                    __ptext0 0B4C  
                                  __ptext1 0E0E                                    __ptext2 0E28  
                                  __ptext3 0E90                                    __ptext4 0B86  
                                  __ptext5 0E94                                    __ptext6 0E62  
                                  __ptext7 0A0E                                    __ptext8 0E6C  
                                  __ptext9 0E76                                  _GLCD_GoTo 0438  
                                _GLCD_Line 00B8                                  _T0CONbits 000FD5  
        __end_of_IOCB5_SetInterruptHandler 0E76                                    _font5x8 FDB1  
               __end_of_Clear_Arrow_Column 095E                      _OSCILLATOR_Initialize 0E50  
                __end_of_GLCD_WriteCommand 0C60                    i2_GLCD_EnableController 0D60  
                 __end_of_GLCD_WriteString 0C90                                  _T4CONbits 000F88  
                  ?_GLCD_DisableController 0001                   ??_PIN_MANAGER_Initialize 0027  
                        __CFG_MSSPMSK$MSK7 000000                      GLCD_ReadStatus@status 0060  
               __size_of_SYSTEM_Initialize 001A                           ?_TMR4_StartTimer 0001  
                     end_of_initialization 0BEC              __size_of_GLCD_InitializePorts 000A  
                               GLCD_GoTo@i 006C                                 GLCD_GoTo@x 006B  
                               GLCD_GoTo@y 006A             GLCD_Line@TwoDyAccumulatedError 0080  
              i2GLCD_WriteData@dataToWrite 000A                                    postdec1 000FE5  
                                  postinc0 000FEE                      Clear_runTime_Arrows@i 006D  
                           GLCD_Line@TwoDx 0086                             GLCD_Line@TwoDy 0088  
              __end_ofi2_GLCD_WriteCommand 0CC0                             _GLCD_Initalize 0DD0  
                 _TMR0_SetInterruptHandler 0E62                                  _PORTBbits 000F81  
                               ?_GLCD_GoTo 006A                                 ?_GLCD_Line 0074  
           __end_of_GLCD_DisableController 0D60                               ??_Draw_Arrow 0027  
                         __CFG_FOSC$INTIO2 000000                               ??_Make_Arrow 0027  
                          ??_Check_Buttons 0027                                  i2___awdiv 0546  
                       i2___awdiv@dividend 0001                         __end_of_Draw_Arrow 0B4C  
             __end_of_INTERRUPT_Initialize 0E9C                     __end_of_GLCD_Initalize 0DF2  
                       __end_of_Make_Arrow 0E50                             GLCD_SetPixel@x 0072  
                           GLCD_SetPixel@y 006D                             _GLCD_WriteChar 095E  
                           _GLCD_WriteData 07AE                      PIN_MANAGER_IOC@result 0011  
                            __pidataCOMRAM 0E8A                          __size_of_TMR0_ISR 0028  
                ??i2_GLCD_EnableController 0001                     ?_OSCILLATOR_Initialize 0001  
                         _timeAfterFinishX 0038                  __size_of_GLCD_ClearScreen 0036  
               __size_of_GLCD_WriteCommand 0034                   i2_GLCD_DisableController 0D86  
                      start_initialization 0BC0                  __size_of_EPWM1_Initialize 001C  
                       i2___awdiv@quotient 0007                   __size_of_TMR0_Initialize 003A  
          __size_of_PIN_MANAGER_Initialize 0054                   __size_of_GLCD_ReadStatus 002C  
                               ?i2___awdiv 0001                   __end_of_Initialize_Menus 0394  
                    __size_ofi2_GLCD_Delay 0004                   __size_of_PIN_MANAGER_IOC 007A  
                           _currentContext 0033                     __end_of_GLCD_WriteChar 09B6  
                   __end_of_GLCD_WriteData 0824                                _CCPTMRSbits 000F99  
                          ?_GLCD_Initalize 0001                   __end_ofi2_GLCD_WriteChar 0B08  
                 __end_ofi2_GLCD_WriteData 0900                    ??_GLCD_EnableController 0025  
            __size_of_Clear_runTime_Arrows 0058                              ??i2_GLCD_GoTo 000D  
                              ??_GLCD_GoTo 0027              _IOCB5_DefaultInterruptHandler 000000  
              ??_IOCB5_SetInterruptHandler 0027                                ??_GLCD_Line 007C  
                  i2GLCD_ReadStatus@status 0002                                __pbssCOMRAM 002F  
                            __pcstackBANK0 0060                          i2_GLCD_ReadStatus 0DAC  
                   __size_of_GLCD_ReadData 0074                               i2_GLCD_Delay 0EA0  
                        _Draw_runTime_Menu 0738                         ?i2_GLCD_ReadStatus 0001  
                   __size_of_GLCD_SetPixel 00A4                         ?_Draw_runTime_Menu 0001  
                    _TMR0_InterruptHandler 0029                   __size_of_TMR0_StartTimer 0004  
                      ??i2_GLCD_ReadStatus 0002                     _PIN_MANAGER_Initialize 0A0E  
                      ??_Draw_runTime_Menu 0027                                  __pintcode 0008  
                       GLCD_SetPixel@color 006E                            ?_GLCD_WriteChar 0001  
                          ?_GLCD_WriteData 0001                              __pmediumconst FDB0  
                                 ?___awdiv 0060                __size_of_Draw_runTime_Arrow 0054  
             ??_INTERRUPT_InterruptManager 0013                                  _mainState 0034  
                                 _ECCP1DEL 000FBE                  __end_ofi2_GLCD_ReadStatus 0DD0  
                        ?_GLCD_WriteString 006C                   __size_of_TMR4_Initialize 0014  
                      __end_ofi2_GLCD_GoTo 0738                  __end_of_Draw_runTime_Menu 07AE  
                              ??i2___awdiv 0005                         ??_GLCD_WriteString 0027  
                     _INTERRUPT_Initialize 0E98                         _Clear_Arrow_Column 0900  
                _IOCB5_SetInterruptHandler 0E6C                          ??_TMR0_Initialize 0060  
                        ??_GLCD_ReadStatus 0026                                   _IOCBbits 000F5A  
                                 _LATEbits 000F8D            GLCD_EnableController@controller 0025  
        i2GLCD_EnableController@controller 0001                                   i2u102_40 058C  
                                 i2u200_47 064A                                   i2u130_40 065E  
                                 i2u131_40 066A                                   i2u130_48 0660  
                                 i2u132_40 0686                                   i2u131_48 066C  
                                 i2u132_46 0688                                   i2u133_40 0696  
                                 i2u133_46 0698                                   i2u127_40 06F8  
      __size_of_INTERRUPT_InterruptManager 00AC                                   i2u129_40 0B00  
               ??_TMR0_SetInterruptHandler 0027                        ?_Clear_Arrow_Column 0001  
                                 _PIR4bits 000FB7                                   _RCONbits 000FD0  
                            _GLCD_ReadData 0824                              GLCD_Line@Xinc 0082  
                            GLCD_Line@Yinc 0084                                   _TMR0_ISR 0CEC  
                                 _PSTR1CON 000F9C                          ??_PIN_MANAGER_IOC 000F  
                            _GLCD_SetPixel 0394               __end_of_GLCD_InitializePorts 0E8A  
                         __CFG_SOSCSEL$DIG 000000                           _GLCD_ClearScreen 0BF6  
                         _EPWM1_Initialize 0DF2                          i2___awdiv@divisor 0003  
                     ??_Clear_Arrow_Column 006D                          i2___awdiv@counter 0005  
                                copy_data0 0BD4                      ?_INTERRUPT_Initialize 0001  
                               _EECON1bits 000F7F                   __size_of_TMR4_StartTimer 0004  
                                 __Hrparam 0000                                   __Lrparam 0000  
                           ?_GLCD_ReadData 0001                         __CFG_BOREN$SBORDIS 000000  
                  ??_OSCILLATOR_Initialize 0025                 ??i2_GLCD_DisableController 0001  
                        ??_TMR0_StartTimer 0025                           __size_of___awdiv 0086  
                           ?_GLCD_SetPixel 006D                          GLCD_Line@CurrentX 008A  
                        GLCD_Line@CurrentY 008C                     _IOCB4_InterruptHandler 002D  
                              i2_GLCD_GoTo 06BE                i2GLCD_ReadStatus@controller 0003  
               __size_ofi2_GLCD_ReadStatus 0024               __size_ofi2_GLCD_WriteCommand 0030  
                                 __ptext10 0E50                                   __ptext11 0E98  
                                 __ptext20 095E                                   __ptext12 0DF2  
                                 __ptext21 00B8                                   __ptext13 0DD0  
                                 __ptext30 0438                                   __ptext22 0394  
                                 __ptext14 0E80                                   __ptext31 04C0  
                                 __ptext23 0824                                   __ptext15 05CA  
                                 __ptext40 0644                                   __ptext32 0C2C  
                                 __ptext24 0B08                                   __ptext16 026C  
                                 __ptext41 0AB6                                   __ptext33 0CC0  
                                 __ptext25 0A62                                   __ptext17 0BF6  
                                 __ptext50 0000                                   __ptext42 0898  
                                 __ptext34 0D14                                   __ptext26 0E3C  
                                 __ptext18 0738                                   __ptext43 06BE  
                                 __ptext35 0D3A                                   __ptext27 09B6  
                                 __ptext19 0C60                                   __ptext44 0546  
                                 __ptext36 0E9C                                   __ptext28 0900  
               __size_of_Draw_runTime_Menu 0076                                   __ptext45 0C90  
                                 __ptext29 07AE                                   __ptext46 0DAC  
                                 __ptext38 0CEC                                   __ptext47 0D60  
                                 __ptext39 0EA4                                   __ptext48 0D86  
                                 __ptext49 0EA0                                 _GLCD_Delay 0E9C  
                    __end_of_Check_Buttons 0644                          ?_Initialize_Menus 0001  
                        ??_TMR4_Initialize 0025                              __size_of_main 003A  
            i2GLCD_WriteCommand@controller 0009                                 _ARROW_SIZE 0037  
     __end_of_TMR0_DefaultInterruptHandler 0EA6      __size_of_TMR0_DefaultInterruptHandler 0002  
             _TMR0_DefaultInterruptHandler 0EA4                         ??_Initialize_Menus 0027  
                         ??_GLCD_Initalize 0027                                   _screen_x 0030  
                                 _screen_y 002F                                   _subMenuY 003A  
                                 int$flags 003B                                   _runTimeX 0039  
       __end_of_INTERRUPT_InterruptManager 00B4                 _INTERRUPT_InterruptManager 0008  
                      __CFG_INTOSCSEL$HIGH 000000                          ?i2_GLCD_WriteChar 0001  
                        ?i2_GLCD_WriteData 0001             __size_of_GLCD_EnableController 0026  
            __end_of_GLCD_EnableController 0D3A                                 _INTCONbits 000FF2  
                       ??i2_GLCD_WriteChar 000B                         ??i2_GLCD_WriteData 0009  
                   ??_INTERRUPT_Initialize 0025                               _valuesXStart 0035  
                                 intlevel2 0000               __end_of_Clear_runTime_Arrows 0A0E  
                        GLCD_ReadData@data 0068                    ?_PIN_MANAGER_Initialize 0001  
                         ??_GLCD_WriteChar 0027                           ??_GLCD_WriteData 0026  
                     _GLCD_InitializePorts 0E80                            ??_GLCD_ReadData 0026  
            ?_TMR0_DefaultInterruptHandler 0001                  GLCD_WriteChar@charToWrite 0069  
                              GLCD_Line@X1 0074                                GLCD_Line@X2 0078  
                              GLCD_Line@Y1 0076                                GLCD_Line@Y2 007A  
                              GLCD_Line@Dx 008E                                GLCD_Line@Dy 0090  
                        i2GLCD_WriteChar@i 000C                   ?i2_GLCD_EnableController 0001  
                          ??_GLCD_SetPixel 006F                   ??_GLCD_DisableController 0025  
                       __CFG_WDTPS$1048576 000000                          ??_TMR4_StartTimer 0025  
                          _TMR0_Initialize 0B86                            _GLCD_ReadStatus 0CC0  
                              ?_GLCD_Delay 0001             __end_of_PIN_MANAGER_Initialize 0A62  
                      __CFG_BORPWR$ZPBORMV 000000                     _IOCB5_InterruptHandler 002B  
                          _PIN_MANAGER_IOC 0644                      ?_GLCD_InitializePorts 0001  
                           _runTimeContext 0032                   __end_of_GLCD_ClearScreen 0C2C  
                       _GLCD_SetPixel$1670 0073                  __size_of_GLCD_WriteString 0030  
        i2GLCD_WriteCommand@commandToWrite 000B            GLCD_WriteCommand@commandToWrite 0069  
                 __end_of_EPWM1_Initialize 0E0E                 __end_of_Draw_runTime_Arrow 0AB6  
