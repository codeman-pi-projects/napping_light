

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jul 26 16:38:00 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87  0000                     
    88                           ; Version 1.45
    89                           ; Generated 16/11/2017 GMT
    90                           ; 
    91                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F46K80 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123                           	psect	idataCOMRAM
   124  00164C                     __pidataCOMRAM:
   125                           	opt stack 0
   126                           
   127                           ;initializer for _valuesXStart
   128  00164C  50                 	db	80
   129                           
   130                           ;initializer for _timeAfterFinishX
   131  00164D  41                 	db	65
   132                           
   133                           ;initializer for _subMenuY
   134  00164E  03                 	db	3
   135                           
   136                           	psect	idataBANK0
   137  00164F                     __pidataBANK0:
   138                           	opt stack 0
   139                           
   140                           ;initializer for _xMenuStart
   141  00164F  04                 	db	4
   142                           
   143                           ;initializer for _ARROW_SIZE
   144  001650  04                 	db	4
   145                           
   146                           ;initializer for _runTimeX
   147  001651  0A                 	db	10
   148                           
   149                           	psect	mediumconst
   150  00FDA0                     __pmediumconst:
   151                           	opt stack 0
   152  00FDA0  00                 	db	0
   153  00FDA1                     _font5x8:
   154                           	opt stack 0
   155  00FDA1  00                 	db	0
   156  00FDA2  00                 	db	0
   157  00FDA3  00                 	db	0
   158  00FDA4  00                 	db	0
   159  00FDA5  00                 	db	0
   160  00FDA6  00                 	db	0
   161  00FDA7  00                 	db	0
   162  00FDA8  5F                 	db	95
   163  00FDA9  00                 	db	0
   164  00FDAA  00                 	db	0
   165  00FDAB  00                 	db	0
   166  00FDAC  07                 	db	7
   167  00FDAD  00                 	db	0
   168  00FDAE  07                 	db	7
   169  00FDAF  00                 	db	0
   170  00FDB0  14                 	db	20
   171  00FDB1  7F                 	db	127
   172  00FDB2  14                 	db	20
   173  00FDB3  7F                 	db	127
   174  00FDB4  14                 	db	20
   175  00FDB5  24                 	db	36
   176  00FDB6  2A                 	db	42
   177  00FDB7  7F                 	db	127
   178  00FDB8  2A                 	db	42
   179  00FDB9  12                 	db	18
   180  00FDBA  23                 	db	35
   181  00FDBB  13                 	db	19
   182  00FDBC  08                 	db	8
   183  00FDBD  64                 	db	100
   184  00FDBE  62                 	db	98
   185  00FDBF  36                 	db	54
   186  00FDC0  49                 	db	73
   187  00FDC1  55                 	db	85
   188  00FDC2  22                 	db	34
   189  00FDC3  50                 	db	80
   190  00FDC4  00                 	db	0
   191  00FDC5  05                 	db	5
   192  00FDC6  03                 	db	3
   193  00FDC7  00                 	db	0
   194  00FDC8  00                 	db	0
   195  00FDC9  00                 	db	0
   196  00FDCA  1C                 	db	28
   197  00FDCB  22                 	db	34
   198  00FDCC  41                 	db	65
   199  00FDCD  00                 	db	0
   200  00FDCE  00                 	db	0
   201  00FDCF  41                 	db	65
   202  00FDD0  22                 	db	34
   203  00FDD1  1C                 	db	28
   204  00FDD2  00                 	db	0
   205  00FDD3  08                 	db	8
   206  00FDD4  2A                 	db	42
   207  00FDD5  1C                 	db	28
   208  00FDD6  2A                 	db	42
   209  00FDD7  08                 	db	8
   210  00FDD8  08                 	db	8
   211  00FDD9  08                 	db	8
   212  00FDDA  3E                 	db	62
   213  00FDDB  08                 	db	8
   214  00FDDC  08                 	db	8
   215  00FDDD  00                 	db	0
   216  00FDDE  50                 	db	80
   217  00FDDF  30                 	db	48
   218  00FDE0  00                 	db	0
   219  00FDE1  00                 	db	0
   220  00FDE2  08                 	db	8
   221  00FDE3  08                 	db	8
   222  00FDE4  08                 	db	8
   223  00FDE5  08                 	db	8
   224  00FDE6  08                 	db	8
   225  00FDE7  00                 	db	0
   226  00FDE8  30                 	db	48
   227  00FDE9  30                 	db	48
   228  00FDEA  00                 	db	0
   229  00FDEB  00                 	db	0
   230  00FDEC  20                 	db	32
   231  00FDED  10                 	db	16
   232  00FDEE  08                 	db	8
   233  00FDEF  04                 	db	4
   234  00FDF0  02                 	db	2
   235  00FDF1  3E                 	db	62
   236  00FDF2  51                 	db	81
   237  00FDF3  49                 	db	73
   238  00FDF4  45                 	db	69
   239  00FDF5  3E                 	db	62
   240  00FDF6  00                 	db	0
   241  00FDF7  42                 	db	66
   242  00FDF8  7F                 	db	127
   243  00FDF9  40                 	db	64
   244  00FDFA  00                 	db	0
   245  00FDFB  42                 	db	66
   246  00FDFC  61                 	db	97
   247  00FDFD  51                 	db	81
   248  00FDFE  49                 	db	73
   249  00FDFF  46                 	db	70
   250  00FE00  21                 	db	33
   251  00FE01  41                 	db	65
   252  00FE02  45                 	db	69
   253  00FE03  4B                 	db	75
   254  00FE04  31                 	db	49
   255  00FE05  18                 	db	24
   256  00FE06  14                 	db	20
   257  00FE07  12                 	db	18
   258  00FE08  7F                 	db	127
   259  00FE09  10                 	db	16
   260  00FE0A  27                 	db	39
   261  00FE0B  45                 	db	69
   262  00FE0C  45                 	db	69
   263  00FE0D  45                 	db	69
   264  00FE0E  39                 	db	57
   265  00FE0F  3C                 	db	60
   266  00FE10  4A                 	db	74
   267  00FE11  49                 	db	73
   268  00FE12  49                 	db	73
   269  00FE13  30                 	db	48
   270  00FE14  01                 	db	1
   271  00FE15  71                 	db	113
   272  00FE16  09                 	db	9
   273  00FE17  05                 	db	5
   274  00FE18  03                 	db	3
   275  00FE19  36                 	db	54
   276  00FE1A  49                 	db	73
   277  00FE1B  49                 	db	73
   278  00FE1C  49                 	db	73
   279  00FE1D  36                 	db	54
   280  00FE1E  06                 	db	6
   281  00FE1F  49                 	db	73
   282  00FE20  49                 	db	73
   283  00FE21  29                 	db	41
   284  00FE22  1E                 	db	30
   285  00FE23  00                 	db	0
   286  00FE24  36                 	db	54
   287  00FE25  36                 	db	54
   288  00FE26  00                 	db	0
   289  00FE27  00                 	db	0
   290  00FE28  00                 	db	0
   291  00FE29  56                 	db	86
   292  00FE2A  36                 	db	54
   293  00FE2B  00                 	db	0
   294  00FE2C  00                 	db	0
   295  00FE2D  00                 	db	0
   296  00FE2E  08                 	db	8
   297  00FE2F  14                 	db	20
   298  00FE30  22                 	db	34
   299  00FE31  41                 	db	65
   300  00FE32  14                 	db	20
   301  00FE33  14                 	db	20
   302  00FE34  14                 	db	20
   303  00FE35  14                 	db	20
   304  00FE36  14                 	db	20
   305  00FE37  41                 	db	65
   306  00FE38  22                 	db	34
   307  00FE39  14                 	db	20
   308  00FE3A  08                 	db	8
   309  00FE3B  00                 	db	0
   310  00FE3C  02                 	db	2
   311  00FE3D  01                 	db	1
   312  00FE3E  51                 	db	81
   313  00FE3F  09                 	db	9
   314  00FE40  06                 	db	6
   315  00FE41  32                 	db	50
   316  00FE42  49                 	db	73
   317  00FE43  79                 	db	121
   318  00FE44  41                 	db	65
   319  00FE45  3E                 	db	62
   320  00FE46  7E                 	db	126
   321  00FE47  11                 	db	17
   322  00FE48  11                 	db	17
   323  00FE49  11                 	db	17
   324  00FE4A  7E                 	db	126
   325  00FE4B  7F                 	db	127
   326  00FE4C  49                 	db	73
   327  00FE4D  49                 	db	73
   328  00FE4E  49                 	db	73
   329  00FE4F  36                 	db	54
   330  00FE50  3E                 	db	62
   331  00FE51  41                 	db	65
   332  00FE52  41                 	db	65
   333  00FE53  41                 	db	65
   334  00FE54  22                 	db	34
   335  00FE55  7F                 	db	127
   336  00FE56  41                 	db	65
   337  00FE57  41                 	db	65
   338  00FE58  22                 	db	34
   339  00FE59  1C                 	db	28
   340  00FE5A  7F                 	db	127
   341  00FE5B  49                 	db	73
   342  00FE5C  49                 	db	73
   343  00FE5D  49                 	db	73
   344  00FE5E  41                 	db	65
   345  00FE5F  7F                 	db	127
   346  00FE60  09                 	db	9
   347  00FE61  09                 	db	9
   348  00FE62  01                 	db	1
   349  00FE63  01                 	db	1
   350  00FE64  3E                 	db	62
   351  00FE65  41                 	db	65
   352  00FE66  41                 	db	65
   353  00FE67  51                 	db	81
   354  00FE68  32                 	db	50
   355  00FE69  7F                 	db	127
   356  00FE6A  08                 	db	8
   357  00FE6B  08                 	db	8
   358  00FE6C  08                 	db	8
   359  00FE6D  7F                 	db	127
   360  00FE6E  00                 	db	0
   361  00FE6F  41                 	db	65
   362  00FE70  7F                 	db	127
   363  00FE71  41                 	db	65
   364  00FE72  00                 	db	0
   365  00FE73  20                 	db	32
   366  00FE74  40                 	db	64
   367  00FE75  41                 	db	65
   368  00FE76  3F                 	db	63
   369  00FE77  01                 	db	1
   370  00FE78  7F                 	db	127
   371  00FE79  08                 	db	8
   372  00FE7A  14                 	db	20
   373  00FE7B  22                 	db	34
   374  00FE7C  41                 	db	65
   375  00FE7D  7F                 	db	127
   376  00FE7E  40                 	db	64
   377  00FE7F  40                 	db	64
   378  00FE80  40                 	db	64
   379  00FE81  40                 	db	64
   380  00FE82  7F                 	db	127
   381  00FE83  02                 	db	2
   382  00FE84  04                 	db	4
   383  00FE85  02                 	db	2
   384  00FE86  7F                 	db	127
   385  00FE87  7F                 	db	127
   386  00FE88  04                 	db	4
   387  00FE89  08                 	db	8
   388  00FE8A  10                 	db	16
   389  00FE8B  7F                 	db	127
   390  00FE8C  3E                 	db	62
   391  00FE8D  41                 	db	65
   392  00FE8E  41                 	db	65
   393  00FE8F  41                 	db	65
   394  00FE90  3E                 	db	62
   395  00FE91  7F                 	db	127
   396  00FE92  09                 	db	9
   397  00FE93  09                 	db	9
   398  00FE94  09                 	db	9
   399  00FE95  06                 	db	6
   400  00FE96  3E                 	db	62
   401  00FE97  41                 	db	65
   402  00FE98  51                 	db	81
   403  00FE99  21                 	db	33
   404  00FE9A  5E                 	db	94
   405  00FE9B  7F                 	db	127
   406  00FE9C  09                 	db	9
   407  00FE9D  19                 	db	25
   408  00FE9E  29                 	db	41
   409  00FE9F  46                 	db	70
   410  00FEA0  46                 	db	70
   411  00FEA1  49                 	db	73
   412  00FEA2  49                 	db	73
   413  00FEA3  49                 	db	73
   414  00FEA4  31                 	db	49
   415  00FEA5  01                 	db	1
   416  00FEA6  01                 	db	1
   417  00FEA7  7F                 	db	127
   418  00FEA8  01                 	db	1
   419  00FEA9  01                 	db	1
   420  00FEAA  3F                 	db	63
   421  00FEAB  40                 	db	64
   422  00FEAC  40                 	db	64
   423  00FEAD  40                 	db	64
   424  00FEAE  3F                 	db	63
   425  00FEAF  1F                 	db	31
   426  00FEB0  20                 	db	32
   427  00FEB1  40                 	db	64
   428  00FEB2  20                 	db	32
   429  00FEB3  1F                 	db	31
   430  00FEB4  7F                 	db	127
   431  00FEB5  20                 	db	32
   432  00FEB6  18                 	db	24
   433  00FEB7  20                 	db	32
   434  00FEB8  7F                 	db	127
   435  00FEB9  63                 	db	99
   436  00FEBA  14                 	db	20
   437  00FEBB  08                 	db	8
   438  00FEBC  14                 	db	20
   439  00FEBD  63                 	db	99
   440  00FEBE  03                 	db	3
   441  00FEBF  04                 	db	4
   442  00FEC0  78                 	db	120
   443  00FEC1  04                 	db	4
   444  00FEC2  03                 	db	3
   445  00FEC3  61                 	db	97
   446  00FEC4  51                 	db	81
   447  00FEC5  49                 	db	73
   448  00FEC6  45                 	db	69
   449  00FEC7  43                 	db	67
   450  00FEC8  00                 	db	0
   451  00FEC9  00                 	db	0
   452  00FECA  7F                 	db	127
   453  00FECB  41                 	db	65
   454  00FECC  41                 	db	65
   455  00FECD  02                 	db	2
   456  00FECE  04                 	db	4
   457  00FECF  08                 	db	8
   458  00FED0  10                 	db	16
   459  00FED1  20                 	db	32
   460  00FED2  41                 	db	65
   461  00FED3  41                 	db	65
   462  00FED4  7F                 	db	127
   463  00FED5  00                 	db	0
   464  00FED6  00                 	db	0
   465  00FED7  04                 	db	4
   466  00FED8  02                 	db	2
   467  00FED9  01                 	db	1
   468  00FEDA  02                 	db	2
   469  00FEDB  04                 	db	4
   470  00FEDC  40                 	db	64
   471  00FEDD  40                 	db	64
   472  00FEDE  40                 	db	64
   473  00FEDF  40                 	db	64
   474  00FEE0  40                 	db	64
   475  00FEE1  00                 	db	0
   476  00FEE2  01                 	db	1
   477  00FEE3  02                 	db	2
   478  00FEE4  04                 	db	4
   479  00FEE5  00                 	db	0
   480  00FEE6  20                 	db	32
   481  00FEE7  54                 	db	84
   482  00FEE8  54                 	db	84
   483  00FEE9  54                 	db	84
   484  00FEEA  78                 	db	120
   485  00FEEB  7F                 	db	127
   486  00FEEC  48                 	db	72
   487  00FEED  44                 	db	68
   488  00FEEE  44                 	db	68
   489  00FEEF  38                 	db	56
   490  00FEF0  38                 	db	56
   491  00FEF1  44                 	db	68
   492  00FEF2  44                 	db	68
   493  00FEF3  44                 	db	68
   494  00FEF4  20                 	db	32
   495  00FEF5  38                 	db	56
   496  00FEF6  44                 	db	68
   497  00FEF7  44                 	db	68
   498  00FEF8  48                 	db	72
   499  00FEF9  7F                 	db	127
   500  00FEFA  38                 	db	56
   501  00FEFB  54                 	db	84
   502  00FEFC  54                 	db	84
   503  00FEFD  54                 	db	84
   504  00FEFE  18                 	db	24
   505  00FEFF  08                 	db	8
   506  00FF00  7E                 	db	126
   507  00FF01  09                 	db	9
   508  00FF02  01                 	db	1
   509  00FF03  02                 	db	2
   510  00FF04  08                 	db	8
   511  00FF05  14                 	db	20
   512  00FF06  54                 	db	84
   513  00FF07  54                 	db	84
   514  00FF08  3C                 	db	60
   515  00FF09  7F                 	db	127
   516  00FF0A  08                 	db	8
   517  00FF0B  04                 	db	4
   518  00FF0C  04                 	db	4
   519  00FF0D  78                 	db	120
   520  00FF0E  00                 	db	0
   521  00FF0F  44                 	db	68
   522  00FF10  7D                 	db	125
   523  00FF11  40                 	db	64
   524  00FF12  00                 	db	0
   525  00FF13  20                 	db	32
   526  00FF14  40                 	db	64
   527  00FF15  44                 	db	68
   528  00FF16  3D                 	db	61
   529  00FF17  00                 	db	0
   530  00FF18  00                 	db	0
   531  00FF19  7F                 	db	127
   532  00FF1A  10                 	db	16
   533  00FF1B  28                 	db	40
   534  00FF1C  44                 	db	68
   535  00FF1D  00                 	db	0
   536  00FF1E  41                 	db	65
   537  00FF1F  7F                 	db	127
   538  00FF20  40                 	db	64
   539  00FF21  00                 	db	0
   540  00FF22  7C                 	db	124
   541  00FF23  04                 	db	4
   542  00FF24  18                 	db	24
   543  00FF25  04                 	db	4
   544  00FF26  78                 	db	120
   545  00FF27  7C                 	db	124
   546  00FF28  08                 	db	8
   547  00FF29  04                 	db	4
   548  00FF2A  04                 	db	4
   549  00FF2B  78                 	db	120
   550  00FF2C  38                 	db	56
   551  00FF2D  44                 	db	68
   552  00FF2E  44                 	db	68
   553  00FF2F  44                 	db	68
   554  00FF30  38                 	db	56
   555  00FF31  7C                 	db	124
   556  00FF32  14                 	db	20
   557  00FF33  14                 	db	20
   558  00FF34  14                 	db	20
   559  00FF35  08                 	db	8
   560  00FF36  08                 	db	8
   561  00FF37  14                 	db	20
   562  00FF38  14                 	db	20
   563  00FF39  18                 	db	24
   564  00FF3A  7C                 	db	124
   565  00FF3B  7C                 	db	124
   566  00FF3C  08                 	db	8
   567  00FF3D  04                 	db	4
   568  00FF3E  04                 	db	4
   569  00FF3F  08                 	db	8
   570  00FF40  48                 	db	72
   571  00FF41  54                 	db	84
   572  00FF42  54                 	db	84
   573  00FF43  54                 	db	84
   574  00FF44  20                 	db	32
   575  00FF45  04                 	db	4
   576  00FF46  3F                 	db	63
   577  00FF47  44                 	db	68
   578  00FF48  40                 	db	64
   579  00FF49  20                 	db	32
   580  00FF4A  3C                 	db	60
   581  00FF4B  40                 	db	64
   582  00FF4C  40                 	db	64
   583  00FF4D  20                 	db	32
   584  00FF4E  7C                 	db	124
   585  00FF4F  1C                 	db	28
   586  00FF50  20                 	db	32
   587  00FF51  40                 	db	64
   588  00FF52  20                 	db	32
   589  00FF53  1C                 	db	28
   590  00FF54  3C                 	db	60
   591  00FF55  40                 	db	64
   592  00FF56  30                 	db	48
   593  00FF57  40                 	db	64
   594  00FF58  3C                 	db	60
   595  00FF59  44                 	db	68
   596  00FF5A  28                 	db	40
   597  00FF5B  10                 	db	16
   598  00FF5C  28                 	db	40
   599  00FF5D  44                 	db	68
   600  00FF5E  0C                 	db	12
   601  00FF5F  50                 	db	80
   602  00FF60  50                 	db	80
   603  00FF61  50                 	db	80
   604  00FF62  3C                 	db	60
   605  00FF63  44                 	db	68
   606  00FF64  64                 	db	100
   607  00FF65  54                 	db	84
   608  00FF66  4C                 	db	76
   609  00FF67  44                 	db	68
   610  00FF68  00                 	db	0
   611  00FF69  08                 	db	8
   612  00FF6A  36                 	db	54
   613  00FF6B  41                 	db	65
   614  00FF6C  00                 	db	0
   615  00FF6D  00                 	db	0
   616  00FF6E  00                 	db	0
   617  00FF6F  7F                 	db	127
   618  00FF70  00                 	db	0
   619  00FF71  00                 	db	0
   620  00FF72  00                 	db	0
   621  00FF73  41                 	db	65
   622  00FF74  36                 	db	54
   623  00FF75  08                 	db	8
   624  00FF76  00                 	db	0
   625  00FF77  08                 	db	8
   626  00FF78  08                 	db	8
   627  00FF79  2A                 	db	42
   628  00FF7A  1C                 	db	28
   629  00FF7B  08                 	db	8
   630  00FF7C  08                 	db	8
   631  00FF7D  1C                 	db	28
   632  00FF7E  2A                 	db	42
   633  00FF7F  08                 	db	8
   634  00FF80  08                 	db	8
   635  00FF81                     __end_of_font5x8:
   636                           	opt stack 0
   637  00FF81                     _color:
   638                           	opt stack 0
   639  00FF81  01                 	db	1
   640  00FF82                     __end_of_color:
   641                           	opt stack 0
   642  00FF82                     STR_14:
   643  00FF82  54                 	db	84	;'T'
   644  00FF83  69                 	db	105	;'i'
   645  00FF84  6D                 	db	109	;'m'
   646  00FF85  65                 	db	101	;'e'
   647  00FF86  20                 	db	32
   648  00FF87  41                 	db	65	;'A'
   649  00FF88  66                 	db	102	;'f'
   650  00FF89  74                 	db	116	;'t'
   651  00FF8A  65                 	db	101	;'e'
   652  00FF8B  72                 	db	114	;'r'
   653  00FF8C  3A                 	db	58	;':'
   654  00FF8D  20                 	db	32
   655  00FF8E  00                 	db	0
   656  00FF8F                     STR_12:
   657  00FF8F  52                 	db	82	;'R'
   658  00FF90  75                 	db	117	;'u'
   659  00FF91  6E                 	db	110	;'n'
   660  00FF92  20                 	db	32
   661  00FF93  54                 	db	84	;'T'
   662  00FF94  69                 	db	105	;'i'
   663  00FF95  6D                 	db	109	;'m'
   664  00FF96  65                 	db	101	;'e'
   665  00FF97  3A                 	db	58	;':'
   666  00FF98  20                 	db	32
   667  00FF99  00                 	db	0
   668  00FF9A                     STR_7:
   669  00FF9A  53                 	db	83	;'S'
   670  00FF9B  74                 	db	116	;'t'
   671  00FF9C  61                 	db	97	;'a'
   672  00FF9D  72                 	db	114	;'r'
   673  00FF9E  74                 	db	116	;'t'
   674  00FF9F  43                 	db	67	;'C'
   675  00FFA0  6F                 	db	111	;'o'
   676  00FFA1  6C                 	db	108	;'l'
   677  00FFA2  6F                 	db	111	;'o'
   678  00FFA3  72                 	db	114	;'r'
   679  00FFA4  00                 	db	0
   680  00FFA5                     STR_6:
   681  00FFA5  42                 	db	66	;'B'
   682  00FFA6  72                 	db	114	;'r'
   683  00FFA7  69                 	db	105	;'i'
   684  00FFA8  67                 	db	103	;'g'
   685  00FFA9  68                 	db	104	;'h'
   686  00FFAA  74                 	db	116	;'t'
   687  00FFAB  6E                 	db	110	;'n'
   688  00FFAC  65                 	db	101	;'e'
   689  00FFAD  73                 	db	115	;'s'
   690  00FFAE  73                 	db	115	;'s'
   691  00FFAF  00                 	db	0
   692  00FFB0                     STR_11:
   693  00FFB0  52                 	db	82	;'R'
   694  00FFB1  75                 	db	117	;'u'
   695  00FFB2  6E                 	db	110	;'n'
   696  00FFB3  20                 	db	32
   697  00FFB4  54                 	db	84	;'T'
   698  00FFB5  69                 	db	105	;'i'
   699  00FFB6  6D                 	db	109	;'m'
   700  00FFB7  65                 	db	101	;'e'
   701  00FFB8  73                 	db	115	;'s'
   702  00FFB9  00                 	db	0
   703  00FFBA                     STR_9:
   704  00FFBA  42                 	db	66	;'B'
   705  00FFBB  61                 	db	97	;'a'
   706  00FFBC  63                 	db	99	;'c'
   707  00FFBD  6B                 	db	107	;'k'
   708  00FFBE  6C                 	db	108	;'l'
   709  00FFBF  69                 	db	105	;'i'
   710  00FFC0  67                 	db	103	;'g'
   711  00FFC1  68                 	db	104	;'h'
   712  00FFC2  74                 	db	116	;'t'
   713  00FFC3  00                 	db	0
   714  00FFC4                     STR_2:
   715  00FFC4  4D                 	db	77	;'M'
   716  00FFC5  61                 	db	97	;'a'
   717  00FFC6  69                 	db	105	;'i'
   718  00FFC7  6E                 	db	110	;'n'
   719  00FFC8  20                 	db	32
   720  00FFC9  4D                 	db	77	;'M'
   721  00FFCA  65                 	db	101	;'e'
   722  00FFCB  6E                 	db	110	;'n'
   723  00FFCC  75                 	db	117	;'u'
   724  00FFCD  00                 	db	0
   725  00FFCE                     STR_10:
   726  00FFCE  53                 	db	83	;'S'
   727  00FFCF  65                 	db	101	;'e'
   728  00FFD0  6C                 	db	108	;'l'
   729  00FFD1  53                 	db	83	;'S'
   730  00FFD2  74                 	db	116	;'t'
   731  00FFD3  61                 	db	97	;'a'
   732  00FFD4  74                 	db	116	;'t'
   733  00FFD5  65                 	db	101	;'e'
   734  00FFD6  00                 	db	0
   735  00FFD7                     STR_8:
   736  00FFD7  45                 	db	69	;'E'
   737  00FFD8  6E                 	db	110	;'n'
   738  00FFD9  64                 	db	100	;'d'
   739  00FFDA  43                 	db	67	;'C'
   740  00FFDB  6F                 	db	111	;'o'
   741  00FFDC  6C                 	db	108	;'l'
   742  00FFDD  6F                 	db	111	;'o'
   743  00FFDE  72                 	db	114	;'r'
   744  00FFDF  00                 	db	0
   745  00FFE0                     STR_4:
   746  00FFE0  52                 	db	82	;'R'
   747  00FFE1  75                 	db	117	;'u'
   748  00FFE2  6E                 	db	110	;'n'
   749  00FFE3  54                 	db	84	;'T'
   750  00FFE4  69                 	db	105	;'i'
   751  00FFE5  6D                 	db	109	;'m'
   752  00FFE6  65                 	db	101	;'e'
   753  00FFE7  00                 	db	0
   754  00FFE8                     STR_3:
   755  00FFE8  56                 	db	86	;'V'
   756  00FFE9  61                 	db	97	;'a'
   757  00FFEA  6C                 	db	108	;'l'
   758  00FFEB  75                 	db	117	;'u'
   759  00FFEC  65                 	db	101	;'e'
   760  00FFED  73                 	db	115	;'s'
   761  00FFEE  00                 	db	0
   762  00FFEF                     STR_1:
   763  00FFEF  6D                 	db	109	;'m'
   764  00FFF0  69                 	db	105	;'i'
   765  00FFF1  6E                 	db	110	;'n'
   766  00FFF2  20                 	db	32
   767  00FFF3  20                 	db	32
   768  00FFF4  20                 	db	32
   769  00FFF5  00                 	db	0
   770  00FFF6                     STR_16:
   771  00FFF6  42                 	db	66	;'B'
   772  00FFF7  61                 	db	97	;'a'
   773  00FFF8  63                 	db	99	;'c'
   774  00FFF9  6B                 	db	107	;'k'
   775  00FFFA  00                 	db	0
   776  00FFFB                     STR_5:
   777  00FFFB  6D                 	db	109	;'m'
   778  00FFFC  69                 	db	105	;'i'
   779  00FFFD  6E                 	db	110	;'n'
   780  00FFFE  00                 	db	0
   781  0000                     
   782                           ; #config settings
   783  00FFFF  00                 	db	0	; dummy byte at the end
   784  0000                     
   785                           	psect	nvBANK0
   786  00009F                     __pnvBANK0:
   787                           	opt stack 0
   788  00009F                     _timer0ReloadVal:
   789                           	opt stack 0
   790  00009F                     	ds	2
   791  0000A1                     _TMR0_InterruptHandler:
   792                           	opt stack 0
   793  0000A1                     	ds	2
   794  0000                     _CCPR4H	set	3916
   795  0000                     _CCPR4L	set	3915
   796  0000                     _CCP4CON	set	3914
   797  0000                     _CCPR3H	set	3919
   798  0000                     _CCPR3L	set	3918
   799  0000                     _CCP3CON	set	3917
   800  0000                     _CCPR2H	set	3922
   801  0000                     _CCPR2L	set	3921
   802  0000                     _CCP2CON	set	3920
   803  0000                     _IOCBbits	set	3930
   804  0000                     _WPUB	set	3931
   805  0000                     _ANCON1	set	3932
   806  0000                     _ANCON0	set	3933
   807  0000                     _CCPTMRSbits	set	3993
   808  0000                     _PORTD	set	3971
   809  0000                     _PORTA	set	3968
   810  0000                     _LATEbits	set	3981
   811  0000                     _T0CONbits	set	4053
   812  0000                     _TMR0L	set	4054
   813  0000                     _TMR0H	set	4055
   814  0000                     _T0CON	set	4053
   815  0000                     _EEDATA	set	3955
   816  0000                     _EEADR	set	3956
   817  0000                     _EEADRH	set	3957
   818  0000                     _EECON2	set	3966
   819  0000                     _EECON1bits	set	3967
   820  0000                     _TABLAT	set	4085
   821  0000                     _TBLPTRL	set	4086
   822  0000                     _TBLPTRH	set	4087
   823  0000                     _TBLPTRU	set	4088
   824  0000                     _REFOCON	set	3994
   825  0000                     _OSCTUNE	set	3995
   826  0000                     _OSCCON2	set	4050
   827  0000                     _OSCCON	set	4051
   828  0000                     _RCONbits	set	4048
   829  0000                     _PORTB	set	3969
   830  0000                     _PORTBbits	set	3969
   831  0000                     _INTCONbits	set	4082
   832  0000                     _TRISD	set	3989
   833  0000                     _TRISC	set	3988
   834  0000                     _TRISB	set	3987
   835  0000                     _TRISA	set	3986
   836  0000                     _TRISE	set	3990
   837  0000                     _LATC	set	3979
   838  0000                     _LATB	set	3978
   839  0000                     _LATA	set	3977
   840  0000                     _LATD	set	3980
   841  0000                     _LATE	set	3981
   842  0000                     _T4CONbits	set	3976
   843  0000                     _PIR4bits	set	4023
   844  0000                     _TMR4	set	3975
   845  0000                     _PR4	set	4009
   846  0000                     _T4CON	set	3976
   847                           
   848                           	psect	cinit
   849  000E5C                     __pcinit:
   850                           	opt stack 0
   851  000E5C                     start_initialization:
   852                           	opt stack 0
   853  000E5C                     __initialization:
   854                           	opt stack 0
   855                           
   856                           ; Initialize objects allocated to BANK0 (3 bytes)
   857                           ; load TBLPTR registers with __pidataBANK0
   858  000E5C  0E4F               	movlw	low __pidataBANK0
   859  000E5E  6EF6               	movwf	tblptrl,c
   860  000E60  0E16               	movlw	high __pidataBANK0
   861  000E62  6EF7               	movwf	tblptrh,c
   862  000E64  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   863  000E66  6EF8               	movwf	tblptru,c
   864  000E68  0009               	tblrd		*+	;fetch initializer
   865  000E6A  CFF5 F0A6          	movff	tablat,__pdataBANK0
   866  000E6E  0009               	tblrd		*+	;fetch initializer
   867  000E70  CFF5 F0A7          	movff	tablat,__pdataBANK0+1
   868  000E74  0009               	tblrd		*+	;fetch initializer
   869  000E76  CFF5 F0A8          	movff	tablat,__pdataBANK0+2
   870                           
   871                           ; Initialize objects allocated to COMRAM (3 bytes)
   872                           ; load TBLPTR registers with __pidataCOMRAM
   873  000E7A  0E4C               	movlw	low __pidataCOMRAM
   874  000E7C  6EF6               	movwf	tblptrl,c
   875  000E7E  0E16               	movlw	high __pidataCOMRAM
   876  000E80  6EF7               	movwf	tblptrh,c
   877  000E82  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   878  000E84  6EF8               	movwf	tblptru,c
   879  000E86  0009               	tblrd		*+	;fetch initializer
   880  000E88  CFF5 F046          	movff	tablat,__pdataCOMRAM
   881  000E8C  0009               	tblrd		*+	;fetch initializer
   882  000E8E  CFF5 F047          	movff	tablat,__pdataCOMRAM+1
   883  000E92  0009               	tblrd		*+	;fetch initializer
   884  000E94  CFF5 F048          	movff	tablat,__pdataCOMRAM+2
   885                           
   886                           ; Clear objects allocated to BANK0 (3 bytes)
   887  000E98  0100               	movlb	0
   888  000E9A  6BA5               	clrf	(__pbssBANK0+2)& (0+255),b
   889  000E9C  6BA4               	clrf	(__pbssBANK0+1)& (0+255),b
   890  000E9E  6BA3               	clrf	__pbssBANK0& (0+255),b
   891                           
   892                           ; Clear objects allocated to COMRAM (12 bytes)
   893  000EA0  EE00  F03A         	lfsr	0,__pbssCOMRAM
   894  000EA4  0E0C               	movlw	12
   895  000EA6                     clear_0:
   896  000EA6  6AEE               	clrf	postinc0,c
   897  000EA8  06E8               	decf	wreg,f,c
   898  000EAA  E1FD               	bnz	clear_0
   899  000EAC                     end_of_initialization:
   900                           	opt stack 0
   901  000EAC                     __end_of__initialization:
   902                           	opt stack 0
   903  000EAC  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   904  000EAE  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   905  000EB0  0100               	movlb	0
   906  000EB2  EF51  F009         	goto	_main	;jump to C main() function
   907                           tblptru	equ	0xFF8
   908                           tblptrh	equ	0xFF7
   909                           tblptrl	equ	0xFF6
   910                           tablat	equ	0xFF5
   911                           postinc0	equ	0xFEE
   912                           wreg	equ	0xFE8
   913                           
   914                           	psect	bssCOMRAM
   915  00003A                     __pbssCOMRAM:
   916                           	opt stack 0
   917  00003A                     _IOCB5_InterruptHandler:
   918                           	opt stack 0
   919  00003A                     	ds	2
   920  00003C                     _IOCB4_InterruptHandler:
   921                           	opt stack 0
   922  00003C                     	ds	2
   923  00003E                     	ds	1
   924  00003F                     	ds	1
   925  000040                     PIN_MANAGER_IOC@previousState:
   926                           	opt stack 0
   927  000040                     	ds	1
   928  000041                     _runMinutes:
   929                           	opt stack 0
   930  000041                     	ds	1
   931  000042                     _adjustValues:
   932                           	opt stack 0
   933  000042                     	ds	1
   934  000043                     _runTimeContext:
   935                           	opt stack 0
   936  000043                     	ds	1
   937  000044                     _currentContext:
   938                           	opt stack 0
   939  000044                     	ds	1
   940  000045                     _mainState:
   941                           	opt stack 0
   942  000045                     	ds	1
   943                           tblptru	equ	0xFF8
   944                           tblptrh	equ	0xFF7
   945                           tblptrl	equ	0xFF6
   946                           tablat	equ	0xFF5
   947                           postinc0	equ	0xFEE
   948                           wreg	equ	0xFE8
   949                           
   950                           	psect	dataCOMRAM
   951  000046                     __pdataCOMRAM:
   952                           	opt stack 0
   953  000046                     _valuesXStart:
   954                           	opt stack 0
   955  000046                     	ds	1
   956  000047                     _timeAfterFinishX:
   957                           	opt stack 0
   958  000047                     	ds	1
   959  000048                     _subMenuY:
   960                           	opt stack 0
   961  000048                     	ds	1
   962                           tblptru	equ	0xFF8
   963                           tblptrh	equ	0xFF7
   964                           tblptrl	equ	0xFF6
   965                           tablat	equ	0xFF5
   966                           postinc0	equ	0xFEE
   967                           wreg	equ	0xFE8
   968                           
   969                           	psect	bssBANK0
   970  0000A3                     __pbssBANK0:
   971                           	opt stack 0
   972  0000A3                     _screen_y:
   973                           	opt stack 0
   974  0000A3                     	ds	1
   975  0000A4                     _screen_x:
   976                           	opt stack 0
   977  0000A4                     	ds	1
   978  0000A5                     _afterMinutes:
   979                           	opt stack 0
   980  0000A5                     	ds	1
   981                           tblptru	equ	0xFF8
   982                           tblptrh	equ	0xFF7
   983                           tblptrl	equ	0xFF6
   984                           tablat	equ	0xFF5
   985                           postinc0	equ	0xFEE
   986                           wreg	equ	0xFE8
   987                           
   988                           	psect	dataBANK0
   989  0000A6                     __pdataBANK0:
   990                           	opt stack 0
   991  0000A6                     _xMenuStart:
   992                           	opt stack 0
   993  0000A6                     	ds	1
   994  0000A7                     _ARROW_SIZE:
   995                           	opt stack 0
   996  0000A7                     	ds	1
   997  0000A8                     _runTimeX:
   998                           	opt stack 0
   999  0000A8                     	ds	1
  1000                           tblptru	equ	0xFF8
  1001                           tblptrh	equ	0xFF7
  1002                           tblptrl	equ	0xFF6
  1003                           tablat	equ	0xFF5
  1004                           postinc0	equ	0xFEE
  1005                           wreg	equ	0xFE8
  1006                           
  1007                           	psect	cstackBANK0
  1008  000060                     __pcstackBANK0:
  1009                           	opt stack 0
  1010  000060                     ?___awdiv:
  1011                           	opt stack 0
  1012  000060                     ?___lwdiv:
  1013                           	opt stack 0
  1014  000060                     ?___lwmod:
  1015                           	opt stack 0
  1016  000060                     GLCD_EnableController@controller:
  1017                           	opt stack 0
  1018  000060                     GLCD_DisableController@controller:
  1019                           	opt stack 0
  1020  000060                     TMR0_SetInterruptHandler@InterruptHandler:
  1021                           	opt stack 0
  1022  000060                     ___awdiv@dividend:
  1023                           	opt stack 0
  1024  000060                     ___lwdiv@dividend:
  1025                           	opt stack 0
  1026  000060                     ___lwmod@dividend:
  1027                           	opt stack 0
  1028                           
  1029                           ; 2 bytes @ 0x0
  1030  000060                     	ds	1
  1031  000061                     GLCD_ReadStatus@status:
  1032                           	opt stack 0
  1033                           
  1034                           ; 1 bytes @ 0x1
  1035  000061                     	ds	1
  1036  000062                     ??_TMR0_Initialize:
  1037  000062                     GLCD_ReadStatus@controller:
  1038                           	opt stack 0
  1039  000062                     ___awdiv@divisor:
  1040                           	opt stack 0
  1041  000062                     ___lwdiv@divisor:
  1042                           	opt stack 0
  1043  000062                     ___lwmod@divisor:
  1044                           	opt stack 0
  1045                           
  1046                           ; 2 bytes @ 0x2
  1047  000062                     	ds	2
  1048  000064                     ___awdiv@counter:
  1049                           	opt stack 0
  1050  000064                     ___lwmod@counter:
  1051                           	opt stack 0
  1052  000064                     ___lwdiv@quotient:
  1053                           	opt stack 0
  1054                           
  1055                           ; 2 bytes @ 0x4
  1056  000064                     	ds	1
  1057  000065                     ___awdiv@sign:
  1058                           	opt stack 0
  1059                           
  1060                           ; 1 bytes @ 0x5
  1061  000065                     	ds	1
  1062  000066                     ___lwdiv@counter:
  1063                           	opt stack 0
  1064  000066                     ___awdiv@quotient:
  1065                           	opt stack 0
  1066                           
  1067                           ; 2 bytes @ 0x6
  1068  000066                     	ds	1
  1069  000067                     utoa@buf:
  1070                           	opt stack 0
  1071                           
  1072                           ; 2 bytes @ 0x7
  1073  000067                     	ds	1
  1074  000068                     ??_GLCD_WriteData:
  1075  000068                     ??_GLCD_ReadData:
  1076  000068                     GLCD_WriteCommand@controller:
  1077                           	opt stack 0
  1078                           
  1079                           ; 1 bytes @ 0x8
  1080  000068                     	ds	1
  1081  000069                     ??_GLCD_WriteCommand:
  1082  000069                     GLCD_ReadData@data:
  1083                           	opt stack 0
  1084  000069                     GLCD_WriteData@dataToWrite:
  1085                           	opt stack 0
  1086  000069                     utoa@val:
  1087                           	opt stack 0
  1088                           
  1089                           ; 2 bytes @ 0x9
  1090  000069                     	ds	1
  1091  00006A                     GLCD_WriteChar@charToWrite:
  1092                           	opt stack 0
  1093  00006A                     GLCD_WriteCommand@commandToWrite:
  1094                           	opt stack 0
  1095                           
  1096                           ; 1 bytes @ 0xA
  1097  00006A                     	ds	1
  1098  00006B                     GLCD_Initalize@i:
  1099                           	opt stack 0
  1100  00006B                     GLCD_GoTo@y:
  1101                           	opt stack 0
  1102  00006B                     GLCD_WriteChar@i:
  1103                           	opt stack 0
  1104  00006B                     utoa@base:
  1105                           	opt stack 0
  1106                           
  1107                           ; 2 bytes @ 0xB
  1108  00006B                     	ds	1
  1109  00006C                     GLCD_GoTo@x:
  1110                           	opt stack 0
  1111                           
  1112                           ; 1 bytes @ 0xC
  1113  00006C                     	ds	1
  1114  00006D                     GLCD_GoTo@i:
  1115                           	opt stack 0
  1116  00006D                     GLCD_WriteString@stringToWrite:
  1117                           	opt stack 0
  1118  00006D                     utoa@v:
  1119                           	opt stack 0
  1120                           
  1121                           ; 2 bytes @ 0xD
  1122  00006D                     	ds	1
  1123  00006E                     ??_Clear_Arrow_Column:
  1124  00006E                     GLCD_ClearScreen@i:
  1125                           	opt stack 0
  1126  00006E                     GLCD_SetPixel@y:
  1127                           	opt stack 0
  1128  00006E                     Clear_runTime_Arrows@i:
  1129                           	opt stack 0
  1130                           
  1131                           ; 1 bytes @ 0xE
  1132  00006E                     	ds	1
  1133  00006F                     GLCD_ClearScreen@j:
  1134                           	opt stack 0
  1135  00006F                     GLCD_SetPixel@color:
  1136                           	opt stack 0
  1137  00006F                     utoa@c:
  1138                           	opt stack 0
  1139                           
  1140                           ; 1 bytes @ 0xF
  1141  00006F                     	ds	1
  1142  000070                     ??_GLCD_SetPixel:
  1143  000070                     itoa@buf:
  1144                           	opt stack 0
  1145                           
  1146                           ; 2 bytes @ 0x10
  1147  000070                     	ds	2
  1148  000072                     GLCD_SetPixel@tmp:
  1149                           	opt stack 0
  1150  000072                     itoa@val:
  1151                           	opt stack 0
  1152                           
  1153                           ; 2 bytes @ 0x12
  1154  000072                     	ds	1
  1155  000073                     GLCD_SetPixel@x:
  1156                           	opt stack 0
  1157                           
  1158                           ; 1 bytes @ 0x13
  1159  000073                     	ds	1
  1160  000074                     _GLCD_SetPixel$1758:
  1161                           	opt stack 0
  1162  000074                     itoa@base:
  1163                           	opt stack 0
  1164                           
  1165                           ; 2 bytes @ 0x14
  1166  000074                     	ds	1
  1167  000075                     Clear_Arrow_Column@j:
  1168                           	opt stack 0
  1169  000075                     GLCD_Line@X1:
  1170                           	opt stack 0
  1171                           
  1172                           ; 2 bytes @ 0x15
  1173  000075                     	ds	1
  1174  000076                     Clear_Arrow_Column@i:
  1175                           	opt stack 0
  1176  000076                     itoa@cp:
  1177                           	opt stack 0
  1178                           
  1179                           ; 2 bytes @ 0x16
  1180  000076                     	ds	1
  1181  000077                     GLCD_Line@Y1:
  1182                           	opt stack 0
  1183                           
  1184                           ; 2 bytes @ 0x17
  1185  000077                     	ds	2
  1186  000079                     GLCD_Line@X2:
  1187                           	opt stack 0
  1188                           
  1189                           ; 2 bytes @ 0x19
  1190  000079                     	ds	2
  1191  00007B                     GLCD_Line@Y2:
  1192                           	opt stack 0
  1193                           
  1194                           ; 2 bytes @ 0x1B
  1195  00007B                     	ds	2
  1196  00007D                     ??_GLCD_Line:
  1197                           
  1198                           ; 1 bytes @ 0x1D
  1199  00007D                     	ds	2
  1200  00007F                     GLCD_Line@TwoDxAccumulatedError:
  1201                           	opt stack 0
  1202                           
  1203                           ; 2 bytes @ 0x1F
  1204  00007F                     	ds	2
  1205  000081                     GLCD_Line@TwoDyAccumulatedError:
  1206                           	opt stack 0
  1207                           
  1208                           ; 2 bytes @ 0x21
  1209  000081                     	ds	2
  1210  000083                     GLCD_Line@Xinc:
  1211                           	opt stack 0
  1212                           
  1213                           ; 2 bytes @ 0x23
  1214  000083                     	ds	2
  1215  000085                     GLCD_Line@Yinc:
  1216                           	opt stack 0
  1217                           
  1218                           ; 2 bytes @ 0x25
  1219  000085                     	ds	2
  1220  000087                     GLCD_Line@TwoDx:
  1221                           	opt stack 0
  1222                           
  1223                           ; 2 bytes @ 0x27
  1224  000087                     	ds	2
  1225  000089                     GLCD_Line@TwoDy:
  1226                           	opt stack 0
  1227                           
  1228                           ; 2 bytes @ 0x29
  1229  000089                     	ds	2
  1230  00008B                     GLCD_Line@CurrentX:
  1231                           	opt stack 0
  1232                           
  1233                           ; 2 bytes @ 0x2B
  1234  00008B                     	ds	2
  1235  00008D                     GLCD_Line@CurrentY:
  1236                           	opt stack 0
  1237                           
  1238                           ; 2 bytes @ 0x2D
  1239  00008D                     	ds	2
  1240  00008F                     GLCD_Line@Dx:
  1241                           	opt stack 0
  1242                           
  1243                           ; 2 bytes @ 0x2F
  1244  00008F                     	ds	2
  1245  000091                     GLCD_Line@Dy:
  1246                           	opt stack 0
  1247                           
  1248                           ; 2 bytes @ 0x31
  1249  000091                     	ds	2
  1250  000093                     Initialize_Menus@display:
  1251                           	opt stack 0
  1252  000093                     Draw_runTime_Menu@display:
  1253                           	opt stack 0
  1254                           
  1255                           ; 10 bytes @ 0x33
  1256  000093                     	ds	10
  1257  00009D                     ??_Check_Buttons:
  1258                           
  1259                           ; 1 bytes @ 0x3D
  1260  00009D                     	ds	1
  1261  00009E                     ??_main:
  1262                           
  1263                           ; 1 bytes @ 0x3E
  1264  00009E                     	ds	1
  1265                           tblptru	equ	0xFF8
  1266                           tblptrh	equ	0xFF7
  1267                           tblptrl	equ	0xFF6
  1268                           tablat	equ	0xFF5
  1269                           postinc0	equ	0xFEE
  1270                           wreg	equ	0xFE8
  1271                           
  1272                           	psect	cstackCOMRAM
  1273  000001                     __pcstackCOMRAM:
  1274                           	opt stack 0
  1275  000001                     ?i2___awdiv:
  1276                           	opt stack 0
  1277  000001                     ?i2___lwdiv:
  1278                           	opt stack 0
  1279  000001                     ?i2___lwmod:
  1280                           	opt stack 0
  1281  000001                     i2GLCD_EnableController@controller:
  1282                           	opt stack 0
  1283  000001                     i2GLCD_DisableController@controller:
  1284                           	opt stack 0
  1285  000001                     i2___awdiv@dividend:
  1286                           	opt stack 0
  1287  000001                     i2___lwdiv@dividend:
  1288                           	opt stack 0
  1289  000001                     i2___lwmod@dividend:
  1290                           	opt stack 0
  1291                           
  1292                           ; 2 bytes @ 0x0
  1293  000001                     	ds	1
  1294  000002                     i2GLCD_ReadStatus@status:
  1295                           	opt stack 0
  1296                           
  1297                           ; 1 bytes @ 0x1
  1298  000002                     	ds	1
  1299  000003                     i2GLCD_ReadStatus@controller:
  1300                           	opt stack 0
  1301  000003                     i2___awdiv@divisor:
  1302                           	opt stack 0
  1303  000003                     i2___lwdiv@divisor:
  1304                           	opt stack 0
  1305  000003                     i2___lwmod@divisor:
  1306                           	opt stack 0
  1307                           
  1308                           ; 2 bytes @ 0x2
  1309  000003                     	ds	2
  1310  000005                     i2___awdiv@counter:
  1311                           	opt stack 0
  1312  000005                     i2___lwmod@counter:
  1313                           	opt stack 0
  1314  000005                     i2___lwdiv@quotient:
  1315                           	opt stack 0
  1316                           
  1317                           ; 2 bytes @ 0x4
  1318  000005                     	ds	1
  1319  000006                     i2___awdiv@sign:
  1320                           	opt stack 0
  1321                           
  1322                           ; 1 bytes @ 0x5
  1323  000006                     	ds	1
  1324  000007                     i2___lwdiv@counter:
  1325                           	opt stack 0
  1326  000007                     i2___awdiv@quotient:
  1327                           	opt stack 0
  1328                           
  1329                           ; 2 bytes @ 0x6
  1330  000007                     	ds	1
  1331  000008                     i2utoa@buf:
  1332                           	opt stack 0
  1333                           
  1334                           ; 2 bytes @ 0x7
  1335  000008                     	ds	1
  1336  000009                     ??i2_GLCD_WriteData:
  1337  000009                     i2GLCD_WriteCommand@controller:
  1338                           	opt stack 0
  1339                           
  1340                           ; 1 bytes @ 0x8
  1341  000009                     	ds	1
  1342  00000A                     ??i2_GLCD_WriteCommand:
  1343  00000A                     i2GLCD_WriteData@dataToWrite:
  1344                           	opt stack 0
  1345  00000A                     i2utoa@val:
  1346                           	opt stack 0
  1347                           
  1348                           ; 2 bytes @ 0x9
  1349  00000A                     	ds	1
  1350  00000B                     i2GLCD_WriteChar@charToWrite:
  1351                           	opt stack 0
  1352  00000B                     i2GLCD_WriteCommand@commandToWrite:
  1353                           	opt stack 0
  1354                           
  1355                           ; 1 bytes @ 0xA
  1356  00000B                     	ds	1
  1357  00000C                     i2GLCD_GoTo@y:
  1358                           	opt stack 0
  1359  00000C                     i2GLCD_WriteChar@i:
  1360                           	opt stack 0
  1361  00000C                     i2utoa@base:
  1362                           	opt stack 0
  1363                           
  1364                           ; 2 bytes @ 0xB
  1365  00000C                     	ds	1
  1366  00000D                     i2GLCD_GoTo@x:
  1367                           	opt stack 0
  1368                           
  1369                           ; 1 bytes @ 0xC
  1370  00000D                     	ds	1
  1371  00000E                     i2GLCD_GoTo@i:
  1372                           	opt stack 0
  1373  00000E                     i2GLCD_WriteString@stringToWrite:
  1374                           	opt stack 0
  1375  00000E                     i2utoa@v:
  1376                           	opt stack 0
  1377                           
  1378                           ; 2 bytes @ 0xD
  1379  00000E                     	ds	1
  1380  00000F                     ??i2_Clear_Arrow_Column:
  1381  00000F                     i2Clear_runTime_Arrows@i:
  1382                           	opt stack 0
  1383                           
  1384                           ; 1 bytes @ 0xE
  1385  00000F                     	ds	1
  1386  000010                     i2utoa@c:
  1387                           	opt stack 0
  1388                           
  1389                           ; 1 bytes @ 0xF
  1390  000010                     	ds	1
  1391  000011                     i2itoa@buf:
  1392                           	opt stack 0
  1393                           
  1394                           ; 2 bytes @ 0x10
  1395  000011                     	ds	2
  1396  000013                     i2itoa@val:
  1397                           	opt stack 0
  1398                           
  1399                           ; 2 bytes @ 0x12
  1400  000013                     	ds	2
  1401  000015                     i2itoa@base:
  1402                           	opt stack 0
  1403                           
  1404                           ; 2 bytes @ 0x14
  1405  000015                     	ds	1
  1406  000016                     i2Clear_Arrow_Column@j:
  1407                           	opt stack 0
  1408                           
  1409                           ; 1 bytes @ 0x15
  1410  000016                     	ds	1
  1411  000017                     i2Clear_Arrow_Column@i:
  1412                           	opt stack 0
  1413  000017                     i2itoa@cp:
  1414                           	opt stack 0
  1415                           
  1416                           ; 2 bytes @ 0x16
  1417  000017                     	ds	1
  1418  000018                     Main_Menu_Function@result:
  1419                           	opt stack 0
  1420                           
  1421                           ; 1 bytes @ 0x17
  1422  000018                     	ds	1
  1423  000019                     Run_Time_Menu_Function@display:
  1424                           	opt stack 0
  1425                           
  1426                           ; 10 bytes @ 0x18
  1427  000019                     	ds	10
  1428  000023                     Run_Time_Menu_Function@result:
  1429                           	opt stack 0
  1430                           
  1431                           ; 1 bytes @ 0x22
  1432  000023                     	ds	1
  1433  000024                     PIN_MANAGER_IOC@currentState:
  1434                           	opt stack 0
  1435                           
  1436                           ; 1 bytes @ 0x23
  1437  000024                     	ds	1
  1438  000025                     PIN_MANAGER_IOC@CHB:
  1439                           	opt stack 0
  1440                           
  1441                           ; 1 bytes @ 0x24
  1442  000025                     	ds	1
  1443  000026                     PIN_MANAGER_IOC@CHA:
  1444                           	opt stack 0
  1445                           
  1446                           ; 1 bytes @ 0x25
  1447  000026                     	ds	1
  1448  000027                     PIN_MANAGER_IOC@result:
  1449                           	opt stack 0
  1450                           
  1451                           ; 1 bytes @ 0x26
  1452  000027                     	ds	1
  1453  000028                     ??_INTERRUPT_InterruptManager:
  1454                           
  1455                           ; 1 bytes @ 0x27
  1456  000028                     	ds	18
  1457                           tblptru	equ	0xFF8
  1458                           tblptrh	equ	0xFF7
  1459                           tblptrl	equ	0xFF6
  1460                           tablat	equ	0xFF5
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           
  1464 ;;
  1465 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1466 ;;
  1467 ;; *************** function _main *****************
  1468 ;; Defined at:
  1469 ;;		line 58 in file "main.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1485 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1486 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1487 ;;Total ram usage:        1 bytes
  1488 ;; Hardware stack levels required when called:   17
  1489 ;; This function calls:
  1490 ;;		_Check_Buttons
  1491 ;;		_Draw_Arrow
  1492 ;;		_GLCD_ClearScreen
  1493 ;;		_GLCD_Initalize
  1494 ;;		_Initialize_Menus
  1495 ;;		_SYSTEM_Initialize
  1496 ;; This function is called by:
  1497 ;;		Startup code after reset
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text0
  1502  0012A2                     __ptext0:
  1503                           	opt stack 0
  1504  0012A2                     _main:
  1505                           	opt stack 14
  1506                           
  1507                           ;main.c: 61: SYSTEM_Initialize();
  1508                           
  1509                           ;incstack = 0
  1510  0012A2  EC9D  F00A         	call	_SYSTEM_Initialize	;wreg free
  1511                           
  1512                           ;main.c: 80: (INTCONbits.GIE = 1);
  1513  0012A6  8EF2               	bsf	intcon,7,c	;volatile
  1514                           
  1515                           ;main.c: 86: (INTCONbits.PEIE = 1);
  1516  0012A8  8CF2               	bsf	intcon,6,c	;volatile
  1517                           
  1518                           ;main.c: 94: do { LATEbits.LATE1 = 1; } while(0);
  1519  0012AA  828D               	bsf	3981,1,c	;volatile
  1520                           
  1521                           ;main.c: 95: _delay((unsigned long)((10)*(8000000/4000.0)));
  1522  0012AC  0E1A               	movlw	26
  1523  0012AE  0100               	movlb	0	; () banked
  1524  0012B0  6F9E               	movwf	??_main& (0+255),b
  1525  0012B2  0EF8               	movlw	248
  1526  0012B4                     u2347:
  1527  0012B4  2EE8               	decfsz	wreg,f,c
  1528  0012B6  D7FE               	bra	u2347
  1529  0012B8  2F9E               	decfsz	??_main& (0+255),f,b
  1530  0012BA  D7FC               	bra	u2347
  1531  0012BC  F000               	nop	
  1532                           
  1533                           ;main.c: 96: GLCD_Initalize();
  1534  0012BE  ECAE  F00A         	call	_GLCD_Initalize	;wreg free
  1535                           
  1536                           ;main.c: 97: GLCD_ClearScreen();
  1537  0012C2  ECC4  F009         	call	_GLCD_ClearScreen	;wreg free
  1538                           
  1539                           ;main.c: 100: Initialize_Menus();
  1540  0012C6  EC36  F001         	call	_Initialize_Menus	;wreg free
  1541                           
  1542                           ;main.c: 102: currentContext = mainMenu;
  1543  0012CA  0E00               	movlw	0
  1544  0012CC  6E44               	movwf	_currentContext,c
  1545                           
  1546                           ;main.c: 103: mainState = setRunTime;
  1547  0012CE  0E02               	movlw	2
  1548  0012D0  6E45               	movwf	_mainState,c
  1549                           
  1550                           ;main.c: 104: Draw_Arrow();
  1551  0012D2  ECCB  F008         	call	_Draw_Arrow	;wreg free
  1552  0012D6                     
  1553                           ;main.c: 107: {
  1554                           ;main.c: 109: Check_Buttons();
  1555  0012D6  EC7E  F002         	call	_Check_Buttons	;wreg free
  1556  0012DA  D7FD               	goto	l389
  1557  0012DC                     __end_of_main:
  1558                           	opt stack 0
  1559                           tblptru	equ	0xFF8
  1560                           tblptrh	equ	0xFF7
  1561                           tblptrl	equ	0xFF6
  1562                           tablat	equ	0xFF5
  1563                           intcon	equ	0xFF2
  1564                           postinc0	equ	0xFEE
  1565                           wreg	equ	0xFE8
  1566                           
  1567 ;; *************** function _SYSTEM_Initialize *****************
  1568 ;; Defined at:
  1569 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1587 ;;Total ram usage:        0 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:   11
  1590 ;; This function calls:
  1591 ;;		_INTERRUPT_Initialize
  1592 ;;		_OSCILLATOR_Initialize
  1593 ;;		_PIN_MANAGER_Initialize
  1594 ;;		_PWM2_Initialize
  1595 ;;		_PWM3_Initialize
  1596 ;;		_PWM4_Initialize
  1597 ;;		_TMR0_Initialize
  1598 ;;		_TMR4_Initialize
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text1
  1605  00153A                     __ptext1:
  1606                           	opt stack 0
  1607  00153A                     _SYSTEM_Initialize:
  1608                           	opt stack 19
  1609                           
  1610                           ;mcc.c: 114: INTERRUPT_Initialize();
  1611                           
  1612                           ;incstack = 0
  1613  00153A  EC20  F00B         	call	_INTERRUPT_Initialize	;wreg free
  1614                           
  1615                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1616  00153E  EC8B  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  1617                           
  1618                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1619  001542  EC09  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  1620                           
  1621                           ;mcc.c: 117: PWM2_Initialize();
  1622  001546  EC00  F00B         	call	_PWM2_Initialize	;wreg free
  1623                           
  1624                           ;mcc.c: 118: PWM4_Initialize();
  1625  00154A  ECEE  F00A         	call	_PWM4_Initialize	;wreg free
  1626                           
  1627                           ;mcc.c: 119: TMR4_Initialize();
  1628  00154E  ECD0  F00A         	call	_TMR4_Initialize	;wreg free
  1629                           
  1630                           ;mcc.c: 120: PWM3_Initialize();
  1631  001552  ECF7  F00A         	call	_PWM3_Initialize	;wreg free
  1632                           
  1633                           ;mcc.c: 121: TMR0_Initialize();
  1634  001556  EC6E  F009         	call	_TMR0_Initialize	;wreg free
  1635  00155A  0012               	return		;funcret
  1636  00155C                     __end_of_SYSTEM_Initialize:
  1637                           	opt stack 0
  1638                           tblptru	equ	0xFF8
  1639                           tblptrh	equ	0xFF7
  1640                           tblptrl	equ	0xFF6
  1641                           tablat	equ	0xFF5
  1642                           intcon	equ	0xFF2
  1643                           postinc0	equ	0xFEE
  1644                           wreg	equ	0xFE8
  1645                           
  1646 ;; *************** function _TMR4_Initialize *****************
  1647 ;; Defined at:
  1648 ;;		line 61 in file "mcc_generated_files/tmr4.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1666 ;;Total ram usage:        0 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:   10
  1669 ;; This function calls:
  1670 ;;		_TMR4_StartTimer
  1671 ;; This function is called by:
  1672 ;;		_SYSTEM_Initialize
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text2
  1677  0015A0                     __ptext2:
  1678                           	opt stack 0
  1679  0015A0                     _TMR4_Initialize:
  1680                           	opt stack 19
  1681                           
  1682                           ;tmr4.c: 66: T4CON = 0x02;
  1683                           
  1684                           ;incstack = 0
  1685  0015A0  0E02               	movlw	2
  1686  0015A2  6E88               	movwf	3976,c	;volatile
  1687                           
  1688                           ;tmr4.c: 69: PR4 = 0xF9;
  1689  0015A4  0EF9               	movlw	249
  1690  0015A6  6EA9               	movwf	4009,c	;volatile
  1691                           
  1692                           ;tmr4.c: 72: TMR4 = 0x00;
  1693  0015A8  0E00               	movlw	0
  1694  0015AA  6E87               	movwf	3975,c	;volatile
  1695                           
  1696                           ;tmr4.c: 75: PIR4bits.TMR4IF = 0;
  1697  0015AC  9EB7               	bcf	4023,7,c	;volatile
  1698                           
  1699                           ;tmr4.c: 78: TMR4_StartTimer();
  1700  0015AE  EC1C  F00B         	call	_TMR4_StartTimer	;wreg free
  1701  0015B2  0012               	return		;funcret
  1702  0015B4                     __end_of_TMR4_Initialize:
  1703                           	opt stack 0
  1704                           tblptru	equ	0xFF8
  1705                           tblptrh	equ	0xFF7
  1706                           tblptrl	equ	0xFF6
  1707                           tablat	equ	0xFF5
  1708                           intcon	equ	0xFF2
  1709                           postinc0	equ	0xFEE
  1710                           wreg	equ	0xFE8
  1711                           
  1712 ;; *************** function _TMR4_StartTimer *****************
  1713 ;; Defined at:
  1714 ;;		line 81 in file "mcc_generated_files/tmr4.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		None
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    9
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_TMR4_Initialize
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text3
  1743  001638                     __ptext3:
  1744                           	opt stack 0
  1745  001638                     _TMR4_StartTimer:
  1746                           	opt stack 19
  1747                           
  1748                           ;tmr4.c: 84: T4CONbits.TMR4ON = 1;
  1749                           
  1750                           ;incstack = 0
  1751  001638  8488               	bsf	3976,2,c	;volatile
  1752  00163A  0012               	return		;funcret
  1753  00163C                     __end_of_TMR4_StartTimer:
  1754                           	opt stack 0
  1755                           tblptru	equ	0xFF8
  1756                           tblptrh	equ	0xFF7
  1757                           tblptrl	equ	0xFF6
  1758                           tablat	equ	0xFF5
  1759                           intcon	equ	0xFF2
  1760                           postinc0	equ	0xFEE
  1761                           wreg	equ	0xFE8
  1762                           
  1763 ;; *************** function _TMR0_Initialize *****************
  1764 ;; Defined at:
  1765 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2, status,0, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1781 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1782 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1783 ;;Total ram usage:        2 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:   10
  1786 ;; This function calls:
  1787 ;;		_TMR0_SetInterruptHandler
  1788 ;;		_TMR0_StartTimer
  1789 ;; This function is called by:
  1790 ;;		_SYSTEM_Initialize
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text4
  1795  0012DC                     __ptext4:
  1796                           	opt stack 0
  1797  0012DC                     _TMR0_Initialize:
  1798                           	opt stack 19
  1799                           
  1800                           ;tmr0.c: 71: T0CON = 0x14;
  1801                           
  1802                           ;incstack = 0
  1803  0012DC  0E14               	movlw	20
  1804  0012DE  6ED5               	movwf	4053,c	;volatile
  1805                           
  1806                           ;tmr0.c: 74: TMR0H = 0x0B;
  1807  0012E0  0E0B               	movlw	11
  1808  0012E2  6ED7               	movwf	4055,c	;volatile
  1809                           
  1810                           ;tmr0.c: 77: TMR0L = 0xDB;
  1811  0012E4  0EDB               	movlw	219
  1812  0012E6  6ED6               	movwf	4054,c	;volatile
  1813                           
  1814                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  1815  0012E8  50D6               	movf	4054,w,c	;volatile
  1816  0012EA  CFD7 F062          	movff	4055,??_TMR0_Initialize	;volatile
  1817  0012EE  0100               	movlb	0	; () banked
  1818  0012F0  6B63               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  1819  0012F2  C062  F063         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1820  0012F6  6B62               	clrf	??_TMR0_Initialize& (0+255),b
  1821  0012F8  1162               	iorwf	??_TMR0_Initialize& (0+255),w,b
  1822  0012FA  6F9F               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  1823  0012FC  5163               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  1824  0012FE  6FA0               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  1828  001300  94F2               	bcf	intcon,2,c	;volatile
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  1832  001302  8AF2               	bsf	intcon,5,c	;volatile
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1836  001304  0E52               	movlw	low _TMR0_DefaultInterruptHandler
  1837  001306  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  1838  001308  0E16               	movlw	high _TMR0_DefaultInterruptHandler
  1839  00130A  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1840  00130C  EC12  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  1841                           
  1842                           ;tmr0.c: 92: TMR0_StartTimer();
  1843  001310  EC1E  F00B         	call	_TMR0_StartTimer	;wreg free
  1844  001314  0012               	return		;funcret
  1845  001316                     __end_of_TMR0_Initialize:
  1846                           	opt stack 0
  1847                           tblptru	equ	0xFF8
  1848                           tblptrh	equ	0xFF7
  1849                           tblptrl	equ	0xFF6
  1850                           tablat	equ	0xFF5
  1851                           intcon	equ	0xFF2
  1852                           postinc0	equ	0xFEE
  1853                           wreg	equ	0xFE8
  1854                           
  1855 ;; *************** function _TMR0_StartTimer *****************
  1856 ;; Defined at:
  1857 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		None
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1875 ;;Total ram usage:        0 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; Hardware stack levels required when called:    9
  1878 ;; This function calls:
  1879 ;;		Nothing
  1880 ;; This function is called by:
  1881 ;;		_TMR0_Initialize
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text5
  1886  00163C                     __ptext5:
  1887                           	opt stack 0
  1888  00163C                     _TMR0_StartTimer:
  1889                           	opt stack 19
  1890                           
  1891                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
  1892                           
  1893                           ;incstack = 0
  1894  00163C  8ED5               	bsf	4053,7,c	;volatile
  1895  00163E  0012               	return		;funcret
  1896  001640                     __end_of_TMR0_StartTimer:
  1897                           	opt stack 0
  1898                           tblptru	equ	0xFF8
  1899                           tblptrh	equ	0xFF7
  1900                           tblptrl	equ	0xFF6
  1901                           tablat	equ	0xFF5
  1902                           intcon	equ	0xFF2
  1903                           postinc0	equ	0xFEE
  1904                           wreg	equ	0xFE8
  1905                           
  1906 ;; *************** function _TMR0_SetInterruptHandler *****************
  1907 ;; Defined at:
  1908 ;;		line 154 in file "mcc_generated_files/tmr0.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1911 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1923 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1926 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1927 ;;Total ram usage:        2 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    9
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_TMR0_Initialize
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text6
  1938  001624                     __ptext6:
  1939                           	opt stack 0
  1940  001624                     _TMR0_SetInterruptHandler:
  1941                           	opt stack 19
  1942                           
  1943                           ;tmr0.c: 155: TMR0_InterruptHandler = InterruptHandler;
  1944                           
  1945                           ;incstack = 0
  1946  001624  C060  F0A1         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1947  001628  C061  F0A2         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1948  00162C  0012               	return		;funcret
  1949  00162E                     __end_of_TMR0_SetInterruptHandler:
  1950                           	opt stack 0
  1951                           tblptru	equ	0xFF8
  1952                           tblptrh	equ	0xFF7
  1953                           tblptrl	equ	0xFF6
  1954                           tablat	equ	0xFF5
  1955                           intcon	equ	0xFF2
  1956                           postinc0	equ	0xFEE
  1957                           wreg	equ	0xFE8
  1958                           
  1959 ;; *************** function _PWM4_Initialize *****************
  1960 ;; Defined at:
  1961 ;;		line 63 in file "mcc_generated_files/pwm4.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1979 ;;Total ram usage:        0 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    9
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_SYSTEM_Initialize
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text7
  1990  0015DC                     __ptext7:
  1991                           	opt stack 0
  1992  0015DC                     _PWM4_Initialize:
  1993                           	opt stack 20
  1994                           
  1995                           ;pwm4.c: 68: CCP4CON = 0x3C;
  1996                           
  1997                           ;incstack = 0
  1998  0015DC  0E3C               	movlw	60
  1999  0015DE  010F               	movlb	15	; () banked
  2000  0015E0  6F4A               	movwf	74,b	;volatile
  2001                           
  2002                           ;pwm4.c: 71: CCPR4L = 0x7C;
  2003  0015E2  0E7C               	movlw	124
  2004  0015E4  6F4B               	movwf	75,b	;volatile
  2005                           
  2006                           ;pwm4.c: 74: CCPR4H = 0x00;
  2007  0015E6  0E00               	movlw	0
  2008  0015E8  6F4C               	movwf	76,b	;volatile
  2009                           
  2010                           ; BSR set to: 15
  2011                           ;pwm4.c: 77: CCPTMRSbits.C4TSEL = 0x1;
  2012  0015EA  8699               	bsf	3993,3,c	;volatile
  2013                           
  2014                           ; BSR set to: 15
  2015  0015EC  0012               	return		;funcret
  2016  0015EE                     __end_of_PWM4_Initialize:
  2017                           	opt stack 0
  2018                           tblptru	equ	0xFF8
  2019                           tblptrh	equ	0xFF7
  2020                           tblptrl	equ	0xFF6
  2021                           tablat	equ	0xFF5
  2022                           intcon	equ	0xFF2
  2023                           postinc0	equ	0xFEE
  2024                           wreg	equ	0xFE8
  2025                           
  2026 ;; *************** function _PWM3_Initialize *****************
  2027 ;; Defined at:
  2028 ;;		line 63 in file "mcc_generated_files/pwm3.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    9
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_SYSTEM_Initialize
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text8
  2057  0015EE                     __ptext8:
  2058                           	opt stack 0
  2059  0015EE                     _PWM3_Initialize:
  2060                           	opt stack 20
  2061                           
  2062                           ;pwm3.c: 68: CCP3CON = 0x3C;
  2063                           
  2064                           ; BSR set to: 15
  2065                           ;incstack = 0
  2066  0015EE  0E3C               	movlw	60
  2067  0015F0  010F               	movlb	15	; () banked
  2068  0015F2  6F4D               	movwf	77,b	;volatile
  2069                           
  2070                           ;pwm3.c: 71: CCPR3L = 0x7C;
  2071  0015F4  0E7C               	movlw	124
  2072  0015F6  6F4E               	movwf	78,b	;volatile
  2073                           
  2074                           ;pwm3.c: 74: CCPR3H = 0x00;
  2075  0015F8  0E00               	movlw	0
  2076  0015FA  6F4F               	movwf	79,b	;volatile
  2077                           
  2078                           ; BSR set to: 15
  2079                           ;pwm3.c: 77: CCPTMRSbits.C3TSEL = 0x1;
  2080  0015FC  8499               	bsf	3993,2,c	;volatile
  2081                           
  2082                           ; BSR set to: 15
  2083  0015FE  0012               	return		;funcret
  2084  001600                     __end_of_PWM3_Initialize:
  2085                           	opt stack 0
  2086                           tblptru	equ	0xFF8
  2087                           tblptrh	equ	0xFF7
  2088                           tblptrl	equ	0xFF6
  2089                           tablat	equ	0xFF5
  2090                           intcon	equ	0xFF2
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           
  2094 ;; *************** function _PWM2_Initialize *****************
  2095 ;; Defined at:
  2096 ;;		line 63 in file "mcc_generated_files/pwm2.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2114 ;;Total ram usage:        0 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    9
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_SYSTEM_Initialize
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text9
  2125  001600                     __ptext9:
  2126                           	opt stack 0
  2127  001600                     _PWM2_Initialize:
  2128                           	opt stack 20
  2129                           
  2130                           ;pwm2.c: 68: CCP2CON = 0x3C;
  2131                           
  2132                           ; BSR set to: 15
  2133                           ;incstack = 0
  2134  001600  0E3C               	movlw	60
  2135  001602  010F               	movlb	15	; () banked
  2136  001604  6F50               	movwf	80,b	;volatile
  2137                           
  2138                           ;pwm2.c: 71: CCPR2L = 0x7C;
  2139  001606  0E7C               	movlw	124
  2140  001608  6F51               	movwf	81,b	;volatile
  2141                           
  2142                           ;pwm2.c: 74: CCPR2H = 0x00;
  2143  00160A  0E00               	movlw	0
  2144  00160C  6F52               	movwf	82,b	;volatile
  2145                           
  2146                           ; BSR set to: 15
  2147                           ;pwm2.c: 77: CCPTMRSbits.C2TSEL = 0x1;
  2148  00160E  8299               	bsf	3993,1,c	;volatile
  2149                           
  2150                           ; BSR set to: 15
  2151  001610  0012               	return		;funcret
  2152  001612                     __end_of_PWM2_Initialize:
  2153                           	opt stack 0
  2154                           tblptru	equ	0xFF8
  2155                           tblptrh	equ	0xFF7
  2156                           tblptrl	equ	0xFF6
  2157                           tablat	equ	0xFF5
  2158                           intcon	equ	0xFF2
  2159                           postinc0	equ	0xFEE
  2160                           wreg	equ	0xFE8
  2161                           
  2162 ;; *************** function _PIN_MANAGER_Initialize *****************
  2163 ;; Defined at:
  2164 ;;		line 61 in file "mcc_generated_files/pin_manager.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;		None
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2182 ;;Total ram usage:        0 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    9
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_SYSTEM_Initialize
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text10
  2193  001316                     __ptext10:
  2194                           	opt stack 0
  2195  001316                     _PIN_MANAGER_Initialize:
  2196                           	opt stack 20
  2197                           
  2198                           ;pin_manager.c: 66: LATE = 0x00;
  2199                           
  2200                           ; BSR set to: 15
  2201                           ;incstack = 0
  2202  001316  0E00               	movlw	0
  2203  001318  6E8D               	movwf	3981,c	;volatile
  2204                           
  2205                           ;pin_manager.c: 67: LATD = 0x00;
  2206  00131A  0E00               	movlw	0
  2207  00131C  6E8C               	movwf	3980,c	;volatile
  2208                           
  2209                           ;pin_manager.c: 68: LATA = 0x00;
  2210  00131E  0E00               	movlw	0
  2211  001320  6E89               	movwf	3977,c	;volatile
  2212                           
  2213                           ;pin_manager.c: 69: LATB = 0x00;
  2214  001322  0E00               	movlw	0
  2215  001324  6E8A               	movwf	3978,c	;volatile
  2216                           
  2217                           ;pin_manager.c: 70: LATC = 0x00;
  2218  001326  0E00               	movlw	0
  2219  001328  6E8B               	movwf	3979,c	;volatile
  2220                           
  2221                           ;pin_manager.c: 75: TRISE = 0x05;
  2222  00132A  0E05               	movlw	5
  2223  00132C  6E96               	movwf	3990,c	;volatile
  2224                           
  2225                           ;pin_manager.c: 76: TRISA = 0x01;
  2226  00132E  0E01               	movlw	1
  2227  001330  6E92               	movwf	3986,c	;volatile
  2228                           
  2229                           ;pin_manager.c: 77: TRISB = 0xFF;
  2230  001332  6893               	setf	3987,c	;volatile
  2231                           
  2232                           ;pin_manager.c: 78: TRISC = 0xFF;
  2233  001334  6894               	setf	3988,c	;volatile
  2234                           
  2235                           ;pin_manager.c: 79: TRISD = 0x00;
  2236  001336  0E00               	movlw	0
  2237  001338  6E95               	movwf	3989,c	;volatile
  2238                           
  2239                           ;pin_manager.c: 84: ANCON0 = 0x00;
  2240  00133A  0E00               	movlw	0
  2241  00133C  010F               	movlb	15	; () banked
  2242  00133E  6F5D               	movwf	93,b	;volatile
  2243                           
  2244                           ;pin_manager.c: 85: ANCON1 = 0x00;
  2245  001340  0E00               	movlw	0
  2246  001342  6F5C               	movwf	92,b	;volatile
  2247                           
  2248                           ;pin_manager.c: 91: WPUB = 0x00;
  2249  001344  0E00               	movlw	0
  2250  001346  6F5B               	movwf	91,b	;volatile
  2251                           
  2252                           ; BSR set to: 15
  2253                           ;pin_manager.c: 99: IOCBbits.IOCB4 = 1;
  2254  001348  895A               	bsf	90,4,b	;volatile
  2255                           
  2256                           ; BSR set to: 15
  2257                           ;pin_manager.c: 100: IOCBbits.IOCB5 = 1;
  2258  00134A  8B5A               	bsf	90,5,b	;volatile
  2259                           
  2260                           ; BSR set to: 15
  2261                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
  2262  00134C  86F2               	bsf	intcon,3,c	;volatile
  2263                           
  2264                           ; BSR set to: 15
  2265  00134E  0012               	return		;funcret
  2266  001350                     __end_of_PIN_MANAGER_Initialize:
  2267                           	opt stack 0
  2268                           tblptru	equ	0xFF8
  2269                           tblptrh	equ	0xFF7
  2270                           tblptrl	equ	0xFF6
  2271                           tablat	equ	0xFF5
  2272                           intcon	equ	0xFF2
  2273                           postinc0	equ	0xFEE
  2274                           wreg	equ	0xFE8
  2275                           
  2276 ;; *************** function _OSCILLATOR_Initialize *****************
  2277 ;; Defined at:
  2278 ;;		line 124 in file "mcc_generated_files/mcc.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;		None
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;		None
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg, status,2
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2296 ;;Total ram usage:        0 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    9
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_SYSTEM_Initialize
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text11
  2307  001612                     __ptext11:
  2308                           	opt stack 0
  2309  001612                     _OSCILLATOR_Initialize:
  2310                           	opt stack 20
  2311                           
  2312                           ;mcc.c: 127: OSCCON = 0x60;
  2313                           
  2314                           ; BSR set to: 15
  2315                           ;incstack = 0
  2316  001612  0E60               	movlw	96
  2317  001614  6ED3               	movwf	4051,c	;volatile
  2318                           
  2319                           ;mcc.c: 129: OSCCON2 = 0x00;
  2320  001616  0E00               	movlw	0
  2321  001618  6ED2               	movwf	4050,c	;volatile
  2322                           
  2323                           ;mcc.c: 131: OSCTUNE = 0x00;
  2324  00161A  0E00               	movlw	0
  2325  00161C  6E9B               	movwf	3995,c	;volatile
  2326                           
  2327                           ;mcc.c: 133: REFOCON = 0x00;
  2328  00161E  0E00               	movlw	0
  2329  001620  6E9A               	movwf	3994,c	;volatile
  2330  001622  0012               	return		;funcret
  2331  001624                     __end_of_OSCILLATOR_Initialize:
  2332                           	opt stack 0
  2333                           tblptru	equ	0xFF8
  2334                           tblptrh	equ	0xFF7
  2335                           tblptrl	equ	0xFF6
  2336                           tablat	equ	0xFF5
  2337                           intcon	equ	0xFF2
  2338                           postinc0	equ	0xFEE
  2339                           wreg	equ	0xFE8
  2340                           
  2341 ;; *************** function _INTERRUPT_Initialize *****************
  2342 ;; Defined at:
  2343 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		None
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    9
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_SYSTEM_Initialize
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text12
  2372  001640                     __ptext12:
  2373                           	opt stack 0
  2374  001640                     _INTERRUPT_Initialize:
  2375                           	opt stack 20
  2376                           
  2377                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2378                           
  2379                           ;incstack = 0
  2380  001640  9ED0               	bcf	4048,7,c	;volatile
  2381  001642  0012               	return		;funcret
  2382  001644                     __end_of_INTERRUPT_Initialize:
  2383                           	opt stack 0
  2384                           tblptru	equ	0xFF8
  2385                           tblptrh	equ	0xFF7
  2386                           tblptrl	equ	0xFF6
  2387                           tablat	equ	0xFF5
  2388                           intcon	equ	0xFF2
  2389                           postinc0	equ	0xFEE
  2390                           wreg	equ	0xFE8
  2391                           
  2392 ;; *************** function _GLCD_Initalize *****************
  2393 ;; Defined at:
  2394 ;;		line 15 in file "ks0108lib/KS0108.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  i               1   11[BANK0 ] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2409 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2411 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2412 ;;Total ram usage:        1 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:   12
  2415 ;; This function calls:
  2416 ;;		_GLCD_InitializePorts
  2417 ;;		_GLCD_WriteCommand
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text13
  2424  00155C                     __ptext13:
  2425                           	opt stack 0
  2426  00155C                     _GLCD_Initalize:
  2427                           	opt stack 18
  2428                           
  2429                           ;KS0108.c: 17: unsigned char i;
  2430                           ;KS0108.c: 18: GLCD_InitializePorts();
  2431                           
  2432                           ;incstack = 0
  2433  00155C  EC17  F00B         	call	_GLCD_InitializePorts	;wreg free
  2434                           
  2435                           ;KS0108.c: 19: for(i = 0; i < 3; i++)
  2436  001560  0E00               	movlw	0
  2437  001562  0100               	movlb	0	; () banked
  2438  001564  6F6B               	movwf	GLCD_Initalize@i& (0+255),b
  2439  001566                     l3712:
  2440                           
  2441                           ; BSR set to: 0
  2442  001566  0E02               	movlw	2
  2443  001568  656B               	cpfsgt	GLCD_Initalize@i& (0+255),b
  2444  00156A  D001               	goto	l470
  2445  00156C  0012               	return	
  2446  00156E                     l470:
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;KS0108.c: 20: GLCD_WriteCommand((0x3E | 0x01), i);
  2450                           
  2451                           ; BSR set to: 0
  2452  00156E  C06B  F068         	movff	GLCD_Initalize@i,GLCD_WriteCommand@controller
  2453  001572  0E3F               	movlw	63
  2454  001574  ECA8  F009         	call	_GLCD_WriteCommand
  2455  001578  0100               	movlb	0	; () banked
  2456  00157A  2B6B               	incf	GLCD_Initalize@i& (0+255),f,b
  2457  00157C  D7F4               	goto	l3712
  2458  00157E                     __end_of_GLCD_Initalize:
  2459                           	opt stack 0
  2460                           tblptru	equ	0xFF8
  2461                           tblptrh	equ	0xFF7
  2462                           tblptrl	equ	0xFF6
  2463                           tablat	equ	0xFF5
  2464                           intcon	equ	0xFF2
  2465                           postinc0	equ	0xFEE
  2466                           wreg	equ	0xFE8
  2467                           
  2468 ;; *************** function _GLCD_InitializePorts *****************
  2469 ;; Defined at:
  2470 ;;		line 31 in file "ks0108lib/KS0108-PIC18.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2488 ;;Total ram usage:        0 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    9
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_GLCD_Initalize
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text14
  2499  00162E                     __ptext14:
  2500                           	opt stack 0
  2501  00162E                     _GLCD_InitializePorts:
  2502                           	opt stack 20
  2503                           
  2504                           ;KS0108-PIC18.c: 33: PORTA |= ((1 << 5) | (1 << 6) | (1 << 7));
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;incstack = 0
  2508  00162E  0EE0               	movlw	224
  2509  001630  1280               	iorwf	3968,f,c	;volatile
  2510                           
  2511                           ;KS0108-PIC18.c: 34: TRISA &= ~((1 << 5) | (1 << 6) | (1 << 7) | (1 << 2) | (1 << 1) | (
      +                          1 << 3));
  2512  001632  0E11               	movlw	17
  2513  001634  1692               	andwf	3986,f,c	;volatile
  2514  001636  0012               	return		;funcret
  2515  001638                     __end_of_GLCD_InitializePorts:
  2516                           	opt stack 0
  2517                           tblptru	equ	0xFF8
  2518                           tblptrh	equ	0xFF7
  2519                           tblptrl	equ	0xFF6
  2520                           tablat	equ	0xFF5
  2521                           intcon	equ	0xFF2
  2522                           postinc0	equ	0xFEE
  2523                           wreg	equ	0xFE8
  2524                           
  2525 ;; *************** function _Check_Buttons *****************
  2526 ;; Defined at:
  2527 ;;		line 119 in file "main.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;		None
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2543 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2544 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2545 ;;Total ram usage:        1 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:   16
  2548 ;; This function calls:
  2549 ;;		_Draw_Arrow
  2550 ;;		_Draw_runTime_Menu
  2551 ;;		_Initialize_Menus
  2552 ;; This function is called by:
  2553 ;;		_main
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text15
  2558  0004FC                     __ptext15:
  2559                           	opt stack 0
  2560  0004FC                     _Check_Buttons:
  2561                           	opt stack 14
  2562                           
  2563                           ;main.c: 125: if(!PORTBbits.RB2)
  2564                           
  2565                           ;incstack = 0
  2566  0004FC  B481               	btfsc	3969,2,c	;volatile
  2567  0004FE  0012               	return	
  2568                           
  2569                           ;main.c: 126: {
  2570                           ;main.c: 127: _delay((unsigned long)((10)*(8000000/4000.0)));
  2571  000500  0E1A               	movlw	26
  2572  000502  0100               	movlb	0	; () banked
  2573  000504  6F9D               	movwf	??_Check_Buttons& (0+255),b
  2574  000506  0EF8               	movlw	248
  2575  000508                     u2357:
  2576  000508  2EE8               	decfsz	wreg,f,c
  2577  00050A  D7FE               	bra	u2357
  2578  00050C  2F9D               	decfsz	??_Check_Buttons& (0+255),f,b
  2579  00050E  D7FC               	bra	u2357
  2580  000510  F000               	nop	
  2581                           
  2582                           ;main.c: 129: if(!PORTBbits.RB2)
  2583  000512  B481               	btfsc	3969,2,c	;volatile
  2584  000514  0012               	return	
  2585  000516  D047               	goto	l413
  2586  000518                     
  2587                           ;main.c: 133: if(currentContext == mainMenu)
  2588  000518  5044               	movf	_currentContext,w,c
  2589  00051A  B4D8               	btfsc	status,2,c
  2590  00051C  D018               	goto	l400
  2591  00051E  D02B               	goto	l399
  2592  000520                     
  2593                           ;main.c: 138: currentContext = runTime;
  2594  000520  0E01               	movlw	1
  2595  000522  6E44               	movwf	_currentContext,c
  2596                           
  2597                           ;main.c: 139: runTimeContext = runTimeSelection;
  2598  000524  0E00               	movlw	0
  2599  000526  6E43               	movwf	_runTimeContext,c
  2600                           
  2601                           ;main.c: 140: Draw_runTime_Menu();
  2602  000528  ECEE  F001         	call	_Draw_runTime_Menu	;wreg free
  2603                           
  2604                           ;main.c: 141: break;
  2605  00052C  D03C               	goto	l413
  2606  00052E                     
  2607                           ;main.c: 143: currentContext = brightnessMenu;
  2608  00052E  0E02               	movlw	2
  2609  000530  D007               	goto	L4
  2610  000532                     
  2611                           ;main.c: 146: currentContext = startColorRed;
  2612  000532  0E03               	movlw	3
  2613  000534  D005               	goto	L4
  2614  000536                     
  2615                           ;main.c: 149: currentContext = endColorRed;
  2616  000536  0E06               	movlw	6
  2617  000538  D003               	goto	L4
  2618  00053A                     
  2619                           ;main.c: 152: currentContext = backlightMenu;
  2620  00053A  0E09               	movlw	9
  2621  00053C  D001               	goto	L4
  2622  00053E                     
  2623                           ;main.c: 155: currentContext = selectStateMenu;
  2624  00053E  0E0A               	movlw	10
  2625  000540                     L4:
  2626  000540  6E44               	movwf	_currentContext,c
  2627                           
  2628                           ;main.c: 156: break;
  2629  000542  D031               	goto	l413
  2630  000544                     
  2631                           ;main.c: 158: currentContext = mainMenu;
  2632  000544  0E00               	movlw	0
  2633  000546  6E44               	movwf	_currentContext,c
  2634                           
  2635                           ;main.c: 159: Initialize_Menus();
  2636  000548  EC36  F001         	call	_Initialize_Menus	;wreg free
  2637                           
  2638                           ;main.c: 161: }
  2639                           
  2640                           ;main.c: 160: break;
  2641  00054C  D02C               	goto	l413
  2642  00054E                     l400:
  2643  00054E  5045               	movf	_mainState,w,c
  2644                           
  2645                           ; Switch size 1, requested type "space"
  2646                           ; Number of cases is 6, Range of values is 2 to 7
  2647                           ; switch strategies available:
  2648                           ; Name         Instructions Cycles
  2649                           ; simple_byte           19    10 (average)
  2650                           ;	Chosen strategy is simple_byte
  2651  000550  0A02               	xorlw	2	; case 2
  2652  000552  B4D8               	btfsc	status,2,c
  2653  000554  D7E5               	goto	l401
  2654  000556  0A01               	xorlw	1	; case 3
  2655  000558  B4D8               	btfsc	status,2,c
  2656  00055A  D7E9               	goto	l403
  2657  00055C  0A07               	xorlw	7	; case 4
  2658  00055E  B4D8               	btfsc	status,2,c
  2659  000560  D7E8               	goto	l404
  2660  000562  0A01               	xorlw	1	; case 5
  2661  000564  B4D8               	btfsc	status,2,c
  2662  000566  D7E7               	goto	l405
  2663  000568  0A03               	xorlw	3	; case 6
  2664  00056A  B4D8               	btfsc	status,2,c
  2665  00056C  D7E6               	goto	l406
  2666  00056E  0A01               	xorlw	1	; case 7
  2667  000570  B4D8               	btfsc	status,2,c
  2668  000572  D7E5               	goto	l407
  2669  000574  D7E7               	goto	l408
  2670  000576                     l399:
  2671                           
  2672                           ;main.c: 164: else if(currentContext == runTime)
  2673  000576  0444               	decf	_currentContext,w,c
  2674  000578  A4D8               	btfss	status,2,c
  2675  00057A  D011               	goto	l410
  2676                           
  2677                           ;main.c: 165: {
  2678                           ;main.c: 166: if(runTimeContext == runTimeBack)
  2679  00057C  0E02               	movlw	2
  2680  00057E  1843               	xorwf	_runTimeContext,w,c
  2681  000580  A4D8               	btfss	status,2,c
  2682  000582  D005               	goto	l411
  2683                           
  2684                           ;main.c: 167: {
  2685                           ;main.c: 169: currentContext = mainMenu;
  2686  000584  0E00               	movlw	0
  2687  000586  6E44               	movwf	_currentContext,c
  2688                           
  2689                           ;main.c: 170: Initialize_Menus();
  2690  000588  EC36  F001         	call	_Initialize_Menus	;wreg free
  2691                           
  2692                           ;main.c: 171: }
  2693  00058C  D00C               	goto	l413
  2694  00058E                     l411:
  2695                           
  2696                           ;main.c: 172: else
  2697                           ;main.c: 173: {
  2698                           ;main.c: 174: adjustValues = !adjustValues;
  2699  00058E  5042               	movf	_adjustValues,w,c
  2700  000590  A4D8               	btfss	status,2,c
  2701  000592  D002               	goto	u2210
  2702  000594  0E01               	movlw	1
  2703  000596  D001               	goto	u2220
  2704  000598                     u2210:
  2705  000598  0E00               	movlw	0
  2706  00059A                     u2220:
  2707  00059A  6E42               	movwf	_adjustValues,c
  2708                           
  2709                           ;main.c: 177: }
  2710                           ;main.c: 178: }
  2711  00059C  D004               	goto	l413
  2712  00059E                     l410:
  2713                           
  2714                           ;main.c: 180: else
  2715                           ;main.c: 181: {
  2716                           ;main.c: 182: currentContext = mainMenu;
  2717  00059E  0E00               	movlw	0
  2718  0005A0  6E44               	movwf	_currentContext,c
  2719                           
  2720                           ;main.c: 183: Initialize_Menus();
  2721  0005A2  EC36  F001         	call	_Initialize_Menus	;wreg free
  2722  0005A6                     l413:
  2723  0005A6  A481               	btfss	3969,2,c	;volatile
  2724  0005A8  D7B7               	goto	l398
  2725                           
  2726                           ;main.c: 184: }
  2727                           ;main.c: 186: Draw_Arrow();
  2728  0005AA  ECCB  F008         	call	_Draw_Arrow	;wreg free
  2729  0005AE  0012               	return	
  2730  0005B0                     __end_of_Check_Buttons:
  2731                           	opt stack 0
  2732                           tblptru	equ	0xFF8
  2733                           tblptrh	equ	0xFF7
  2734                           tblptrl	equ	0xFF6
  2735                           tablat	equ	0xFF5
  2736                           intcon	equ	0xFF2
  2737                           postinc0	equ	0xFEE
  2738                           wreg	equ	0xFE8
  2739                           status	equ	0xFD8
  2740                           
  2741 ;; *************** function _Initialize_Menus *****************
  2742 ;; Defined at:
  2743 ;;		line 12 in file "screen_controls.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;		None
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  display        10   51[BANK0 ] unsigned char [10]
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2758 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2760 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2761 ;;Total ram usage:       10 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:   15
  2764 ;; This function calls:
  2765 ;;		_GLCD_ClearScreen
  2766 ;;		_GLCD_GoTo
  2767 ;;		_GLCD_Line
  2768 ;;		_GLCD_WriteString
  2769 ;;		_itoa
  2770 ;; This function is called by:
  2771 ;;		_main
  2772 ;;		_Check_Buttons
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text16
  2777  00026C                     __ptext16:
  2778                           	opt stack 0
  2779  00026C                     _Initialize_Menus:
  2780                           	opt stack 15
  2781                           
  2782                           ;screen_controls.c: 14: char display[10];
  2783                           ;screen_controls.c: 16: GLCD_ClearScreen();
  2784                           
  2785                           ;incstack = 0
  2786  00026C  ECC4  F009         	call	_GLCD_ClearScreen	;wreg free
  2787                           
  2788                           ;screen_controls.c: 18: GLCD_GoTo(xMenuStart,0);
  2789  000270  0E00               	movlw	0
  2790  000272  0100               	movlb	0	; () banked
  2791  000274  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2792  000276  51A6               	movf	_xMenuStart& (0+255),w,b
  2793  000278  EC1D  F004         	call	_GLCD_GoTo
  2794                           
  2795                           ;screen_controls.c: 19: GLCD_WriteString("Main Menu");
  2796  00027C  0EC4               	movlw	low STR_2
  2797  00027E  0100               	movlb	0	; () banked
  2798  000280  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2799  000282  0EFF               	movlw	high STR_2
  2800  000284  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2801  000286  EC88  F007         	call	_GLCD_WriteString	;wreg free
  2802                           
  2803                           ;screen_controls.c: 20: GLCD_GoTo((valuesXStart - 4), 0);
  2804  00028A  0E00               	movlw	0
  2805  00028C  0100               	movlb	0	; () banked
  2806  00028E  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2807  000290  5046               	movf	_valuesXStart,w,c
  2808  000292  0FFC               	addlw	252
  2809  000294  EC1D  F004         	call	_GLCD_GoTo
  2810                           
  2811                           ;screen_controls.c: 21: GLCD_WriteString("Values");
  2812  000298  0EE8               	movlw	low STR_3
  2813  00029A  0100               	movlb	0	; () banked
  2814  00029C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2815  00029E  0EFF               	movlw	high STR_3
  2816  0002A0  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2817  0002A2  EC88  F007         	call	_GLCD_WriteString	;wreg free
  2818                           
  2819                           ;screen_controls.c: 22: GLCD_Line(0,12,127,12);
  2820  0002A6  0E00               	movlw	0
  2821  0002A8  0100               	movlb	0	; () banked
  2822  0002AA  6F76               	movwf	(GLCD_Line@X1+1)& (0+255),b
  2823  0002AC  0E00               	movlw	0
  2824  0002AE  6F75               	movwf	GLCD_Line@X1& (0+255),b
  2825  0002B0  0E00               	movlw	0
  2826  0002B2  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  2827  0002B4  0E0C               	movlw	12
  2828  0002B6  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  2829  0002B8  0E00               	movlw	0
  2830  0002BA  6F7A               	movwf	(GLCD_Line@X2+1)& (0+255),b
  2831  0002BC  0E7F               	movlw	127
  2832  0002BE  6F79               	movwf	GLCD_Line@X2& (0+255),b
  2833  0002C0  0E00               	movlw	0
  2834  0002C2  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  2835  0002C4  0E0C               	movlw	12
  2836  0002C6  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  2837  0002C8  EC5C  F000         	call	_GLCD_Line	;wreg free
  2838                           
  2839                           ;screen_controls.c: 23: GLCD_Line((valuesXStart - 8),0,(valuesXStart - 8),63);
  2840  0002CC  0EF8               	movlw	248
  2841  0002CE  2446               	addwf	_valuesXStart,w,c
  2842  0002D0  0100               	movlb	0	; () banked
  2843  0002D2  6F75               	movwf	GLCD_Line@X1& (0+255),b
  2844  0002D4  6B76               	clrf	(GLCD_Line@X1+1)& (0+255),b
  2845  0002D6  0EFF               	movlw	255
  2846  0002D8  2376               	addwfc	(GLCD_Line@X1+1)& (0+255),f,b
  2847  0002DA  0E00               	movlw	0
  2848  0002DC  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  2849  0002DE  0E00               	movlw	0
  2850  0002E0  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  2851  0002E2  0EF8               	movlw	248
  2852  0002E4  2446               	addwf	_valuesXStart,w,c
  2853  0002E6  6F79               	movwf	GLCD_Line@X2& (0+255),b
  2854  0002E8  6B7A               	clrf	(GLCD_Line@X2+1)& (0+255),b
  2855  0002EA  0EFF               	movlw	255
  2856  0002EC  237A               	addwfc	(GLCD_Line@X2+1)& (0+255),f,b
  2857  0002EE  0E00               	movlw	0
  2858  0002F0  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  2859  0002F2  0E3F               	movlw	63
  2860  0002F4  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  2861  0002F6  EC5C  F000         	call	_GLCD_Line	;wreg free
  2862                           
  2863                           ;screen_controls.c: 26: GLCD_GoTo(xMenuStart, setRunTime);
  2864  0002FA  0E02               	movlw	2
  2865  0002FC  0100               	movlb	0	; () banked
  2866  0002FE  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2867  000300  51A6               	movf	_xMenuStart& (0+255),w,b
  2868  000302  EC1D  F004         	call	_GLCD_GoTo
  2869                           
  2870                           ;screen_controls.c: 27: GLCD_WriteString("RunTime");
  2871  000306  0EE0               	movlw	low STR_4
  2872  000308  0100               	movlb	0	; () banked
  2873  00030A  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2874  00030C  0EFF               	movlw	high STR_4
  2875  00030E  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2876  000310  EC88  F007         	call	_GLCD_WriteString	;wreg free
  2877                           
  2878                           ;screen_controls.c: 28: GLCD_GoTo(valuesXStart, setRunTime);
  2879  000314  0E02               	movlw	2
  2880  000316  0100               	movlb	0	; () banked
  2881  000318  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2882  00031A  5046               	movf	_valuesXStart,w,c
  2883  00031C  EC1D  F004         	call	_GLCD_GoTo
  2884                           
  2885                           ;screen_controls.c: 29: itoa(display, runMinutes, 10);
  2886  000320  0E93               	movlw	low Initialize_Menus@display
  2887  000322  0100               	movlb	0	; () banked
  2888  000324  6F70               	movwf	itoa@buf& (0+255),b
  2889  000326  0E00               	movlw	high Initialize_Menus@display
  2890  000328  6F71               	movwf	(itoa@buf+1)& (0+255),b
  2891  00032A  C041  F072         	movff	_runMinutes,itoa@val
  2892  00032E  6B73               	clrf	(itoa@val+1)& (0+255),b
  2893  000330  0E00               	movlw	0
  2894  000332  6F75               	movwf	(itoa@base+1)& (0+255),b
  2895  000334  0E0A               	movlw	10
  2896  000336  6F74               	movwf	itoa@base& (0+255),b
  2897  000338  EC87  F008         	call	_itoa	;wreg free
  2898                           
  2899                           ;screen_controls.c: 30: GLCD_WriteString(display);
  2900  00033C  0E93               	movlw	low Initialize_Menus@display
  2901  00033E  0100               	movlb	0	; () banked
  2902  000340  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2903  000342  0E00               	movlw	high Initialize_Menus@display
  2904  000344  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2905  000346  EC88  F007         	call	_GLCD_WriteString	;wreg free
  2906                           
  2907                           ;screen_controls.c: 31: GLCD_WriteString("min");
  2908  00034A  0EFB               	movlw	low STR_5
  2909  00034C  0100               	movlb	0	; () banked
  2910  00034E  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2911  000350  0EFF               	movlw	high STR_5
  2912  000352  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2913  000354  EC88  F007         	call	_GLCD_WriteString	;wreg free
  2914                           
  2915                           ;screen_controls.c: 33: GLCD_GoTo(xMenuStart, setBrightness);
  2916  000358  0E03               	movlw	3
  2917  00035A  0100               	movlb	0	; () banked
  2918  00035C  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2919  00035E  51A6               	movf	_xMenuStart& (0+255),w,b
  2920  000360  EC1D  F004         	call	_GLCD_GoTo
  2921                           
  2922                           ;screen_controls.c: 34: GLCD_WriteString("Brightness");
  2923  000364  0EA5               	movlw	low STR_6
  2924  000366  0100               	movlb	0	; () banked
  2925  000368  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2926  00036A  0EFF               	movlw	high STR_6
  2927  00036C  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2928  00036E  EC88  F007         	call	_GLCD_WriteString	;wreg free
  2929                           
  2930                           ;screen_controls.c: 36: GLCD_GoTo(xMenuStart, setStartColors);
  2931  000372  0E04               	movlw	4
  2932  000374  0100               	movlb	0	; () banked
  2933  000376  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2934  000378  51A6               	movf	_xMenuStart& (0+255),w,b
  2935  00037A  EC1D  F004         	call	_GLCD_GoTo
  2936                           
  2937                           ;screen_controls.c: 37: GLCD_WriteString("StartColor");
  2938  00037E  0E9A               	movlw	low STR_7
  2939  000380  0100               	movlb	0	; () banked
  2940  000382  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2941  000384  0EFF               	movlw	high STR_7
  2942  000386  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2943  000388  EC88  F007         	call	_GLCD_WriteString	;wreg free
  2944                           
  2945                           ;screen_controls.c: 39: GLCD_GoTo(xMenuStart, setFinishedColors);
  2946  00038C  0E05               	movlw	5
  2947  00038E  0100               	movlb	0	; () banked
  2948  000390  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2949  000392  51A6               	movf	_xMenuStart& (0+255),w,b
  2950  000394  EC1D  F004         	call	_GLCD_GoTo
  2951                           
  2952                           ;screen_controls.c: 40: GLCD_WriteString("EndColor");
  2953  000398  0ED7               	movlw	low STR_8
  2954  00039A  0100               	movlb	0	; () banked
  2955  00039C  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2956  00039E  0EFF               	movlw	high STR_8
  2957  0003A0  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2958  0003A2  EC88  F007         	call	_GLCD_WriteString	;wreg free
  2959                           
  2960                           ;screen_controls.c: 42: GLCD_GoTo(xMenuStart, setBacklightBrightness);
  2961  0003A6  0E06               	movlw	6
  2962  0003A8  0100               	movlb	0	; () banked
  2963  0003AA  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2964  0003AC  51A6               	movf	_xMenuStart& (0+255),w,b
  2965  0003AE  EC1D  F004         	call	_GLCD_GoTo
  2966                           
  2967                           ;screen_controls.c: 43: GLCD_WriteString("Backlight");
  2968  0003B2  0EBA               	movlw	low STR_9
  2969  0003B4  0100               	movlb	0	; () banked
  2970  0003B6  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2971  0003B8  0EFF               	movlw	high STR_9
  2972  0003BA  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2973  0003BC  EC88  F007         	call	_GLCD_WriteString	;wreg free
  2974                           
  2975                           ;screen_controls.c: 45: GLCD_GoTo(xMenuStart, selectState);
  2976  0003C0  0E07               	movlw	7
  2977  0003C2  0100               	movlb	0	; () banked
  2978  0003C4  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  2979  0003C6  51A6               	movf	_xMenuStart& (0+255),w,b
  2980  0003C8  EC1D  F004         	call	_GLCD_GoTo
  2981                           
  2982                           ;screen_controls.c: 46: GLCD_WriteString("SelState");
  2983  0003CC  0ECE               	movlw	low STR_10
  2984  0003CE  0100               	movlb	0	; () banked
  2985  0003D0  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2986  0003D2  0EFF               	movlw	high STR_10
  2987  0003D4  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2988  0003D6  EC88  F007         	call	_GLCD_WriteString	;wreg free
  2989  0003DA  0012               	return		;funcret
  2990  0003DC                     __end_of_Initialize_Menus:
  2991                           	opt stack 0
  2992                           tblptru	equ	0xFF8
  2993                           tblptrh	equ	0xFF7
  2994                           tblptrl	equ	0xFF6
  2995                           tablat	equ	0xFF5
  2996                           intcon	equ	0xFF2
  2997                           postinc0	equ	0xFEE
  2998                           wreg	equ	0xFE8
  2999                           status	equ	0xFD8
  3000                           
  3001 ;; *************** function _Draw_runTime_Menu *****************
  3002 ;; Defined at:
  3003 ;;		line 114 in file "screen_controls.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  display        10   51[BANK0 ] unsigned char [10]
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3018 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3020 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3021 ;;Total ram usage:       10 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:   15
  3024 ;; This function calls:
  3025 ;;		_GLCD_ClearScreen
  3026 ;;		_GLCD_GoTo
  3027 ;;		_GLCD_Line
  3028 ;;		_GLCD_WriteString
  3029 ;;		_Make_Back_Arrow
  3030 ;;		_itoa
  3031 ;; This function is called by:
  3032 ;;		_Check_Buttons
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text17
  3037  0003DC                     __ptext17:
  3038                           	opt stack 0
  3039  0003DC                     _Draw_runTime_Menu:
  3040                           	opt stack 14
  3041                           
  3042                           ;screen_controls.c: 116: char display[10];
  3043                           ;screen_controls.c: 118: GLCD_ClearScreen();
  3044                           
  3045                           ;incstack = 0
  3046  0003DC  ECC4  F009         	call	_GLCD_ClearScreen	;wreg free
  3047                           
  3048                           ;screen_controls.c: 120: GLCD_GoTo(0,0);
  3049  0003E0  0E00               	movlw	0
  3050  0003E2  0100               	movlb	0	; () banked
  3051  0003E4  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  3052  0003E6  0E00               	movlw	0
  3053  0003E8  EC1D  F004         	call	_GLCD_GoTo
  3054                           
  3055                           ;screen_controls.c: 121: GLCD_WriteString("Run Times");
  3056  0003EC  0EB0               	movlw	low STR_11
  3057  0003EE  0100               	movlb	0	; () banked
  3058  0003F0  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3059  0003F2  0EFF               	movlw	high STR_11
  3060  0003F4  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3061  0003F6  EC88  F007         	call	_GLCD_WriteString	;wreg free
  3062                           
  3063                           ;screen_controls.c: 122: GLCD_Line(0,9,127,9);
  3064  0003FA  0E00               	movlw	0
  3065  0003FC  0100               	movlb	0	; () banked
  3066  0003FE  6F76               	movwf	(GLCD_Line@X1+1)& (0+255),b
  3067  000400  0E00               	movlw	0
  3068  000402  6F75               	movwf	GLCD_Line@X1& (0+255),b
  3069  000404  0E00               	movlw	0
  3070  000406  6F78               	movwf	(GLCD_Line@Y1+1)& (0+255),b
  3071  000408  0E09               	movlw	9
  3072  00040A  6F77               	movwf	GLCD_Line@Y1& (0+255),b
  3073  00040C  0E00               	movlw	0
  3074  00040E  6F7A               	movwf	(GLCD_Line@X2+1)& (0+255),b
  3075  000410  0E7F               	movlw	127
  3076  000412  6F79               	movwf	GLCD_Line@X2& (0+255),b
  3077  000414  0E00               	movlw	0
  3078  000416  6F7C               	movwf	(GLCD_Line@Y2+1)& (0+255),b
  3079  000418  0E09               	movlw	9
  3080  00041A  6F7B               	movwf	GLCD_Line@Y2& (0+255),b
  3081  00041C  EC5C  F000         	call	_GLCD_Line	;wreg free
  3082                           
  3083                           ;screen_controls.c: 124: GLCD_GoTo(runTimeX, 2);
  3084  000420  0E02               	movlw	2
  3085  000422  0100               	movlb	0	; () banked
  3086  000424  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  3087  000426  51A8               	movf	_runTimeX& (0+255),w,b
  3088  000428  EC1D  F004         	call	_GLCD_GoTo
  3089                           
  3090                           ;screen_controls.c: 125: GLCD_WriteString("Run Time: ");
  3091  00042C  0E8F               	movlw	low STR_12
  3092  00042E  0100               	movlb	0	; () banked
  3093  000430  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3094  000432  0EFF               	movlw	high STR_12
  3095  000434  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3096  000436  EC88  F007         	call	_GLCD_WriteString	;wreg free
  3097                           
  3098                           ;screen_controls.c: 126: GLCD_GoTo(valuesXStart, 2);
  3099  00043A  0E02               	movlw	2
  3100  00043C  0100               	movlb	0	; () banked
  3101  00043E  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  3102  000440  5046               	movf	_valuesXStart,w,c
  3103  000442  EC1D  F004         	call	_GLCD_GoTo
  3104                           
  3105                           ;screen_controls.c: 127: itoa(display, runMinutes, 10);
  3106  000446  0E93               	movlw	low Draw_runTime_Menu@display
  3107  000448  0100               	movlb	0	; () banked
  3108  00044A  6F70               	movwf	itoa@buf& (0+255),b
  3109  00044C  0E00               	movlw	high Draw_runTime_Menu@display
  3110  00044E  6F71               	movwf	(itoa@buf+1)& (0+255),b
  3111  000450  C041  F072         	movff	_runMinutes,itoa@val
  3112  000454  6B73               	clrf	(itoa@val+1)& (0+255),b
  3113  000456  0E00               	movlw	0
  3114  000458  6F75               	movwf	(itoa@base+1)& (0+255),b
  3115  00045A  0E0A               	movlw	10
  3116  00045C  6F74               	movwf	itoa@base& (0+255),b
  3117  00045E  EC87  F008         	call	_itoa	;wreg free
  3118                           
  3119                           ;screen_controls.c: 128: GLCD_WriteString(display);
  3120  000462  0E93               	movlw	low Draw_runTime_Menu@display
  3121  000464  0100               	movlb	0	; () banked
  3122  000466  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3123  000468  0E00               	movlw	high Draw_runTime_Menu@display
  3124  00046A  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3125  00046C  EC88  F007         	call	_GLCD_WriteString	;wreg free
  3126                           
  3127                           ;screen_controls.c: 129: GLCD_WriteString("min");
  3128  000470  0EFB               	movlw	low STR_5
  3129  000472  0100               	movlb	0	; () banked
  3130  000474  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3131  000476  0EFF               	movlw	high STR_5
  3132  000478  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3133  00047A  EC88  F007         	call	_GLCD_WriteString	;wreg free
  3134                           
  3135                           ;screen_controls.c: 131: GLCD_GoTo(runTimeX, 4);
  3136  00047E  0E04               	movlw	4
  3137  000480  0100               	movlb	0	; () banked
  3138  000482  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  3139  000484  51A8               	movf	_runTimeX& (0+255),w,b
  3140  000486  EC1D  F004         	call	_GLCD_GoTo
  3141                           
  3142                           ;screen_controls.c: 132: GLCD_WriteString("Time After: ");
  3143  00048A  0E82               	movlw	low STR_14
  3144  00048C  0100               	movlb	0	; () banked
  3145  00048E  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3146  000490  0EFF               	movlw	high STR_14
  3147  000492  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3148  000494  EC88  F007         	call	_GLCD_WriteString	;wreg free
  3149                           
  3150                           ;screen_controls.c: 133: GLCD_GoTo(valuesXStart, 4);
  3151  000498  0E04               	movlw	4
  3152  00049A  0100               	movlb	0	; () banked
  3153  00049C  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  3154  00049E  5046               	movf	_valuesXStart,w,c
  3155  0004A0  EC1D  F004         	call	_GLCD_GoTo
  3156                           
  3157                           ;screen_controls.c: 134: itoa(display, afterMinutes, 10);
  3158  0004A4  0E93               	movlw	low Draw_runTime_Menu@display
  3159  0004A6  0100               	movlb	0	; () banked
  3160  0004A8  6F70               	movwf	itoa@buf& (0+255),b
  3161  0004AA  0E00               	movlw	high Draw_runTime_Menu@display
  3162  0004AC  6F71               	movwf	(itoa@buf+1)& (0+255),b
  3163  0004AE  C0A5  F072         	movff	_afterMinutes,itoa@val
  3164  0004B2  6B73               	clrf	(itoa@val+1)& (0+255),b
  3165  0004B4  0E00               	movlw	0
  3166  0004B6  6F75               	movwf	(itoa@base+1)& (0+255),b
  3167  0004B8  0E0A               	movlw	10
  3168  0004BA  6F74               	movwf	itoa@base& (0+255),b
  3169  0004BC  EC87  F008         	call	_itoa	;wreg free
  3170                           
  3171                           ;screen_controls.c: 135: GLCD_WriteString(display);
  3172  0004C0  0E93               	movlw	low Draw_runTime_Menu@display
  3173  0004C2  0100               	movlb	0	; () banked
  3174  0004C4  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3175  0004C6  0E00               	movlw	high Draw_runTime_Menu@display
  3176  0004C8  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3177  0004CA  EC88  F007         	call	_GLCD_WriteString	;wreg free
  3178                           
  3179                           ;screen_controls.c: 136: GLCD_WriteString("min");
  3180  0004CE  0EFB               	movlw	low STR_5
  3181  0004D0  0100               	movlb	0	; () banked
  3182  0004D2  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3183  0004D4  0EFF               	movlw	high STR_5
  3184  0004D6  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3185  0004D8  EC88  F007         	call	_GLCD_WriteString	;wreg free
  3186                           
  3187                           ;screen_controls.c: 138: GLCD_GoTo(runTimeX, 6);
  3188  0004DC  0E06               	movlw	6
  3189  0004DE  0100               	movlb	0	; () banked
  3190  0004E0  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  3191  0004E2  51A8               	movf	_runTimeX& (0+255),w,b
  3192  0004E4  EC1D  F004         	call	_GLCD_GoTo
  3193                           
  3194                           ;screen_controls.c: 139: Make_Back_Arrow();
  3195  0004E8  ECDF  F009         	call	_Make_Back_Arrow	;wreg free
  3196                           
  3197                           ;screen_controls.c: 141: GLCD_WriteString("Back");
  3198  0004EC  0EF6               	movlw	low STR_16
  3199  0004EE  0100               	movlb	0	; () banked
  3200  0004F0  6F6D               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  3201  0004F2  0EFF               	movlw	high STR_16
  3202  0004F4  6F6E               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  3203  0004F6  EC88  F007         	call	_GLCD_WriteString	;wreg free
  3204  0004FA  0012               	return		;funcret
  3205  0004FC                     __end_of_Draw_runTime_Menu:
  3206                           	opt stack 0
  3207                           tblptru	equ	0xFF8
  3208                           tblptrh	equ	0xFF7
  3209                           tblptrl	equ	0xFF6
  3210                           tablat	equ	0xFF5
  3211                           intcon	equ	0xFF2
  3212                           postinc0	equ	0xFEE
  3213                           wreg	equ	0xFE8
  3214                           status	equ	0xFD8
  3215                           
  3216 ;; *************** function _itoa *****************
  3217 ;; Defined at:
  3218 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  buf             2   16[BANK0 ] PTR unsigned char 
  3221 ;;		 -> Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Run_Time_Menu_Function@display(10), 
  3222 ;;  val             2   18[BANK0 ] int 
  3223 ;;  base            2   20[BANK0 ] int 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  cp              2   22[BANK0 ] PTR unsigned char 
  3226 ;;		 -> Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Run_Time_Menu_Function@display(10), 
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  2   16[BANK0 ] PTR unsigned char 
  3229 ;; Registers used:
  3230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3236 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3237 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3239 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3240 ;;Total ram usage:        8 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:   11
  3243 ;; This function calls:
  3244 ;;		_utoa
  3245 ;; This function is called by:
  3246 ;;		_Initialize_Menus
  3247 ;;		_Draw_runTime_Menu
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text18
  3252  00110E                     __ptext18:
  3253                           	opt stack 0
  3254  00110E                     _itoa:
  3255                           	opt stack 18
  3256                           
  3257                           ;incstack = 0
  3258  00110E  C070  F076         	movff	itoa@buf,itoa@cp
  3259  001112  C071  F077         	movff	itoa@buf+1,itoa@cp+1
  3260  001116  0100               	movlb	0	; () banked
  3261  001118  AF73               	btfss	(itoa@val+1)& (0+255),7,b
  3262  00111A  D00C               	goto	l1031
  3263                           
  3264                           ; BSR set to: 0
  3265  00111C  C070  FFD9         	movff	itoa@buf,fsr2l
  3266  001120  C071  FFDA         	movff	itoa@buf+1,fsr2h
  3267  001124  0E2D               	movlw	45
  3268  001126  6EDF               	movwf	indf2,c
  3269                           
  3270                           ; BSR set to: 0
  3271  001128  4B70               	infsnz	itoa@buf& (0+255),f,b
  3272  00112A  2B71               	incf	(itoa@buf+1)& (0+255),f,b
  3273                           
  3274                           ; BSR set to: 0
  3275  00112C  6D72               	negf	itoa@val& (0+255),b
  3276  00112E  1F73               	comf	(itoa@val+1)& (0+255),f,b
  3277  001130  B0D8               	btfsc	status,0,c
  3278  001132  2B73               	incf	(itoa@val+1)& (0+255),f,b
  3279  001134                     l1031:
  3280                           
  3281                           ; BSR set to: 0
  3282                           
  3283                           ; BSR set to: 0
  3284  001134  C070  F067         	movff	itoa@buf,utoa@buf
  3285  001138  C071  F068         	movff	itoa@buf+1,utoa@buf+1
  3286  00113C  C072  F069         	movff	itoa@val,utoa@val
  3287  001140  C073  F06A         	movff	itoa@val+1,utoa@val+1
  3288  001144  C074  F06B         	movff	itoa@base,utoa@base
  3289  001148  C075  F06C         	movff	itoa@base+1,utoa@base+1
  3290  00114C  ECD8  F002         	call	_utoa	;wreg free
  3291  001150  0012               	return	
  3292  001152                     __end_of_itoa:
  3293                           	opt stack 0
  3294                           tblptru	equ	0xFF8
  3295                           tblptrh	equ	0xFF7
  3296                           tblptrl	equ	0xFF6
  3297                           tablat	equ	0xFF5
  3298                           intcon	equ	0xFF2
  3299                           postinc0	equ	0xFEE
  3300                           wreg	equ	0xFE8
  3301                           indf2	equ	0xFDF
  3302                           fsr2h	equ	0xFDA
  3303                           fsr2l	equ	0xFD9
  3304                           status	equ	0xFD8
  3305                           
  3306 ;; *************** function _utoa *****************
  3307 ;; Defined at:
  3308 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  buf             2    7[BANK0 ] PTR unsigned char 
  3311 ;;		 -> Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Run_Time_Menu_Function@display(10), 
  3312 ;;  val             2    9[BANK0 ] unsigned int 
  3313 ;;  base            2   11[BANK0 ] int 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  v               2   13[BANK0 ] unsigned int 
  3316 ;;  c               1   15[BANK0 ] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  2    7[BANK0 ] PTR unsigned char 
  3319 ;; Registers used:
  3320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3326 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3327 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3329 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3330 ;;Total ram usage:        9 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:   10
  3333 ;; This function calls:
  3334 ;;		___lwdiv
  3335 ;;		___lwmod
  3336 ;; This function is called by:
  3337 ;;		_itoa
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text19
  3342  0005B0                     __ptext19:
  3343                           	opt stack 0
  3344  0005B0                     _utoa:
  3345                           	opt stack 18
  3346                           
  3347                           ;incstack = 0
  3348  0005B0  C069  F06D         	movff	utoa@val,utoa@v
  3349  0005B4  C06A  F06E         	movff	utoa@val+1,utoa@v+1
  3350  0005B8  C06D  F060         	movff	utoa@v,___lwdiv@dividend
  3351  0005BC  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
  3352  0005C0  C06B  F062         	movff	utoa@base,___lwdiv@divisor
  3353  0005C4  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
  3354  0005C8  EC0B  F008         	call	___lwdiv	;wreg free
  3355  0005CC  C060  F06D         	movff	?___lwdiv,utoa@v
  3356  0005D0  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
  3357  0005D4  0100               	movlb	0	; () banked
  3358  0005D6  4B67               	infsnz	utoa@buf& (0+255),f,b
  3359  0005D8  2B68               	incf	(utoa@buf+1)& (0+255),f,b
  3360                           
  3361                           ; BSR set to: 0
  3362  0005DA  516D               	movf	utoa@v& (0+255),w,b
  3363  0005DC  116E               	iorwf	(utoa@v+1)& (0+255),w,b
  3364  0005DE  A4D8               	btfss	status,2,c
  3365  0005E0  D7EB               	goto	l1035
  3366                           
  3367                           ; BSR set to: 0
  3368                           
  3369                           ; BSR set to: 0
  3370  0005E2  C067  FFD9         	movff	utoa@buf,fsr2l
  3371  0005E6  C068  FFDA         	movff	utoa@buf+1,fsr2h
  3372  0005EA  0E00               	movlw	0
  3373  0005EC  6EDF               	movwf	indf2,c
  3374                           
  3375                           ; BSR set to: 0
  3376  0005EE  0767               	decf	utoa@buf& (0+255),f,b
  3377  0005F0  A0D8               	btfss	status,0,c
  3378  0005F2  0768               	decf	(utoa@buf+1)& (0+255),f,b
  3379  0005F4                     
  3380                           ; BSR set to: 0
  3381                           
  3382                           ; BSR set to: 0
  3383  0005F4  C069  F060         	movff	utoa@val,___lwmod@dividend
  3384  0005F8  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
  3385  0005FC  C06B  F062         	movff	utoa@base,___lwmod@divisor
  3386  000600  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
  3387  000604  ECA9  F008         	call	___lwmod	;wreg free
  3388  000608  0100               	movlb	0	; () banked
  3389  00060A  5160               	movf	?___lwmod& (0+255),w,b
  3390  00060C  6F6F               	movwf	utoa@c& (0+255),b
  3391                           
  3392                           ; BSR set to: 0
  3393  00060E  C069  F060         	movff	utoa@val,___lwdiv@dividend
  3394  000612  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
  3395  000616  C06B  F062         	movff	utoa@base,___lwdiv@divisor
  3396  00061A  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
  3397  00061E  EC0B  F008         	call	___lwdiv	;wreg free
  3398  000622  C060  F069         	movff	?___lwdiv,utoa@val
  3399  000626  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
  3400  00062A  0E09               	movlw	9
  3401  00062C  0100               	movlb	0	; () banked
  3402  00062E  656F               	cpfsgt	utoa@c& (0+255),b
  3403  000630  D002               	goto	l1038
  3404                           
  3405                           ; BSR set to: 0
  3406  000632  0E07               	movlw	7
  3407  000634  276F               	addwf	utoa@c& (0+255),f,b
  3408  000636                     l1038:
  3409                           
  3410                           ; BSR set to: 0
  3411  000636  0E30               	movlw	48
  3412  000638  276F               	addwf	utoa@c& (0+255),f,b
  3413                           
  3414                           ; BSR set to: 0
  3415  00063A  C067  FFD9         	movff	utoa@buf,fsr2l
  3416  00063E  C068  FFDA         	movff	utoa@buf+1,fsr2h
  3417  000642  C06F  FFDF         	movff	utoa@c,indf2
  3418                           
  3419                           ; BSR set to: 0
  3420  000646  0767               	decf	utoa@buf& (0+255),f,b
  3421  000648  A0D8               	btfss	status,0,c
  3422  00064A  0768               	decf	(utoa@buf+1)& (0+255),f,b
  3423                           
  3424                           ; BSR set to: 0
  3425  00064C  5169               	movf	utoa@val& (0+255),w,b
  3426  00064E  116A               	iorwf	(utoa@val+1)& (0+255),w,b
  3427  000650  A4D8               	btfss	status,2,c
  3428  000652  D7D0               	goto	l1037
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;	Return value of _utoa is never used
  3432                           
  3433                           ; BSR set to: 0
  3434  000654  4B67               	infsnz	utoa@buf& (0+255),f,b
  3435  000656  2B68               	incf	(utoa@buf+1)& (0+255),f,b
  3436  000658  0012               	return	
  3437  00065A                     __end_of_utoa:
  3438                           	opt stack 0
  3439                           tblptru	equ	0xFF8
  3440                           tblptrh	equ	0xFF7
  3441                           tblptrl	equ	0xFF6
  3442                           tablat	equ	0xFF5
  3443                           intcon	equ	0xFF2
  3444                           postinc0	equ	0xFEE
  3445                           wreg	equ	0xFE8
  3446                           indf2	equ	0xFDF
  3447                           fsr2h	equ	0xFDA
  3448                           fsr2l	equ	0xFD9
  3449                           status	equ	0xFD8
  3450                           
  3451 ;; *************** function ___lwmod *****************
  3452 ;; Defined at:
  3453 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  dividend        2    0[BANK0 ] unsigned int 
  3456 ;;  divisor         2    2[BANK0 ] unsigned int 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  counter         1    4[BANK0 ] unsigned char 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  2    0[BANK0 ] unsigned int 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3468 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3471 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3472 ;;Total ram usage:        5 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    9
  3475 ;; This function calls:
  3476 ;;		Nothing
  3477 ;; This function is called by:
  3478 ;;		_utoa
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	text20
  3483  001152                     __ptext20:
  3484                           	opt stack 0
  3485  001152                     ___lwmod:
  3486                           	opt stack 18
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;incstack = 0
  3490  001152  0100               	movlb	0	; () banked
  3491  001154  5162               	movf	___lwmod@divisor& (0+255),w,b
  3492  001156  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3493  001158  B4D8               	btfsc	status,2,c
  3494  00115A  D018               	goto	l1133
  3495                           
  3496                           ; BSR set to: 0
  3497  00115C  0E01               	movlw	1
  3498  00115E  6F64               	movwf	___lwmod@counter& (0+255),b
  3499  001160  D004               	goto	l1128
  3500  001162                     
  3501                           ; BSR set to: 0
  3502                           
  3503                           ; BSR set to: 0
  3504  001162  90D8               	bcf	status,0,c
  3505  001164  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  3506  001166  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3507  001168  2B64               	incf	___lwmod@counter& (0+255),f,b
  3508  00116A                     l1128:
  3509                           
  3510                           ; BSR set to: 0
  3511                           
  3512                           ; BSR set to: 0
  3513  00116A  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3514  00116C  D7FA               	goto	l1129
  3515  00116E                     u1460:
  3516                           
  3517                           ; BSR set to: 0
  3518                           
  3519                           ; BSR set to: 0
  3520                           
  3521                           ; BSR set to: 0
  3522  00116E  5162               	movf	___lwmod@divisor& (0+255),w,b
  3523  001170  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  3524  001172  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3525  001174  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3526  001176  A0D8               	btfss	status,0,c
  3527  001178  D004               	goto	l1132
  3528                           
  3529                           ; BSR set to: 0
  3530  00117A  5162               	movf	___lwmod@divisor& (0+255),w,b
  3531  00117C  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  3532  00117E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3533  001180  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3534  001182                     l1132:
  3535                           
  3536                           ; BSR set to: 0
  3537                           
  3538                           ; BSR set to: 0
  3539  001182  90D8               	bcf	status,0,c
  3540  001184  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3541  001186  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  3542                           
  3543                           ; BSR set to: 0
  3544  001188  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  3545  00118A  D7F1               	goto	u1460
  3546  00118C                     l1133:
  3547                           
  3548                           ; BSR set to: 0
  3549                           
  3550                           ; BSR set to: 0
  3551  00118C  C060  F060         	movff	___lwmod@dividend,?___lwmod
  3552  001190  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  3553                           
  3554                           ; BSR set to: 0
  3555  001194  0012               	return		;funcret
  3556  001196                     __end_of___lwmod:
  3557                           	opt stack 0
  3558                           tblptru	equ	0xFF8
  3559                           tblptrh	equ	0xFF7
  3560                           tblptrl	equ	0xFF6
  3561                           tablat	equ	0xFF5
  3562                           intcon	equ	0xFF2
  3563                           postinc0	equ	0xFEE
  3564                           wreg	equ	0xFE8
  3565                           indf2	equ	0xFDF
  3566                           fsr2h	equ	0xFDA
  3567                           fsr2l	equ	0xFD9
  3568                           status	equ	0xFD8
  3569                           
  3570 ;; *************** function ___lwdiv *****************
  3571 ;; Defined at:
  3572 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  dividend        2    0[BANK0 ] unsigned int 
  3575 ;;  divisor         2    2[BANK0 ] unsigned int 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  quotient        2    4[BANK0 ] unsigned int 
  3578 ;;  counter         1    6[BANK0 ] unsigned char 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  2    0[BANK0 ] unsigned int 
  3581 ;; Registers used:
  3582 ;;		wreg, status,2, status,0
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3588 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3589 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3591 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3592 ;;Total ram usage:        7 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    9
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_utoa
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text21
  3603  001016                     __ptext21:
  3604                           	opt stack 0
  3605  001016                     ___lwdiv:
  3606                           	opt stack 18
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;incstack = 0
  3610  001016  0E00               	movlw	0
  3611  001018  0100               	movlb	0	; () banked
  3612  00101A  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3613  00101C  0E00               	movlw	0
  3614  00101E  6F64               	movwf	___lwdiv@quotient& (0+255),b
  3615                           
  3616                           ; BSR set to: 0
  3617  001020  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3618  001022  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  3619  001024  B4D8               	btfsc	status,2,c
  3620  001026  D01C               	goto	l1123
  3621                           
  3622                           ; BSR set to: 0
  3623  001028  0E01               	movlw	1
  3624  00102A  6F66               	movwf	___lwdiv@counter& (0+255),b
  3625  00102C  D004               	goto	l1118
  3626  00102E                     
  3627                           ; BSR set to: 0
  3628                           
  3629                           ; BSR set to: 0
  3630  00102E  90D8               	bcf	status,0,c
  3631  001030  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  3632  001032  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3633  001034  2B66               	incf	___lwdiv@counter& (0+255),f,b
  3634  001036                     l1118:
  3635                           
  3636                           ; BSR set to: 0
  3637                           
  3638                           ; BSR set to: 0
  3639  001036  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3640  001038  D7FA               	goto	l1119
  3641  00103A                     u1430:
  3642                           
  3643                           ; BSR set to: 0
  3644                           
  3645                           ; BSR set to: 0
  3646                           
  3647                           ; BSR set to: 0
  3648  00103A  90D8               	bcf	status,0,c
  3649  00103C  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
  3650  00103E  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3651                           
  3652                           ; BSR set to: 0
  3653  001040  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3654  001042  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  3655  001044  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3656  001046  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3657  001048  A0D8               	btfss	status,0,c
  3658  00104A  D005               	goto	l1122
  3659                           
  3660                           ; BSR set to: 0
  3661  00104C  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3662  00104E  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  3663  001050  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3664  001052  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3665                           
  3666                           ; BSR set to: 0
  3667  001054  8164               	bsf	___lwdiv@quotient& (0+255),0,b
  3668  001056                     l1122:
  3669                           
  3670                           ; BSR set to: 0
  3671                           
  3672                           ; BSR set to: 0
  3673  001056  90D8               	bcf	status,0,c
  3674  001058  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3675  00105A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  3676                           
  3677                           ; BSR set to: 0
  3678  00105C  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
  3679  00105E  D7ED               	goto	u1430
  3680  001060                     l1123:
  3681                           
  3682                           ; BSR set to: 0
  3683                           
  3684                           ; BSR set to: 0
  3685  001060  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
  3686  001064  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3687                           
  3688                           ; BSR set to: 0
  3689  001068  0012               	return		;funcret
  3690  00106A                     __end_of___lwdiv:
  3691                           	opt stack 0
  3692                           tblptru	equ	0xFF8
  3693                           tblptrh	equ	0xFF7
  3694                           tblptrl	equ	0xFF6
  3695                           tablat	equ	0xFF5
  3696                           intcon	equ	0xFF2
  3697                           postinc0	equ	0xFEE
  3698                           wreg	equ	0xFE8
  3699                           indf2	equ	0xFDF
  3700                           fsr2h	equ	0xFDA
  3701                           fsr2l	equ	0xFD9
  3702                           status	equ	0xFD8
  3703                           
  3704 ;; *************** function _Make_Back_Arrow *****************
  3705 ;; Defined at:
  3706 ;;		line 85 in file "screen_controls.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;		None
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      void 
  3713 ;; Registers used:
  3714 ;;		wreg, status,2, status,0, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3724 ;;Total ram usage:        0 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; Hardware stack levels required when called:   12
  3727 ;; This function calls:
  3728 ;;		_GLCD_WriteData
  3729 ;; This function is called by:
  3730 ;;		_Draw_runTime_Menu
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text22
  3735  0013BE                     __ptext22:
  3736                           	opt stack 0
  3737  0013BE                     _Make_Back_Arrow:
  3738                           	opt stack 16
  3739                           
  3740                           ;screen_controls.c: 87: GLCD_WriteData(0x04);
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;incstack = 0
  3744  0013BE  0E04               	movlw	4
  3745  0013C0  ECE4  F005         	call	_GLCD_WriteData
  3746                           
  3747                           ;screen_controls.c: 88: GLCD_WriteData(0x0E);
  3748  0013C4  0E0E               	movlw	14
  3749  0013C6  ECE4  F005         	call	_GLCD_WriteData
  3750                           
  3751                           ;screen_controls.c: 89: GLCD_WriteData(0x95);
  3752  0013CA  0E95               	movlw	149
  3753  0013CC  ECE4  F005         	call	_GLCD_WriteData
  3754                           
  3755                           ;screen_controls.c: 90: GLCD_WriteData(0x84);
  3756  0013D0  0E84               	movlw	132
  3757  0013D2  ECE4  F005         	call	_GLCD_WriteData
  3758                           
  3759                           ;screen_controls.c: 91: GLCD_WriteData(0x84);
  3760  0013D6  0E84               	movlw	132
  3761  0013D8  ECE4  F005         	call	_GLCD_WriteData
  3762                           
  3763                           ;screen_controls.c: 92: GLCD_WriteData(0x44);
  3764  0013DC  0E44               	movlw	68
  3765  0013DE  ECE4  F005         	call	_GLCD_WriteData
  3766                           
  3767                           ;screen_controls.c: 93: GLCD_WriteData(0x38);
  3768  0013E2  0E38               	movlw	56
  3769  0013E4  ECE4  F005         	call	_GLCD_WriteData
  3770                           
  3771                           ;screen_controls.c: 94: GLCD_WriteData(0x00);
  3772  0013E8  0E00               	movlw	0
  3773  0013EA  ECE4  F005         	call	_GLCD_WriteData
  3774  0013EE  0012               	return		;funcret
  3775  0013F0                     __end_of_Make_Back_Arrow:
  3776                           	opt stack 0
  3777                           tblptru	equ	0xFF8
  3778                           tblptrh	equ	0xFF7
  3779                           tblptrl	equ	0xFF6
  3780                           tablat	equ	0xFF5
  3781                           intcon	equ	0xFF2
  3782                           postinc0	equ	0xFEE
  3783                           wreg	equ	0xFE8
  3784                           indf2	equ	0xFDF
  3785                           fsr2h	equ	0xFDA
  3786                           fsr2l	equ	0xFD9
  3787                           status	equ	0xFD8
  3788                           
  3789 ;; *************** function _GLCD_WriteString *****************
  3790 ;; Defined at:
  3791 ;;		line 70 in file "ks0108lib/KS0108.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  stringToWrit    2   13[BANK0 ] PTR unsigned char 
  3794 ;;		 -> STR_16(5), STR_15(4), STR_14(13), STR_13(4), 
  3795 ;;		 -> Draw_runTime_Menu@display(10), STR_12(11), STR_11(10), STR_10(9), 
  3796 ;;		 -> STR_9(10), STR_8(9), STR_7(11), STR_6(11), 
  3797 ;;		 -> STR_5(4), Initialize_Menus@display(10), STR_4(8), STR_3(7), 
  3798 ;;		 -> STR_2(10), STR_1(7), Run_Time_Menu_Function@display(10), 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3810 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3813 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;Total ram usage:        2 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:   13
  3817 ;; This function calls:
  3818 ;;		_GLCD_WriteChar
  3819 ;; This function is called by:
  3820 ;;		_Initialize_Menus
  3821 ;;		_Draw_runTime_Menu
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text23
  3826  000F10                     __ptext23:
  3827                           	opt stack 0
  3828  000F10                     _GLCD_WriteString:
  3829                           	opt stack 16
  3830                           
  3831                           ;KS0108.c: 72: while(*stringToWrite)
  3832                           
  3833                           ;incstack = 0
  3834  000F10  D016               	goto	l492
  3835  000F12                     
  3836                           ;KS0108.c: 73: GLCD_WriteChar(*stringToWrite++);
  3837  000F12  C06D  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  3838  000F16  C06E  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  3839  000F1A  0E00               	movlw	low (__mediumconst shr (0+16))
  3840  000F1C  6EF8               	movwf	tblptru,c
  3841  000F1E  0E0E               	movlw	(high __ramtop+-1)
  3842  000F20  64F7               	cpfsgt	tblptrh,c
  3843  000F22  D003               	bra	u1747
  3844  000F24  0008               	tblrd		*
  3845  000F26  50F5               	movf	tablat,w,c
  3846  000F28  D005               	bra	u1740
  3847  000F2A                     u1747:
  3848  000F2A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3849  000F2E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3850  000F32  50EF               	movf	indf0,w,c
  3851  000F34                     u1740:
  3852  000F34  ECB4  F007         	call	_GLCD_WriteChar
  3853  000F38  0100               	movlb	0	; () banked
  3854  000F3A  4B6D               	infsnz	GLCD_WriteString@stringToWrite& (0+255),f,b
  3855  000F3C  2B6E               	incf	(GLCD_WriteString@stringToWrite+1)& (0+255),f,b
  3856  000F3E                     l492:
  3857                           
  3858                           ; BSR set to: 0
  3859  000F3E  C06D  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  3860  000F42  C06E  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  3861  000F46  0E00               	movlw	low (__mediumconst shr (0+16))
  3862  000F48  6EF8               	movwf	tblptru,c
  3863  000F4A  0E0E               	movlw	(high __ramtop+-1)
  3864  000F4C  64F7               	cpfsgt	tblptrh,c
  3865  000F4E  D003               	bra	u1757
  3866  000F50  0008               	tblrd		*
  3867  000F52  50F5               	movf	tablat,w,c
  3868  000F54  D005               	bra	u1750
  3869  000F56                     u1757:
  3870  000F56  CFF6 FFE9          	movff	tblptrl,fsr0l
  3871  000F5A  CFF7 FFEA          	movff	tblptrh,fsr0h
  3872  000F5E  50EF               	movf	indf0,w,c
  3873  000F60                     u1750:
  3874  000F60  0900               	iorlw	0
  3875  000F62  B4D8               	btfsc	status,2,c
  3876  000F64  0012               	return	
  3877  000F66  D7D5               	goto	l493
  3878  000F68                     __end_of_GLCD_WriteString:
  3879                           	opt stack 0
  3880                           tblptru	equ	0xFF8
  3881                           tblptrh	equ	0xFF7
  3882                           tblptrl	equ	0xFF6
  3883                           tablat	equ	0xFF5
  3884                           intcon	equ	0xFF2
  3885                           indf0	equ	0xFEF
  3886                           postinc0	equ	0xFEE
  3887                           fsr0h	equ	0xFEA
  3888                           fsr0l	equ	0xFE9
  3889                           wreg	equ	0xFE8
  3890                           indf2	equ	0xFDF
  3891                           fsr2h	equ	0xFDA
  3892                           fsr2l	equ	0xFD9
  3893                           status	equ	0xFD8
  3894                           
  3895 ;; *************** function _GLCD_WriteChar *****************
  3896 ;; Defined at:
  3897 ;;		line 56 in file "ks0108lib/KS0108.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  charToWrite     1    wreg     unsigned char 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;  charToWrite     1   10[BANK0 ] unsigned char 
  3902 ;;  i               2   11[BANK0 ] int 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3913 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;Total ram usage:        3 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:   12
  3919 ;; This function calls:
  3920 ;;		_GLCD_WriteData
  3921 ;; This function is called by:
  3922 ;;		_GLCD_WriteString
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text24
  3927  000F68                     __ptext24:
  3928                           	opt stack 0
  3929  000F68                     _GLCD_WriteChar:
  3930                           	opt stack 16
  3931                           
  3932                           ;incstack = 0
  3933                           ;GLCD_WriteChar@charToWrite stored from wreg
  3934  000F68  0100               	movlb	0	; () banked
  3935  000F6A  6F6A               	movwf	GLCD_WriteChar@charToWrite& (0+255),b
  3936                           
  3937                           ;KS0108.c: 58: int i;
  3938                           ;KS0108.c: 59: charToWrite -= 32;
  3939  000F6C  0E20               	movlw	32
  3940  000F6E  0100               	movlb	0	; () banked
  3941  000F70  5F6A               	subwf	GLCD_WriteChar@charToWrite& (0+255),f,b
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
  3945  000F72  0E00               	movlw	0
  3946  000F74  6F6C               	movwf	(GLCD_WriteChar@i+1)& (0+255),b
  3947  000F76  0E00               	movlw	0
  3948  000F78  6F6B               	movwf	GLCD_WriteChar@i& (0+255),b
  3949  000F7A                     l3108:
  3950                           
  3951                           ; BSR set to: 0
  3952  000F7A  BF6C               	btfsc	(GLCD_WriteChar@i+1)& (0+255),7,b
  3953  000F7C  D006               	goto	l487
  3954  000F7E  516C               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  3955  000F80  E11B               	bnz	l3118
  3956  000F82  0E05               	movlw	5
  3957  000F84  5D6B               	subwf	GLCD_WriteChar@i& (0+255),w,b
  3958  000F86  B0D8               	btfsc	status,0,c
  3959  000F88  D017               	goto	u1580
  3960  000F8A                     l487:
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;KS0108.c: 61: {
  3964                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
  3965                           
  3966                           ; BSR set to: 0
  3967  000F8A  516A               	movf	GLCD_WriteChar@charToWrite& (0+255),w,b
  3968  000F8C  0D05               	mullw	5
  3969  000F8E  516B               	movf	GLCD_WriteChar@i& (0+255),w,b
  3970  000F90  26F3               	addwf	prodl,f,c
  3971  000F92  516C               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  3972  000F94  22F4               	addwfc	prodh,f,c
  3973  000F96  0EA1               	movlw	low _font5x8
  3974  000F98  24F3               	addwf	prodl,w,c
  3975  000F9A  6EF6               	movwf	tblptrl,c
  3976  000F9C  0EFD               	movlw	high _font5x8
  3977  000F9E  20F4               	addwfc	prodh,w,c
  3978  000FA0  6EF7               	movwf	tblptrh,c
  3979  000FA2                     	if	1	;There are 3 active tblptr bytes
  3980  000FA2  6AF8               	clrf	tblptru,c
  3981  000FA4  0E00               	movlw	low (__mediumconst shr (0+16))
  3982  000FA6  22F8               	addwfc	tblptru,f,c
  3983  000FA8                     	endif
  3984  000FA8  0008               	tblrd		*
  3985  000FAA  50F5               	movf	tablat,w,c
  3986  000FAC  ECE4  F005         	call	_GLCD_WriteData
  3987  000FB0  0100               	movlb	0	; () banked
  3988  000FB2  4B6B               	infsnz	GLCD_WriteChar@i& (0+255),f,b
  3989  000FB4  2B6C               	incf	(GLCD_WriteChar@i+1)& (0+255),f,b
  3990  000FB6  D7E1               	goto	l3108
  3991  000FB8                     u1580:
  3992  000FB8                     l3118:
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;KS0108.c: 64: }
  3996                           ;KS0108.c: 65: GLCD_WriteData(0x00);
  3997  000FB8  0E00               	movlw	0
  3998  000FBA  ECE4  F005         	call	_GLCD_WriteData
  3999  000FBE  0012               	return		;funcret
  4000  000FC0                     __end_of_GLCD_WriteChar:
  4001                           	opt stack 0
  4002                           tblptru	equ	0xFF8
  4003                           tblptrh	equ	0xFF7
  4004                           tblptrl	equ	0xFF6
  4005                           tablat	equ	0xFF5
  4006                           prodh	equ	0xFF4
  4007                           prodl	equ	0xFF3
  4008                           intcon	equ	0xFF2
  4009                           indf0	equ	0xFEF
  4010                           postinc0	equ	0xFEE
  4011                           fsr0h	equ	0xFEA
  4012                           fsr0l	equ	0xFE9
  4013                           wreg	equ	0xFE8
  4014                           indf2	equ	0xFDF
  4015                           fsr2h	equ	0xFDA
  4016                           fsr2l	equ	0xFD9
  4017                           status	equ	0xFD8
  4018                           
  4019 ;; *************** function _GLCD_Line *****************
  4020 ;; Defined at:
  4021 ;;		line 52 in file "ks0108lib/graphic.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  X1              2   21[BANK0 ] unsigned int 
  4024 ;;  Y1              2   23[BANK0 ] unsigned int 
  4025 ;;  X2              2   25[BANK0 ] unsigned int 
  4026 ;;  Y2              2   27[BANK0 ] unsigned int 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  Dy              2   49[BANK0 ] int 
  4029 ;;  Dx              2   47[BANK0 ] int 
  4030 ;;  CurrentY        2   45[BANK0 ] int 
  4031 ;;  CurrentX        2   43[BANK0 ] int 
  4032 ;;  TwoDy           2   41[BANK0 ] int 
  4033 ;;  TwoDx           2   39[BANK0 ] int 
  4034 ;;  Yinc            2   37[BANK0 ] int 
  4035 ;;  Xinc            2   35[BANK0 ] int 
  4036 ;;  TwoDyAccumul    2   33[BANK0 ] int 
  4037 ;;  TwoDxAccumul    2   31[BANK0 ] int 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      void 
  4040 ;; Registers used:
  4041 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4047 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4048 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4049 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4050 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4051 ;;Total ram usage:       30 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:   14
  4054 ;; This function calls:
  4055 ;;		_GLCD_SetPixel
  4056 ;; This function is called by:
  4057 ;;		_Initialize_Menus
  4058 ;;		_Draw_runTime_Menu
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           	psect	text25
  4063  0000B8                     __ptext25:
  4064                           	opt stack 0
  4065  0000B8                     _GLCD_Line:
  4066                           	opt stack 15
  4067                           
  4068                           ;graphic.c: 54: int CurrentX, CurrentY, Xinc, Yinc,
  4069                           ;graphic.c: 55: Dx, Dy, TwoDx, TwoDy,
  4070                           ;graphic.c: 56: TwoDxAccumulatedError, TwoDyAccumulatedError;
  4071                           ;graphic.c: 58: Dx = (X2-X1);
  4072                           
  4073                           ;incstack = 0
  4074  0000B8  C075  F07D         	movff	GLCD_Line@X1,??_GLCD_Line
  4075  0000BC  C076  F07E         	movff	GLCD_Line@X1+1,??_GLCD_Line+1
  4076  0000C0  0100               	movlb	0	; () banked
  4077  0000C2  1F7D               	comf	??_GLCD_Line& (0+255),f,b
  4078  0000C4  1F7E               	comf	(??_GLCD_Line+1)& (0+255),f,b
  4079  0000C6  4B7D               	infsnz	??_GLCD_Line& (0+255),f,b
  4080  0000C8  2B7E               	incf	(??_GLCD_Line+1)& (0+255),f,b
  4081  0000CA  5179               	movf	GLCD_Line@X2& (0+255),w,b
  4082  0000CC  257D               	addwf	??_GLCD_Line& (0+255),w,b
  4083  0000CE  6F8F               	movwf	GLCD_Line@Dx& (0+255),b
  4084  0000D0  517A               	movf	(GLCD_Line@X2+1)& (0+255),w,b
  4085  0000D2  217E               	addwfc	(??_GLCD_Line+1)& (0+255),w,b
  4086  0000D4  6F90               	movwf	(GLCD_Line@Dx+1)& (0+255),b
  4087                           
  4088                           ;graphic.c: 59: Dy = (Y2-Y1);
  4089  0000D6  C077  F07D         	movff	GLCD_Line@Y1,??_GLCD_Line
  4090  0000DA  C078  F07E         	movff	GLCD_Line@Y1+1,??_GLCD_Line+1
  4091  0000DE  1F7D               	comf	??_GLCD_Line& (0+255),f,b
  4092  0000E0  1F7E               	comf	(??_GLCD_Line+1)& (0+255),f,b
  4093  0000E2  4B7D               	infsnz	??_GLCD_Line& (0+255),f,b
  4094  0000E4  2B7E               	incf	(??_GLCD_Line+1)& (0+255),f,b
  4095  0000E6  517B               	movf	GLCD_Line@Y2& (0+255),w,b
  4096  0000E8  257D               	addwf	??_GLCD_Line& (0+255),w,b
  4097  0000EA  6F91               	movwf	GLCD_Line@Dy& (0+255),b
  4098  0000EC  517C               	movf	(GLCD_Line@Y2+1)& (0+255),w,b
  4099  0000EE  217E               	addwfc	(??_GLCD_Line+1)& (0+255),w,b
  4100  0000F0  6F92               	movwf	(GLCD_Line@Dy+1)& (0+255),b
  4101                           
  4102                           ;graphic.c: 61: TwoDx = Dx + Dx;
  4103  0000F2  90D8               	bcf	status,0,c
  4104  0000F4  358F               	rlcf	GLCD_Line@Dx& (0+255),w,b
  4105  0000F6  6F87               	movwf	GLCD_Line@TwoDx& (0+255),b
  4106  0000F8  3590               	rlcf	(GLCD_Line@Dx+1)& (0+255),w,b
  4107  0000FA  6F88               	movwf	(GLCD_Line@TwoDx+1)& (0+255),b
  4108                           
  4109                           ;graphic.c: 62: TwoDy = Dy + Dy;
  4110  0000FC  90D8               	bcf	status,0,c
  4111  0000FE  3591               	rlcf	GLCD_Line@Dy& (0+255),w,b
  4112  000100  6F89               	movwf	GLCD_Line@TwoDy& (0+255),b
  4113  000102  3592               	rlcf	(GLCD_Line@Dy+1)& (0+255),w,b
  4114  000104  6F8A               	movwf	(GLCD_Line@TwoDy+1)& (0+255),b
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;graphic.c: 64: CurrentX = X1;
  4118  000106  C075  F08B         	movff	GLCD_Line@X1,GLCD_Line@CurrentX
  4119  00010A  C076  F08C         	movff	GLCD_Line@X1+1,GLCD_Line@CurrentX+1
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;graphic.c: 65: CurrentY = Y1;
  4123  00010E  C077  F08D         	movff	GLCD_Line@Y1,GLCD_Line@CurrentY
  4124  000112  C078  F08E         	movff	GLCD_Line@Y1+1,GLCD_Line@CurrentY+1
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;graphic.c: 67: Xinc = 1;
  4128  000116  0E00               	movlw	0
  4129  000118  6F84               	movwf	(GLCD_Line@Xinc+1)& (0+255),b
  4130  00011A  0E01               	movlw	1
  4131  00011C  6F83               	movwf	GLCD_Line@Xinc& (0+255),b
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;graphic.c: 68: Yinc = 1;
  4135  00011E  0E00               	movlw	0
  4136  000120  6F86               	movwf	(GLCD_Line@Yinc+1)& (0+255),b
  4137  000122  0E01               	movlw	1
  4138  000124  6F85               	movwf	GLCD_Line@Yinc& (0+255),b
  4139                           
  4140                           ;graphic.c: 70: if(Dx < 0)
  4141  000126  AF90               	btfss	(GLCD_Line@Dx+1)& (0+255),7,b
  4142  000128  D00A               	goto	l438
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;graphic.c: 71: {
  4146                           ;graphic.c: 72: Xinc = -1;
  4147  00012A  6983               	setf	GLCD_Line@Xinc& (0+255),b
  4148  00012C  6984               	setf	(GLCD_Line@Xinc+1)& (0+255),b
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;graphic.c: 73: Dx = -Dx;
  4152  00012E  6D8F               	negf	GLCD_Line@Dx& (0+255),b
  4153  000130  1F90               	comf	(GLCD_Line@Dx+1)& (0+255),f,b
  4154  000132  B0D8               	btfsc	status,0,c
  4155  000134  2B90               	incf	(GLCD_Line@Dx+1)& (0+255),f,b
  4156                           
  4157                           ;graphic.c: 74: TwoDx = -TwoDx;
  4158  000136  6D87               	negf	GLCD_Line@TwoDx& (0+255),b
  4159  000138  1F88               	comf	(GLCD_Line@TwoDx+1)& (0+255),f,b
  4160  00013A  B0D8               	btfsc	status,0,c
  4161  00013C  2B88               	incf	(GLCD_Line@TwoDx+1)& (0+255),f,b
  4162  00013E                     l438:
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;graphic.c: 75: }
  4166                           ;graphic.c: 77: if (Dy < 0)
  4167                           
  4168                           ; BSR set to: 0
  4169  00013E  AF92               	btfss	(GLCD_Line@Dy+1)& (0+255),7,b
  4170  000140  D00A               	goto	l439
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;graphic.c: 78: {
  4174                           ;graphic.c: 79: Yinc = -1;
  4175  000142  6985               	setf	GLCD_Line@Yinc& (0+255),b
  4176  000144  6986               	setf	(GLCD_Line@Yinc+1)& (0+255),b
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;graphic.c: 80: Dy = -Dy;
  4180  000146  6D91               	negf	GLCD_Line@Dy& (0+255),b
  4181  000148  1F92               	comf	(GLCD_Line@Dy+1)& (0+255),f,b
  4182  00014A  B0D8               	btfsc	status,0,c
  4183  00014C  2B92               	incf	(GLCD_Line@Dy+1)& (0+255),f,b
  4184                           
  4185                           ;graphic.c: 81: TwoDy = -TwoDy;
  4186  00014E  6D89               	negf	GLCD_Line@TwoDy& (0+255),b
  4187  000150  1F8A               	comf	(GLCD_Line@TwoDy+1)& (0+255),f,b
  4188  000152  B0D8               	btfsc	status,0,c
  4189  000154  2B8A               	incf	(GLCD_Line@TwoDy+1)& (0+255),f,b
  4190  000156                     l439:
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;graphic.c: 82: }
  4194                           ;graphic.c: 84: GLCD_SetPixel(X1,Y1, color);
  4195                           
  4196                           ; BSR set to: 0
  4197  000156  C077  F06E         	movff	GLCD_Line@Y1,GLCD_SetPixel@y
  4198  00015A  0E81               	movlw	low _color
  4199  00015C  6EF6               	movwf	tblptrl,c
  4200  00015E                     	if	1	;There is more than 1 active tblptr byte
  4201  00015E  0EFF               	movlw	high _color
  4202  000160  6EF7               	movwf	tblptrh,c
  4203  000162                     	endif
  4204  000162                     	if	1	;There are 3 active tblptr bytes
  4205  000162  0E00               	movlw	low (_color shr (0+16))
  4206  000164  6EF8               	movwf	tblptru,c
  4207  000166                     	endif
  4208  000166  0008               	tblrd		*
  4209  000168  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  4210  00016C  5175               	movf	GLCD_Line@X1& (0+255),w,b
  4211  00016E  EC2D  F003         	call	_GLCD_SetPixel
  4212                           
  4213                           ;graphic.c: 86: if ((Dx != 0) || (Dy != 0))
  4214  000172  0100               	movlb	0	; () banked
  4215  000174  518F               	movf	GLCD_Line@Dx& (0+255),w,b
  4216  000176  1190               	iorwf	(GLCD_Line@Dx+1)& (0+255),w,b
  4217  000178  A4D8               	btfss	status,2,c
  4218  00017A  D004               	goto	u1840
  4219                           
  4220                           ; BSR set to: 0
  4221  00017C  5191               	movf	GLCD_Line@Dy& (0+255),w,b
  4222  00017E  1192               	iorwf	(GLCD_Line@Dy+1)& (0+255),w,b
  4223  000180  B4D8               	btfsc	status,2,c
  4224  000182  0012               	return	
  4225  000184                     u1840:
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;graphic.c: 87: {
  4229                           ;graphic.c: 89: if (Dy <= Dx)
  4230                           
  4231                           ; BSR set to: 0
  4232  000184  5191               	movf	GLCD_Line@Dy& (0+255),w,b
  4233  000186  5D8F               	subwf	GLCD_Line@Dx& (0+255),w,b
  4234  000188  5190               	movf	(GLCD_Line@Dx+1)& (0+255),w,b
  4235  00018A  0A80               	xorlw	128
  4236  00018C  6F7D               	movwf	??_GLCD_Line& (0+255),b
  4237  00018E  5192               	movf	(GLCD_Line@Dy+1)& (0+255),w,b
  4238  000190  0A80               	xorlw	128
  4239  000192  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  4240  000194  A0D8               	btfss	status,0,c
  4241  000196  D035               	goto	l443
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;graphic.c: 90: {
  4245                           ;graphic.c: 91: TwoDxAccumulatedError = 0;
  4246  000198  0E00               	movlw	0
  4247  00019A  6F80               	movwf	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),b
  4248  00019C  0E00               	movlw	0
  4249  00019E  6F7F               	movwf	GLCD_Line@TwoDxAccumulatedError& (0+255),b
  4250  0001A0                     l3346:
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;graphic.c: 93: {
  4254                           ;graphic.c: 94: CurrentX += Xinc;
  4255  0001A0  5183               	movf	GLCD_Line@Xinc& (0+255),w,b
  4256  0001A2  278B               	addwf	GLCD_Line@CurrentX& (0+255),f,b
  4257  0001A4  5184               	movf	(GLCD_Line@Xinc+1)& (0+255),w,b
  4258  0001A6  238C               	addwfc	(GLCD_Line@CurrentX+1)& (0+255),f,b
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;graphic.c: 95: TwoDxAccumulatedError += TwoDy;
  4262  0001A8  5189               	movf	GLCD_Line@TwoDy& (0+255),w,b
  4263  0001AA  277F               	addwf	GLCD_Line@TwoDxAccumulatedError& (0+255),f,b
  4264  0001AC  518A               	movf	(GLCD_Line@TwoDy+1)& (0+255),w,b
  4265  0001AE  2380               	addwfc	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),f,b
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;graphic.c: 96: if(TwoDxAccumulatedError > Dx)
  4269  0001B0  517F               	movf	GLCD_Line@TwoDxAccumulatedError& (0+255),w,b
  4270  0001B2  5D8F               	subwf	GLCD_Line@Dx& (0+255),w,b
  4271  0001B4  5190               	movf	(GLCD_Line@Dx+1)& (0+255),w,b
  4272  0001B6  0A80               	xorlw	128
  4273  0001B8  6F7D               	movwf	??_GLCD_Line& (0+255),b
  4274  0001BA  5180               	movf	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),w,b
  4275  0001BC  0A80               	xorlw	128
  4276  0001BE  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  4277  0001C0  B0D8               	btfsc	status,0,c
  4278  0001C2  D008               	goto	l445
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;graphic.c: 97: {
  4282                           ;graphic.c: 98: CurrentY += Yinc;
  4283  0001C4  5185               	movf	GLCD_Line@Yinc& (0+255),w,b
  4284  0001C6  278D               	addwf	GLCD_Line@CurrentY& (0+255),f,b
  4285  0001C8  5186               	movf	(GLCD_Line@Yinc+1)& (0+255),w,b
  4286  0001CA  238E               	addwfc	(GLCD_Line@CurrentY+1)& (0+255),f,b
  4287                           
  4288                           ;graphic.c: 99: TwoDxAccumulatedError -= TwoDx;
  4289  0001CC  5187               	movf	GLCD_Line@TwoDx& (0+255),w,b
  4290  0001CE  5F7F               	subwf	GLCD_Line@TwoDxAccumulatedError& (0+255),f,b
  4291  0001D0  5188               	movf	(GLCD_Line@TwoDx+1)& (0+255),w,b
  4292  0001D2  5B80               	subwfb	(GLCD_Line@TwoDxAccumulatedError+1)& (0+255),f,b
  4293  0001D4                     l445:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;graphic.c: 100: }
  4297                           ;graphic.c: 101: GLCD_SetPixel(CurrentX,CurrentY, color);
  4298                           
  4299                           ; BSR set to: 0
  4300  0001D4  C08D  F06E         	movff	GLCD_Line@CurrentY,GLCD_SetPixel@y
  4301  0001D8  0E81               	movlw	low _color
  4302  0001DA  6EF6               	movwf	tblptrl,c
  4303  0001DC                     	if	1	;There is more than 1 active tblptr byte
  4304  0001DC  0EFF               	movlw	high _color
  4305  0001DE  6EF7               	movwf	tblptrh,c
  4306  0001E0                     	endif
  4307  0001E0                     	if	1	;There are 3 active tblptr bytes
  4308  0001E0  0E00               	movlw	low (_color shr (0+16))
  4309  0001E2  6EF8               	movwf	tblptru,c
  4310  0001E4                     	endif
  4311  0001E4  0008               	tblrd		*
  4312  0001E6  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  4313  0001EA  518B               	movf	GLCD_Line@CurrentX& (0+255),w,b
  4314  0001EC  EC2D  F003         	call	_GLCD_SetPixel
  4315                           
  4316                           ;graphic.c: 102: }while (CurrentX != X2);
  4317  0001F0  0100               	movlb	0	; () banked
  4318  0001F2  5179               	movf	GLCD_Line@X2& (0+255),w,b
  4319  0001F4  198B               	xorwf	GLCD_Line@CurrentX& (0+255),w,b
  4320  0001F6  E1D4               	bnz	l3346
  4321  0001F8  517A               	movf	(GLCD_Line@X2+1)& (0+255),w,b
  4322  0001FA  198C               	xorwf	(GLCD_Line@CurrentX+1)& (0+255),w,b
  4323  0001FC  B4D8               	btfsc	status,2,c
  4324  0001FE  0012               	return	
  4325  000200  D7CF               	goto	l444
  4326  000202                     l443:
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;graphic.c: 104: else
  4330                           ;graphic.c: 105: {
  4331                           ;graphic.c: 106: TwoDyAccumulatedError = 0;
  4332                           
  4333                           ; BSR set to: 0
  4334  000202  0E00               	movlw	0
  4335  000204  6F82               	movwf	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),b
  4336  000206  0E00               	movlw	0
  4337  000208  6F81               	movwf	GLCD_Line@TwoDyAccumulatedError& (0+255),b
  4338  00020A                     l3360:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;graphic.c: 108: {
  4342                           ;graphic.c: 109: CurrentY += Yinc;
  4343  00020A  5185               	movf	GLCD_Line@Yinc& (0+255),w,b
  4344  00020C  278D               	addwf	GLCD_Line@CurrentY& (0+255),f,b
  4345  00020E  5186               	movf	(GLCD_Line@Yinc+1)& (0+255),w,b
  4346  000210  238E               	addwfc	(GLCD_Line@CurrentY+1)& (0+255),f,b
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;graphic.c: 110: TwoDyAccumulatedError += TwoDx;
  4350  000212  5187               	movf	GLCD_Line@TwoDx& (0+255),w,b
  4351  000214  2781               	addwf	GLCD_Line@TwoDyAccumulatedError& (0+255),f,b
  4352  000216  5188               	movf	(GLCD_Line@TwoDx+1)& (0+255),w,b
  4353  000218  2382               	addwfc	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),f,b
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;graphic.c: 111: if(TwoDyAccumulatedError>Dy)
  4357  00021A  5181               	movf	GLCD_Line@TwoDyAccumulatedError& (0+255),w,b
  4358  00021C  5D91               	subwf	GLCD_Line@Dy& (0+255),w,b
  4359  00021E  5192               	movf	(GLCD_Line@Dy+1)& (0+255),w,b
  4360  000220  0A80               	xorlw	128
  4361  000222  6F7D               	movwf	??_GLCD_Line& (0+255),b
  4362  000224  5182               	movf	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),w,b
  4363  000226  0A80               	xorlw	128
  4364  000228  597D               	subwfb	??_GLCD_Line& (0+255),w,b
  4365  00022A  B0D8               	btfsc	status,0,c
  4366  00022C  D008               	goto	l449
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;graphic.c: 112: {
  4370                           ;graphic.c: 113: CurrentX += Xinc;
  4371  00022E  5183               	movf	GLCD_Line@Xinc& (0+255),w,b
  4372  000230  278B               	addwf	GLCD_Line@CurrentX& (0+255),f,b
  4373  000232  5184               	movf	(GLCD_Line@Xinc+1)& (0+255),w,b
  4374  000234  238C               	addwfc	(GLCD_Line@CurrentX+1)& (0+255),f,b
  4375                           
  4376                           ;graphic.c: 114: TwoDyAccumulatedError -= TwoDy;
  4377  000236  5189               	movf	GLCD_Line@TwoDy& (0+255),w,b
  4378  000238  5F81               	subwf	GLCD_Line@TwoDyAccumulatedError& (0+255),f,b
  4379  00023A  518A               	movf	(GLCD_Line@TwoDy+1)& (0+255),w,b
  4380  00023C  5B82               	subwfb	(GLCD_Line@TwoDyAccumulatedError+1)& (0+255),f,b
  4381  00023E                     l449:
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;graphic.c: 115: }
  4385                           ;graphic.c: 116: GLCD_SetPixel(CurrentX,CurrentY, color);
  4386                           
  4387                           ; BSR set to: 0
  4388  00023E  C08D  F06E         	movff	GLCD_Line@CurrentY,GLCD_SetPixel@y
  4389  000242  0E81               	movlw	low _color
  4390  000244  6EF6               	movwf	tblptrl,c
  4391  000246                     	if	1	;There is more than 1 active tblptr byte
  4392  000246  0EFF               	movlw	high _color
  4393  000248  6EF7               	movwf	tblptrh,c
  4394  00024A                     	endif
  4395  00024A                     	if	1	;There are 3 active tblptr bytes
  4396  00024A  0E00               	movlw	low (_color shr (0+16))
  4397  00024C  6EF8               	movwf	tblptru,c
  4398  00024E                     	endif
  4399  00024E  0008               	tblrd		*
  4400  000250  CFF5 F06F          	movff	tablat,GLCD_SetPixel@color
  4401  000254  518B               	movf	GLCD_Line@CurrentX& (0+255),w,b
  4402  000256  EC2D  F003         	call	_GLCD_SetPixel
  4403                           
  4404                           ;graphic.c: 117: }while (CurrentY != Y2);
  4405  00025A  0100               	movlb	0	; () banked
  4406  00025C  517B               	movf	GLCD_Line@Y2& (0+255),w,b
  4407  00025E  198D               	xorwf	GLCD_Line@CurrentY& (0+255),w,b
  4408  000260  E1D4               	bnz	l3360
  4409  000262  517C               	movf	(GLCD_Line@Y2+1)& (0+255),w,b
  4410  000264  198E               	xorwf	(GLCD_Line@CurrentY+1)& (0+255),w,b
  4411  000266  B4D8               	btfsc	status,2,c
  4412  000268  0012               	return	
  4413  00026A  D7CF               	goto	l448
  4414  00026C                     __end_of_GLCD_Line:
  4415                           	opt stack 0
  4416                           tblptru	equ	0xFF8
  4417                           tblptrh	equ	0xFF7
  4418                           tblptrl	equ	0xFF6
  4419                           tablat	equ	0xFF5
  4420                           prodh	equ	0xFF4
  4421                           prodl	equ	0xFF3
  4422                           intcon	equ	0xFF2
  4423                           indf0	equ	0xFEF
  4424                           postinc0	equ	0xFEE
  4425                           fsr0h	equ	0xFEA
  4426                           fsr0l	equ	0xFE9
  4427                           wreg	equ	0xFE8
  4428                           indf2	equ	0xFDF
  4429                           fsr2h	equ	0xFDA
  4430                           fsr2l	equ	0xFD9
  4431                           status	equ	0xFD8
  4432                           
  4433 ;; *************** function _GLCD_SetPixel *****************
  4434 ;; Defined at:
  4435 ;;		line 78 in file "ks0108lib/KS0108.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  x               1    wreg     unsigned char 
  4438 ;;  y               1   14[BANK0 ] unsigned char 
  4439 ;;  color           1   15[BANK0 ] unsigned char 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  x               1   19[BANK0 ] unsigned char 
  4442 ;;  tmp             1   18[BANK0 ] unsigned char 
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      void 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4452 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4453 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4454 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4455 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4456 ;;Total ram usage:        7 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:   13
  4459 ;; This function calls:
  4460 ;;		_GLCD_GoTo
  4461 ;;		_GLCD_ReadData
  4462 ;;		_GLCD_WriteData
  4463 ;;		___awdiv
  4464 ;; This function is called by:
  4465 ;;		_GLCD_Line
  4466 ;;		_GLCD_Rectangle
  4467 ;;		_GLCD_Circle
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text26
  4472  00065A                     __ptext26:
  4473                           	opt stack 0
  4474  00065A                     _GLCD_SetPixel:
  4475                           	opt stack 15
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;incstack = 0
  4479                           ;GLCD_SetPixel@x stored from wreg
  4480  00065A  0100               	movlb	0	; () banked
  4481  00065C  6F73               	movwf	GLCD_SetPixel@x& (0+255),b
  4482                           
  4483                           ;KS0108.c: 80: unsigned char tmp;
  4484                           ;KS0108.c: 81: GLCD_GoTo(x, (y / 8));
  4485  00065E  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  4486  000662  0100               	movlb	0	; () banked
  4487  000664  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4488  000666  0E00               	movlw	0
  4489  000668  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4490  00066A  0E08               	movlw	8
  4491  00066C  6F62               	movwf	___awdiv@divisor& (0+255),b
  4492  00066E  ECA5  F004         	call	___awdiv	;wreg free
  4493  000672  0100               	movlb	0	; () banked
  4494  000674  5160               	movf	?___awdiv& (0+255),w,b
  4495  000676  6F74               	movwf	_GLCD_SetPixel$1758& (0+255),b
  4496                           
  4497                           ;KS0108.c: 80: unsigned char tmp;
  4498                           ;KS0108.c: 81: GLCD_GoTo(x, (y / 8));
  4499  000678  C074  F06B         	movff	_GLCD_SetPixel$1758,GLCD_GoTo@y
  4500  00067C  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  4501  00067E  EC1D  F004         	call	_GLCD_GoTo
  4502                           
  4503                           ;KS0108.c: 82: tmp = GLCD_ReadData();
  4504  000682  EC20  F006         	call	_GLCD_ReadData	;wreg free
  4505  000686  0100               	movlb	0	; () banked
  4506  000688  6F72               	movwf	GLCD_SetPixel@tmp& (0+255),b
  4507                           
  4508                           ;KS0108.c: 83: GLCD_GoTo(x, (y / 8));
  4509  00068A  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  4510  00068E  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4511  000690  0E00               	movlw	0
  4512  000692  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4513  000694  0E08               	movlw	8
  4514  000696  6F62               	movwf	___awdiv@divisor& (0+255),b
  4515  000698  ECA5  F004         	call	___awdiv	;wreg free
  4516  00069C  0100               	movlb	0	; () banked
  4517  00069E  5160               	movf	?___awdiv& (0+255),w,b
  4518  0006A0  6F74               	movwf	_GLCD_SetPixel$1758& (0+255),b
  4519                           
  4520                           ;KS0108.c: 83: GLCD_GoTo(x, (y / 8));
  4521  0006A2  C074  F06B         	movff	_GLCD_SetPixel$1758,GLCD_GoTo@y
  4522  0006A6  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  4523  0006A8  EC1D  F004         	call	_GLCD_GoTo
  4524                           
  4525                           ;KS0108.c: 84: tmp = GLCD_ReadData();
  4526  0006AC  EC20  F006         	call	_GLCD_ReadData	;wreg free
  4527  0006B0  0100               	movlb	0	; () banked
  4528  0006B2  6F72               	movwf	GLCD_SetPixel@tmp& (0+255),b
  4529                           
  4530                           ;KS0108.c: 85: GLCD_GoTo(x, (y / 8));
  4531  0006B4  C06E  F060         	movff	GLCD_SetPixel@y,___awdiv@dividend
  4532  0006B8  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4533  0006BA  0E00               	movlw	0
  4534  0006BC  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4535  0006BE  0E08               	movlw	8
  4536  0006C0  6F62               	movwf	___awdiv@divisor& (0+255),b
  4537  0006C2  ECA5  F004         	call	___awdiv	;wreg free
  4538  0006C6  0100               	movlb	0	; () banked
  4539  0006C8  5160               	movf	?___awdiv& (0+255),w,b
  4540  0006CA  6F74               	movwf	_GLCD_SetPixel$1758& (0+255),b
  4541                           
  4542                           ;KS0108.c: 85: GLCD_GoTo(x, (y / 8));
  4543  0006CC  C074  F06B         	movff	_GLCD_SetPixel$1758,GLCD_GoTo@y
  4544  0006D0  5173               	movf	GLCD_SetPixel@x& (0+255),w,b
  4545  0006D2  EC1D  F004         	call	_GLCD_GoTo
  4546                           
  4547                           ;KS0108.c: 86: tmp |= (1 << (y % 8));
  4548  0006D6  C06E  F070         	movff	GLCD_SetPixel@y,??_GLCD_SetPixel
  4549  0006DA  0E07               	movlw	7
  4550  0006DC  0100               	movlb	0	; () banked
  4551  0006DE  1770               	andwf	??_GLCD_SetPixel& (0+255),f,b
  4552  0006E0  0E01               	movlw	1
  4553  0006E2  6F71               	movwf	(??_GLCD_SetPixel+1)& (0+255),b
  4554  0006E4  2B70               	incf	??_GLCD_SetPixel& (0+255),f,b
  4555  0006E6  D002               	goto	u1564
  4556  0006E8                     u1565:
  4557  0006E8  90D8               	bcf	status,0,c
  4558  0006EA  3771               	rlcf	(??_GLCD_SetPixel+1)& (0+255),f,b
  4559  0006EC                     u1564:
  4560  0006EC  2F70               	decfsz	??_GLCD_SetPixel& (0+255),f,b
  4561  0006EE  D7FC               	goto	u1565
  4562  0006F0  0100               	movlb	0	; () banked
  4563  0006F2  5171               	movf	(??_GLCD_SetPixel+1)& (0+255),w,b
  4564  0006F4  1372               	iorwf	GLCD_SetPixel@tmp& (0+255),f,b
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;KS0108.c: 87: GLCD_WriteData(tmp);
  4568  0006F6  5172               	movf	GLCD_SetPixel@tmp& (0+255),w,b
  4569  0006F8  ECE4  F005         	call	_GLCD_WriteData
  4570  0006FC  0012               	return		;funcret
  4571  0006FE                     __end_of_GLCD_SetPixel:
  4572                           	opt stack 0
  4573                           tblptru	equ	0xFF8
  4574                           tblptrh	equ	0xFF7
  4575                           tblptrl	equ	0xFF6
  4576                           tablat	equ	0xFF5
  4577                           prodh	equ	0xFF4
  4578                           prodl	equ	0xFF3
  4579                           intcon	equ	0xFF2
  4580                           indf0	equ	0xFEF
  4581                           postinc0	equ	0xFEE
  4582                           fsr0h	equ	0xFEA
  4583                           fsr0l	equ	0xFE9
  4584                           wreg	equ	0xFE8
  4585                           indf2	equ	0xFDF
  4586                           fsr2h	equ	0xFDA
  4587                           fsr2l	equ	0xFD9
  4588                           status	equ	0xFD8
  4589                           
  4590 ;; *************** function _GLCD_ReadData *****************
  4591 ;; Defined at:
  4592 ;;		line 94 in file "ks0108lib/KS0108-PIC18.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;		None
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;  data            1    9[BANK0 ] unsigned char 
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  1    wreg      unsigned char 
  4599 ;; Registers used:
  4600 ;;		wreg, status,2, status,0, cstack
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4607 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4608 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4609 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4610 ;;Total ram usage:        2 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; Hardware stack levels required when called:   11
  4613 ;; This function calls:
  4614 ;;		_GLCD_Delay
  4615 ;;		_GLCD_DisableController
  4616 ;;		_GLCD_EnableController
  4617 ;;		_GLCD_ReadStatus
  4618 ;;		___awdiv
  4619 ;; This function is called by:
  4620 ;;		_GLCD_SetPixel
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text27
  4625  000C40                     __ptext27:
  4626                           	opt stack 0
  4627  000C40                     _GLCD_ReadData:
  4628                           	opt stack 16
  4629                           
  4630                           ;KS0108-PIC18.c: 96: unsigned char data;
  4631                           ;KS0108-PIC18.c: 97: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  4632                           
  4633                           ;incstack = 0
  4634  000C40  C0A4  F060         	movff	_screen_x,___awdiv@dividend
  4635  000C44  0100               	movlb	0	; () banked
  4636  000C46  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4637  000C48  0E00               	movlw	0
  4638  000C4A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4639  000C4C  0E40               	movlw	64
  4640  000C4E  6F62               	movwf	___awdiv@divisor& (0+255),b
  4641  000C50  ECA5  F004         	call	___awdiv	;wreg free
  4642  000C54  0100               	movlb	0	; () banked
  4643  000C56  5160               	movf	?___awdiv& (0+255),w,b
  4644  000C58  EC10  F00A         	call	_GLCD_ReadStatus
  4645  000C5C  0100               	movlb	0	; () banked
  4646  000C5E  6F68               	movwf	??_GLCD_ReadData& (0+255),b
  4647  000C60  BF68               	btfsc	??_GLCD_ReadData& (0+255),7,b
  4648  000C62  D7EE               	goto	_GLCD_ReadData
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;KS0108-PIC18.c: 98: TRISD = 0xFF;
  4652  000C64  6895               	setf	3989,c	;volatile
  4653                           
  4654                           ; BSR set to: 0
  4655                           ;KS0108-PIC18.c: 99: PORTA |= ((1 << 1) | (1 << 2));
  4656  000C66  0E06               	movlw	6
  4657  000C68  1280               	iorwf	3968,f,c	;volatile
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;KS0108-PIC18.c: 100: GLCD_EnableController(screen_x / 64);
  4661  000C6A  C0A4  F060         	movff	_screen_x,___awdiv@dividend
  4662  000C6E  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4663  000C70  0E00               	movlw	0
  4664  000C72  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4665  000C74  0E40               	movlw	64
  4666  000C76  6F62               	movwf	___awdiv@divisor& (0+255),b
  4667  000C78  ECA5  F004         	call	___awdiv	;wreg free
  4668  000C7C  0100               	movlb	0	; () banked
  4669  000C7E  5160               	movf	?___awdiv& (0+255),w,b
  4670  000C80  EC26  F00A         	call	_GLCD_EnableController
  4671                           
  4672                           ;KS0108-PIC18.c: 102: PORTA |= (1 << 3);
  4673  000C84  8680               	bsf	3968,3,c	;volatile
  4674                           
  4675                           ;KS0108-PIC18.c: 103: GLCD_Delay();
  4676  000C86  EC22  F00B         	call	_GLCD_Delay	;wreg free
  4677                           
  4678                           ;KS0108-PIC18.c: 104: data = PORTD;
  4679  000C8A  CF83 F069          	movff	3971,GLCD_ReadData@data	;volatile
  4680                           
  4681                           ;KS0108-PIC18.c: 105: PORTA &= ~(1 << 3);
  4682  000C8E  9680               	bcf	3968,3,c	;volatile
  4683                           
  4684                           ;KS0108-PIC18.c: 106: GLCD_DisableController(screen_x / 64);
  4685  000C90  C0A4  F060         	movff	_screen_x,___awdiv@dividend
  4686  000C94  0100               	movlb	0	; () banked
  4687  000C96  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4688  000C98  0E00               	movlw	0
  4689  000C9A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4690  000C9C  0E40               	movlw	64
  4691  000C9E  6F62               	movwf	___awdiv@divisor& (0+255),b
  4692  000CA0  ECA5  F004         	call	___awdiv	;wreg free
  4693  000CA4  0100               	movlb	0	; () banked
  4694  000CA6  5160               	movf	?___awdiv& (0+255),w,b
  4695  000CA8  EC3B  F00A         	call	_GLCD_DisableController
  4696                           
  4697                           ;KS0108-PIC18.c: 107: screen_x++;
  4698  000CAC  0100               	movlb	0	; () banked
  4699  000CAE  2BA4               	incf	_screen_x& (0+255),f,b
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;KS0108-PIC18.c: 108: return data;
  4703  000CB0  5169               	movf	GLCD_ReadData@data& (0+255),w,b
  4704  000CB2  0012               	return	
  4705  000CB4                     __end_of_GLCD_ReadData:
  4706                           	opt stack 0
  4707                           tblptru	equ	0xFF8
  4708                           tblptrh	equ	0xFF7
  4709                           tblptrl	equ	0xFF6
  4710                           tablat	equ	0xFF5
  4711                           prodh	equ	0xFF4
  4712                           prodl	equ	0xFF3
  4713                           intcon	equ	0xFF2
  4714                           indf0	equ	0xFEF
  4715                           postinc0	equ	0xFEE
  4716                           fsr0h	equ	0xFEA
  4717                           fsr0l	equ	0xFE9
  4718                           wreg	equ	0xFE8
  4719                           indf2	equ	0xFDF
  4720                           fsr2h	equ	0xFDA
  4721                           fsr2l	equ	0xFD9
  4722                           status	equ	0xFD8
  4723                           
  4724 ;; *************** function _GLCD_ClearScreen *****************
  4725 ;; Defined at:
  4726 ;;		line 43 in file "ks0108lib/KS0108.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  j               1   15[BANK0 ] unsigned char 
  4731 ;;  i               1   14[BANK0 ] unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0, cstack
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4742 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4744 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4745 ;;Total ram usage:        2 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:   13
  4748 ;; This function calls:
  4749 ;;		_GLCD_GoTo
  4750 ;;		_GLCD_WriteData
  4751 ;; This function is called by:
  4752 ;;		_main
  4753 ;;		_Initialize_Menus
  4754 ;;		_Draw_runTime_Menu
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text28
  4759  001388                     __ptext28:
  4760                           	opt stack 0
  4761  001388                     _GLCD_ClearScreen:
  4762                           	opt stack 16
  4763                           
  4764                           ;KS0108.c: 45: unsigned char i, j;
  4765                           ;KS0108.c: 46: for(j = 0; j < 64/8; j++)
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;incstack = 0
  4769  001388  0E00               	movlw	0
  4770  00138A  0100               	movlb	0	; () banked
  4771  00138C  6F6F               	movwf	GLCD_ClearScreen@j& (0+255),b
  4772  00138E                     l3294:
  4773                           
  4774                           ; BSR set to: 0
  4775  00138E  0E07               	movlw	7
  4776  001390  656F               	cpfsgt	GLCD_ClearScreen@j& (0+255),b
  4777  001392  D001               	goto	l480
  4778  001394  0012               	return	
  4779  001396                     l480:
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;KS0108.c: 47: {
  4783                           ;KS0108.c: 48: GLCD_GoTo(0,j);
  4784                           
  4785                           ; BSR set to: 0
  4786  001396  C06F  F06B         	movff	GLCD_ClearScreen@j,GLCD_GoTo@y
  4787  00139A  0E00               	movlw	0
  4788  00139C  EC1D  F004         	call	_GLCD_GoTo
  4789                           
  4790                           ;KS0108.c: 49: for(i = 0; i < 128; i++)
  4791  0013A0  0E00               	movlw	0
  4792  0013A2  0100               	movlb	0	; () banked
  4793  0013A4  6F6E               	movwf	GLCD_ClearScreen@i& (0+255),b
  4794  0013A6                     l3302:
  4795                           
  4796                           ; BSR set to: 0
  4797  0013A6  0E7F               	movlw	127
  4798  0013A8  656E               	cpfsgt	GLCD_ClearScreen@i& (0+255),b
  4799  0013AA  D001               	goto	l482
  4800  0013AC  D006               	goto	u1790
  4801  0013AE                     l482:
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;KS0108.c: 50: GLCD_WriteData(0x00);
  4805                           
  4806                           ; BSR set to: 0
  4807  0013AE  0E00               	movlw	0
  4808  0013B0  ECE4  F005         	call	_GLCD_WriteData
  4809  0013B4  0100               	movlb	0	; () banked
  4810  0013B6  2B6E               	incf	GLCD_ClearScreen@i& (0+255),f,b
  4811  0013B8  D7F6               	goto	l3302
  4812  0013BA                     u1790:
  4813                           
  4814                           ; BSR set to: 0
  4815                           
  4816                           ; BSR set to: 0
  4817  0013BA  2B6F               	incf	GLCD_ClearScreen@j& (0+255),f,b
  4818  0013BC  D7E8               	goto	l3294
  4819  0013BE                     __end_of_GLCD_ClearScreen:
  4820                           	opt stack 0
  4821                           tblptru	equ	0xFF8
  4822                           tblptrh	equ	0xFF7
  4823                           tblptrl	equ	0xFF6
  4824                           tablat	equ	0xFF5
  4825                           prodh	equ	0xFF4
  4826                           prodl	equ	0xFF3
  4827                           intcon	equ	0xFF2
  4828                           indf0	equ	0xFEF
  4829                           postinc0	equ	0xFEE
  4830                           fsr0h	equ	0xFEA
  4831                           fsr0l	equ	0xFE9
  4832                           wreg	equ	0xFE8
  4833                           indf2	equ	0xFDF
  4834                           fsr2h	equ	0xFDA
  4835                           fsr2l	equ	0xFD9
  4836                           status	equ	0xFD8
  4837                           
  4838 ;; *************** function _Draw_Arrow *****************
  4839 ;; Defined at:
  4840 ;;		line 51 in file "screen_controls.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;		None
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;		None
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0, cstack
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4858 ;;Total ram usage:        0 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:   14
  4861 ;; This function calls:
  4862 ;;		_Clear_Arrow_Column
  4863 ;;		_Clear_runTime_Arrows
  4864 ;;		_Draw_runTime_Arrow
  4865 ;;		_GLCD_GoTo
  4866 ;;		_Make_Arrow
  4867 ;; This function is called by:
  4868 ;;		_main
  4869 ;;		_Check_Buttons
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text29
  4874  001196                     __ptext29:
  4875                           	opt stack 0
  4876  001196                     _Draw_Arrow:
  4877                           	opt stack 16
  4878                           
  4879                           ;screen_controls.c: 55: switch(currentContext)
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;incstack = 0
  4883  001196  D019               	goto	l615
  4884  001198                     
  4885                           ;screen_controls.c: 58: Clear_Arrow_Column();
  4886  001198  ECFF  F006         	call	_Clear_Arrow_Column	;wreg free
  4887                           
  4888                           ;screen_controls.c: 59: GLCD_GoTo(0, mainState);
  4889  00119C  C045  F06B         	movff	_mainState,GLCD_GoTo@y
  4890  0011A0  0E00               	movlw	0
  4891  0011A2  EC1D  F004         	call	_GLCD_GoTo
  4892                           
  4893                           ;screen_controls.c: 60: Make_Arrow();
  4894  0011A6  ECDA  F00A         	call	_Make_Arrow	;wreg free
  4895                           
  4896                           ;screen_controls.c: 61: break;
  4897  0011AA  0012               	return	
  4898  0011AC                     
  4899                           ;screen_controls.c: 64: Clear_runTime_Arrows();
  4900  0011AC  EC2A  F005         	call	_Clear_runTime_Arrows	;wreg free
  4901                           
  4902                           ;screen_controls.c: 65: Draw_runTime_Arrow();
  4903  0011B0  EC5A  F006         	call	_Draw_runTime_Arrow	;wreg free
  4904                           
  4905                           ;screen_controls.c: 66: break;
  4906  0011B4  0012               	return	
  4907  0011B6                     
  4908                           ;screen_controls.c: 69: Clear_Arrow_Column();
  4909  0011B6  ECFF  F006         	call	_Clear_Arrow_Column	;wreg free
  4910                           
  4911                           ;screen_controls.c: 70: GLCD_GoTo(0, mainState);
  4912  0011BA  C045  F06B         	movff	_mainState,GLCD_GoTo@y
  4913  0011BE  0E00               	movlw	0
  4914  0011C0  EC1D  F004         	call	_GLCD_GoTo
  4915                           
  4916                           ;screen_controls.c: 71: Make_Arrow();
  4917  0011C4  ECDA  F00A         	call	_Make_Arrow	;wreg free
  4918                           
  4919                           ;screen_controls.c: 73: }
  4920                           
  4921                           ;screen_controls.c: 72: break;
  4922  0011C8  0012               	return	
  4923  0011CA                     l615:
  4924  0011CA  5044               	movf	_currentContext,w,c
  4925                           
  4926                           ; Switch size 1, requested type "space"
  4927                           ; Number of cases is 2, Range of values is 0 to 1
  4928                           ; switch strategies available:
  4929                           ; Name         Instructions Cycles
  4930                           ; simple_byte            7     4 (average)
  4931                           ;	Chosen strategy is simple_byte
  4932  0011CC  0A00               	xorlw	0	; case 0
  4933  0011CE  B4D8               	btfsc	status,2,c
  4934  0011D0  D7E3               	goto	l616
  4935  0011D2  0A01               	xorlw	1	; case 1
  4936  0011D4  B4D8               	btfsc	status,2,c
  4937  0011D6  D7EA               	goto	l618
  4938  0011D8  D7EE               	goto	l619
  4939  0011DA                     __end_of_Draw_Arrow:
  4940                           	opt stack 0
  4941                           tblptru	equ	0xFF8
  4942                           tblptrh	equ	0xFF7
  4943                           tblptrl	equ	0xFF6
  4944                           tablat	equ	0xFF5
  4945                           prodh	equ	0xFF4
  4946                           prodl	equ	0xFF3
  4947                           intcon	equ	0xFF2
  4948                           indf0	equ	0xFEF
  4949                           postinc0	equ	0xFEE
  4950                           fsr0h	equ	0xFEA
  4951                           fsr0l	equ	0xFE9
  4952                           wreg	equ	0xFE8
  4953                           indf2	equ	0xFDF
  4954                           fsr2h	equ	0xFDA
  4955                           fsr2l	equ	0xFD9
  4956                           status	equ	0xFD8
  4957                           
  4958 ;; *************** function _Draw_runTime_Arrow *****************
  4959 ;; Defined at:
  4960 ;;		line 169 in file "screen_controls.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;		None
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      void 
  4967 ;; Registers used:
  4968 ;;		wreg, status,2, status,0, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4978 ;;Total ram usage:        0 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:   13
  4981 ;; This function calls:
  4982 ;;		_GLCD_GoTo
  4983 ;;		_Make_Arrow
  4984 ;; This function is called by:
  4985 ;;		_Draw_Arrow
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text30
  4990  000CB4                     __ptext30:
  4991                           	opt stack 0
  4992  000CB4                     _Draw_runTime_Arrow:
  4993                           	opt stack 16
  4994                           
  4995                           ;screen_controls.c: 171: switch(runTimeContext)
  4996                           
  4997                           ;incstack = 0
  4998  000CB4  D02C               	goto	l652
  4999  000CB6                     
  5000                           ;screen_controls.c: 174: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  5001  000CB6  0E02               	movlw	2
  5002  000CB8  0100               	movlb	0	; () banked
  5003  000CBA  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5004  000CBC  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  5005  000CBE  0800               	sublw	0
  5006  000CC0  25A8               	addwf	_runTimeX& (0+255),w,b
  5007  000CC2  EC1D  F004         	call	_GLCD_GoTo
  5008                           
  5009                           ;screen_controls.c: 175: Make_Arrow();
  5010  000CC6  ECDA  F00A         	call	_Make_Arrow	;wreg free
  5011                           
  5012                           ;screen_controls.c: 176: break;
  5013  000CCA  0012               	return	
  5014  000CCC                     
  5015                           ;screen_controls.c: 179: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  5016  000CCC  0E04               	movlw	4
  5017  000CCE  0100               	movlb	0	; () banked
  5018  000CD0  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5019  000CD2  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  5020  000CD4  0800               	sublw	0
  5021  000CD6  25A8               	addwf	_runTimeX& (0+255),w,b
  5022  000CD8  EC1D  F004         	call	_GLCD_GoTo
  5023                           
  5024                           ;screen_controls.c: 180: Make_Arrow();
  5025  000CDC  ECDA  F00A         	call	_Make_Arrow	;wreg free
  5026                           
  5027                           ;screen_controls.c: 181: break;
  5028  000CE0  0012               	return	
  5029  000CE2                     
  5030                           ;screen_controls.c: 184: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  5031  000CE2  0E06               	movlw	6
  5032  000CE4  0100               	movlb	0	; () banked
  5033  000CE6  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5034  000CE8  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  5035  000CEA  0800               	sublw	0
  5036  000CEC  25A8               	addwf	_runTimeX& (0+255),w,b
  5037  000CEE  EC1D  F004         	call	_GLCD_GoTo
  5038                           
  5039                           ;screen_controls.c: 185: Make_Arrow();
  5040  000CF2  ECDA  F00A         	call	_Make_Arrow	;wreg free
  5041                           
  5042                           ;screen_controls.c: 187: break;
  5043                           
  5044                           ;screen_controls.c: 186: break;
  5045  000CF6  0012               	return	
  5046  000CF8                     
  5047                           ;screen_controls.c: 190: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  5048  000CF8  0E02               	movlw	2
  5049  000CFA  0100               	movlb	0	; () banked
  5050  000CFC  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5051  000CFE  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  5052  000D00  0800               	sublw	0
  5053  000D02  25A8               	addwf	_runTimeX& (0+255),w,b
  5054  000D04  EC1D  F004         	call	_GLCD_GoTo
  5055                           
  5056                           ;screen_controls.c: 191: Make_Arrow();
  5057  000D08  ECDA  F00A         	call	_Make_Arrow	;wreg free
  5058                           
  5059                           ;screen_controls.c: 195: }
  5060                           
  5061                           ;screen_controls.c: 192: break;
  5062  000D0C  0012               	return	
  5063  000D0E                     l652:
  5064  000D0E  5043               	movf	_runTimeContext,w,c
  5065                           
  5066                           ; Switch size 1, requested type "space"
  5067                           ; Number of cases is 3, Range of values is 0 to 2
  5068                           ; switch strategies available:
  5069                           ; Name         Instructions Cycles
  5070                           ; simple_byte           10     6 (average)
  5071                           ;	Chosen strategy is simple_byte
  5072  000D10  0A00               	xorlw	0	; case 0
  5073  000D12  B4D8               	btfsc	status,2,c
  5074  000D14  D7D0               	goto	l653
  5075  000D16  0A01               	xorlw	1	; case 1
  5076  000D18  B4D8               	btfsc	status,2,c
  5077  000D1A  D7D8               	goto	l655
  5078  000D1C  0A03               	xorlw	3	; case 2
  5079  000D1E  B4D8               	btfsc	status,2,c
  5080  000D20  D7E0               	goto	l656
  5081  000D22  D7EA               	goto	l657
  5082  000D24                     __end_of_Draw_runTime_Arrow:
  5083                           	opt stack 0
  5084                           tblptru	equ	0xFF8
  5085                           tblptrh	equ	0xFF7
  5086                           tblptrl	equ	0xFF6
  5087                           tablat	equ	0xFF5
  5088                           prodh	equ	0xFF4
  5089                           prodl	equ	0xFF3
  5090                           intcon	equ	0xFF2
  5091                           indf0	equ	0xFEF
  5092                           postinc0	equ	0xFEE
  5093                           fsr0h	equ	0xFEA
  5094                           fsr0l	equ	0xFE9
  5095                           wreg	equ	0xFE8
  5096                           indf2	equ	0xFDF
  5097                           fsr2h	equ	0xFDA
  5098                           fsr2l	equ	0xFD9
  5099                           status	equ	0xFD8
  5100                           
  5101 ;; *************** function _Make_Arrow *****************
  5102 ;; Defined at:
  5103 ;;		line 78 in file "screen_controls.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;		None
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      void 
  5110 ;; Registers used:
  5111 ;;		wreg, status,2, status,0, cstack
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5121 ;;Total ram usage:        0 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:   12
  5124 ;; This function calls:
  5125 ;;		_GLCD_WriteData
  5126 ;; This function is called by:
  5127 ;;		_Draw_Arrow
  5128 ;;		_Draw_runTime_Arrow
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           	psect	text31
  5133  0015B4                     __ptext31:
  5134                           	opt stack 0
  5135  0015B4                     _Make_Arrow:
  5136                           	opt stack 17
  5137                           
  5138                           ;screen_controls.c: 80: GLCD_WriteData(0x7E);
  5139                           
  5140                           ;incstack = 0
  5141  0015B4  0E7E               	movlw	126
  5142  0015B6  ECE4  F005         	call	_GLCD_WriteData
  5143                           
  5144                           ;screen_controls.c: 81: GLCD_WriteData(0x3C);
  5145  0015BA  0E3C               	movlw	60
  5146  0015BC  ECE4  F005         	call	_GLCD_WriteData
  5147                           
  5148                           ;screen_controls.c: 82: GLCD_WriteData(0x18);
  5149  0015C0  0E18               	movlw	24
  5150  0015C2  ECE4  F005         	call	_GLCD_WriteData
  5151  0015C6  0012               	return		;funcret
  5152  0015C8                     __end_of_Make_Arrow:
  5153                           	opt stack 0
  5154                           tblptru	equ	0xFF8
  5155                           tblptrh	equ	0xFF7
  5156                           tblptrl	equ	0xFF6
  5157                           tablat	equ	0xFF5
  5158                           prodh	equ	0xFF4
  5159                           prodl	equ	0xFF3
  5160                           intcon	equ	0xFF2
  5161                           indf0	equ	0xFEF
  5162                           postinc0	equ	0xFEE
  5163                           fsr0h	equ	0xFEA
  5164                           fsr0l	equ	0xFE9
  5165                           wreg	equ	0xFE8
  5166                           indf2	equ	0xFDF
  5167                           fsr2h	equ	0xFDA
  5168                           fsr2l	equ	0xFD9
  5169                           status	equ	0xFD8
  5170                           
  5171 ;; *************** function _Clear_runTime_Arrows *****************
  5172 ;; Defined at:
  5173 ;;		line 144 in file "screen_controls.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;		None
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  i               1   14[BANK0 ] unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      void 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5188 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5190 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5191 ;;Total ram usage:        1 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:   13
  5194 ;; This function calls:
  5195 ;;		_GLCD_GoTo
  5196 ;;		_GLCD_WriteData
  5197 ;; This function is called by:
  5198 ;;		_Draw_Arrow
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text32
  5203  000A54                     __ptext32:
  5204                           	opt stack 0
  5205  000A54                     _Clear_runTime_Arrows:
  5206                           	opt stack 16
  5207                           
  5208                           ;screen_controls.c: 146: unsigned char i=0;
  5209                           
  5210                           ;incstack = 0
  5211  000A54  0E00               	movlw	0
  5212  000A56  0100               	movlb	0	; () banked
  5213  000A58  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;screen_controls.c: 148: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  5217  000A5A  0E02               	movlw	2
  5218  000A5C  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5219  000A5E  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  5220  000A60  0800               	sublw	0
  5221  000A62  25A8               	addwf	_runTimeX& (0+255),w,b
  5222  000A64  EC1D  F004         	call	_GLCD_GoTo
  5223                           
  5224                           ;screen_controls.c: 150: for(i=0; i<ARROW_SIZE; i++)
  5225  000A68  0E00               	movlw	0
  5226  000A6A  0100               	movlb	0	; () banked
  5227  000A6C  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  5228  000A6E  D005               	goto	l640
  5229  000A70                     
  5230                           ; BSR set to: 0
  5231                           ;screen_controls.c: 151: {
  5232                           ;screen_controls.c: 152: GLCD_WriteData(0x00);
  5233                           
  5234                           ; BSR set to: 0
  5235  000A70  0E00               	movlw	0
  5236  000A72  ECE4  F005         	call	_GLCD_WriteData
  5237  000A76  0100               	movlb	0	; () banked
  5238  000A78  2B6E               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  5239  000A7A                     l640:
  5240                           
  5241                           ; BSR set to: 0
  5242                           
  5243                           ; BSR set to: 0
  5244  000A7A  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  5245  000A7C  5D6E               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  5246  000A7E  A0D8               	btfss	status,0,c
  5247  000A80  D7F7               	goto	l641
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;screen_controls.c: 153: }
  5251                           ;screen_controls.c: 155: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  5252                           
  5253                           ; BSR set to: 0
  5254  000A82  0E04               	movlw	4
  5255  000A84  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5256  000A86  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  5257  000A88  0800               	sublw	0
  5258  000A8A  25A8               	addwf	_runTimeX& (0+255),w,b
  5259  000A8C  EC1D  F004         	call	_GLCD_GoTo
  5260                           
  5261                           ;screen_controls.c: 156: for(i=0; i<ARROW_SIZE; i++)
  5262  000A90  0E00               	movlw	0
  5263  000A92  0100               	movlb	0	; () banked
  5264  000A94  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  5265  000A96  D005               	goto	l643
  5266  000A98                     
  5267                           ; BSR set to: 0
  5268                           ;screen_controls.c: 157: {
  5269                           ;screen_controls.c: 158: GLCD_WriteData(0x00);
  5270                           
  5271                           ; BSR set to: 0
  5272  000A98  0E00               	movlw	0
  5273  000A9A  ECE4  F005         	call	_GLCD_WriteData
  5274  000A9E  0100               	movlb	0	; () banked
  5275  000AA0  2B6E               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  5276  000AA2                     l643:
  5277                           
  5278                           ; BSR set to: 0
  5279                           
  5280                           ; BSR set to: 0
  5281  000AA2  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  5282  000AA4  5D6E               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  5283  000AA6  A0D8               	btfss	status,0,c
  5284  000AA8  D7F7               	goto	l644
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;screen_controls.c: 159: }
  5288                           ;screen_controls.c: 161: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  5289                           
  5290                           ; BSR set to: 0
  5291  000AAA  0E06               	movlw	6
  5292  000AAC  6F6B               	movwf	GLCD_GoTo@y& (0+255),b
  5293  000AAE  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  5294  000AB0  0800               	sublw	0
  5295  000AB2  25A8               	addwf	_runTimeX& (0+255),w,b
  5296  000AB4  EC1D  F004         	call	_GLCD_GoTo
  5297                           
  5298                           ;screen_controls.c: 162: for(i=0; i<ARROW_SIZE; i++)
  5299  000AB8  0E00               	movlw	0
  5300  000ABA  0100               	movlb	0	; () banked
  5301  000ABC  6F6E               	movwf	Clear_runTime_Arrows@i& (0+255),b
  5302  000ABE  D005               	goto	l646
  5303  000AC0                     
  5304                           ; BSR set to: 0
  5305                           ;screen_controls.c: 163: {
  5306                           ;screen_controls.c: 164: GLCD_WriteData(0x00);
  5307                           
  5308                           ; BSR set to: 0
  5309  000AC0  0E00               	movlw	0
  5310  000AC2  ECE4  F005         	call	_GLCD_WriteData
  5311  000AC6  0100               	movlb	0	; () banked
  5312  000AC8  2B6E               	incf	Clear_runTime_Arrows@i& (0+255),f,b
  5313  000ACA                     l646:
  5314                           
  5315                           ; BSR set to: 0
  5316                           
  5317                           ; BSR set to: 0
  5318  000ACA  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  5319  000ACC  5D6E               	subwf	Clear_runTime_Arrows@i& (0+255),w,b
  5320  000ACE  B0D8               	btfsc	status,0,c
  5321  000AD0  0012               	return	
  5322  000AD2  D7F6               	goto	l647
  5323  000AD4                     __end_of_Clear_runTime_Arrows:
  5324                           	opt stack 0
  5325                           tblptru	equ	0xFF8
  5326                           tblptrh	equ	0xFF7
  5327                           tblptrl	equ	0xFF6
  5328                           tablat	equ	0xFF5
  5329                           prodh	equ	0xFF4
  5330                           prodl	equ	0xFF3
  5331                           intcon	equ	0xFF2
  5332                           indf0	equ	0xFEF
  5333                           postinc0	equ	0xFEE
  5334                           fsr0h	equ	0xFEA
  5335                           fsr0l	equ	0xFE9
  5336                           wreg	equ	0xFE8
  5337                           indf2	equ	0xFDF
  5338                           fsr2h	equ	0xFDA
  5339                           fsr2l	equ	0xFD9
  5340                           status	equ	0xFD8
  5341                           
  5342 ;; *************** function _Clear_Arrow_Column *****************
  5343 ;; Defined at:
  5344 ;;		line 98 in file "screen_controls.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;		None
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  i               1   22[BANK0 ] unsigned char 
  5349 ;;  j               1   21[BANK0 ] unsigned char 
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      void 
  5352 ;; Registers used:
  5353 ;;		wreg, status,2, status,0, cstack
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5361 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5362 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5363 ;;Total ram usage:        9 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:   13
  5366 ;; This function calls:
  5367 ;;		_GLCD_GoTo
  5368 ;;		_GLCD_WriteData
  5369 ;; This function is called by:
  5370 ;;		_Draw_Arrow
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           	psect	text33
  5375  000DFE                     __ptext33:
  5376                           	opt stack 0
  5377  000DFE                     _Clear_Arrow_Column:
  5378                           	opt stack 16
  5379                           
  5380                           ;screen_controls.c: 100: unsigned char i, j;
  5381                           ;screen_controls.c: 102: for(i = 0; i < 64/8; i++)
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;incstack = 0
  5385  000DFE  0E00               	movlw	0
  5386  000E00  0100               	movlb	0	; () banked
  5387  000E02  6F76               	movwf	Clear_Arrow_Column@i& (0+255),b
  5388  000E04                     l3374:
  5389                           
  5390                           ; BSR set to: 0
  5391  000E04  0E07               	movlw	7
  5392  000E06  6576               	cpfsgt	Clear_Arrow_Column@i& (0+255),b
  5393  000E08  D001               	goto	l629
  5394  000E0A  0012               	return	
  5395  000E0C                     l629:
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;screen_controls.c: 103: {
  5399                           ;screen_controls.c: 104: GLCD_GoTo(0, i);
  5400                           
  5401                           ; BSR set to: 0
  5402  000E0C  C076  F06B         	movff	Clear_Arrow_Column@i,GLCD_GoTo@y
  5403  000E10  0E00               	movlw	0
  5404  000E12  EC1D  F004         	call	_GLCD_GoTo
  5405                           
  5406                           ;screen_controls.c: 106: for(j = 0; j < (xMenuStart - 1); j++)
  5407  000E16  0E00               	movlw	0
  5408  000E18  0100               	movlb	0	; () banked
  5409  000E1A  6F75               	movwf	Clear_Arrow_Column@j& (0+255),b
  5410  000E1C  D005               	goto	l631
  5411  000E1E                     
  5412                           ; BSR set to: 0
  5413                           ;screen_controls.c: 107: {
  5414                           ;screen_controls.c: 108: GLCD_WriteData(0x00);
  5415                           
  5416                           ; BSR set to: 0
  5417  000E1E  0E00               	movlw	0
  5418  000E20  ECE4  F005         	call	_GLCD_WriteData
  5419  000E24  0100               	movlb	0	; () banked
  5420  000E26  2B75               	incf	Clear_Arrow_Column@j& (0+255),f,b
  5421  000E28                     l631:
  5422                           
  5423                           ; BSR set to: 0
  5424                           
  5425                           ; BSR set to: 0
  5426  000E28  0EFF               	movlw	255
  5427  000E2A  6F6E               	movwf	??_Clear_Arrow_Column& (0+255),b
  5428  000E2C  0EFF               	movlw	255
  5429  000E2E  6F6F               	movwf	(??_Clear_Arrow_Column+1)& (0+255),b
  5430  000E30  51A6               	movf	_xMenuStart& (0+255),w,b
  5431  000E32  6F70               	movwf	(??_Clear_Arrow_Column+2)& (0+255),b
  5432  000E34  6B71               	clrf	(??_Clear_Arrow_Column+3)& (0+255),b
  5433  000E36  516E               	movf	??_Clear_Arrow_Column& (0+255),w,b
  5434  000E38  2770               	addwf	(??_Clear_Arrow_Column+2)& (0+255),f,b
  5435  000E3A  516F               	movf	(??_Clear_Arrow_Column+1)& (0+255),w,b
  5436  000E3C  2371               	addwfc	(??_Clear_Arrow_Column+3)& (0+255),f,b
  5437  000E3E  5175               	movf	Clear_Arrow_Column@j& (0+255),w,b
  5438  000E40  6F72               	movwf	(??_Clear_Arrow_Column+4)& (0+255),b
  5439  000E42  6B73               	clrf	(??_Clear_Arrow_Column+5)& (0+255),b
  5440  000E44  5170               	movf	(??_Clear_Arrow_Column+2)& (0+255),w,b
  5441  000E46  5D72               	subwf	(??_Clear_Arrow_Column+4)& (0+255),w,b
  5442  000E48  5173               	movf	(??_Clear_Arrow_Column+5)& (0+255),w,b
  5443  000E4A  0A80               	xorlw	128
  5444  000E4C  6F74               	movwf	(??_Clear_Arrow_Column+6)& (0+255),b
  5445  000E4E  5171               	movf	(??_Clear_Arrow_Column+3)& (0+255),w,b
  5446  000E50  0A80               	xorlw	128
  5447  000E52  5974               	subwfb	(??_Clear_Arrow_Column+6)& (0+255),w,b
  5448  000E54  A0D8               	btfss	status,0,c
  5449  000E56  D7E3               	goto	l632
  5450                           
  5451                           ; BSR set to: 0
  5452                           
  5453                           ; BSR set to: 0
  5454  000E58  2B76               	incf	Clear_Arrow_Column@i& (0+255),f,b
  5455  000E5A  D7D4               	goto	l3374
  5456  000E5C                     __end_of_Clear_Arrow_Column:
  5457                           	opt stack 0
  5458                           tblptru	equ	0xFF8
  5459                           tblptrh	equ	0xFF7
  5460                           tblptrl	equ	0xFF6
  5461                           tablat	equ	0xFF5
  5462                           prodh	equ	0xFF4
  5463                           prodl	equ	0xFF3
  5464                           intcon	equ	0xFF2
  5465                           indf0	equ	0xFEF
  5466                           postinc0	equ	0xFEE
  5467                           fsr0h	equ	0xFEA
  5468                           fsr0l	equ	0xFE9
  5469                           wreg	equ	0xFE8
  5470                           indf2	equ	0xFDF
  5471                           fsr2h	equ	0xFDA
  5472                           fsr2l	equ	0xFD9
  5473                           status	equ	0xFD8
  5474                           
  5475 ;; *************** function _GLCD_WriteData *****************
  5476 ;; Defined at:
  5477 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  dataToWrite     1    wreg     unsigned char 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  dataToWrite     1    9[BANK0 ] unsigned char 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1    wreg      void 
  5484 ;; Registers used:
  5485 ;;		wreg, status,2, status,0, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5492 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5493 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5494 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5495 ;;Total ram usage:        2 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:   11
  5498 ;; This function calls:
  5499 ;;		_GLCD_Delay
  5500 ;;		_GLCD_DisableController
  5501 ;;		_GLCD_EnableController
  5502 ;;		_GLCD_ReadStatus
  5503 ;;		___awdiv
  5504 ;; This function is called by:
  5505 ;;		_GLCD_ClearScreen
  5506 ;;		_GLCD_WriteChar
  5507 ;;		_GLCD_SetPixel
  5508 ;;		_Make_Arrow
  5509 ;;		_Make_Back_Arrow
  5510 ;;		_Clear_Arrow_Column
  5511 ;;		_Clear_runTime_Arrows
  5512 ;;		_GLCD_Bitmap
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text34
  5517  000BC8                     __ptext34:
  5518                           	opt stack 0
  5519  000BC8                     _GLCD_WriteData:
  5520                           	opt stack 16
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;incstack = 0
  5524                           ;GLCD_WriteData@dataToWrite stored from wreg
  5525  000BC8  0100               	movlb	0	; () banked
  5526  000BCA  6F69               	movwf	GLCD_WriteData@dataToWrite& (0+255),b
  5527  000BCC                     
  5528                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  5529  000BCC  C0A4  F060         	movff	_screen_x,___awdiv@dividend
  5530  000BD0  0100               	movlb	0	; () banked
  5531  000BD2  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  5532  000BD4  0E00               	movlw	0
  5533  000BD6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5534  000BD8  0E40               	movlw	64
  5535  000BDA  6F62               	movwf	___awdiv@divisor& (0+255),b
  5536  000BDC  ECA5  F004         	call	___awdiv	;wreg free
  5537  000BE0  0100               	movlb	0	; () banked
  5538  000BE2  5160               	movf	?___awdiv& (0+255),w,b
  5539  000BE4  EC10  F00A         	call	_GLCD_ReadStatus
  5540  000BE8  0100               	movlb	0	; () banked
  5541  000BEA  6F68               	movwf	??_GLCD_WriteData& (0+255),b
  5542  000BEC  BF68               	btfsc	??_GLCD_WriteData& (0+255),7,b
  5543  000BEE  D7EE               	goto	l2956
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;KS0108-PIC18.c: 116: TRISD = 0x00;
  5547                           
  5548                           ; BSR set to: 0
  5549  000BF0  0E00               	movlw	0
  5550  000BF2  6E95               	movwf	3989,c	;volatile
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
  5554  000BF4  9280               	bcf	3968,1,c	;volatile
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
  5558  000BF6  8480               	bsf	3968,2,c	;volatile
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;KS0108-PIC18.c: 119: PORTD = dataToWrite;
  5562  000BF8  C069  FF83         	movff	GLCD_WriteData@dataToWrite,3971	;volatile
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
  5566  000BFC  C0A4  F060         	movff	_screen_x,___awdiv@dividend
  5567  000C00  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  5568  000C02  0E00               	movlw	0
  5569  000C04  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5570  000C06  0E40               	movlw	64
  5571  000C08  6F62               	movwf	___awdiv@divisor& (0+255),b
  5572  000C0A  ECA5  F004         	call	___awdiv	;wreg free
  5573  000C0E  0100               	movlb	0	; () banked
  5574  000C10  5160               	movf	?___awdiv& (0+255),w,b
  5575  000C12  EC26  F00A         	call	_GLCD_EnableController
  5576                           
  5577                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
  5578  000C16  8680               	bsf	3968,3,c	;volatile
  5579                           
  5580                           ;KS0108-PIC18.c: 122: GLCD_Delay();
  5581  000C18  EC22  F00B         	call	_GLCD_Delay	;wreg free
  5582                           
  5583                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
  5584  000C1C  9680               	bcf	3968,3,c	;volatile
  5585                           
  5586                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
  5587  000C1E  C0A4  F060         	movff	_screen_x,___awdiv@dividend
  5588  000C22  0100               	movlb	0	; () banked
  5589  000C24  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  5590  000C26  0E00               	movlw	0
  5591  000C28  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5592  000C2A  0E40               	movlw	64
  5593  000C2C  6F62               	movwf	___awdiv@divisor& (0+255),b
  5594  000C2E  ECA5  F004         	call	___awdiv	;wreg free
  5595  000C32  0100               	movlb	0	; () banked
  5596  000C34  5160               	movf	?___awdiv& (0+255),w,b
  5597  000C36  EC3B  F00A         	call	_GLCD_DisableController
  5598                           
  5599                           ;KS0108-PIC18.c: 125: screen_x++;
  5600  000C3A  0100               	movlb	0	; () banked
  5601  000C3C  2BA4               	incf	_screen_x& (0+255),f,b
  5602                           
  5603                           ; BSR set to: 0
  5604  000C3E  0012               	return		;funcret
  5605  000C40                     __end_of_GLCD_WriteData:
  5606                           	opt stack 0
  5607                           tblptru	equ	0xFF8
  5608                           tblptrh	equ	0xFF7
  5609                           tblptrl	equ	0xFF6
  5610                           tablat	equ	0xFF5
  5611                           prodh	equ	0xFF4
  5612                           prodl	equ	0xFF3
  5613                           intcon	equ	0xFF2
  5614                           indf0	equ	0xFEF
  5615                           postinc0	equ	0xFEE
  5616                           fsr0h	equ	0xFEA
  5617                           fsr0l	equ	0xFE9
  5618                           wreg	equ	0xFE8
  5619                           indf2	equ	0xFDF
  5620                           fsr2h	equ	0xFDA
  5621                           fsr2l	equ	0xFD9
  5622                           status	equ	0xFD8
  5623                           
  5624 ;; *************** function _GLCD_GoTo *****************
  5625 ;; Defined at:
  5626 ;;		line 25 in file "ks0108lib/KS0108.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;  x               1    wreg     unsigned char 
  5629 ;;  y               1   11[BANK0 ] unsigned char 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  x               1   12[BANK0 ] unsigned char 
  5632 ;;  i               1   13[BANK0 ] unsigned char 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      void 
  5635 ;; Registers used:
  5636 ;;		wreg, status,2, status,0, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5642 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5643 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5645 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5646 ;;Total ram usage:        3 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; Hardware stack levels required when called:   12
  5649 ;; This function calls:
  5650 ;;		_GLCD_WriteCommand
  5651 ;;		___awdiv
  5652 ;; This function is called by:
  5653 ;;		_GLCD_ClearScreen
  5654 ;;		_GLCD_SetPixel
  5655 ;;		_Initialize_Menus
  5656 ;;		_Draw_Arrow
  5657 ;;		_Clear_Arrow_Column
  5658 ;;		_Draw_runTime_Menu
  5659 ;;		_Clear_runTime_Arrows
  5660 ;;		_Draw_runTime_Arrow
  5661 ;;		_GLCD_Bitmap
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text35
  5666  00083A                     __ptext35:
  5667                           	opt stack 0
  5668  00083A                     _GLCD_GoTo:
  5669                           	opt stack 15
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;incstack = 0
  5673                           ;GLCD_GoTo@x stored from wreg
  5674  00083A  0100               	movlb	0	; () banked
  5675  00083C  6F6C               	movwf	GLCD_GoTo@x& (0+255),b
  5676                           
  5677                           ;KS0108.c: 27: unsigned char i;
  5678                           ;KS0108.c: 28: screen_x = x;
  5679  00083E  C06C  F0A4         	movff	GLCD_GoTo@x,_screen_x
  5680                           
  5681                           ;KS0108.c: 29: screen_y = y;
  5682  000842  C06B  F0A3         	movff	GLCD_GoTo@y,_screen_y
  5683                           
  5684                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
  5685  000846  0E00               	movlw	0
  5686  000848  0100               	movlb	0	; () banked
  5687  00084A  6F6D               	movwf	GLCD_GoTo@i& (0+255),b
  5688  00084C                     l2944:
  5689                           
  5690                           ; BSR set to: 0
  5691  00084C  0E01               	movlw	1
  5692  00084E  656D               	cpfsgt	GLCD_GoTo@i& (0+255),b
  5693  000850  D001               	goto	l475
  5694  000852  D014               	goto	u1390
  5695  000854                     l475:
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;KS0108.c: 32: {
  5699                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
  5700                           
  5701                           ; BSR set to: 0
  5702  000854  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  5703  000858  0E40               	movlw	64
  5704  00085A  ECA8  F009         	call	_GLCD_WriteCommand
  5705                           
  5706                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
  5707  00085E  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  5708  000862  0100               	movlb	0	; () banked
  5709  000864  516B               	movf	GLCD_GoTo@y& (0+255),w,b
  5710  000866  09B8               	iorlw	184
  5711  000868  ECA8  F009         	call	_GLCD_WriteCommand
  5712                           
  5713                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
  5714  00086C  C06D  F068         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  5715  000870  0EC0               	movlw	192
  5716  000872  ECA8  F009         	call	_GLCD_WriteCommand
  5717  000876  0100               	movlb	0	; () banked
  5718  000878  2B6D               	incf	GLCD_GoTo@i& (0+255),f,b
  5719  00087A  D7E8               	goto	l2944
  5720  00087C                     u1390:
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;KS0108.c: 36: }
  5724                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
  5725                           
  5726                           ; BSR set to: 0
  5727  00087C  C06C  F060         	movff	GLCD_GoTo@x,___awdiv@dividend
  5728  000880  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  5729  000882  0E00               	movlw	0
  5730  000884  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5731  000886  0E40               	movlw	64
  5732  000888  6F62               	movwf	___awdiv@divisor& (0+255),b
  5733  00088A  ECA5  F004         	call	___awdiv	;wreg free
  5734  00088E  0100               	movlb	0	; () banked
  5735  000890  5160               	movf	?___awdiv& (0+255),w,b
  5736  000892  6F68               	movwf	GLCD_WriteCommand@controller& (0+255),b
  5737  000894  516C               	movf	GLCD_GoTo@x& (0+255),w,b
  5738  000896  0B3F               	andlw	63
  5739  000898  0940               	iorlw	64
  5740  00089A  ECA8  F009         	call	_GLCD_WriteCommand
  5741                           
  5742                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
  5743  00089E  C06C  F060         	movff	GLCD_GoTo@x,___awdiv@dividend
  5744  0008A2  0100               	movlb	0	; () banked
  5745  0008A4  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  5746  0008A6  0E00               	movlw	0
  5747  0008A8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5748  0008AA  0E40               	movlw	64
  5749  0008AC  6F62               	movwf	___awdiv@divisor& (0+255),b
  5750  0008AE  ECA5  F004         	call	___awdiv	;wreg free
  5751  0008B2  0100               	movlb	0	; () banked
  5752  0008B4  5160               	movf	?___awdiv& (0+255),w,b
  5753  0008B6  6F68               	movwf	GLCD_WriteCommand@controller& (0+255),b
  5754  0008B8  516B               	movf	GLCD_GoTo@y& (0+255),w,b
  5755  0008BA  09B8               	iorlw	184
  5756  0008BC  ECA8  F009         	call	_GLCD_WriteCommand
  5757  0008C0  0012               	return		;funcret
  5758  0008C2                     __end_of_GLCD_GoTo:
  5759                           	opt stack 0
  5760                           tblptru	equ	0xFF8
  5761                           tblptrh	equ	0xFF7
  5762                           tblptrl	equ	0xFF6
  5763                           tablat	equ	0xFF5
  5764                           prodh	equ	0xFF4
  5765                           prodl	equ	0xFF3
  5766                           intcon	equ	0xFF2
  5767                           indf0	equ	0xFEF
  5768                           postinc0	equ	0xFEE
  5769                           fsr0h	equ	0xFEA
  5770                           fsr0l	equ	0xFE9
  5771                           wreg	equ	0xFE8
  5772                           indf2	equ	0xFDF
  5773                           fsr2h	equ	0xFDA
  5774                           fsr2l	equ	0xFD9
  5775                           status	equ	0xFD8
  5776                           
  5777 ;; *************** function ___awdiv *****************
  5778 ;; Defined at:
  5779 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  dividend        2    0[BANK0 ] int 
  5782 ;;  divisor         2    2[BANK0 ] int 
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;  quotient        2    6[BANK0 ] int 
  5785 ;;  sign            1    5[BANK0 ] unsigned char 
  5786 ;;  counter         1    4[BANK0 ] unsigned char 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  2    0[BANK0 ] int 
  5789 ;; Registers used:
  5790 ;;		wreg, status,2, status,0
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5796 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5797 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5799 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5800 ;;Total ram usage:        8 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:    9
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_GLCD_GoTo
  5807 ;;		_GLCD_SetPixel
  5808 ;;		_GLCD_ReadData
  5809 ;;		_GLCD_WriteData
  5810 ;;		_GLCD_Bitmap
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text36
  5815  00094A                     __ptext36:
  5816                           	opt stack 0
  5817  00094A                     ___awdiv:
  5818                           	opt stack 17
  5819                           
  5820                           ;incstack = 0
  5821  00094A  0E00               	movlw	0
  5822  00094C  0100               	movlb	0	; () banked
  5823  00094E  6F65               	movwf	___awdiv@sign& (0+255),b
  5824                           
  5825                           ; BSR set to: 0
  5826  000950  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5827  000952  D006               	goto	l868
  5828                           
  5829                           ; BSR set to: 0
  5830  000954  6D62               	negf	___awdiv@divisor& (0+255),b
  5831  000956  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5832  000958  B0D8               	btfsc	status,0,c
  5833  00095A  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5834                           
  5835                           ; BSR set to: 0
  5836  00095C  0E01               	movlw	1
  5837  00095E  6F65               	movwf	___awdiv@sign& (0+255),b
  5838  000960                     l868:
  5839                           
  5840                           ; BSR set to: 0
  5841                           
  5842                           ; BSR set to: 0
  5843  000960  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5844  000962  D006               	goto	l869
  5845                           
  5846                           ; BSR set to: 0
  5847  000964  6D60               	negf	___awdiv@dividend& (0+255),b
  5848  000966  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5849  000968  B0D8               	btfsc	status,0,c
  5850  00096A  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5851                           
  5852                           ; BSR set to: 0
  5853  00096C  0E01               	movlw	1
  5854  00096E  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  5855  000970                     l869:
  5856                           
  5857                           ; BSR set to: 0
  5858                           
  5859                           ; BSR set to: 0
  5860  000970  0E00               	movlw	0
  5861  000972  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  5862  000974  0E00               	movlw	0
  5863  000976  6F66               	movwf	___awdiv@quotient& (0+255),b
  5864                           
  5865                           ; BSR set to: 0
  5866  000978  5162               	movf	___awdiv@divisor& (0+255),w,b
  5867  00097A  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5868  00097C  B4D8               	btfsc	status,2,c
  5869  00097E  D01C               	goto	l876
  5870                           
  5871                           ; BSR set to: 0
  5872  000980  0E01               	movlw	1
  5873  000982  6F64               	movwf	___awdiv@counter& (0+255),b
  5874  000984  D004               	goto	l871
  5875  000986                     
  5876                           ; BSR set to: 0
  5877                           
  5878                           ; BSR set to: 0
  5879  000986  90D8               	bcf	status,0,c
  5880  000988  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  5881  00098A  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5882  00098C  2B64               	incf	___awdiv@counter& (0+255),f,b
  5883  00098E                     l871:
  5884                           
  5885                           ; BSR set to: 0
  5886                           
  5887                           ; BSR set to: 0
  5888  00098E  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5889  000990  D7FA               	goto	l872
  5890  000992                     u1330:
  5891                           
  5892                           ; BSR set to: 0
  5893                           
  5894                           ; BSR set to: 0
  5895                           
  5896                           ; BSR set to: 0
  5897  000992  90D8               	bcf	status,0,c
  5898  000994  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  5899  000996  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5900                           
  5901                           ; BSR set to: 0
  5902  000998  5162               	movf	___awdiv@divisor& (0+255),w,b
  5903  00099A  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  5904  00099C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5905  00099E  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5906  0009A0  A0D8               	btfss	status,0,c
  5907  0009A2  D005               	goto	l875
  5908                           
  5909                           ; BSR set to: 0
  5910  0009A4  5162               	movf	___awdiv@divisor& (0+255),w,b
  5911  0009A6  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  5912  0009A8  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5913  0009AA  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5914                           
  5915                           ; BSR set to: 0
  5916  0009AC  8166               	bsf	___awdiv@quotient& (0+255),0,b
  5917  0009AE                     l875:
  5918                           
  5919                           ; BSR set to: 0
  5920                           
  5921                           ; BSR set to: 0
  5922  0009AE  90D8               	bcf	status,0,c
  5923  0009B0  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5924  0009B2  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  5925                           
  5926                           ; BSR set to: 0
  5927  0009B4  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  5928  0009B6  D7ED               	goto	u1330
  5929  0009B8                     l876:
  5930                           
  5931                           ; BSR set to: 0
  5932                           
  5933                           ; BSR set to: 0
  5934                           
  5935                           ; BSR set to: 0
  5936  0009B8  5165               	movf	___awdiv@sign& (0+255),w,b
  5937  0009BA  B4D8               	btfsc	status,2,c
  5938  0009BC  D004               	goto	l877
  5939                           
  5940                           ; BSR set to: 0
  5941  0009BE  6D66               	negf	___awdiv@quotient& (0+255),b
  5942  0009C0  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5943  0009C2  B0D8               	btfsc	status,0,c
  5944  0009C4  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5945  0009C6                     l877:
  5946                           
  5947                           ; BSR set to: 0
  5948                           
  5949                           ; BSR set to: 0
  5950  0009C6  C066  F060         	movff	___awdiv@quotient,?___awdiv
  5951  0009CA  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  5952  0009CE  0012               	return	
  5953  0009D0                     __end_of___awdiv:
  5954                           	opt stack 0
  5955                           tblptru	equ	0xFF8
  5956                           tblptrh	equ	0xFF7
  5957                           tblptrl	equ	0xFF6
  5958                           tablat	equ	0xFF5
  5959                           prodh	equ	0xFF4
  5960                           prodl	equ	0xFF3
  5961                           intcon	equ	0xFF2
  5962                           indf0	equ	0xFEF
  5963                           postinc0	equ	0xFEE
  5964                           fsr0h	equ	0xFEA
  5965                           fsr0l	equ	0xFE9
  5966                           wreg	equ	0xFE8
  5967                           indf2	equ	0xFDF
  5968                           fsr2h	equ	0xFDA
  5969                           fsr2l	equ	0xFD9
  5970                           status	equ	0xFD8
  5971                           
  5972 ;; *************** function _GLCD_WriteCommand *****************
  5973 ;; Defined at:
  5974 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  commandToWri    1    wreg     unsigned char 
  5977 ;;  controller      1    8[BANK0 ] unsigned char 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  commandToWri    1   10[BANK0 ] unsigned char 
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  1    wreg      void 
  5982 ;; Registers used:
  5983 ;;		wreg, status,2, status,0, cstack
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5989 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5990 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5991 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5992 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5993 ;;Total ram usage:        3 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:   11
  5996 ;; This function calls:
  5997 ;;		_GLCD_Delay
  5998 ;;		_GLCD_DisableController
  5999 ;;		_GLCD_EnableController
  6000 ;;		_GLCD_ReadStatus
  6001 ;; This function is called by:
  6002 ;;		_GLCD_Initalize
  6003 ;;		_GLCD_GoTo
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text37
  6008  001350                     __ptext37:
  6009                           	opt stack 0
  6010  001350                     _GLCD_WriteCommand:
  6011                           	opt stack 15
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;incstack = 0
  6015                           ;GLCD_WriteCommand@commandToWrite stored from wreg
  6016  001350  0100               	movlb	0	; () banked
  6017  001352  6F6A               	movwf	GLCD_WriteCommand@commandToWrite& (0+255),b
  6018  001354                     
  6019                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
  6020  001354  0100               	movlb	0	; () banked
  6021  001356  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  6022  001358  EC10  F00A         	call	_GLCD_ReadStatus
  6023  00135C  0100               	movlb	0	; () banked
  6024  00135E  6F69               	movwf	??_GLCD_WriteCommand& (0+255),b
  6025  001360  BF69               	btfsc	??_GLCD_WriteCommand& (0+255),7,b
  6026  001362  D7F8               	goto	l2830
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;KS0108-PIC18.c: 82: TRISD = 0x00;
  6030                           
  6031                           ; BSR set to: 0
  6032  001364  0E00               	movlw	0
  6033  001366  6E95               	movwf	3989,c	;volatile
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
  6037  001368  0EF9               	movlw	249
  6038  00136A  1680               	andwf	3968,f,c	;volatile
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
  6042  00136C  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  6043  00136E  EC26  F00A         	call	_GLCD_EnableController
  6044                           
  6045                           ;KS0108-PIC18.c: 85: PORTD = commandToWrite;
  6046  001372  C06A  FF83         	movff	GLCD_WriteCommand@commandToWrite,3971	;volatile
  6047                           
  6048                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
  6049  001376  8680               	bsf	3968,3,c	;volatile
  6050                           
  6051                           ;KS0108-PIC18.c: 87: GLCD_Delay();
  6052  001378  EC22  F00B         	call	_GLCD_Delay	;wreg free
  6053                           
  6054                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
  6055  00137C  9680               	bcf	3968,3,c	;volatile
  6056                           
  6057                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
  6058  00137E  0100               	movlb	0	; () banked
  6059  001380  5168               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  6060  001382  EC3B  F00A         	call	_GLCD_DisableController
  6061  001386  0012               	return		;funcret
  6062  001388                     __end_of_GLCD_WriteCommand:
  6063                           	opt stack 0
  6064                           tblptru	equ	0xFF8
  6065                           tblptrh	equ	0xFF7
  6066                           tblptrl	equ	0xFF6
  6067                           tablat	equ	0xFF5
  6068                           prodh	equ	0xFF4
  6069                           prodl	equ	0xFF3
  6070                           intcon	equ	0xFF2
  6071                           indf0	equ	0xFEF
  6072                           postinc0	equ	0xFEE
  6073                           fsr0h	equ	0xFEA
  6074                           fsr0l	equ	0xFE9
  6075                           wreg	equ	0xFE8
  6076                           indf2	equ	0xFDF
  6077                           fsr2h	equ	0xFDA
  6078                           fsr2l	equ	0xFD9
  6079                           status	equ	0xFD8
  6080                           
  6081 ;; *************** function _GLCD_ReadStatus *****************
  6082 ;; Defined at:
  6083 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  controller      1    wreg     unsigned char 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  controller      1    2[BANK0 ] unsigned char 
  6088 ;;  status          1    1[BANK0 ] unsigned char 
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      unsigned char 
  6091 ;; Registers used:
  6092 ;;		wreg, status,2, status,0, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6099 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6101 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6102 ;;Total ram usage:        2 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:   10
  6105 ;; This function calls:
  6106 ;;		_GLCD_Delay
  6107 ;;		_GLCD_DisableController
  6108 ;;		_GLCD_EnableController
  6109 ;; This function is called by:
  6110 ;;		_GLCD_WriteCommand
  6111 ;;		_GLCD_ReadData
  6112 ;;		_GLCD_WriteData
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text38
  6117  001420                     __ptext38:
  6118                           	opt stack 0
  6119  001420                     _GLCD_ReadStatus:
  6120                           	opt stack 16
  6121                           
  6122                           ;incstack = 0
  6123                           ;GLCD_ReadStatus@controller stored from wreg
  6124  001420  0100               	movlb	0	; () banked
  6125  001422  6F62               	movwf	GLCD_ReadStatus@controller& (0+255),b
  6126                           
  6127                           ;KS0108-PIC18.c: 64: unsigned char status;
  6128                           ;KS0108-PIC18.c: 65: TRISD = 0xFF;
  6129  001424  6895               	setf	3989,c	;volatile
  6130                           
  6131                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
  6132  001426  8280               	bsf	3968,1,c	;volatile
  6133                           
  6134                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
  6135  001428  9480               	bcf	3968,2,c	;volatile
  6136                           
  6137                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
  6138  00142A  0100               	movlb	0	; () banked
  6139  00142C  5162               	movf	GLCD_ReadStatus@controller& (0+255),w,b
  6140  00142E  EC26  F00A         	call	_GLCD_EnableController
  6141                           
  6142                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
  6143  001432  8680               	bsf	3968,3,c	;volatile
  6144                           
  6145                           ;KS0108-PIC18.c: 70: GLCD_Delay();
  6146  001434  EC22  F00B         	call	_GLCD_Delay	;wreg free
  6147                           
  6148                           ;KS0108-PIC18.c: 71: status = PORTD;
  6149  001438  CF83 F061          	movff	3971,GLCD_ReadStatus@status	;volatile
  6150                           
  6151                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
  6152  00143C  9680               	bcf	3968,3,c	;volatile
  6153                           
  6154                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
  6155  00143E  0100               	movlb	0	; () banked
  6156  001440  5162               	movf	GLCD_ReadStatus@controller& (0+255),w,b
  6157  001442  EC3B  F00A         	call	_GLCD_DisableController
  6158                           
  6159                           ;KS0108-PIC18.c: 74: return status;
  6160  001446  0100               	movlb	0	; () banked
  6161  001448  5161               	movf	GLCD_ReadStatus@status& (0+255),w,b
  6162  00144A  0012               	return	
  6163  00144C                     __end_of_GLCD_ReadStatus:
  6164                           	opt stack 0
  6165                           tblptru	equ	0xFF8
  6166                           tblptrh	equ	0xFF7
  6167                           tblptrl	equ	0xFF6
  6168                           tablat	equ	0xFF5
  6169                           prodh	equ	0xFF4
  6170                           prodl	equ	0xFF3
  6171                           intcon	equ	0xFF2
  6172                           indf0	equ	0xFEF
  6173                           postinc0	equ	0xFEE
  6174                           fsr0h	equ	0xFEA
  6175                           fsr0l	equ	0xFE9
  6176                           wreg	equ	0xFE8
  6177                           indf2	equ	0xFDF
  6178                           fsr2h	equ	0xFDA
  6179                           fsr2l	equ	0xFD9
  6180                           status	equ	0xFD8
  6181                           
  6182 ;; *************** function _GLCD_EnableController *****************
  6183 ;; Defined at:
  6184 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;  controller      1    wreg     unsigned char 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  controller      1    0[BANK0 ] unsigned char 
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  1    wreg      void 
  6191 ;; Registers used:
  6192 ;;		wreg, status,2, status,0
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6199 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6201 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6202 ;;Total ram usage:        1 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:    9
  6205 ;; This function calls:
  6206 ;;		Nothing
  6207 ;; This function is called by:
  6208 ;;		_GLCD_ReadStatus
  6209 ;;		_GLCD_WriteCommand
  6210 ;;		_GLCD_ReadData
  6211 ;;		_GLCD_WriteData
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           	psect	text39
  6216  00144C                     __ptext39:
  6217                           	opt stack 0
  6218  00144C                     _GLCD_EnableController:
  6219                           	opt stack 16
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;incstack = 0
  6223                           ;GLCD_EnableController@controller stored from wreg
  6224  00144C  0100               	movlb	0	; () banked
  6225  00144E  6F60               	movwf	GLCD_EnableController@controller& (0+255),b
  6226                           
  6227                           ;KS0108-PIC18.c: 41: switch(controller){
  6228  001450  D006               	goto	l528
  6229  001452  9A80               	bcf	3968,5,c	;volatile
  6230  001454  0012               	return	
  6231  001456  9C80               	bcf	3968,6,c	;volatile
  6232  001458  0012               	return	
  6233  00145A  9E80               	bcf	3968,7,c	;volatile
  6234                           
  6235                           ;KS0108-PIC18.c: 45: }
  6236  00145C  0012               	return	
  6237  00145E                     l528:
  6238  00145E  0100               	movlb	0	; () banked
  6239  001460  5160               	movf	GLCD_EnableController@controller& (0+255),w,b
  6240                           
  6241                           ; Switch size 1, requested type "space"
  6242                           ; Number of cases is 3, Range of values is 0 to 2
  6243                           ; switch strategies available:
  6244                           ; Name         Instructions Cycles
  6245                           ; simple_byte           10     6 (average)
  6246                           ;	Chosen strategy is simple_byte
  6247  001462  0A00               	xorlw	0	; case 0
  6248  001464  B4D8               	btfsc	status,2,c
  6249  001466  D7F5               	goto	l529
  6250  001468  0A01               	xorlw	1	; case 1
  6251  00146A  B4D8               	btfsc	status,2,c
  6252  00146C  D7F4               	goto	l531
  6253  00146E  0A03               	xorlw	3	; case 2
  6254  001470  A4D8               	btfss	status,2,c
  6255  001472  0012               	return	
  6256  001474  D7F2               	goto	l532
  6257  001476                     __end_of_GLCD_EnableController:
  6258                           	opt stack 0
  6259                           tblptru	equ	0xFF8
  6260                           tblptrh	equ	0xFF7
  6261                           tblptrl	equ	0xFF6
  6262                           tablat	equ	0xFF5
  6263                           prodh	equ	0xFF4
  6264                           prodl	equ	0xFF3
  6265                           intcon	equ	0xFF2
  6266                           indf0	equ	0xFEF
  6267                           postinc0	equ	0xFEE
  6268                           fsr0h	equ	0xFEA
  6269                           fsr0l	equ	0xFE9
  6270                           wreg	equ	0xFE8
  6271                           indf2	equ	0xFDF
  6272                           fsr2h	equ	0xFDA
  6273                           fsr2l	equ	0xFD9
  6274                           status	equ	0xFD8
  6275                           
  6276 ;; *************** function _GLCD_DisableController *****************
  6277 ;; Defined at:
  6278 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  controller      1    wreg     unsigned char 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;  controller      1    0[BANK0 ] unsigned char 
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  1    wreg      void 
  6285 ;; Registers used:
  6286 ;;		wreg, status,2, status,0
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6293 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6295 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6296 ;;Total ram usage:        1 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    9
  6299 ;; This function calls:
  6300 ;;		Nothing
  6301 ;; This function is called by:
  6302 ;;		_GLCD_ReadStatus
  6303 ;;		_GLCD_WriteCommand
  6304 ;;		_GLCD_ReadData
  6305 ;;		_GLCD_WriteData
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text40
  6310  001476                     __ptext40:
  6311                           	opt stack 0
  6312  001476                     _GLCD_DisableController:
  6313                           	opt stack 16
  6314                           
  6315                           ;incstack = 0
  6316                           ;GLCD_DisableController@controller stored from wreg
  6317  001476  0100               	movlb	0	; () banked
  6318  001478  6F60               	movwf	GLCD_DisableController@controller& (0+255),b
  6319                           
  6320                           ;KS0108-PIC18.c: 52: switch(controller)
  6321  00147A  D006               	goto	l536
  6322  00147C  8A80               	bsf	3968,5,c	;volatile
  6323  00147E  0012               	return	
  6324  001480  8C80               	bsf	3968,6,c	;volatile
  6325  001482  0012               	return	
  6326  001484  8E80               	bsf	3968,7,c	;volatile
  6327                           
  6328                           ;KS0108-PIC18.c: 57: }
  6329  001486  0012               	return	
  6330  001488                     l536:
  6331  001488  0100               	movlb	0	; () banked
  6332  00148A  5160               	movf	GLCD_DisableController@controller& (0+255),w,b
  6333                           
  6334                           ; Switch size 1, requested type "space"
  6335                           ; Number of cases is 3, Range of values is 0 to 2
  6336                           ; switch strategies available:
  6337                           ; Name         Instructions Cycles
  6338                           ; simple_byte           10     6 (average)
  6339                           ;	Chosen strategy is simple_byte
  6340  00148C  0A00               	xorlw	0	; case 0
  6341  00148E  B4D8               	btfsc	status,2,c
  6342  001490  D7F5               	goto	l537
  6343  001492  0A01               	xorlw	1	; case 1
  6344  001494  B4D8               	btfsc	status,2,c
  6345  001496  D7F4               	goto	l539
  6346  001498  0A03               	xorlw	3	; case 2
  6347  00149A  A4D8               	btfss	status,2,c
  6348  00149C  0012               	return	
  6349  00149E  D7F2               	goto	l540
  6350  0014A0                     __end_of_GLCD_DisableController:
  6351                           	opt stack 0
  6352                           tblptru	equ	0xFF8
  6353                           tblptrh	equ	0xFF7
  6354                           tblptrl	equ	0xFF6
  6355                           tablat	equ	0xFF5
  6356                           prodh	equ	0xFF4
  6357                           prodl	equ	0xFF3
  6358                           intcon	equ	0xFF2
  6359                           indf0	equ	0xFEF
  6360                           postinc0	equ	0xFEE
  6361                           fsr0h	equ	0xFEA
  6362                           fsr0l	equ	0xFE9
  6363                           wreg	equ	0xFE8
  6364                           indf2	equ	0xFDF
  6365                           fsr2h	equ	0xFDA
  6366                           fsr2l	equ	0xFD9
  6367                           status	equ	0xFD8
  6368                           
  6369 ;; *************** function _GLCD_Delay *****************
  6370 ;; Defined at:
  6371 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;		None
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;		None
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  1    wreg      void 
  6378 ;; Registers used:
  6379 ;;		None
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6389 ;;Total ram usage:        0 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    9
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_GLCD_ReadStatus
  6396 ;;		_GLCD_WriteCommand
  6397 ;;		_GLCD_ReadData
  6398 ;;		_GLCD_WriteData
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           	psect	text41
  6403  001644                     __ptext41:
  6404                           	opt stack 0
  6405  001644                     _GLCD_Delay:
  6406                           	opt stack 16
  6407                           
  6408                           ;KS0108-PIC18.c: 26: __nop();
  6409                           
  6410                           ;incstack = 0
  6411  001644  F000               	nop	
  6412  001646  0012               	return		;funcret
  6413  001648                     __end_of_GLCD_Delay:
  6414                           	opt stack 0
  6415                           tblptru	equ	0xFF8
  6416                           tblptrh	equ	0xFF7
  6417                           tblptrl	equ	0xFF6
  6418                           tablat	equ	0xFF5
  6419                           prodh	equ	0xFF4
  6420                           prodl	equ	0xFF3
  6421                           intcon	equ	0xFF2
  6422                           indf0	equ	0xFEF
  6423                           postinc0	equ	0xFEE
  6424                           fsr0h	equ	0xFEA
  6425                           fsr0l	equ	0xFE9
  6426                           wreg	equ	0xFE8
  6427                           indf2	equ	0xFDF
  6428                           fsr2h	equ	0xFDA
  6429                           fsr2l	equ	0xFD9
  6430                           status	equ	0xFD8
  6431                           
  6432 ;; *************** function _INTERRUPT_InterruptManager *****************
  6433 ;; Defined at:
  6434 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;		None
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;		None
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  1    wreg      void 
  6441 ;; Registers used:
  6442 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6450 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6451 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6452 ;;Total ram usage:       18 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; Hardware stack levels required when called:    8
  6455 ;; This function calls:
  6456 ;;		_PIN_MANAGER_IOC
  6457 ;;		_TMR0_ISR
  6458 ;; This function is called by:
  6459 ;;		Interrupt level 2
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	intcode
  6464  000008                     __pintcode:
  6465                           	opt stack 0
  6466  000008                     _INTERRUPT_InterruptManager:
  6467                           	opt stack 14
  6468                           
  6469                           ;incstack = 0
  6470  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6471  00000A  CFFA F028          	movff	pclath,??_INTERRUPT_InterruptManager
  6472  00000E  CFFB F029          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6473  000012  CFE9 F02A          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  6474  000016  CFEA F02B          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  6475  00001A  CFE1 F02C          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  6476  00001E  CFE2 F02D          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  6477  000022  CFD9 F02E          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  6478  000026  CFDA F02F          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  6479  00002A  CFF3 F030          	movff	prodl,??_INTERRUPT_InterruptManager+8
  6480  00002E  CFF4 F031          	movff	prodh,??_INTERRUPT_InterruptManager+9
  6481  000032  CFF6 F032          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  6482  000036  CFF7 F033          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  6483  00003A  CFF8 F034          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  6484  00003E  CFF5 F035          	movff	tablat,??_INTERRUPT_InterruptManager+13
  6485  000042  C049  F036         	movff	btemp,??_INTERRUPT_InterruptManager+14
  6486  000046  C04A  F037         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  6487  00004A  C04B  F038         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  6488  00004E  C04C  F039         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  6489                           
  6490                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  6491  000052  BAF2               	btfsc	intcon,5,c	;volatile
  6492  000054  A4F2               	btfss	intcon,2,c	;volatile
  6493  000056  D003               	goto	i2l192
  6494                           
  6495                           ;interrupt_manager.c: 61: {
  6496                           ;interrupt_manager.c: 62: TMR0_ISR();
  6497  000058  EC50  F00A         	call	_TMR0_ISR	;wreg free
  6498                           
  6499                           ;interrupt_manager.c: 63: }
  6500  00005C  D005               	goto	i2l194
  6501  00005E                     i2l192:
  6502                           
  6503                           ;interrupt_manager.c: 64: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  6504  00005E  B6F2               	btfsc	intcon,3,c	;volatile
  6505  000060  A0F2               	btfss	intcon,0,c	;volatile
  6506  000062  D002               	goto	i2l194
  6507                           
  6508                           ;interrupt_manager.c: 65: {
  6509                           ;interrupt_manager.c: 66: PIN_MANAGER_IOC();
  6510  000064  ECD1  F003         	call	_PIN_MANAGER_IOC	;wreg free
  6511  000068                     i2l194:
  6512                           
  6513                           ;interrupt_manager.c: 68: else
  6514                           ;interrupt_manager.c: 69: {
  6515  000068  C039  F04C         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  6516  00006C  C038  F04B         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  6517  000070  C037  F04A         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  6518  000074  C036  F049         	movff	??_INTERRUPT_InterruptManager+14,btemp
  6519  000078  C035  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  6520  00007C  C034  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  6521  000080  C033  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  6522  000084  C032  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  6523  000088  C031  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  6524  00008C  C030  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  6525  000090  C02F  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  6526  000094  C02E  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  6527  000098  C02D  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  6528  00009C  C02C  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  6529  0000A0  C02B  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  6530  0000A4  C02A  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  6531  0000A8  C029  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6532  0000AC  C028  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6533  0000B0  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6534  0000B2  0011               	retfie		f
  6535  0000B4                     __end_of_INTERRUPT_InterruptManager:
  6536                           	opt stack 0
  6537                           pclatu	equ	0xFFB
  6538                           pclath	equ	0xFFA
  6539                           tblptru	equ	0xFF8
  6540                           tblptrh	equ	0xFF7
  6541                           tblptrl	equ	0xFF6
  6542                           tablat	equ	0xFF5
  6543                           prodh	equ	0xFF4
  6544                           prodl	equ	0xFF3
  6545                           intcon	equ	0xFF2
  6546                           indf0	equ	0xFEF
  6547                           postinc0	equ	0xFEE
  6548                           fsr0h	equ	0xFEA
  6549                           fsr0l	equ	0xFE9
  6550                           wreg	equ	0xFE8
  6551                           fsr1h	equ	0xFE2
  6552                           fsr1l	equ	0xFE1
  6553                           indf2	equ	0xFDF
  6554                           fsr2h	equ	0xFDA
  6555                           fsr2l	equ	0xFD9
  6556                           status	equ	0xFD8
  6557                           
  6558 ;; *************** function _TMR0_ISR *****************
  6559 ;; Defined at:
  6560 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;		None
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      void 
  6567 ;; Registers used:
  6568 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6578 ;;Total ram usage:        0 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:    1
  6581 ;; This function calls:
  6582 ;;		Absolute function
  6583 ;;		_TMR0_DefaultInterruptHandler
  6584 ;; This function is called by:
  6585 ;;		_INTERRUPT_InterruptManager
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text43
  6590  0014A0                     __ptext43:
  6591                           	opt stack 0
  6592  0014A0                     _TMR0_ISR:
  6593                           	opt stack 20
  6594                           
  6595                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
  6596                           
  6597                           ;incstack = 0
  6598  0014A0  94F2               	bcf	intcon,2,c	;volatile
  6599                           
  6600                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
  6601  0014A2  0100               	movlb	0	; () banked
  6602  0014A4  51A0               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
  6603  0014A6  6ED7               	movwf	4055,c	;volatile
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
  6607  0014A8  C09F  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;tmr0.c: 145: if(TMR0_InterruptHandler)
  6611  0014AC  51A1               	movf	_TMR0_InterruptHandler& (0+255),w,b
  6612  0014AE  11A2               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  6613  0014B0  B4D8               	btfsc	status,2,c
  6614  0014B2  0012               	return	
  6615                           
  6616                           ; BSR set to: 0
  6617                           ;tmr0.c: 146: {
  6618                           ;tmr0.c: 147: TMR0_InterruptHandler();
  6619  0014B4  D801               	call	i2u213_48
  6620  0014B6  0012               	return	
  6621  0014B8                     i2u213_48:
  6622  0014B8  0005               	push	
  6623  0014BA  6EFA               	movwf	pclath,c
  6624  0014BC  51A1               	movf	_TMR0_InterruptHandler& (0+255),w,b
  6625  0014BE  6EFD               	movwf	tosl,c
  6626  0014C0  51A2               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  6627  0014C2  6EFE               	movwf	tosh,c
  6628  0014C4  6AFF               	clrf	tosu,c
  6629  0014C6  50FA               	movf	pclath,w,c
  6630  0014C8  0012               	return		;indir
  6631  0014CA                     __end_of_TMR0_ISR:
  6632                           	opt stack 0
  6633                           tosu	equ	0xFFF
  6634                           tosh	equ	0xFFE
  6635                           tosl	equ	0xFFD
  6636                           pclatu	equ	0xFFB
  6637                           pclath	equ	0xFFA
  6638                           tblptru	equ	0xFF8
  6639                           tblptrh	equ	0xFF7
  6640                           tblptrl	equ	0xFF6
  6641                           tablat	equ	0xFF5
  6642                           prodh	equ	0xFF4
  6643                           prodl	equ	0xFF3
  6644                           intcon	equ	0xFF2
  6645                           indf0	equ	0xFEF
  6646                           postinc0	equ	0xFEE
  6647                           fsr0h	equ	0xFEA
  6648                           fsr0l	equ	0xFE9
  6649                           wreg	equ	0xFE8
  6650                           fsr1h	equ	0xFE2
  6651                           fsr1l	equ	0xFE1
  6652                           indf2	equ	0xFDF
  6653                           fsr2h	equ	0xFDA
  6654                           fsr2l	equ	0xFD9
  6655                           status	equ	0xFD8
  6656                           
  6657 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6658 ;; Defined at:
  6659 ;;		line 158 in file "mcc_generated_files/tmr0.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;		None
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;		None
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  1    wreg      void 
  6666 ;; Registers used:
  6667 ;;		None
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6677 ;;Total ram usage:        0 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; This function calls:
  6680 ;;		Nothing
  6681 ;; This function is called by:
  6682 ;;		_TMR0_Initialize
  6683 ;;		_TMR0_ISR
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           	psect	text44
  6688  001652                     __ptext44:
  6689                           	opt stack 0
  6690  001652                     _TMR0_DefaultInterruptHandler:
  6691                           	opt stack 20
  6692                           
  6693                           ;incstack = 0
  6694  001652  0012               	return		;funcret
  6695  001654                     __end_of_TMR0_DefaultInterruptHandler:
  6696                           	opt stack 0
  6697                           tosu	equ	0xFFF
  6698                           tosh	equ	0xFFE
  6699                           tosl	equ	0xFFD
  6700                           pclatu	equ	0xFFB
  6701                           pclath	equ	0xFFA
  6702                           tblptru	equ	0xFF8
  6703                           tblptrh	equ	0xFF7
  6704                           tblptrl	equ	0xFF6
  6705                           tablat	equ	0xFF5
  6706                           prodh	equ	0xFF4
  6707                           prodl	equ	0xFF3
  6708                           intcon	equ	0xFF2
  6709                           indf0	equ	0xFEF
  6710                           postinc0	equ	0xFEE
  6711                           fsr0h	equ	0xFEA
  6712                           fsr0l	equ	0xFE9
  6713                           wreg	equ	0xFE8
  6714                           fsr1h	equ	0xFE2
  6715                           fsr1l	equ	0xFE1
  6716                           indf2	equ	0xFDF
  6717                           fsr2h	equ	0xFDA
  6718                           fsr2l	equ	0xFD9
  6719                           status	equ	0xFD8
  6720                           
  6721 ;; *************** function _PIN_MANAGER_IOC *****************
  6722 ;; Defined at:
  6723 ;;		line 137 in file "mcc_generated_files/pin_manager.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;		None
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  result          1   38[COMRAM] unsigned char 
  6728 ;;  CHA             1   37[COMRAM] unsigned char 
  6729 ;;  CHB             1   36[COMRAM] unsigned char 
  6730 ;;  currentState    1   35[COMRAM] unsigned char 
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  1    wreg      void 
  6733 ;; Registers used:
  6734 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6741 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6744 ;;Total ram usage:        4 bytes
  6745 ;; Hardware stack levels used:    1
  6746 ;; Hardware stack levels required when called:    7
  6747 ;; This function calls:
  6748 ;;		_Main_Menu_Function
  6749 ;;		_Run_Time_Menu_Function
  6750 ;; This function is called by:
  6751 ;;		_INTERRUPT_InterruptManager
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text45
  6756  0007A2                     __ptext45:
  6757                           	opt stack 0
  6758  0007A2                     _PIN_MANAGER_IOC:
  6759                           	opt stack 14
  6760                           
  6761                           ;pin_manager.c: 139: static unsigned char previousState;
  6762                           ;pin_manager.c: 140: unsigned char currentState;
  6763                           ;pin_manager.c: 141: char result;
  6764                           ;pin_manager.c: 142: static unsigned char cw_count = 0;
  6765                           ;pin_manager.c: 143: static unsigned char ccw_count = 0;
  6766                           ;pin_manager.c: 144: unsigned char CHA, CHB;
  6767                           ;pin_manager.c: 146: CHA = PORTBbits.RB5;
  6768                           
  6769                           ;incstack = 0
  6770  0007A2  0E00               	movlw	0
  6771  0007A4  BA81               	btfsc	3969,5,c	;volatile
  6772  0007A6  0E01               	movlw	1
  6773  0007A8  6E26               	movwf	PIN_MANAGER_IOC@CHA,c
  6774                           
  6775                           ;pin_manager.c: 147: CHB = PORTBbits.RB4;
  6776  0007AA  0E00               	movlw	0
  6777  0007AC  B881               	btfsc	3969,4,c	;volatile
  6778  0007AE  0E01               	movlw	1
  6779  0007B0  6E25               	movwf	PIN_MANAGER_IOC@CHB,c
  6780                           
  6781                           ;pin_manager.c: 149: currentState = (CHA << 1) | CHB;
  6782  0007B2  5026               	movf	PIN_MANAGER_IOC@CHA,w,c
  6783  0007B4  2426               	addwf	PIN_MANAGER_IOC@CHA,w,c
  6784  0007B6  1025               	iorwf	PIN_MANAGER_IOC@CHB,w,c
  6785  0007B8  6E24               	movwf	PIN_MANAGER_IOC@currentState,c
  6786                           
  6787                           ;pin_manager.c: 151: if(previousState == 3)
  6788  0007BA  0E03               	movlw	3
  6789  0007BC  1840               	xorwf	PIN_MANAGER_IOC@previousState,w,c
  6790  0007BE  A4D8               	btfss	status,2,c
  6791  0007C0  D036               	goto	i2l127
  6792                           
  6793                           ;pin_manager.c: 152: {
  6794                           ;pin_manager.c: 155: if(CHA == 0)
  6795  0007C2  5026               	movf	PIN_MANAGER_IOC@CHA,w,c
  6796  0007C4  A4D8               	btfss	status,2,c
  6797  0007C6  D002               	goto	i2l123
  6798                           
  6799                           ;pin_manager.c: 156: {
  6800                           ;pin_manager.c: 157: result = 1;
  6801  0007C8  0E01               	movlw	1
  6802  0007CA  D001               	goto	L5
  6803  0007CC                     i2l123:
  6804                           
  6805                           ;pin_manager.c: 159: else
  6806                           ;pin_manager.c: 160: {
  6807                           ;pin_manager.c: 161: result = 0;
  6808  0007CC  0E00               	movlw	0
  6809  0007CE                     L5:
  6810  0007CE  6E27               	movwf	PIN_MANAGER_IOC@result,c
  6811                           
  6812                           ;pin_manager.c: 162: }
  6813                           ;pin_manager.c: 165: switch(currentContext)
  6814  0007D0  D00C               	goto	i2l125
  6815  0007D2  5027               	movf	PIN_MANAGER_IOC@result,w,c
  6816  0007D4  ECBF  F00A         	call	_Main_Menu_Function
  6817  0007D8  D02A               	goto	i2l127
  6818  0007DA  5027               	movf	PIN_MANAGER_IOC@result,w,c
  6819  0007DC  EC61  F004         	call	_Run_Time_Menu_Function
  6820                           
  6821                           ;pin_manager.c: 177: case selectStateMenu: break;
  6822                           
  6823                           ;pin_manager.c: 176: case backlightMenu: break;
  6824                           
  6825                           ;pin_manager.c: 175: case endColorGreen: break;
  6826                           
  6827                           ;pin_manager.c: 174: case endColorBlue: break;
  6828                           
  6829                           ;pin_manager.c: 173: case endColorRed: break;
  6830                           
  6831                           ;pin_manager.c: 172: case startColorGreen: break;
  6832                           
  6833                           ;pin_manager.c: 171: case startColorBlue: break;
  6834                           
  6835                           ;pin_manager.c: 170: case startColorRed: break;
  6836                           
  6837                           ;pin_manager.c: 169: case brightnessMenu: break;
  6838  0007E0  D026               	goto	i2l127
  6839  0007E2  5027               	movf	PIN_MANAGER_IOC@result,w,c
  6840  0007E4  ECBF  F00A         	call	_Main_Menu_Function
  6841                           
  6842                           ;pin_manager.c: 181: }
  6843  0007E8  D022               	goto	i2l127
  6844  0007EA                     i2l125:
  6845  0007EA  5044               	movf	_currentContext,w,c
  6846                           
  6847                           ; Switch size 1, requested type "space"
  6848                           ; Number of cases is 11, Range of values is 0 to 10
  6849                           ; switch strategies available:
  6850                           ; Name         Instructions Cycles
  6851                           ; simple_byte           34    18 (average)
  6852                           ;	Chosen strategy is simple_byte
  6853  0007EC  0A00               	xorlw	0	; case 0
  6854  0007EE  B4D8               	btfsc	status,2,c
  6855  0007F0  D7F0               	goto	i2l126
  6856  0007F2  0A01               	xorlw	1	; case 1
  6857  0007F4  B4D8               	btfsc	status,2,c
  6858  0007F6  D7F1               	goto	i2l128
  6859  0007F8  0A03               	xorlw	3	; case 2
  6860  0007FA  B4D8               	btfsc	status,2,c
  6861  0007FC  D018               	goto	i2l127
  6862  0007FE  0A01               	xorlw	1	; case 3
  6863  000800  B4D8               	btfsc	status,2,c
  6864  000802  D015               	goto	i2l127
  6865  000804  0A07               	xorlw	7	; case 4
  6866  000806  B4D8               	btfsc	status,2,c
  6867  000808  D012               	goto	i2l127
  6868  00080A  0A01               	xorlw	1	; case 5
  6869  00080C  B4D8               	btfsc	status,2,c
  6870  00080E  D00F               	goto	i2l127
  6871  000810  0A03               	xorlw	3	; case 6
  6872  000812  B4D8               	btfsc	status,2,c
  6873  000814  D00C               	goto	i2l127
  6874  000816  0A01               	xorlw	1	; case 7
  6875  000818  B4D8               	btfsc	status,2,c
  6876  00081A  D009               	goto	i2l127
  6877  00081C  0A0F               	xorlw	15	; case 8
  6878  00081E  B4D8               	btfsc	status,2,c
  6879  000820  D006               	goto	i2l127
  6880  000822  0A01               	xorlw	1	; case 9
  6881  000824  B4D8               	btfsc	status,2,c
  6882  000826  D003               	goto	i2l127
  6883  000828  0A03               	xorlw	3	; case 10
  6884  00082A  A4D8               	btfss	status,2,c
  6885  00082C  D7DA               	goto	i2l138
  6886  00082E                     i2l127:
  6887                           
  6888                           ;pin_manager.c: 182: }
  6889                           ;pin_manager.c: 184: previousState = currentState;
  6890  00082E  C024  F040         	movff	PIN_MANAGER_IOC@currentState,PIN_MANAGER_IOC@previousState
  6891                           
  6892                           ;pin_manager.c: 188: PORTB = PORTB;
  6893  000832  CF81 FF81          	movff	3969,3969	;volatile
  6894                           
  6895                           ;pin_manager.c: 190: INTCONbits.RBIF = 0;
  6896  000836  90F2               	bcf	intcon,0,c	;volatile
  6897  000838  0012               	return		;funcret
  6898  00083A                     __end_of_PIN_MANAGER_IOC:
  6899                           	opt stack 0
  6900                           tosu	equ	0xFFF
  6901                           tosh	equ	0xFFE
  6902                           tosl	equ	0xFFD
  6903                           pclatu	equ	0xFFB
  6904                           pclath	equ	0xFFA
  6905                           tblptru	equ	0xFF8
  6906                           tblptrh	equ	0xFF7
  6907                           tblptrl	equ	0xFF6
  6908                           tablat	equ	0xFF5
  6909                           prodh	equ	0xFF4
  6910                           prodl	equ	0xFF3
  6911                           intcon	equ	0xFF2
  6912                           indf0	equ	0xFEF
  6913                           postinc0	equ	0xFEE
  6914                           fsr0h	equ	0xFEA
  6915                           fsr0l	equ	0xFE9
  6916                           wreg	equ	0xFE8
  6917                           fsr1h	equ	0xFE2
  6918                           fsr1l	equ	0xFE1
  6919                           indf2	equ	0xFDF
  6920                           fsr2h	equ	0xFDA
  6921                           fsr2l	equ	0xFD9
  6922                           status	equ	0xFD8
  6923                           
  6924 ;; *************** function _Run_Time_Menu_Function *****************
  6925 ;; Defined at:
  6926 ;;		line 212 in file "mcc_generated_files/pin_manager.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  result          1    wreg     unsigned char 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;  result          1   34[COMRAM] unsigned char 
  6931 ;;  display        10   24[COMRAM] unsigned char [10]
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  1    wreg      void 
  6934 ;; Registers used:
  6935 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6942 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6944 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6945 ;;Total ram usage:       11 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; Hardware stack levels required when called:    6
  6948 ;; This function calls:
  6949 ;;		i2_Draw_Arrow
  6950 ;;		i2_GLCD_GoTo
  6951 ;;		i2_GLCD_WriteString
  6952 ;;		i2_itoa
  6953 ;; This function is called by:
  6954 ;;		_PIN_MANAGER_IOC
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           	psect	text46
  6959  0008C2                     __ptext46:
  6960                           	opt stack 0
  6961  0008C2                     _Run_Time_Menu_Function:
  6962                           	opt stack 14
  6963                           
  6964                           ;incstack = 0
  6965                           ;Run_Time_Menu_Function@result stored from wreg
  6966  0008C2  6E23               	movwf	Run_Time_Menu_Function@result,c
  6967                           
  6968                           ;pin_manager.c: 214: char display[10];
  6969                           ;pin_manager.c: 215: if(adjustValues > 0)
  6970  0008C4  5042               	movf	_adjustValues,w,c
  6971  0008C6  A4D8               	btfss	status,2,c
  6972  0008C8  D02D               	goto	i2l150
  6973  0008CA  D031               	goto	i2l149
  6974  0008CC                     
  6975                           ;pin_manager.c: 220: if(result)
  6976  0008CC  5023               	movf	Run_Time_Menu_Function@result,w,c
  6977  0008CE  B4D8               	btfsc	status,2,c
  6978  0008D0  D005               	goto	i2l152
  6979                           
  6980                           ;pin_manager.c: 221: {
  6981                           ;pin_manager.c: 222: if(runMinutes < 255) runMinutes++;
  6982  0008D2  2841               	incf	_runMinutes,w,c
  6983  0008D4  B4D8               	btfsc	status,2,c
  6984  0008D6  D005               	goto	i2l155
  6985  0008D8  2A41               	incf	_runMinutes,f,c
  6986                           
  6987                           ;pin_manager.c: 223: }
  6988  0008DA  D003               	goto	i2l155
  6989  0008DC                     i2l152:
  6990                           
  6991                           ;pin_manager.c: 224: else
  6992                           ;pin_manager.c: 225: {
  6993                           ;pin_manager.c: 226: if(runMinutes > 0) runMinutes--;
  6994  0008DC  5041               	movf	_runMinutes,w,c
  6995  0008DE  A4D8               	btfss	status,2,c
  6996  0008E0  0641               	decf	_runMinutes,f,c
  6997  0008E2                     i2l155:
  6998                           
  6999                           ;pin_manager.c: 227: }
  7000                           ;pin_manager.c: 228: GLCD_GoTo(valuesXStart, 2);
  7001  0008E2  0E02               	movlw	2
  7002  0008E4  6E0C               	movwf	i2GLCD_GoTo@y,c
  7003  0008E6  5046               	movf	_valuesXStart,w,c
  7004  0008E8  ECA7  F005         	call	i2_GLCD_GoTo
  7005                           
  7006                           ;pin_manager.c: 229: itoa(display, runMinutes, 10);
  7007  0008EC  0E19               	movlw	low Run_Time_Menu_Function@display
  7008  0008EE  6E11               	movwf	i2itoa@buf,c
  7009  0008F0  0E00               	movlw	high Run_Time_Menu_Function@display
  7010  0008F2  6E12               	movwf	i2itoa@buf+1,c
  7011  0008F4  C041  F013         	movff	_runMinutes,i2itoa@val
  7012  0008F8  6A14               	clrf	i2itoa@val+1,c
  7013  0008FA  0E00               	movlw	0
  7014  0008FC  6E16               	movwf	i2itoa@base+1,c
  7015  0008FE  0E0A               	movlw	10
  7016  000900  6E15               	movwf	i2itoa@base,c
  7017  000902  EC0F  F009         	call	i2_itoa	;wreg free
  7018                           
  7019                           ;pin_manager.c: 230: GLCD_WriteString(display);
  7020  000906  0E19               	movlw	low Run_Time_Menu_Function@display
  7021  000908  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
  7022  00090A  0E00               	movlw	high Run_Time_Menu_Function@display
  7023  00090C  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
  7024  00090E  ECE0  F007         	call	i2_GLCD_WriteString	;wreg free
  7025                           
  7026                           ;pin_manager.c: 231: GLCD_WriteString("min   ");
  7027  000912  0EEF               	movlw	low STR_1
  7028  000914  6E0E               	movwf	i2GLCD_WriteString@stringToWrite,c
  7029  000916  0EFF               	movlw	high STR_1
  7030  000918  6E0F               	movwf	i2GLCD_WriteString@stringToWrite+1,c
  7031  00091A  ECE0  F007         	call	i2_GLCD_WriteString	;wreg free
  7032                           
  7033                           ;pin_manager.c: 232: break;
  7034  00091E  0012               	return	
  7035  000920                     i2l157:
  7036  000920  F000               	nop	
  7037                           
  7038                           ;pin_manager.c: 237: }
  7039                           
  7040                           ;pin_manager.c: 235: break;
  7041  000922  0012               	return	
  7042  000924                     i2l150:
  7043  000924  5043               	movf	_runTimeContext,w,c
  7044                           
  7045                           ; Switch size 1, requested type "space"
  7046                           ; Number of cases is 1, Range of values is 0 to 0
  7047                           ; switch strategies available:
  7048                           ; Name         Instructions Cycles
  7049                           ; simple_byte            4     3 (average)
  7050                           ;	Chosen strategy is simple_byte
  7051  000926  0A00               	xorlw	0	; case 0
  7052  000928  B4D8               	btfsc	status,2,c
  7053  00092A  D7D0               	goto	i2l151
  7054  00092C  D7F9               	goto	i2l157
  7055  00092E                     i2l149:
  7056                           
  7057                           ;pin_manager.c: 239: else
  7058                           ;pin_manager.c: 240: {
  7059                           ;pin_manager.c: 241: if(result)
  7060  00092E  5023               	movf	Run_Time_Menu_Function@result,w,c
  7061  000930  B4D8               	btfsc	status,2,c
  7062  000932  D005               	goto	i2l159
  7063                           
  7064                           ;pin_manager.c: 242: {
  7065                           ;pin_manager.c: 243: if(runTimeContext < runTimeBack) runTimeContext++;
  7066  000934  0E02               	movlw	2
  7067  000936  6043               	cpfslt	_runTimeContext,c
  7068  000938  D005               	goto	i2l162
  7069  00093A  2A43               	incf	_runTimeContext,f,c
  7070                           
  7071                           ;pin_manager.c: 244: }
  7072  00093C  D003               	goto	i2l162
  7073  00093E                     i2l159:
  7074                           
  7075                           ;pin_manager.c: 245: else
  7076                           ;pin_manager.c: 246: {
  7077                           ;pin_manager.c: 247: if(runTimeContext > runTimeSelection) runTimeContext--;
  7078  00093E  5043               	movf	_runTimeContext,w,c
  7079  000940  A4D8               	btfss	status,2,c
  7080  000942  0643               	decf	_runTimeContext,f,c
  7081  000944                     i2l162:
  7082                           
  7083                           ;pin_manager.c: 248: }
  7084                           ;pin_manager.c: 250: Draw_Arrow();
  7085  000944  ECED  F008         	call	i2_Draw_Arrow	;wreg free
  7086  000948  0012               	return	
  7087  00094A                     __end_of_Run_Time_Menu_Function:
  7088                           	opt stack 0
  7089                           tosu	equ	0xFFF
  7090                           tosh	equ	0xFFE
  7091                           tosl	equ	0xFFD
  7092                           pclatu	equ	0xFFB
  7093                           pclath	equ	0xFFA
  7094                           tblptru	equ	0xFF8
  7095                           tblptrh	equ	0xFF7
  7096                           tblptrl	equ	0xFF6
  7097                           tablat	equ	0xFF5
  7098                           prodh	equ	0xFF4
  7099                           prodl	equ	0xFF3
  7100                           intcon	equ	0xFF2
  7101                           indf0	equ	0xFEF
  7102                           postinc0	equ	0xFEE
  7103                           fsr0h	equ	0xFEA
  7104                           fsr0l	equ	0xFE9
  7105                           wreg	equ	0xFE8
  7106                           fsr1h	equ	0xFE2
  7107                           fsr1l	equ	0xFE1
  7108                           indf2	equ	0xFDF
  7109                           fsr2h	equ	0xFDA
  7110                           fsr2l	equ	0xFD9
  7111                           status	equ	0xFD8
  7112                           
  7113 ;; *************** function i2_itoa *****************
  7114 ;; Defined at:
  7115 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  buf             2   16[COMRAM] PTR unsigned char 
  7118 ;;		 -> Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Run_Time_Menu_Function@display(10), 
  7119 ;;  val             2   18[COMRAM] int 
  7120 ;;  base            2   20[COMRAM] int 
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;  itoa            2   22[COMRAM] PTR unsigned char 
  7123 ;;		 -> Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Run_Time_Menu_Function@display(10), 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  2   16[COMRAM] PTR unsigned char 
  7126 ;; Registers used:
  7127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7133 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7136 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7137 ;;Total ram usage:        8 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; Hardware stack levels required when called:    2
  7140 ;; This function calls:
  7141 ;;		i2_utoa
  7142 ;; This function is called by:
  7143 ;;		_Run_Time_Menu_Function
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text47
  7148  00121E                     __ptext47:
  7149                           	opt stack 0
  7150  00121E                     i2_itoa:
  7151                           	opt stack 17
  7152                           
  7153                           ;incstack = 0
  7154  00121E  C011  F017         	movff	i2itoa@buf,i2itoa@cp
  7155  001222  C012  F018         	movff	i2itoa@buf+1,i2itoa@cp+1
  7156  001226  AE14               	btfss	i2itoa@val+1,7,c
  7157  001228  D00C               	goto	i2l1031
  7158  00122A  C011  FFD9         	movff	i2itoa@buf,fsr2l
  7159  00122E  C012  FFDA         	movff	i2itoa@buf+1,fsr2h
  7160  001232  0E2D               	movlw	45
  7161  001234  6EDF               	movwf	indf2,c
  7162  001236  4A11               	infsnz	i2itoa@buf,f,c
  7163  001238  2A12               	incf	i2itoa@buf+1,f,c
  7164  00123A  6C13               	negf	i2itoa@val,c
  7165  00123C  1E14               	comf	i2itoa@val+1,f,c
  7166  00123E  B0D8               	btfsc	status,0,c
  7167  001240  2A14               	incf	i2itoa@val+1,f,c
  7168  001242                     i2l1031:
  7169  001242  C011  F008         	movff	i2itoa@buf,i2utoa@buf
  7170  001246  C012  F009         	movff	i2itoa@buf+1,i2utoa@buf+1
  7171  00124A  C013  F00A         	movff	i2itoa@val,i2utoa@val
  7172  00124E  C014  F00B         	movff	i2itoa@val+1,i2utoa@val+1
  7173  001252  C015  F00C         	movff	i2itoa@base,i2utoa@base
  7174  001256  C016  F00D         	movff	i2itoa@base+1,i2utoa@base+1
  7175  00125A  EC7F  F003         	call	i2_utoa	;wreg free
  7176  00125E  0012               	return	
  7177  001260                     __end_ofi2_itoa:
  7178                           	opt stack 0
  7179                           tosu	equ	0xFFF
  7180                           tosh	equ	0xFFE
  7181                           tosl	equ	0xFFD
  7182                           pclatu	equ	0xFFB
  7183                           pclath	equ	0xFFA
  7184                           tblptru	equ	0xFF8
  7185                           tblptrh	equ	0xFF7
  7186                           tblptrl	equ	0xFF6
  7187                           tablat	equ	0xFF5
  7188                           prodh	equ	0xFF4
  7189                           prodl	equ	0xFF3
  7190                           intcon	equ	0xFF2
  7191                           indf0	equ	0xFEF
  7192                           postinc0	equ	0xFEE
  7193                           fsr0h	equ	0xFEA
  7194                           fsr0l	equ	0xFE9
  7195                           wreg	equ	0xFE8
  7196                           fsr1h	equ	0xFE2
  7197                           fsr1l	equ	0xFE1
  7198                           indf2	equ	0xFDF
  7199                           fsr2h	equ	0xFDA
  7200                           fsr2l	equ	0xFD9
  7201                           status	equ	0xFD8
  7202                           
  7203 ;; *************** function i2_utoa *****************
  7204 ;; Defined at:
  7205 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;  buf             2    7[COMRAM] PTR unsigned char 
  7208 ;;		 -> Draw_runTime_Menu@display(10), Initialize_Menus@display(10), Run_Time_Menu_Function@display(10), 
  7209 ;;  val             2    9[COMRAM] unsigned int 
  7210 ;;  base            2   11[COMRAM] int 
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;  utoa            2   13[COMRAM] unsigned int 
  7213 ;;  utoa            1   15[COMRAM] unsigned char 
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  2    7[COMRAM] PTR unsigned char 
  7216 ;; Registers used:
  7217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7223 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7224 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7226 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7227 ;;Total ram usage:        9 bytes
  7228 ;; Hardware stack levels used:    1
  7229 ;; Hardware stack levels required when called:    1
  7230 ;; This function calls:
  7231 ;;		i2___lwdiv
  7232 ;;		i2___lwmod
  7233 ;; This function is called by:
  7234 ;;		i2_itoa
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           	psect	text48
  7239  0006FE                     __ptext48:
  7240                           	opt stack 0
  7241  0006FE                     i2_utoa:
  7242                           	opt stack 17
  7243                           
  7244                           ;incstack = 0
  7245  0006FE  C00A  F00E         	movff	i2utoa@val,i2utoa@v
  7246  000702  C00B  F00F         	movff	i2utoa@val+1,i2utoa@v+1
  7247  000706  C00E  F001         	movff	i2utoa@v,i2___lwdiv@dividend
  7248  00070A  C00F  F002         	movff	i2utoa@v+1,i2___lwdiv@dividend+1
  7249  00070E  C00C  F003         	movff	i2utoa@base,i2___lwdiv@divisor
  7250  000712  C00D  F004         	movff	i2utoa@base+1,i2___lwdiv@divisor+1
  7251  000716  EC35  F008         	call	i2___lwdiv	;wreg free
  7252  00071A  C001  F00E         	movff	?i2___lwdiv,i2utoa@v
  7253  00071E  C002  F00F         	movff	?i2___lwdiv+1,i2utoa@v+1
  7254  000722  4A08               	infsnz	i2utoa@buf,f,c
  7255  000724  2A09               	incf	i2utoa@buf+1,f,c
  7256  000726  500E               	movf	i2utoa@v,w,c
  7257  000728  100F               	iorwf	i2utoa@v+1,w,c
  7258  00072A  A4D8               	btfss	status,2,c
  7259  00072C  D7EC               	goto	i2l1035
  7260  00072E  C008  FFD9         	movff	i2utoa@buf,fsr2l
  7261  000732  C009  FFDA         	movff	i2utoa@buf+1,fsr2h
  7262  000736  0E00               	movlw	0
  7263  000738  6EDF               	movwf	indf2,c
  7264  00073A  0608               	decf	i2utoa@buf,f,c
  7265  00073C  A0D8               	btfss	status,0,c
  7266  00073E  0609               	decf	i2utoa@buf+1,f,c
  7267  000740  C00A  F001         	movff	i2utoa@val,i2___lwmod@dividend
  7268  000744  C00B  F002         	movff	i2utoa@val+1,i2___lwmod@dividend+1
  7269  000748  C00C  F003         	movff	i2utoa@base,i2___lwmod@divisor
  7270  00074C  C00D  F004         	movff	i2utoa@base+1,i2___lwmod@divisor+1
  7271  000750  EC30  F009         	call	i2___lwmod	;wreg free
  7272  000754  5001               	movf	?i2___lwmod,w,c
  7273  000756  6E10               	movwf	i2utoa@c,c
  7274  000758  C00A  F001         	movff	i2utoa@val,i2___lwdiv@dividend
  7275  00075C  C00B  F002         	movff	i2utoa@val+1,i2___lwdiv@dividend+1
  7276  000760  C00C  F003         	movff	i2utoa@base,i2___lwdiv@divisor
  7277  000764  C00D  F004         	movff	i2utoa@base+1,i2___lwdiv@divisor+1
  7278  000768  EC35  F008         	call	i2___lwdiv	;wreg free
  7279  00076C  C001  F00A         	movff	?i2___lwdiv,i2utoa@val
  7280  000770  C002  F00B         	movff	?i2___lwdiv+1,i2utoa@val+1
  7281  000774  0E09               	movlw	9
  7282  000776  6410               	cpfsgt	i2utoa@c,c
  7283  000778  D002               	goto	i2l1038
  7284  00077A  0E07               	movlw	7
  7285  00077C  2610               	addwf	i2utoa@c,f,c
  7286  00077E                     i2l1038:
  7287  00077E  0E30               	movlw	48
  7288  000780  2610               	addwf	i2utoa@c,f,c
  7289  000782  C008  FFD9         	movff	i2utoa@buf,fsr2l
  7290  000786  C009  FFDA         	movff	i2utoa@buf+1,fsr2h
  7291  00078A  C010  FFDF         	movff	i2utoa@c,indf2
  7292  00078E  0608               	decf	i2utoa@buf,f,c
  7293  000790  A0D8               	btfss	status,0,c
  7294  000792  0609               	decf	i2utoa@buf+1,f,c
  7295  000794  500A               	movf	i2utoa@val,w,c
  7296  000796  100B               	iorwf	i2utoa@val+1,w,c
  7297  000798  A4D8               	btfss	status,2,c
  7298  00079A  D7D2               	goto	i2l1037
  7299                           
  7300                           ;	Return value of i2_utoa is never used
  7301  00079C  4A08               	infsnz	i2utoa@buf,f,c
  7302  00079E  2A09               	incf	i2utoa@buf+1,f,c
  7303  0007A0  0012               	return	
  7304  0007A2                     __end_ofi2_utoa:
  7305                           	opt stack 0
  7306                           tosu	equ	0xFFF
  7307                           tosh	equ	0xFFE
  7308                           tosl	equ	0xFFD
  7309                           pclatu	equ	0xFFB
  7310                           pclath	equ	0xFFA
  7311                           tblptru	equ	0xFF8
  7312                           tblptrh	equ	0xFF7
  7313                           tblptrl	equ	0xFF6
  7314                           tablat	equ	0xFF5
  7315                           prodh	equ	0xFF4
  7316                           prodl	equ	0xFF3
  7317                           intcon	equ	0xFF2
  7318                           indf0	equ	0xFEF
  7319                           postinc0	equ	0xFEE
  7320                           fsr0h	equ	0xFEA
  7321                           fsr0l	equ	0xFE9
  7322                           wreg	equ	0xFE8
  7323                           fsr1h	equ	0xFE2
  7324                           fsr1l	equ	0xFE1
  7325                           indf2	equ	0xFDF
  7326                           fsr2h	equ	0xFDA
  7327                           fsr2l	equ	0xFD9
  7328                           status	equ	0xFD8
  7329                           
  7330 ;; *************** function i2___lwmod *****************
  7331 ;; Defined at:
  7332 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  dividend        2    0[COMRAM] unsigned int 
  7335 ;;  divisor         2    2[COMRAM] unsigned int 
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;  __lwmod         1    4[COMRAM] unsigned char 
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  2    0[COMRAM] unsigned int 
  7340 ;; Registers used:
  7341 ;;		wreg, status,2, status,0
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7350 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7351 ;;Total ram usage:        5 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; This function calls:
  7354 ;;		Nothing
  7355 ;; This function is called by:
  7356 ;;		i2_utoa
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360                           	psect	text49
  7361  001260                     __ptext49:
  7362                           	opt stack 0
  7363  001260                     i2___lwmod:
  7364                           	opt stack 17
  7365                           
  7366                           ;incstack = 0
  7367  001260  5003               	movf	i2___lwmod@divisor,w,c
  7368  001262  1004               	iorwf	i2___lwmod@divisor+1,w,c
  7369  001264  B4D8               	btfsc	status,2,c
  7370  001266  D018               	goto	i2l1133
  7371  001268  0E01               	movlw	1
  7372  00126A  6E05               	movwf	i2___lwmod@counter,c
  7373  00126C  D004               	goto	i2l1128
  7374  00126E  90D8               	bcf	status,0,c
  7375  001270  3603               	rlcf	i2___lwmod@divisor,f,c
  7376  001272  3604               	rlcf	i2___lwmod@divisor+1,f,c
  7377  001274  2A05               	incf	i2___lwmod@counter,f,c
  7378  001276                     i2l1128:
  7379  001276  AE04               	btfss	i2___lwmod@divisor+1,7,c
  7380  001278  D7FA               	goto	i2l1129
  7381  00127A                     i2u154_40:
  7382  00127A  5003               	movf	i2___lwmod@divisor,w,c
  7383  00127C  5C01               	subwf	i2___lwmod@dividend,w,c
  7384  00127E  5004               	movf	i2___lwmod@divisor+1,w,c
  7385  001280  5802               	subwfb	i2___lwmod@dividend+1,w,c
  7386  001282  A0D8               	btfss	status,0,c
  7387  001284  D004               	goto	i2l1132
  7388  001286  5003               	movf	i2___lwmod@divisor,w,c
  7389  001288  5E01               	subwf	i2___lwmod@dividend,f,c
  7390  00128A  5004               	movf	i2___lwmod@divisor+1,w,c
  7391  00128C  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  7392  00128E                     i2l1132:
  7393  00128E  90D8               	bcf	status,0,c
  7394  001290  3204               	rrcf	i2___lwmod@divisor+1,f,c
  7395  001292  3203               	rrcf	i2___lwmod@divisor,f,c
  7396  001294  2E05               	decfsz	i2___lwmod@counter,f,c
  7397  001296  D7F1               	goto	i2u154_40
  7398  001298                     i2l1133:
  7399  001298  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  7400  00129C  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  7401  0012A0  0012               	return		;funcret
  7402  0012A2                     __end_ofi2___lwmod:
  7403                           	opt stack 0
  7404                           tosu	equ	0xFFF
  7405                           tosh	equ	0xFFE
  7406                           tosl	equ	0xFFD
  7407                           pclatu	equ	0xFFB
  7408                           pclath	equ	0xFFA
  7409                           tblptru	equ	0xFF8
  7410                           tblptrh	equ	0xFF7
  7411                           tblptrl	equ	0xFF6
  7412                           tablat	equ	0xFF5
  7413                           prodh	equ	0xFF4
  7414                           prodl	equ	0xFF3
  7415                           intcon	equ	0xFF2
  7416                           indf0	equ	0xFEF
  7417                           postinc0	equ	0xFEE
  7418                           fsr0h	equ	0xFEA
  7419                           fsr0l	equ	0xFE9
  7420                           wreg	equ	0xFE8
  7421                           fsr1h	equ	0xFE2
  7422                           fsr1l	equ	0xFE1
  7423                           indf2	equ	0xFDF
  7424                           fsr2h	equ	0xFDA
  7425                           fsr2l	equ	0xFD9
  7426                           status	equ	0xFD8
  7427                           
  7428 ;; *************** function i2___lwdiv *****************
  7429 ;; Defined at:
  7430 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  dividend        2    0[COMRAM] unsigned int 
  7433 ;;  divisor         2    2[COMRAM] unsigned int 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  7436 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  2    0[COMRAM] unsigned int 
  7439 ;; Registers used:
  7440 ;;		wreg, status,2, status,0
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7447 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7449 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7450 ;;Total ram usage:        7 bytes
  7451 ;; Hardware stack levels used:    1
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		i2_utoa
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text50
  7460  00106A                     __ptext50:
  7461                           	opt stack 0
  7462  00106A                     i2___lwdiv:
  7463                           	opt stack 17
  7464                           
  7465                           ;incstack = 0
  7466  00106A  0E00               	movlw	0
  7467  00106C  6E06               	movwf	i2___lwdiv@quotient+1,c
  7468  00106E  0E00               	movlw	0
  7469  001070  6E05               	movwf	i2___lwdiv@quotient,c
  7470  001072  5003               	movf	i2___lwdiv@divisor,w,c
  7471  001074  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  7472  001076  B4D8               	btfsc	status,2,c
  7473  001078  D01C               	goto	i2l1123
  7474  00107A  0E01               	movlw	1
  7475  00107C  6E07               	movwf	i2___lwdiv@counter,c
  7476  00107E  D004               	goto	i2l1118
  7477  001080  90D8               	bcf	status,0,c
  7478  001082  3603               	rlcf	i2___lwdiv@divisor,f,c
  7479  001084  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  7480  001086  2A07               	incf	i2___lwdiv@counter,f,c
  7481  001088                     i2l1118:
  7482  001088  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  7483  00108A  D7FA               	goto	i2l1119
  7484  00108C                     i2u151_40:
  7485  00108C  90D8               	bcf	status,0,c
  7486  00108E  3605               	rlcf	i2___lwdiv@quotient,f,c
  7487  001090  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  7488  001092  5003               	movf	i2___lwdiv@divisor,w,c
  7489  001094  5C01               	subwf	i2___lwdiv@dividend,w,c
  7490  001096  5004               	movf	i2___lwdiv@divisor+1,w,c
  7491  001098  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  7492  00109A  A0D8               	btfss	status,0,c
  7493  00109C  D005               	goto	i2l1122
  7494  00109E  5003               	movf	i2___lwdiv@divisor,w,c
  7495  0010A0  5E01               	subwf	i2___lwdiv@dividend,f,c
  7496  0010A2  5004               	movf	i2___lwdiv@divisor+1,w,c
  7497  0010A4  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  7498  0010A6  8005               	bsf	i2___lwdiv@quotient,0,c
  7499  0010A8                     i2l1122:
  7500  0010A8  90D8               	bcf	status,0,c
  7501  0010AA  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  7502  0010AC  3203               	rrcf	i2___lwdiv@divisor,f,c
  7503  0010AE  2E07               	decfsz	i2___lwdiv@counter,f,c
  7504  0010B0  D7ED               	goto	i2u151_40
  7505  0010B2                     i2l1123:
  7506  0010B2  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  7507  0010B6  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  7508  0010BA  0012               	return		;funcret
  7509  0010BC                     __end_ofi2___lwdiv:
  7510                           	opt stack 0
  7511                           tosu	equ	0xFFF
  7512                           tosh	equ	0xFFE
  7513                           tosl	equ	0xFFD
  7514                           pclatu	equ	0xFFB
  7515                           pclath	equ	0xFFA
  7516                           tblptru	equ	0xFF8
  7517                           tblptrh	equ	0xFF7
  7518                           tblptrl	equ	0xFF6
  7519                           tablat	equ	0xFF5
  7520                           prodh	equ	0xFF4
  7521                           prodl	equ	0xFF3
  7522                           intcon	equ	0xFF2
  7523                           indf0	equ	0xFEF
  7524                           postinc0	equ	0xFEE
  7525                           fsr0h	equ	0xFEA
  7526                           fsr0l	equ	0xFE9
  7527                           wreg	equ	0xFE8
  7528                           fsr1h	equ	0xFE2
  7529                           fsr1l	equ	0xFE1
  7530                           indf2	equ	0xFDF
  7531                           fsr2h	equ	0xFDA
  7532                           fsr2l	equ	0xFD9
  7533                           status	equ	0xFD8
  7534                           
  7535 ;; *************** function i2_GLCD_WriteString *****************
  7536 ;; Defined at:
  7537 ;;		line 70 in file "ks0108lib/KS0108.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;  stringToWrit    2   13[COMRAM] PTR unsigned char 
  7540 ;;		 -> STR_16(5), STR_15(4), STR_14(13), STR_13(4), 
  7541 ;;		 -> Draw_runTime_Menu@display(10), STR_12(11), STR_11(10), STR_10(9), 
  7542 ;;		 -> STR_9(10), STR_8(9), STR_7(11), STR_6(11), 
  7543 ;;		 -> STR_5(4), Initialize_Menus@display(10), STR_4(8), STR_3(7), 
  7544 ;;		 -> STR_2(10), STR_1(7), Run_Time_Menu_Function@display(10), 
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;		None
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      void 
  7549 ;; Registers used:
  7550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7559 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7560 ;;Total ram usage:        2 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; Hardware stack levels required when called:    4
  7563 ;; This function calls:
  7564 ;;		i2_GLCD_WriteChar
  7565 ;; This function is called by:
  7566 ;;		_Run_Time_Menu_Function
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           	psect	text51
  7571  000FC0                     __ptext51:
  7572                           	opt stack 0
  7573  000FC0                     i2_GLCD_WriteString:
  7574                           	opt stack 15
  7575                           
  7576                           ;KS0108.c: 72: while(*stringToWrite)
  7577                           
  7578                           ;incstack = 0
  7579  000FC0  D015               	goto	i2l492
  7580  000FC2                     
  7581                           ;KS0108.c: 73: GLCD_WriteChar(*stringToWrite++);
  7582  000FC2  C00E  FFF6         	movff	i2GLCD_WriteString@stringToWrite,tblptrl
  7583  000FC6  C00F  FFF7         	movff	i2GLCD_WriteString@stringToWrite+1,tblptrh
  7584  000FCA  0E00               	movlw	low (__mediumconst shr (0+16))
  7585  000FCC  6EF8               	movwf	tblptru,c
  7586  000FCE  0E0E               	movlw	(high __ramtop+-1)
  7587  000FD0  64F7               	cpfsgt	tblptrh,c
  7588  000FD2  D003               	bra	i2u196_47
  7589  000FD4  0008               	tblrd		*
  7590  000FD6  50F5               	movf	tablat,w,c
  7591  000FD8  D005               	bra	i2u196_40
  7592  000FDA                     i2u196_47:
  7593  000FDA  CFF6 FFE9          	movff	tblptrl,fsr0l
  7594  000FDE  CFF7 FFEA          	movff	tblptrh,fsr0h
  7595  000FE2  50EF               	movf	indf0,w,c
  7596  000FE4                     i2u196_40:
  7597  000FE4  EC5E  F008         	call	i2_GLCD_WriteChar
  7598  000FE8  4A0E               	infsnz	i2GLCD_WriteString@stringToWrite,f,c
  7599  000FEA  2A0F               	incf	i2GLCD_WriteString@stringToWrite+1,f,c
  7600  000FEC                     i2l492:
  7601  000FEC  C00E  FFF6         	movff	i2GLCD_WriteString@stringToWrite,tblptrl
  7602  000FF0  C00F  FFF7         	movff	i2GLCD_WriteString@stringToWrite+1,tblptrh
  7603  000FF4  0E00               	movlw	low (__mediumconst shr (0+16))
  7604  000FF6  6EF8               	movwf	tblptru,c
  7605  000FF8  0E0E               	movlw	(high __ramtop+-1)
  7606  000FFA  64F7               	cpfsgt	tblptrh,c
  7607  000FFC  D003               	bra	i2u197_47
  7608  000FFE  0008               	tblrd		*
  7609  001000  50F5               	movf	tablat,w,c
  7610  001002  D005               	bra	i2u197_40
  7611  001004                     i2u197_47:
  7612  001004  CFF6 FFE9          	movff	tblptrl,fsr0l
  7613  001008  CFF7 FFEA          	movff	tblptrh,fsr0h
  7614  00100C  50EF               	movf	indf0,w,c
  7615  00100E                     i2u197_40:
  7616  00100E  0900               	iorlw	0
  7617  001010  B4D8               	btfsc	status,2,c
  7618  001012  0012               	return	
  7619  001014  D7D6               	goto	i2l493
  7620  001016                     __end_ofi2_GLCD_WriteString:
  7621                           	opt stack 0
  7622                           tosu	equ	0xFFF
  7623                           tosh	equ	0xFFE
  7624                           tosl	equ	0xFFD
  7625                           pclatu	equ	0xFFB
  7626                           pclath	equ	0xFFA
  7627                           tblptru	equ	0xFF8
  7628                           tblptrh	equ	0xFF7
  7629                           tblptrl	equ	0xFF6
  7630                           tablat	equ	0xFF5
  7631                           prodh	equ	0xFF4
  7632                           prodl	equ	0xFF3
  7633                           intcon	equ	0xFF2
  7634                           indf0	equ	0xFEF
  7635                           postinc0	equ	0xFEE
  7636                           fsr0h	equ	0xFEA
  7637                           fsr0l	equ	0xFE9
  7638                           wreg	equ	0xFE8
  7639                           fsr1h	equ	0xFE2
  7640                           fsr1l	equ	0xFE1
  7641                           indf2	equ	0xFDF
  7642                           fsr2h	equ	0xFDA
  7643                           fsr2l	equ	0xFD9
  7644                           status	equ	0xFD8
  7645                           
  7646 ;; *************** function i2_GLCD_WriteChar *****************
  7647 ;; Defined at:
  7648 ;;		line 56 in file "ks0108lib/KS0108.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  charToWrite     1    wreg     unsigned char 
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;  charToWrite     1   10[COMRAM] unsigned char 
  7653 ;;  GLCD_WriteCh    2   11[COMRAM] int 
  7654 ;; Return value:  Size  Location     Type
  7655 ;;                  1    wreg      void 
  7656 ;; Registers used:
  7657 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 0/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7664 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7666 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7667 ;;Total ram usage:        3 bytes
  7668 ;; Hardware stack levels used:    1
  7669 ;; Hardware stack levels required when called:    3
  7670 ;; This function calls:
  7671 ;;		i2_GLCD_WriteData
  7672 ;; This function is called by:
  7673 ;;		i2_GLCD_WriteString
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           	psect	text52
  7678  0010BC                     __ptext52:
  7679                           	opt stack 0
  7680  0010BC                     i2_GLCD_WriteChar:
  7681                           	opt stack 15
  7682                           
  7683                           ;incstack = 0
  7684                           ;i2GLCD_WriteChar@charToWrite stored from wreg
  7685  0010BC  6E0B               	movwf	i2GLCD_WriteChar@charToWrite,c
  7686                           
  7687                           ;KS0108.c: 58: int i;
  7688                           ;KS0108.c: 59: charToWrite -= 32;
  7689  0010BE  0E20               	movlw	32
  7690  0010C0  5E0B               	subwf	i2GLCD_WriteChar@charToWrite,f,c
  7691                           
  7692                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
  7693  0010C2  0E00               	movlw	0
  7694  0010C4  6E0D               	movwf	i2GLCD_WriteChar@i+1,c
  7695  0010C6  0E00               	movlw	0
  7696  0010C8  6E0C               	movwf	i2GLCD_WriteChar@i,c
  7697  0010CA                     i2l3156:
  7698  0010CA  BE0D               	btfsc	i2GLCD_WriteChar@i+1,7,c
  7699  0010CC  D006               	goto	i2l487
  7700  0010CE  500D               	movf	i2GLCD_WriteChar@i+1,w,c
  7701  0010D0  E11A               	bnz	i2l3166
  7702  0010D2  0E05               	movlw	5
  7703  0010D4  5C0C               	subwf	i2GLCD_WriteChar@i,w,c
  7704  0010D6  B0D8               	btfsc	status,0,c
  7705  0010D8  D016               	goto	i2u163_40
  7706  0010DA                     i2l487:
  7707                           
  7708                           ;KS0108.c: 61: {
  7709                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
  7710  0010DA  500B               	movf	i2GLCD_WriteChar@charToWrite,w,c
  7711  0010DC  0D05               	mullw	5
  7712  0010DE  500C               	movf	i2GLCD_WriteChar@i,w,c
  7713  0010E0  26F3               	addwf	prodl,f,c
  7714  0010E2  500D               	movf	i2GLCD_WriteChar@i+1,w,c
  7715  0010E4  22F4               	addwfc	prodh,f,c
  7716  0010E6  0EA1               	movlw	low _font5x8
  7717  0010E8  24F3               	addwf	prodl,w,c
  7718  0010EA  6EF6               	movwf	tblptrl,c
  7719  0010EC  0EFD               	movlw	high _font5x8
  7720  0010EE  20F4               	addwfc	prodh,w,c
  7721  0010F0  6EF7               	movwf	tblptrh,c
  7722  0010F2                     	if	1	;There are 3 active tblptr bytes
  7723  0010F2  6AF8               	clrf	tblptru,c
  7724  0010F4  0E00               	movlw	low (__mediumconst shr (0+16))
  7725  0010F6  22F8               	addwfc	tblptru,f,c
  7726  0010F8                     	endif
  7727  0010F8  0008               	tblrd		*
  7728  0010FA  50F5               	movf	tablat,w,c
  7729  0010FC  ECCA  F006         	call	i2_GLCD_WriteData
  7730  001100  4A0C               	infsnz	i2GLCD_WriteChar@i,f,c
  7731  001102  2A0D               	incf	i2GLCD_WriteChar@i+1,f,c
  7732  001104  D7E2               	goto	i2l3156
  7733  001106                     i2u163_40:
  7734  001106                     i2l3166:
  7735                           
  7736                           ;KS0108.c: 64: }
  7737                           ;KS0108.c: 65: GLCD_WriteData(0x00);
  7738  001106  0E00               	movlw	0
  7739  001108  ECCA  F006         	call	i2_GLCD_WriteData
  7740  00110C  0012               	return		;funcret
  7741  00110E                     __end_ofi2_GLCD_WriteChar:
  7742                           	opt stack 0
  7743                           tosu	equ	0xFFF
  7744                           tosh	equ	0xFFE
  7745                           tosl	equ	0xFFD
  7746                           pclatu	equ	0xFFB
  7747                           pclath	equ	0xFFA
  7748                           tblptru	equ	0xFF8
  7749                           tblptrh	equ	0xFF7
  7750                           tblptrl	equ	0xFF6
  7751                           tablat	equ	0xFF5
  7752                           prodh	equ	0xFF4
  7753                           prodl	equ	0xFF3
  7754                           intcon	equ	0xFF2
  7755                           indf0	equ	0xFEF
  7756                           postinc0	equ	0xFEE
  7757                           fsr0h	equ	0xFEA
  7758                           fsr0l	equ	0xFE9
  7759                           wreg	equ	0xFE8
  7760                           fsr1h	equ	0xFE2
  7761                           fsr1l	equ	0xFE1
  7762                           indf2	equ	0xFDF
  7763                           fsr2h	equ	0xFDA
  7764                           fsr2l	equ	0xFD9
  7765                           status	equ	0xFD8
  7766                           
  7767 ;; *************** function _Main_Menu_Function *****************
  7768 ;; Defined at:
  7769 ;;		line 195 in file "mcc_generated_files/pin_manager.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;  result          1    wreg     unsigned char 
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;  result          1   23[COMRAM] unsigned char 
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  1    wreg      void 
  7776 ;; Registers used:
  7777 ;;		wreg, status,2, status,0, cstack
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7786 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7787 ;;Total ram usage:        1 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; Hardware stack levels required when called:    6
  7790 ;; This function calls:
  7791 ;;		i2_Draw_Arrow
  7792 ;; This function is called by:
  7793 ;;		_PIN_MANAGER_IOC
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           	psect	text53
  7798  00157E                     __ptext53:
  7799                           	opt stack 0
  7800  00157E                     _Main_Menu_Function:
  7801                           	opt stack 14
  7802                           
  7803                           ;incstack = 0
  7804                           ;Main_Menu_Function@result stored from wreg
  7805  00157E  6E18               	movwf	Main_Menu_Function@result,c
  7806                           
  7807                           ;pin_manager.c: 198: if(result)
  7808  001580  5018               	movf	Main_Menu_Function@result,w,c
  7809  001582  B4D8               	btfsc	status,2,c
  7810  001584  D005               	goto	i2l142
  7811                           
  7812                           ;pin_manager.c: 199: {
  7813                           ;pin_manager.c: 200: if(mainState < selectState) mainState = mainState + 1;
  7814  001586  0E07               	movlw	7
  7815  001588  6045               	cpfslt	_mainState,c
  7816  00158A  D007               	goto	i2l145
  7817  00158C  2845               	incf	_mainState,w,c
  7818  00158E  D004               	goto	L6
  7819  001590                     i2l142:
  7820                           
  7821                           ;pin_manager.c: 202: else
  7822                           ;pin_manager.c: 203: {
  7823                           ;pin_manager.c: 204: if(mainState > setRunTime) mainState = mainState - 1;
  7824  001590  0E02               	movlw	2
  7825  001592  6445               	cpfsgt	_mainState,c
  7826  001594  D002               	goto	i2l145
  7827  001596  0445               	decf	_mainState,w,c
  7828  001598                     L6:
  7829  001598  6E45               	movwf	_mainState,c
  7830  00159A                     i2l145:
  7831                           
  7832                           ;pin_manager.c: 205: }
  7833                           ;pin_manager.c: 208: Draw_Arrow();
  7834  00159A  ECED  F008         	call	i2_Draw_Arrow	;wreg free
  7835  00159E  0012               	return		;funcret
  7836  0015A0                     __end_of_Main_Menu_Function:
  7837                           	opt stack 0
  7838                           tosu	equ	0xFFF
  7839                           tosh	equ	0xFFE
  7840                           tosl	equ	0xFFD
  7841                           pclatu	equ	0xFFB
  7842                           pclath	equ	0xFFA
  7843                           tblptru	equ	0xFF8
  7844                           tblptrh	equ	0xFF7
  7845                           tblptrl	equ	0xFF6
  7846                           tablat	equ	0xFF5
  7847                           prodh	equ	0xFF4
  7848                           prodl	equ	0xFF3
  7849                           intcon	equ	0xFF2
  7850                           indf0	equ	0xFEF
  7851                           postinc0	equ	0xFEE
  7852                           fsr0h	equ	0xFEA
  7853                           fsr0l	equ	0xFE9
  7854                           wreg	equ	0xFE8
  7855                           fsr1h	equ	0xFE2
  7856                           fsr1l	equ	0xFE1
  7857                           indf2	equ	0xFDF
  7858                           fsr2h	equ	0xFDA
  7859                           fsr2l	equ	0xFD9
  7860                           status	equ	0xFD8
  7861                           
  7862 ;; *************** function i2_Draw_Arrow *****************
  7863 ;; Defined at:
  7864 ;;		line 51 in file "screen_controls.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;		None
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;		None
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		wreg, status,2, status,0, cstack
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7882 ;;Total ram usage:        0 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:    5
  7885 ;; This function calls:
  7886 ;;		i2_Clear_Arrow_Column
  7887 ;;		i2_Clear_runTime_Arrows
  7888 ;;		i2_Draw_runTime_Arrow
  7889 ;;		i2_GLCD_GoTo
  7890 ;;		i2_Make_Arrow
  7891 ;; This function is called by:
  7892 ;;		_Main_Menu_Function
  7893 ;;		_Run_Time_Menu_Function
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text54
  7898  0011DA                     __ptext54:
  7899                           	opt stack 0
  7900  0011DA                     i2_Draw_Arrow:
  7901                           	opt stack 14
  7902                           
  7903                           ;screen_controls.c: 55: switch(currentContext)
  7904                           
  7905                           ;incstack = 0
  7906  0011DA  D019               	goto	i2l615
  7907  0011DC                     
  7908                           ;screen_controls.c: 58: Clear_Arrow_Column();
  7909  0011DC  EC5B  F007         	call	i2_Clear_Arrow_Column	;wreg free
  7910                           
  7911                           ;screen_controls.c: 59: GLCD_GoTo(0, mainState);
  7912  0011E0  C045  F00C         	movff	_mainState,i2GLCD_GoTo@y
  7913  0011E4  0E00               	movlw	0
  7914  0011E6  ECA7  F005         	call	i2_GLCD_GoTo
  7915                           
  7916                           ;screen_controls.c: 60: Make_Arrow();
  7917  0011EA  ECE4  F00A         	call	i2_Make_Arrow	;wreg free
  7918                           
  7919                           ;screen_controls.c: 61: break;
  7920  0011EE  0012               	return	
  7921  0011F0                     
  7922                           ;screen_controls.c: 64: Clear_runTime_Arrows();
  7923  0011F0  EC6A  F005         	call	i2_Clear_runTime_Arrows	;wreg free
  7924                           
  7925                           ;screen_controls.c: 65: Draw_runTime_Arrow();
  7926  0011F4  EC92  F006         	call	i2_Draw_runTime_Arrow	;wreg free
  7927                           
  7928                           ;screen_controls.c: 66: break;
  7929  0011F8  0012               	return	
  7930  0011FA                     
  7931                           ;screen_controls.c: 69: Clear_Arrow_Column();
  7932  0011FA  EC5B  F007         	call	i2_Clear_Arrow_Column	;wreg free
  7933                           
  7934                           ;screen_controls.c: 70: GLCD_GoTo(0, mainState);
  7935  0011FE  C045  F00C         	movff	_mainState,i2GLCD_GoTo@y
  7936  001202  0E00               	movlw	0
  7937  001204  ECA7  F005         	call	i2_GLCD_GoTo
  7938                           
  7939                           ;screen_controls.c: 71: Make_Arrow();
  7940  001208  ECE4  F00A         	call	i2_Make_Arrow	;wreg free
  7941                           
  7942                           ;screen_controls.c: 73: }
  7943                           
  7944                           ;screen_controls.c: 72: break;
  7945  00120C  0012               	return	
  7946  00120E                     i2l615:
  7947  00120E  5044               	movf	_currentContext,w,c
  7948                           
  7949                           ; Switch size 1, requested type "space"
  7950                           ; Number of cases is 2, Range of values is 0 to 1
  7951                           ; switch strategies available:
  7952                           ; Name         Instructions Cycles
  7953                           ; simple_byte            7     4 (average)
  7954                           ;	Chosen strategy is simple_byte
  7955  001210  0A00               	xorlw	0	; case 0
  7956  001212  B4D8               	btfsc	status,2,c
  7957  001214  D7E3               	goto	i2l616
  7958  001216  0A01               	xorlw	1	; case 1
  7959  001218  B4D8               	btfsc	status,2,c
  7960  00121A  D7EA               	goto	i2l618
  7961  00121C  D7EE               	goto	i2l619
  7962  00121E                     __end_ofi2_Draw_Arrow:
  7963                           	opt stack 0
  7964                           tosu	equ	0xFFF
  7965                           tosh	equ	0xFFE
  7966                           tosl	equ	0xFFD
  7967                           pclatu	equ	0xFFB
  7968                           pclath	equ	0xFFA
  7969                           tblptru	equ	0xFF8
  7970                           tblptrh	equ	0xFF7
  7971                           tblptrl	equ	0xFF6
  7972                           tablat	equ	0xFF5
  7973                           prodh	equ	0xFF4
  7974                           prodl	equ	0xFF3
  7975                           intcon	equ	0xFF2
  7976                           indf0	equ	0xFEF
  7977                           postinc0	equ	0xFEE
  7978                           fsr0h	equ	0xFEA
  7979                           fsr0l	equ	0xFE9
  7980                           wreg	equ	0xFE8
  7981                           fsr1h	equ	0xFE2
  7982                           fsr1l	equ	0xFE1
  7983                           indf2	equ	0xFDF
  7984                           fsr2h	equ	0xFDA
  7985                           fsr2l	equ	0xFD9
  7986                           status	equ	0xFD8
  7987                           
  7988 ;; *************** function i2_Draw_runTime_Arrow *****************
  7989 ;; Defined at:
  7990 ;;		line 169 in file "screen_controls.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;		None
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;		None
  7995 ;; Return value:  Size  Location     Type
  7996 ;;                  1    wreg      void 
  7997 ;; Registers used:
  7998 ;;		wreg, status,2, status,0, cstack
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8008 ;;Total ram usage:        0 bytes
  8009 ;; Hardware stack levels used:    1
  8010 ;; Hardware stack levels required when called:    4
  8011 ;; This function calls:
  8012 ;;		i2_GLCD_GoTo
  8013 ;;		i2_Make_Arrow
  8014 ;; This function is called by:
  8015 ;;		i2_Draw_Arrow
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           	psect	text55
  8020  000D24                     __ptext55:
  8021                           	opt stack 0
  8022  000D24                     i2_Draw_runTime_Arrow:
  8023                           	opt stack 14
  8024                           
  8025                           ;screen_controls.c: 171: switch(runTimeContext)
  8026                           
  8027                           ;incstack = 0
  8028  000D24  D02C               	goto	i2l652
  8029  000D26                     
  8030                           ;screen_controls.c: 174: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  8031  000D26  0E02               	movlw	2
  8032  000D28  6E0C               	movwf	i2GLCD_GoTo@y,c
  8033  000D2A  0100               	movlb	0	; () banked
  8034  000D2C  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  8035  000D2E  0800               	sublw	0
  8036  000D30  25A8               	addwf	_runTimeX& (0+255),w,b
  8037  000D32  ECA7  F005         	call	i2_GLCD_GoTo
  8038                           
  8039                           ;screen_controls.c: 175: Make_Arrow();
  8040  000D36  ECE4  F00A         	call	i2_Make_Arrow	;wreg free
  8041                           
  8042                           ;screen_controls.c: 176: break;
  8043  000D3A  0012               	return	
  8044  000D3C                     
  8045                           ;screen_controls.c: 179: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  8046  000D3C  0E04               	movlw	4
  8047  000D3E  6E0C               	movwf	i2GLCD_GoTo@y,c
  8048  000D40  0100               	movlb	0	; () banked
  8049  000D42  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  8050  000D44  0800               	sublw	0
  8051  000D46  25A8               	addwf	_runTimeX& (0+255),w,b
  8052  000D48  ECA7  F005         	call	i2_GLCD_GoTo
  8053                           
  8054                           ;screen_controls.c: 180: Make_Arrow();
  8055  000D4C  ECE4  F00A         	call	i2_Make_Arrow	;wreg free
  8056                           
  8057                           ;screen_controls.c: 181: break;
  8058  000D50  0012               	return	
  8059  000D52                     
  8060                           ;screen_controls.c: 184: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  8061  000D52  0E06               	movlw	6
  8062  000D54  6E0C               	movwf	i2GLCD_GoTo@y,c
  8063  000D56  0100               	movlb	0	; () banked
  8064  000D58  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  8065  000D5A  0800               	sublw	0
  8066  000D5C  25A8               	addwf	_runTimeX& (0+255),w,b
  8067  000D5E  ECA7  F005         	call	i2_GLCD_GoTo
  8068                           
  8069                           ;screen_controls.c: 185: Make_Arrow();
  8070  000D62  ECE4  F00A         	call	i2_Make_Arrow	;wreg free
  8071                           
  8072                           ;screen_controls.c: 187: break;
  8073                           
  8074                           ;screen_controls.c: 186: break;
  8075  000D66  0012               	return	
  8076  000D68                     
  8077                           ;screen_controls.c: 190: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  8078  000D68  0E02               	movlw	2
  8079  000D6A  6E0C               	movwf	i2GLCD_GoTo@y,c
  8080  000D6C  0100               	movlb	0	; () banked
  8081  000D6E  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  8082  000D70  0800               	sublw	0
  8083  000D72  25A8               	addwf	_runTimeX& (0+255),w,b
  8084  000D74  ECA7  F005         	call	i2_GLCD_GoTo
  8085                           
  8086                           ;screen_controls.c: 191: Make_Arrow();
  8087  000D78  ECE4  F00A         	call	i2_Make_Arrow	;wreg free
  8088                           
  8089                           ;screen_controls.c: 195: }
  8090                           
  8091                           ;screen_controls.c: 192: break;
  8092  000D7C  0012               	return	
  8093  000D7E                     i2l652:
  8094  000D7E  5043               	movf	_runTimeContext,w,c
  8095                           
  8096                           ; Switch size 1, requested type "space"
  8097                           ; Number of cases is 3, Range of values is 0 to 2
  8098                           ; switch strategies available:
  8099                           ; Name         Instructions Cycles
  8100                           ; simple_byte           10     6 (average)
  8101                           ;	Chosen strategy is simple_byte
  8102  000D80  0A00               	xorlw	0	; case 0
  8103  000D82  B4D8               	btfsc	status,2,c
  8104  000D84  D7D0               	goto	i2l653
  8105  000D86  0A01               	xorlw	1	; case 1
  8106  000D88  B4D8               	btfsc	status,2,c
  8107  000D8A  D7D8               	goto	i2l655
  8108  000D8C  0A03               	xorlw	3	; case 2
  8109  000D8E  B4D8               	btfsc	status,2,c
  8110  000D90  D7E0               	goto	i2l656
  8111  000D92  D7EA               	goto	i2l657
  8112  000D94                     __end_ofi2_Draw_runTime_Arrow:
  8113                           	opt stack 0
  8114                           tosu	equ	0xFFF
  8115                           tosh	equ	0xFFE
  8116                           tosl	equ	0xFFD
  8117                           pclatu	equ	0xFFB
  8118                           pclath	equ	0xFFA
  8119                           tblptru	equ	0xFF8
  8120                           tblptrh	equ	0xFF7
  8121                           tblptrl	equ	0xFF6
  8122                           tablat	equ	0xFF5
  8123                           prodh	equ	0xFF4
  8124                           prodl	equ	0xFF3
  8125                           intcon	equ	0xFF2
  8126                           indf0	equ	0xFEF
  8127                           postinc0	equ	0xFEE
  8128                           fsr0h	equ	0xFEA
  8129                           fsr0l	equ	0xFE9
  8130                           wreg	equ	0xFE8
  8131                           fsr1h	equ	0xFE2
  8132                           fsr1l	equ	0xFE1
  8133                           indf2	equ	0xFDF
  8134                           fsr2h	equ	0xFDA
  8135                           fsr2l	equ	0xFD9
  8136                           status	equ	0xFD8
  8137                           
  8138 ;; *************** function i2_Make_Arrow *****************
  8139 ;; Defined at:
  8140 ;;		line 78 in file "screen_controls.c"
  8141 ;; Parameters:    Size  Location     Type
  8142 ;;		None
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;		None
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  1    wreg      void 
  8147 ;; Registers used:
  8148 ;;		wreg, status,2, status,0, cstack
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8158 ;;Total ram usage:        0 bytes
  8159 ;; Hardware stack levels used:    1
  8160 ;; Hardware stack levels required when called:    3
  8161 ;; This function calls:
  8162 ;;		i2_GLCD_WriteData
  8163 ;; This function is called by:
  8164 ;;		i2_Draw_Arrow
  8165 ;;		i2_Draw_runTime_Arrow
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text56
  8170  0015C8                     __ptext56:
  8171                           	opt stack 0
  8172  0015C8                     i2_Make_Arrow:
  8173                           	opt stack 15
  8174                           
  8175                           ;screen_controls.c: 80: GLCD_WriteData(0x7E);
  8176                           
  8177                           ;incstack = 0
  8178  0015C8  0E7E               	movlw	126
  8179  0015CA  ECCA  F006         	call	i2_GLCD_WriteData
  8180                           
  8181                           ;screen_controls.c: 81: GLCD_WriteData(0x3C);
  8182  0015CE  0E3C               	movlw	60
  8183  0015D0  ECCA  F006         	call	i2_GLCD_WriteData
  8184                           
  8185                           ;screen_controls.c: 82: GLCD_WriteData(0x18);
  8186  0015D4  0E18               	movlw	24
  8187  0015D6  ECCA  F006         	call	i2_GLCD_WriteData
  8188  0015DA  0012               	return		;funcret
  8189  0015DC                     __end_ofi2_Make_Arrow:
  8190                           	opt stack 0
  8191                           tosu	equ	0xFFF
  8192                           tosh	equ	0xFFE
  8193                           tosl	equ	0xFFD
  8194                           pclatu	equ	0xFFB
  8195                           pclath	equ	0xFFA
  8196                           tblptru	equ	0xFF8
  8197                           tblptrh	equ	0xFF7
  8198                           tblptrl	equ	0xFF6
  8199                           tablat	equ	0xFF5
  8200                           prodh	equ	0xFF4
  8201                           prodl	equ	0xFF3
  8202                           intcon	equ	0xFF2
  8203                           indf0	equ	0xFEF
  8204                           postinc0	equ	0xFEE
  8205                           fsr0h	equ	0xFEA
  8206                           fsr0l	equ	0xFE9
  8207                           wreg	equ	0xFE8
  8208                           fsr1h	equ	0xFE2
  8209                           fsr1l	equ	0xFE1
  8210                           indf2	equ	0xFDF
  8211                           fsr2h	equ	0xFDA
  8212                           fsr2l	equ	0xFD9
  8213                           status	equ	0xFD8
  8214                           
  8215 ;; *************** function i2_Clear_runTime_Arrows *****************
  8216 ;; Defined at:
  8217 ;;		line 144 in file "screen_controls.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;		None
  8220 ;; Auto vars:     Size  Location     Type
  8221 ;;  Clear_runTim    1   14[COMRAM] unsigned char 
  8222 ;; Return value:  Size  Location     Type
  8223 ;;                  1    wreg      void 
  8224 ;; Registers used:
  8225 ;;		wreg, status,2, status,0, cstack
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8234 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8235 ;;Total ram usage:        1 bytes
  8236 ;; Hardware stack levels used:    1
  8237 ;; Hardware stack levels required when called:    4
  8238 ;; This function calls:
  8239 ;;		i2_GLCD_GoTo
  8240 ;;		i2_GLCD_WriteData
  8241 ;; This function is called by:
  8242 ;;		i2_Draw_Arrow
  8243 ;; This function uses a non-reentrant model
  8244 ;;
  8245                           
  8246                           	psect	text57
  8247  000AD4                     __ptext57:
  8248                           	opt stack 0
  8249  000AD4                     i2_Clear_runTime_Arrows:
  8250                           	opt stack 14
  8251                           
  8252                           ;screen_controls.c: 146: unsigned char i=0;
  8253                           
  8254                           ;incstack = 0
  8255  000AD4  0E00               	movlw	0
  8256  000AD6  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
  8257                           
  8258                           ;screen_controls.c: 148: GLCD_GoTo((runTimeX - ARROW_SIZE), 2);
  8259  000AD8  0E02               	movlw	2
  8260  000ADA  6E0C               	movwf	i2GLCD_GoTo@y,c
  8261  000ADC  0100               	movlb	0	; () banked
  8262  000ADE  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  8263  000AE0  0800               	sublw	0
  8264  000AE2  25A8               	addwf	_runTimeX& (0+255),w,b
  8265  000AE4  ECA7  F005         	call	i2_GLCD_GoTo
  8266                           
  8267                           ;screen_controls.c: 150: for(i=0; i<ARROW_SIZE; i++)
  8268  000AE8  0E00               	movlw	0
  8269  000AEA  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
  8270  000AEC  D004               	goto	i2l640
  8271  000AEE                     
  8272                           ;screen_controls.c: 151: {
  8273                           ;screen_controls.c: 152: GLCD_WriteData(0x00);
  8274  000AEE  0E00               	movlw	0
  8275  000AF0  ECCA  F006         	call	i2_GLCD_WriteData
  8276  000AF4  2A0F               	incf	i2Clear_runTime_Arrows@i,f,c
  8277  000AF6                     i2l640:
  8278  000AF6  0100               	movlb	0	; () banked
  8279  000AF8  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  8280  000AFA  5C0F               	subwf	i2Clear_runTime_Arrows@i,w,c
  8281  000AFC  A0D8               	btfss	status,0,c
  8282  000AFE  D7F7               	goto	i2l641
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;screen_controls.c: 153: }
  8286                           ;screen_controls.c: 155: GLCD_GoTo((runTimeX - ARROW_SIZE), 4);
  8287                           
  8288                           ; BSR set to: 0
  8289  000B00  0E04               	movlw	4
  8290  000B02  6E0C               	movwf	i2GLCD_GoTo@y,c
  8291  000B04  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  8292  000B06  0800               	sublw	0
  8293  000B08  25A8               	addwf	_runTimeX& (0+255),w,b
  8294  000B0A  ECA7  F005         	call	i2_GLCD_GoTo
  8295                           
  8296                           ;screen_controls.c: 156: for(i=0; i<ARROW_SIZE; i++)
  8297  000B0E  0E00               	movlw	0
  8298  000B10  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
  8299  000B12  D004               	goto	i2l643
  8300  000B14                     
  8301                           ;screen_controls.c: 157: {
  8302                           ;screen_controls.c: 158: GLCD_WriteData(0x00);
  8303  000B14  0E00               	movlw	0
  8304  000B16  ECCA  F006         	call	i2_GLCD_WriteData
  8305  000B1A  2A0F               	incf	i2Clear_runTime_Arrows@i,f,c
  8306  000B1C                     i2l643:
  8307  000B1C  0100               	movlb	0	; () banked
  8308  000B1E  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  8309  000B20  5C0F               	subwf	i2Clear_runTime_Arrows@i,w,c
  8310  000B22  A0D8               	btfss	status,0,c
  8311  000B24  D7F7               	goto	i2l644
  8312                           
  8313                           ; BSR set to: 0
  8314                           ;screen_controls.c: 159: }
  8315                           ;screen_controls.c: 161: GLCD_GoTo((runTimeX - ARROW_SIZE), 6);
  8316                           
  8317                           ; BSR set to: 0
  8318  000B26  0E06               	movlw	6
  8319  000B28  6E0C               	movwf	i2GLCD_GoTo@y,c
  8320  000B2A  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  8321  000B2C  0800               	sublw	0
  8322  000B2E  25A8               	addwf	_runTimeX& (0+255),w,b
  8323  000B30  ECA7  F005         	call	i2_GLCD_GoTo
  8324                           
  8325                           ;screen_controls.c: 162: for(i=0; i<ARROW_SIZE; i++)
  8326  000B34  0E00               	movlw	0
  8327  000B36  6E0F               	movwf	i2Clear_runTime_Arrows@i,c
  8328  000B38  D004               	goto	i2l646
  8329  000B3A                     
  8330                           ;screen_controls.c: 163: {
  8331                           ;screen_controls.c: 164: GLCD_WriteData(0x00);
  8332  000B3A  0E00               	movlw	0
  8333  000B3C  ECCA  F006         	call	i2_GLCD_WriteData
  8334  000B40  2A0F               	incf	i2Clear_runTime_Arrows@i,f,c
  8335  000B42                     i2l646:
  8336  000B42  0100               	movlb	0	; () banked
  8337  000B44  51A7               	movf	_ARROW_SIZE& (0+255),w,b
  8338  000B46  5C0F               	subwf	i2Clear_runTime_Arrows@i,w,c
  8339  000B48  B0D8               	btfsc	status,0,c
  8340  000B4A  0012               	return	
  8341  000B4C  D7F6               	goto	i2l647
  8342  000B4E                     __end_ofi2_Clear_runTime_Arrows:
  8343                           	opt stack 0
  8344                           tosu	equ	0xFFF
  8345                           tosh	equ	0xFFE
  8346                           tosl	equ	0xFFD
  8347                           pclatu	equ	0xFFB
  8348                           pclath	equ	0xFFA
  8349                           tblptru	equ	0xFF8
  8350                           tblptrh	equ	0xFF7
  8351                           tblptrl	equ	0xFF6
  8352                           tablat	equ	0xFF5
  8353                           prodh	equ	0xFF4
  8354                           prodl	equ	0xFF3
  8355                           intcon	equ	0xFF2
  8356                           indf0	equ	0xFEF
  8357                           postinc0	equ	0xFEE
  8358                           fsr0h	equ	0xFEA
  8359                           fsr0l	equ	0xFE9
  8360                           wreg	equ	0xFE8
  8361                           fsr1h	equ	0xFE2
  8362                           fsr1l	equ	0xFE1
  8363                           indf2	equ	0xFDF
  8364                           fsr2h	equ	0xFDA
  8365                           fsr2l	equ	0xFD9
  8366                           status	equ	0xFD8
  8367                           
  8368 ;; *************** function i2_Clear_Arrow_Column *****************
  8369 ;; Defined at:
  8370 ;;		line 98 in file "screen_controls.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;  Clear_Arrow_    1   22[COMRAM] unsigned char 
  8375 ;;  Clear_Arrow_    1   21[COMRAM] unsigned char 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  1    wreg      void 
  8378 ;; Registers used:
  8379 ;;		wreg, status,2, status,0, cstack
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8387 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8388 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8389 ;;Total ram usage:        9 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:    4
  8392 ;; This function calls:
  8393 ;;		i2_GLCD_GoTo
  8394 ;;		i2_GLCD_WriteData
  8395 ;; This function is called by:
  8396 ;;		i2_Draw_Arrow
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           
  8400                           	psect	text58
  8401  000EB6                     __ptext58:
  8402                           	opt stack 0
  8403  000EB6                     i2_Clear_Arrow_Column:
  8404                           	opt stack 14
  8405                           
  8406                           ;screen_controls.c: 100: unsigned char i, j;
  8407                           ;screen_controls.c: 102: for(i = 0; i < 64/8; i++)
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;incstack = 0
  8411  000EB6  0E00               	movlw	0
  8412  000EB8  6E17               	movwf	i2Clear_Arrow_Column@i,c
  8413  000EBA                     i2l3170:
  8414  000EBA  0E07               	movlw	7
  8415  000EBC  6417               	cpfsgt	i2Clear_Arrow_Column@i,c
  8416  000EBE  D001               	goto	i2l629
  8417  000EC0  0012               	return	
  8418  000EC2                     i2l629:
  8419                           
  8420                           ;screen_controls.c: 103: {
  8421                           ;screen_controls.c: 104: GLCD_GoTo(0, i);
  8422  000EC2  C017  F00C         	movff	i2Clear_Arrow_Column@i,i2GLCD_GoTo@y
  8423  000EC6  0E00               	movlw	0
  8424  000EC8  ECA7  F005         	call	i2_GLCD_GoTo
  8425                           
  8426                           ;screen_controls.c: 106: for(j = 0; j < (xMenuStart - 1); j++)
  8427  000ECC  0E00               	movlw	0
  8428  000ECE  6E16               	movwf	i2Clear_Arrow_Column@j,c
  8429  000ED0  D004               	goto	i2l631
  8430  000ED2                     
  8431                           ;screen_controls.c: 107: {
  8432                           ;screen_controls.c: 108: GLCD_WriteData(0x00);
  8433  000ED2  0E00               	movlw	0
  8434  000ED4  ECCA  F006         	call	i2_GLCD_WriteData
  8435  000ED8  2A16               	incf	i2Clear_Arrow_Column@j,f,c
  8436  000EDA                     i2l631:
  8437  000EDA  0EFF               	movlw	255
  8438  000EDC  6E0F               	movwf	??i2_Clear_Arrow_Column& (0+255),c
  8439  000EDE  0EFF               	movlw	255
  8440  000EE0  6E10               	movwf	(??i2_Clear_Arrow_Column+1)& (0+255),c
  8441  000EE2  0100               	movlb	0	; () banked
  8442  000EE4  51A6               	movf	_xMenuStart& (0+255),w,b
  8443  000EE6  6E11               	movwf	(??i2_Clear_Arrow_Column+2)& (0+255),c
  8444  000EE8  6A12               	clrf	(??i2_Clear_Arrow_Column+3)& (0+255),c
  8445  000EEA  500F               	movf	??i2_Clear_Arrow_Column,w,c
  8446  000EEC  2611               	addwf	??i2_Clear_Arrow_Column+2,f,c
  8447  000EEE  5010               	movf	??i2_Clear_Arrow_Column+1,w,c
  8448  000EF0  2212               	addwfc	??i2_Clear_Arrow_Column+3,f,c
  8449  000EF2  5016               	movf	i2Clear_Arrow_Column@j,w,c
  8450  000EF4  6E13               	movwf	(??i2_Clear_Arrow_Column+4)& (0+255),c
  8451  000EF6  6A14               	clrf	(??i2_Clear_Arrow_Column+5)& (0+255),c
  8452  000EF8  5011               	movf	??i2_Clear_Arrow_Column+2,w,c
  8453  000EFA  5C13               	subwf	??i2_Clear_Arrow_Column+4,w,c
  8454  000EFC  5014               	movf	??i2_Clear_Arrow_Column+5,w,c
  8455  000EFE  0A80               	xorlw	128
  8456  000F00  6E15               	movwf	(??i2_Clear_Arrow_Column+6)& (0+255),c
  8457  000F02  5012               	movf	??i2_Clear_Arrow_Column+3,w,c
  8458  000F04  0A80               	xorlw	128
  8459  000F06  5815               	subwfb	(??i2_Clear_Arrow_Column+6)& (0+255),w,c
  8460  000F08  A0D8               	btfss	status,0,c
  8461  000F0A  D7E3               	goto	i2l632
  8462                           
  8463                           ; BSR set to: 0
  8464                           
  8465                           ; BSR set to: 0
  8466  000F0C  2A17               	incf	i2Clear_Arrow_Column@i,f,c
  8467  000F0E  D7D5               	goto	i2l3170
  8468  000F10                     __end_ofi2_Clear_Arrow_Column:
  8469                           	opt stack 0
  8470                           tosu	equ	0xFFF
  8471                           tosh	equ	0xFFE
  8472                           tosl	equ	0xFFD
  8473                           pclatu	equ	0xFFB
  8474                           pclath	equ	0xFFA
  8475                           tblptru	equ	0xFF8
  8476                           tblptrh	equ	0xFF7
  8477                           tblptrl	equ	0xFF6
  8478                           tablat	equ	0xFF5
  8479                           prodh	equ	0xFF4
  8480                           prodl	equ	0xFF3
  8481                           intcon	equ	0xFF2
  8482                           indf0	equ	0xFEF
  8483                           postinc0	equ	0xFEE
  8484                           fsr0h	equ	0xFEA
  8485                           fsr0l	equ	0xFE9
  8486                           wreg	equ	0xFE8
  8487                           fsr1h	equ	0xFE2
  8488                           fsr1l	equ	0xFE1
  8489                           indf2	equ	0xFDF
  8490                           fsr2h	equ	0xFDA
  8491                           fsr2l	equ	0xFD9
  8492                           status	equ	0xFD8
  8493                           
  8494 ;; *************** function i2_GLCD_WriteData *****************
  8495 ;; Defined at:
  8496 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
  8497 ;; Parameters:    Size  Location     Type
  8498 ;;  dataToWrite     1    wreg     unsigned char 
  8499 ;; Auto vars:     Size  Location     Type
  8500 ;;  dataToWrite     1    9[COMRAM] unsigned char 
  8501 ;; Return value:  Size  Location     Type
  8502 ;;                  1    wreg      void 
  8503 ;; Registers used:
  8504 ;;		wreg, status,2, status,0, cstack
  8505 ;; Tracked objects:
  8506 ;;		On entry : 0/0
  8507 ;;		On exit  : 0/0
  8508 ;;		Unchanged: 0/0
  8509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8512 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8513 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8514 ;;Total ram usage:        2 bytes
  8515 ;; Hardware stack levels used:    1
  8516 ;; Hardware stack levels required when called:    2
  8517 ;; This function calls:
  8518 ;;		i2_GLCD_Delay
  8519 ;;		i2_GLCD_DisableController
  8520 ;;		i2_GLCD_EnableController
  8521 ;;		i2_GLCD_ReadStatus
  8522 ;;		i2___awdiv
  8523 ;; This function is called by:
  8524 ;;		i2_GLCD_WriteChar
  8525 ;;		i2_Make_Arrow
  8526 ;;		i2_Clear_Arrow_Column
  8527 ;;		i2_Clear_runTime_Arrows
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           	psect	text59
  8532  000D94                     __ptext59:
  8533                           	opt stack 0
  8534  000D94                     i2_GLCD_WriteData:
  8535                           	opt stack 15
  8536                           
  8537                           ;incstack = 0
  8538                           ;i2GLCD_WriteData@dataToWrite stored from wreg
  8539  000D94  6E0A               	movwf	i2GLCD_WriteData@dataToWrite,c
  8540  000D96                     
  8541                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  8542  000D96  C0A4  F001         	movff	_screen_x,i2___awdiv@dividend
  8543  000D9A  6A02               	clrf	i2___awdiv@dividend+1,c
  8544  000D9C  0E00               	movlw	0
  8545  000D9E  6E04               	movwf	i2___awdiv@divisor+1,c
  8546  000DA0  0E40               	movlw	64
  8547  000DA2  6E03               	movwf	i2___awdiv@divisor,c
  8548  000DA4  ECE8  F004         	call	i2___awdiv	;wreg free
  8549  000DA8  5001               	movf	?i2___awdiv,w,c
  8550  000DAA  EC8B  F00A         	call	i2_GLCD_ReadStatus
  8551  000DAE  6E09               	movwf	??i2_GLCD_WriteData& (0+255),c
  8552  000DB0  BE09               	btfsc	??i2_GLCD_WriteData,7,c
  8553  000DB2  D7F1               	goto	i2l2914
  8554                           
  8555                           ;KS0108-PIC18.c: 116: TRISD = 0x00;
  8556  000DB4  0E00               	movlw	0
  8557  000DB6  6E95               	movwf	3989,c	;volatile
  8558                           
  8559                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
  8560  000DB8  9280               	bcf	3968,1,c	;volatile
  8561                           
  8562                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
  8563  000DBA  8480               	bsf	3968,2,c	;volatile
  8564                           
  8565                           ;KS0108-PIC18.c: 119: PORTD = dataToWrite;
  8566  000DBC  C00A  FF83         	movff	i2GLCD_WriteData@dataToWrite,3971	;volatile
  8567                           
  8568                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
  8569  000DC0  C0A4  F001         	movff	_screen_x,i2___awdiv@dividend
  8570  000DC4  6A02               	clrf	i2___awdiv@dividend+1,c
  8571  000DC6  0E00               	movlw	0
  8572  000DC8  6E04               	movwf	i2___awdiv@divisor+1,c
  8573  000DCA  0E40               	movlw	64
  8574  000DCC  6E03               	movwf	i2___awdiv@divisor,c
  8575  000DCE  ECE8  F004         	call	i2___awdiv	;wreg free
  8576  000DD2  5001               	movf	?i2___awdiv,w,c
  8577  000DD4  EC65  F00A         	call	i2_GLCD_EnableController
  8578                           
  8579                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
  8580  000DD8  8680               	bsf	3968,3,c	;volatile
  8581                           
  8582                           ;KS0108-PIC18.c: 122: GLCD_Delay();
  8583  000DDA  EC24  F00B         	call	i2_GLCD_Delay	;wreg free
  8584                           
  8585                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
  8586  000DDE  9680               	bcf	3968,3,c	;volatile
  8587                           
  8588                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
  8589  000DE0  C0A4  F001         	movff	_screen_x,i2___awdiv@dividend
  8590  000DE4  6A02               	clrf	i2___awdiv@dividend+1,c
  8591  000DE6  0E00               	movlw	0
  8592  000DE8  6E04               	movwf	i2___awdiv@divisor+1,c
  8593  000DEA  0E40               	movlw	64
  8594  000DEC  6E03               	movwf	i2___awdiv@divisor,c
  8595  000DEE  ECE8  F004         	call	i2___awdiv	;wreg free
  8596  000DF2  5001               	movf	?i2___awdiv,w,c
  8597  000DF4  EC78  F00A         	call	i2_GLCD_DisableController
  8598                           
  8599                           ;KS0108-PIC18.c: 125: screen_x++;
  8600  000DF8  0100               	movlb	0	; () banked
  8601  000DFA  2BA4               	incf	_screen_x& (0+255),f,b
  8602                           
  8603                           ; BSR set to: 0
  8604  000DFC  0012               	return		;funcret
  8605  000DFE                     __end_ofi2_GLCD_WriteData:
  8606                           	opt stack 0
  8607                           tosu	equ	0xFFF
  8608                           tosh	equ	0xFFE
  8609                           tosl	equ	0xFFD
  8610                           pclatu	equ	0xFFB
  8611                           pclath	equ	0xFFA
  8612                           tblptru	equ	0xFF8
  8613                           tblptrh	equ	0xFF7
  8614                           tblptrl	equ	0xFF6
  8615                           tablat	equ	0xFF5
  8616                           prodh	equ	0xFF4
  8617                           prodl	equ	0xFF3
  8618                           intcon	equ	0xFF2
  8619                           indf0	equ	0xFEF
  8620                           postinc0	equ	0xFEE
  8621                           fsr0h	equ	0xFEA
  8622                           fsr0l	equ	0xFE9
  8623                           wreg	equ	0xFE8
  8624                           fsr1h	equ	0xFE2
  8625                           fsr1l	equ	0xFE1
  8626                           indf2	equ	0xFDF
  8627                           fsr2h	equ	0xFDA
  8628                           fsr2l	equ	0xFD9
  8629                           status	equ	0xFD8
  8630                           
  8631 ;; *************** function i2_GLCD_GoTo *****************
  8632 ;; Defined at:
  8633 ;;		line 25 in file "ks0108lib/KS0108.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;  x               1    wreg     unsigned char 
  8636 ;;  y               1   11[COMRAM] unsigned char 
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;  x               1   12[COMRAM] unsigned char 
  8639 ;;  GLCD_GoTo       1   13[COMRAM] unsigned char 
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      void 
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8649 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8652 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8653 ;;Total ram usage:        3 bytes
  8654 ;; Hardware stack levels used:    1
  8655 ;; Hardware stack levels required when called:    3
  8656 ;; This function calls:
  8657 ;;		i2_GLCD_WriteCommand
  8658 ;;		i2___awdiv
  8659 ;; This function is called by:
  8660 ;;		_Run_Time_Menu_Function
  8661 ;;		i2_Draw_Arrow
  8662 ;;		i2_Clear_Arrow_Column
  8663 ;;		i2_Clear_runTime_Arrows
  8664 ;;		i2_Draw_runTime_Arrow
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           	psect	text60
  8669  000B4E                     __ptext60:
  8670                           	opt stack 0
  8671  000B4E                     i2_GLCD_GoTo:
  8672                           	opt stack 16
  8673                           
  8674                           ; BSR set to: 0
  8675                           ;incstack = 0
  8676                           ;i2GLCD_GoTo@x stored from wreg
  8677  000B4E  6E0D               	movwf	i2GLCD_GoTo@x,c
  8678                           
  8679                           ;KS0108.c: 27: unsigned char i;
  8680                           ;KS0108.c: 28: screen_x = x;
  8681  000B50  C00D  F0A4         	movff	i2GLCD_GoTo@x,_screen_x
  8682                           
  8683                           ;KS0108.c: 29: screen_y = y;
  8684  000B54  C00C  F0A3         	movff	i2GLCD_GoTo@y,_screen_y
  8685                           
  8686                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
  8687  000B58  0E00               	movlw	0
  8688  000B5A  6E0E               	movwf	i2GLCD_GoTo@i,c
  8689  000B5C                     i2l3046:
  8690  000B5C  0E01               	movlw	1
  8691  000B5E  640E               	cpfsgt	i2GLCD_GoTo@i,c
  8692  000B60  D001               	goto	i2l475
  8693  000B62  D012               	goto	i2u149_40
  8694  000B64                     i2l475:
  8695                           
  8696                           ;KS0108.c: 32: {
  8697                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
  8698  000B64  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  8699  000B68  0E40               	movlw	64
  8700  000B6A  ECF8  F009         	call	i2_GLCD_WriteCommand
  8701                           
  8702                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
  8703  000B6E  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  8704  000B72  500C               	movf	i2GLCD_GoTo@y,w,c
  8705  000B74  09B8               	iorlw	184
  8706  000B76  ECF8  F009         	call	i2_GLCD_WriteCommand
  8707                           
  8708                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
  8709  000B7A  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  8710  000B7E  0EC0               	movlw	192
  8711  000B80  ECF8  F009         	call	i2_GLCD_WriteCommand
  8712  000B84  2A0E               	incf	i2GLCD_GoTo@i,f,c
  8713  000B86  D7EA               	goto	i2l3046
  8714  000B88                     i2u149_40:
  8715                           
  8716                           ;KS0108.c: 36: }
  8717                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
  8718  000B88  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
  8719  000B8C  6A02               	clrf	i2___awdiv@dividend+1,c
  8720  000B8E  0E00               	movlw	0
  8721  000B90  6E04               	movwf	i2___awdiv@divisor+1,c
  8722  000B92  0E40               	movlw	64
  8723  000B94  6E03               	movwf	i2___awdiv@divisor,c
  8724  000B96  ECE8  F004         	call	i2___awdiv	;wreg free
  8725  000B9A  5001               	movf	?i2___awdiv,w,c
  8726  000B9C  6E09               	movwf	i2GLCD_WriteCommand@controller,c
  8727  000B9E  500D               	movf	i2GLCD_GoTo@x,w,c
  8728  000BA0  0B3F               	andlw	63
  8729  000BA2  0940               	iorlw	64
  8730  000BA4  ECF8  F009         	call	i2_GLCD_WriteCommand
  8731                           
  8732                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
  8733  000BA8  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
  8734  000BAC  6A02               	clrf	i2___awdiv@dividend+1,c
  8735  000BAE  0E00               	movlw	0
  8736  000BB0  6E04               	movwf	i2___awdiv@divisor+1,c
  8737  000BB2  0E40               	movlw	64
  8738  000BB4  6E03               	movwf	i2___awdiv@divisor,c
  8739  000BB6  ECE8  F004         	call	i2___awdiv	;wreg free
  8740  000BBA  5001               	movf	?i2___awdiv,w,c
  8741  000BBC  6E09               	movwf	i2GLCD_WriteCommand@controller,c
  8742  000BBE  500C               	movf	i2GLCD_GoTo@y,w,c
  8743  000BC0  09B8               	iorlw	184
  8744  000BC2  ECF8  F009         	call	i2_GLCD_WriteCommand
  8745  000BC6  0012               	return		;funcret
  8746  000BC8                     __end_ofi2_GLCD_GoTo:
  8747                           	opt stack 0
  8748                           tosu	equ	0xFFF
  8749                           tosh	equ	0xFFE
  8750                           tosl	equ	0xFFD
  8751                           pclatu	equ	0xFFB
  8752                           pclath	equ	0xFFA
  8753                           tblptru	equ	0xFF8
  8754                           tblptrh	equ	0xFF7
  8755                           tblptrl	equ	0xFF6
  8756                           tablat	equ	0xFF5
  8757                           prodh	equ	0xFF4
  8758                           prodl	equ	0xFF3
  8759                           intcon	equ	0xFF2
  8760                           indf0	equ	0xFEF
  8761                           postinc0	equ	0xFEE
  8762                           fsr0h	equ	0xFEA
  8763                           fsr0l	equ	0xFE9
  8764                           wreg	equ	0xFE8
  8765                           fsr1h	equ	0xFE2
  8766                           fsr1l	equ	0xFE1
  8767                           indf2	equ	0xFDF
  8768                           fsr2h	equ	0xFDA
  8769                           fsr2l	equ	0xFD9
  8770                           status	equ	0xFD8
  8771                           
  8772 ;; *************** function i2___awdiv *****************
  8773 ;; Defined at:
  8774 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  8775 ;; Parameters:    Size  Location     Type
  8776 ;;  dividend        2    0[COMRAM] int 
  8777 ;;  divisor         2    2[COMRAM] int 
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;  __awdiv         2    6[COMRAM] int 
  8780 ;;  __awdiv         1    5[COMRAM] unsigned char 
  8781 ;;  __awdiv         1    4[COMRAM] unsigned char 
  8782 ;; Return value:  Size  Location     Type
  8783 ;;                  2    0[COMRAM] int 
  8784 ;; Registers used:
  8785 ;;		wreg, status,2, status,0
  8786 ;; Tracked objects:
  8787 ;;		On entry : 0/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8791 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8792 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8794 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8795 ;;Total ram usage:        8 bytes
  8796 ;; Hardware stack levels used:    1
  8797 ;; This function calls:
  8798 ;;		Nothing
  8799 ;; This function is called by:
  8800 ;;		i2_GLCD_GoTo
  8801 ;;		i2_GLCD_WriteData
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           	psect	text61
  8806  0009D0                     __ptext61:
  8807                           	opt stack 0
  8808  0009D0                     i2___awdiv:
  8809                           	opt stack 16
  8810                           
  8811                           ;incstack = 0
  8812  0009D0  0E00               	movlw	0
  8813  0009D2  6E06               	movwf	i2___awdiv@sign,c
  8814  0009D4  AE04               	btfss	i2___awdiv@divisor+1,7,c
  8815  0009D6  D006               	goto	i2l868
  8816  0009D8  6C03               	negf	i2___awdiv@divisor,c
  8817  0009DA  1E04               	comf	i2___awdiv@divisor+1,f,c
  8818  0009DC  B0D8               	btfsc	status,0,c
  8819  0009DE  2A04               	incf	i2___awdiv@divisor+1,f,c
  8820  0009E0  0E01               	movlw	1
  8821  0009E2  6E06               	movwf	i2___awdiv@sign,c
  8822  0009E4                     i2l868:
  8823  0009E4  AE02               	btfss	i2___awdiv@dividend+1,7,c
  8824  0009E6  D006               	goto	i2l869
  8825  0009E8  6C01               	negf	i2___awdiv@dividend,c
  8826  0009EA  1E02               	comf	i2___awdiv@dividend+1,f,c
  8827  0009EC  B0D8               	btfsc	status,0,c
  8828  0009EE  2A02               	incf	i2___awdiv@dividend+1,f,c
  8829  0009F0  0E01               	movlw	1
  8830  0009F2  1A06               	xorwf	i2___awdiv@sign,f,c
  8831  0009F4                     i2l869:
  8832  0009F4  0E00               	movlw	0
  8833  0009F6  6E08               	movwf	i2___awdiv@quotient+1,c
  8834  0009F8  0E00               	movlw	0
  8835  0009FA  6E07               	movwf	i2___awdiv@quotient,c
  8836  0009FC  5003               	movf	i2___awdiv@divisor,w,c
  8837  0009FE  1004               	iorwf	i2___awdiv@divisor+1,w,c
  8838  000A00  B4D8               	btfsc	status,2,c
  8839  000A02  D01C               	goto	i2l876
  8840  000A04  0E01               	movlw	1
  8841  000A06  6E05               	movwf	i2___awdiv@counter,c
  8842  000A08  D004               	goto	i2l871
  8843  000A0A  90D8               	bcf	status,0,c
  8844  000A0C  3603               	rlcf	i2___awdiv@divisor,f,c
  8845  000A0E  3604               	rlcf	i2___awdiv@divisor+1,f,c
  8846  000A10  2A05               	incf	i2___awdiv@counter,f,c
  8847  000A12                     i2l871:
  8848  000A12  AE04               	btfss	i2___awdiv@divisor+1,7,c
  8849  000A14  D7FA               	goto	i2l872
  8850  000A16                     i2u126_40:
  8851  000A16  90D8               	bcf	status,0,c
  8852  000A18  3607               	rlcf	i2___awdiv@quotient,f,c
  8853  000A1A  3608               	rlcf	i2___awdiv@quotient+1,f,c
  8854  000A1C  5003               	movf	i2___awdiv@divisor,w,c
  8855  000A1E  5C01               	subwf	i2___awdiv@dividend,w,c
  8856  000A20  5004               	movf	i2___awdiv@divisor+1,w,c
  8857  000A22  5802               	subwfb	i2___awdiv@dividend+1,w,c
  8858  000A24  A0D8               	btfss	status,0,c
  8859  000A26  D005               	goto	i2l875
  8860  000A28  5003               	movf	i2___awdiv@divisor,w,c
  8861  000A2A  5E01               	subwf	i2___awdiv@dividend,f,c
  8862  000A2C  5004               	movf	i2___awdiv@divisor+1,w,c
  8863  000A2E  5A02               	subwfb	i2___awdiv@dividend+1,f,c
  8864  000A30  8007               	bsf	i2___awdiv@quotient,0,c
  8865  000A32                     i2l875:
  8866  000A32  90D8               	bcf	status,0,c
  8867  000A34  3204               	rrcf	i2___awdiv@divisor+1,f,c
  8868  000A36  3203               	rrcf	i2___awdiv@divisor,f,c
  8869  000A38  2E05               	decfsz	i2___awdiv@counter,f,c
  8870  000A3A  D7ED               	goto	i2u126_40
  8871  000A3C                     i2l876:
  8872  000A3C  5006               	movf	i2___awdiv@sign,w,c
  8873  000A3E  B4D8               	btfsc	status,2,c
  8874  000A40  D004               	goto	i2l877
  8875  000A42  6C07               	negf	i2___awdiv@quotient,c
  8876  000A44  1E08               	comf	i2___awdiv@quotient+1,f,c
  8877  000A46  B0D8               	btfsc	status,0,c
  8878  000A48  2A08               	incf	i2___awdiv@quotient+1,f,c
  8879  000A4A                     i2l877:
  8880  000A4A  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  8881  000A4E  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  8882  000A52  0012               	return	
  8883  000A54                     __end_ofi2___awdiv:
  8884                           	opt stack 0
  8885                           tosu	equ	0xFFF
  8886                           tosh	equ	0xFFE
  8887                           tosl	equ	0xFFD
  8888                           pclatu	equ	0xFFB
  8889                           pclath	equ	0xFFA
  8890                           tblptru	equ	0xFF8
  8891                           tblptrh	equ	0xFF7
  8892                           tblptrl	equ	0xFF6
  8893                           tablat	equ	0xFF5
  8894                           prodh	equ	0xFF4
  8895                           prodl	equ	0xFF3
  8896                           intcon	equ	0xFF2
  8897                           indf0	equ	0xFEF
  8898                           postinc0	equ	0xFEE
  8899                           fsr0h	equ	0xFEA
  8900                           fsr0l	equ	0xFE9
  8901                           wreg	equ	0xFE8
  8902                           fsr1h	equ	0xFE2
  8903                           fsr1l	equ	0xFE1
  8904                           indf2	equ	0xFDF
  8905                           fsr2h	equ	0xFDA
  8906                           fsr2l	equ	0xFD9
  8907                           status	equ	0xFD8
  8908                           
  8909 ;; *************** function i2_GLCD_WriteCommand *****************
  8910 ;; Defined at:
  8911 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;  commandToWri    1    wreg     unsigned char 
  8914 ;;  controller      1    8[COMRAM] unsigned char 
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;  commandToWri    1   10[COMRAM] unsigned char 
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      void 
  8919 ;; Registers used:
  8920 ;;		wreg, status,2, status,0, cstack
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8926 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8928 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8929 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8930 ;;Total ram usage:        3 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; Hardware stack levels required when called:    2
  8933 ;; This function calls:
  8934 ;;		i2_GLCD_Delay
  8935 ;;		i2_GLCD_DisableController
  8936 ;;		i2_GLCD_EnableController
  8937 ;;		i2_GLCD_ReadStatus
  8938 ;; This function is called by:
  8939 ;;		i2_GLCD_GoTo
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           	psect	text62
  8944  0013F0                     __ptext62:
  8945                           	opt stack 0
  8946  0013F0                     i2_GLCD_WriteCommand:
  8947                           	opt stack 16
  8948                           
  8949                           ;incstack = 0
  8950                           ;i2GLCD_WriteCommand@commandToWrite stored from wreg
  8951  0013F0  6E0B               	movwf	i2GLCD_WriteCommand@commandToWrite,c
  8952  0013F2                     
  8953                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
  8954  0013F2  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  8955  0013F4  EC8B  F00A         	call	i2_GLCD_ReadStatus
  8956  0013F8  6E0A               	movwf	??i2_GLCD_WriteCommand& (0+255),c
  8957  0013FA  BE0A               	btfsc	??i2_GLCD_WriteCommand,7,c
  8958  0013FC  D7FA               	goto	i2l2894
  8959                           
  8960                           ;KS0108-PIC18.c: 82: TRISD = 0x00;
  8961  0013FE  0E00               	movlw	0
  8962  001400  6E95               	movwf	3989,c	;volatile
  8963                           
  8964                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
  8965  001402  0EF9               	movlw	249
  8966  001404  1680               	andwf	3968,f,c	;volatile
  8967                           
  8968                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
  8969  001406  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  8970  001408  EC65  F00A         	call	i2_GLCD_EnableController
  8971                           
  8972                           ;KS0108-PIC18.c: 85: PORTD = commandToWrite;
  8973  00140C  C00B  FF83         	movff	i2GLCD_WriteCommand@commandToWrite,3971	;volatile
  8974                           
  8975                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
  8976  001410  8680               	bsf	3968,3,c	;volatile
  8977                           
  8978                           ;KS0108-PIC18.c: 87: GLCD_Delay();
  8979  001412  EC24  F00B         	call	i2_GLCD_Delay	;wreg free
  8980                           
  8981                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
  8982  001416  9680               	bcf	3968,3,c	;volatile
  8983                           
  8984                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
  8985  001418  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  8986  00141A  EC78  F00A         	call	i2_GLCD_DisableController
  8987  00141E  0012               	return		;funcret
  8988  001420                     __end_ofi2_GLCD_WriteCommand:
  8989                           	opt stack 0
  8990                           tosu	equ	0xFFF
  8991                           tosh	equ	0xFFE
  8992                           tosl	equ	0xFFD
  8993                           pclatu	equ	0xFFB
  8994                           pclath	equ	0xFFA
  8995                           tblptru	equ	0xFF8
  8996                           tblptrh	equ	0xFF7
  8997                           tblptrl	equ	0xFF6
  8998                           tablat	equ	0xFF5
  8999                           prodh	equ	0xFF4
  9000                           prodl	equ	0xFF3
  9001                           intcon	equ	0xFF2
  9002                           indf0	equ	0xFEF
  9003                           postinc0	equ	0xFEE
  9004                           fsr0h	equ	0xFEA
  9005                           fsr0l	equ	0xFE9
  9006                           wreg	equ	0xFE8
  9007                           fsr1h	equ	0xFE2
  9008                           fsr1l	equ	0xFE1
  9009                           indf2	equ	0xFDF
  9010                           fsr2h	equ	0xFDA
  9011                           fsr2l	equ	0xFD9
  9012                           status	equ	0xFD8
  9013                           
  9014 ;; *************** function i2_GLCD_ReadStatus *****************
  9015 ;; Defined at:
  9016 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  controller      1    wreg     unsigned char 
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;  controller      1    2[COMRAM] unsigned char 
  9021 ;;  GLCD_ReadSta    1    1[COMRAM] unsigned char 
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  1    wreg      unsigned char 
  9024 ;; Registers used:
  9025 ;;		wreg, status,2, status,0, cstack
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9032 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9034 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9035 ;;Total ram usage:        2 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; Hardware stack levels required when called:    1
  9038 ;; This function calls:
  9039 ;;		i2_GLCD_Delay
  9040 ;;		i2_GLCD_DisableController
  9041 ;;		i2_GLCD_EnableController
  9042 ;; This function is called by:
  9043 ;;		i2_GLCD_WriteCommand
  9044 ;;		i2_GLCD_WriteData
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           	psect	text63
  9049  001516                     __ptext63:
  9050                           	opt stack 0
  9051  001516                     i2_GLCD_ReadStatus:
  9052                           	opt stack 15
  9053                           
  9054                           ;incstack = 0
  9055                           ;i2GLCD_ReadStatus@controller stored from wreg
  9056  001516  6E03               	movwf	i2GLCD_ReadStatus@controller,c
  9057                           
  9058                           ;KS0108-PIC18.c: 64: unsigned char status;
  9059                           ;KS0108-PIC18.c: 65: TRISD = 0xFF;
  9060  001518  6895               	setf	3989,c	;volatile
  9061                           
  9062                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
  9063  00151A  8280               	bsf	3968,1,c	;volatile
  9064                           
  9065                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
  9066  00151C  9480               	bcf	3968,2,c	;volatile
  9067                           
  9068                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
  9069  00151E  5003               	movf	i2GLCD_ReadStatus@controller,w,c
  9070  001520  EC65  F00A         	call	i2_GLCD_EnableController
  9071                           
  9072                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
  9073  001524  8680               	bsf	3968,3,c	;volatile
  9074                           
  9075                           ;KS0108-PIC18.c: 70: GLCD_Delay();
  9076  001526  EC24  F00B         	call	i2_GLCD_Delay	;wreg free
  9077                           
  9078                           ;KS0108-PIC18.c: 71: status = PORTD;
  9079  00152A  CF83 F002          	movff	3971,i2GLCD_ReadStatus@status	;volatile
  9080                           
  9081                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
  9082  00152E  9680               	bcf	3968,3,c	;volatile
  9083                           
  9084                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
  9085  001530  5003               	movf	i2GLCD_ReadStatus@controller,w,c
  9086  001532  EC78  F00A         	call	i2_GLCD_DisableController
  9087                           
  9088                           ;KS0108-PIC18.c: 74: return status;
  9089  001536  5002               	movf	i2GLCD_ReadStatus@status,w,c
  9090  001538  0012               	return	
  9091  00153A                     __end_ofi2_GLCD_ReadStatus:
  9092                           	opt stack 0
  9093                           tosu	equ	0xFFF
  9094                           tosh	equ	0xFFE
  9095                           tosl	equ	0xFFD
  9096                           pclatu	equ	0xFFB
  9097                           pclath	equ	0xFFA
  9098                           tblptru	equ	0xFF8
  9099                           tblptrh	equ	0xFF7
  9100                           tblptrl	equ	0xFF6
  9101                           tablat	equ	0xFF5
  9102                           prodh	equ	0xFF4
  9103                           prodl	equ	0xFF3
  9104                           intcon	equ	0xFF2
  9105                           indf0	equ	0xFEF
  9106                           postinc0	equ	0xFEE
  9107                           fsr0h	equ	0xFEA
  9108                           fsr0l	equ	0xFE9
  9109                           wreg	equ	0xFE8
  9110                           fsr1h	equ	0xFE2
  9111                           fsr1l	equ	0xFE1
  9112                           indf2	equ	0xFDF
  9113                           fsr2h	equ	0xFDA
  9114                           fsr2l	equ	0xFD9
  9115                           status	equ	0xFD8
  9116                           
  9117 ;; *************** function i2_GLCD_EnableController *****************
  9118 ;; Defined at:
  9119 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;  controller      1    wreg     unsigned char 
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;  controller      1    0[COMRAM] unsigned char 
  9124 ;; Return value:  Size  Location     Type
  9125 ;;                  1    wreg      void 
  9126 ;; Registers used:
  9127 ;;		wreg, status,2, status,0
  9128 ;; Tracked objects:
  9129 ;;		On entry : 0/0
  9130 ;;		On exit  : 0/0
  9131 ;;		Unchanged: 0/0
  9132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9137 ;;Total ram usage:        1 bytes
  9138 ;; Hardware stack levels used:    1
  9139 ;; This function calls:
  9140 ;;		Nothing
  9141 ;; This function is called by:
  9142 ;;		i2_GLCD_ReadStatus
  9143 ;;		i2_GLCD_WriteCommand
  9144 ;;		i2_GLCD_WriteData
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148                           	psect	text64
  9149  0014CA                     __ptext64:
  9150                           	opt stack 0
  9151  0014CA                     i2_GLCD_EnableController:
  9152                           	opt stack 15
  9153                           
  9154                           ;incstack = 0
  9155                           ;i2GLCD_EnableController@controller stored from wreg
  9156  0014CA  6E01               	movwf	i2GLCD_EnableController@controller,c
  9157                           
  9158                           ;KS0108-PIC18.c: 41: switch(controller){
  9159  0014CC  D006               	goto	i2l528
  9160  0014CE  9A80               	bcf	3968,5,c	;volatile
  9161  0014D0  0012               	return	
  9162  0014D2  9C80               	bcf	3968,6,c	;volatile
  9163  0014D4  0012               	return	
  9164  0014D6  9E80               	bcf	3968,7,c	;volatile
  9165                           
  9166                           ;KS0108-PIC18.c: 45: }
  9167  0014D8  0012               	return	
  9168  0014DA                     i2l528:
  9169  0014DA  5001               	movf	i2GLCD_EnableController@controller,w,c
  9170                           
  9171                           ; Switch size 1, requested type "space"
  9172                           ; Number of cases is 3, Range of values is 0 to 2
  9173                           ; switch strategies available:
  9174                           ; Name         Instructions Cycles
  9175                           ; simple_byte           10     6 (average)
  9176                           ;	Chosen strategy is simple_byte
  9177  0014DC  0A00               	xorlw	0	; case 0
  9178  0014DE  B4D8               	btfsc	status,2,c
  9179  0014E0  D7F6               	goto	i2l529
  9180  0014E2  0A01               	xorlw	1	; case 1
  9181  0014E4  B4D8               	btfsc	status,2,c
  9182  0014E6  D7F5               	goto	i2l531
  9183  0014E8  0A03               	xorlw	3	; case 2
  9184  0014EA  A4D8               	btfss	status,2,c
  9185  0014EC  0012               	return	
  9186  0014EE  D7F3               	goto	i2l532
  9187  0014F0                     __end_ofi2_GLCD_EnableController:
  9188                           	opt stack 0
  9189                           tosu	equ	0xFFF
  9190                           tosh	equ	0xFFE
  9191                           tosl	equ	0xFFD
  9192                           pclatu	equ	0xFFB
  9193                           pclath	equ	0xFFA
  9194                           tblptru	equ	0xFF8
  9195                           tblptrh	equ	0xFF7
  9196                           tblptrl	equ	0xFF6
  9197                           tablat	equ	0xFF5
  9198                           prodh	equ	0xFF4
  9199                           prodl	equ	0xFF3
  9200                           intcon	equ	0xFF2
  9201                           indf0	equ	0xFEF
  9202                           postinc0	equ	0xFEE
  9203                           fsr0h	equ	0xFEA
  9204                           fsr0l	equ	0xFE9
  9205                           wreg	equ	0xFE8
  9206                           fsr1h	equ	0xFE2
  9207                           fsr1l	equ	0xFE1
  9208                           indf2	equ	0xFDF
  9209                           fsr2h	equ	0xFDA
  9210                           fsr2l	equ	0xFD9
  9211                           status	equ	0xFD8
  9212                           
  9213 ;; *************** function i2_GLCD_DisableController *****************
  9214 ;; Defined at:
  9215 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;  controller      1    wreg     unsigned char 
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;  controller      1    0[COMRAM] unsigned char 
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      void 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2, status,0
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9233 ;;Total ram usage:        1 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		i2_GLCD_ReadStatus
  9239 ;;		i2_GLCD_WriteCommand
  9240 ;;		i2_GLCD_WriteData
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           	psect	text65
  9245  0014F0                     __ptext65:
  9246                           	opt stack 0
  9247  0014F0                     i2_GLCD_DisableController:
  9248                           	opt stack 15
  9249                           
  9250                           ;incstack = 0
  9251                           ;i2GLCD_DisableController@controller stored from wreg
  9252  0014F0  6E01               	movwf	i2GLCD_DisableController@controller,c
  9253                           
  9254                           ;KS0108-PIC18.c: 52: switch(controller)
  9255  0014F2  D006               	goto	i2l536
  9256  0014F4  8A80               	bsf	3968,5,c	;volatile
  9257  0014F6  0012               	return	
  9258  0014F8  8C80               	bsf	3968,6,c	;volatile
  9259  0014FA  0012               	return	
  9260  0014FC  8E80               	bsf	3968,7,c	;volatile
  9261                           
  9262                           ;KS0108-PIC18.c: 57: }
  9263  0014FE  0012               	return	
  9264  001500                     i2l536:
  9265  001500  5001               	movf	i2GLCD_DisableController@controller,w,c
  9266                           
  9267                           ; Switch size 1, requested type "space"
  9268                           ; Number of cases is 3, Range of values is 0 to 2
  9269                           ; switch strategies available:
  9270                           ; Name         Instructions Cycles
  9271                           ; simple_byte           10     6 (average)
  9272                           ;	Chosen strategy is simple_byte
  9273  001502  0A00               	xorlw	0	; case 0
  9274  001504  B4D8               	btfsc	status,2,c
  9275  001506  D7F6               	goto	i2l537
  9276  001508  0A01               	xorlw	1	; case 1
  9277  00150A  B4D8               	btfsc	status,2,c
  9278  00150C  D7F5               	goto	i2l539
  9279  00150E  0A03               	xorlw	3	; case 2
  9280  001510  A4D8               	btfss	status,2,c
  9281  001512  0012               	return	
  9282  001514  D7F3               	goto	i2l540
  9283  001516                     __end_ofi2_GLCD_DisableController:
  9284                           	opt stack 0
  9285                           tosu	equ	0xFFF
  9286                           tosh	equ	0xFFE
  9287                           tosl	equ	0xFFD
  9288                           pclatu	equ	0xFFB
  9289                           pclath	equ	0xFFA
  9290                           tblptru	equ	0xFF8
  9291                           tblptrh	equ	0xFF7
  9292                           tblptrl	equ	0xFF6
  9293                           tablat	equ	0xFF5
  9294                           prodh	equ	0xFF4
  9295                           prodl	equ	0xFF3
  9296                           intcon	equ	0xFF2
  9297                           indf0	equ	0xFEF
  9298                           postinc0	equ	0xFEE
  9299                           fsr0h	equ	0xFEA
  9300                           fsr0l	equ	0xFE9
  9301                           wreg	equ	0xFE8
  9302                           fsr1h	equ	0xFE2
  9303                           fsr1l	equ	0xFE1
  9304                           indf2	equ	0xFDF
  9305                           fsr2h	equ	0xFDA
  9306                           fsr2l	equ	0xFD9
  9307                           status	equ	0xFD8
  9308                           
  9309 ;; *************** function i2_GLCD_Delay *****************
  9310 ;; Defined at:
  9311 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;		None
  9314 ;; Auto vars:     Size  Location     Type
  9315 ;;		None
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  1    wreg      void 
  9318 ;; Registers used:
  9319 ;;		None
  9320 ;; Tracked objects:
  9321 ;;		On entry : 0/0
  9322 ;;		On exit  : 0/0
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9329 ;;Total ram usage:        0 bytes
  9330 ;; Hardware stack levels used:    1
  9331 ;; This function calls:
  9332 ;;		Nothing
  9333 ;; This function is called by:
  9334 ;;		i2_GLCD_ReadStatus
  9335 ;;		i2_GLCD_WriteCommand
  9336 ;;		i2_GLCD_WriteData
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           	psect	text66
  9341  001648                     __ptext66:
  9342                           	opt stack 0
  9343  001648                     i2_GLCD_Delay:
  9344                           	opt stack 15
  9345                           
  9346                           ;KS0108-PIC18.c: 26: __nop();
  9347                           
  9348                           ;incstack = 0
  9349  001648  F000               	nop	
  9350  00164A  0012               	return		;funcret
  9351  00164C                     __end_ofi2_GLCD_Delay:
  9352                           	opt stack 0
  9353                           tosu	equ	0xFFF
  9354                           tosh	equ	0xFFE
  9355                           tosl	equ	0xFFD
  9356                           pclatu	equ	0xFFB
  9357                           pclath	equ	0xFFA
  9358                           tblptru	equ	0xFF8
  9359                           tblptrh	equ	0xFF7
  9360                           tblptrl	equ	0xFF6
  9361                           tablat	equ	0xFF5
  9362                           prodh	equ	0xFF4
  9363                           prodl	equ	0xFF3
  9364                           intcon	equ	0xFF2
  9365                           indf0	equ	0xFEF
  9366                           postinc0	equ	0xFEE
  9367                           fsr0h	equ	0xFEA
  9368                           fsr0l	equ	0xFE9
  9369                           wreg	equ	0xFE8
  9370                           fsr1h	equ	0xFE2
  9371                           fsr1l	equ	0xFE1
  9372                           indf2	equ	0xFDF
  9373                           fsr2h	equ	0xFDA
  9374                           fsr2l	equ	0xFD9
  9375                           status	equ	0xFD8
  9376                           tosu	equ	0xFFF
  9377                           tosh	equ	0xFFE
  9378                           tosl	equ	0xFFD
  9379                           pclatu	equ	0xFFB
  9380                           pclath	equ	0xFFA
  9381                           tblptru	equ	0xFF8
  9382                           tblptrh	equ	0xFF7
  9383                           tblptrl	equ	0xFF6
  9384                           tablat	equ	0xFF5
  9385                           prodh	equ	0xFF4
  9386                           prodl	equ	0xFF3
  9387                           intcon	equ	0xFF2
  9388                           indf0	equ	0xFEF
  9389                           postinc0	equ	0xFEE
  9390                           fsr0h	equ	0xFEA
  9391                           fsr0l	equ	0xFE9
  9392                           wreg	equ	0xFE8
  9393                           fsr1h	equ	0xFE2
  9394                           fsr1l	equ	0xFE1
  9395                           indf2	equ	0xFDF
  9396                           fsr2h	equ	0xFDA
  9397                           fsr2l	equ	0xFD9
  9398                           status	equ	0xFD8
  9399                           
  9400                           	psect	text67
  9401  000000                     __ptext67:
  9402                           	opt stack 0
  9403                           tosu	equ	0xFFF
  9404                           tosh	equ	0xFFE
  9405                           tosl	equ	0xFFD
  9406                           pclatu	equ	0xFFB
  9407                           pclath	equ	0xFFA
  9408                           tblptru	equ	0xFF8
  9409                           tblptrh	equ	0xFF7
  9410                           tblptrl	equ	0xFF6
  9411                           tablat	equ	0xFF5
  9412                           prodh	equ	0xFF4
  9413                           prodl	equ	0xFF3
  9414                           intcon	equ	0xFF2
  9415                           indf0	equ	0xFEF
  9416                           postinc0	equ	0xFEE
  9417                           fsr0h	equ	0xFEA
  9418                           fsr0l	equ	0xFE9
  9419                           wreg	equ	0xFE8
  9420                           fsr1h	equ	0xFE2
  9421                           fsr1l	equ	0xFE1
  9422                           indf2	equ	0xFDF
  9423                           fsr2h	equ	0xFDA
  9424                           fsr2l	equ	0xFD9
  9425                           status	equ	0xFD8
  9426                           
  9427                           	psect	rparam
  9428  0000                     tosu	equ	0xFFF
  9429                           tosh	equ	0xFFE
  9430                           tosl	equ	0xFFD
  9431                           pclatu	equ	0xFFB
  9432                           pclath	equ	0xFFA
  9433                           tblptru	equ	0xFF8
  9434                           tblptrh	equ	0xFF7
  9435                           tblptrl	equ	0xFF6
  9436                           tablat	equ	0xFF5
  9437                           prodh	equ	0xFF4
  9438                           prodl	equ	0xFF3
  9439                           intcon	equ	0xFF2
  9440                           indf0	equ	0xFEF
  9441                           postinc0	equ	0xFEE
  9442                           fsr0h	equ	0xFEA
  9443                           fsr0l	equ	0xFE9
  9444                           wreg	equ	0xFE8
  9445                           fsr1h	equ	0xFE2
  9446                           fsr1l	equ	0xFE1
  9447                           indf2	equ	0xFDF
  9448                           fsr2h	equ	0xFDA
  9449                           fsr2l	equ	0xFD9
  9450                           status	equ	0xFD8
  9451                           
  9452                           	psect	temp
  9453  000049                     btemp:
  9454                           	opt stack 0
  9455  000049                     	ds	1
  9456  0000                     int$flags	set	btemp
  9457  0000                     wtemp6	set	btemp+1
  9458                           tosu	equ	0xFFF
  9459                           tosh	equ	0xFFE
  9460                           tosl	equ	0xFFD
  9461                           pclatu	equ	0xFFB
  9462                           pclath	equ	0xFFA
  9463                           tblptru	equ	0xFF8
  9464                           tblptrh	equ	0xFF7
  9465                           tblptrl	equ	0xFF6
  9466                           tablat	equ	0xFF5
  9467                           prodh	equ	0xFF4
  9468                           prodl	equ	0xFF3
  9469                           intcon	equ	0xFF2
  9470                           indf0	equ	0xFEF
  9471                           postinc0	equ	0xFEE
  9472                           fsr0h	equ	0xFEA
  9473                           fsr0l	equ	0xFE9
  9474                           wreg	equ	0xFE8
  9475                           fsr1h	equ	0xFE2
  9476                           fsr1l	equ	0xFE1
  9477                           indf2	equ	0xFDF
  9478                           fsr2h	equ	0xFDA
  9479                           fsr2l	equ	0xFD9
  9480                           status	equ	0xFD8


Data Sizes:
    Strings     125
    Constant    481
    Data        6
    BSS         15
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      72
    BANK0           160     63      73
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    IOCB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Run_Time_Menu_Function@display(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Run_Time_Menu_Function@display(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Run_Time_Menu_Function@display(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Run_Time_Menu_Function@display(COMRAM[10]), 

    GLCD_WriteString@stringToWrite	PTR unsigned char  size(2) Largest target is 13
		 -> STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[13]), STR_13(CODE[4]), 
		 -> Draw_runTime_Menu@display(BANK0[10]), STR_12(CODE[11]), STR_11(CODE[10]), STR_10(CODE[9]), 
		 -> STR_9(CODE[10]), STR_8(CODE[9]), STR_7(CODE[11]), STR_6(CODE[11]), 
		 -> STR_5(CODE[4]), Initialize_Menus@display(BANK0[10]), STR_4(CODE[8]), STR_3(CODE[7]), 
		 -> STR_2(CODE[10]), STR_1(CODE[7]), Run_Time_Menu_Function@display(COMRAM[10]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> Draw_runTime_Menu@display(BANK0[10]), Initialize_Menus@display(BANK0[10]), Run_Time_Menu_Function@display(COMRAM[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_PIN_MANAGER_IOC
    _PIN_MANAGER_IOC->_Run_Time_Menu_Function
    _Run_Time_Menu_Function->i2_itoa
    i2_itoa->i2_utoa
    i2_utoa->i2___lwdiv
    i2_GLCD_WriteString->i2_GLCD_WriteChar
    i2_GLCD_WriteChar->i2_GLCD_WriteData
    i2_Draw_Arrow->i2_Clear_Arrow_Column
    i2_Draw_runTime_Arrow->i2_GLCD_GoTo
    i2_Make_Arrow->i2_GLCD_WriteData
    i2_Clear_runTime_Arrows->i2_GLCD_GoTo
    i2_Clear_Arrow_Column->i2_GLCD_GoTo
    i2_GLCD_WriteData->i2___awdiv
    i2_GLCD_GoTo->i2_GLCD_WriteCommand
    i2_GLCD_WriteCommand->i2___awdiv
    i2_GLCD_ReadStatus->i2_GLCD_DisableController
    i2_GLCD_ReadStatus->i2_GLCD_EnableController

Critical Paths under _main in BANK0

    _main->_Check_Buttons
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _GLCD_Initalize->_GLCD_WriteCommand
    _Check_Buttons->_Draw_runTime_Menu
    _Check_Buttons->_Initialize_Menus
    _Initialize_Menus->_GLCD_Line
    _Draw_runTime_Menu->_GLCD_Line
    _itoa->_utoa
    _utoa->___lwdiv
    _Make_Back_Arrow->_GLCD_WriteData
    _GLCD_WriteString->_GLCD_WriteChar
    _GLCD_WriteChar->_GLCD_WriteData
    _GLCD_Line->_GLCD_SetPixel
    _GLCD_SetPixel->_GLCD_GoTo
    _GLCD_ReadData->___awdiv
    _GLCD_ClearScreen->_GLCD_GoTo
    _Draw_Arrow->_Clear_Arrow_Column
    _Draw_runTime_Arrow->_GLCD_GoTo
    _Make_Arrow->_GLCD_WriteData
    _Clear_runTime_Arrows->_GLCD_GoTo
    _Clear_Arrow_Column->_GLCD_GoTo
    _GLCD_WriteData->___awdiv
    _GLCD_GoTo->_GLCD_WriteCommand
    _GLCD_WriteCommand->___awdiv
    _GLCD_ReadStatus->_GLCD_DisableController
    _GLCD_ReadStatus->_GLCD_EnableController

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  181170
                                             62 BANK0      1     1      0
                      _Check_Buttons
                         _Draw_Arrow
                   _GLCD_ClearScreen
                     _GLCD_Initalize
                   _Initialize_Menus
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              2 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCD_Initalize                                       1     1      0     767
                                             11 BANK0      1     1      0
               _GLCD_InitializePorts
                  _GLCD_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _GLCD_InitializePorts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        1     1      0  105414
                                             61 BANK0      1     1      0
                         _Draw_Arrow
                  _Draw_runTime_Menu
                   _Initialize_Menus
 ---------------------------------------------------------------------------------
 (1) _Initialize_Menus                                    10    10      0   36012
                                             51 BANK0     10    10      0
                   _GLCD_ClearScreen
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _Draw_runTime_Menu                                   10    10      0   38357
                                             51 BANK0     10    10      0
                   _GLCD_ClearScreen
                          _GLCD_GoTo
                          _GLCD_Line
                   _GLCD_WriteString
                    _Make_Back_Arrow
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    2304
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1307
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _Make_Back_Arrow                                      0     0      0    2301
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _GLCD_WriteString                                     2     0      2    3905
                                             13 BANK0      2     0      2
                     _GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (3) _GLCD_WriteChar                                       3     3      0    2392
                                             10 BANK0      3     3      0
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _GLCD_Line                                           30    22      8   16490
                                             21 BANK0     30    22      8
                      _GLCD_SetPixel
 ---------------------------------------------------------------------------------
 (3) _GLCD_SetPixel                                        7     5      2   14674
                                             14 BANK0      7     5      2
                          _GLCD_GoTo
                      _GLCD_ReadData
                     _GLCD_WriteData
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GLCD_ReadData                                        2     2      0    2302
                                              8 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _GLCD_ClearScreen                                     2     2      0    7834
                                             14 BANK0      2     2      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _Draw_Arrow                                           0     0      0   31045
                 _Clear_Arrow_Column
               _Clear_runTime_Arrows
                 _Draw_runTime_Arrow
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Draw_runTime_Arrow                                   0     0      0    7720
                          _GLCD_GoTo
                         _Make_Arrow
 ---------------------------------------------------------------------------------
 (2) _Make_Arrow                                           0     0      0    2301
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_runTime_Arrows                                 1     1      0    7793
                                             14 BANK0      1     1      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Clear_Arrow_Column                                   9     9      0    7812
                                             14 BANK0      9     9      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _GLCD_WriteData                                       2     2      0    2301
                                              8 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _GLCD_GoTo                                            3     2      1    5419
                                             11 BANK0      3     2      1
                  _GLCD_WriteCommand
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2124
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _GLCD_WriteCommand                                    3     2      1     699
                                              8 BANK0      3     2      1
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _GLCD_ReadStatus                                      2     2      0     111
                                              1 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
 ---------------------------------------------------------------------------------
 (6) _GLCD_EnableController                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_DisableController                               1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_Delay                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                          18    18      0   21899
                                             39 COMRAM    18    18      0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     4     4      0   21899
                                             35 COMRAM     4     4      0
                 _Main_Menu_Function
             _Run_Time_Menu_Function
 ---------------------------------------------------------------------------------
 (11) _Run_Time_Menu_Function                             11    11      0   12665
                                             24 COMRAM    11    11      0
                       i2_Draw_Arrow
                        i2_GLCD_GoTo
                 i2_GLCD_WriteString
                             i2_itoa
 ---------------------------------------------------------------------------------
 (12) i2_itoa                                              8     2      6    1098
                                             16 COMRAM     8     2      6
                             i2_utoa
 ---------------------------------------------------------------------------------
 (13) i2_utoa                                              9     3      6     857
                                              7 COMRAM     9     3      6
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (14) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (14) i2___lwdiv                                           7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2_GLCD_WriteString                                  2     0      2     925
                                             13 COMRAM     2     0      2
                   i2_GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_WriteChar                                    3     3      0     828
                                             10 COMRAM     3     3      0
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (11) _Main_Menu_Function                                  1     1      0    9075
                                             23 COMRAM     1     1      0
                       i2_Draw_Arrow
 ---------------------------------------------------------------------------------
 (12) i2_Draw_Arrow                                        0     0      0    9053
               i2_Clear_Arrow_Column
             i2_Clear_runTime_Arrows
               i2_Draw_runTime_Arrow
                        i2_GLCD_GoTo
                       i2_Make_Arrow
 ---------------------------------------------------------------------------------
 (13) i2_Draw_runTime_Arrow                                0     0      0    2222
                        i2_GLCD_GoTo
                       i2_Make_Arrow
 ---------------------------------------------------------------------------------
 (13) i2_Make_Arrow                                        0     0      0     737
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (13) i2_Clear_runTime_Arrows                              1     1      0    2295
                                             14 COMRAM     1     1      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (13) i2_Clear_Arrow_Column                                9     9      0    2314
                                             14 COMRAM     9     9      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (14) i2_GLCD_WriteData                                    2     2      0     737
                                              8 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (12) i2_GLCD_GoTo                                         3     2      1    1485
                                             11 COMRAM     3     2      1
                i2_GLCD_WriteCommand
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (15) i2___awdiv                                           8     4      4     560
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_WriteCommand                                 3     2      1     373
                                              8 COMRAM     3     2      1
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2_GLCD_ReadStatus                                   2     2      0     111
                                              1 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
 ---------------------------------------------------------------------------------
 (16) i2_GLCD_EnableController                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_GLCD_DisableController                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_GLCD_Delay                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Draw_Arrow
       _Clear_Arrow_Column
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Clear_runTime_Arrows
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Draw_runTime_Arrow
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _Make_Arrow
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _Draw_runTime_Menu
       _GLCD_ClearScreen
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _Make_Back_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _Initialize_Menus
       _GLCD_ClearScreen
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_Line
         _GLCD_SetPixel
           _GLCD_GoTo
             _GLCD_WriteCommand
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
               _GLCD_ReadStatus
                 _GLCD_Delay
                 _GLCD_DisableController
                 _GLCD_EnableController
               ___awdiv (ARG)
             ___awdiv
           _GLCD_ReadData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
           ___awdiv
       _GLCD_WriteString
         _GLCD_WriteChar
           _GLCD_WriteData
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
   _Draw_Arrow
     _Clear_Arrow_Column
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Clear_runTime_Arrows
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Draw_runTime_Arrow
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _Make_Arrow
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _Make_Arrow
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
   _GLCD_ClearScreen
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_WriteData
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv
   _GLCD_Initalize
     _GLCD_InitializePorts
     _GLCD_WriteCommand
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv (ARG)
   _Initialize_Menus
     _GLCD_ClearScreen
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_Line
       _GLCD_SetPixel
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_ReadData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
         ___awdiv
     _GLCD_WriteString
       _GLCD_WriteChar
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR4_Initialize
       _TMR4_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _Main_Menu_Function
       i2_Draw_Arrow
         i2_Clear_Arrow_Column
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_runTime_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Draw_runTime_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_GLCD_GoTo
           i2_GLCD_WriteCommand
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv (ARG)
           i2___awdiv
         i2_Make_Arrow
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
     _Run_Time_Menu_Function
       i2_Draw_Arrow
         i2_Clear_Arrow_Column
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Clear_runTime_Arrows
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
         i2_Draw_runTime_Arrow
           i2_GLCD_GoTo
             i2_GLCD_WriteCommand
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv (ARG)
             i2___awdiv
           i2_Make_Arrow
             i2_GLCD_WriteData
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
               i2_GLCD_ReadStatus
                 i2_GLCD_Delay
                 i2_GLCD_DisableController
                 i2_GLCD_EnableController
               i2___awdiv
         i2_GLCD_GoTo
           i2_GLCD_WriteCommand
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv (ARG)
           i2___awdiv
         i2_Make_Arrow
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
       i2_GLCD_GoTo
         i2_GLCD_WriteCommand
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
           i2_GLCD_ReadStatus
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
           i2___awdiv (ARG)
         i2___awdiv
       i2_GLCD_WriteString
         i2_GLCD_WriteChar
           i2_GLCD_WriteData
             i2_GLCD_Delay
             i2_GLCD_DisableController
             i2_GLCD_EnableController
             i2_GLCD_ReadStatus
               i2_GLCD_Delay
               i2_GLCD_DisableController
               i2_GLCD_EnableController
             i2___awdiv
       i2_itoa
         i2_utoa
           i2___lwdiv
           i2___lwmod
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3F      49       5       45.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      48       1       76.6%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      91       6        0.0%
DATA                 0      0      91       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jul 26 16:38:00 2020

             GLCD_WriteCommand@controller 0068                    _Run_Time_Menu_Function 08C2  
               GLCD_WriteData@dataToWrite 0069                           GLCD_Initalize@i 006B  
                            ___awdiv@sign 0065                        i2___lwdiv@dividend 0001  
                             __CFG_BORV$3 000000        i2GLCD_DisableController@controller 0001  
        GLCD_DisableController@controller 0060                           _timer0ReloadVal 009F  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                                     l400 054E                                       l401 0520  
                                     l410 059E                                       l411 058E  
                                     l403 052E                                       l404 0532  
                                     l413 05A6                                       l405 0536  
                                     l406 053A                                       l407 053E  
                                     l408 0544                                       l531 1456  
                                     l443 0202                                       l540 1484  
                                     l532 145A                                       l444 01A0  
                                     l445 01D4                                       l438 013E  
                                     l470 156E                                       l631 0E28  
                                     l615 11CA                                       l439 0156  
                                     l536 1488                                       l528 145E  
                                     l632 0E1E                                       l640 0A7A  
                                     l616 1198                                       l480 1396  
                                     l448 020A                                       l537 147C  
                                     l529 1452                                       l641 0A70  
                                     l449 023E                                       l618 11AC  
                                     l482 13AE                                       l539 1480  
                                     l475 0854                                       l643 0AA2  
                                     l619 11B6                                       l644 0A98  
                                     l652 0D0E                                       l492 0F3E  
                                     l629 0E0C                                       l653 0CB6  
                                     l493 0F12                                       l389 12D6  
                                     l646 0ACA                                       l398 0518  
                                     l647 0AC0                                       l655 0CCC  
                                     l487 0F8A                                       l399 0576  
                                     l656 0CE2                                       l657 0CF8  
                                     l871 098E                                       l872 0986  
                                     l875 09AE                                       l876 09B8  
                                     l868 0960                                       l877 09C6  
                                     l869 0970                              __CFG_CPB$OFF 000000  
                                     _PR4 000FA9                              __CFG_CPD$OFF 000000  
                         _PWM4_Initialize 15DC                                       tosl 000FFD  
                                     wreg 000FE8               PIN_MANAGER_IOC@currentState 0024  
                      __size_of_GLCD_GoTo 0088                        __size_of_GLCD_Line 01B4  
                                    l1031 1134                                      l1122 1056  
                                    l1123 1060                                      l1035 05B8  
                                    l1132 1182                                      l1133 118C  
                                    l1037 05F4                                      l1118 1036  
                                    l1038 0636                                      l1119 102E  
                                    l1128 116A                                      l1129 1162  
                                    l3108 0F7A                                      l3302 13A6  
                                    l3118 0FB8                                      l3360 020A  
                                    l3346 01A0                                      l2830 1354  
                                    l3374 0E04                                      l3294 138E  
                                    l3712 1566                                      l2944 084C  
                                    l2956 0BCC                                      STR_1 FFEF  
                                    STR_2 FFC4                                      STR_3 FFE8  
                                    STR_4 FFE0                                      STR_5 FFFB  
                                    STR_6 FFA5                                      STR_7 FF9A  
                                    STR_8 FFD7                                      STR_9 FFBA  
                                    u1330 0992                                      u2210 0598  
                                    u2220 059A                                      _LATA 000F89  
                                    u1430 103A                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u1460 116E  
                                    u1390 087C                                      u2347 12B4  
                                    u1564 06EC                                      u1580 0FB8  
                                    u1740 0F34                                      u1565 06E8  
                                    u2357 0508                                      u1750 0F60  
                                    u1840 0184                                      u1747 0F2A  
                                    u1757 0F56                                      u1790 13BA  
                                    _TMR4 000F87                                      _WPUB 000F5B  
                                    _main 12A2                                      _itoa 110E  
                         _TMR0_StartTimer 163C                                      fsr0h 000FEA  
                                    fsr1h 000FE2                        i2___lwdiv@quotient 0005  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0049                                      _utoa 05B0  
                                    prodh 000FF4           __end_ofi2_GLCD_EnableController 14F0  
                                    prodl 000FF3                                      start 00B4  
                           __CFG_IESO$OFF 000000                             __CFG_MCLRE$ON 000000  
                     i2_GLCD_WriteCommand 13F0                              ___param_bank 000000  
         __size_of_GLCD_DisableController 002A                       __size_of_GLCD_Delay 0004  
                 __end_of_PWM2_Initialize 1612                   __end_of_TMR0_Initialize 1316  
          ??_TMR0_DefaultInterruptHandler 0001                   __end_of_GLCD_ReadStatus 144C  
          __size_of_OSCILLATOR_Initialize 0012             __end_of_OSCILLATOR_Initialize 1624  
                    _Clear_runTime_Arrows 0A54                                     ?_main 0001  
                                   ?_itoa 0070                           __end_of___awdiv 09D0  
                                   _EEADR 000F74                              ?i2_GLCD_GoTo 000C  
                                   STR_10 FFCE                                     STR_11 FFB0  
                                   STR_12 FF8F                                     STR_13 FFFB  
                                   STR_14 FF82                                     STR_15 FFFB  
                                   STR_16 FFF6                                     ?_utoa 0067  
                                   _T0CON 000FD5                           ___awdiv@divisor 0062  
                                   _T4CON 000F88                           __end_of___lwdiv 106A  
                         __end_of___lwmod 1196                                     i2l123 07CC  
                                   i2l125 07EA                                     i2l142 1590  
                                   i2l150 0924                                     i2l126 07D2  
                                   i2l151 08CC                                     i2l127 082E  
                                   i2l152 08DC                                     i2l128 07DA  
                                   i2l145 159A                                     i2l162 0944  
                                   i2l138 07E2                                     i2l155 08E2  
                                   i2l149 092E                                     i2l157 0920  
                                   i2l159 093E                                     i2l192 005E  
                                   i2l194 0068                                     i2l531 14D2  
                                   i2l540 14FC                                     i2l532 14D6  
                                   i2l631 0EDA                                     i2l615 120E  
                                   i2l536 1500                                     i2l528 14DA  
                                   i2l632 0ED2                                     i2l640 0AF6  
                                   i2l616 11DC                                     i2l537 14F4  
                                   i2l529 14CE                                     i2l641 0AEE  
                                   i2l618 11F0                                     i2l539 14F8  
                                   i2l475 0B64                                     i2l643 0B1C  
                                   i2l619 11FA                                     i2l644 0B14  
                                   i2l652 0D7E                                     i2l492 0FEC  
                                   i2l629 0EC2                                     i2l653 0D26  
                                   i2l493 0FC2                                     i2l646 0B42  
                                   i2l647 0B3A                                     i2l655 0D3C  
                                   i2l487 10DA                                     i2l656 0D52  
                                   i2l657 0D68                                     i2l871 0A12  
                                   i2l872 0A0A                                     i2l875 0A32  
                                   i2l876 0A3C                                     i2l868 09E4  
                         ___awdiv@counter 0064                                     i2l877 0A4A  
                                   i2l869 09F4                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _PORTA 000F80  
                                   _PORTB 000F81                                     _PORTD 000F83  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                                _Draw_Arrow 1196  
       __size_of_TMR0_SetInterruptHandler 000A                             __CFG_WRT0$OFF 000000  
                         _TMR4_Initialize 15A0                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                 ?_TMR0_SetInterruptHandler 0060  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
             __size_of_Clear_Arrow_Column 005E                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                      ?i2_GLCD_WriteCommand 0009  
                        __end_of_TMR0_ISR 14CA                                _Make_Arrow 15B4  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                           __end_of_font5x8 FF81  
                              i2itoa@base 0015                            __CFG_EBTRB$OFF 000000  
                 __end_of_PIN_MANAGER_IOC 083A                                     _color FF81  
                         _Make_Back_Arrow 13BE                   __end_of_PWM3_Initialize 1600  
                                   pclath 000FFA                                     tablat 000FF5  
                    i2_Clear_Arrow_Column 0EB6                    ??_GLCD_InitializePorts 0060  
              __end_of_Main_Menu_Function 15A0                                     utoa@c 006F  
                                   utoa@v 006D                                     status 000FD8  
                                   wtemp6 004A                        __size_ofi2___awdiv 0084  
                      __size_ofi2___lwdiv 0052                        __size_ofi2___lwmod 0042  
                         __initialization 0E5C                              __end_of_main 12DC  
                            __end_of_itoa 1152                              __end_of_utoa 065A  
                       __end_of_GLCD_GoTo 08C2                         __end_of_GLCD_Line 026C  
                 __end_of_PWM4_Initialize 15EE               ?_INTERRUPT_InterruptManager 0001  
               __size_of_Initialize_Menus 0170                     ?_Clear_runTime_Arrows 0001  
                     Clear_Arrow_Column@i 0076                       Clear_Arrow_Column@j 0075  
                                  ??_main 009E                                i2utoa@base 000C  
                                  ??_itoa 0076                                    ??_utoa 006D  
                           __activetblptr 000003                   PIN_MANAGER_IOC@cw_count 003F  
                          __CFG_RETEN$OFF 000000                     ??i2_GLCD_WriteCommand 000A  
                        GLCD_SetPixel@tmp 0072                   __end_of_TMR0_StartTimer 1640  
       __size_ofi2_GLCD_DisableController 0026                             ?i2_GLCD_Delay 0001  
                                  _EEADRH 000F75                                    _EEDATA 000F73  
                                  _CCPR2H 000F52                                    _CCPR3H 000F4F  
                                  _CCPR2L 000F51                                    _CCPR4H 000F4C  
                                  _CCPR3L 000F4E                                    _CCPR4L 000F4B  
                                  _EECON2 000F7E                                    _ANCON0 000F5D  
                                  _ANCON1 000F5C                 ?i2_GLCD_DisableController 0001  
                  _GLCD_DisableController 1476                          ___awdiv@dividend 0060  
                   ?i2_Clear_Arrow_Column 0001                                    i2l1031 1242  
                                  i2l1122 10A8                                    i2l1123 10B2  
                                  i2l1035 0706                                    i2l1132 128E  
                                  i2l1133 1298                                    i2l1037 0740  
                                  i2l1118 1088                                    i2l1038 077E  
                                  i2l1119 1080                           __CFG_BBSIZ$BB2K 000000  
                                  i2l1128 1276                                    i2l1129 126E  
                                  i2l3046 0B5C                                    i2l3170 0EBA  
                                  i2l3156 10CA                                    i2l3166 1106  
                          __CFG_WDTEN$OFF 000000                                    i2l2914 0D96  
                                  i2l2894 13F2                                    _TABLAT 000FF5  
                                  _OSCCON 000FD3                 __size_ofi2_GLCD_WriteChar 0052  
               __size_ofi2_GLCD_WriteData 006A                           _TMR4_StartTimer 1638  
                                  i2_itoa 121E                                    i2_utoa 06FE  
                        _GLCD_WriteString 0F10                            __CFG_XINST$OFF 000000  
                               ??___awdiv 0064                            __CFG_STVREN$ON 000000  
                               ??___lwdiv 0064                                 ??___lwmod 0064  
                        ?_TMR0_Initialize 0001                          ?_PWM2_Initialize 0001  
                 __end_of_TMR4_Initialize 15B4                                    clear_0 0EA6  
                        ___awdiv@quotient 0066                          ?_GLCD_ReadStatus 0001  
                  __size_of_Check_Buttons 00B4                            i2___awdiv@sign 0006  
           __size_ofi2_Draw_runTime_Arrow 0070                                    itoa@cp 0076  
                            __pdataCOMRAM 0046                               ?_Draw_Arrow 0001  
                       __end_ofi2___awdiv 0A54                   __end_of_Make_Back_Arrow 13F0  
                       __end_ofi2___lwdiv 10BC                              __mediumconst FDA0  
                       __end_ofi2___lwmod 12A2                                    tblptrh 000FF7  
                                  tblptrl 000FF6          __size_ofi2_GLCD_EnableController 0026  
                                  tblptru 000FF8                     _GLCD_EnableController 144C  
                             ?_Make_Arrow 0001                            ??i2_GLCD_Delay 0001  
                            ??_GLCD_Delay 0060  TMR0_SetInterruptHandler@InterruptHandler 0060  
                        ?_PIN_MANAGER_IOC 0001             __size_of_INTERRUPT_Initialize 0004  
                        ?_PWM3_Initialize 0001                         _SYSTEM_Initialize 153A  
                              __accesstop 0060                   __end_of__initialization 0EAC  
              __end_ofi2_GLCD_WriteString 1016           i2GLCD_WriteString@stringToWrite 000E  
           GLCD_WriteString@stringToWrite 006D                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                   ?_Run_Time_Menu_Function 0001  
                         GLCD_WriteChar@i 006B                         ?_GLCD_ClearScreen 0001  
                            i2GLCD_GoTo@i 000E                              i2GLCD_GoTo@x 000D  
                            i2GLCD_GoTo@y 000C                     __end_of_GLCD_ReadData 0CB4  
                            _adjustValues 0042                        i2___lwmod@dividend 0001  
                          __pcstackCOMRAM 0001                        ??_GLCD_ClearScreen 006E  
                            __pidataBANK0 164F                       ??_SYSTEM_Initialize 0064  
                               ?_TMR0_ISR 0001                             __end_of_color FF82  
                  ??_Clear_runTime_Arrows 006E              PIN_MANAGER_IOC@previousState 0040  
                   __end_of_GLCD_SetPixel 06FE                          ?_PWM4_Initialize 0001  
                      __end_of_GLCD_Delay 1648                   __size_of_GLCD_Initalize 0022  
                            _afterMinutes 00A5                        _Draw_runTime_Arrow 0CB4  
                PIN_MANAGER_IOC@ccw_count 003E                      __size_ofi2_GLCD_GoTo 007A  
                        ?_TMR0_StartTimer 0001                       ?_Draw_runTime_Arrow 0001  
                 __end_of_TMR4_StartTimer 163C                    ??i2_Clear_Arrow_Column 000F  
               __end_of_SYSTEM_Initialize 155C                                __pbssBANK0 00A3  
                         __CFG_PLLCFG$OFF 000000                             _Check_Buttons 04FC  
          __end_of_Run_Time_Menu_Function 094A                                   ?i2_itoa 0011  
                                 ?i2_utoa 0008                       __size_of_Draw_Arrow 0044  
        __end_of_TMR0_SetInterruptHandler 162E                      ??_Draw_runTime_Arrow 006E  
                     __size_of_Make_Arrow 0014                                ??_TMR0_ISR 0001  
                                 _CCP2CON 000F50                                   _CCP3CON 000F4D  
                                 _CCP4CON 000F4A                          _Initialize_Menus 026C  
                 __size_of_GLCD_WriteChar 0058                   __size_of_GLCD_WriteData 0078  
                       GLCD_ClearScreen@i 006E                         GLCD_ClearScreen@j 006F  
                        ?_TMR4_Initialize 0001                          __CFG_CANMX$PORTB 000000  
                  ?_GLCD_EnableController 0001                                   _REFOCON 000F9A  
                        ?_Make_Back_Arrow 0001                 GLCD_ReadStatus@controller 0062  
                                 _OSCCON2 000FD2                                   _TBLPTRH 000FF7  
                                 _TBLPTRL 000FF6                                   _TBLPTRU 000FF8  
                       _GLCD_WriteCommand 1350                                   _OSCTUNE 000F9B  
                Draw_runTime_Menu@display 0093                        ?_GLCD_WriteCommand 0068  
                          ?_Check_Buttons 0001                          i2_GLCD_WriteChar 10BC  
                        i2_GLCD_WriteData 0D94            GLCD_Line@TwoDxAccumulatedError 007F  
                     ??_GLCD_WriteCommand 0069                                _xMenuStart 00A6  
                         __size_ofi2_itoa 0042                                   i2utoa@c 0010  
                         __CFG_PWRTEN$OFF 000000                                   i2utoa@v 000E  
                         __size_ofi2_utoa 00A4                                   __Hparam 0000  
             i2GLCD_WriteChar@charToWrite 000B             Run_Time_Menu_Function@display 0019  
                                 __Lparam 0000                                   ___awdiv 094A  
                    __end_ofi2_GLCD_Delay 164C                                   ___lwdiv 1016  
                                 ___lwmod 1152                        _Main_Menu_Function 157E  
        __end_ofi2_GLCD_DisableController 1516                                   __pcinit 0E5C  
                                 __ramtop 0F00                                   __ptext0 12A2  
                                 __ptext1 153A                                   __ptext2 15A0  
                                 __ptext3 1638                                   __ptext4 12DC  
                                 __ptext5 163C                                   __ptext6 1624  
                                 __ptext7 15DC                                   __ptext8 15EE  
                                 __ptext9 1600                                 _GLCD_GoTo 083A  
                               _GLCD_Line 00B8                                 _T0CONbits 000FD5  
                                 _font5x8 FDA1                __end_of_Clear_Arrow_Column 0E5C  
                   _OSCILLATOR_Initialize 1612                       ?_Main_Menu_Function 0001  
               __end_of_GLCD_WriteCommand 1388                   i2_GLCD_EnableController 14CA  
                           ?i2_Draw_Arrow 0001                  __end_of_GLCD_WriteString 0F68  
                               _T4CONbits 000F88                   ?_GLCD_DisableController 0001  
                ??_PIN_MANAGER_Initialize 0060                         __CFG_MSSPMSK$MSK7 000000  
                   GLCD_ReadStatus@status 0061                             ?i2_Make_Arrow 0001  
                      PIN_MANAGER_IOC@CHA 0026                        PIN_MANAGER_IOC@CHB 0025  
              __size_of_SYSTEM_Initialize 0022                          ?_TMR4_StartTimer 0001  
                    end_of_initialization 0EAC                  ??i2_Clear_runTime_Arrows 000F  
                 Initialize_Menus@display 0093                                   itoa@buf 0070  
                                 itoa@val 0072             __size_of_GLCD_InitializePorts 000A  
                    ??_Main_Menu_Function 0018                                GLCD_GoTo@i 006D  
                              GLCD_GoTo@x 006C                                GLCD_GoTo@y 006B  
          GLCD_Line@TwoDyAccumulatedError 0081               i2GLCD_WriteData@dataToWrite 000A  
                                 postinc0 000FEE                                   utoa@buf 0067  
                                 utoa@val 0069                     Clear_runTime_Arrows@i 006E  
                          GLCD_Line@TwoDx 0087                            GLCD_Line@TwoDy 0089  
             __end_ofi2_GLCD_WriteCommand 1420                            _GLCD_Initalize 155C  
                _TMR0_SetInterruptHandler 1624                                 _PORTBbits 000F81  
                              ?_GLCD_GoTo 006B                                ?_GLCD_Line 0075  
          __end_of_GLCD_DisableController 14A0                            ??i2_Draw_Arrow 0018  
                            ??_Draw_Arrow 0077                          __CFG_FOSC$INTIO2 000000  
                              _runMinutes 0041                            ??i2_Make_Arrow 000B  
                            ??_Make_Arrow 006A                           ??_Check_Buttons 009D  
                               i2___awdiv 09D0                         i2___lwdiv@divisor 0003  
                               i2___lwdiv 106A                                 i2___lwmod 1260  
                       i2___lwdiv@counter 0007              __end_ofi2_Draw_runTime_Arrow 0D94  
                      i2___awdiv@dividend 0001                            __end_ofi2_itoa 1260  
                          __end_ofi2_utoa 07A2                        __end_of_Draw_Arrow 11DA  
            __end_of_INTERRUPT_Initialize 1644                    __end_of_GLCD_Initalize 157E  
                      __end_of_Make_Arrow 15C8                            GLCD_SetPixel@x 0073  
                          GLCD_SetPixel@y 006E                        i2_GLCD_WriteString 0FC0  
                          _GLCD_WriteChar 0F68                            _GLCD_WriteData 0BC8  
                   PIN_MANAGER_IOC@result 0027                             __pidataCOMRAM 164C  
                       __size_of_TMR0_ISR 002A                 ??i2_GLCD_EnableController 0001  
                               i2itoa@buf 0011                                 i2itoa@val 0013  
                  ?_OSCILLATOR_Initialize 0001                          _timeAfterFinishX 0047  
               __size_of_GLCD_ClearScreen 0036                __size_of_GLCD_WriteCommand 0038  
                     ?i2_GLCD_WriteString 000E                  i2_GLCD_DisableController 14F0  
                     start_initialization 0E5C                        i2___awdiv@quotient 0007  
                __size_of_PWM2_Initialize 0012                  __size_of_TMR0_Initialize 003A  
         __size_of_PIN_MANAGER_Initialize 003A                  __size_of_GLCD_ReadStatus 002C  
                              ?i2___awdiv 0001                                ?i2___lwdiv 0001  
                              ?i2___lwmod 0001                                 i2utoa@buf 0008  
                               i2utoa@val 000A                  __end_of_Initialize_Menus 03DC  
         __size_ofi2_Clear_runTime_Arrows 007A                                  ??i2_itoa 0017  
                    ??i2_GLCD_WriteString 0010                                  ??i2_utoa 000E  
                   __size_ofi2_GLCD_Delay 0004                  __size_of_PIN_MANAGER_IOC 0098  
                __size_of_PWM3_Initialize 0012                            _currentContext 0044  
                  __end_of_GLCD_WriteChar 0FC0                    __end_of_GLCD_WriteData 0C40  
                             _CCPTMRSbits 000F99                           ?_GLCD_Initalize 0001  
                             __pdataBANK0 00A6                  __end_ofi2_GLCD_WriteChar 110E  
                __end_ofi2_GLCD_WriteData 0DFE                   ??_GLCD_EnableController 0060  
           __size_of_Clear_runTime_Arrows 0080                             ??i2_GLCD_GoTo 000D  
                             ??_GLCD_GoTo 006C                               ??_GLCD_Line 007D  
                 i2GLCD_ReadStatus@status 0002                               __pbssCOMRAM 003A  
                           __pcstackBANK0 0060                  __size_of_PWM4_Initialize 0012  
                       i2___lwmod@divisor 0003                         i2___lwmod@counter 0005  
                       i2_GLCD_ReadStatus 1516                    __size_of_GLCD_ReadData 0074  
                            i2_GLCD_Delay 1648                         _Draw_runTime_Menu 03DC  
                      ?i2_GLCD_ReadStatus 0001             __size_ofi2_Clear_Arrow_Column 005A  
                  __size_of_GLCD_SetPixel 00A4                  Main_Menu_Function@result 0018  
                      ?_Draw_runTime_Menu 0001                     _TMR0_InterruptHandler 00A1  
                               __pnvBANK0 009F                  __size_of_TMR0_StartTimer 0004  
                    __end_ofi2_Draw_Arrow 121E                       ??i2_GLCD_ReadStatus 0002  
                        ___lwdiv@dividend 0060                    _PIN_MANAGER_Initialize 1316  
                    __end_ofi2_Make_Arrow 15DC                       ??_Draw_runTime_Menu 0093  
                               __pintcode 0008                        GLCD_SetPixel@color 006F  
                         ?_GLCD_WriteChar 0001                           ?_GLCD_WriteData 0001  
                           __pmediumconst FDA0                   i2Clear_runTime_Arrows@i 000F  
                                ?___awdiv 0060               __size_of_Draw_runTime_Arrow 0070  
                                ?___lwdiv 0060                                  ?___lwmod 0060  
                  i2_Clear_runTime_Arrows 0AD4              ??_INTERRUPT_InterruptManager 0028  
                    i2_Draw_runTime_Arrow 0D24                                 _mainState 0045  
               __end_ofi2_GLCD_ReadStatus 153A                         ?_GLCD_WriteString 006D  
                __size_of_TMR4_Initialize 0014                       __end_ofi2_GLCD_GoTo 0BC8  
               __end_of_Draw_runTime_Menu 04FC                          ___lwdiv@quotient 0064  
                             ??i2___awdiv 0005                        ??_GLCD_WriteString 006F  
                             ??i2___lwdiv 0005                               ??i2___lwmod 0005  
                    _INTERRUPT_Initialize 1640                        _Clear_Arrow_Column 0DFE  
                __size_of_Make_Back_Arrow 0032                         ??_TMR0_Initialize 0062  
                       ??_PWM2_Initialize 0060                         ??_GLCD_ReadStatus 0061  
                                _IOCBbits 000F5A                                  _LATEbits 000F8D  
       i2GLCD_EnableController@controller 0001           GLCD_EnableController@controller 0060  
                                i2u126_40 0A16                                  i2u213_48 14B8  
                                i2u151_40 108C       __size_of_INTERRUPT_InterruptManager 00AC  
                                i2u154_40 127A                                  i2u163_40 1106  
                                i2u149_40 0B88                ??_TMR0_SetInterruptHandler 0062  
                     ?_Clear_Arrow_Column 0001                                  i2u196_40 0FE4  
                                i2u196_47 0FDA                                  i2u197_40 100E  
                                i2u197_47 1004                                  _PIR4bits 000FB7  
                                _RCONbits 000FD0                             _GLCD_ReadData 0C40  
                           GLCD_Line@Xinc 0083                             GLCD_Line@Yinc 0085  
                                _TMR0_ISR 14A0                         ??_PIN_MANAGER_IOC 0024  
                           _GLCD_SetPixel 065A                         ??_PWM3_Initialize 0060  
            __end_of_GLCD_InitializePorts 1638                     ?i2_Draw_runTime_Arrow 0001  
                        __CFG_SOSCSEL$DIG 000000                          _GLCD_ClearScreen 1388  
                       i2___awdiv@divisor 0003                      ??_Clear_Arrow_Column 006E  
                       i2___awdiv@counter 0005                  ??_Run_Time_Menu_Function 0019  
                                i2itoa@cp 0017                     ?_INTERRUPT_Initialize 0001  
                       ??_PWM4_Initialize 0060                                _EECON1bits 000F7F  
             __size_of_Main_Menu_Function 0022                  __size_of_TMR4_StartTimer 0004  
                                __Hrparam 0000                                  __Lrparam 0000  
                          ?_GLCD_ReadData 0001                        __CFG_BOREN$SBORDIS 000000  
                 ??_OSCILLATOR_Initialize 0060                ??i2_GLCD_DisableController 0001  
                       ??_TMR0_StartTimer 0060                          __size_of___awdiv 0086  
                          ?_GLCD_SetPixel 006E                          __size_of___lwdiv 0054  
                        __size_of___lwmod 0044                         GLCD_Line@CurrentX 008B  
                       GLCD_Line@CurrentY 008D                    _IOCB4_InterruptHandler 003C  
                             i2_GLCD_GoTo 0B4E               i2GLCD_ReadStatus@controller 0003  
              __size_ofi2_GLCD_ReadStatus 0024                           ___lwdiv@divisor 0062  
            __size_ofi2_GLCD_WriteCommand 0030                           ___lwdiv@counter 0066  
                                __ptext10 1316                                  __ptext11 1612  
                                __ptext20 1152                                  __ptext12 1640  
                                __ptext21 1016                                  __ptext13 155C  
                                __ptext30 0CB4                                  __ptext22 13BE  
                                __ptext14 162E                                  __ptext31 15B4  
                                __ptext23 0F10                                  __ptext15 04FC  
                                __ptext40 1476                                  __ptext32 0A54  
                                __ptext24 0F68                                  __ptext16 026C  
                                __ptext41 1644                                  __ptext33 0DFE  
                                __ptext25 00B8                                  __ptext17 03DC  
                                __ptext50 106A                                  __ptext34 0BC8  
                                __ptext26 065A                                  __ptext18 110E  
                                __ptext51 0FC0                                  __ptext43 14A0  
                                __ptext35 083A                                  __ptext27 0C40  
                                __ptext19 05B0                                  __ptext60 0B4E  
                                __ptext52 10BC                                  __ptext44 1652  
                                __ptext36 094A                                  __ptext28 1388  
              __size_of_Draw_runTime_Menu 0120                                  __ptext61 09D0  
                                __ptext53 157E                                  __ptext45 07A2  
                                __ptext37 1350                                  __ptext29 1196  
                                __ptext62 13F0                                  __ptext54 11DA  
                                __ptext46 08C2                                  __ptext38 1420  
                                __ptext63 1516                                  __ptext55 0D24  
                                __ptext47 121E                                  __ptext39 144C  
                                __ptext64 14CA                                  __ptext56 15C8  
                                __ptext48 06FE                                  __ptext65 14F0  
                                __ptext57 0AD4                                  __ptext49 1260  
                                __ptext66 1648                                  __ptext58 0EB6  
                                __ptext67 0000                                  __ptext59 0D94  
                              _GLCD_Delay 1644                     __end_of_Check_Buttons 05B0  
                   __size_ofi2_Draw_Arrow 0044                         ?_Initialize_Menus 0001  
                       ??_TMR4_Initialize 0060                             __size_of_main 003A  
                   __size_ofi2_Make_Arrow 0014             i2GLCD_WriteCommand@controller 0009  
                           __size_of_itoa 0044                                _ARROW_SIZE 00A7  
                           __size_of_utoa 00AA      __end_of_TMR0_DefaultInterruptHandler 1654  
   __size_of_TMR0_DefaultInterruptHandler 0002              _TMR0_DefaultInterruptHandler 1652  
                      ??_Initialize_Menus 0093                          ??_GLCD_Initalize 006B  
                                _screen_x 00A4                                  _screen_y 00A3  
                       ??_Make_Back_Arrow 006A                                  _subMenuY 0048  
                                int$flags 0049                                  _runTimeX 00A8  
      __end_of_INTERRUPT_InterruptManager 00B4                _INTERRUPT_InterruptManager 0008  
                  ??i2_Draw_runTime_Arrow 000F                       __CFG_INTOSCSEL$HIGH 000000  
                       ?i2_GLCD_WriteChar 0001                         ?i2_GLCD_WriteData 0001  
          __size_of_GLCD_EnableController 002A             __end_of_GLCD_EnableController 1476  
                              _INTCONbits 000FF2                        ??i2_GLCD_WriteChar 000B  
                      ??i2_GLCD_WriteData 0009                              i2_Draw_Arrow 11DA  
                                itoa@base 0074                              i2_Make_Arrow 15C8  
                  ??_INTERRUPT_Initialize 0060           __size_of_Run_Time_Menu_Function 0088  
            Run_Time_Menu_Function@result 0023                              _valuesXStart 0046  
                                intlevel2 0000              __end_of_Clear_runTime_Arrows 0AD4  
                        ___lwmod@dividend 0060                         GLCD_ReadData@data 0069  
                 ?_PIN_MANAGER_Initialize 0001                          ??_GLCD_WriteChar 006A  
                        ??_GLCD_WriteData 0068                      _GLCD_InitializePorts 162E  
                         ??_GLCD_ReadData 0068               __size_ofi2_GLCD_WriteString 0056  
           ?_TMR0_DefaultInterruptHandler 0001                 GLCD_WriteChar@charToWrite 006A  
                             GLCD_Line@X1 0075                               GLCD_Line@X2 0079  
                             GLCD_Line@Y1 0077                               GLCD_Line@Y2 007B  
                             GLCD_Line@Dx 008F                               GLCD_Line@Dy 0091  
                       i2GLCD_WriteChar@i 000C                   ?i2_Clear_runTime_Arrows 0001  
                ?i2_GLCD_EnableController 0001                           ??_GLCD_SetPixel 0070  
                ??_GLCD_DisableController 0060                        __CFG_WDTPS$1048576 000000  
            __end_ofi2_Clear_Arrow_Column 0F10                         ??_TMR4_StartTimer 0060  
                   i2Clear_Arrow_Column@i 0017                     i2Clear_Arrow_Column@j 0016  
                                utoa@base 006B                           ___lwmod@divisor 0062  
                         _TMR0_Initialize 12DC                           _PWM2_Initialize 1600  
                         ___lwmod@counter 0064                           _GLCD_ReadStatus 1420  
                             ?_GLCD_Delay 0001            __end_of_PIN_MANAGER_Initialize 1350  
                     __CFG_BORPWR$ZPBORMV 000000                    _IOCB5_InterruptHandler 003A  
                         _PIN_MANAGER_IOC 07A2                     ?_GLCD_InitializePorts 0001  
                          _runTimeContext 0043                  __end_of_GLCD_ClearScreen 13BE  
                      _GLCD_SetPixel$1758 0074                           _PWM3_Initialize 15EE  
               __size_of_GLCD_WriteString 0058            __end_ofi2_Clear_runTime_Arrows 0B4E  
       i2GLCD_WriteCommand@commandToWrite 000B           GLCD_WriteCommand@commandToWrite 006A  
              __end_of_Draw_runTime_Arrow 0D24  
