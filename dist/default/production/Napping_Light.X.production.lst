

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jul 20 10:43:46 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           ; Version 1.45
    65                           ; Generated 16/11/2017 GMT
    66                           ; 
    67                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F46K80 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99 ;; Function _IOCB4_DefaultInterruptHandler is unused but had its address taken
   100  0000                     
   101 ;; Function _IOCB5_DefaultInterruptHandler is unused but had its address taken
   102  0000                     
   103                           	psect	idataCOMRAM
   104  0009DE                     __pidataCOMRAM:
   105                           	opt stack 0
   106                           
   107                           ;initializer for _SubMenuYStart
   108  0009DE  01                 	db	1
   109                           
   110                           ;initializer for _SubMenuXStart
   111  0009DF  41                 	db	65
   112                           
   113                           ;initializer for _xMenuStart
   114  0009E0  04                 	db	4
   115                           
   116                           	psect	mediumconst
   117  00FDD8                     __pmediumconst:
   118                           	opt stack 0
   119  00FDD8  00                 	db	0
   120  00FDD9                     _font5x8:
   121                           	opt stack 0
   122  00FDD9  00                 	db	0
   123  00FDDA  00                 	db	0
   124  00FDDB  00                 	db	0
   125  00FDDC  00                 	db	0
   126  00FDDD  00                 	db	0
   127  00FDDE  00                 	db	0
   128  00FDDF  00                 	db	0
   129  00FDE0  5F                 	db	95
   130  00FDE1  00                 	db	0
   131  00FDE2  00                 	db	0
   132  00FDE3  00                 	db	0
   133  00FDE4  07                 	db	7
   134  00FDE5  00                 	db	0
   135  00FDE6  07                 	db	7
   136  00FDE7  00                 	db	0
   137  00FDE8  14                 	db	20
   138  00FDE9  7F                 	db	127
   139  00FDEA  14                 	db	20
   140  00FDEB  7F                 	db	127
   141  00FDEC  14                 	db	20
   142  00FDED  24                 	db	36
   143  00FDEE  2A                 	db	42
   144  00FDEF  7F                 	db	127
   145  00FDF0  2A                 	db	42
   146  00FDF1  12                 	db	18
   147  00FDF2  23                 	db	35
   148  00FDF3  13                 	db	19
   149  00FDF4  08                 	db	8
   150  00FDF5  64                 	db	100
   151  00FDF6  62                 	db	98
   152  00FDF7  36                 	db	54
   153  00FDF8  49                 	db	73
   154  00FDF9  55                 	db	85
   155  00FDFA  22                 	db	34
   156  00FDFB  50                 	db	80
   157  00FDFC  00                 	db	0
   158  00FDFD  05                 	db	5
   159  00FDFE  03                 	db	3
   160  00FDFF  00                 	db	0
   161  00FE00  00                 	db	0
   162  00FE01  00                 	db	0
   163  00FE02  1C                 	db	28
   164  00FE03  22                 	db	34
   165  00FE04  41                 	db	65
   166  00FE05  00                 	db	0
   167  00FE06  00                 	db	0
   168  00FE07  41                 	db	65
   169  00FE08  22                 	db	34
   170  00FE09  1C                 	db	28
   171  00FE0A  00                 	db	0
   172  00FE0B  08                 	db	8
   173  00FE0C  2A                 	db	42
   174  00FE0D  1C                 	db	28
   175  00FE0E  2A                 	db	42
   176  00FE0F  08                 	db	8
   177  00FE10  08                 	db	8
   178  00FE11  08                 	db	8
   179  00FE12  3E                 	db	62
   180  00FE13  08                 	db	8
   181  00FE14  08                 	db	8
   182  00FE15  00                 	db	0
   183  00FE16  50                 	db	80
   184  00FE17  30                 	db	48
   185  00FE18  00                 	db	0
   186  00FE19  00                 	db	0
   187  00FE1A  08                 	db	8
   188  00FE1B  08                 	db	8
   189  00FE1C  08                 	db	8
   190  00FE1D  08                 	db	8
   191  00FE1E  08                 	db	8
   192  00FE1F  00                 	db	0
   193  00FE20  30                 	db	48
   194  00FE21  30                 	db	48
   195  00FE22  00                 	db	0
   196  00FE23  00                 	db	0
   197  00FE24  20                 	db	32
   198  00FE25  10                 	db	16
   199  00FE26  08                 	db	8
   200  00FE27  04                 	db	4
   201  00FE28  02                 	db	2
   202  00FE29  3E                 	db	62
   203  00FE2A  51                 	db	81
   204  00FE2B  49                 	db	73
   205  00FE2C  45                 	db	69
   206  00FE2D  3E                 	db	62
   207  00FE2E  00                 	db	0
   208  00FE2F  42                 	db	66
   209  00FE30  7F                 	db	127
   210  00FE31  40                 	db	64
   211  00FE32  00                 	db	0
   212  00FE33  42                 	db	66
   213  00FE34  61                 	db	97
   214  00FE35  51                 	db	81
   215  00FE36  49                 	db	73
   216  00FE37  46                 	db	70
   217  00FE38  21                 	db	33
   218  00FE39  41                 	db	65
   219  00FE3A  45                 	db	69
   220  00FE3B  4B                 	db	75
   221  00FE3C  31                 	db	49
   222  00FE3D  18                 	db	24
   223  00FE3E  14                 	db	20
   224  00FE3F  12                 	db	18
   225  00FE40  7F                 	db	127
   226  00FE41  10                 	db	16
   227  00FE42  27                 	db	39
   228  00FE43  45                 	db	69
   229  00FE44  45                 	db	69
   230  00FE45  45                 	db	69
   231  00FE46  39                 	db	57
   232  00FE47  3C                 	db	60
   233  00FE48  4A                 	db	74
   234  00FE49  49                 	db	73
   235  00FE4A  49                 	db	73
   236  00FE4B  30                 	db	48
   237  00FE4C  01                 	db	1
   238  00FE4D  71                 	db	113
   239  00FE4E  09                 	db	9
   240  00FE4F  05                 	db	5
   241  00FE50  03                 	db	3
   242  00FE51  36                 	db	54
   243  00FE52  49                 	db	73
   244  00FE53  49                 	db	73
   245  00FE54  49                 	db	73
   246  00FE55  36                 	db	54
   247  00FE56  06                 	db	6
   248  00FE57  49                 	db	73
   249  00FE58  49                 	db	73
   250  00FE59  29                 	db	41
   251  00FE5A  1E                 	db	30
   252  00FE5B  00                 	db	0
   253  00FE5C  36                 	db	54
   254  00FE5D  36                 	db	54
   255  00FE5E  00                 	db	0
   256  00FE5F  00                 	db	0
   257  00FE60  00                 	db	0
   258  00FE61  56                 	db	86
   259  00FE62  36                 	db	54
   260  00FE63  00                 	db	0
   261  00FE64  00                 	db	0
   262  00FE65  00                 	db	0
   263  00FE66  08                 	db	8
   264  00FE67  14                 	db	20
   265  00FE68  22                 	db	34
   266  00FE69  41                 	db	65
   267  00FE6A  14                 	db	20
   268  00FE6B  14                 	db	20
   269  00FE6C  14                 	db	20
   270  00FE6D  14                 	db	20
   271  00FE6E  14                 	db	20
   272  00FE6F  41                 	db	65
   273  00FE70  22                 	db	34
   274  00FE71  14                 	db	20
   275  00FE72  08                 	db	8
   276  00FE73  00                 	db	0
   277  00FE74  02                 	db	2
   278  00FE75  01                 	db	1
   279  00FE76  51                 	db	81
   280  00FE77  09                 	db	9
   281  00FE78  06                 	db	6
   282  00FE79  32                 	db	50
   283  00FE7A  49                 	db	73
   284  00FE7B  79                 	db	121
   285  00FE7C  41                 	db	65
   286  00FE7D  3E                 	db	62
   287  00FE7E  7E                 	db	126
   288  00FE7F  11                 	db	17
   289  00FE80  11                 	db	17
   290  00FE81  11                 	db	17
   291  00FE82  7E                 	db	126
   292  00FE83  7F                 	db	127
   293  00FE84  49                 	db	73
   294  00FE85  49                 	db	73
   295  00FE86  49                 	db	73
   296  00FE87  36                 	db	54
   297  00FE88  3E                 	db	62
   298  00FE89  41                 	db	65
   299  00FE8A  41                 	db	65
   300  00FE8B  41                 	db	65
   301  00FE8C  22                 	db	34
   302  00FE8D  7F                 	db	127
   303  00FE8E  41                 	db	65
   304  00FE8F  41                 	db	65
   305  00FE90  22                 	db	34
   306  00FE91  1C                 	db	28
   307  00FE92  7F                 	db	127
   308  00FE93  49                 	db	73
   309  00FE94  49                 	db	73
   310  00FE95  49                 	db	73
   311  00FE96  41                 	db	65
   312  00FE97  7F                 	db	127
   313  00FE98  09                 	db	9
   314  00FE99  09                 	db	9
   315  00FE9A  01                 	db	1
   316  00FE9B  01                 	db	1
   317  00FE9C  3E                 	db	62
   318  00FE9D  41                 	db	65
   319  00FE9E  41                 	db	65
   320  00FE9F  51                 	db	81
   321  00FEA0  32                 	db	50
   322  00FEA1  7F                 	db	127
   323  00FEA2  08                 	db	8
   324  00FEA3  08                 	db	8
   325  00FEA4  08                 	db	8
   326  00FEA5  7F                 	db	127
   327  00FEA6  00                 	db	0
   328  00FEA7  41                 	db	65
   329  00FEA8  7F                 	db	127
   330  00FEA9  41                 	db	65
   331  00FEAA  00                 	db	0
   332  00FEAB  20                 	db	32
   333  00FEAC  40                 	db	64
   334  00FEAD  41                 	db	65
   335  00FEAE  3F                 	db	63
   336  00FEAF  01                 	db	1
   337  00FEB0  7F                 	db	127
   338  00FEB1  08                 	db	8
   339  00FEB2  14                 	db	20
   340  00FEB3  22                 	db	34
   341  00FEB4  41                 	db	65
   342  00FEB5  7F                 	db	127
   343  00FEB6  40                 	db	64
   344  00FEB7  40                 	db	64
   345  00FEB8  40                 	db	64
   346  00FEB9  40                 	db	64
   347  00FEBA  7F                 	db	127
   348  00FEBB  02                 	db	2
   349  00FEBC  04                 	db	4
   350  00FEBD  02                 	db	2
   351  00FEBE  7F                 	db	127
   352  00FEBF  7F                 	db	127
   353  00FEC0  04                 	db	4
   354  00FEC1  08                 	db	8
   355  00FEC2  10                 	db	16
   356  00FEC3  7F                 	db	127
   357  00FEC4  3E                 	db	62
   358  00FEC5  41                 	db	65
   359  00FEC6  41                 	db	65
   360  00FEC7  41                 	db	65
   361  00FEC8  3E                 	db	62
   362  00FEC9  7F                 	db	127
   363  00FECA  09                 	db	9
   364  00FECB  09                 	db	9
   365  00FECC  09                 	db	9
   366  00FECD  06                 	db	6
   367  00FECE  3E                 	db	62
   368  00FECF  41                 	db	65
   369  00FED0  51                 	db	81
   370  00FED1  21                 	db	33
   371  00FED2  5E                 	db	94
   372  00FED3  7F                 	db	127
   373  00FED4  09                 	db	9
   374  00FED5  19                 	db	25
   375  00FED6  29                 	db	41
   376  00FED7  46                 	db	70
   377  00FED8  46                 	db	70
   378  00FED9  49                 	db	73
   379  00FEDA  49                 	db	73
   380  00FEDB  49                 	db	73
   381  00FEDC  31                 	db	49
   382  00FEDD  01                 	db	1
   383  00FEDE  01                 	db	1
   384  00FEDF  7F                 	db	127
   385  00FEE0  01                 	db	1
   386  00FEE1  01                 	db	1
   387  00FEE2  3F                 	db	63
   388  00FEE3  40                 	db	64
   389  00FEE4  40                 	db	64
   390  00FEE5  40                 	db	64
   391  00FEE6  3F                 	db	63
   392  00FEE7  1F                 	db	31
   393  00FEE8  20                 	db	32
   394  00FEE9  40                 	db	64
   395  00FEEA  20                 	db	32
   396  00FEEB  1F                 	db	31
   397  00FEEC  7F                 	db	127
   398  00FEED  20                 	db	32
   399  00FEEE  18                 	db	24
   400  00FEEF  20                 	db	32
   401  00FEF0  7F                 	db	127
   402  00FEF1  63                 	db	99
   403  00FEF2  14                 	db	20
   404  00FEF3  08                 	db	8
   405  00FEF4  14                 	db	20
   406  00FEF5  63                 	db	99
   407  00FEF6  03                 	db	3
   408  00FEF7  04                 	db	4
   409  00FEF8  78                 	db	120
   410  00FEF9  04                 	db	4
   411  00FEFA  03                 	db	3
   412  00FEFB  61                 	db	97
   413  00FEFC  51                 	db	81
   414  00FEFD  49                 	db	73
   415  00FEFE  45                 	db	69
   416  00FEFF  43                 	db	67
   417  00FF00  00                 	db	0
   418  00FF01  00                 	db	0
   419  00FF02  7F                 	db	127
   420  00FF03  41                 	db	65
   421  00FF04  41                 	db	65
   422  00FF05  02                 	db	2
   423  00FF06  04                 	db	4
   424  00FF07  08                 	db	8
   425  00FF08  10                 	db	16
   426  00FF09  20                 	db	32
   427  00FF0A  41                 	db	65
   428  00FF0B  41                 	db	65
   429  00FF0C  7F                 	db	127
   430  00FF0D  00                 	db	0
   431  00FF0E  00                 	db	0
   432  00FF0F  04                 	db	4
   433  00FF10  02                 	db	2
   434  00FF11  01                 	db	1
   435  00FF12  02                 	db	2
   436  00FF13  04                 	db	4
   437  00FF14  40                 	db	64
   438  00FF15  40                 	db	64
   439  00FF16  40                 	db	64
   440  00FF17  40                 	db	64
   441  00FF18  40                 	db	64
   442  00FF19  00                 	db	0
   443  00FF1A  01                 	db	1
   444  00FF1B  02                 	db	2
   445  00FF1C  04                 	db	4
   446  00FF1D  00                 	db	0
   447  00FF1E  20                 	db	32
   448  00FF1F  54                 	db	84
   449  00FF20  54                 	db	84
   450  00FF21  54                 	db	84
   451  00FF22  78                 	db	120
   452  00FF23  7F                 	db	127
   453  00FF24  48                 	db	72
   454  00FF25  44                 	db	68
   455  00FF26  44                 	db	68
   456  00FF27  38                 	db	56
   457  00FF28  38                 	db	56
   458  00FF29  44                 	db	68
   459  00FF2A  44                 	db	68
   460  00FF2B  44                 	db	68
   461  00FF2C  20                 	db	32
   462  00FF2D  38                 	db	56
   463  00FF2E  44                 	db	68
   464  00FF2F  44                 	db	68
   465  00FF30  48                 	db	72
   466  00FF31  7F                 	db	127
   467  00FF32  38                 	db	56
   468  00FF33  54                 	db	84
   469  00FF34  54                 	db	84
   470  00FF35  54                 	db	84
   471  00FF36  18                 	db	24
   472  00FF37  08                 	db	8
   473  00FF38  7E                 	db	126
   474  00FF39  09                 	db	9
   475  00FF3A  01                 	db	1
   476  00FF3B  02                 	db	2
   477  00FF3C  08                 	db	8
   478  00FF3D  14                 	db	20
   479  00FF3E  54                 	db	84
   480  00FF3F  54                 	db	84
   481  00FF40  3C                 	db	60
   482  00FF41  7F                 	db	127
   483  00FF42  08                 	db	8
   484  00FF43  04                 	db	4
   485  00FF44  04                 	db	4
   486  00FF45  78                 	db	120
   487  00FF46  00                 	db	0
   488  00FF47  44                 	db	68
   489  00FF48  7D                 	db	125
   490  00FF49  40                 	db	64
   491  00FF4A  00                 	db	0
   492  00FF4B  20                 	db	32
   493  00FF4C  40                 	db	64
   494  00FF4D  44                 	db	68
   495  00FF4E  3D                 	db	61
   496  00FF4F  00                 	db	0
   497  00FF50  00                 	db	0
   498  00FF51  7F                 	db	127
   499  00FF52  10                 	db	16
   500  00FF53  28                 	db	40
   501  00FF54  44                 	db	68
   502  00FF55  00                 	db	0
   503  00FF56  41                 	db	65
   504  00FF57  7F                 	db	127
   505  00FF58  40                 	db	64
   506  00FF59  00                 	db	0
   507  00FF5A  7C                 	db	124
   508  00FF5B  04                 	db	4
   509  00FF5C  18                 	db	24
   510  00FF5D  04                 	db	4
   511  00FF5E  78                 	db	120
   512  00FF5F  7C                 	db	124
   513  00FF60  08                 	db	8
   514  00FF61  04                 	db	4
   515  00FF62  04                 	db	4
   516  00FF63  78                 	db	120
   517  00FF64  38                 	db	56
   518  00FF65  44                 	db	68
   519  00FF66  44                 	db	68
   520  00FF67  44                 	db	68
   521  00FF68  38                 	db	56
   522  00FF69  7C                 	db	124
   523  00FF6A  14                 	db	20
   524  00FF6B  14                 	db	20
   525  00FF6C  14                 	db	20
   526  00FF6D  08                 	db	8
   527  00FF6E  08                 	db	8
   528  00FF6F  14                 	db	20
   529  00FF70  14                 	db	20
   530  00FF71  18                 	db	24
   531  00FF72  7C                 	db	124
   532  00FF73  7C                 	db	124
   533  00FF74  08                 	db	8
   534  00FF75  04                 	db	4
   535  00FF76  04                 	db	4
   536  00FF77  08                 	db	8
   537  00FF78  48                 	db	72
   538  00FF79  54                 	db	84
   539  00FF7A  54                 	db	84
   540  00FF7B  54                 	db	84
   541  00FF7C  20                 	db	32
   542  00FF7D  04                 	db	4
   543  00FF7E  3F                 	db	63
   544  00FF7F  44                 	db	68
   545  00FF80  40                 	db	64
   546  00FF81  20                 	db	32
   547  00FF82  3C                 	db	60
   548  00FF83  40                 	db	64
   549  00FF84  40                 	db	64
   550  00FF85  20                 	db	32
   551  00FF86  7C                 	db	124
   552  00FF87  1C                 	db	28
   553  00FF88  20                 	db	32
   554  00FF89  40                 	db	64
   555  00FF8A  20                 	db	32
   556  00FF8B  1C                 	db	28
   557  00FF8C  3C                 	db	60
   558  00FF8D  40                 	db	64
   559  00FF8E  30                 	db	48
   560  00FF8F  40                 	db	64
   561  00FF90  3C                 	db	60
   562  00FF91  44                 	db	68
   563  00FF92  28                 	db	40
   564  00FF93  10                 	db	16
   565  00FF94  28                 	db	40
   566  00FF95  44                 	db	68
   567  00FF96  0C                 	db	12
   568  00FF97  50                 	db	80
   569  00FF98  50                 	db	80
   570  00FF99  50                 	db	80
   571  00FF9A  3C                 	db	60
   572  00FF9B  44                 	db	68
   573  00FF9C  64                 	db	100
   574  00FF9D  54                 	db	84
   575  00FF9E  4C                 	db	76
   576  00FF9F  44                 	db	68
   577  00FFA0  00                 	db	0
   578  00FFA1  08                 	db	8
   579  00FFA2  36                 	db	54
   580  00FFA3  41                 	db	65
   581  00FFA4  00                 	db	0
   582  00FFA5  00                 	db	0
   583  00FFA6  00                 	db	0
   584  00FFA7  7F                 	db	127
   585  00FFA8  00                 	db	0
   586  00FFA9  00                 	db	0
   587  00FFAA  00                 	db	0
   588  00FFAB  41                 	db	65
   589  00FFAC  36                 	db	54
   590  00FFAD  08                 	db	8
   591  00FFAE  00                 	db	0
   592  00FFAF  08                 	db	8
   593  00FFB0  08                 	db	8
   594  00FFB1  2A                 	db	42
   595  00FFB2  1C                 	db	28
   596  00FFB3  08                 	db	8
   597  00FFB4  08                 	db	8
   598  00FFB5  1C                 	db	28
   599  00FFB6  2A                 	db	42
   600  00FFB7  08                 	db	8
   601  00FFB8  08                 	db	8
   602  00FFB9                     __end_of_font5x8:
   603                           	opt stack 0
   604  00FFB9                     _color:
   605                           	opt stack 0
   606  00FFB9  01                 	db	1
   607  00FFBA                     __end_of_color:
   608                           	opt stack 0
   609  00FFBA                     STR_3:
   610  00FFBA  53                 	db	83	;'S'
   611  00FFBB  74                 	db	116	;'t'
   612  00FFBC  61                 	db	97	;'a'
   613  00FFBD  72                 	db	114	;'r'
   614  00FFBE  74                 	db	116	;'t'
   615  00FFBF  43                 	db	67	;'C'
   616  00FFC0  6F                 	db	111	;'o'
   617  00FFC1  6C                 	db	108	;'l'
   618  00FFC2  6F                 	db	111	;'o'
   619  00FFC3  72                 	db	114	;'r'
   620  00FFC4  00                 	db	0
   621  00FFC5                     STR_2:
   622  00FFC5  42                 	db	66	;'B'
   623  00FFC6  72                 	db	114	;'r'
   624  00FFC7  69                 	db	105	;'i'
   625  00FFC8  67                 	db	103	;'g'
   626  00FFC9  68                 	db	104	;'h'
   627  00FFCA  74                 	db	116	;'t'
   628  00FFCB  6E                 	db	110	;'n'
   629  00FFCC  65                 	db	101	;'e'
   630  00FFCD  73                 	db	115	;'s'
   631  00FFCE  73                 	db	115	;'s'
   632  00FFCF  00                 	db	0
   633  00FFD0                     STR_7:
   634  00FFD0  53                 	db	83	;'S'
   635  00FFD1  61                 	db	97	;'a'
   636  00FFD2  76                 	db	118	;'v'
   637  00FFD3  65                 	db	101	;'e'
   638  00FFD4  53                 	db	83	;'S'
   639  00FFD5  74                 	db	116	;'t'
   640  00FFD6  61                 	db	97	;'a'
   641  00FFD7  74                 	db	116	;'t'
   642  00FFD8  65                 	db	101	;'e'
   643  00FFD9  00                 	db	0
   644  00FFDA                     STR_5:
   645  00FFDA  42                 	db	66	;'B'
   646  00FFDB  61                 	db	97	;'a'
   647  00FFDC  63                 	db	99	;'c'
   648  00FFDD  6B                 	db	107	;'k'
   649  00FFDE  6C                 	db	108	;'l'
   650  00FFDF  69                 	db	105	;'i'
   651  00FFE0  67                 	db	103	;'g'
   652  00FFE1  68                 	db	104	;'h'
   653  00FFE2  74                 	db	116	;'t'
   654  00FFE3  00                 	db	0
   655  00FFE4                     STR_6:
   656  00FFE4  53                 	db	83	;'S'
   657  00FFE5  65                 	db	101	;'e'
   658  00FFE6  6C                 	db	108	;'l'
   659  00FFE7  53                 	db	83	;'S'
   660  00FFE8  74                 	db	116	;'t'
   661  00FFE9  61                 	db	97	;'a'
   662  00FFEA  74                 	db	116	;'t'
   663  00FFEB  65                 	db	101	;'e'
   664  00FFEC  00                 	db	0
   665  00FFED                     STR_4:
   666  00FFED  45                 	db	69	;'E'
   667  00FFEE  6E                 	db	110	;'n'
   668  00FFEF  64                 	db	100	;'d'
   669  00FFF0  43                 	db	67	;'C'
   670  00FFF1  6F                 	db	111	;'o'
   671  00FFF2  6C                 	db	108	;'l'
   672  00FFF3  6F                 	db	111	;'o'
   673  00FFF4  72                 	db	114	;'r'
   674  00FFF5  00                 	db	0
   675  00FFF6                     STR_1:
   676  00FFF6  52                 	db	82	;'R'
   677  00FFF7  75                 	db	117	;'u'
   678  00FFF8  6E                 	db	110	;'n'
   679  00FFF9  54                 	db	84	;'T'
   680  00FFFA  69                 	db	105	;'i'
   681  00FFFB  6D                 	db	109	;'m'
   682  00FFFC  65                 	db	101	;'e'
   683  00FFFD  00                 	db	0
   684                           
   685                           ; #config settings
   686  00FFFE  00                 	db	0	; dummy byte at the end
   687  0000                     
   688                           	psect	nvCOMRAM
   689  00002D                     __pnvCOMRAM:
   690                           	opt stack 0
   691  00002D                     _timer0ReloadVal:
   692                           	opt stack 0
   693  00002D                     	ds	2
   694  00002F                     _TMR0_InterruptHandler:
   695                           	opt stack 0
   696  00002F                     	ds	2
   697  000031                     _IOCB5_InterruptHandler:
   698                           	opt stack 0
   699  000031                     	ds	2
   700  000033                     _IOCB4_InterruptHandler:
   701                           	opt stack 0
   702  000033                     	ds	2
   703  0000                     _IOCBbits	set	3930
   704  0000                     _WPUB	set	3931
   705  0000                     _ANCON1	set	3932
   706  0000                     _ANCON0	set	3933
   707  0000                     _PORTC	set	3970
   708  0000                     _PORTA	set	3968
   709  0000                     _LATEbits	set	3981
   710  0000                     _T0CONbits	set	4053
   711  0000                     _TMR0L	set	4054
   712  0000                     _TMR0H	set	4055
   713  0000                     _T0CON	set	4053
   714  0000                     _EEDATA	set	3955
   715  0000                     _EEADR	set	3956
   716  0000                     _EEADRH	set	3957
   717  0000                     _EECON2	set	3966
   718  0000                     _EECON1bits	set	3967
   719  0000                     _TABLAT	set	4085
   720  0000                     _TBLPTRL	set	4086
   721  0000                     _TBLPTRH	set	4087
   722  0000                     _TBLPTRU	set	4088
   723  0000                     _CCPTMRSbits	set	3993
   724  0000                     _CCPR1H	set	4029
   725  0000                     _CCPR1L	set	4028
   726  0000                     _ECCP1DEL	set	4030
   727  0000                     _PSTR1CON	set	3996
   728  0000                     _ECCP1AS	set	4031
   729  0000                     _CCP1CON	set	4027
   730  0000                     _REFOCON	set	3994
   731  0000                     _OSCTUNE	set	3995
   732  0000                     _OSCCON2	set	4050
   733  0000                     _OSCCON	set	4051
   734  0000                     _RCONbits	set	4048
   735  0000                     _PORTB	set	3969
   736  0000                     _PORTBbits	set	3969
   737  0000                     _INTCONbits	set	4082
   738  0000                     _TRISD	set	3989
   739  0000                     _TRISC	set	3988
   740  0000                     _TRISB	set	3987
   741  0000                     _TRISA	set	3986
   742  0000                     _TRISE	set	3990
   743  0000                     _LATC	set	3979
   744  0000                     _LATB	set	3978
   745  0000                     _LATA	set	3977
   746  0000                     _LATD	set	3980
   747  0000                     _LATE	set	3981
   748  0000                     _T4CONbits	set	3976
   749  0000                     _PIR4bits	set	4023
   750  0000                     _TMR4	set	3975
   751  0000                     _PR4	set	4009
   752  0000                     _T4CON	set	3976
   753                           
   754                           	psect	cinit
   755  000756                     __pcinit:
   756                           	opt stack 0
   757  000756                     start_initialization:
   758                           	opt stack 0
   759  000756                     __initialization:
   760                           	opt stack 0
   761                           
   762                           ; Initialize objects allocated to COMRAM (3 bytes)
   763                           ; load TBLPTR registers with __pidataCOMRAM
   764  000756  0EDE               	movlw	low __pidataCOMRAM
   765  000758  6EF6               	movwf	tblptrl,c
   766  00075A  0E09               	movlw	high __pidataCOMRAM
   767  00075C  6EF7               	movwf	tblptrh,c
   768  00075E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   769  000760  6EF8               	movwf	tblptru,c
   770  000762  0009               	tblrd		*+	;fetch initializer
   771  000764  CFF5 F038          	movff	tablat,__pdataCOMRAM
   772  000768  0009               	tblrd		*+	;fetch initializer
   773  00076A  CFF5 F039          	movff	tablat,__pdataCOMRAM+1
   774  00076E  0009               	tblrd		*+	;fetch initializer
   775  000770  CFF5 F03A          	movff	tablat,__pdataCOMRAM+2
   776                           
   777                           ; Clear objects allocated to BANK0 (2 bytes)
   778  000774  0100               	movlb	0
   779  000776  6B71               	clrf	(__pbssBANK0+1)& (0+255),b
   780  000778  6B70               	clrf	__pbssBANK0& (0+255),b
   781                           
   782                           ; Clear objects allocated to COMRAM (3 bytes)
   783  00077A  6A37               	clrf	(__pbssCOMRAM+2)& (0+255),c
   784  00077C  6A36               	clrf	(__pbssCOMRAM+1)& (0+255),c
   785  00077E  6A35               	clrf	__pbssCOMRAM& (0+255),c
   786  000780                     end_of_initialization:
   787                           	opt stack 0
   788  000780                     __end_of__initialization:
   789                           	opt stack 0
   790  000780  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   791  000782  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   792  000784  0100               	movlb	0
   793  000786  EF3A  F003         	goto	_main	;jump to C main() function
   794                           tblptru	equ	0xFF8
   795                           tblptrh	equ	0xFF7
   796                           tblptrl	equ	0xFF6
   797                           tablat	equ	0xFF5
   798                           
   799                           	psect	bssCOMRAM
   800  000035                     __pbssCOMRAM:
   801                           	opt stack 0
   802  000035                     _screen_y:
   803                           	opt stack 0
   804  000035                     	ds	1
   805  000036                     _screen_x:
   806                           	opt stack 0
   807  000036                     	ds	1
   808  000037                     PIN_MANAGER_IOC@previousState:
   809                           	opt stack 0
   810  000037                     	ds	1
   811                           tblptru	equ	0xFF8
   812                           tblptrh	equ	0xFF7
   813                           tblptrl	equ	0xFF6
   814                           tablat	equ	0xFF5
   815                           
   816                           	psect	dataCOMRAM
   817  000038                     __pdataCOMRAM:
   818                           	opt stack 0
   819  000038                     _SubMenuYStart:
   820                           	opt stack 0
   821  000038                     	ds	1
   822  000039                     _SubMenuXStart:
   823                           	opt stack 0
   824  000039                     	ds	1
   825  00003A                     _xMenuStart:
   826                           	opt stack 0
   827  00003A                     	ds	1
   828                           tblptru	equ	0xFF8
   829                           tblptrh	equ	0xFF7
   830                           tblptrl	equ	0xFF6
   831                           tablat	equ	0xFF5
   832                           
   833                           	psect	bssBANK0
   834  000070                     __pbssBANK0:
   835                           	opt stack 0
   836  000070                     _currentContext:
   837                           	opt stack 0
   838  000070                     	ds	1
   839  000071                     _mainState:
   840                           	opt stack 0
   841  000071                     	ds	1
   842                           tblptru	equ	0xFF8
   843                           tblptrh	equ	0xFF7
   844                           tblptrl	equ	0xFF6
   845                           tablat	equ	0xFF5
   846                           
   847                           	psect	cstackBANK0
   848  000060                     __pcstackBANK0:
   849                           	opt stack 0
   850  000060                     ??_GLCD_WriteData:
   851  000060                     GLCD_WriteCommand@controller:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x0
   855  000060                     	ds	1
   856  000061                     ??_GLCD_WriteCommand:
   857  000061                     GLCD_WriteData@dataToWrite:
   858                           	opt stack 0
   859                           
   860                           ; 1 bytes @ 0x1
   861  000061                     	ds	1
   862  000062                     GLCD_WriteChar@charToWrite:
   863                           	opt stack 0
   864  000062                     GLCD_WriteCommand@commandToWrite:
   865                           	opt stack 0
   866                           
   867                           ; 1 bytes @ 0x2
   868  000062                     	ds	1
   869  000063                     GLCD_Initalize@i:
   870                           	opt stack 0
   871  000063                     GLCD_GoTo@y:
   872                           	opt stack 0
   873  000063                     GLCD_WriteChar@i:
   874                           	opt stack 0
   875                           
   876                           ; 2 bytes @ 0x3
   877  000063                     	ds	1
   878  000064                     GLCD_GoTo@x:
   879                           	opt stack 0
   880                           
   881                           ; 1 bytes @ 0x4
   882  000064                     	ds	1
   883  000065                     GLCD_GoTo@i:
   884                           	opt stack 0
   885  000065                     GLCD_WriteString@stringToWrite:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x5
   889  000065                     	ds	1
   890  000066                     ??_Clear_Arrow_Column:
   891  000066                     GLCD_ClearScreen@i:
   892                           	opt stack 0
   893                           
   894                           ; 1 bytes @ 0x6
   895  000066                     	ds	1
   896  000067                     GLCD_ClearScreen@j:
   897                           	opt stack 0
   898                           
   899                           ; 1 bytes @ 0x7
   900  000067                     	ds	6
   901  00006D                     Clear_Arrow_Column@j:
   902                           	opt stack 0
   903                           
   904                           ; 1 bytes @ 0xD
   905  00006D                     	ds	1
   906  00006E                     Clear_Arrow_Column@i:
   907                           	opt stack 0
   908                           
   909                           ; 1 bytes @ 0xE
   910  00006E                     	ds	1
   911  00006F                     ??_main:
   912                           
   913                           ; 1 bytes @ 0xF
   914  00006F                     	ds	1
   915                           tblptru	equ	0xFF8
   916                           tblptrh	equ	0xFF7
   917                           tblptrl	equ	0xFF6
   918                           tablat	equ	0xFF5
   919                           
   920                           	psect	cstackCOMRAM
   921  000001                     __pcstackCOMRAM:
   922                           	opt stack 0
   923  000001                     ?i2___awdiv:
   924                           	opt stack 0
   925  000001                     i2GLCD_EnableController@controller:
   926                           	opt stack 0
   927  000001                     i2GLCD_DisableController@controller:
   928                           	opt stack 0
   929  000001                     i2___awdiv@dividend:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0x0
   933  000001                     	ds	1
   934  000002                     i2GLCD_ReadStatus@status:
   935                           	opt stack 0
   936                           
   937                           ; 1 bytes @ 0x1
   938  000002                     	ds	1
   939  000003                     i2GLCD_ReadStatus@controller:
   940                           	opt stack 0
   941  000003                     i2___awdiv@divisor:
   942                           	opt stack 0
   943                           
   944                           ; 2 bytes @ 0x2
   945  000003                     	ds	2
   946  000005                     i2___awdiv@counter:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x4
   950  000005                     	ds	1
   951  000006                     i2___awdiv@sign:
   952                           	opt stack 0
   953                           
   954                           ; 1 bytes @ 0x5
   955  000006                     	ds	1
   956  000007                     i2___awdiv@quotient:
   957                           	opt stack 0
   958                           
   959                           ; 2 bytes @ 0x6
   960  000007                     	ds	2
   961  000009                     ??i2_GLCD_WriteData:
   962  000009                     i2GLCD_WriteCommand@controller:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x8
   966  000009                     	ds	1
   967  00000A                     ??i2_GLCD_WriteCommand:
   968  00000A                     i2GLCD_WriteData@dataToWrite:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x9
   972  00000A                     	ds	1
   973  00000B                     i2GLCD_WriteChar@charToWrite:
   974                           	opt stack 0
   975  00000B                     i2GLCD_WriteCommand@commandToWrite:
   976                           	opt stack 0
   977                           
   978                           ; 1 bytes @ 0xA
   979  00000B                     	ds	1
   980  00000C                     i2GLCD_GoTo@y:
   981                           	opt stack 0
   982  00000C                     i2GLCD_WriteChar@i:
   983                           	opt stack 0
   984                           
   985                           ; 2 bytes @ 0xB
   986  00000C                     	ds	1
   987  00000D                     i2GLCD_GoTo@x:
   988                           	opt stack 0
   989                           
   990                           ; 1 bytes @ 0xC
   991  00000D                     	ds	1
   992  00000E                     i2GLCD_GoTo@i:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0xD
   996  00000E                     	ds	1
   997  00000F                     ??_PIN_MANAGER_IOC:
   998                           
   999                           ; 1 bytes @ 0xE
  1000  00000F                     	ds	2
  1001  000011                     PIN_MANAGER_IOC@result:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x10
  1005  000011                     	ds	1
  1006  000012                     PIN_MANAGER_IOC@currentState:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x11
  1010  000012                     	ds	1
  1011  000013                     ??_INTERRUPT_InterruptManager:
  1012                           
  1013                           ; 1 bytes @ 0x12
  1014  000013                     	ds	18
  1015  000025                     ?___awdiv:
  1016                           	opt stack 0
  1017  000025                     GLCD_EnableController@controller:
  1018                           	opt stack 0
  1019  000025                     GLCD_DisableController@controller:
  1020                           	opt stack 0
  1021  000025                     IOCB4_SetInterruptHandler@InterruptHandler:
  1022                           	opt stack 0
  1023  000025                     IOCB5_SetInterruptHandler@InterruptHandler:
  1024                           	opt stack 0
  1025  000025                     TMR0_SetInterruptHandler@InterruptHandler:
  1026                           	opt stack 0
  1027  000025                     ___awdiv@dividend:
  1028                           	opt stack 0
  1029                           
  1030                           ; 2 bytes @ 0x24
  1031  000025                     	ds	1
  1032  000026                     GLCD_ReadStatus@status:
  1033                           	opt stack 0
  1034                           
  1035                           ; 1 bytes @ 0x25
  1036  000026                     	ds	1
  1037  000027                     ??_TMR0_Initialize:
  1038  000027                     GLCD_ReadStatus@controller:
  1039                           	opt stack 0
  1040  000027                     ___awdiv@divisor:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x26
  1044  000027                     	ds	2
  1045  000029                     ___awdiv@counter:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x28
  1049  000029                     	ds	1
  1050  00002A                     ___awdiv@sign:
  1051                           	opt stack 0
  1052                           
  1053                           ; 1 bytes @ 0x29
  1054  00002A                     	ds	1
  1055  00002B                     ___awdiv@quotient:
  1056                           	opt stack 0
  1057                           
  1058                           ; 2 bytes @ 0x2A
  1059  00002B                     	ds	2
  1060  00002D                     tblptru	equ	0xFF8
  1061                           tblptrh	equ	0xFF7
  1062                           tblptrl	equ	0xFF6
  1063                           tablat	equ	0xFF5
  1064                           
  1065                           ; 1 bytes @ 0x2C
  1066 ;;
  1067 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1068 ;;
  1069 ;; *************** function _main *****************
  1070 ;; Defined at:
  1071 ;;		line 58 in file "main.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;		None
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;		None
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1087 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1088 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1089 ;;Total ram usage:        1 bytes
  1090 ;; Hardware stack levels required when called:   13
  1091 ;; This function calls:
  1092 ;;		_Check_Buttons
  1093 ;;		_Draw_Arrow
  1094 ;;		_GLCD_ClearScreen
  1095 ;;		_GLCD_Initalize
  1096 ;;		_Initialize_Menus
  1097 ;;		_SYSTEM_Initialize
  1098 ;; This function is called by:
  1099 ;;		Startup code after reset
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text0
  1104  000674                     __ptext0:
  1105                           	opt stack 0
  1106  000674                     _main:
  1107                           	opt stack 18
  1108                           
  1109                           ;main.c: 61: SYSTEM_Initialize();
  1110                           
  1111                           ;incstack = 0
  1112  000674  ECB1  F004         	call	_SYSTEM_Initialize	;wreg free
  1113                           
  1114                           ;main.c: 80: (INTCONbits.GIE = 1);
  1115  000678  8EF2               	bsf	intcon,7,c	;volatile
  1116                           
  1117                           ;main.c: 86: (INTCONbits.PEIE = 1);
  1118  00067A  8CF2               	bsf	intcon,6,c	;volatile
  1119                           
  1120                           ;main.c: 94: do { LATEbits.LATE1 = 1; } while(0);
  1121  00067C  828D               	bsf	3981,1,c	;volatile
  1122                           
  1123                           ;main.c: 95: _delay((unsigned long)((10)*(8000000/4000.0)));
  1124  00067E  0E1A               	movlw	26
  1125  000680  0100               	movlb	0	; () banked
  1126  000682  6F6F               	movwf	??_main& (0+255),b
  1127  000684  0EF8               	movlw	248
  1128  000686                     u2117:
  1129  000686  2EE8               	decfsz	wreg,f,c
  1130  000688  D7FE               	bra	u2117
  1131  00068A  2F6F               	decfsz	??_main& (0+255),f,b
  1132  00068C  D7FC               	bra	u2117
  1133  00068E  F000               	nop	
  1134                           
  1135                           ;main.c: 96: GLCD_Initalize();
  1136  000690  EC92  F004         	call	_GLCD_Initalize	;wreg free
  1137                           
  1138                           ;main.c: 97: GLCD_ClearScreen();
  1139  000694  EC90  F003         	call	_GLCD_ClearScreen	;wreg free
  1140                           
  1141                           ;main.c: 100: Initialize_Menus();
  1142  000698  EC5C  F000         	call	_Initialize_Menus	;wreg free
  1143                           
  1144                           ;main.c: 102: currentContext = mainMenu;
  1145  00069C  0E00               	movlw	0
  1146  00069E  0100               	movlb	0	; () banked
  1147  0006A0  6F70               	movwf	_currentContext& (0+255),b
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;main.c: 103: mainState = setRunTime;
  1151  0006A2  0E00               	movlw	0
  1152  0006A4  6F71               	movwf	_mainState& (0+255),b
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;main.c: 104: Draw_Arrow();
  1156  0006A6  ECC5  F003         	call	_Draw_Arrow	;wreg free
  1157  0006AA                     
  1158                           ;main.c: 107: {
  1159                           ;main.c: 109: Check_Buttons();
  1160  0006AA  ECE8  F002         	call	_Check_Buttons	;wreg free
  1161  0006AE  D7FD               	goto	l346
  1162  0006B0                     __end_of_main:
  1163                           	opt stack 0
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           intcon	equ	0xFF2
  1169                           wreg	equ	0xFE8
  1170                           
  1171 ;; *************** function _SYSTEM_Initialize *****************
  1172 ;; Defined at:
  1173 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1191 ;;Total ram usage:        0 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    8
  1194 ;; This function calls:
  1195 ;;		_EPWM1_Initialize
  1196 ;;		_INTERRUPT_Initialize
  1197 ;;		_OSCILLATOR_Initialize
  1198 ;;		_PIN_MANAGER_Initialize
  1199 ;;		_TMR0_Initialize
  1200 ;;		_TMR4_Initialize
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text1
  1207  000962                     __ptext1:
  1208                           	opt stack 0
  1209  000962                     _SYSTEM_Initialize:
  1210                           	opt stack 22
  1211                           
  1212                           ;mcc.c: 114: INTERRUPT_Initialize();
  1213                           
  1214                           ;incstack = 0
  1215  000962  ECE9  F004         	call	_INTERRUPT_Initialize	;wreg free
  1216                           
  1217                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1218  000966  ECBE  F002         	call	_PIN_MANAGER_Initialize	;wreg free
  1219                           
  1220                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1221  00096A  ECC8  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1222                           
  1223                           ;mcc.c: 117: EPWM1_Initialize();
  1224  00096E  ECA3  F004         	call	_EPWM1_Initialize	;wreg free
  1225                           
  1226                           ;mcc.c: 118: TMR4_Initialize();
  1227  000972  ECBE  F004         	call	_TMR4_Initialize	;wreg free
  1228                           
  1229                           ;mcc.c: 119: TMR0_Initialize();
  1230  000976  EC58  F003         	call	_TMR0_Initialize	;wreg free
  1231  00097A  0012               	return		;funcret
  1232  00097C                     __end_of_SYSTEM_Initialize:
  1233                           	opt stack 0
  1234                           tblptru	equ	0xFF8
  1235                           tblptrh	equ	0xFF7
  1236                           tblptrl	equ	0xFF6
  1237                           tablat	equ	0xFF5
  1238                           intcon	equ	0xFF2
  1239                           wreg	equ	0xFE8
  1240                           
  1241 ;; *************** function _TMR4_Initialize *****************
  1242 ;; Defined at:
  1243 ;;		line 61 in file "mcc_generated_files/tmr4.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;		None
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;		None
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1261 ;;Total ram usage:        0 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    7
  1264 ;; This function calls:
  1265 ;;		_TMR4_StartTimer
  1266 ;; This function is called by:
  1267 ;;		_SYSTEM_Initialize
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text2
  1272  00097C                     __ptext2:
  1273                           	opt stack 0
  1274  00097C                     _TMR4_Initialize:
  1275                           	opt stack 22
  1276                           
  1277                           ;tmr4.c: 66: T4CON = 0x02;
  1278                           
  1279                           ;incstack = 0
  1280  00097C  0E02               	movlw	2
  1281  00097E  6E88               	movwf	3976,c	;volatile
  1282                           
  1283                           ;tmr4.c: 69: PR4 = 0xF9;
  1284  000980  0EF9               	movlw	249
  1285  000982  6EA9               	movwf	4009,c	;volatile
  1286                           
  1287                           ;tmr4.c: 72: TMR4 = 0x00;
  1288  000984  0E00               	movlw	0
  1289  000986  6E87               	movwf	3975,c	;volatile
  1290                           
  1291                           ;tmr4.c: 75: PIR4bits.TMR4IF = 0;
  1292  000988  9EB7               	bcf	4023,7,c	;volatile
  1293                           
  1294                           ;tmr4.c: 78: TMR4_StartTimer();
  1295  00098A  ECE5  F004         	call	_TMR4_StartTimer	;wreg free
  1296  00098E  0012               	return		;funcret
  1297  000990                     __end_of_TMR4_Initialize:
  1298                           	opt stack 0
  1299                           tblptru	equ	0xFF8
  1300                           tblptrh	equ	0xFF7
  1301                           tblptrl	equ	0xFF6
  1302                           tablat	equ	0xFF5
  1303                           intcon	equ	0xFF2
  1304                           wreg	equ	0xFE8
  1305                           
  1306 ;; *************** function _TMR4_StartTimer *****************
  1307 ;; Defined at:
  1308 ;;		line 81 in file "mcc_generated_files/tmr4.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		None
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1326 ;;Total ram usage:        0 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; Hardware stack levels required when called:    6
  1329 ;; This function calls:
  1330 ;;		Nothing
  1331 ;; This function is called by:
  1332 ;;		_TMR4_Initialize
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text3
  1337  0009CA                     __ptext3:
  1338                           	opt stack 0
  1339  0009CA                     _TMR4_StartTimer:
  1340                           	opt stack 22
  1341                           
  1342                           ;tmr4.c: 84: T4CONbits.TMR4ON = 1;
  1343                           
  1344                           ;incstack = 0
  1345  0009CA  8488               	bsf	3976,2,c	;volatile
  1346  0009CC  0012               	return		;funcret
  1347  0009CE                     __end_of_TMR4_StartTimer:
  1348                           	opt stack 0
  1349                           tblptru	equ	0xFF8
  1350                           tblptrh	equ	0xFF7
  1351                           tblptrl	equ	0xFF6
  1352                           tablat	equ	0xFF5
  1353                           intcon	equ	0xFF2
  1354                           wreg	equ	0xFE8
  1355                           
  1356 ;; *************** function _TMR0_Initialize *****************
  1357 ;; Defined at:
  1358 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1374 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1375 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;Total ram usage:        2 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    7
  1379 ;; This function calls:
  1380 ;;		_TMR0_SetInterruptHandler
  1381 ;;		_TMR0_StartTimer
  1382 ;; This function is called by:
  1383 ;;		_SYSTEM_Initialize
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text4
  1388  0006B0                     __ptext4:
  1389                           	opt stack 0
  1390  0006B0                     _TMR0_Initialize:
  1391                           	opt stack 22
  1392                           
  1393                           ;tmr0.c: 71: T0CON = 0x14;
  1394                           
  1395                           ;incstack = 0
  1396  0006B0  0E14               	movlw	20
  1397  0006B2  6ED5               	movwf	4053,c	;volatile
  1398                           
  1399                           ;tmr0.c: 74: TMR0H = 0x0B;
  1400  0006B4  0E0B               	movlw	11
  1401  0006B6  6ED7               	movwf	4055,c	;volatile
  1402                           
  1403                           ;tmr0.c: 77: TMR0L = 0xDB;
  1404  0006B8  0EDB               	movlw	219
  1405  0006BA  6ED6               	movwf	4054,c	;volatile
  1406                           
  1407                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  1408  0006BC  50D6               	movf	4054,w,c	;volatile
  1409  0006BE  CFD7 F027          	movff	4055,??_TMR0_Initialize	;volatile
  1410  0006C2  6A28               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  1411  0006C4  C027  F028         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1412  0006C8  6A27               	clrf	??_TMR0_Initialize,c
  1413  0006CA  1027               	iorwf	??_TMR0_Initialize,w,c
  1414  0006CC  6E2D               	movwf	_timer0ReloadVal,c	;volatile
  1415  0006CE  5028               	movf	??_TMR0_Initialize+1,w,c
  1416  0006D0  6E2E               	movwf	_timer0ReloadVal+1,c	;volatile
  1417                           
  1418                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  1419  0006D2  94F2               	bcf	intcon,2,c	;volatile
  1420                           
  1421                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  1422  0006D4  8AF2               	bsf	intcon,5,c	;volatile
  1423                           
  1424                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1425  0006D6  0EE6               	movlw	low _TMR0_DefaultInterruptHandler
  1426  0006D8  6E25               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1427  0006DA  0E09               	movlw	high _TMR0_DefaultInterruptHandler
  1428  0006DC  6E26               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1429  0006DE  ECD1  F004         	call	_TMR0_SetInterruptHandler	;wreg free
  1430                           
  1431                           ;tmr0.c: 92: TMR0_StartTimer();
  1432  0006E2  ECE7  F004         	call	_TMR0_StartTimer	;wreg free
  1433  0006E6  0012               	return		;funcret
  1434  0006E8                     __end_of_TMR0_Initialize:
  1435                           	opt stack 0
  1436                           tblptru	equ	0xFF8
  1437                           tblptrh	equ	0xFF7
  1438                           tblptrl	equ	0xFF6
  1439                           tablat	equ	0xFF5
  1440                           intcon	equ	0xFF2
  1441                           wreg	equ	0xFE8
  1442                           
  1443 ;; *************** function _TMR0_StartTimer *****************
  1444 ;; Defined at:
  1445 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		None
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1463 ;;Total ram usage:        0 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    6
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_TMR0_Initialize
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text5
  1474  0009CE                     __ptext5:
  1475                           	opt stack 0
  1476  0009CE                     _TMR0_StartTimer:
  1477                           	opt stack 22
  1478                           
  1479                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
  1480                           
  1481                           ;incstack = 0
  1482  0009CE  8ED5               	bsf	4053,7,c	;volatile
  1483  0009D0  0012               	return		;funcret
  1484  0009D2                     __end_of_TMR0_StartTimer:
  1485                           	opt stack 0
  1486                           tblptru	equ	0xFF8
  1487                           tblptrh	equ	0xFF7
  1488                           tblptrl	equ	0xFF6
  1489                           tablat	equ	0xFF5
  1490                           intcon	equ	0xFF2
  1491                           wreg	equ	0xFE8
  1492                           
  1493 ;; *************** function _TMR0_SetInterruptHandler *****************
  1494 ;; Defined at:
  1495 ;;		line 154 in file "mcc_generated_files/tmr0.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  InterruptHan    2   36[COMRAM] PTR FTN()void 
  1498 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1510 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1513 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1514 ;;Total ram usage:        2 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    6
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_TMR0_Initialize
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text6
  1525  0009A2                     __ptext6:
  1526                           	opt stack 0
  1527  0009A2                     _TMR0_SetInterruptHandler:
  1528                           	opt stack 22
  1529                           
  1530                           ;tmr0.c: 155: TMR0_InterruptHandler = InterruptHandler;
  1531                           
  1532                           ;incstack = 0
  1533  0009A2  C025  F02F         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1534  0009A6  C026  F030         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1535  0009AA  0012               	return		;funcret
  1536  0009AC                     __end_of_TMR0_SetInterruptHandler:
  1537                           	opt stack 0
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           intcon	equ	0xFF2
  1543                           wreg	equ	0xFE8
  1544                           
  1545 ;; *************** function _PIN_MANAGER_Initialize *****************
  1546 ;; Defined at:
  1547 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, status,0, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    7
  1568 ;; This function calls:
  1569 ;;		_IOCB4_SetInterruptHandler
  1570 ;;		_IOCB5_SetInterruptHandler
  1571 ;; This function is called by:
  1572 ;;		_SYSTEM_Initialize
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text7
  1577  00057C                     __ptext7:
  1578                           	opt stack 0
  1579  00057C                     _PIN_MANAGER_Initialize:
  1580                           	opt stack 22
  1581                           
  1582                           ;pin_manager.c: 64: LATE = 0x00;
  1583                           
  1584                           ;incstack = 0
  1585  00057C  0E00               	movlw	0
  1586  00057E  6E8D               	movwf	3981,c	;volatile
  1587                           
  1588                           ;pin_manager.c: 65: LATD = 0x00;
  1589  000580  0E00               	movlw	0
  1590  000582  6E8C               	movwf	3980,c	;volatile
  1591                           
  1592                           ;pin_manager.c: 66: LATA = 0x00;
  1593  000584  0E00               	movlw	0
  1594  000586  6E89               	movwf	3977,c	;volatile
  1595                           
  1596                           ;pin_manager.c: 67: LATB = 0x00;
  1597  000588  0E00               	movlw	0
  1598  00058A  6E8A               	movwf	3978,c	;volatile
  1599                           
  1600                           ;pin_manager.c: 68: LATC = 0x00;
  1601  00058C  0E00               	movlw	0
  1602  00058E  6E8B               	movwf	3979,c	;volatile
  1603                           
  1604                           ;pin_manager.c: 73: TRISE = 0x05;
  1605  000590  0E05               	movlw	5
  1606  000592  6E96               	movwf	3990,c	;volatile
  1607                           
  1608                           ;pin_manager.c: 74: TRISA = 0x01;
  1609  000594  0E01               	movlw	1
  1610  000596  6E92               	movwf	3986,c	;volatile
  1611                           
  1612                           ;pin_manager.c: 75: TRISB = 0xFF;
  1613  000598  6893               	setf	3987,c	;volatile
  1614                           
  1615                           ;pin_manager.c: 76: TRISC = 0x00;
  1616  00059A  0E00               	movlw	0
  1617  00059C  6E94               	movwf	3988,c	;volatile
  1618                           
  1619                           ;pin_manager.c: 77: TRISD = 0x0F;
  1620  00059E  0E0F               	movlw	15
  1621  0005A0  6E95               	movwf	3989,c	;volatile
  1622                           
  1623                           ;pin_manager.c: 82: ANCON0 = 0x00;
  1624  0005A2  0E00               	movlw	0
  1625  0005A4  010F               	movlb	15	; () banked
  1626  0005A6  6F5D               	movwf	93,b	;volatile
  1627                           
  1628                           ;pin_manager.c: 83: ANCON1 = 0x00;
  1629  0005A8  0E00               	movlw	0
  1630  0005AA  6F5C               	movwf	92,b	;volatile
  1631                           
  1632                           ;pin_manager.c: 89: WPUB = 0x00;
  1633  0005AC  0E00               	movlw	0
  1634  0005AE  6F5B               	movwf	91,b	;volatile
  1635                           
  1636                           ; BSR set to: 15
  1637                           ;pin_manager.c: 97: IOCBbits.IOCB4 = 1;
  1638  0005B0  895A               	bsf	90,4,b	;volatile
  1639                           
  1640                           ; BSR set to: 15
  1641                           ;pin_manager.c: 98: IOCBbits.IOCB5 = 1;
  1642  0005B2  8B5A               	bsf	90,5,b	;volatile
  1643                           
  1644                           ; BSR set to: 15
  1645                           ;pin_manager.c: 101: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  1646  0005B4  0E00               	movlw	0
  1647  0005B6  6E25               	movwf	IOCB4_SetInterruptHandler@InterruptHandler,c
  1648  0005B8  0E00               	movlw	0
  1649  0005BA  6E26               	movwf	IOCB4_SetInterruptHandler@InterruptHandler+1,c
  1650  0005BC  ECDB  F004         	call	_IOCB4_SetInterruptHandler	;wreg free
  1651                           
  1652                           ;pin_manager.c: 102: IOCB5_SetInterruptHandler(IOCB5_DefaultInterruptHandler);
  1653  0005C0  0E00               	movlw	0
  1654  0005C2  6E25               	movwf	IOCB5_SetInterruptHandler@InterruptHandler,c
  1655  0005C4  0E00               	movlw	0
  1656  0005C6  6E26               	movwf	IOCB5_SetInterruptHandler@InterruptHandler+1,c
  1657  0005C8  ECD6  F004         	call	_IOCB5_SetInterruptHandler	;wreg free
  1658                           
  1659                           ;pin_manager.c: 105: INTCONbits.RBIE = 1;
  1660  0005CC  86F2               	bsf	intcon,3,c	;volatile
  1661  0005CE  0012               	return		;funcret
  1662  0005D0                     __end_of_PIN_MANAGER_Initialize:
  1663                           	opt stack 0
  1664                           tblptru	equ	0xFF8
  1665                           tblptrh	equ	0xFF7
  1666                           tblptrl	equ	0xFF6
  1667                           tablat	equ	0xFF5
  1668                           intcon	equ	0xFF2
  1669                           wreg	equ	0xFE8
  1670                           
  1671 ;; *************** function _IOCB5_SetInterruptHandler *****************
  1672 ;; Defined at:
  1673 ;;		line 248 in file "mcc_generated_files/pin_manager.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  InterruptHan    2   36[COMRAM] PTR void 
  1676 ;;		 -> IOCB5_DefaultInterruptHandler(1), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1691 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1692 ;;Total ram usage:        2 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    6
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_PIN_MANAGER_Initialize
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text8
  1703  0009AC                     __ptext8:
  1704                           	opt stack 0
  1705  0009AC                     _IOCB5_SetInterruptHandler:
  1706                           	opt stack 22
  1707                           
  1708                           ;pin_manager.c: 249: IOCB5_InterruptHandler = InterruptHandler;
  1709                           
  1710                           ;incstack = 0
  1711  0009AC  C025  F031         	movff	IOCB5_SetInterruptHandler@InterruptHandler,_IOCB5_InterruptHandler
  1712  0009B0  C026  F032         	movff	IOCB5_SetInterruptHandler@InterruptHandler+1,_IOCB5_InterruptHandler+1
  1713  0009B4  0012               	return		;funcret
  1714  0009B6                     __end_of_IOCB5_SetInterruptHandler:
  1715                           	opt stack 0
  1716                           tblptru	equ	0xFF8
  1717                           tblptrh	equ	0xFF7
  1718                           tblptrl	equ	0xFF6
  1719                           tablat	equ	0xFF5
  1720                           intcon	equ	0xFF2
  1721                           wreg	equ	0xFE8
  1722                           
  1723 ;; *************** function _IOCB4_SetInterruptHandler *****************
  1724 ;; Defined at:
  1725 ;;		line 219 in file "mcc_generated_files/pin_manager.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  InterruptHan    2   36[COMRAM] PTR void 
  1728 ;;		 -> IOCB4_DefaultInterruptHandler(1), 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1744 ;;Total ram usage:        2 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    6
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_PIN_MANAGER_Initialize
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text9
  1755  0009B6                     __ptext9:
  1756                           	opt stack 0
  1757  0009B6                     _IOCB4_SetInterruptHandler:
  1758                           	opt stack 22
  1759                           
  1760                           ;pin_manager.c: 220: IOCB4_InterruptHandler = InterruptHandler;
  1761                           
  1762                           ;incstack = 0
  1763  0009B6  C025  F033         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  1764  0009BA  C026  F034         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  1765  0009BE  0012               	return		;funcret
  1766  0009C0                     __end_of_IOCB4_SetInterruptHandler:
  1767                           	opt stack 0
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           intcon	equ	0xFF2
  1773                           wreg	equ	0xFE8
  1774                           
  1775 ;; *************** function _OSCILLATOR_Initialize *****************
  1776 ;; Defined at:
  1777 ;;		line 122 in file "mcc_generated_files/mcc.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1795 ;;Total ram usage:        0 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; Hardware stack levels required when called:    6
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_SYSTEM_Initialize
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text10
  1806  000990                     __ptext10:
  1807                           	opt stack 0
  1808  000990                     _OSCILLATOR_Initialize:
  1809                           	opt stack 23
  1810                           
  1811                           ;mcc.c: 125: OSCCON = 0x60;
  1812                           
  1813                           ;incstack = 0
  1814  000990  0E60               	movlw	96
  1815  000992  6ED3               	movwf	4051,c	;volatile
  1816                           
  1817                           ;mcc.c: 127: OSCCON2 = 0x00;
  1818  000994  0E00               	movlw	0
  1819  000996  6ED2               	movwf	4050,c	;volatile
  1820                           
  1821                           ;mcc.c: 129: OSCTUNE = 0x00;
  1822  000998  0E00               	movlw	0
  1823  00099A  6E9B               	movwf	3995,c	;volatile
  1824                           
  1825                           ;mcc.c: 131: REFOCON = 0x00;
  1826  00099C  0E00               	movlw	0
  1827  00099E  6E9A               	movwf	3994,c	;volatile
  1828  0009A0  0012               	return		;funcret
  1829  0009A2                     __end_of_OSCILLATOR_Initialize:
  1830                           	opt stack 0
  1831                           tblptru	equ	0xFF8
  1832                           tblptrh	equ	0xFF7
  1833                           tblptrl	equ	0xFF6
  1834                           tablat	equ	0xFF5
  1835                           intcon	equ	0xFF2
  1836                           wreg	equ	0xFE8
  1837                           
  1838 ;; *************** function _INTERRUPT_Initialize *****************
  1839 ;; Defined at:
  1840 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		None
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1858 ;;Total ram usage:        0 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    6
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_SYSTEM_Initialize
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text11
  1869  0009D2                     __ptext11:
  1870                           	opt stack 0
  1871  0009D2                     _INTERRUPT_Initialize:
  1872                           	opt stack 23
  1873                           
  1874                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1875                           
  1876                           ;incstack = 0
  1877  0009D2  9ED0               	bcf	4048,7,c	;volatile
  1878  0009D4  0012               	return		;funcret
  1879  0009D6                     __end_of_INTERRUPT_Initialize:
  1880                           	opt stack 0
  1881                           tblptru	equ	0xFF8
  1882                           tblptrh	equ	0xFF7
  1883                           tblptrl	equ	0xFF6
  1884                           tablat	equ	0xFF5
  1885                           intcon	equ	0xFF2
  1886                           wreg	equ	0xFE8
  1887                           
  1888 ;; *************** function _EPWM1_Initialize *****************
  1889 ;; Defined at:
  1890 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1908 ;;Total ram usage:        0 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    6
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_SYSTEM_Initialize
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text12
  1919  000946                     __ptext12:
  1920                           	opt stack 0
  1921  000946                     _EPWM1_Initialize:
  1922                           	opt stack 23
  1923                           
  1924                           ;epwm1.c: 68: CCP1CON = 0x3C;
  1925                           
  1926                           ;incstack = 0
  1927  000946  0E3C               	movlw	60
  1928  000948  6EBB               	movwf	4027,c	;volatile
  1929                           
  1930                           ;epwm1.c: 71: ECCP1AS = 0x00;
  1931  00094A  0E00               	movlw	0
  1932  00094C  6EBF               	movwf	4031,c	;volatile
  1933                           
  1934                           ;epwm1.c: 74: PSTR1CON = 0x0F;
  1935  00094E  0E0F               	movlw	15
  1936  000950  6E9C               	movwf	3996,c	;volatile
  1937                           
  1938                           ;epwm1.c: 77: ECCP1DEL = 0x80;
  1939  000952  0E80               	movlw	128
  1940  000954  6EBE               	movwf	4030,c	;volatile
  1941                           
  1942                           ;epwm1.c: 80: CCPR1L = 0x18;
  1943  000956  0E18               	movlw	24
  1944  000958  6EBC               	movwf	4028,c	;volatile
  1945                           
  1946                           ;epwm1.c: 83: CCPR1H = 0x00;
  1947  00095A  0E00               	movlw	0
  1948  00095C  6EBD               	movwf	4029,c	;volatile
  1949                           
  1950                           ;epwm1.c: 87: CCPTMRSbits.C1TSEL = 0x1;
  1951  00095E  8099               	bsf	3993,0,c	;volatile
  1952  000960  0012               	return		;funcret
  1953  000962                     __end_of_EPWM1_Initialize:
  1954                           	opt stack 0
  1955                           tblptru	equ	0xFF8
  1956                           tblptrh	equ	0xFF7
  1957                           tblptrl	equ	0xFF6
  1958                           tablat	equ	0xFF5
  1959                           intcon	equ	0xFF2
  1960                           wreg	equ	0xFE8
  1961                           
  1962 ;; *************** function _Initialize_Menus *****************
  1963 ;; Defined at:
  1964 ;;		line 8 in file "screen_controls.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1982 ;;Total ram usage:        0 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:   11
  1985 ;; This function calls:
  1986 ;;		_GLCD_GoTo
  1987 ;;		_GLCD_WriteString
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text13
  1994  0000B8                     __ptext13:
  1995                           	opt stack 0
  1996  0000B8                     _Initialize_Menus:
  1997                           	opt stack 19
  1998                           
  1999                           ;screen_controls.c: 12: GLCD_GoTo(xMenuStart, setRunTime);
  2000                           
  2001                           ;incstack = 0
  2002  0000B8  0E00               	movlw	0
  2003  0000BA  0100               	movlb	0	; () banked
  2004  0000BC  6F63               	movwf	GLCD_GoTo@y& (0+255),b
  2005  0000BE  503A               	movf	_xMenuStart,w,c
  2006  0000C0  ECB8  F000         	call	_GLCD_GoTo
  2007                           
  2008                           ;screen_controls.c: 13: GLCD_WriteString("RunTime");
  2009  0000C4  0EF6               	movlw	low STR_1
  2010  0000C6  0100               	movlb	0	; () banked
  2011  0000C8  6F65               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2012  0000CA  0EFF               	movlw	high STR_1
  2013  0000CC  6F66               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2014  0000CE  ECDE  F003         	call	_GLCD_WriteString	;wreg free
  2015                           
  2016                           ;screen_controls.c: 15: GLCD_GoTo(xMenuStart, setBrightness);
  2017  0000D2  0E01               	movlw	1
  2018  0000D4  0100               	movlb	0	; () banked
  2019  0000D6  6F63               	movwf	GLCD_GoTo@y& (0+255),b
  2020  0000D8  503A               	movf	_xMenuStart,w,c
  2021  0000DA  ECB8  F000         	call	_GLCD_GoTo
  2022                           
  2023                           ;screen_controls.c: 16: GLCD_WriteString("Brightness");
  2024  0000DE  0EC5               	movlw	low STR_2
  2025  0000E0  0100               	movlb	0	; () banked
  2026  0000E2  6F65               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2027  0000E4  0EFF               	movlw	high STR_2
  2028  0000E6  6F66               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2029  0000E8  ECDE  F003         	call	_GLCD_WriteString	;wreg free
  2030                           
  2031                           ;screen_controls.c: 18: GLCD_GoTo(xMenuStart, setStartColors);
  2032  0000EC  0E02               	movlw	2
  2033  0000EE  0100               	movlb	0	; () banked
  2034  0000F0  6F63               	movwf	GLCD_GoTo@y& (0+255),b
  2035  0000F2  503A               	movf	_xMenuStart,w,c
  2036  0000F4  ECB8  F000         	call	_GLCD_GoTo
  2037                           
  2038                           ;screen_controls.c: 19: GLCD_WriteString("StartColor");
  2039  0000F8  0EBA               	movlw	low STR_3
  2040  0000FA  0100               	movlb	0	; () banked
  2041  0000FC  6F65               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2042  0000FE  0EFF               	movlw	high STR_3
  2043  000100  6F66               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2044  000102  ECDE  F003         	call	_GLCD_WriteString	;wreg free
  2045                           
  2046                           ;screen_controls.c: 21: GLCD_GoTo(xMenuStart, setFinishedColors);
  2047  000106  0E03               	movlw	3
  2048  000108  0100               	movlb	0	; () banked
  2049  00010A  6F63               	movwf	GLCD_GoTo@y& (0+255),b
  2050  00010C  503A               	movf	_xMenuStart,w,c
  2051  00010E  ECB8  F000         	call	_GLCD_GoTo
  2052                           
  2053                           ;screen_controls.c: 22: GLCD_WriteString("EndColor");
  2054  000112  0EED               	movlw	low STR_4
  2055  000114  0100               	movlb	0	; () banked
  2056  000116  6F65               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2057  000118  0EFF               	movlw	high STR_4
  2058  00011A  6F66               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2059  00011C  ECDE  F003         	call	_GLCD_WriteString	;wreg free
  2060                           
  2061                           ;screen_controls.c: 24: GLCD_GoTo(xMenuStart, setBacklightBrightness);
  2062  000120  0E04               	movlw	4
  2063  000122  0100               	movlb	0	; () banked
  2064  000124  6F63               	movwf	GLCD_GoTo@y& (0+255),b
  2065  000126  503A               	movf	_xMenuStart,w,c
  2066  000128  ECB8  F000         	call	_GLCD_GoTo
  2067                           
  2068                           ;screen_controls.c: 25: GLCD_WriteString("Backlight");
  2069  00012C  0EDA               	movlw	low STR_5
  2070  00012E  0100               	movlb	0	; () banked
  2071  000130  6F65               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2072  000132  0EFF               	movlw	high STR_5
  2073  000134  6F66               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2074  000136  ECDE  F003         	call	_GLCD_WriteString	;wreg free
  2075                           
  2076                           ;screen_controls.c: 27: GLCD_GoTo(xMenuStart, selectState);
  2077  00013A  0E05               	movlw	5
  2078  00013C  0100               	movlb	0	; () banked
  2079  00013E  6F63               	movwf	GLCD_GoTo@y& (0+255),b
  2080  000140  503A               	movf	_xMenuStart,w,c
  2081  000142  ECB8  F000         	call	_GLCD_GoTo
  2082                           
  2083                           ;screen_controls.c: 28: GLCD_WriteString("SelState");
  2084  000146  0EE4               	movlw	low STR_6
  2085  000148  0100               	movlb	0	; () banked
  2086  00014A  6F65               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2087  00014C  0EFF               	movlw	high STR_6
  2088  00014E  6F66               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2089  000150  ECDE  F003         	call	_GLCD_WriteString	;wreg free
  2090                           
  2091                           ;screen_controls.c: 30: GLCD_GoTo(xMenuStart, saveState);
  2092  000154  0E06               	movlw	6
  2093  000156  0100               	movlb	0	; () banked
  2094  000158  6F63               	movwf	GLCD_GoTo@y& (0+255),b
  2095  00015A  503A               	movf	_xMenuStart,w,c
  2096  00015C  ECB8  F000         	call	_GLCD_GoTo
  2097                           
  2098                           ;screen_controls.c: 31: GLCD_WriteString("SaveState");
  2099  000160  0ED0               	movlw	low STR_7
  2100  000162  0100               	movlb	0	; () banked
  2101  000164  6F65               	movwf	GLCD_WriteString@stringToWrite& (0+255),b
  2102  000166  0EFF               	movlw	high STR_7
  2103  000168  6F66               	movwf	(GLCD_WriteString@stringToWrite+1)& (0+255),b
  2104  00016A  ECDE  F003         	call	_GLCD_WriteString	;wreg free
  2105  00016E  0012               	return		;funcret
  2106  000170                     __end_of_Initialize_Menus:
  2107                           	opt stack 0
  2108                           tblptru	equ	0xFF8
  2109                           tblptrh	equ	0xFF7
  2110                           tblptrl	equ	0xFF6
  2111                           tablat	equ	0xFF5
  2112                           intcon	equ	0xFF2
  2113                           wreg	equ	0xFE8
  2114                           
  2115 ;; *************** function _GLCD_WriteString *****************
  2116 ;; Defined at:
  2117 ;;		line 70 in file "ks0108lib/KS0108.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  stringToWrit    2    5[BANK0 ] PTR unsigned char 
  2120 ;;		 -> STR_7(10), STR_6(9), STR_5(10), STR_4(9), 
  2121 ;;		 -> STR_3(11), STR_2(11), STR_1(8), 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2133 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2136 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2137 ;;Total ram usage:        2 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:   10
  2140 ;; This function calls:
  2141 ;;		_GLCD_WriteChar
  2142 ;; This function is called by:
  2143 ;;		_Initialize_Menus
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text14
  2148  0007BC                     __ptext14:
  2149                           	opt stack 0
  2150  0007BC                     _GLCD_WriteString:
  2151                           	opt stack 19
  2152                           
  2153                           ;KS0108.c: 72: while(*stringToWrite)
  2154                           
  2155                           ;incstack = 0
  2156  0007BC  D00C               	goto	l454
  2157  0007BE                     
  2158                           ;KS0108.c: 73: GLCD_WriteChar(*stringToWrite++);
  2159  0007BE  C065  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  2160  0007C2  C066  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  2161  0007C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2162  0007C6  6AF8               	clrf	tblptru,c
  2163  0007C8                     	endif
  2164  0007C8                     	if	0	;tblptru may be non-zero
  2165  0007C8                     	endif
  2166  0007C8  0008               	tblrd		*
  2167  0007CA  50F5               	movf	tablat,w,c
  2168  0007CC  EC92  F002         	call	_GLCD_WriteChar
  2169  0007D0  0100               	movlb	0	; () banked
  2170  0007D2  4B65               	infsnz	GLCD_WriteString@stringToWrite& (0+255),f,b
  2171  0007D4  2B66               	incf	(GLCD_WriteString@stringToWrite+1)& (0+255),f,b
  2172  0007D6                     l454:
  2173                           
  2174                           ; BSR set to: 0
  2175  0007D6  C065  FFF6         	movff	GLCD_WriteString@stringToWrite,tblptrl
  2176  0007DA  C066  FFF7         	movff	GLCD_WriteString@stringToWrite+1,tblptrh
  2177  0007DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2178  0007DE  6AF8               	clrf	tblptru,c
  2179  0007E0                     	endif
  2180  0007E0                     	if	0	;tblptru may be non-zero
  2181  0007E0                     	endif
  2182  0007E0  0008               	tblrd		*
  2183  0007E2  50F5               	movf	tablat,w,c
  2184  0007E4  0900               	iorlw	0
  2185  0007E6  B4D8               	btfsc	status,2,c
  2186  0007E8  0012               	return	
  2187  0007EA  D7E9               	goto	l455
  2188  0007EC                     __end_of_GLCD_WriteString:
  2189                           	opt stack 0
  2190                           tblptru	equ	0xFF8
  2191                           tblptrh	equ	0xFF7
  2192                           tblptrl	equ	0xFF6
  2193                           tablat	equ	0xFF5
  2194                           intcon	equ	0xFF2
  2195                           wreg	equ	0xFE8
  2196                           status	equ	0xFD8
  2197                           
  2198 ;; *************** function _GLCD_WriteChar *****************
  2199 ;; Defined at:
  2200 ;;		line 56 in file "ks0108lib/KS0108.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  charToWrite     1    wreg     unsigned char 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  charToWrite     1    2[BANK0 ] unsigned char 
  2205 ;;  i               2    3[BANK0 ] int 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2216 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2218 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2219 ;;Total ram usage:        3 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    9
  2222 ;; This function calls:
  2223 ;;		_GLCD_WriteData
  2224 ;; This function is called by:
  2225 ;;		_GLCD_WriteString
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text15
  2230  000524                     __ptext15:
  2231                           	opt stack 0
  2232  000524                     _GLCD_WriteChar:
  2233                           	opt stack 19
  2234                           
  2235                           ;incstack = 0
  2236                           ;GLCD_WriteChar@charToWrite stored from wreg
  2237  000524  0100               	movlb	0	; () banked
  2238  000526  6F62               	movwf	GLCD_WriteChar@charToWrite& (0+255),b
  2239                           
  2240                           ;KS0108.c: 58: int i;
  2241                           ;KS0108.c: 59: charToWrite -= 32;
  2242  000528  0E20               	movlw	32
  2243  00052A  0100               	movlb	0	; () banked
  2244  00052C  5F62               	subwf	GLCD_WriteChar@charToWrite& (0+255),f,b
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
  2248  00052E  0E00               	movlw	0
  2249  000530  6F64               	movwf	(GLCD_WriteChar@i+1)& (0+255),b
  2250  000532  0E00               	movlw	0
  2251  000534  6F63               	movwf	GLCD_WriteChar@i& (0+255),b
  2252  000536                     l3028:
  2253                           
  2254                           ; BSR set to: 0
  2255  000536  BF64               	btfsc	(GLCD_WriteChar@i+1)& (0+255),7,b
  2256  000538  D006               	goto	l449
  2257  00053A  5164               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  2258  00053C  E11B               	bnz	l3038
  2259  00053E  0E05               	movlw	5
  2260  000540  5D63               	subwf	GLCD_WriteChar@i& (0+255),w,b
  2261  000542  B0D8               	btfsc	status,0,c
  2262  000544  D017               	goto	u1710
  2263  000546                     l449:
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;KS0108.c: 61: {
  2267                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
  2268                           
  2269                           ; BSR set to: 0
  2270  000546  5162               	movf	GLCD_WriteChar@charToWrite& (0+255),w,b
  2271  000548  0D05               	mullw	5
  2272  00054A  5163               	movf	GLCD_WriteChar@i& (0+255),w,b
  2273  00054C  26F3               	addwf	prodl,f,c
  2274  00054E  5164               	movf	(GLCD_WriteChar@i+1)& (0+255),w,b
  2275  000550  22F4               	addwfc	prodh,f,c
  2276  000552  0ED9               	movlw	low _font5x8
  2277  000554  24F3               	addwf	prodl,w,c
  2278  000556  6EF6               	movwf	tblptrl,c
  2279  000558  0EFD               	movlw	high _font5x8
  2280  00055A  20F4               	addwfc	prodh,w,c
  2281  00055C  6EF7               	movwf	tblptrh,c
  2282  00055E                     	if	1	;There are 3 active tblptr bytes
  2283  00055E  6AF8               	clrf	tblptru,c
  2284  000560  0E00               	movlw	low (__mediumconst shr (0+16))
  2285  000562  22F8               	addwfc	tblptru,f,c
  2286  000564                     	endif
  2287  000564  0008               	tblrd		*
  2288  000566  50F5               	movf	tablat,w,c
  2289  000568  ECF9  F001         	call	_GLCD_WriteData
  2290  00056C  0100               	movlb	0	; () banked
  2291  00056E  4B63               	infsnz	GLCD_WriteChar@i& (0+255),f,b
  2292  000570  2B64               	incf	(GLCD_WriteChar@i+1)& (0+255),f,b
  2293  000572  D7E1               	goto	l3028
  2294  000574                     u1710:
  2295  000574                     l3038:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;KS0108.c: 64: }
  2299                           ;KS0108.c: 65: GLCD_WriteData(0x00);
  2300  000574  0E00               	movlw	0
  2301  000576  ECF9  F001         	call	_GLCD_WriteData
  2302  00057A  0012               	return		;funcret
  2303  00057C                     __end_of_GLCD_WriteChar:
  2304                           	opt stack 0
  2305                           tblptru	equ	0xFF8
  2306                           tblptrh	equ	0xFF7
  2307                           tblptrl	equ	0xFF6
  2308                           tablat	equ	0xFF5
  2309                           prodh	equ	0xFF4
  2310                           prodl	equ	0xFF3
  2311                           intcon	equ	0xFF2
  2312                           wreg	equ	0xFE8
  2313                           status	equ	0xFD8
  2314                           
  2315 ;; *************** function _GLCD_Initalize *****************
  2316 ;; Defined at:
  2317 ;;		line 15 in file "ks0108lib/KS0108.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  i               1    3[BANK0 ] unsigned char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2334 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2335 ;;Total ram usage:        1 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    9
  2338 ;; This function calls:
  2339 ;;		_GLCD_InitializePorts
  2340 ;;		_GLCD_WriteCommand
  2341 ;; This function is called by:
  2342 ;;		_main
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text16
  2347  000924                     __ptext16:
  2348                           	opt stack 0
  2349  000924                     _GLCD_Initalize:
  2350                           	opt stack 21
  2351                           
  2352                           ;KS0108.c: 17: unsigned char i;
  2353                           ;KS0108.c: 18: GLCD_InitializePorts();
  2354                           
  2355                           ;incstack = 0
  2356  000924  ECE0  F004         	call	_GLCD_InitializePorts	;wreg free
  2357                           
  2358                           ;KS0108.c: 19: for(i = 0; i < 3; i++)
  2359  000928  0E00               	movlw	0
  2360  00092A  0100               	movlb	0	; () banked
  2361  00092C  6F63               	movwf	GLCD_Initalize@i& (0+255),b
  2362  00092E                     l3082:
  2363                           
  2364                           ; BSR set to: 0
  2365  00092E  0E02               	movlw	2
  2366  000930  6563               	cpfsgt	GLCD_Initalize@i& (0+255),b
  2367  000932  D001               	goto	l432
  2368  000934  0012               	return	
  2369  000936                     l432:
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;KS0108.c: 20: GLCD_WriteCommand((0x3E | 0x01), i);
  2373                           
  2374                           ; BSR set to: 0
  2375  000936  C063  F060         	movff	GLCD_Initalize@i,GLCD_WriteCommand@controller
  2376  00093A  0E3F               	movlw	63
  2377  00093C  EC74  F003         	call	_GLCD_WriteCommand
  2378  000940  0100               	movlb	0	; () banked
  2379  000942  2B63               	incf	GLCD_Initalize@i& (0+255),f,b
  2380  000944  D7F4               	goto	l3082
  2381  000946                     __end_of_GLCD_Initalize:
  2382                           	opt stack 0
  2383                           tblptru	equ	0xFF8
  2384                           tblptrh	equ	0xFF7
  2385                           tblptrl	equ	0xFF6
  2386                           tablat	equ	0xFF5
  2387                           prodh	equ	0xFF4
  2388                           prodl	equ	0xFF3
  2389                           intcon	equ	0xFF2
  2390                           wreg	equ	0xFE8
  2391                           status	equ	0xFD8
  2392                           
  2393 ;; *************** function _GLCD_InitializePorts *****************
  2394 ;; Defined at:
  2395 ;;		line 31 in file "ks0108lib/KS0108-PIC18.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2413 ;;Total ram usage:        0 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    6
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_GLCD_Initalize
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text17
  2424  0009C0                     __ptext17:
  2425                           	opt stack 0
  2426  0009C0                     _GLCD_InitializePorts:
  2427                           	opt stack 23
  2428                           
  2429                           ;KS0108-PIC18.c: 33: PORTA |= ((1 << 5) | (1 << 6) | (1 << 7));
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;incstack = 0
  2433  0009C0  0EE0               	movlw	224
  2434  0009C2  1280               	iorwf	3968,f,c	;volatile
  2435                           
  2436                           ;KS0108-PIC18.c: 34: TRISA &= ~((1 << 5) | (1 << 6) | (1 << 7) | (1 << 2) | (1 << 1) | (
      +                          1 << 3));
  2437  0009C4  0E11               	movlw	17
  2438  0009C6  1692               	andwf	3986,f,c	;volatile
  2439  0009C8  0012               	return		;funcret
  2440  0009CA                     __end_of_GLCD_InitializePorts:
  2441                           	opt stack 0
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           prodh	equ	0xFF4
  2447                           prodl	equ	0xFF3
  2448                           intcon	equ	0xFF2
  2449                           wreg	equ	0xFE8
  2450                           status	equ	0xFD8
  2451                           
  2452 ;; *************** function _GLCD_ClearScreen *****************
  2453 ;; Defined at:
  2454 ;;		line 43 in file "ks0108lib/KS0108.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  j               1    7[BANK0 ] unsigned char 
  2459 ;;  i               1    6[BANK0 ] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2470 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2472 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2473 ;;Total ram usage:        2 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:   10
  2476 ;; This function calls:
  2477 ;;		_GLCD_GoTo
  2478 ;;		_GLCD_WriteData
  2479 ;; This function is called by:
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text18
  2485  000720                     __ptext18:
  2486                           	opt stack 0
  2487  000720                     _GLCD_ClearScreen:
  2488                           	opt stack 20
  2489                           
  2490                           ;KS0108.c: 45: unsigned char i, j;
  2491                           ;KS0108.c: 46: for(j = 0; j < 64/8; j++)
  2492                           
  2493                           ;incstack = 0
  2494  000720  0E00               	movlw	0
  2495  000722  0100               	movlb	0	; () banked
  2496  000724  6F67               	movwf	GLCD_ClearScreen@j& (0+255),b
  2497  000726                     l3094:
  2498                           
  2499                           ; BSR set to: 0
  2500  000726  0E07               	movlw	7
  2501  000728  6567               	cpfsgt	GLCD_ClearScreen@j& (0+255),b
  2502  00072A  D001               	goto	l442
  2503  00072C  0012               	return	
  2504  00072E                     l442:
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;KS0108.c: 47: {
  2508                           ;KS0108.c: 48: GLCD_GoTo(0,j);
  2509                           
  2510                           ; BSR set to: 0
  2511  00072E  C067  F063         	movff	GLCD_ClearScreen@j,GLCD_GoTo@y
  2512  000732  0E00               	movlw	0
  2513  000734  ECB8  F000         	call	_GLCD_GoTo
  2514                           
  2515                           ;KS0108.c: 49: for(i = 0; i < 128; i++)
  2516  000738  0E00               	movlw	0
  2517  00073A  0100               	movlb	0	; () banked
  2518  00073C  6F66               	movwf	GLCD_ClearScreen@i& (0+255),b
  2519  00073E                     l3102:
  2520                           
  2521                           ; BSR set to: 0
  2522  00073E  0E7F               	movlw	127
  2523  000740  6566               	cpfsgt	GLCD_ClearScreen@i& (0+255),b
  2524  000742  D001               	goto	l444
  2525  000744  D006               	goto	u1810
  2526  000746                     l444:
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;KS0108.c: 50: GLCD_WriteData(0x00);
  2530                           
  2531                           ; BSR set to: 0
  2532  000746  0E00               	movlw	0
  2533  000748  ECF9  F001         	call	_GLCD_WriteData
  2534  00074C  0100               	movlb	0	; () banked
  2535  00074E  2B66               	incf	GLCD_ClearScreen@i& (0+255),f,b
  2536  000750  D7F6               	goto	l3102
  2537  000752                     u1810:
  2538                           
  2539                           ; BSR set to: 0
  2540                           
  2541                           ; BSR set to: 0
  2542  000752  2B67               	incf	GLCD_ClearScreen@j& (0+255),f,b
  2543  000754  D7E8               	goto	l3094
  2544  000756                     __end_of_GLCD_ClearScreen:
  2545                           	opt stack 0
  2546                           tblptru	equ	0xFF8
  2547                           tblptrh	equ	0xFF7
  2548                           tblptrl	equ	0xFF6
  2549                           tablat	equ	0xFF5
  2550                           prodh	equ	0xFF4
  2551                           prodl	equ	0xFF3
  2552                           intcon	equ	0xFF2
  2553                           wreg	equ	0xFE8
  2554                           status	equ	0xFD8
  2555                           
  2556 ;; *************** function _Check_Buttons *****************
  2557 ;; Defined at:
  2558 ;;		line 126 in file "main.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2576 ;;Total ram usage:        0 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:   12
  2579 ;; This function calls:
  2580 ;;		_Draw_Arrow
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text19
  2587  0005D0                     __ptext19:
  2588                           	opt stack 0
  2589  0005D0                     _Check_Buttons:
  2590                           	opt stack 18
  2591                           
  2592                           ;main.c: 132: if(!PORTBbits.RB2)
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;incstack = 0
  2596  0005D0  B481               	btfsc	3969,2,c	;volatile
  2597  0005D2  0012               	return	
  2598                           
  2599                           ;main.c: 133: {
  2600                           ;main.c: 134: if(currentContext == mainMenu)
  2601  0005D4  0100               	movlb	0	; () banked
  2602  0005D6  5170               	movf	_currentContext& (0+255),w,b
  2603  0005D8  B4D8               	btfsc	status,2,c
  2604  0005DA  D01E               	goto	l375
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;main.c: 157: else if(currentContext == startColorRed)
  2608                           
  2609                           ; BSR set to: 0
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;main.c: 155: }
  2613                           
  2614                           ; BSR set to: 0
  2615                           
  2616                           ;main.c: 154: }
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;main.c: 153: currentContext = mainMenu;
  2620                           
  2621                           ;main.c: 152: default:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;main.c: 151: currentContext = saveStateMenu;
  2625                           
  2626                           ;main.c: 150: saveState:
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;main.c: 149: currentContext = selectStateMenu;
  2630                           
  2631                           ;main.c: 148: selectState:
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;main.c: 147: currentContext = backlightMenu;
  2635                           
  2636                           ;main.c: 146: setBacklightBrightness:
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;main.c: 145: currentContext = endColorRed;
  2640                           
  2641                           ;main.c: 144: setFinishedColors:
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;main.c: 143: currentContext = startColorRed;
  2645                           
  2646                           ;main.c: 142: setStartColors:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;main.c: 141: currentContext = brightnessMenu;
  2650                           
  2651                           ;main.c: 140: setBrightness:
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;main.c: 139: currentContext = runTime;
  2655                           
  2656                           ; BSR set to: 0
  2657                           
  2658                           ;main.c: 137: {
  2659                           ;main.c: 138: setRunTime:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;main.c: 135: {
  2663                           ;main.c: 136: switch(mainState)
  2664  0005DC  0E03               	movlw	3
  2665  0005DE  1970               	xorwf	_currentContext& (0+255),w,b
  2666  0005E0  A4D8               	btfss	status,2,c
  2667  0005E2  D002               	goto	l365
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;main.c: 158: {
  2671                           ;main.c: 159: currentContext = startColorGreen;
  2672  0005E4  0E05               	movlw	5
  2673  0005E6  D019               	goto	L7
  2674  0005E8                     l365:
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;main.c: 161: else if(currentContext == startColorGreen)
  2678                           
  2679                           ; BSR set to: 0
  2680  0005E8  0E05               	movlw	5
  2681  0005EA  1970               	xorwf	_currentContext& (0+255),w,b
  2682  0005EC  A4D8               	btfss	status,2,c
  2683  0005EE  D002               	goto	l367
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;main.c: 162: {
  2687                           ;main.c: 163: currentContext = startColorBlue;
  2688  0005F0  0E04               	movlw	4
  2689  0005F2  D013               	goto	L7
  2690  0005F4                     l367:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;main.c: 165: else if(currentContext == startColorBlue)
  2694                           
  2695                           ; BSR set to: 0
  2696  0005F4  0E04               	movlw	4
  2697  0005F6  1970               	xorwf	_currentContext& (0+255),w,b
  2698  0005F8  B4D8               	btfsc	status,2,c
  2699  0005FA  D00E               	goto	l375
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;main.c: 169: else if(currentContext == endColorRed)
  2703                           
  2704                           ; BSR set to: 0
  2705                           
  2706                           ;main.c: 168: }
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;main.c: 166: {
  2710                           ;main.c: 167: currentContext = mainMenu;
  2711  0005FC  0E06               	movlw	6
  2712  0005FE  1970               	xorwf	_currentContext& (0+255),w,b
  2713  000600  A4D8               	btfss	status,2,c
  2714  000602  D002               	goto	l371
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;main.c: 170: {
  2718                           ;main.c: 171: currentContext = endColorGreen;
  2719  000604  0E08               	movlw	8
  2720  000606  D009               	goto	L7
  2721  000608                     l371:
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;main.c: 173: else if(currentContext == endColorGreen)
  2725                           
  2726                           ; BSR set to: 0
  2727  000608  0E08               	movlw	8
  2728  00060A  1970               	xorwf	_currentContext& (0+255),w,b
  2729  00060C  A4D8               	btfss	status,2,c
  2730  00060E  D002               	goto	l373
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;main.c: 174: {
  2734                           ;main.c: 175: currentContext = endColorBlue;
  2735  000610  0E07               	movlw	7
  2736  000612  D003               	goto	L7
  2737  000614                     l373:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;main.c: 177: else if(currentContext == endColorBlue)
  2741                           
  2742                           ; BSR set to: 0
  2743  000614  0E07               	movlw	7
  2744  000616  1970               	xorwf	_currentContext& (0+255),w,b
  2745  000618                     l375:
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;main.c: 181: else
  2749                           ;main.c: 182: {
  2750                           ;main.c: 183: currentContext = mainMenu;
  2751                           
  2752                           ; BSR set to: 0
  2753  000618  0E00               	movlw	0
  2754  00061A                     L7:
  2755  00061A  6F70               	movwf	_currentContext& (0+255),b
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;main.c: 184: }
  2759                           ;main.c: 186: Draw_Arrow();
  2760                           
  2761                           ; BSR set to: 0
  2762                           
  2763                           ; BSR set to: 0
  2764                           
  2765                           ; BSR set to: 0
  2766                           
  2767                           ; BSR set to: 0
  2768                           
  2769                           ; BSR set to: 0
  2770                           
  2771                           ; BSR set to: 0
  2772                           
  2773                           ; BSR set to: 0
  2774  00061C  ECC5  F003         	call	_Draw_Arrow	;wreg free
  2775  000620  0012               	return	
  2776  000622                     __end_of_Check_Buttons:
  2777                           	opt stack 0
  2778                           tblptru	equ	0xFF8
  2779                           tblptrh	equ	0xFF7
  2780                           tblptrl	equ	0xFF6
  2781                           tablat	equ	0xFF5
  2782                           prodh	equ	0xFF4
  2783                           prodl	equ	0xFF3
  2784                           intcon	equ	0xFF2
  2785                           wreg	equ	0xFE8
  2786                           status	equ	0xFD8
  2787                           
  2788 ;; *************** function _Draw_Arrow *****************
  2789 ;; Defined at:
  2790 ;;		line 36 in file "screen_controls.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;		None
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;		None
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, status,2, status,0, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2808 ;;Total ram usage:        0 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:   11
  2811 ;; This function calls:
  2812 ;;		_Clear_Arrow_Column
  2813 ;;		_Clear_Submenu_Arrows
  2814 ;;		_Draw_Submenu_Arrow
  2815 ;;		_GLCD_GoTo
  2816 ;;		_GLCD_WriteData
  2817 ;; This function is called by:
  2818 ;;		_main
  2819 ;;		_Check_Buttons
  2820 ;;		_Main_Menu_Function
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text20
  2825  00078A                     __ptext20:
  2826                           	opt stack 0
  2827  00078A                     _Draw_Arrow:
  2828                           	opt stack 19
  2829                           
  2830                           ;screen_controls.c: 39: Clear_Arrow_Column();
  2831                           
  2832                           ;incstack = 0
  2833  00078A  EC63  F002         	call	_Clear_Arrow_Column	;wreg free
  2834                           
  2835                           ;screen_controls.c: 40: GLCD_GoTo(0, mainState);
  2836  00078E  C071  F063         	movff	_mainState,GLCD_GoTo@y
  2837  000792  0E00               	movlw	0
  2838  000794  ECB8  F000         	call	_GLCD_GoTo
  2839                           
  2840                           ;screen_controls.c: 41: GLCD_WriteData(0x7E);
  2841  000798  0E7E               	movlw	126
  2842  00079A  ECF9  F001         	call	_GLCD_WriteData
  2843                           
  2844                           ;screen_controls.c: 42: GLCD_WriteData(0x3C);
  2845  00079E  0E3C               	movlw	60
  2846  0007A0  ECF9  F001         	call	_GLCD_WriteData
  2847                           
  2848                           ;screen_controls.c: 43: GLCD_WriteData(0x18);
  2849  0007A4  0E18               	movlw	24
  2850  0007A6  ECF9  F001         	call	_GLCD_WriteData
  2851                           
  2852                           ;screen_controls.c: 46: Clear_Submenu_Arrows();
  2853  0007AA  ECF2  F004         	call	_Clear_Submenu_Arrows	;wreg free
  2854                           
  2855                           ;screen_controls.c: 48: if(currentContext != mainMenu)
  2856  0007AE  0100               	movlb	0	; () banked
  2857  0007B0  5170               	movf	_currentContext& (0+255),w,b
  2858  0007B2  B4D8               	btfsc	status,2,c
  2859  0007B4  0012               	return	
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;screen_controls.c: 49: {
  2863                           ;screen_controls.c: 50: Draw_Submenu_Arrow();
  2864  0007B6  ECF1  F004         	call	_Draw_Submenu_Arrow	;wreg free
  2865  0007BA  0012               	return	
  2866  0007BC                     __end_of_Draw_Arrow:
  2867                           	opt stack 0
  2868                           tblptru	equ	0xFF8
  2869                           tblptrh	equ	0xFF7
  2870                           tblptrl	equ	0xFF6
  2871                           tablat	equ	0xFF5
  2872                           prodh	equ	0xFF4
  2873                           prodl	equ	0xFF3
  2874                           intcon	equ	0xFF2
  2875                           wreg	equ	0xFE8
  2876                           status	equ	0xFD8
  2877                           
  2878 ;; *************** function _Draw_Submenu_Arrow *****************
  2879 ;; Defined at:
  2880 ;;		line 81 in file "screen_controls.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		None
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2898 ;;Total ram usage:        0 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    6
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_Draw_Arrow
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text21
  2909  0009E2                     __ptext21:
  2910                           	opt stack 0
  2911  0009E2                     _Draw_Submenu_Arrow:
  2912                           	opt stack 23
  2913                           
  2914                           ;incstack = 0
  2915  0009E2  0012               	return		;funcret
  2916  0009E4                     __end_of_Draw_Submenu_Arrow:
  2917                           	opt stack 0
  2918                           tblptru	equ	0xFF8
  2919                           tblptrh	equ	0xFF7
  2920                           tblptrl	equ	0xFF6
  2921                           tablat	equ	0xFF5
  2922                           prodh	equ	0xFF4
  2923                           prodl	equ	0xFF3
  2924                           intcon	equ	0xFF2
  2925                           wreg	equ	0xFE8
  2926                           status	equ	0xFD8
  2927                           
  2928 ;; *************** function _Clear_Submenu_Arrows *****************
  2929 ;; Defined at:
  2930 ;;		line 74 in file "screen_controls.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;		None
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      void 
  2937 ;; Registers used:
  2938 ;;		None
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2948 ;;Total ram usage:        0 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    6
  2951 ;; This function calls:
  2952 ;;		Nothing
  2953 ;; This function is called by:
  2954 ;;		_Draw_Arrow
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text22
  2959  0009E4                     __ptext22:
  2960                           	opt stack 0
  2961  0009E4                     _Clear_Submenu_Arrows:
  2962                           	opt stack 23
  2963                           
  2964                           ;incstack = 0
  2965  0009E4  0012               	return		;funcret
  2966  0009E6                     __end_of_Clear_Submenu_Arrows:
  2967                           	opt stack 0
  2968                           tblptru	equ	0xFF8
  2969                           tblptrh	equ	0xFF7
  2970                           tblptrl	equ	0xFF6
  2971                           tablat	equ	0xFF5
  2972                           prodh	equ	0xFF4
  2973                           prodl	equ	0xFF3
  2974                           intcon	equ	0xFF2
  2975                           wreg	equ	0xFE8
  2976                           status	equ	0xFD8
  2977                           
  2978 ;; *************** function _Clear_Arrow_Column *****************
  2979 ;; Defined at:
  2980 ;;		line 55 in file "screen_controls.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  i               1   14[BANK0 ] unsigned char 
  2985 ;;  j               1   13[BANK0 ] unsigned char 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2996 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2997 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2998 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2999 ;;Total ram usage:        9 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:   10
  3002 ;; This function calls:
  3003 ;;		_GLCD_GoTo
  3004 ;;		_GLCD_WriteData
  3005 ;; This function is called by:
  3006 ;;		_Draw_Arrow
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text23
  3011  0004C6                     __ptext23:
  3012                           	opt stack 0
  3013  0004C6                     _Clear_Arrow_Column:
  3014                           	opt stack 19
  3015                           
  3016                           ;screen_controls.c: 57: unsigned char i, j;
  3017                           ;screen_controls.c: 59: for(i = 0; i < 64/8; i++)
  3018                           
  3019                           ;incstack = 0
  3020  0004C6  0E00               	movlw	0
  3021  0004C8  0100               	movlb	0	; () banked
  3022  0004CA  6F6E               	movwf	Clear_Arrow_Column@i& (0+255),b
  3023  0004CC                     l3042:
  3024                           
  3025                           ; BSR set to: 0
  3026  0004CC  0E07               	movlw	7
  3027  0004CE  656E               	cpfsgt	Clear_Arrow_Column@i& (0+255),b
  3028  0004D0  D001               	goto	l559
  3029  0004D2  0012               	return	
  3030  0004D4                     l559:
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;screen_controls.c: 60: {
  3034                           ;screen_controls.c: 61: GLCD_GoTo(0, i);
  3035                           
  3036                           ; BSR set to: 0
  3037  0004D4  C06E  F063         	movff	Clear_Arrow_Column@i,GLCD_GoTo@y
  3038  0004D8  0E00               	movlw	0
  3039  0004DA  ECB8  F000         	call	_GLCD_GoTo
  3040                           
  3041                           ;screen_controls.c: 63: for(j = 0; j < (xMenuStart - 1); j++)
  3042  0004DE  0E00               	movlw	0
  3043  0004E0  0100               	movlb	0	; () banked
  3044  0004E2  6F6D               	movwf	Clear_Arrow_Column@j& (0+255),b
  3045  0004E4  D005               	goto	l561
  3046  0004E6                     
  3047                           ; BSR set to: 0
  3048                           ;screen_controls.c: 64: {
  3049                           ;screen_controls.c: 65: GLCD_WriteData(0x00);
  3050                           
  3051                           ; BSR set to: 0
  3052  0004E6  0E00               	movlw	0
  3053  0004E8  ECF9  F001         	call	_GLCD_WriteData
  3054  0004EC  0100               	movlb	0	; () banked
  3055  0004EE  2B6D               	incf	Clear_Arrow_Column@j& (0+255),f,b
  3056  0004F0                     l561:
  3057                           
  3058                           ; BSR set to: 0
  3059                           
  3060                           ; BSR set to: 0
  3061  0004F0  0EFF               	movlw	255
  3062  0004F2  6F66               	movwf	??_Clear_Arrow_Column& (0+255),b
  3063  0004F4  0EFF               	movlw	255
  3064  0004F6  6F67               	movwf	(??_Clear_Arrow_Column+1)& (0+255),b
  3065  0004F8  503A               	movf	_xMenuStart,w,c
  3066  0004FA  6F68               	movwf	(??_Clear_Arrow_Column+2)& (0+255),b
  3067  0004FC  6B69               	clrf	(??_Clear_Arrow_Column+3)& (0+255),b
  3068  0004FE  5166               	movf	??_Clear_Arrow_Column& (0+255),w,b
  3069  000500  2768               	addwf	(??_Clear_Arrow_Column+2)& (0+255),f,b
  3070  000502  5167               	movf	(??_Clear_Arrow_Column+1)& (0+255),w,b
  3071  000504  2369               	addwfc	(??_Clear_Arrow_Column+3)& (0+255),f,b
  3072  000506  516D               	movf	Clear_Arrow_Column@j& (0+255),w,b
  3073  000508  6F6A               	movwf	(??_Clear_Arrow_Column+4)& (0+255),b
  3074  00050A  6B6B               	clrf	(??_Clear_Arrow_Column+5)& (0+255),b
  3075  00050C  5168               	movf	(??_Clear_Arrow_Column+2)& (0+255),w,b
  3076  00050E  5D6A               	subwf	(??_Clear_Arrow_Column+4)& (0+255),w,b
  3077  000510  516B               	movf	(??_Clear_Arrow_Column+5)& (0+255),w,b
  3078  000512  0A80               	xorlw	128
  3079  000514  6F6C               	movwf	(??_Clear_Arrow_Column+6)& (0+255),b
  3080  000516  5169               	movf	(??_Clear_Arrow_Column+3)& (0+255),w,b
  3081  000518  0A80               	xorlw	128
  3082  00051A  596C               	subwfb	(??_Clear_Arrow_Column+6)& (0+255),w,b
  3083  00051C  A0D8               	btfss	status,0,c
  3084  00051E  D7E3               	goto	l562
  3085                           
  3086                           ; BSR set to: 0
  3087                           
  3088                           ; BSR set to: 0
  3089  000520  2B6E               	incf	Clear_Arrow_Column@i& (0+255),f,b
  3090  000522  D7D4               	goto	l3042
  3091  000524                     __end_of_Clear_Arrow_Column:
  3092                           	opt stack 0
  3093                           tblptru	equ	0xFF8
  3094                           tblptrh	equ	0xFF7
  3095                           tblptrl	equ	0xFF6
  3096                           tablat	equ	0xFF5
  3097                           prodh	equ	0xFF4
  3098                           prodl	equ	0xFF3
  3099                           intcon	equ	0xFF2
  3100                           wreg	equ	0xFE8
  3101                           status	equ	0xFD8
  3102                           
  3103 ;; *************** function _GLCD_WriteData *****************
  3104 ;; Defined at:
  3105 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  dataToWrite     1    wreg     unsigned char 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  dataToWrite     1    1[BANK0 ] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3120 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3121 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3122 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3123 ;;Total ram usage:        2 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    8
  3126 ;; This function calls:
  3127 ;;		_GLCD_Delay
  3128 ;;		_GLCD_DisableController
  3129 ;;		_GLCD_EnableController
  3130 ;;		_GLCD_ReadStatus
  3131 ;;		___awdiv
  3132 ;; This function is called by:
  3133 ;;		_GLCD_ClearScreen
  3134 ;;		_GLCD_WriteChar
  3135 ;;		_Draw_Arrow
  3136 ;;		_Clear_Arrow_Column
  3137 ;;		_GLCD_SetPixel
  3138 ;;		_GLCD_Bitmap
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text24
  3143  0003F2                     __ptext24:
  3144                           	opt stack 0
  3145  0003F2                     _GLCD_WriteData:
  3146                           	opt stack 19
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;incstack = 0
  3150                           ;GLCD_WriteData@dataToWrite stored from wreg
  3151  0003F2  0100               	movlb	0	; () banked
  3152  0003F4  6F61               	movwf	GLCD_WriteData@dataToWrite& (0+255),b
  3153  0003F6                     
  3154                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  3155  0003F6  C036  F025         	movff	_screen_x,___awdiv@dividend
  3156  0003FA  6A26               	clrf	___awdiv@dividend+1,c
  3157  0003FC  0E00               	movlw	0
  3158  0003FE  6E28               	movwf	___awdiv@divisor+1,c
  3159  000400  0E40               	movlw	64
  3160  000402  6E27               	movwf	___awdiv@divisor,c
  3161  000404  ECFB  F000         	call	___awdiv	;wreg free
  3162  000408  5025               	movf	?___awdiv,w,c
  3163  00040A  EC6E  F004         	call	_GLCD_ReadStatus
  3164  00040E  0100               	movlb	0	; () banked
  3165  000410  6F60               	movwf	??_GLCD_WriteData& (0+255),b
  3166  000412  BF60               	btfsc	??_GLCD_WriteData& (0+255),7,b
  3167  000414  D7F0               	goto	l3000
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;KS0108-PIC18.c: 116: TRISC = 0x00;
  3171                           
  3172                           ; BSR set to: 0
  3173  000416  0E00               	movlw	0
  3174  000418  6E94               	movwf	3988,c	;volatile
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
  3178  00041A  9280               	bcf	3968,1,c	;volatile
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
  3182  00041C  8480               	bsf	3968,2,c	;volatile
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;KS0108-PIC18.c: 119: PORTC = dataToWrite;
  3186  00041E  C061  FF82         	movff	GLCD_WriteData@dataToWrite,3970	;volatile
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
  3190  000422  C036  F025         	movff	_screen_x,___awdiv@dividend
  3191  000426  6A26               	clrf	___awdiv@dividend+1,c
  3192  000428  0E00               	movlw	0
  3193  00042A  6E28               	movwf	___awdiv@divisor+1,c
  3194  00042C  0E40               	movlw	64
  3195  00042E  6E27               	movwf	___awdiv@divisor,c
  3196  000430  ECFB  F000         	call	___awdiv	;wreg free
  3197  000434  5025               	movf	?___awdiv,w,c
  3198  000436  EC22  F004         	call	_GLCD_EnableController
  3199                           
  3200                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
  3201  00043A  8680               	bsf	3968,3,c	;volatile
  3202                           
  3203                           ;KS0108-PIC18.c: 122: GLCD_Delay();
  3204  00043C  ECEB  F004         	call	_GLCD_Delay	;wreg free
  3205                           
  3206                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
  3207  000440  9680               	bcf	3968,3,c	;volatile
  3208                           
  3209                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
  3210  000442  C036  F025         	movff	_screen_x,___awdiv@dividend
  3211  000446  6A26               	clrf	___awdiv@dividend+1,c
  3212  000448  0E00               	movlw	0
  3213  00044A  6E28               	movwf	___awdiv@divisor+1,c
  3214  00044C  0E40               	movlw	64
  3215  00044E  6E27               	movwf	___awdiv@divisor,c
  3216  000450  ECFB  F000         	call	___awdiv	;wreg free
  3217  000454  5025               	movf	?___awdiv,w,c
  3218  000456  EC35  F004         	call	_GLCD_DisableController
  3219                           
  3220                           ;KS0108-PIC18.c: 125: screen_x++;
  3221  00045A  2A36               	incf	_screen_x,f,c
  3222  00045C  0012               	return		;funcret
  3223  00045E                     __end_of_GLCD_WriteData:
  3224                           	opt stack 0
  3225                           tblptru	equ	0xFF8
  3226                           tblptrh	equ	0xFF7
  3227                           tblptrl	equ	0xFF6
  3228                           tablat	equ	0xFF5
  3229                           prodh	equ	0xFF4
  3230                           prodl	equ	0xFF3
  3231                           intcon	equ	0xFF2
  3232                           wreg	equ	0xFE8
  3233                           status	equ	0xFD8
  3234                           
  3235 ;; *************** function _GLCD_GoTo *****************
  3236 ;; Defined at:
  3237 ;;		line 25 in file "ks0108lib/KS0108.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  x               1    wreg     unsigned char 
  3240 ;;  y               1    3[BANK0 ] unsigned char 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  x               1    4[BANK0 ] unsigned char 
  3243 ;;  i               1    5[BANK0 ] unsigned char 
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1    wreg      void 
  3246 ;; Registers used:
  3247 ;;		wreg, status,2, status,0, cstack
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3253 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3254 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3256 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3257 ;;Total ram usage:        3 bytes
  3258 ;; Hardware stack levels used:    1
  3259 ;; Hardware stack levels required when called:    9
  3260 ;; This function calls:
  3261 ;;		_GLCD_WriteCommand
  3262 ;;		___awdiv
  3263 ;; This function is called by:
  3264 ;;		_GLCD_ClearScreen
  3265 ;;		_Initialize_Menus
  3266 ;;		_Draw_Arrow
  3267 ;;		_Clear_Arrow_Column
  3268 ;;		_GLCD_SetPixel
  3269 ;;		_GLCD_Bitmap
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text25
  3274  000170                     __ptext25:
  3275                           	opt stack 0
  3276  000170                     _GLCD_GoTo:
  3277                           	opt stack 20
  3278                           
  3279                           ;incstack = 0
  3280                           ;GLCD_GoTo@x stored from wreg
  3281  000170  0100               	movlb	0	; () banked
  3282  000172  6F64               	movwf	GLCD_GoTo@x& (0+255),b
  3283                           
  3284                           ;KS0108.c: 27: unsigned char i;
  3285                           ;KS0108.c: 28: screen_x = x;
  3286  000174  C064  F036         	movff	GLCD_GoTo@x,_screen_x
  3287                           
  3288                           ;KS0108.c: 29: screen_y = y;
  3289  000178  C063  F035         	movff	GLCD_GoTo@y,_screen_y
  3290                           
  3291                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
  3292  00017C  0E00               	movlw	0
  3293  00017E  0100               	movlb	0	; () banked
  3294  000180  6F65               	movwf	GLCD_GoTo@i& (0+255),b
  3295  000182                     l2988:
  3296                           
  3297                           ; BSR set to: 0
  3298  000182  0E01               	movlw	1
  3299  000184  6565               	cpfsgt	GLCD_GoTo@i& (0+255),b
  3300  000186  D001               	goto	l437
  3301  000188  D014               	goto	u1680
  3302  00018A                     l437:
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;KS0108.c: 32: {
  3306                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
  3307                           
  3308                           ; BSR set to: 0
  3309  00018A  C065  F060         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  3310  00018E  0E40               	movlw	64
  3311  000190  EC74  F003         	call	_GLCD_WriteCommand
  3312                           
  3313                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
  3314  000194  C065  F060         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  3315  000198  0100               	movlb	0	; () banked
  3316  00019A  5163               	movf	GLCD_GoTo@y& (0+255),w,b
  3317  00019C  09B8               	iorlw	184
  3318  00019E  EC74  F003         	call	_GLCD_WriteCommand
  3319                           
  3320                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
  3321  0001A2  C065  F060         	movff	GLCD_GoTo@i,GLCD_WriteCommand@controller
  3322  0001A6  0EC0               	movlw	192
  3323  0001A8  EC74  F003         	call	_GLCD_WriteCommand
  3324  0001AC  0100               	movlb	0	; () banked
  3325  0001AE  2B65               	incf	GLCD_GoTo@i& (0+255),f,b
  3326  0001B0  D7E8               	goto	l2988
  3327  0001B2                     u1680:
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;KS0108.c: 36: }
  3331                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
  3332                           
  3333                           ; BSR set to: 0
  3334  0001B2  C064  F025         	movff	GLCD_GoTo@x,___awdiv@dividend
  3335  0001B6  6A26               	clrf	___awdiv@dividend+1,c
  3336  0001B8  0E00               	movlw	0
  3337  0001BA  6E28               	movwf	___awdiv@divisor+1,c
  3338  0001BC  0E40               	movlw	64
  3339  0001BE  6E27               	movwf	___awdiv@divisor,c
  3340  0001C0  ECFB  F000         	call	___awdiv	;wreg free
  3341  0001C4  5025               	movf	?___awdiv,w,c
  3342  0001C6  0100               	movlb	0	; () banked
  3343  0001C8  6F60               	movwf	GLCD_WriteCommand@controller& (0+255),b
  3344  0001CA  5164               	movf	GLCD_GoTo@x& (0+255),w,b
  3345  0001CC  0B3F               	andlw	63
  3346  0001CE  0940               	iorlw	64
  3347  0001D0  EC74  F003         	call	_GLCD_WriteCommand
  3348                           
  3349                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
  3350  0001D4  C064  F025         	movff	GLCD_GoTo@x,___awdiv@dividend
  3351  0001D8  6A26               	clrf	___awdiv@dividend+1,c
  3352  0001DA  0E00               	movlw	0
  3353  0001DC  6E28               	movwf	___awdiv@divisor+1,c
  3354  0001DE  0E40               	movlw	64
  3355  0001E0  6E27               	movwf	___awdiv@divisor,c
  3356  0001E2  ECFB  F000         	call	___awdiv	;wreg free
  3357  0001E6  5025               	movf	?___awdiv,w,c
  3358  0001E8  0100               	movlb	0	; () banked
  3359  0001EA  6F60               	movwf	GLCD_WriteCommand@controller& (0+255),b
  3360  0001EC  5163               	movf	GLCD_GoTo@y& (0+255),w,b
  3361  0001EE  09B8               	iorlw	184
  3362  0001F0  EC74  F003         	call	_GLCD_WriteCommand
  3363  0001F4  0012               	return		;funcret
  3364  0001F6                     __end_of_GLCD_GoTo:
  3365                           	opt stack 0
  3366                           tblptru	equ	0xFF8
  3367                           tblptrh	equ	0xFF7
  3368                           tblptrl	equ	0xFF6
  3369                           tablat	equ	0xFF5
  3370                           prodh	equ	0xFF4
  3371                           prodl	equ	0xFF3
  3372                           intcon	equ	0xFF2
  3373                           wreg	equ	0xFE8
  3374                           status	equ	0xFD8
  3375                           
  3376 ;; *************** function ___awdiv *****************
  3377 ;; Defined at:
  3378 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  dividend        2   36[COMRAM] int 
  3381 ;;  divisor         2   38[COMRAM] int 
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;  quotient        2   42[COMRAM] int 
  3384 ;;  sign            1   41[COMRAM] unsigned char 
  3385 ;;  counter         1   40[COMRAM] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  2   36[COMRAM] int 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3396 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3398 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3399 ;;Total ram usage:        8 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    6
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_GLCD_GoTo
  3406 ;;		_GLCD_WriteData
  3407 ;;		_GLCD_SetPixel
  3408 ;;		_GLCD_Bitmap
  3409 ;;		_GLCD_ReadData
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text26
  3414  0001F6                     __ptext26:
  3415                           	opt stack 0
  3416  0001F6                     ___awdiv:
  3417                           	opt stack 20
  3418                           
  3419                           ;incstack = 0
  3420  0001F6  0E00               	movlw	0
  3421  0001F8  6E2A               	movwf	___awdiv@sign,c
  3422  0001FA  AE28               	btfss	___awdiv@divisor+1,7,c
  3423  0001FC  D006               	goto	l738
  3424  0001FE  6C27               	negf	___awdiv@divisor,c
  3425  000200  1E28               	comf	___awdiv@divisor+1,f,c
  3426  000202  B0D8               	btfsc	status,0,c
  3427  000204  2A28               	incf	___awdiv@divisor+1,f,c
  3428  000206  0E01               	movlw	1
  3429  000208  6E2A               	movwf	___awdiv@sign,c
  3430  00020A                     l738:
  3431  00020A  AE26               	btfss	___awdiv@dividend+1,7,c
  3432  00020C  D006               	goto	l739
  3433  00020E  6C25               	negf	___awdiv@dividend,c
  3434  000210  1E26               	comf	___awdiv@dividend+1,f,c
  3435  000212  B0D8               	btfsc	status,0,c
  3436  000214  2A26               	incf	___awdiv@dividend+1,f,c
  3437  000216  0E01               	movlw	1
  3438  000218  1A2A               	xorwf	___awdiv@sign,f,c
  3439  00021A                     l739:
  3440  00021A  0E00               	movlw	0
  3441  00021C  6E2C               	movwf	___awdiv@quotient+1,c
  3442  00021E  0E00               	movlw	0
  3443  000220  6E2B               	movwf	___awdiv@quotient,c
  3444  000222  5027               	movf	___awdiv@divisor,w,c
  3445  000224  1028               	iorwf	___awdiv@divisor+1,w,c
  3446  000226  B4D8               	btfsc	status,2,c
  3447  000228  D01C               	goto	l746
  3448  00022A  0E01               	movlw	1
  3449  00022C  6E29               	movwf	___awdiv@counter,c
  3450  00022E  D004               	goto	l741
  3451  000230  90D8               	bcf	status,0,c
  3452  000232  3627               	rlcf	___awdiv@divisor,f,c
  3453  000234  3628               	rlcf	___awdiv@divisor+1,f,c
  3454  000236  2A29               	incf	___awdiv@counter,f,c
  3455  000238                     l741:
  3456  000238  AE28               	btfss	___awdiv@divisor+1,7,c
  3457  00023A  D7FA               	goto	l742
  3458  00023C                     u1640:
  3459  00023C  90D8               	bcf	status,0,c
  3460  00023E  362B               	rlcf	___awdiv@quotient,f,c
  3461  000240  362C               	rlcf	___awdiv@quotient+1,f,c
  3462  000242  5027               	movf	___awdiv@divisor,w,c
  3463  000244  5C25               	subwf	___awdiv@dividend,w,c
  3464  000246  5028               	movf	___awdiv@divisor+1,w,c
  3465  000248  5826               	subwfb	___awdiv@dividend+1,w,c
  3466  00024A  A0D8               	btfss	status,0,c
  3467  00024C  D005               	goto	l745
  3468  00024E  5027               	movf	___awdiv@divisor,w,c
  3469  000250  5E25               	subwf	___awdiv@dividend,f,c
  3470  000252  5028               	movf	___awdiv@divisor+1,w,c
  3471  000254  5A26               	subwfb	___awdiv@dividend+1,f,c
  3472  000256  802B               	bsf	___awdiv@quotient,0,c
  3473  000258                     l745:
  3474  000258  90D8               	bcf	status,0,c
  3475  00025A  3228               	rrcf	___awdiv@divisor+1,f,c
  3476  00025C  3227               	rrcf	___awdiv@divisor,f,c
  3477  00025E  2E29               	decfsz	___awdiv@counter,f,c
  3478  000260  D7ED               	goto	u1640
  3479  000262                     l746:
  3480  000262  502A               	movf	___awdiv@sign,w,c
  3481  000264  B4D8               	btfsc	status,2,c
  3482  000266  D004               	goto	l747
  3483  000268  6C2B               	negf	___awdiv@quotient,c
  3484  00026A  1E2C               	comf	___awdiv@quotient+1,f,c
  3485  00026C  B0D8               	btfsc	status,0,c
  3486  00026E  2A2C               	incf	___awdiv@quotient+1,f,c
  3487  000270                     l747:
  3488  000270  C02B  F025         	movff	___awdiv@quotient,?___awdiv
  3489  000274  C02C  F026         	movff	___awdiv@quotient+1,?___awdiv+1
  3490  000278  0012               	return	
  3491  00027A                     __end_of___awdiv:
  3492                           	opt stack 0
  3493                           tblptru	equ	0xFF8
  3494                           tblptrh	equ	0xFF7
  3495                           tblptrl	equ	0xFF6
  3496                           tablat	equ	0xFF5
  3497                           prodh	equ	0xFF4
  3498                           prodl	equ	0xFF3
  3499                           intcon	equ	0xFF2
  3500                           wreg	equ	0xFE8
  3501                           status	equ	0xFD8
  3502                           
  3503 ;; *************** function _GLCD_WriteCommand *****************
  3504 ;; Defined at:
  3505 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  commandToWri    1    wreg     unsigned char 
  3508 ;;  controller      1    0[BANK0 ] unsigned char 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  commandToWri    1    2[BANK0 ] unsigned char 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		wreg, status,2, status,0, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3520 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3521 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3522 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3523 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3524 ;;Total ram usage:        3 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    8
  3527 ;; This function calls:
  3528 ;;		_GLCD_Delay
  3529 ;;		_GLCD_DisableController
  3530 ;;		_GLCD_EnableController
  3531 ;;		_GLCD_ReadStatus
  3532 ;; This function is called by:
  3533 ;;		_GLCD_Initalize
  3534 ;;		_GLCD_GoTo
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text27
  3539  0006E8                     __ptext27:
  3540                           	opt stack 0
  3541  0006E8                     _GLCD_WriteCommand:
  3542                           	opt stack 20
  3543                           
  3544                           ;incstack = 0
  3545                           ;GLCD_WriteCommand@commandToWrite stored from wreg
  3546  0006E8  0100               	movlb	0	; () banked
  3547  0006EA  6F62               	movwf	GLCD_WriteCommand@commandToWrite& (0+255),b
  3548  0006EC                     
  3549                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
  3550  0006EC  0100               	movlb	0	; () banked
  3551  0006EE  5160               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  3552  0006F0  EC6E  F004         	call	_GLCD_ReadStatus
  3553  0006F4  0100               	movlb	0	; () banked
  3554  0006F6  6F61               	movwf	??_GLCD_WriteCommand& (0+255),b
  3555  0006F8  BF61               	btfsc	??_GLCD_WriteCommand& (0+255),7,b
  3556  0006FA  D7F8               	goto	l2918
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;KS0108-PIC18.c: 82: TRISC = 0x00;
  3560                           
  3561                           ; BSR set to: 0
  3562  0006FC  0E00               	movlw	0
  3563  0006FE  6E94               	movwf	3988,c	;volatile
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
  3567  000700  0EF9               	movlw	249
  3568  000702  1680               	andwf	3968,f,c	;volatile
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
  3572  000704  5160               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  3573  000706  EC22  F004         	call	_GLCD_EnableController
  3574                           
  3575                           ;KS0108-PIC18.c: 85: PORTC = commandToWrite;
  3576  00070A  C062  FF82         	movff	GLCD_WriteCommand@commandToWrite,3970	;volatile
  3577                           
  3578                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
  3579  00070E  8680               	bsf	3968,3,c	;volatile
  3580                           
  3581                           ;KS0108-PIC18.c: 87: GLCD_Delay();
  3582  000710  ECEB  F004         	call	_GLCD_Delay	;wreg free
  3583                           
  3584                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
  3585  000714  9680               	bcf	3968,3,c	;volatile
  3586                           
  3587                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
  3588  000716  0100               	movlb	0	; () banked
  3589  000718  5160               	movf	GLCD_WriteCommand@controller& (0+255),w,b
  3590  00071A  EC35  F004         	call	_GLCD_DisableController
  3591  00071E  0012               	return		;funcret
  3592  000720                     __end_of_GLCD_WriteCommand:
  3593                           	opt stack 0
  3594                           tblptru	equ	0xFF8
  3595                           tblptrh	equ	0xFF7
  3596                           tblptrl	equ	0xFF6
  3597                           tablat	equ	0xFF5
  3598                           prodh	equ	0xFF4
  3599                           prodl	equ	0xFF3
  3600                           intcon	equ	0xFF2
  3601                           wreg	equ	0xFE8
  3602                           status	equ	0xFD8
  3603                           
  3604 ;; *************** function _GLCD_ReadStatus *****************
  3605 ;; Defined at:
  3606 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  controller      1    wreg     unsigned char 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  controller      1   38[COMRAM] unsigned char 
  3611 ;;  status          1   37[COMRAM] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      unsigned char 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3624 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3625 ;;Total ram usage:        2 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    7
  3628 ;; This function calls:
  3629 ;;		_GLCD_Delay
  3630 ;;		_GLCD_DisableController
  3631 ;;		_GLCD_EnableController
  3632 ;; This function is called by:
  3633 ;;		_GLCD_WriteCommand
  3634 ;;		_GLCD_WriteData
  3635 ;;		_GLCD_ReadData
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text28
  3640  0008DC                     __ptext28:
  3641                           	opt stack 0
  3642  0008DC                     _GLCD_ReadStatus:
  3643                           	opt stack 19
  3644                           
  3645                           ;incstack = 0
  3646                           ;GLCD_ReadStatus@controller stored from wreg
  3647  0008DC  6E27               	movwf	GLCD_ReadStatus@controller,c
  3648                           
  3649                           ;KS0108-PIC18.c: 64: unsigned char status;
  3650                           ;KS0108-PIC18.c: 65: TRISC = 0xFF;
  3651  0008DE  6894               	setf	3988,c	;volatile
  3652                           
  3653                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
  3654  0008E0  8280               	bsf	3968,1,c	;volatile
  3655                           
  3656                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
  3657  0008E2  9480               	bcf	3968,2,c	;volatile
  3658                           
  3659                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
  3660  0008E4  5027               	movf	GLCD_ReadStatus@controller,w,c
  3661  0008E6  EC22  F004         	call	_GLCD_EnableController
  3662                           
  3663                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
  3664  0008EA  8680               	bsf	3968,3,c	;volatile
  3665                           
  3666                           ;KS0108-PIC18.c: 70: GLCD_Delay();
  3667  0008EC  ECEB  F004         	call	_GLCD_Delay	;wreg free
  3668                           
  3669                           ;KS0108-PIC18.c: 71: status = PORTC;
  3670  0008F0  CF82 F026          	movff	3970,GLCD_ReadStatus@status	;volatile
  3671                           
  3672                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
  3673  0008F4  9680               	bcf	3968,3,c	;volatile
  3674                           
  3675                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
  3676  0008F6  5027               	movf	GLCD_ReadStatus@controller,w,c
  3677  0008F8  EC35  F004         	call	_GLCD_DisableController
  3678                           
  3679                           ;KS0108-PIC18.c: 74: return status;
  3680  0008FC  5026               	movf	GLCD_ReadStatus@status,w,c
  3681  0008FE  0012               	return	
  3682  000900                     __end_of_GLCD_ReadStatus:
  3683                           	opt stack 0
  3684                           tblptru	equ	0xFF8
  3685                           tblptrh	equ	0xFF7
  3686                           tblptrl	equ	0xFF6
  3687                           tablat	equ	0xFF5
  3688                           prodh	equ	0xFF4
  3689                           prodl	equ	0xFF3
  3690                           intcon	equ	0xFF2
  3691                           wreg	equ	0xFE8
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _GLCD_EnableController *****************
  3695 ;; Defined at:
  3696 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  controller      1    wreg     unsigned char 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  controller      1   36[COMRAM] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2, status,0
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3713 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3714 ;;Total ram usage:        1 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    6
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_GLCD_ReadStatus
  3721 ;;		_GLCD_WriteCommand
  3722 ;;		_GLCD_WriteData
  3723 ;;		_GLCD_ReadData
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text29
  3728  000844                     __ptext29:
  3729                           	opt stack 0
  3730  000844                     _GLCD_EnableController:
  3731                           	opt stack 19
  3732                           
  3733                           ;incstack = 0
  3734                           ;GLCD_EnableController@controller stored from wreg
  3735  000844  6E25               	movwf	GLCD_EnableController@controller,c
  3736                           
  3737                           ;KS0108-PIC18.c: 41: switch(controller){
  3738  000846  D006               	goto	l490
  3739  000848  9A80               	bcf	3968,5,c	;volatile
  3740  00084A  0012               	return	
  3741  00084C  9C80               	bcf	3968,6,c	;volatile
  3742  00084E  0012               	return	
  3743  000850  9E80               	bcf	3968,7,c	;volatile
  3744                           
  3745                           ;KS0108-PIC18.c: 45: }
  3746  000852  0012               	return	
  3747  000854                     l490:
  3748  000854  5025               	movf	GLCD_EnableController@controller,w,c
  3749                           
  3750                           ; Switch size 1, requested type "space"
  3751                           ; Number of cases is 3, Range of values is 0 to 2
  3752                           ; switch strategies available:
  3753                           ; Name         Instructions Cycles
  3754                           ; simple_byte           10     6 (average)
  3755                           ;	Chosen strategy is simple_byte
  3756  000856  0A00               	xorlw	0	; case 0
  3757  000858  B4D8               	btfsc	status,2,c
  3758  00085A  D7F6               	goto	l491
  3759  00085C  0A01               	xorlw	1	; case 1
  3760  00085E  B4D8               	btfsc	status,2,c
  3761  000860  D7F5               	goto	l493
  3762  000862  0A03               	xorlw	3	; case 2
  3763  000864  A4D8               	btfss	status,2,c
  3764  000866  0012               	return	
  3765  000868  D7F3               	goto	l494
  3766  00086A                     __end_of_GLCD_EnableController:
  3767                           	opt stack 0
  3768                           tblptru	equ	0xFF8
  3769                           tblptrh	equ	0xFF7
  3770                           tblptrl	equ	0xFF6
  3771                           tablat	equ	0xFF5
  3772                           prodh	equ	0xFF4
  3773                           prodl	equ	0xFF3
  3774                           intcon	equ	0xFF2
  3775                           wreg	equ	0xFE8
  3776                           status	equ	0xFD8
  3777                           
  3778 ;; *************** function _GLCD_DisableController *****************
  3779 ;; Defined at:
  3780 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  controller      1    wreg     unsigned char 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  controller      1   36[COMRAM] unsigned char 
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  1    wreg      void 
  3787 ;; Registers used:
  3788 ;;		wreg, status,2, status,0
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3797 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3798 ;;Total ram usage:        1 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:    6
  3801 ;; This function calls:
  3802 ;;		Nothing
  3803 ;; This function is called by:
  3804 ;;		_GLCD_ReadStatus
  3805 ;;		_GLCD_WriteCommand
  3806 ;;		_GLCD_WriteData
  3807 ;;		_GLCD_ReadData
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text30
  3812  00086A                     __ptext30:
  3813                           	opt stack 0
  3814  00086A                     _GLCD_DisableController:
  3815                           	opt stack 19
  3816                           
  3817                           ;incstack = 0
  3818                           ;GLCD_DisableController@controller stored from wreg
  3819  00086A  6E25               	movwf	GLCD_DisableController@controller,c
  3820                           
  3821                           ;KS0108-PIC18.c: 52: switch(controller)
  3822  00086C  D006               	goto	l498
  3823  00086E  8A80               	bsf	3968,5,c	;volatile
  3824  000870  0012               	return	
  3825  000872  8C80               	bsf	3968,6,c	;volatile
  3826  000874  0012               	return	
  3827  000876  8E80               	bsf	3968,7,c	;volatile
  3828                           
  3829                           ;KS0108-PIC18.c: 57: }
  3830  000878  0012               	return	
  3831  00087A                     l498:
  3832  00087A  5025               	movf	GLCD_DisableController@controller,w,c
  3833                           
  3834                           ; Switch size 1, requested type "space"
  3835                           ; Number of cases is 3, Range of values is 0 to 2
  3836                           ; switch strategies available:
  3837                           ; Name         Instructions Cycles
  3838                           ; simple_byte           10     6 (average)
  3839                           ;	Chosen strategy is simple_byte
  3840  00087C  0A00               	xorlw	0	; case 0
  3841  00087E  B4D8               	btfsc	status,2,c
  3842  000880  D7F6               	goto	l499
  3843  000882  0A01               	xorlw	1	; case 1
  3844  000884  B4D8               	btfsc	status,2,c
  3845  000886  D7F5               	goto	l501
  3846  000888  0A03               	xorlw	3	; case 2
  3847  00088A  A4D8               	btfss	status,2,c
  3848  00088C  0012               	return	
  3849  00088E  D7F3               	goto	l502
  3850  000890                     __end_of_GLCD_DisableController:
  3851                           	opt stack 0
  3852                           tblptru	equ	0xFF8
  3853                           tblptrh	equ	0xFF7
  3854                           tblptrl	equ	0xFF6
  3855                           tablat	equ	0xFF5
  3856                           prodh	equ	0xFF4
  3857                           prodl	equ	0xFF3
  3858                           intcon	equ	0xFF2
  3859                           wreg	equ	0xFE8
  3860                           status	equ	0xFD8
  3861                           
  3862 ;; *************** function _GLCD_Delay *****************
  3863 ;; Defined at:
  3864 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;		None
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		None
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3882 ;;Total ram usage:        0 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    6
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_GLCD_ReadStatus
  3889 ;;		_GLCD_WriteCommand
  3890 ;;		_GLCD_WriteData
  3891 ;;		_GLCD_ReadData
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text31
  3896  0009D6                     __ptext31:
  3897                           	opt stack 0
  3898  0009D6                     _GLCD_Delay:
  3899                           	opt stack 19
  3900                           
  3901                           ;KS0108-PIC18.c: 26: __nop();
  3902                           
  3903                           ;incstack = 0
  3904  0009D6  F000               	nop	
  3905  0009D8  0012               	return		;funcret
  3906  0009DA                     __end_of_GLCD_Delay:
  3907                           	opt stack 0
  3908                           tblptru	equ	0xFF8
  3909                           tblptrh	equ	0xFF7
  3910                           tblptrl	equ	0xFF6
  3911                           tablat	equ	0xFF5
  3912                           prodh	equ	0xFF4
  3913                           prodl	equ	0xFF3
  3914                           intcon	equ	0xFF2
  3915                           wreg	equ	0xFE8
  3916                           status	equ	0xFD8
  3917                           
  3918 ;; *************** function _INTERRUPT_InterruptManager *****************
  3919 ;; Defined at:
  3920 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3936 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;Total ram usage:       18 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    5
  3941 ;; This function calls:
  3942 ;;		_PIN_MANAGER_IOC
  3943 ;;		_TMR0_ISR
  3944 ;; This function is called by:
  3945 ;;		Interrupt level 2
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	intcode
  3950  000008                     __pintcode:
  3951                           	opt stack 0
  3952  000008                     _INTERRUPT_InterruptManager:
  3953                           	opt stack 18
  3954                           
  3955                           ;incstack = 0
  3956  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3957  00000A  CFFA F013          	movff	pclath,??_INTERRUPT_InterruptManager
  3958  00000E  CFFB F014          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3959  000012  CFE9 F015          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3960  000016  CFEA F016          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3961  00001A  CFE1 F017          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3962  00001E  CFE2 F018          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3963  000022  CFD9 F019          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3964  000026  CFDA F01A          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3965  00002A  CFF3 F01B          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3966  00002E  CFF4 F01C          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3967  000032  CFF6 F01D          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3968  000036  CFF7 F01E          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3969  00003A  CFF8 F01F          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3970  00003E  CFF5 F020          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3971  000042  C03B  F021         	movff	btemp,??_INTERRUPT_InterruptManager+14
  3972  000046  C03C  F022         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  3973  00004A  C03D  F023         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  3974  00004E  C03E  F024         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  3975                           
  3976                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  3977  000052  BAF2               	btfsc	intcon,5,c	;volatile
  3978  000054  A4F2               	btfss	intcon,2,c	;volatile
  3979  000056  D003               	goto	i2l149
  3980                           
  3981                           ;interrupt_manager.c: 61: {
  3982                           ;interrupt_manager.c: 62: TMR0_ISR();
  3983  000058  EC0E  F004         	call	_TMR0_ISR	;wreg free
  3984                           
  3985                           ;interrupt_manager.c: 63: }
  3986  00005C  D005               	goto	i2l151
  3987  00005E                     i2l149:
  3988                           
  3989                           ;interrupt_manager.c: 64: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  3990  00005E  B6F2               	btfsc	intcon,3,c	;volatile
  3991  000060  A0F2               	btfss	intcon,0,c	;volatile
  3992  000062  D002               	goto	i2l151
  3993                           
  3994                           ;interrupt_manager.c: 65: {
  3995                           ;interrupt_manager.c: 66: PIN_MANAGER_IOC();
  3996  000064  EC7F  F001         	call	_PIN_MANAGER_IOC	;wreg free
  3997  000068                     i2l151:
  3998                           
  3999                           ;interrupt_manager.c: 68: else
  4000                           ;interrupt_manager.c: 69: {
  4001  000068  C024  F03E         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  4002  00006C  C023  F03D         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  4003  000070  C022  F03C         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  4004  000074  C021  F03B         	movff	??_INTERRUPT_InterruptManager+14,btemp
  4005  000078  C020  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4006  00007C  C01F  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4007  000080  C01E  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4008  000084  C01D  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4009  000088  C01C  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4010  00008C  C01B  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4011  000090  C01A  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4012  000094  C019  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4013  000098  C018  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4014  00009C  C017  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4015  0000A0  C016  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4016  0000A4  C015  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4017  0000A8  C014  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4018  0000AC  C013  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4019  0000B0  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4020  0000B2  0011               	retfie		f
  4021  0000B4                     __end_of_INTERRUPT_InterruptManager:
  4022                           	opt stack 0
  4023                           pclatu	equ	0xFFB
  4024                           pclath	equ	0xFFA
  4025                           tblptru	equ	0xFF8
  4026                           tblptrh	equ	0xFF7
  4027                           tblptrl	equ	0xFF6
  4028                           tablat	equ	0xFF5
  4029                           prodh	equ	0xFF4
  4030                           prodl	equ	0xFF3
  4031                           intcon	equ	0xFF2
  4032                           fsr0h	equ	0xFEA
  4033                           fsr0l	equ	0xFE9
  4034                           wreg	equ	0xFE8
  4035                           fsr1h	equ	0xFE2
  4036                           fsr1l	equ	0xFE1
  4037                           fsr2h	equ	0xFDA
  4038                           fsr2l	equ	0xFD9
  4039                           status	equ	0xFD8
  4040                           
  4041 ;; *************** function _TMR0_ISR *****************
  4042 ;; Defined at:
  4043 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;		None
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;		None
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  1    wreg      void 
  4050 ;; Registers used:
  4051 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4061 ;;Total ram usage:        0 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:    1
  4064 ;; This function calls:
  4065 ;;		Absolute function
  4066 ;;		_TMR0_DefaultInterruptHandler
  4067 ;; This function is called by:
  4068 ;;		_INTERRUPT_InterruptManager
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text33
  4073  00081C                     __ptext33:
  4074                           	opt stack 0
  4075  00081C                     _TMR0_ISR:
  4076                           	opt stack 21
  4077                           
  4078                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
  4079                           
  4080                           ;incstack = 0
  4081  00081C  94F2               	bcf	intcon,2,c	;volatile
  4082                           
  4083                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
  4084  00081E  502E               	movf	_timer0ReloadVal+1,w,c	;volatile
  4085  000820  6ED7               	movwf	4055,c	;volatile
  4086                           
  4087                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
  4088  000822  C02D  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4089                           
  4090                           ;tmr0.c: 145: if(TMR0_InterruptHandler)
  4091  000826  502F               	movf	_TMR0_InterruptHandler,w,c
  4092  000828  1030               	iorwf	_TMR0_InterruptHandler+1,w,c
  4093  00082A  B4D8               	btfsc	status,2,c
  4094  00082C  0012               	return	
  4095                           
  4096                           ;tmr0.c: 146: {
  4097                           ;tmr0.c: 147: TMR0_InterruptHandler();
  4098  00082E  D801               	call	i2u35_48
  4099  000830  0012               	return	
  4100  000832                     i2u35_48:
  4101  000832  0005               	push	
  4102  000834  6EFA               	movwf	pclath,c
  4103  000836  502F               	movf	_TMR0_InterruptHandler,w,c
  4104  000838  6EFD               	movwf	tosl,c
  4105  00083A  5030               	movf	_TMR0_InterruptHandler+1,w,c
  4106  00083C  6EFE               	movwf	tosh,c
  4107  00083E  6AFF               	clrf	tosu,c
  4108  000840  50FA               	movf	pclath,w,c
  4109  000842  0012               	return		;indir
  4110  000844                     __end_of_TMR0_ISR:
  4111                           	opt stack 0
  4112                           tosu	equ	0xFFF
  4113                           tosh	equ	0xFFE
  4114                           tosl	equ	0xFFD
  4115                           pclatu	equ	0xFFB
  4116                           pclath	equ	0xFFA
  4117                           tblptru	equ	0xFF8
  4118                           tblptrh	equ	0xFF7
  4119                           tblptrl	equ	0xFF6
  4120                           tablat	equ	0xFF5
  4121                           prodh	equ	0xFF4
  4122                           prodl	equ	0xFF3
  4123                           intcon	equ	0xFF2
  4124                           fsr0h	equ	0xFEA
  4125                           fsr0l	equ	0xFE9
  4126                           wreg	equ	0xFE8
  4127                           fsr1h	equ	0xFE2
  4128                           fsr1l	equ	0xFE1
  4129                           fsr2h	equ	0xFDA
  4130                           fsr2l	equ	0xFD9
  4131                           status	equ	0xFD8
  4132                           
  4133 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4134 ;; Defined at:
  4135 ;;		line 158 in file "mcc_generated_files/tmr0.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		None
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_TMR0_Initialize
  4159 ;;		_TMR0_ISR
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text34
  4164  0009E6                     __ptext34:
  4165                           	opt stack 0
  4166  0009E6                     _TMR0_DefaultInterruptHandler:
  4167                           	opt stack 21
  4168                           
  4169                           ;incstack = 0
  4170  0009E6  0012               	return		;funcret
  4171  0009E8                     __end_of_TMR0_DefaultInterruptHandler:
  4172                           	opt stack 0
  4173                           tosu	equ	0xFFF
  4174                           tosh	equ	0xFFE
  4175                           tosl	equ	0xFFD
  4176                           pclatu	equ	0xFFB
  4177                           pclath	equ	0xFFA
  4178                           tblptru	equ	0xFF8
  4179                           tblptrh	equ	0xFF7
  4180                           tblptrl	equ	0xFF6
  4181                           tablat	equ	0xFF5
  4182                           prodh	equ	0xFF4
  4183                           prodl	equ	0xFF3
  4184                           intcon	equ	0xFF2
  4185                           fsr0h	equ	0xFEA
  4186                           fsr0l	equ	0xFE9
  4187                           wreg	equ	0xFE8
  4188                           fsr1h	equ	0xFE2
  4189                           fsr1l	equ	0xFE1
  4190                           fsr2h	equ	0xFDA
  4191                           fsr2l	equ	0xFD9
  4192                           status	equ	0xFD8
  4193                           
  4194 ;; *************** function _PIN_MANAGER_IOC *****************
  4195 ;; Defined at:
  4196 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  currentState    1   17[COMRAM] unsigned char 
  4201 ;;  result          1   16[COMRAM] unsigned char 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4213 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4214 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4215 ;;Total ram usage:        4 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    4
  4218 ;; This function calls:
  4219 ;;		i2_GLCD_GoTo
  4220 ;;		i2_GLCD_WriteChar
  4221 ;; This function is called by:
  4222 ;;		_INTERRUPT_InterruptManager
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text35
  4227  0002FE                     __ptext35:
  4228                           	opt stack 0
  4229  0002FE                     _PIN_MANAGER_IOC:
  4230                           	opt stack 18
  4231                           
  4232                           ;pin_manager.c: 138: static unsigned char previousState;
  4233                           ;pin_manager.c: 139: unsigned char currentState;
  4234                           ;pin_manager.c: 140: unsigned char result;
  4235                           ;pin_manager.c: 142: _delay((unsigned long)((2)*(8000000/4000.0)));
  4236                           
  4237                           ;incstack = 0
  4238  0002FE  0E06               	movlw	6
  4239  000300  6E0F               	movwf	??_PIN_MANAGER_IOC& (0+255),c
  4240  000302  0E30               	movlw	48
  4241  000304                     i2u212_47:
  4242  000304  2EE8               	decfsz	wreg,f,c
  4243  000306  D7FE               	bra	i2u212_47
  4244  000308  2E0F               	decfsz	??_PIN_MANAGER_IOC& (0+255),f,c
  4245  00030A  D7FC               	bra	i2u212_47
  4246  00030C  D000               	nop2	
  4247                           
  4248                           ;pin_manager.c: 144: currentState = (PORTBbits.RB5 << 1) | PORTBbits.RB4;
  4249  00030E  A881               	btfss	3969,4,c	;volatile
  4250  000310  D003               	goto	i2u118_40
  4251  000312  6A0F               	clrf	??_PIN_MANAGER_IOC& (0+255),c
  4252  000314  2A0F               	incf	??_PIN_MANAGER_IOC& (0+255),f,c
  4253  000316  D001               	goto	i2u118_48
  4254  000318                     i2u118_40:
  4255  000318  6A0F               	clrf	??_PIN_MANAGER_IOC& (0+255),c
  4256  00031A                     i2u118_48:
  4257  00031A  AA81               	btfss	3969,5,c	;volatile
  4258  00031C  D003               	goto	i2u119_40
  4259  00031E  6A10               	clrf	(??_PIN_MANAGER_IOC+1)& (0+255),c
  4260  000320  2A10               	incf	(??_PIN_MANAGER_IOC+1)& (0+255),f,c
  4261  000322  D001               	goto	i2u119_48
  4262  000324                     i2u119_40:
  4263  000324  6A10               	clrf	(??_PIN_MANAGER_IOC+1)& (0+255),c
  4264  000326                     i2u119_48:
  4265  000326  90D8               	bcf	status,0,c
  4266  000328  3410               	rlcf	??_PIN_MANAGER_IOC+1,w,c
  4267  00032A  100F               	iorwf	??_PIN_MANAGER_IOC,w,c
  4268  00032C  6E12               	movwf	PIN_MANAGER_IOC@currentState,c
  4269                           
  4270                           ;pin_manager.c: 146: GLCD_GoTo(65,3);
  4271  00032E  0E03               	movlw	3
  4272  000330  6E0C               	movwf	i2GLCD_GoTo@y,c
  4273  000332  0E41               	movlw	65
  4274  000334  ECBC  F001         	call	i2_GLCD_GoTo
  4275                           
  4276                           ;pin_manager.c: 148: GLCD_WriteChar((PORTBbits.RB5 + 48));
  4277  000338  AA81               	btfss	3969,5,c	;volatile
  4278  00033A  D002               	goto	i2u120_40
  4279  00033C  0E01               	movlw	1
  4280  00033E  D001               	goto	i2u120_46
  4281  000340                     i2u120_40:
  4282  000340  0E00               	movlw	0
  4283  000342                     i2u120_46:
  4284  000342  0F30               	addlw	48
  4285  000344  EC11  F003         	call	i2_GLCD_WriteChar
  4286                           
  4287                           ;pin_manager.c: 149: GLCD_WriteChar((PORTBbits.RB4 + 48));
  4288  000348  A881               	btfss	3969,4,c	;volatile
  4289  00034A  D002               	goto	i2u121_40
  4290  00034C  0E01               	movlw	1
  4291  00034E  D001               	goto	i2u121_46
  4292  000350                     i2u121_40:
  4293  000350  0E00               	movlw	0
  4294  000352                     i2u121_46:
  4295  000352  0F30               	addlw	48
  4296  000354  EC11  F003         	call	i2_GLCD_WriteChar
  4297                           
  4298                           ;pin_manager.c: 153: result = (previousState & 0x01) ^ ((currentState >> 1) & 0x01);
  4299  000358  C012  F00F         	movff	PIN_MANAGER_IOC@currentState,??_PIN_MANAGER_IOC
  4300  00035C  90D8               	bcf	status,0,c
  4301  00035E  320F               	rrcf	??_PIN_MANAGER_IOC,f,c
  4302  000360  0E01               	movlw	1
  4303  000362  160F               	andwf	??_PIN_MANAGER_IOC,f,c
  4304  000364  5037               	movf	PIN_MANAGER_IOC@previousState,w,c
  4305  000366  0B01               	andlw	1
  4306  000368  180F               	xorwf	??_PIN_MANAGER_IOC,w,c
  4307  00036A  6E11               	movwf	PIN_MANAGER_IOC@result,c
  4308                           
  4309                           ;pin_manager.c: 175: previousState = currentState;
  4310  00036C  C012  F037         	movff	PIN_MANAGER_IOC@currentState,PIN_MANAGER_IOC@previousState
  4311                           
  4312                           ;pin_manager.c: 179: PORTB = PORTB;
  4313  000370  CF81 FF81          	movff	3969,3969	;volatile
  4314                           
  4315                           ;pin_manager.c: 181: INTCONbits.RBIF = 0;
  4316  000374  90F2               	bcf	intcon,0,c	;volatile
  4317  000376  0012               	return		;funcret
  4318  000378                     __end_of_PIN_MANAGER_IOC:
  4319                           	opt stack 0
  4320                           tosu	equ	0xFFF
  4321                           tosh	equ	0xFFE
  4322                           tosl	equ	0xFFD
  4323                           pclatu	equ	0xFFB
  4324                           pclath	equ	0xFFA
  4325                           tblptru	equ	0xFF8
  4326                           tblptrh	equ	0xFF7
  4327                           tblptrl	equ	0xFF6
  4328                           tablat	equ	0xFF5
  4329                           prodh	equ	0xFF4
  4330                           prodl	equ	0xFF3
  4331                           intcon	equ	0xFF2
  4332                           fsr0h	equ	0xFEA
  4333                           fsr0l	equ	0xFE9
  4334                           wreg	equ	0xFE8
  4335                           fsr1h	equ	0xFE2
  4336                           fsr1l	equ	0xFE1
  4337                           fsr2h	equ	0xFDA
  4338                           fsr2l	equ	0xFD9
  4339                           status	equ	0xFD8
  4340                           
  4341 ;; *************** function i2_GLCD_WriteChar *****************
  4342 ;; Defined at:
  4343 ;;		line 56 in file "ks0108lib/KS0108.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  charToWrite     1    wreg     unsigned char 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  charToWrite     1   10[COMRAM] unsigned char 
  4348 ;;  GLCD_WriteCh    2   11[COMRAM] int 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4359 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4361 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4362 ;;Total ram usage:        3 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    3
  4365 ;; This function calls:
  4366 ;;		i2_GLCD_WriteData
  4367 ;; This function is called by:
  4368 ;;		_PIN_MANAGER_IOC
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text36
  4373  000622                     __ptext36:
  4374                           	opt stack 0
  4375  000622                     i2_GLCD_WriteChar:
  4376                           	opt stack 18
  4377                           
  4378                           ;incstack = 0
  4379                           ;i2GLCD_WriteChar@charToWrite stored from wreg
  4380  000622  6E0B               	movwf	i2GLCD_WriteChar@charToWrite,c
  4381                           
  4382                           ;KS0108.c: 58: int i;
  4383                           ;KS0108.c: 59: charToWrite -= 32;
  4384  000624  0E20               	movlw	32
  4385  000626  5E0B               	subwf	i2GLCD_WriteChar@charToWrite,f,c
  4386                           
  4387                           ;KS0108.c: 60: for(i = 0; i < 5; i++)
  4388  000628  0E00               	movlw	0
  4389  00062A  6E0D               	movwf	i2GLCD_WriteChar@i+1,c
  4390  00062C  0E00               	movlw	0
  4391  00062E  6E0C               	movwf	i2GLCD_WriteChar@i,c
  4392  000630                     i2l2544:
  4393  000630  BE0D               	btfsc	i2GLCD_WriteChar@i+1,7,c
  4394  000632  D006               	goto	i2l449
  4395  000634  500D               	movf	i2GLCD_WriteChar@i+1,w,c
  4396  000636  E11A               	bnz	i2l2554
  4397  000638  0E05               	movlw	5
  4398  00063A  5C0C               	subwf	i2GLCD_WriteChar@i,w,c
  4399  00063C  B0D8               	btfsc	status,0,c
  4400  00063E  D016               	goto	i2u117_40
  4401  000640                     i2l449:
  4402                           
  4403                           ;KS0108.c: 61: {
  4404                           ;KS0108.c: 63: GLCD_WriteData(font5x8[(5 * charToWrite) + i]);
  4405  000640  500B               	movf	i2GLCD_WriteChar@charToWrite,w,c
  4406  000642  0D05               	mullw	5
  4407  000644  500C               	movf	i2GLCD_WriteChar@i,w,c
  4408  000646  26F3               	addwf	prodl,f,c
  4409  000648  500D               	movf	i2GLCD_WriteChar@i+1,w,c
  4410  00064A  22F4               	addwfc	prodh,f,c
  4411  00064C  0ED9               	movlw	low _font5x8
  4412  00064E  24F3               	addwf	prodl,w,c
  4413  000650  6EF6               	movwf	tblptrl,c
  4414  000652  0EFD               	movlw	high _font5x8
  4415  000654  20F4               	addwfc	prodh,w,c
  4416  000656  6EF7               	movwf	tblptrh,c
  4417  000658                     	if	1	;There are 3 active tblptr bytes
  4418  000658  6AF8               	clrf	tblptru,c
  4419  00065A  0E00               	movlw	low (__mediumconst shr (0+16))
  4420  00065C  22F8               	addwfc	tblptru,f,c
  4421  00065E                     	endif
  4422  00065E  0008               	tblrd		*
  4423  000660  50F5               	movf	tablat,w,c
  4424  000662  EC2F  F002         	call	i2_GLCD_WriteData
  4425  000666  4A0C               	infsnz	i2GLCD_WriteChar@i,f,c
  4426  000668  2A0D               	incf	i2GLCD_WriteChar@i+1,f,c
  4427  00066A  D7E2               	goto	i2l2544
  4428  00066C                     i2u117_40:
  4429  00066C                     i2l2554:
  4430                           
  4431                           ;KS0108.c: 64: }
  4432                           ;KS0108.c: 65: GLCD_WriteData(0x00);
  4433  00066C  0E00               	movlw	0
  4434  00066E  EC2F  F002         	call	i2_GLCD_WriteData
  4435  000672  0012               	return		;funcret
  4436  000674                     __end_ofi2_GLCD_WriteChar:
  4437                           	opt stack 0
  4438                           tosu	equ	0xFFF
  4439                           tosh	equ	0xFFE
  4440                           tosl	equ	0xFFD
  4441                           pclatu	equ	0xFFB
  4442                           pclath	equ	0xFFA
  4443                           tblptru	equ	0xFF8
  4444                           tblptrh	equ	0xFF7
  4445                           tblptrl	equ	0xFF6
  4446                           tablat	equ	0xFF5
  4447                           prodh	equ	0xFF4
  4448                           prodl	equ	0xFF3
  4449                           intcon	equ	0xFF2
  4450                           fsr0h	equ	0xFEA
  4451                           fsr0l	equ	0xFE9
  4452                           wreg	equ	0xFE8
  4453                           fsr1h	equ	0xFE2
  4454                           fsr1l	equ	0xFE1
  4455                           fsr2h	equ	0xFDA
  4456                           fsr2l	equ	0xFD9
  4457                           status	equ	0xFD8
  4458                           
  4459 ;; *************** function i2_GLCD_WriteData *****************
  4460 ;; Defined at:
  4461 ;;		line 113 in file "ks0108lib/KS0108-PIC18.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  dataToWrite     1    wreg     unsigned char 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  dataToWrite     1    9[COMRAM] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      void 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4479 ;;Total ram usage:        2 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    2
  4482 ;; This function calls:
  4483 ;;		i2_GLCD_Delay
  4484 ;;		i2_GLCD_DisableController
  4485 ;;		i2_GLCD_EnableController
  4486 ;;		i2_GLCD_ReadStatus
  4487 ;;		i2___awdiv
  4488 ;; This function is called by:
  4489 ;;		i2_GLCD_WriteChar
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           	psect	text37
  4494  00045E                     __ptext37:
  4495                           	opt stack 0
  4496  00045E                     i2_GLCD_WriteData:
  4497                           	opt stack 18
  4498                           
  4499                           ;incstack = 0
  4500                           ;i2GLCD_WriteData@dataToWrite stored from wreg
  4501  00045E  6E0A               	movwf	i2GLCD_WriteData@dataToWrite,c
  4502  000460                     
  4503                           ;KS0108-PIC18.c: 115: while(GLCD_ReadStatus(screen_x / 64)&0x80);
  4504  000460  C036  F001         	movff	_screen_x,i2___awdiv@dividend
  4505  000464  6A02               	clrf	i2___awdiv@dividend+1,c
  4506  000466  0E00               	movlw	0
  4507  000468  6E04               	movwf	i2___awdiv@divisor+1,c
  4508  00046A  0E40               	movlw	64
  4509  00046C  6E03               	movwf	i2___awdiv@divisor,c
  4510  00046E  EC3D  F001         	call	i2___awdiv	;wreg free
  4511  000472  5001               	movf	?i2___awdiv,w,c
  4512  000474  EC80  F004         	call	i2_GLCD_ReadStatus
  4513  000478  6E09               	movwf	??i2_GLCD_WriteData& (0+255),c
  4514  00047A  BE09               	btfsc	??i2_GLCD_WriteData,7,c
  4515  00047C  D7F1               	goto	i2l2440
  4516                           
  4517                           ;KS0108-PIC18.c: 116: TRISC = 0x00;
  4518  00047E  0E00               	movlw	0
  4519  000480  6E94               	movwf	3988,c	;volatile
  4520                           
  4521                           ;KS0108-PIC18.c: 117: PORTA &= ~(1 << 1);
  4522  000482  9280               	bcf	3968,1,c	;volatile
  4523                           
  4524                           ;KS0108-PIC18.c: 118: PORTA |= (1 << 2);
  4525  000484  8480               	bsf	3968,2,c	;volatile
  4526                           
  4527                           ;KS0108-PIC18.c: 119: PORTC = dataToWrite;
  4528  000486  C00A  FF82         	movff	i2GLCD_WriteData@dataToWrite,3970	;volatile
  4529                           
  4530                           ;KS0108-PIC18.c: 120: GLCD_EnableController(screen_x / 64);
  4531  00048A  C036  F001         	movff	_screen_x,i2___awdiv@dividend
  4532  00048E  6A02               	clrf	i2___awdiv@dividend+1,c
  4533  000490  0E00               	movlw	0
  4534  000492  6E04               	movwf	i2___awdiv@divisor+1,c
  4535  000494  0E40               	movlw	64
  4536  000496  6E03               	movwf	i2___awdiv@divisor,c
  4537  000498  EC3D  F001         	call	i2___awdiv	;wreg free
  4538  00049C  5001               	movf	?i2___awdiv,w,c
  4539  00049E  EC48  F004         	call	i2_GLCD_EnableController
  4540                           
  4541                           ;KS0108-PIC18.c: 121: PORTA |= (1 << 3);
  4542  0004A2  8680               	bsf	3968,3,c	;volatile
  4543                           
  4544                           ;KS0108-PIC18.c: 122: GLCD_Delay();
  4545  0004A4  ECED  F004         	call	i2_GLCD_Delay	;wreg free
  4546                           
  4547                           ;KS0108-PIC18.c: 123: PORTA &= ~(1 << 3);
  4548  0004A8  9680               	bcf	3968,3,c	;volatile
  4549                           
  4550                           ;KS0108-PIC18.c: 124: GLCD_DisableController(screen_x / 64);
  4551  0004AA  C036  F001         	movff	_screen_x,i2___awdiv@dividend
  4552  0004AE  6A02               	clrf	i2___awdiv@dividend+1,c
  4553  0004B0  0E00               	movlw	0
  4554  0004B2  6E04               	movwf	i2___awdiv@divisor+1,c
  4555  0004B4  0E40               	movlw	64
  4556  0004B6  6E03               	movwf	i2___awdiv@divisor,c
  4557  0004B8  EC3D  F001         	call	i2___awdiv	;wreg free
  4558  0004BC  5001               	movf	?i2___awdiv,w,c
  4559  0004BE  EC5B  F004         	call	i2_GLCD_DisableController
  4560                           
  4561                           ;KS0108-PIC18.c: 125: screen_x++;
  4562  0004C2  2A36               	incf	_screen_x,f,c
  4563  0004C4  0012               	return		;funcret
  4564  0004C6                     __end_ofi2_GLCD_WriteData:
  4565                           	opt stack 0
  4566                           tosu	equ	0xFFF
  4567                           tosh	equ	0xFFE
  4568                           tosl	equ	0xFFD
  4569                           pclatu	equ	0xFFB
  4570                           pclath	equ	0xFFA
  4571                           tblptru	equ	0xFF8
  4572                           tblptrh	equ	0xFF7
  4573                           tblptrl	equ	0xFF6
  4574                           tablat	equ	0xFF5
  4575                           prodh	equ	0xFF4
  4576                           prodl	equ	0xFF3
  4577                           intcon	equ	0xFF2
  4578                           fsr0h	equ	0xFEA
  4579                           fsr0l	equ	0xFE9
  4580                           wreg	equ	0xFE8
  4581                           fsr1h	equ	0xFE2
  4582                           fsr1l	equ	0xFE1
  4583                           fsr2h	equ	0xFDA
  4584                           fsr2l	equ	0xFD9
  4585                           status	equ	0xFD8
  4586                           
  4587 ;; *************** function i2_GLCD_GoTo *****************
  4588 ;; Defined at:
  4589 ;;		line 25 in file "ks0108lib/KS0108.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  x               1    wreg     unsigned char 
  4592 ;;  y               1   11[COMRAM] unsigned char 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  x               1   12[COMRAM] unsigned char 
  4595 ;;  GLCD_GoTo       1   13[COMRAM] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4605 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4608 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4609 ;;Total ram usage:        3 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    3
  4612 ;; This function calls:
  4613 ;;		i2_GLCD_WriteCommand
  4614 ;;		i2___awdiv
  4615 ;; This function is called by:
  4616 ;;		_PIN_MANAGER_IOC
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text38
  4621  000378                     __ptext38:
  4622                           	opt stack 0
  4623  000378                     i2_GLCD_GoTo:
  4624                           	opt stack 18
  4625                           
  4626                           ;incstack = 0
  4627                           ;i2GLCD_GoTo@x stored from wreg
  4628  000378  6E0D               	movwf	i2GLCD_GoTo@x,c
  4629                           
  4630                           ;KS0108.c: 27: unsigned char i;
  4631                           ;KS0108.c: 28: screen_x = x;
  4632  00037A  C00D  F036         	movff	i2GLCD_GoTo@x,_screen_x
  4633                           
  4634                           ;KS0108.c: 29: screen_y = y;
  4635  00037E  C00C  F035         	movff	i2GLCD_GoTo@y,_screen_y
  4636                           
  4637                           ;KS0108.c: 31: for(i = 0; i < 128/64; i++)
  4638  000382  0E00               	movlw	0
  4639  000384  6E0E               	movwf	i2GLCD_GoTo@i,c
  4640  000386                     i2l2528:
  4641  000386  0E01               	movlw	1
  4642  000388  640E               	cpfsgt	i2GLCD_GoTo@i,c
  4643  00038A  D001               	goto	i2l437
  4644  00038C  D012               	goto	i2u115_40
  4645  00038E                     i2l437:
  4646                           
  4647                           ;KS0108.c: 32: {
  4648                           ;KS0108.c: 33: GLCD_WriteCommand(0x40 | 0,i);
  4649  00038E  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  4650  000392  0E40               	movlw	64
  4651  000394  ECF6  F003         	call	i2_GLCD_WriteCommand
  4652                           
  4653                           ;KS0108.c: 34: GLCD_WriteCommand(0xB8 | y,i);
  4654  000398  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  4655  00039C  500C               	movf	i2GLCD_GoTo@y,w,c
  4656  00039E  09B8               	iorlw	184
  4657  0003A0  ECF6  F003         	call	i2_GLCD_WriteCommand
  4658                           
  4659                           ;KS0108.c: 35: GLCD_WriteCommand(0xC0 | 0,i);
  4660  0003A4  C00E  F009         	movff	i2GLCD_GoTo@i,i2GLCD_WriteCommand@controller
  4661  0003A8  0EC0               	movlw	192
  4662  0003AA  ECF6  F003         	call	i2_GLCD_WriteCommand
  4663  0003AE  2A0E               	incf	i2GLCD_GoTo@i,f,c
  4664  0003B0  D7EA               	goto	i2l2528
  4665  0003B2                     i2u115_40:
  4666                           
  4667                           ;KS0108.c: 36: }
  4668                           ;KS0108.c: 37: GLCD_WriteCommand(0x40 | (x % 64), (x / 64));
  4669  0003B2  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
  4670  0003B6  6A02               	clrf	i2___awdiv@dividend+1,c
  4671  0003B8  0E00               	movlw	0
  4672  0003BA  6E04               	movwf	i2___awdiv@divisor+1,c
  4673  0003BC  0E40               	movlw	64
  4674  0003BE  6E03               	movwf	i2___awdiv@divisor,c
  4675  0003C0  EC3D  F001         	call	i2___awdiv	;wreg free
  4676  0003C4  5001               	movf	?i2___awdiv,w,c
  4677  0003C6  6E09               	movwf	i2GLCD_WriteCommand@controller,c
  4678  0003C8  500D               	movf	i2GLCD_GoTo@x,w,c
  4679  0003CA  0B3F               	andlw	63
  4680  0003CC  0940               	iorlw	64
  4681  0003CE  ECF6  F003         	call	i2_GLCD_WriteCommand
  4682                           
  4683                           ;KS0108.c: 38: GLCD_WriteCommand(0xB8 | y, (x / 64));
  4684  0003D2  C00D  F001         	movff	i2GLCD_GoTo@x,i2___awdiv@dividend
  4685  0003D6  6A02               	clrf	i2___awdiv@dividend+1,c
  4686  0003D8  0E00               	movlw	0
  4687  0003DA  6E04               	movwf	i2___awdiv@divisor+1,c
  4688  0003DC  0E40               	movlw	64
  4689  0003DE  6E03               	movwf	i2___awdiv@divisor,c
  4690  0003E0  EC3D  F001         	call	i2___awdiv	;wreg free
  4691  0003E4  5001               	movf	?i2___awdiv,w,c
  4692  0003E6  6E09               	movwf	i2GLCD_WriteCommand@controller,c
  4693  0003E8  500C               	movf	i2GLCD_GoTo@y,w,c
  4694  0003EA  09B8               	iorlw	184
  4695  0003EC  ECF6  F003         	call	i2_GLCD_WriteCommand
  4696  0003F0  0012               	return		;funcret
  4697  0003F2                     __end_ofi2_GLCD_GoTo:
  4698                           	opt stack 0
  4699                           tosu	equ	0xFFF
  4700                           tosh	equ	0xFFE
  4701                           tosl	equ	0xFFD
  4702                           pclatu	equ	0xFFB
  4703                           pclath	equ	0xFFA
  4704                           tblptru	equ	0xFF8
  4705                           tblptrh	equ	0xFF7
  4706                           tblptrl	equ	0xFF6
  4707                           tablat	equ	0xFF5
  4708                           prodh	equ	0xFF4
  4709                           prodl	equ	0xFF3
  4710                           intcon	equ	0xFF2
  4711                           fsr0h	equ	0xFEA
  4712                           fsr0l	equ	0xFE9
  4713                           wreg	equ	0xFE8
  4714                           fsr1h	equ	0xFE2
  4715                           fsr1l	equ	0xFE1
  4716                           fsr2h	equ	0xFDA
  4717                           fsr2l	equ	0xFD9
  4718                           status	equ	0xFD8
  4719                           
  4720 ;; *************** function i2___awdiv *****************
  4721 ;; Defined at:
  4722 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;  dividend        2    0[COMRAM] int 
  4725 ;;  divisor         2    2[COMRAM] int 
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;  __awdiv         2    6[COMRAM] int 
  4728 ;;  __awdiv         1    5[COMRAM] unsigned char 
  4729 ;;  __awdiv         1    4[COMRAM] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  2    0[COMRAM] int 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4740 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4742 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4743 ;;Total ram usage:        8 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		i2_GLCD_GoTo
  4749 ;;		i2_GLCD_WriteData
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text39
  4754  00027A                     __ptext39:
  4755                           	opt stack 0
  4756  00027A                     i2___awdiv:
  4757                           	opt stack 19
  4758                           
  4759                           ;incstack = 0
  4760  00027A  0E00               	movlw	0
  4761  00027C  6E06               	movwf	i2___awdiv@sign,c
  4762  00027E  AE04               	btfss	i2___awdiv@divisor+1,7,c
  4763  000280  D006               	goto	i2l738
  4764  000282  6C03               	negf	i2___awdiv@divisor,c
  4765  000284  1E04               	comf	i2___awdiv@divisor+1,f,c
  4766  000286  B0D8               	btfsc	status,0,c
  4767  000288  2A04               	incf	i2___awdiv@divisor+1,f,c
  4768  00028A  0E01               	movlw	1
  4769  00028C  6E06               	movwf	i2___awdiv@sign,c
  4770  00028E                     i2l738:
  4771  00028E  AE02               	btfss	i2___awdiv@dividend+1,7,c
  4772  000290  D006               	goto	i2l739
  4773  000292  6C01               	negf	i2___awdiv@dividend,c
  4774  000294  1E02               	comf	i2___awdiv@dividend+1,f,c
  4775  000296  B0D8               	btfsc	status,0,c
  4776  000298  2A02               	incf	i2___awdiv@dividend+1,f,c
  4777  00029A  0E01               	movlw	1
  4778  00029C  1A06               	xorwf	i2___awdiv@sign,f,c
  4779  00029E                     i2l739:
  4780  00029E  0E00               	movlw	0
  4781  0002A0  6E08               	movwf	i2___awdiv@quotient+1,c
  4782  0002A2  0E00               	movlw	0
  4783  0002A4  6E07               	movwf	i2___awdiv@quotient,c
  4784  0002A6  5003               	movf	i2___awdiv@divisor,w,c
  4785  0002A8  1004               	iorwf	i2___awdiv@divisor+1,w,c
  4786  0002AA  B4D8               	btfsc	status,2,c
  4787  0002AC  D01C               	goto	i2l746
  4788  0002AE  0E01               	movlw	1
  4789  0002B0  6E05               	movwf	i2___awdiv@counter,c
  4790  0002B2  D004               	goto	i2l741
  4791  0002B4  90D8               	bcf	status,0,c
  4792  0002B6  3603               	rlcf	i2___awdiv@divisor,f,c
  4793  0002B8  3604               	rlcf	i2___awdiv@divisor+1,f,c
  4794  0002BA  2A05               	incf	i2___awdiv@counter,f,c
  4795  0002BC                     i2l741:
  4796  0002BC  AE04               	btfss	i2___awdiv@divisor+1,7,c
  4797  0002BE  D7FA               	goto	i2l742
  4798  0002C0                     i2u102_40:
  4799  0002C0  90D8               	bcf	status,0,c
  4800  0002C2  3607               	rlcf	i2___awdiv@quotient,f,c
  4801  0002C4  3608               	rlcf	i2___awdiv@quotient+1,f,c
  4802  0002C6  5003               	movf	i2___awdiv@divisor,w,c
  4803  0002C8  5C01               	subwf	i2___awdiv@dividend,w,c
  4804  0002CA  5004               	movf	i2___awdiv@divisor+1,w,c
  4805  0002CC  5802               	subwfb	i2___awdiv@dividend+1,w,c
  4806  0002CE  A0D8               	btfss	status,0,c
  4807  0002D0  D005               	goto	i2l745
  4808  0002D2  5003               	movf	i2___awdiv@divisor,w,c
  4809  0002D4  5E01               	subwf	i2___awdiv@dividend,f,c
  4810  0002D6  5004               	movf	i2___awdiv@divisor+1,w,c
  4811  0002D8  5A02               	subwfb	i2___awdiv@dividend+1,f,c
  4812  0002DA  8007               	bsf	i2___awdiv@quotient,0,c
  4813  0002DC                     i2l745:
  4814  0002DC  90D8               	bcf	status,0,c
  4815  0002DE  3204               	rrcf	i2___awdiv@divisor+1,f,c
  4816  0002E0  3203               	rrcf	i2___awdiv@divisor,f,c
  4817  0002E2  2E05               	decfsz	i2___awdiv@counter,f,c
  4818  0002E4  D7ED               	goto	i2u102_40
  4819  0002E6                     i2l746:
  4820  0002E6  5006               	movf	i2___awdiv@sign,w,c
  4821  0002E8  B4D8               	btfsc	status,2,c
  4822  0002EA  D004               	goto	i2l747
  4823  0002EC  6C07               	negf	i2___awdiv@quotient,c
  4824  0002EE  1E08               	comf	i2___awdiv@quotient+1,f,c
  4825  0002F0  B0D8               	btfsc	status,0,c
  4826  0002F2  2A08               	incf	i2___awdiv@quotient+1,f,c
  4827  0002F4                     i2l747:
  4828  0002F4  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  4829  0002F8  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  4830  0002FC  0012               	return	
  4831  0002FE                     __end_ofi2___awdiv:
  4832                           	opt stack 0
  4833                           tosu	equ	0xFFF
  4834                           tosh	equ	0xFFE
  4835                           tosl	equ	0xFFD
  4836                           pclatu	equ	0xFFB
  4837                           pclath	equ	0xFFA
  4838                           tblptru	equ	0xFF8
  4839                           tblptrh	equ	0xFF7
  4840                           tblptrl	equ	0xFF6
  4841                           tablat	equ	0xFF5
  4842                           prodh	equ	0xFF4
  4843                           prodl	equ	0xFF3
  4844                           intcon	equ	0xFF2
  4845                           fsr0h	equ	0xFEA
  4846                           fsr0l	equ	0xFE9
  4847                           wreg	equ	0xFE8
  4848                           fsr1h	equ	0xFE2
  4849                           fsr1l	equ	0xFE1
  4850                           fsr2h	equ	0xFDA
  4851                           fsr2l	equ	0xFD9
  4852                           status	equ	0xFD8
  4853                           
  4854 ;; *************** function i2_GLCD_WriteCommand *****************
  4855 ;; Defined at:
  4856 ;;		line 79 in file "ks0108lib/KS0108-PIC18.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;  commandToWri    1    wreg     unsigned char 
  4859 ;;  controller      1    8[COMRAM] unsigned char 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;  commandToWri    1   10[COMRAM] unsigned char 
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1    wreg      void 
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0, cstack
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4871 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4874 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4875 ;;Total ram usage:        3 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:    2
  4878 ;; This function calls:
  4879 ;;		i2_GLCD_Delay
  4880 ;;		i2_GLCD_DisableController
  4881 ;;		i2_GLCD_EnableController
  4882 ;;		i2_GLCD_ReadStatus
  4883 ;; This function is called by:
  4884 ;;		i2_GLCD_GoTo
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text40
  4889  0007EC                     __ptext40:
  4890                           	opt stack 0
  4891  0007EC                     i2_GLCD_WriteCommand:
  4892                           	opt stack 18
  4893                           
  4894                           ;incstack = 0
  4895                           ;i2GLCD_WriteCommand@commandToWrite stored from wreg
  4896  0007EC  6E0B               	movwf	i2GLCD_WriteCommand@commandToWrite,c
  4897  0007EE                     
  4898                           ;KS0108-PIC18.c: 81: while(GLCD_ReadStatus(controller)&0x80);
  4899  0007EE  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  4900  0007F0  EC80  F004         	call	i2_GLCD_ReadStatus
  4901  0007F4  6E0A               	movwf	??i2_GLCD_WriteCommand& (0+255),c
  4902  0007F6  BE0A               	btfsc	??i2_GLCD_WriteCommand,7,c
  4903  0007F8  D7FA               	goto	i2l2420
  4904                           
  4905                           ;KS0108-PIC18.c: 82: TRISC = 0x00;
  4906  0007FA  0E00               	movlw	0
  4907  0007FC  6E94               	movwf	3988,c	;volatile
  4908                           
  4909                           ;KS0108-PIC18.c: 83: PORTA &= ~((1 << 1) | (1 << 2));
  4910  0007FE  0EF9               	movlw	249
  4911  000800  1680               	andwf	3968,f,c	;volatile
  4912                           
  4913                           ;KS0108-PIC18.c: 84: GLCD_EnableController(controller);
  4914  000802  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  4915  000804  EC48  F004         	call	i2_GLCD_EnableController
  4916                           
  4917                           ;KS0108-PIC18.c: 85: PORTC = commandToWrite;
  4918  000808  C00B  FF82         	movff	i2GLCD_WriteCommand@commandToWrite,3970	;volatile
  4919                           
  4920                           ;KS0108-PIC18.c: 86: PORTA |= (1 << 3);
  4921  00080C  8680               	bsf	3968,3,c	;volatile
  4922                           
  4923                           ;KS0108-PIC18.c: 87: GLCD_Delay();
  4924  00080E  ECED  F004         	call	i2_GLCD_Delay	;wreg free
  4925                           
  4926                           ;KS0108-PIC18.c: 88: PORTA &= ~(1 << 3);
  4927  000812  9680               	bcf	3968,3,c	;volatile
  4928                           
  4929                           ;KS0108-PIC18.c: 89: GLCD_DisableController(controller);
  4930  000814  5009               	movf	i2GLCD_WriteCommand@controller,w,c
  4931  000816  EC5B  F004         	call	i2_GLCD_DisableController
  4932  00081A  0012               	return		;funcret
  4933  00081C                     __end_ofi2_GLCD_WriteCommand:
  4934                           	opt stack 0
  4935                           tosu	equ	0xFFF
  4936                           tosh	equ	0xFFE
  4937                           tosl	equ	0xFFD
  4938                           pclatu	equ	0xFFB
  4939                           pclath	equ	0xFFA
  4940                           tblptru	equ	0xFF8
  4941                           tblptrh	equ	0xFF7
  4942                           tblptrl	equ	0xFF6
  4943                           tablat	equ	0xFF5
  4944                           prodh	equ	0xFF4
  4945                           prodl	equ	0xFF3
  4946                           intcon	equ	0xFF2
  4947                           fsr0h	equ	0xFEA
  4948                           fsr0l	equ	0xFE9
  4949                           wreg	equ	0xFE8
  4950                           fsr1h	equ	0xFE2
  4951                           fsr1l	equ	0xFE1
  4952                           fsr2h	equ	0xFDA
  4953                           fsr2l	equ	0xFD9
  4954                           status	equ	0xFD8
  4955                           
  4956 ;; *************** function i2_GLCD_ReadStatus *****************
  4957 ;; Defined at:
  4958 ;;		line 62 in file "ks0108lib/KS0108-PIC18.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;  controller      1    wreg     unsigned char 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  controller      1    2[COMRAM] unsigned char 
  4963 ;;  GLCD_ReadSta    1    1[COMRAM] unsigned char 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      unsigned char 
  4966 ;; Registers used:
  4967 ;;		wreg, status,2, status,0, cstack
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4974 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4976 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4977 ;;Total ram usage:        2 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:    1
  4980 ;; This function calls:
  4981 ;;		i2_GLCD_Delay
  4982 ;;		i2_GLCD_DisableController
  4983 ;;		i2_GLCD_EnableController
  4984 ;; This function is called by:
  4985 ;;		i2_GLCD_WriteCommand
  4986 ;;		i2_GLCD_WriteData
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text41
  4991  000900                     __ptext41:
  4992                           	opt stack 0
  4993  000900                     i2_GLCD_ReadStatus:
  4994                           	opt stack 18
  4995                           
  4996                           ;incstack = 0
  4997                           ;i2GLCD_ReadStatus@controller stored from wreg
  4998  000900  6E03               	movwf	i2GLCD_ReadStatus@controller,c
  4999                           
  5000                           ;KS0108-PIC18.c: 64: unsigned char status;
  5001                           ;KS0108-PIC18.c: 65: TRISC = 0xFF;
  5002  000902  6894               	setf	3988,c	;volatile
  5003                           
  5004                           ;KS0108-PIC18.c: 66: PORTA |= (1 << 1);
  5005  000904  8280               	bsf	3968,1,c	;volatile
  5006                           
  5007                           ;KS0108-PIC18.c: 67: PORTA &= ~(1 << 2);
  5008  000906  9480               	bcf	3968,2,c	;volatile
  5009                           
  5010                           ;KS0108-PIC18.c: 68: GLCD_EnableController(controller);
  5011  000908  5003               	movf	i2GLCD_ReadStatus@controller,w,c
  5012  00090A  EC48  F004         	call	i2_GLCD_EnableController
  5013                           
  5014                           ;KS0108-PIC18.c: 69: PORTA |= (1 << 3);
  5015  00090E  8680               	bsf	3968,3,c	;volatile
  5016                           
  5017                           ;KS0108-PIC18.c: 70: GLCD_Delay();
  5018  000910  ECED  F004         	call	i2_GLCD_Delay	;wreg free
  5019                           
  5020                           ;KS0108-PIC18.c: 71: status = PORTC;
  5021  000914  CF82 F002          	movff	3970,i2GLCD_ReadStatus@status	;volatile
  5022                           
  5023                           ;KS0108-PIC18.c: 72: PORTA &= ~(1 << 3);
  5024  000918  9680               	bcf	3968,3,c	;volatile
  5025                           
  5026                           ;KS0108-PIC18.c: 73: GLCD_DisableController(controller);
  5027  00091A  5003               	movf	i2GLCD_ReadStatus@controller,w,c
  5028  00091C  EC5B  F004         	call	i2_GLCD_DisableController
  5029                           
  5030                           ;KS0108-PIC18.c: 74: return status;
  5031  000920  5002               	movf	i2GLCD_ReadStatus@status,w,c
  5032  000922  0012               	return	
  5033  000924                     __end_ofi2_GLCD_ReadStatus:
  5034                           	opt stack 0
  5035                           tosu	equ	0xFFF
  5036                           tosh	equ	0xFFE
  5037                           tosl	equ	0xFFD
  5038                           pclatu	equ	0xFFB
  5039                           pclath	equ	0xFFA
  5040                           tblptru	equ	0xFF8
  5041                           tblptrh	equ	0xFF7
  5042                           tblptrl	equ	0xFF6
  5043                           tablat	equ	0xFF5
  5044                           prodh	equ	0xFF4
  5045                           prodl	equ	0xFF3
  5046                           intcon	equ	0xFF2
  5047                           fsr0h	equ	0xFEA
  5048                           fsr0l	equ	0xFE9
  5049                           wreg	equ	0xFE8
  5050                           fsr1h	equ	0xFE2
  5051                           fsr1l	equ	0xFE1
  5052                           fsr2h	equ	0xFDA
  5053                           fsr2l	equ	0xFD9
  5054                           status	equ	0xFD8
  5055                           
  5056 ;; *************** function i2_GLCD_EnableController *****************
  5057 ;; Defined at:
  5058 ;;		line 39 in file "ks0108lib/KS0108-PIC18.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  controller      1    wreg     unsigned char 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  controller      1    0[COMRAM] unsigned char 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5076 ;;Total ram usage:        1 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		i2_GLCD_ReadStatus
  5082 ;;		i2_GLCD_WriteCommand
  5083 ;;		i2_GLCD_WriteData
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text42
  5088  000890                     __ptext42:
  5089                           	opt stack 0
  5090  000890                     i2_GLCD_EnableController:
  5091                           	opt stack 18
  5092                           
  5093                           ;incstack = 0
  5094                           ;i2GLCD_EnableController@controller stored from wreg
  5095  000890  6E01               	movwf	i2GLCD_EnableController@controller,c
  5096                           
  5097                           ;KS0108-PIC18.c: 41: switch(controller){
  5098  000892  D006               	goto	i2l490
  5099  000894  9A80               	bcf	3968,5,c	;volatile
  5100  000896  0012               	return	
  5101  000898  9C80               	bcf	3968,6,c	;volatile
  5102  00089A  0012               	return	
  5103  00089C  9E80               	bcf	3968,7,c	;volatile
  5104                           
  5105                           ;KS0108-PIC18.c: 45: }
  5106  00089E  0012               	return	
  5107  0008A0                     i2l490:
  5108  0008A0  5001               	movf	i2GLCD_EnableController@controller,w,c
  5109                           
  5110                           ; Switch size 1, requested type "space"
  5111                           ; Number of cases is 3, Range of values is 0 to 2
  5112                           ; switch strategies available:
  5113                           ; Name         Instructions Cycles
  5114                           ; simple_byte           10     6 (average)
  5115                           ;	Chosen strategy is simple_byte
  5116  0008A2  0A00               	xorlw	0	; case 0
  5117  0008A4  B4D8               	btfsc	status,2,c
  5118  0008A6  D7F6               	goto	i2l491
  5119  0008A8  0A01               	xorlw	1	; case 1
  5120  0008AA  B4D8               	btfsc	status,2,c
  5121  0008AC  D7F5               	goto	i2l493
  5122  0008AE  0A03               	xorlw	3	; case 2
  5123  0008B0  A4D8               	btfss	status,2,c
  5124  0008B2  0012               	return	
  5125  0008B4  D7F3               	goto	i2l494
  5126  0008B6                     __end_ofi2_GLCD_EnableController:
  5127                           	opt stack 0
  5128                           tosu	equ	0xFFF
  5129                           tosh	equ	0xFFE
  5130                           tosl	equ	0xFFD
  5131                           pclatu	equ	0xFFB
  5132                           pclath	equ	0xFFA
  5133                           tblptru	equ	0xFF8
  5134                           tblptrh	equ	0xFF7
  5135                           tblptrl	equ	0xFF6
  5136                           tablat	equ	0xFF5
  5137                           prodh	equ	0xFF4
  5138                           prodl	equ	0xFF3
  5139                           intcon	equ	0xFF2
  5140                           fsr0h	equ	0xFEA
  5141                           fsr0l	equ	0xFE9
  5142                           wreg	equ	0xFE8
  5143                           fsr1h	equ	0xFE2
  5144                           fsr1l	equ	0xFE1
  5145                           fsr2h	equ	0xFDA
  5146                           fsr2l	equ	0xFD9
  5147                           status	equ	0xFD8
  5148                           
  5149 ;; *************** function i2_GLCD_DisableController *****************
  5150 ;; Defined at:
  5151 ;;		line 50 in file "ks0108lib/KS0108-PIC18.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  controller      1    wreg     unsigned char 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  controller      1    0[COMRAM] unsigned char 
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  1    wreg      void 
  5158 ;; Registers used:
  5159 ;;		wreg, status,2, status,0
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5169 ;;Total ram usage:        1 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		i2_GLCD_ReadStatus
  5175 ;;		i2_GLCD_WriteCommand
  5176 ;;		i2_GLCD_WriteData
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text43
  5181  0008B6                     __ptext43:
  5182                           	opt stack 0
  5183  0008B6                     i2_GLCD_DisableController:
  5184                           	opt stack 18
  5185                           
  5186                           ;incstack = 0
  5187                           ;i2GLCD_DisableController@controller stored from wreg
  5188  0008B6  6E01               	movwf	i2GLCD_DisableController@controller,c
  5189                           
  5190                           ;KS0108-PIC18.c: 52: switch(controller)
  5191  0008B8  D006               	goto	i2l498
  5192  0008BA  8A80               	bsf	3968,5,c	;volatile
  5193  0008BC  0012               	return	
  5194  0008BE  8C80               	bsf	3968,6,c	;volatile
  5195  0008C0  0012               	return	
  5196  0008C2  8E80               	bsf	3968,7,c	;volatile
  5197                           
  5198                           ;KS0108-PIC18.c: 57: }
  5199  0008C4  0012               	return	
  5200  0008C6                     i2l498:
  5201  0008C6  5001               	movf	i2GLCD_DisableController@controller,w,c
  5202                           
  5203                           ; Switch size 1, requested type "space"
  5204                           ; Number of cases is 3, Range of values is 0 to 2
  5205                           ; switch strategies available:
  5206                           ; Name         Instructions Cycles
  5207                           ; simple_byte           10     6 (average)
  5208                           ;	Chosen strategy is simple_byte
  5209  0008C8  0A00               	xorlw	0	; case 0
  5210  0008CA  B4D8               	btfsc	status,2,c
  5211  0008CC  D7F6               	goto	i2l499
  5212  0008CE  0A01               	xorlw	1	; case 1
  5213  0008D0  B4D8               	btfsc	status,2,c
  5214  0008D2  D7F5               	goto	i2l501
  5215  0008D4  0A03               	xorlw	3	; case 2
  5216  0008D6  A4D8               	btfss	status,2,c
  5217  0008D8  0012               	return	
  5218  0008DA  D7F3               	goto	i2l502
  5219  0008DC                     __end_ofi2_GLCD_DisableController:
  5220                           	opt stack 0
  5221                           tosu	equ	0xFFF
  5222                           tosh	equ	0xFFE
  5223                           tosl	equ	0xFFD
  5224                           pclatu	equ	0xFFB
  5225                           pclath	equ	0xFFA
  5226                           tblptru	equ	0xFF8
  5227                           tblptrh	equ	0xFF7
  5228                           tblptrl	equ	0xFF6
  5229                           tablat	equ	0xFF5
  5230                           prodh	equ	0xFF4
  5231                           prodl	equ	0xFF3
  5232                           intcon	equ	0xFF2
  5233                           fsr0h	equ	0xFEA
  5234                           fsr0l	equ	0xFE9
  5235                           wreg	equ	0xFE8
  5236                           fsr1h	equ	0xFE2
  5237                           fsr1l	equ	0xFE1
  5238                           fsr2h	equ	0xFDA
  5239                           fsr2l	equ	0xFD9
  5240                           status	equ	0xFD8
  5241                           
  5242 ;; *************** function i2_GLCD_Delay *****************
  5243 ;; Defined at:
  5244 ;;		line 24 in file "ks0108lib/KS0108-PIC18.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;		None
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;		None
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  1    wreg      void 
  5251 ;; Registers used:
  5252 ;;		None
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5262 ;;Total ram usage:        0 bytes
  5263 ;; Hardware stack levels used:    1
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		i2_GLCD_ReadStatus
  5268 ;;		i2_GLCD_WriteCommand
  5269 ;;		i2_GLCD_WriteData
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           	psect	text44
  5274  0009DA                     __ptext44:
  5275                           	opt stack 0
  5276  0009DA                     i2_GLCD_Delay:
  5277                           	opt stack 18
  5278                           
  5279                           ;KS0108-PIC18.c: 26: __nop();
  5280                           
  5281                           ;incstack = 0
  5282  0009DA  F000               	nop	
  5283  0009DC  0012               	return		;funcret
  5284  0009DE                     __end_ofi2_GLCD_Delay:
  5285                           	opt stack 0
  5286                           tosu	equ	0xFFF
  5287                           tosh	equ	0xFFE
  5288                           tosl	equ	0xFFD
  5289                           pclatu	equ	0xFFB
  5290                           pclath	equ	0xFFA
  5291                           tblptru	equ	0xFF8
  5292                           tblptrh	equ	0xFF7
  5293                           tblptrl	equ	0xFF6
  5294                           tablat	equ	0xFF5
  5295                           prodh	equ	0xFF4
  5296                           prodl	equ	0xFF3
  5297                           intcon	equ	0xFF2
  5298                           fsr0h	equ	0xFEA
  5299                           fsr0l	equ	0xFE9
  5300                           wreg	equ	0xFE8
  5301                           fsr1h	equ	0xFE2
  5302                           fsr1l	equ	0xFE1
  5303                           fsr2h	equ	0xFDA
  5304                           fsr2l	equ	0xFD9
  5305                           status	equ	0xFD8
  5306                           tosu	equ	0xFFF
  5307                           tosh	equ	0xFFE
  5308                           tosl	equ	0xFFD
  5309                           pclatu	equ	0xFFB
  5310                           pclath	equ	0xFFA
  5311                           tblptru	equ	0xFF8
  5312                           tblptrh	equ	0xFF7
  5313                           tblptrl	equ	0xFF6
  5314                           tablat	equ	0xFF5
  5315                           prodh	equ	0xFF4
  5316                           prodl	equ	0xFF3
  5317                           intcon	equ	0xFF2
  5318                           fsr0h	equ	0xFEA
  5319                           fsr0l	equ	0xFE9
  5320                           wreg	equ	0xFE8
  5321                           fsr1h	equ	0xFE2
  5322                           fsr1l	equ	0xFE1
  5323                           fsr2h	equ	0xFDA
  5324                           fsr2l	equ	0xFD9
  5325                           status	equ	0xFD8
  5326                           
  5327                           	psect	text45
  5328  000000                     __ptext45:
  5329                           	opt stack 0
  5330                           tosu	equ	0xFFF
  5331                           tosh	equ	0xFFE
  5332                           tosl	equ	0xFFD
  5333                           pclatu	equ	0xFFB
  5334                           pclath	equ	0xFFA
  5335                           tblptru	equ	0xFF8
  5336                           tblptrh	equ	0xFF7
  5337                           tblptrl	equ	0xFF6
  5338                           tablat	equ	0xFF5
  5339                           prodh	equ	0xFF4
  5340                           prodl	equ	0xFF3
  5341                           intcon	equ	0xFF2
  5342                           fsr0h	equ	0xFEA
  5343                           fsr0l	equ	0xFE9
  5344                           wreg	equ	0xFE8
  5345                           fsr1h	equ	0xFE2
  5346                           fsr1l	equ	0xFE1
  5347                           fsr2h	equ	0xFDA
  5348                           fsr2l	equ	0xFD9
  5349                           status	equ	0xFD8
  5350                           
  5351                           	psect	rparam
  5352  0000                     tosu	equ	0xFFF
  5353                           tosh	equ	0xFFE
  5354                           tosl	equ	0xFFD
  5355                           pclatu	equ	0xFFB
  5356                           pclath	equ	0xFFA
  5357                           tblptru	equ	0xFF8
  5358                           tblptrh	equ	0xFF7
  5359                           tblptrl	equ	0xFF6
  5360                           tablat	equ	0xFF5
  5361                           prodh	equ	0xFF4
  5362                           prodl	equ	0xFF3
  5363                           intcon	equ	0xFF2
  5364                           fsr0h	equ	0xFEA
  5365                           fsr0l	equ	0xFE9
  5366                           wreg	equ	0xFE8
  5367                           fsr1h	equ	0xFE2
  5368                           fsr1l	equ	0xFE1
  5369                           fsr2h	equ	0xFDA
  5370                           fsr2l	equ	0xFD9
  5371                           status	equ	0xFD8
  5372                           
  5373                           	psect	temp
  5374  00003B                     btemp:
  5375                           	opt stack 0
  5376  00003B                     	ds	1
  5377  0000                     int$flags	set	btemp
  5378  0000                     wtemp6	set	btemp+1
  5379                           tosu	equ	0xFFF
  5380                           tosh	equ	0xFFE
  5381                           tosl	equ	0xFFD
  5382                           pclatu	equ	0xFFB
  5383                           pclath	equ	0xFFA
  5384                           tblptru	equ	0xFF8
  5385                           tblptrh	equ	0xFF7
  5386                           tblptrl	equ	0xFF6
  5387                           tablat	equ	0xFF5
  5388                           prodh	equ	0xFF4
  5389                           prodl	equ	0xFF3
  5390                           intcon	equ	0xFF2
  5391                           fsr0h	equ	0xFEA
  5392                           fsr0l	equ	0xFE9
  5393                           wreg	equ	0xFE8
  5394                           fsr1h	equ	0xFE2
  5395                           fsr1l	equ	0xFE1
  5396                           fsr2h	equ	0xFDA
  5397                           fsr2l	equ	0xFD9
  5398                           status	equ	0xFD8


Data Sizes:
    Strings     68
    Constant    481
    Data        3
    BSS         5
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      58
    BANK0           160     16      18
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    GLCD_WriteString@stringToWrite	PTR unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[10]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCB5_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCB5_DefaultInterruptHandler(), 

    IOCB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCB5_DefaultInterruptHandler(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB5_SetInterruptHandler
    _GLCD_WriteData->___awdiv
    _GLCD_GoTo->___awdiv
    _GLCD_WriteCommand->___awdiv
    _GLCD_ReadStatus->_GLCD_DisableController
    _GLCD_ReadStatus->_GLCD_EnableController

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_PIN_MANAGER_IOC
    _PIN_MANAGER_IOC->i2_GLCD_GoTo
    i2_GLCD_WriteChar->i2_GLCD_WriteData
    i2_GLCD_WriteData->i2___awdiv
    i2_GLCD_GoTo->i2_GLCD_WriteCommand
    i2_GLCD_WriteCommand->i2___awdiv
    i2_GLCD_ReadStatus->i2_GLCD_DisableController
    i2_GLCD_ReadStatus->i2_GLCD_EnableController

Critical Paths under _main in BANK0

    _Initialize_Menus->_GLCD_WriteString
    _GLCD_WriteString->_GLCD_WriteChar
    _GLCD_WriteChar->_GLCD_WriteData
    _GLCD_Initalize->_GLCD_WriteCommand
    _GLCD_ClearScreen->_GLCD_GoTo
    _Draw_Arrow->_Clear_Arrow_Column
    _Clear_Arrow_Column->_GLCD_GoTo
    _GLCD_GoTo->_GLCD_WriteCommand

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   50772
                                             15 BANK0      1     1      0
                      _Check_Buttons
                         _Draw_Arrow
                   _GLCD_ClearScreen
                     _GLCD_Initalize
                   _Initialize_Menus
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                   _EPWM1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                             38 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             36 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     196
          _IOCB4_SetInterruptHandler
          _IOCB5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB5_SetInterruptHandler                            2     0      2      98
                                             36 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2      98
                                             36 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Menus                                     0     0      0    8866
                          _GLCD_GoTo
                   _GLCD_WriteString
 ---------------------------------------------------------------------------------
 (2) _GLCD_WriteString                                     2     0      2    3684
                                              5 BANK0      2     0      2
                     _GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (3) _GLCD_WriteChar                                       3     3      0    2989
                                              2 BANK0      3     3      0
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _GLCD_Initalize                                       1     1      0     983
                                              3 BANK0      1     1      0
               _GLCD_InitializePorts
                  _GLCD_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _GLCD_InitializePorts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCD_ClearScreen                                     2     2      0    8205
                                              6 BANK0      2     2      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        0     0      0   16212
                         _Draw_Arrow
 ---------------------------------------------------------------------------------
 (1) _Draw_Arrow                                           0     0      0   16212
                 _Clear_Arrow_Column
               _Clear_Submenu_Arrows
                 _Draw_Submenu_Arrow
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _Draw_Submenu_Arrow                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Clear_Submenu_Arrows                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Clear_Arrow_Column                                   9     9      0    8174
                                              6 BANK0      9     9      0
                          _GLCD_GoTo
                     _GLCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _GLCD_WriteData                                       2     2      0    2856
                                              0 BANK0      2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _GLCD_GoTo                                            3     2      1    5182
                                              3 BANK0      3     2      1
                  _GLCD_WriteCommand
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2605
                                             36 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _GLCD_WriteCommand                                    3     2      1     884
                                              0 BANK0      3     2      1
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
                    _GLCD_ReadStatus
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _GLCD_ReadStatus                                      2     2      0     158
                                             37 COMRAM     2     2      0
                         _GLCD_Delay
             _GLCD_DisableController
              _GLCD_EnableController
 ---------------------------------------------------------------------------------
 (6) _GLCD_EnableController                                1     1      0      31
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_DisableController                               1     1      0      31
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _GLCD_Delay                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                          18    18      0    2099
                                             18 COMRAM    18    18      0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      4     4      0    2099
                                             14 COMRAM     4     4      0
                        i2_GLCD_GoTo
                   i2_GLCD_WriteChar
 ---------------------------------------------------------------------------------
 (10) i2_GLCD_WriteChar                                    3     3      0     828
                                             10 COMRAM     3     3      0
                   i2_GLCD_WriteData
 ---------------------------------------------------------------------------------
 (11) i2_GLCD_WriteData                                    2     2      0     737
                                              8 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (10) i2_GLCD_GoTo                                         3     2      1    1225
                                             11 COMRAM     3     2      1
                i2_GLCD_WriteCommand
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     560
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (11) i2_GLCD_WriteCommand                                 3     2      1     373
                                              8 COMRAM     3     2      1
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
                  i2_GLCD_ReadStatus
                          i2___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (12) i2_GLCD_ReadStatus                                   2     2      0     111
                                              1 COMRAM     2     2      0
                       i2_GLCD_Delay
           i2_GLCD_DisableController
            i2_GLCD_EnableController
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_EnableController                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_DisableController                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_GLCD_Delay                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Draw_Arrow
       _Clear_Arrow_Column
         _GLCD_GoTo
           _GLCD_WriteCommand
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
             _GLCD_ReadStatus
               _GLCD_Delay
               _GLCD_DisableController
               _GLCD_EnableController
             ___awdiv (ARG)
           ___awdiv
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
       _Clear_Submenu_Arrows
       _Draw_Submenu_Arrow
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
   _Draw_Arrow
     _Clear_Arrow_Column
       _GLCD_GoTo
         _GLCD_WriteCommand
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv (ARG)
         ___awdiv
       _GLCD_WriteData
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv
     _Clear_Submenu_Arrows
     _Draw_Submenu_Arrow
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_WriteData
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv
   _GLCD_ClearScreen
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_WriteData
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv
   _GLCD_Initalize
     _GLCD_InitializePorts
     _GLCD_WriteCommand
       _GLCD_Delay
       _GLCD_DisableController
       _GLCD_EnableController
       _GLCD_ReadStatus
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
       ___awdiv (ARG)
   _Initialize_Menus
     _GLCD_GoTo
       _GLCD_WriteCommand
         _GLCD_Delay
         _GLCD_DisableController
         _GLCD_EnableController
         _GLCD_ReadStatus
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
         ___awdiv (ARG)
       ___awdiv
     _GLCD_WriteString
       _GLCD_WriteChar
         _GLCD_WriteData
           _GLCD_Delay
           _GLCD_DisableController
           _GLCD_EnableController
           _GLCD_ReadStatus
             _GLCD_Delay
             _GLCD_DisableController
             _GLCD_EnableController
           ___awdiv
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
       _IOCB5_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR4_Initialize
       _TMR4_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     i2_GLCD_GoTo
       i2_GLCD_WriteCommand
         i2_GLCD_Delay
         i2_GLCD_DisableController
         i2_GLCD_EnableController
         i2_GLCD_ReadStatus
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
         i2___awdiv (ARG)
       i2___awdiv
     i2_GLCD_WriteChar
       i2_GLCD_WriteData
         i2_GLCD_Delay
         i2_GLCD_DisableController
         i2_GLCD_EnableController
         i2_GLCD_ReadStatus
           i2_GLCD_Delay
           i2_GLCD_DisableController
           i2_GLCD_EnableController
         i2___awdiv
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      12       5       11.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      3A       1       61.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4C       6        0.0%
DATA                 0      0      4C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jul 20 10:43:46 2020

              GLCD_WriteCommand@controller 0060                  GLCD_WriteData@dataToWrite 0061  
                          GLCD_Initalize@i 0063                               ___awdiv@sign 002A  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
         GLCD_DisableController@controller 0025         i2GLCD_DisableController@controller 0001  
                          _timer0ReloadVal 002D                 ?_IOCB4_SetInterruptHandler 0025  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l501 0872                                        l502 0876  
                                      l432 0936                                        l442 072E  
                                      l346 06AA                                        l371 0608  
                                      l444 0746                                        l437 018A  
                                      l373 0614                                        l365 05E8  
                                      l454 07D6                                        l375 0618  
                                      l367 05F4                                        l455 07BE  
                                      l561 04F0                                        l449 0546  
                                      l490 0854                                        l562 04E6  
                                      l491 0848                                        l493 084C  
                                      l741 0238                                        l494 0850  
                                      l742 0230                                        l559 04D4  
                                      l745 0258                                        l498 087A  
                                      l746 0262                                        l738 020A  
                                      l499 086E                                        l747 0270  
                                      l739 021A                               __CFG_CPB$OFF 000000  
                                      _PR4 000FA9                               __CFG_CPD$OFF 000000  
                                      tosl 000FFD                                        wreg 000FE8  
              PIN_MANAGER_IOC@currentState 0012                         __size_of_GLCD_GoTo 0086  
                                     l3000 03F6                                       l3102 073E  
                                     l3042 04CC                                       l3028 0536  
                                     l3038 0574                                       l3082 092E  
                                     l3094 0726                                       l2918 06EC  
                                     l2988 0182                                       STR_1 FFF6  
                                     STR_2 FFC5                                       STR_3 FFBA  
                                     STR_4 FFED                                       STR_5 FFDA  
                                     STR_6 FFE4                                       STR_7 FFD0  
                                     u2117 0686                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     _LATD 000F8C                                       _LATE 000F8D  
                                     u1710 0574                                       u1640 023C  
                                     u1810 0752                                       u1680 01B2  
                                     _TMR4 000F87                                       _WPUB 000F5B  
                                     _main 0674                            _TMR0_StartTimer 09CE  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       fsr0l 000FE9  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 003B                                       prodh 000FF4  
          __end_ofi2_GLCD_EnableController 08B6                                       prodl 000FF3  
                                     start 00B4                              __CFG_IESO$OFF 000000  
                            __CFG_MCLRE$ON 000000                        i2_GLCD_WriteCommand 07EC  
                             ___param_bank 000000            __size_of_GLCD_DisableController 0026  
                      __size_of_GLCD_Delay 0004                    __end_of_TMR0_Initialize 06E8  
           ??_TMR0_DefaultInterruptHandler 0001                    __end_of_GLCD_ReadStatus 0900  
           __size_of_OSCILLATOR_Initialize 0012              __end_of_OSCILLATOR_Initialize 09A2  
                                    ?_main 0001                            __end_of___awdiv 027A  
                                    _EEADR 000F74                               ?i2_GLCD_GoTo 000C  
        __end_of_IOCB4_SetInterruptHandler 09C0                                      _T0CON 000FD5  
                          ___awdiv@divisor 0027                                      _T4CON 000F88  
                                    i2l151 0068                                      i2l501 08BE  
                                    i2l149 005E                                      i2l502 08C2  
                                    i2l437 038E                                      i2l449 0640  
                                    i2l490 08A0                                      i2l491 0894  
                                    i2l493 0898                                      i2l741 02BC  
                                    i2l494 089C                                      i2l742 02B4  
                                    i2l745 02DC                                      i2l498 08C6  
                                    i2l746 02E6                                      i2l738 028E  
                                    i2l499 08BA                                      i2l747 02F4  
                                    i2l739 029E                            ___awdiv@counter 0029  
                                    _TMR0H 000FD7                                      _TMR0L 000FD6  
                                    _PORTA 000F80                                      _PORTB 000F81  
                                    _PORTC 000F82                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                               _Draw_Arrow 078A          __size_of_TMR0_SetInterruptHandler 000A  
                            __CFG_WRT0$OFF 000000                            _TMR4_Initialize 097C  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                ?_TMR0_SetInterruptHandler 0025                              __CFG_WRT3$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                __size_of_Clear_Arrow_Column 005E  
                   ??_Clear_Submenu_Arrows 0025                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                       ?i2_GLCD_WriteCommand 0009  
                         __end_of_TMR0_ISR 0844                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                          __end_of_font5x8 FFB9                             __CFG_EBTRB$OFF 000000  
                  __end_of_PIN_MANAGER_IOC 0378                                      _color FFB9  
                                    pclath 000FFA                                      tablat 000FF5  
                   ??_GLCD_InitializePorts 0025                                      status 000FD8  
                                    wtemp6 003C                         __size_ofi2___awdiv 0084  
                          __initialization 0756                               __end_of_main 06B0  
                        __end_of_GLCD_GoTo 01F6                ?_INTERRUPT_InterruptManager 0001  
                __size_of_Initialize_Menus 00B8                        Clear_Arrow_Column@i 006E  
                      Clear_Arrow_Column@j 006D                                     ??_main 006F  
                            __activetblptr 000003                             __CFG_RETEN$OFF 000000  
                    ??i2_GLCD_WriteCommand 000A                    __end_of_TMR0_StartTimer 09D2  
        __size_ofi2_GLCD_DisableController 0026                              ?i2_GLCD_Delay 0001  
                                   _EEADRH 000F75                                     _EEDATA 000F73  
                                   _CCPR1H 000FBD                                     _CCPR1L 000FBC  
                                   _EECON2 000F7E                                     _ANCON0 000F5D  
                                   _ANCON1 000F5C                  ?i2_GLCD_DisableController 0001  
                   _GLCD_DisableController 086A                           ___awdiv@dividend 0025  
                          __CFG_BBSIZ$BB2K 000000                                     i2l2420 07EE  
                                   i2l2440 0460                             __CFG_WDTEN$OFF 000000  
                                   i2l2528 0386                                     i2l2544 0630  
                                   i2l2554 066C                                     _TABLAT 000FF5  
                                   _OSCCON 000FD3                  __size_ofi2_GLCD_WriteChar 0052  
                __size_ofi2_GLCD_WriteData 0068                            _TMR4_StartTimer 09CA  
                         _GLCD_WriteString 07BC                             __CFG_XINST$OFF 000000  
                       _Draw_Submenu_Arrow 09E2                                  ??___awdiv 0029  
                           __CFG_STVREN$ON 000000                           ?_TMR0_Initialize 0001  
                  __end_of_TMR4_Initialize 0990                           ___awdiv@quotient 002B  
                         ?_GLCD_ReadStatus 0001                     __size_of_Check_Buttons 0052  
                      ?_Draw_Submenu_Arrow 0001                             i2___awdiv@sign 0006  
                             __pdataCOMRAM 0038                                ?_Draw_Arrow 0001  
                        __end_ofi2___awdiv 02FE                               __mediumconst FDD8  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
         __size_ofi2_GLCD_EnableController 0026                                     tblptru 000FF8  
                    _GLCD_EnableController 0844                             ??i2_GLCD_Delay 0001  
                             ??_GLCD_Delay 0025   TMR0_SetInterruptHandler@InterruptHandler 0025  
IOCB5_SetInterruptHandler@InterruptHandler 0025  IOCB4_SetInterruptHandler@InterruptHandler 0025  
                         ?_PIN_MANAGER_IOC 0001              __size_of_INTERRUPT_Initialize 0004  
                        _SYSTEM_Initialize 0962                       ??_Draw_Submenu_Arrow 0025  
                               __accesstop 0060                    __end_of__initialization 0780  
            GLCD_WriteString@stringToWrite 0065                         ?_SYSTEM_Initialize 0001  
                            ___rparam_used 000001                            GLCD_WriteChar@i 0063  
                        ?_GLCD_ClearScreen 0001                               i2GLCD_GoTo@i 000E  
                             i2GLCD_GoTo@x 000D                               i2GLCD_GoTo@y 000C  
                        ?_EPWM1_Initialize 0001                             __pcstackCOMRAM 0001  
                       ??_GLCD_ClearScreen 002D                        ??_SYSTEM_Initialize 0029  
                                ?_TMR0_ISR 0001                         ??_EPWM1_Initialize 0025  
                            __end_of_color FFBA               PIN_MANAGER_IOC@previousState 0037  
            _IOCB4_DefaultInterruptHandler 000000                         __end_of_GLCD_Delay 09DA  
                  __size_of_GLCD_Initalize 0022                ??_IOCB4_SetInterruptHandler 0027  
                     __size_ofi2_GLCD_GoTo 007A                           ?_TMR0_StartTimer 0001  
                  __end_of_TMR4_StartTimer 09CE                  __end_of_SYSTEM_Initialize 097C  
                               __pbssBANK0 0070                            __CFG_PLLCFG$OFF 000000  
                            _Check_Buttons 05D0                                 __pnvCOMRAM 002D  
                      __size_of_Draw_Arrow 0032           __end_of_TMR0_SetInterruptHandler 09AC  
                               ??_TMR0_ISR 0001                                    _CCP1CON 000FBB  
                                  _ECCP1AS 000FBF                           _Initialize_Menus 00B8  
                  __size_of_GLCD_WriteChar 0058                    __size_of_GLCD_WriteData 006C  
                        GLCD_ClearScreen@i 0066                          GLCD_ClearScreen@j 0067  
       __size_of_IOCB5_SetInterruptHandler 000A                           ?_TMR4_Initialize 0001  
               ?_IOCB5_SetInterruptHandler 0025                           __CFG_CANMX$PORTB 000000  
                   ?_GLCD_EnableController 0001                                    _REFOCON 000F9A  
                GLCD_ReadStatus@controller 0027                                    _OSCCON2 000FD2  
                                  _TBLPTRH 000FF7                                    _TBLPTRL 000FF6  
                                  _TBLPTRU 000FF8                                    i2u35_48 0832  
                        _GLCD_WriteCommand 06E8                                    _OSCTUNE 000F9B  
                       ?_GLCD_WriteCommand 0060                             ?_Check_Buttons 0001  
                         i2_GLCD_WriteChar 0622                           i2_GLCD_WriteData 045E  
                _IOCB4_SetInterruptHandler 09B6                        ??_GLCD_WriteCommand 0061  
                               _xMenuStart 003A                            __CFG_PWRTEN$OFF 000000  
                                  __Hparam 0000                i2GLCD_WriteChar@charToWrite 000B  
                                  __Lparam 0000                                    ___awdiv 01F6  
                     __end_ofi2_GLCD_Delay 09DE           __end_ofi2_GLCD_DisableController 08DC  
                                  __pcinit 0756                                    __ramtop 0F00  
                                  __ptext0 0674                                    __ptext1 0962  
                                  __ptext2 097C                                    __ptext3 09CA  
                                  __ptext4 06B0                                    __ptext5 09CE  
                                  __ptext6 09A2                                    __ptext7 057C  
                                  __ptext8 09AC                                    __ptext9 09B6  
                                _GLCD_GoTo 0170                                  _T0CONbits 000FD5  
        __end_of_IOCB5_SetInterruptHandler 09B6                                    _font5x8 FDD9  
               __end_of_Clear_Arrow_Column 0524                      _OSCILLATOR_Initialize 0990  
                __end_of_GLCD_WriteCommand 0720                    i2_GLCD_EnableController 0890  
                 __end_of_GLCD_WriteString 07EC                                  _T4CONbits 000F88  
                  ?_GLCD_DisableController 0001                   ??_PIN_MANAGER_Initialize 0027  
                        __CFG_MSSPMSK$MSK7 000000                      GLCD_ReadStatus@status 0026  
               __size_of_SYSTEM_Initialize 001A              __size_of_Clear_Submenu_Arrows 0002  
                         ?_TMR4_StartTimer 0001                       end_of_initialization 0780  
            __size_of_GLCD_InitializePorts 000A                                 GLCD_GoTo@i 0065  
                               GLCD_GoTo@x 0064                                 GLCD_GoTo@y 0063  
              i2GLCD_WriteData@dataToWrite 000A                __end_ofi2_GLCD_WriteCommand 081C  
                           _GLCD_Initalize 0924                   _TMR0_SetInterruptHandler 09A2  
                                _PORTBbits 000F81                                 ?_GLCD_GoTo 0063  
           __end_of_GLCD_DisableController 0890                               ??_Draw_Arrow 002D  
                         __CFG_FOSC$INTIO2 000000                            ??_Check_Buttons 002D  
                                i2___awdiv 027A                         i2___awdiv@dividend 0001  
                       __end_of_Draw_Arrow 07BC               __end_of_INTERRUPT_Initialize 09D6  
                   __end_of_GLCD_Initalize 0946                             _GLCD_WriteChar 0524  
                           _GLCD_WriteData 03F2                      PIN_MANAGER_IOC@result 0011  
                            __pidataCOMRAM 09DE                          __size_of_TMR0_ISR 0028  
                ??i2_GLCD_EnableController 0001                     ?_OSCILLATOR_Initialize 0001  
                __size_of_GLCD_ClearScreen 0036                 __size_of_GLCD_WriteCommand 0038  
                 i2_GLCD_DisableController 08B6                        start_initialization 0756  
                __size_of_EPWM1_Initialize 001C                         i2___awdiv@quotient 0007  
                 __size_of_TMR0_Initialize 0038            __size_of_PIN_MANAGER_Initialize 0054  
                 __size_of_GLCD_ReadStatus 0024                                 ?i2___awdiv 0001  
                 __end_of_Initialize_Menus 0170                __size_of_Draw_Submenu_Arrow 0002  
                    __size_ofi2_GLCD_Delay 0004                   __size_of_PIN_MANAGER_IOC 007A  
                           _currentContext 0070                     __end_of_GLCD_WriteChar 057C  
                   __end_of_GLCD_WriteData 045E                                _CCPTMRSbits 000F99  
                          ?_GLCD_Initalize 0001                   __end_ofi2_GLCD_WriteChar 0674  
                 __end_ofi2_GLCD_WriteData 04C6                    ??_GLCD_EnableController 0025  
                            ??i2_GLCD_GoTo 000D                                ??_GLCD_GoTo 002D  
            _IOCB5_DefaultInterruptHandler 000000                ??_IOCB5_SetInterruptHandler 0027  
                  i2GLCD_ReadStatus@status 0002                                __pbssCOMRAM 0035  
                            __pcstackBANK0 0060                              _SubMenuXStart 0039  
                        i2_GLCD_ReadStatus 0900                              _SubMenuYStart 0038  
                             i2_GLCD_Delay 09DA                         ?i2_GLCD_ReadStatus 0001  
                    _TMR0_InterruptHandler 002F                   __size_of_TMR0_StartTimer 0004  
                      ??i2_GLCD_ReadStatus 0002                     _PIN_MANAGER_Initialize 057C  
                                __pintcode 0008                            ?_GLCD_WriteChar 0001  
                          ?_GLCD_WriteData 0001                              __pmediumconst FDD8  
                                 ?___awdiv 0025               ??_INTERRUPT_InterruptManager 0013  
                                _mainState 0071                                   _ECCP1DEL 000FBE  
                __end_ofi2_GLCD_ReadStatus 0924                          ?_GLCD_WriteString 0065  
                 __size_of_TMR4_Initialize 0014                        __end_ofi2_GLCD_GoTo 03F2  
                              ??i2___awdiv 0005                         ??_GLCD_WriteString 002D  
                     _INTERRUPT_Initialize 09D2                         _Clear_Arrow_Column 04C6  
                _IOCB5_SetInterruptHandler 09AC                          ??_TMR0_Initialize 0027  
                        ??_GLCD_ReadStatus 0026                                   _IOCBbits 000F5A  
                                 _LATEbits 000F8D            GLCD_EnableController@controller 0025  
        i2GLCD_EnableController@controller 0001                                   i2u102_40 02C0  
                                 i2u120_40 0340                                   i2u120_46 0342  
                                 i2u121_40 0350                                   i2u121_46 0352  
                                 i2u115_40 03B2                                   i2u212_47 0304  
                                 i2u117_40 066C                                   i2u118_40 0318  
                                 i2u119_40 0324                                   i2u118_48 031A  
      __size_of_INTERRUPT_InterruptManager 00AC                                   i2u119_48 0326  
               ??_TMR0_SetInterruptHandler 0027                        ?_Clear_Arrow_Column 0001  
                                 _PIR4bits 000FB7                                   _RCONbits 000FD0  
             __end_of_Clear_Submenu_Arrows 09E6                                   _TMR0_ISR 081C  
                                 _PSTR1CON 000F9C                          ??_PIN_MANAGER_IOC 000F  
             __end_of_GLCD_InitializePorts 09CA                           __CFG_SOSCSEL$DIG 000000  
                         _GLCD_ClearScreen 0720                           _EPWM1_Initialize 0946  
                        i2___awdiv@divisor 0003                       ??_Clear_Arrow_Column 0066  
                        i2___awdiv@counter 0005                      ?_INTERRUPT_Initialize 0001  
                               _EECON1bits 000F7F                   __size_of_TMR4_StartTimer 0004  
                                 __Hrparam 0000                                   __Lrparam 0000  
                       __CFG_BOREN$SBORDIS 000000                    ??_OSCILLATOR_Initialize 0025  
               ??i2_GLCD_DisableController 0001                          ??_TMR0_StartTimer 0025  
                         __size_of___awdiv 0084                     _IOCB4_InterruptHandler 0033  
                              i2_GLCD_GoTo 0378                i2GLCD_ReadStatus@controller 0003  
               __size_ofi2_GLCD_ReadStatus 0024               __size_ofi2_GLCD_WriteCommand 0030  
                                 __ptext10 0990                                   __ptext11 09D2  
                                 __ptext20 078A                                   __ptext12 0946  
                                 __ptext21 09E2                                   __ptext13 00B8  
                                 __ptext30 086A                                   __ptext22 09E4  
                                 __ptext14 07BC                                   __ptext31 09D6  
                                 __ptext23 04C6                                   __ptext15 0524  
                                 __ptext40 07EC                                   __ptext24 03F2  
                                 __ptext16 0924                                   __ptext41 0900  
                                 __ptext33 081C                                   __ptext25 0170  
                                 __ptext17 09C0                                   __ptext42 0890  
                                 __ptext34 09E6                                   __ptext26 01F6  
                                 __ptext18 0720                                   __ptext43 08B6  
                                 __ptext35 02FE                                   __ptext27 06E8  
                                 __ptext19 05D0                                   __ptext44 09DA  
                                 __ptext36 0622                                   __ptext28 08DC  
                                 __ptext45 0000                                   __ptext37 045E  
                                 __ptext29 0844                                   __ptext38 0378  
                                 __ptext39 027A                                 _GLCD_Delay 09D6  
                    __end_of_Check_Buttons 0622                          ?_Initialize_Menus 0001  
                        ??_TMR4_Initialize 0025                              __size_of_main 003C  
            i2GLCD_WriteCommand@controller 0009       __end_of_TMR0_DefaultInterruptHandler 09E8  
    __size_of_TMR0_DefaultInterruptHandler 0002               _TMR0_DefaultInterruptHandler 09E6  
                       ??_Initialize_Menus 002D                           ??_GLCD_Initalize 002D  
                                 _screen_x 0036                                   _screen_y 0035  
                                 int$flags 003B         __end_of_INTERRUPT_InterruptManager 00B4  
               _INTERRUPT_InterruptManager 0008                        __CFG_INTOSCSEL$HIGH 000000  
                        ?i2_GLCD_WriteChar 0001                          ?i2_GLCD_WriteData 0001  
           __size_of_GLCD_EnableController 0026              __end_of_GLCD_EnableController 086A  
                               _INTCONbits 000FF2                         ??i2_GLCD_WriteChar 000B  
                       ??i2_GLCD_WriteData 0009                     ??_INTERRUPT_Initialize 0025  
                     _Clear_Submenu_Arrows 09E4                 __end_of_Draw_Submenu_Arrow 09E4  
                                 intlevel2 0000                    ?_PIN_MANAGER_Initialize 0001  
                         ??_GLCD_WriteChar 002D                           ??_GLCD_WriteData 0060  
                     _GLCD_InitializePorts 09C0              ?_TMR0_DefaultInterruptHandler 0001  
                GLCD_WriteChar@charToWrite 0062                          i2GLCD_WriteChar@i 000C  
                 ?i2_GLCD_EnableController 0001                   ??_GLCD_DisableController 0025  
                       __CFG_WDTPS$1048576 000000                          ??_TMR4_StartTimer 0025  
                          _TMR0_Initialize 06B0                            _GLCD_ReadStatus 08DC  
                    ?_Clear_Submenu_Arrows 0001                                ?_GLCD_Delay 0001  
           __end_of_PIN_MANAGER_Initialize 05D0                        __CFG_BORPWR$ZPBORMV 000000  
                   _IOCB5_InterruptHandler 0031                            _PIN_MANAGER_IOC 02FE  
                    ?_GLCD_InitializePorts 0001                   __end_of_GLCD_ClearScreen 0756  
                __size_of_GLCD_WriteString 0030          i2GLCD_WriteCommand@commandToWrite 000B  
          GLCD_WriteCommand@commandToWrite 0062                   __end_of_EPWM1_Initialize 0962  
